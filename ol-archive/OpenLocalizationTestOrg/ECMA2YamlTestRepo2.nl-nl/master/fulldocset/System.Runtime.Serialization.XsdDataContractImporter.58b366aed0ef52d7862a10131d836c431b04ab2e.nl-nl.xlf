<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab88a4badc7d65529132b91581280c15f8f00c28</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.XsdDataContractImporter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f739caa4cd00dbe894c3cc2b12fc01cfe874002</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f250172b1cc0a8ea0f9df420abe79cb27f9dd7d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</source>
          <target state="translated">Kan de transformatie van een reeks XML-schemabestanden (.xsd) in de common language runtime (CLR)-typen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the XsdDataContractImporter if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</source>
          <target state="translated">De XsdDataContractImporter aan te gebruiken als u een webservice die moet samenwerken met een bestaande webservice of gegevenscontracttypen maken van XML-schema's.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XsdDataContractImporter will transform a set of XML schemas and create the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> types that represent the data contract in a selected programming language.</source>
          <target state="translated">XsdDataContractImporter aan te wordt een reeks XML-schema's transformeren en maak de <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> typen die de gegevens vertegenwoordigen in een geselecteerde programmeertaal contract.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create the code, use the classes in the &lt;xref:System.CodeDom&gt; namespace.</source>
          <target state="translated">Gebruik voor het maken van de code de klassen in de &lt;xref:System.CodeDom&gt;naamruimte.&lt;/xref:System.CodeDom&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, use the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</source>
          <target state="translated">Gebruik daarentegen de &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;klasse bij het maken van een webservice die uitgerust met gegevens dat wordt vertegenwoordigd door de CLR-typen en als u wilt exporteren, XML-schema's voor elk gegevenstype om te worden verbruikt door andere webservices.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; transforms a set of CLR types into a set of XML schemas.</source>
          <target state="translated">Dat wil zeggen, &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;een reeks CLR-typen worden omgezet in een reeks XML-schema's.&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To generate CLR types from XML schemas at design time, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Gebruiken voor het genereren van CLR-typen van XML-schema's tijdens ontwerptijd, de <bpt id="p1">[</bpt>ServiceModel metagegevens-hulpprogramma (Svcutil.exe)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generated code from XSD files, use the <ph id="ph1">`/dataContractOnly`</ph> switch of the tool.</source>
          <target state="translated">Code gegenereerd op basis van XSD-bestanden, gebruikt u de <ph id="ph1">`/dataContractOnly`</ph> switch van het hulpprogramma.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the XsdDataContractImporter if you need more control over the process or need to do it programmatically.</source>
          <target state="translated">U kunt ook de XsdDataContractImporter aan te gebruiken als u moet meer controle over het proces of een programma kunt doen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that will be used to generate CLR code.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met de <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> dat wordt gebruikt om CLR-code te genereren.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to add more code into a &lt;xref:System.CodeDom.CodeCompileUnit&gt; that has already been generated.</source>
          <target state="translated">Deze constructor gebruiken om toe te voegen meer code naar een &lt;xref:System.CodeDom.CodeCompileUnit&gt;die al zijn gegenereerd.&lt;/xref:System.CodeDom.CodeCompileUnit&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will be used to store the code.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat wordt gebruikt voor het opslaan van de code.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of de schema's die zijn opgenomen een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kunnen worden omgezet in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema's voor het transformeren van bevat.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed to data contract types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de schema's kunnen worden omgezet naar gegevenscontracttypen; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Een gegevenscontract die zijn betrokken bij de invoer is ongeldig.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the specified set of types contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into CLR types generated into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of de opgegeven reeks typen die zijn opgenomen een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan worden omgezet naar CLR-typen die zijn gegenereerd in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema's voor het transformeren van bevat.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the set of schema types to import.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> van &lt;xref:System.Xml.XmlQualifiedName&gt;die staat voor de reeks schematypen om te importeren.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de schema's kunnen worden omgezet; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeNames</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeNames</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Een gegevenscontract die zijn betrokken bij de invoer is ongeldig.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a specific schema element contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be imported.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of een specifiek schema-element moet worden opgenomen in een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kunnen worden geïmporteerd.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method checks the type and all schema types referenced from it.</source>
          <target state="translated">Deze methode controleert het type en alle schematypen waarnaar wordt verwezen vanuit het.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to import.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te importeren.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A specific <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to check in the set of schemas.</source>
          <target state="translated">Een specifieke <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> controleren in de verzameling schema's.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can be imported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het element kan niet worden geïmporteerd; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Een gegevenscontract die zijn betrokken bij de invoer is ongeldig.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be transformed into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of de schema's die zijn opgenomen een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kunnen worden omgezet in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over de typen die kunnen worden geïmporteerd, <bpt id="p1">[</bpt>typen worden ondersteund door de serialisatiefunctie van het gegevenscontract<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema-verklaringen bevat.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; of &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the names of the schema types that need to be imported from the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een &lt;xref:System.Collections.IList&gt;van &lt;xref:System.Xml.XmlQualifiedName&gt;die Hiermee worden de namen van de schematypen die worden geïmporteerd moeten uit de <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xml.XmlQualifiedName&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schemas can be transformed to data contract types; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de schema's kunnen worden omgezet naar gegevenscontracttypen; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Een gegevenscontract die zijn betrokken bij de invoer is ongeldig.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used for storing the CLR types generated.</source>
          <target state="translated">Haalt een <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt voor het opslaan van de CLR-typen die worden gegenereerd.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this property after importing schemas using the &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; to access the &lt;xref:System.CodeDom.CodeCompileUnit&gt; in which all the generated code is stored.</source>
          <target state="translated">Deze eigenschap niet aanroepen na het importeren van schema's met behulp van de &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;voor toegang tot de &lt;xref:System.CodeDom.CodeCompileUnit&gt;waarin alle de gegenereerde code wordt opgeslagen.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to store the CLR types generated.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt voor het opslaan van de CLR-typen die worden gegenereerd.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the CLR type generated for the schema type with the specified &lt;xref:System.Xml.XmlQualifiedName&gt;.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar de CLR-type voor het schematype met de opgegeven &lt;xref:System.Xml.XmlQualifiedName&gt;.&lt;/xref:System.Xml.XmlQualifiedName&gt; gegenereerd</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to look up the reference to a generated CLR type after calling the &lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt; method.</source>
          <target state="translated">Deze methode gebruiken voor het opzoeken van de verwijzing naar een gegenereerde CLR-type na het aanroepen de &lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;methode.&lt;/xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CodeDom.CodeTypeReference&gt; contains the name of the generated type and can be used to look up the corresponding &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; in the &lt;xref:System.CodeDom.CodeCompileUnit&gt;.</source>
          <target state="translated">Het &lt;xref:System.CodeDom.CodeTypeReference&gt;bevat de naam van de gegenereerde type en kan worden gebruikt voor het opzoeken van de bijbehorende &lt;xref:System.CodeDom.CodeTypeDeclaration&gt;in de &lt;xref:System.CodeDom.CodeCompileUnit&gt;.&lt;/xref:System.CodeDom.CodeCompileUnit&gt; &lt;/xref:System.CodeDom.CodeTypeDeclaration&gt; &lt;/xref:System.CodeDom.CodeTypeReference&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the schema type to look up.</source>
          <target state="translated">De &lt;xref:System.Xml.XmlQualifiedName&gt;die aangeeft welk schematype up opzoeken&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> reference to the CLR type generated for the schema type with the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p2">&lt;/code&gt;</ept> specified.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> verwijzing naar het CLR-type dat is gegenereerd voor het schematype met de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">typeName</ph> <ept id="p2">&lt;/code&gt;</ept> opgegeven.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified XML qualified element and schema element.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gekwalificeerd voor de opgegeven XML-element en schema-element.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema element is needed for data about the type that is specified at the element scope.</source>
          <target state="translated">Het schema-element is nodig voor gegevens over het type dat is opgegeven voor de scope van element.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main example of this is the XSD attribute <ph id="ph1">`nillable`</ph>.</source>
          <target state="translated">De belangrijkste voorbeeld hiervan is het XSD-kenmerk <ph id="ph1">`nillable`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In schema, setting <ph id="ph1">`nillable`</ph> to <ph id="ph2">`true`</ph> is specified on the containing schema element whereas the concept of null is expressed in the CLR type &lt;xref:System.Nullable%601&gt;.</source>
          <target state="translated">In het schema, instelling <ph id="ph1">`nillable`</ph> naar <ph id="ph2">`true`</ph> is opgegeven op het met schema-element dat het concept van null wordt uitgedrukt in het CLR-type &lt;xref:System.Nullable%601&gt;.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</source>
          <target state="translated">Het element is doorgegeven, zodat deze importfunctie kunt van het element op de informatie opzoeken en het juiste typeverwijzing dienovereenkomstig retourneren.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</source>
          <target state="translated">Bij het importeren van WSDL elke parameter afzonderlijk wordt geïmporteerd en de parameter-elementen moeten dus apart worden doorgegeven.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that specifies the XML qualified name of the schema type to look up.</source>
          <target state="translated">Een &lt;xref:System.Xml.XmlQualifiedName&gt;Hiermee worden de XML-gekwalificeerde naam van het schematype up opzoeken&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies an element in an XML schema.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die Hiermee geeft u een element in een XML-schema.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the type that was generated for the specified schema type.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor het type dat is gegenereerd voor het opgegeven schema-type.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that represents the known types generated when generating code for the specified schema type.</source>
          <target state="translated">Retourneert een lijst met <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten die Hiermee geeft u de bekende typen die zijn gegenereerd tijdens het genereren van code voor het opgegeven schema-type.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</source>
          <target state="translated">Bij het genereren van CLR-typen voor schematypen, worden ook bekende typen gegenereerd voor alle afgeleide typen die aanwezig in het schema zijn.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>In many cases, these known types are added using attributes to the generated code.</source>
          <target state="translated">In veel gevallen worden deze bekende typen met behulp van de kenmerken van de gegenereerde code toegevoegd.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, see the &lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt; class.</source>
          <target state="translated">(Zie bijvoorbeeld de &lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;klasse.&lt;/xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>) However, for the top-level type, there needs to be a way to return the set of known types generated.</source>
          <target state="translated">) Echter voor het type op het hoogste niveau moet er een manier om te retourneren van de verzameling bekende typen die zijn gegenereerd.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the &lt;xref:System.CodeDom.CodeTypeReference&gt; for known types that were generated for a specific schema type.</source>
          <target state="translated">Deze methode retourneert de &lt;xref:System.CodeDom.CodeTypeReference&gt;voor bekende typen die zijn gegenereerd voor een specifieke schematype.&lt;/xref:System.CodeDom.CodeTypeReference&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>bekend van gegevenscontracttypen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the schema type to look up known types for.</source>
          <target state="translated">Een &lt;xref:System.Xml.XmlQualifiedName&gt;die staat voor het schematype bekende typen for. opzoeken&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IList%601<ph id="ph2">&amp;gt;</ph> van het type <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Transforms the specified set of XML schemas contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Transformeert de opgegeven reeks XML-schema's die zijn opgenomen in een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations to generate CLR types for.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema-weergaven voor het genereren van CLR-typen voor bevat.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Transforms the specified set of schema types contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into CLR types generated into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Transformeert de opgegeven reeks schematypen is opgenomen in een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar CLR-typen die zijn gegenereerd in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema-verklaringen bevat.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (of &lt;xref:System.Xml.XmlQualifiedName&gt;) that represents the set of schema types to import.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.ICollection%601<ph id="ph2">&amp;gt;</ph> (van &lt;xref:System.Xml.XmlQualifiedName&gt;) die staat voor de reeks schematypen om te importeren.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Transforms the specified schema element in the set of specified XML schemas into a <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns an &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the data contract name for the specified element.</source>
          <target state="translated">Zet het opgegeven schema-element in de set met de opgegeven XML-schema's in een <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en retourneert een &lt;xref:System.Xml.XmlQualifiedName&gt;die staat voor de naam van het contract voor het opgegeven element.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schemas to transform.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema's voor het transformeren van bevat.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the specific schema element to transform.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor het specifieke schema-element te transformeren.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlQualifiedName&gt; that represents the specified element.</source>
          <target state="translated">Een &lt;xref:System.Xml.XmlQualifiedName&gt;die staat voor het opgegeven element.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">element</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Transforms the specified XML schema type contained in an <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> into a <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Transformeert de opgegeven XML-schematype die is opgenomen in een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in een <bpt id="p2">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema representations.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die de schema-verklaringen bevat.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlQualifiedName&gt; that represents a specific schema type to import.</source>
          <target state="translated">Een &lt;xref:System.Xml.XmlQualifiedName&gt;die staat voor een specifieke schematype om te importeren.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schemas</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">typeName</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains settable options for the import operation.</source>
          <target state="translated">Opgehaald of ingesteld een <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die instelbare opties voor de importbewerking bevat.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Runtime.Serialization.ImportOptions&gt; class to customize how the CLR types are generated during schema import.</source>
          <target state="translated">Gebruik de &lt;xref:System.Runtime.Serialization.ImportOptions&gt;klasse om aan te passen hoe de CLR-typen worden gegenereerd tijdens het importeren van het schema.&lt;/xref:System.Runtime.Serialization.ImportOptions&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains settable options.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die bevat opties worden ingesteld.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>