<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28b1e81979ebc849327a7bcfeaf3313aabfc00d2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.HostExecutionContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f47fac0d0b02050e8174984fad909e769ecae517</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad0dfa8499f5dc01731c0f78d674dd7bbbb60fd5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates and propagates the host execution context across threads.</source>
          <target state="translated">Ingekapseld en geeft u de uitvoeringscontext host tussen threads.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HostExecutionContext is part of a larger &lt;xref:System.Threading.ExecutionContext&gt;.</source>
          <target state="translated">De HostExecutionContext maakt deel uit van een grotere &lt;xref:System.Threading.ExecutionContext&gt;.&lt;/xref:System.Threading.ExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host context migrates, or flows, with the execution context.</source>
          <target state="translated">De hostcontext worden gemigreerd of loopt met de uitvoeringscontext.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor creates a host execution context whose &lt;xref:System.Threading.HostExecutionContext.State%2A&gt; property value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">De standaardconstructor maakt de uitvoeringscontext van een host waarvan &lt;xref:System.Threading.HostExecutionContext.State%2A&gt;waarde voor eigenschap <ph id="ph1">`null`</ph>.&lt;/xref:System.Threading.HostExecutionContext.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified state.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met behulp van de opgegeven status.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Threading.HostExecutionContext&gt; is included with the &lt;xref:System.Threading.ExecutionContext&gt;.</source>
          <target state="translated">Het &lt;xref:System.Threading.HostExecutionContext&gt;is opgenomen in de &lt;xref:System.Threading.ExecutionContext&gt;.&lt;/xref:System.Threading.ExecutionContext&gt; &lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`state`</ph> represents a safe handle containing the <ph id="ph2">`IUnknown`</ph> pointer for the host.</source>
          <target state="translated">De <ph id="ph1">`state`</ph> vertegenwoordigt een SafeHandle die de <ph id="ph2">`IUnknown`</ph> aanwijzer voor de host.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An object representing the host execution context state.</source>
          <target state="translated">Een object dat de host context uitvoeringsstatus vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current host execution context.</source>
          <target state="translated">Maakt een kopie van de huidige context van de host-uitvoering.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The copy can be used as the parameter to a &lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt; method call.</source>
          <target state="translated">Het exemplaar kan worden gebruikt als de parameter voor een &lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt;methodeaanroep.&lt;/xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the host context for the current thread.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object als de hostcontext van de voor de huidige thread.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Versies van alle resources die worden gebruikt door het huidige exemplaar van de <bpt id="p1">&lt;xref href="System.Threading.HostExecutionContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Threading.HostExecutionContext&gt;.</source>
          <target state="translated">Roep <ph id="ph1">`Dispose`</ph> wanneer u klaar bent met de &lt;xref:System.Threading.HostExecutionContext&gt;.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Threading.HostExecutionContext&gt; in an unusable state.</source>
          <target state="translated">De <ph id="ph1">`Dispose`</ph> methode blijft de &lt;xref:System.Threading.HostExecutionContext&gt;in een onbruikbare status.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Threading.HostExecutionContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Threading.HostExecutionContext&gt; was occupying.</source>
          <target state="translated">Na het aanroepen <ph id="ph1">`Dispose`</ph>, moet u alle verwijzingen naar vrijgeven de &lt;xref:System.Threading.HostExecutionContext&gt;zodat het geheugen door de garbage collector vrijmaken kunt die de &lt;xref:System.Threading.HostExecutionContext&gt;is bepaald dat zich bevindt.&lt;/xref:System.Threading.HostExecutionContext&gt; &lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie <bpt id="p1">[</bpt>onbeheerde hulpbronnen reinigen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en <bpt id="p2">[</bpt>uitvoering van een methode Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Threading.HostExecutionContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Altijd aanroep <ph id="ph2">`Dispose`</ph> voordat u uw laatste verwijzing naar de &lt;xref:System.Threading.HostExecutionContext&gt;.&lt;/xref:System.Threading.HostExecutionContext&gt; vrijgeven</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Threading.HostExecutionContext&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">Anders wordt de resources die worden gebruikt niet vrij tot het aanroepen van de garbagecollector van de &lt;xref:System.Threading.HostExecutionContext&gt;van het object <ph id="ph1">`Finalize`</ph> methode.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases the unmanaged resources used by the &lt;xref:System.Threading.WaitHandle&gt;, and optionally releases the managed resources.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, heft u de niet-beheerde bronnen worden gebruikt door de &lt;xref:System.Threading.WaitHandle&gt;, en desgewenst de beheerde bronnen vrij.&lt;/xref:System.Threading.WaitHandle&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the &lt;xref:System.Threading.HostExecutionContext.Dispose&gt; method overload and the finalizer.</source>
          <target state="translated">Deze methode wordt aangeroepen door de &lt;xref:System.Threading.HostExecutionContext.Dispose&gt;overbelasting voor methode en de finalizer.&lt;/xref:System.Threading.HostExecutionContext.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Threading.HostExecutionContext.Dispose&gt; invokes this protected method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Threading.HostExecutionContext.Dispose&gt;roept deze beveiligde methode met de <ph id="ph1">`disposing`</ph> parameter ingesteld op <ph id="ph2">`true`</ph>.&lt;/xref:System.Threading.HostExecutionContext.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The finalizer invokes this method with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">De finalizer roept deze methode met <ph id="ph1">`disposing`</ph> ingesteld op <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Threading.HostExecutionContext&gt; references.</source>
          <target state="translated">Wanneer de <ph id="ph1">`disposing`</ph> parameter <ph id="ph2">`true`</ph>, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit &lt;xref:System.Threading.HostExecutionContext&gt;verwijzingen.&lt;/xref:System.Threading.HostExecutionContext&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Deze methode roept de <ph id="ph1">`Dispose`</ph> methode van elk object waarnaar wordt verwezen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called multiple times by other objects.</source>
          <target state="translated">Deze methode kan meerdere keren worden aangeroepen door andere objecten.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed in an earlier call.</source>
          <target state="translated">Als u deze methode overschrijft, zorg ervoor dat u niet verwijzen naar objecten die u eerder hebt verwijderd in een eerdere aanroep.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om alleen niet-beheerde bronnen vrij te geven.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the state of the host execution context.</source>
          <target state="translated">Opgehaald of ingesteld van de status van de uitvoeringscontext host.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The State property value represents a safe handle containing the <ph id="ph1">`IUnknown`</ph> pointer for the host.</source>
          <target state="translated">De waarde van de eigenschap status vertegenwoordigt een SafeHandle die de <ph id="ph1">`IUnknown`</ph> aanwijzer voor de host.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object representing the host execution context state.</source>
          <target state="translated">Een object dat de host context uitvoeringsstatus vertegenwoordigt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>