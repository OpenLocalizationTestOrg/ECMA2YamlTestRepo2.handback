<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0614c66219eaa02b51dfb8c870c69a0a274dcea2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.Formatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">215a10c258c1974b9d52d0724d7a559ed6008839</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebee4c4f4c4d887d6a6c102829c7db864c9f4408</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides base functionality for the common language runtime serialization formatters.</source>
          <target state="translated">Voorziet in basisfunctionaliteit de common language runtime serialisatie formatters.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatter is the <ph id="ph1">`abstract`</ph> base class for all runtime serialization formatters, and provides some helper methods for implementing the &lt;xref:System.Runtime.Serialization.IFormatter&gt; interface.</source>
          <target state="translated">Formatter is de <ph id="ph1">`abstract`</ph> basisklasse voor alle runtime serialisatie formatters en biedt een aantal methoden voor het implementeren van de &lt;xref:System.Runtime.Serialization.IFormatter&gt;interface.&lt;/xref:System.Runtime.Serialization.IFormatter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Formatter also manages queuing objects for serialization and generating IDs on a per-object basis.</source>
          <target state="translated">De Formatter beheert ook queuing-objecten voor serialisatie en genereren-id's op basis van de per-object.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a &lt;xref:System.Collections.Queue&gt; for objects to serialize and a &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; to generate IDs for them.</source>
          <target state="translated">Maakt een &lt;xref:System.Collections.Queue&gt;voor objecten te serialiseren en een &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;voor het genereren van id's voor hen.&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt; &lt;/xref:System.Collections.Queue&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, opgehaald of ingesteld de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt met de huidige indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; performs lookups for types from the type names passed during deserialization.</source>
          <target state="translated">De &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;zoekacties uitvoert voor typen uit de typenamen van het doorgegeven tijdens de deserialisatie.&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no &lt;xref:System.Runtime.Serialization.SerializationBinder&gt; is set, a default is used.</source>
          <target state="translated">Als er geen &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;is ingesteld, wordt standaard gebruikt.&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt met de huidige indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, opgehaald of ingesteld de &lt;xref:System.Runtime.Serialization.StreamingContext&gt;gebruikt voor de huidige serialisatie.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; is an indication of either the source of the bits being deserialized or the destination of the bits being serialized.</source>
          <target state="translated">De &lt;xref:System.Runtime.Serialization.StreamingContext&gt;is een indicatie van ofwel de bron van de bits wordt gedeserialiseerd of de bestemming van de bits worden geserialiseerd.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>It has no impact on default serialization, but is passed as an argument to &lt;xref:System.Runtime.Serialization.ISerializable&gt; and &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.</source>
          <target state="translated">Het heeft geen invloed op de standaard serialisatie, maar als een argument wordt doorgegeven aan &lt;xref:System.Runtime.Serialization.ISerializable&gt;en &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for the current serialization.</source>
          <target state="translated">De &lt;xref:System.Runtime.Serialization.StreamingContext&gt;gebruikt voor de huidige serialisatie.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, deserializes the stream attached to the formatter when it was created, creating a graph of objects identical to the graph originally serialized into that stream.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, deserializes de stroom gekoppeld aan de formatter tijdens het maken, een grafiek van objecten identiek is aan de grafiek die oorspronkelijk is geserialiseerd in deze stroom maken.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The stream to deserialize.</source>
          <target state="translated">De stroom te deserialiseren.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph of objects.</source>
          <target state="translated">Het bovenste object van het gedeserialiseerde graph-objecten.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns the next object to serialize, from the formatter's internal work queue.</source>
          <target state="translated">Retourneert de volgende object te serialiseren uit de indelingsfunctie interne wachtrij.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are returned in a first in first out order based on how they were passed to &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.</source>
          <target state="translated">Objecten worden in een eerste eerst uit de volgorde op basis van hoe ze zijn doorgegeven aan &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;.&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt; geretourneerd</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ID of the object is put into the <ph id="ph1">`objID`</ph> parameter and the object is returned from the function.</source>
          <target state="translated">De ID van het object wordt geplaatst in de <ph id="ph1">`objID`</ph> parameter en het object wordt geretourneerd vanaf de functie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The ID assigned to the current object during serialization.</source>
          <target state="translated">De ID die is toegewezen aan het huidige object tijdens de serialisatie.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The next object to serialize.</source>
          <target state="translated">De volgende object te serialiseren.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The next object retrieved from the work queue did not have an assigned ID.</source>
          <target state="translated">De volgende object opgehaald uit de wachtrij heeft geen id toegewezen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Contains the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">Bevat de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ObjectIDGenerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt met de huidige indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt; maintains a list of the objects that have been identified and the IDs that they were given.</source>
          <target state="translated">De &lt;xref:System.Runtime.Serialization.ObjectIDGenerator&gt;houdt een lijst van de objecten die zijn geïdentificeerd en de id's die ze gekregen.&lt;/xref:System.Runtime.Serialization.ObjectIDGenerator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Contains a <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the objects left to serialize.</source>
          <target state="translated">Bevat een <bpt id="p1">&lt;xref href="System.Collections.Queue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van links de objecten te serialiseren.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects scheduled for serialization with the &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt; method are pushed on the queue.</source>
          <target state="translated">Objecten die zijn gepland voor de serialisatie met de &lt;xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;methode in de wachtrij worden gepusht.&lt;/xref:System.Runtime.Serialization.Formatter.Schedule%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Moet worden toegevoegd.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Schedules an object for later serialization.</source>
          <target state="translated">Hiermee plant u een object voor latere serialisatie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schedule obtains an ID for the object and puts it on the queue for later serialization if this is a new object ID.</source>
          <target state="translated">Planning verkrijgt van een ID voor het object en plaatst deze op de wachtrij voor latere serialisatie als dit een nieuw object-ID.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schedule is a work queue of objects to serialize, and is held inside the formatter.</source>
          <target state="translated">De planning is een wachtrij van objecten te serialiseren, en binnen de indelingsfunctie wordt bewaard.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is already on the work queue, it will not be added a second time, but an exception will not be thrown either.</source>
          <target state="translated">Als het object al in de wachtrij is, wordt deze niet een tweede keer worden toegevoegd, maar een uitzondering niet gegenereerd ofwel.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object to schedule for serialization.</source>
          <target state="translated">Het object om te plannen voor serialisatie.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The object ID assigned to the object.</source>
          <target state="translated">De object-ID is toegewezen aan het object.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serializes the graph of objects with the specified root to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, serialiseert de grafiek met de opgegeven hoofdmap naar de stroom is al gekoppeld aan de formatter-objecten.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The stream to which the objects are serialized.</source>
          <target state="translated">De stroom waarnaar de objecten worden geserialiseerd.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object at the root of the graph to serialize.</source>
          <target state="translated">Het object in de hoofdmap van de grafiek te serialiseren.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, opgehaald of ingesteld de <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt met de huidige indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Runtime.Serialization.SurrogateSelector&gt; to look up implementations of &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; that control the serialization of a particular type.</source>
          <target state="translated">Gebruik de &lt;xref:System.Runtime.Serialization.SurrogateSelector&gt;Opzoeken implementaties van &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;die bepalen de serialisatie van een bepaald type.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.SurrogateSelector&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an object type has a matching surrogate, then serialization and deserialization are handed off to the surrogate even if the type implements the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">Als een objecttype dat u een overeenkomende vervanging heeft, wordt de serialisatie en deserialisatie worden doorgegeven aan het vervangende item zelfs als het type implementeert de &lt;xref:System.Runtime.Serialization.ISerializable&gt;interface.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used with the current formatter.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruikt met de huidige indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an array to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een matrix naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The array to write.</source>
          <target state="translated">De matrix te schrijven.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of the array.</source>
          <target state="translated">De naam van de matrix.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type of elements that the array holds.</source>
          <target state="translated">Het type van de elementen die de matrix bevat.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Boolean value to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een Boolean-waarde naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 8-bits geheel getal zonder teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a Unicode character to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een Unicode-teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.DateTime&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een &lt;xref:System.DateTime&gt;waarde naar de stroom is al gekoppeld aan de indelingsfunctie.&lt;/xref:System.DateTime&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.Decimal&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een &lt;xref:System.Decimal&gt;waarde naar de stroom is al gekoppeld aan de indelingsfunctie.&lt;/xref:System.Decimal&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a double-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een kommagetal met dubbele precisie naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 16-bits geheel getal met teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit signed integer to the stream.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 32-bits geheel getal met teken naar de stroom.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit signed integer to the stream.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 64-bits geheel getal met teken naar de stroom.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Inspects the type of data received, and calls the appropriate <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method to perform the write to the stream already attached to the formatter.</source>
          <target state="translated">Het type gegevens ontvangen inspecteert en roept de juiste <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> het schrijven naar de stroom is al gekoppeld aan de indelingsfunctie uitvoeren.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this method properly, all the <ph id="ph1">`Write`</ph> methods (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; method, &lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; method, and so on) should have the appropriate functionality.</source>
          <target state="translated">Met deze methode naar behoren alle de <ph id="ph1">`Write`</ph> methoden (&lt;xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt; methode &lt;xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt;methode &lt;xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt;methode, enzovoort) moeten de juiste functionaliteit hebben.&lt;/xref:System.Runtime.Serialization.Formatter.WriteByte%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteBoolean%2A&gt; &lt;/xref:System.Runtime.Serialization.Formatter.WriteArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the member to serialize.</source>
          <target state="translated">De naam van het lid te serialiseren.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The object to write to the stream attached to the formatter.</source>
          <target state="translated">Het object te schrijven naar de stroom die is gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an object reference to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een objectverwijzing naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schedules the object with the graph walker to handle the work.</source>
          <target state="translated">Hiermee plant u het object met de grafiek walker voor het afhandelen van het werk.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The object reference to write.</source>
          <target state="translated">De objectverwijzing schrijven.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The type of object the reference points to.</source>
          <target state="translated">Het type van de referentie verwijst.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes an 8-bit signed integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 8-bits geheel getal met teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a single-precision floating-point number to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een kommagetal met enkele precisie naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a &lt;xref:System.TimeSpan&gt; value to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een &lt;xref:System.TimeSpan&gt;waarde naar de stroom is al gekoppeld aan de indelingsfunctie.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 16-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 16-bits geheel getal zonder teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 32-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 32-bits geheel getal zonder teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a 64-bit unsigned integer to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een 64-bits geheel getal zonder teken naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">De waarde om te schrijven.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a value of the given type to the stream already attached to the formatter.</source>
          <target state="translated">Wanneer in een afgeleide klasse genegeerd, schrijft een waarde van het opgegeven type naar de stroom is al gekoppeld aan de indelingsfunctie.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The object representing the value type.</source>
          <target state="translated">Het object dat het waardetype vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the value type.</source>
          <target state="translated">De &lt;xref:System.Type&gt;van het waardetype.&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>