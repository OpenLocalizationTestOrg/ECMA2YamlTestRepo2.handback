<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2de9fc820be99c670d7619152777dcdaaee6876a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.ArrayList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcb4fd43493c7a7cd56b49098b811c29b8a9d010</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">764825ee98e69f44c09e869abcec65ccab26e908</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface using an array whose size is dynamically increased as required.</source>
          <target state="translated">Implementeert de &lt;xref:System.Collections.IList&gt;interface gebruik van een matrix die dynamisch wordt vergroot zoals wordt vereist.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated">Om te bladeren naar de broncode van .NET Framework voor dit type, Zie de <bpt id="p1">[</bpt>Verwijzingsbron<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; Zie om weer te geven de broncode van .NET Framework voor dit type, de <bpt id="p1">[</bpt>Verwijzingsbron<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/arraylist.cs#3e3f6715773d6643)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">Blader door de broncode online, downloaden de verwijzing voor offline te bekijken en doorloop de bronnen (met inbegrip van patches en updates) tijdens de foutopsporing; Zie <bpt id="p1">[</bpt>instructies<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ArrayList class is designed to hold heterogeneous collections of objects.</source>
          <target state="translated">De klasse ArrayList is ontworpen voor heterogene verzamelingen van objecten bevatten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it does not always offer the best performance.</source>
          <target state="translated">Echter, biedt dit niet altijd de beste prestaties.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, we recommend the following:      -   For a heterogeneous collection of objects, use the <ph id="ph1">`List&lt;Object&gt;`</ph> (in C#) or <ph id="ph2">`List(Of Object)`</ph> (in Visual Basic) type.</source>
          <target state="translated">In plaats daarvan wordt aangeraden het volgende: - voor een heterogene verzameling objecten, gebruik de <ph id="ph1">`List&lt;Object&gt;`</ph> (in C#) of <ph id="ph2">`List(Of Object)`</ph> typen (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a homogeneous collection of objects, use the &lt;xref:System.Collections.Generic.List%601&gt; class.</source>
          <target state="translated">-Voor een homogene verzameling van objecten, gebruikt u de &lt;xref:System.Collections.Generic.List%601&gt;klasse.&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the "Performance Considerations" section in the &lt;xref:System.Collections.Generic.List%601&gt; reference topic for a discussion of the relative performance of these classes.</source>
          <target state="translated">Zie de sectie 'Prestatieoverwegingen' in de &lt;xref:System.Collections.Generic.List%601&gt;naslagonderwerp voor een beschrijving van de relatieve prestaties van deze klassen.&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ArrayList is not guaranteed to be sorted.</source>
          <target state="translated">De ArrayList kan niet worden gegarandeerd moet worden gesorteerd.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must sort the ArrayList by calling its &lt;xref:System.Collections.ArrayList.Sort%2A&gt; method prior to performing operations (such as &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) that require the ArrayList to be sorted.</source>
          <target state="translated">U moet de ArrayList sorteren door het aanroepen van de &lt;xref:System.Collections.ArrayList.Sort%2A&gt;methode voor het uitvoeren van bewerkingen (zoals &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;) waarvoor de ArrayList moet worden gesorteerd.&lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt; &lt;/xref:System.Collections.ArrayList.Sort%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain a collection that is automatically sorted as new elements are added, you can use the &lt;xref:System.Collections.Generic.SortedSet%601&gt; class.</source>
          <target state="translated">Om te blijven van een verzameling die automatisch worden gesorteerd als nieuwe elementen worden toegevoegd, kunt u de &lt;xref:System.Collections.Generic.SortedSet%601&gt;klasse.&lt;/xref:System.Collections.Generic.SortedSet%601&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of an ArrayList is the number of elements the ArrayList can hold.</source>
          <target state="translated">De capaciteit van een ArrayList is het aantal elementen die de ArrayList kan bevatten.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to an ArrayList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Wanneer elementen worden toegevoegd aan een ArrayList, de capaciteit automatisch wordt verhoogd door Hertoewijzing zoals wordt vereist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">De capaciteit kan worden verlaagd door het aanroepen van &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;of door de &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;eigenschap expliciet.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For very large ArrayList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">Voor zeer grote ArrayList objecten, verhoogt u de maximale capaciteit naar 2 miljard elementen op een 64-bits systeem door het instellen van de <ph id="ph1">`enabled`</ph> kenmerk van het configuratie-element moet <ph id="ph2">`true`</ph> in de runtime omgeving.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">Elementen in deze verzameling zijn toegankelijk via een geheel getal-index.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">Indexen in deze verzameling zijn gebaseerd op nul.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ArrayList collection accepts <ph id="ph1">`null`</ph> as a valid value.</source>
          <target state="translated">De verzameling ArrayList accepteert <ph id="ph1">`null`</ph> als een geldige waarde.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also allows duplicate elements.</source>
          <target state="translated">Kunt u ook dubbele elementen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using multidimensional arrays as elements in an ArrayList collection is not supported.</source>
          <target state="translated">Multidimensionale matrices met als elementen in een verzameling ArrayList wordt niet ondersteund.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the default initial capacity.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse die leeg is en is de initiële standaardcapaciteit.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">De capaciteit van een &lt;xref:System.Collections.ArrayList&gt;is het aantal elementen die de &lt;xref:System.Collections.ArrayList&gt;kan bevatten.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wanneer elementen worden toegevoegd aan een &lt;xref:System.Collections.ArrayList&gt;, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; uitvoeren</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Deze constructor is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse die bevat elementen die zijn gekopieerd uit de opgegeven verzameling en met de dezelfde begincapaciteit als het aantal elementen die zijn gekopieerd.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">De capaciteit van een &lt;xref:System.Collections.ArrayList&gt;is het aantal elementen die de &lt;xref:System.Collections.ArrayList&gt;kan bevatten.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wanneer elementen worden toegevoegd aan een &lt;xref:System.Collections.ArrayList&gt;, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; uitvoeren</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied onto the &lt;xref:System.Collections.ArrayList&gt; in the same order they are read by the &lt;xref:System.Collections.IEnumerator&gt; of the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd naar de &lt;xref:System.Collections.ArrayList&gt;in dezelfde volgorde als die ze worden gelezen door de &lt;xref:System.Collections.IEnumerator&gt;van de &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`c`</ph>.</source>
          <target state="translated">Deze constructor is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is het aantal elementen in <ph id="ph3">`c`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements are copied to the new list.</source>
          <target state="translated">De &lt;xref:System.Collections.ICollection&gt;waarvan de elementen worden gekopieerd naar de nieuwe lijst.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty and has the specified initial capacity.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse die is leeg en heeft de opgegeven initiële capaciteit.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity of an &lt;xref:System.Collections.ArrayList&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can hold.</source>
          <target state="translated">De capaciteit van een &lt;xref:System.Collections.ArrayList&gt;is het aantal elementen die de &lt;xref:System.Collections.ArrayList&gt;kan bevatten.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>As elements are added to an &lt;xref:System.Collections.ArrayList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Wanneer elementen worden toegevoegd aan een &lt;xref:System.Collections.ArrayList&gt;, de capaciteit automatisch verhoogd zoals wordt vereist door het opnieuw toewijzen van de interne matrix.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Als de grootte van de verzameling kan worden geschat, voorkomen geven de begincapaciteit moet een aantal formaatwijzigingen bij het toevoegen van elementen in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; uitvoeren</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">Deze constructor is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The number of elements that the new list can initially store.</source>
          <target state="translated">Het aantal elementen dat de nieuwe lijst kan in eerste instantie worden opgeslagen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper for a specific &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">Maakt een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper voor een specifieke &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adapter does not copy the contents of &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">Adapter kopieert de inhoud van &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt; geen</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it only creates an &lt;xref:System.Collections.ArrayList&gt; wrapper around &lt;xref:System.Collections.IList&gt;; therefore, changes to the &lt;xref:System.Collections.IList&gt; also affect the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">In plaats daarvan maakt het alleen een &lt;xref:System.Collections.ArrayList&gt;wrapper rond &lt;xref:System.Collections.IList&gt;; daarom wijzigingen aan de &lt;xref:System.Collections.IList&gt;ook van invloed op de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; class provides generic &lt;xref:System.Collections.ArrayList.Reverse%2A&gt;, &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt; and &lt;xref:System.Collections.ArrayList.Sort%2A&gt; methods.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;klasse biedt algemene &lt;xref:System.Collections.ArrayList.Reverse%2A&gt;, &lt;xref:System.Collections.ArrayList.BinarySearch%2A&gt;en &lt;xref:System.Collections.ArrayList.Sort%2A&gt;methoden.&lt;/xref:System.Collections.ArrayList.Sort%2A&gt; &lt;/xref:System.Collections.ArrayList.BinarySearch%2A&gt; &lt;/xref:System.Collections.ArrayList.Reverse%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wrapper can be a means to use those methods on &lt;xref:System.Collections.IList&gt;; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">Deze wrapper mag een manier om te gebruiken van deze methoden op &lt;xref:System.Collections.IList&gt;; het uitvoeren van deze algemene bewerkingen via de wrapper mogelijk wel minder efficiënt dan bewerkingen rechtstreeks op de &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt; toegepast&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Compatibility    In the .NET Framework version 1.0 and 1.1, calling the &lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt; method overload on the &lt;xref:System.Collections.ArrayList&gt; wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">Versie compatibiliteit In de .NET Framework versie 1.0 en 1.1, aanroepen van de &lt;xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;overbelasting van de methode op de &lt;xref:System.Collections.ArrayList&gt;wrapper een enumerator die het tweede argument behandeld als een bovengrens in plaats van een aantal geretourneerd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">In de <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> het tweede argument correct wordt behandeld als een aantal.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">De &lt;xref:System.Collections.IList&gt;laten teruglopen.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper rond de &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Adds an object to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een object toegevoegd aan het einde van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Als &lt;xref:System.Collections.ArrayList.Count%2A&gt;al gelijk is aan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, wordt de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;wordt verhoogd met automatisch opnieuw toewijzen van de interne matrix en de bestaande elementen zijn gekopieerd naar de nieuwe matrix voordat het nieuwe element is toegevoegd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; is less than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(1) operation.</source>
          <target state="translated">Als &lt;xref:System.Collections.ArrayList.Count%2A&gt;is minder dan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, deze methode is een bewerking O(1).&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Als de capaciteit worden verhoogd moet om ruimte is voor het nieuwe element, deze methode wordt een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;worden toegevoegd aan het einde van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p2">&lt;/code&gt;</ept> has been added.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> index waarop de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p2">&lt;/code&gt;</ept> is toegevoegd.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Adds the elements of an &lt;xref:System.Collections.ICollection&gt; to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voegt de elementen van een &lt;xref:System.Collections.ICollection&gt;aan het einde van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De volgorde van de elementen in de &lt;xref:System.Collections.ICollection&gt;blijft behouden in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Als de nieuwe &lt;xref:System.Collections.ArrayList.Count%2A&gt;(de huidige &lt;xref:System.Collections.ArrayList.Count%2A&gt;plus de grootte van de verzameling) is groter dan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, wordt de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;wordt verhoogd met automatisch opnieuw toewijzen van de interne matrix zodat de nieuwe onderdelen en de bestaande elementen zijn gekopieerd naar de nieuwe matrix voordat de nieuwe elementen worden toegevoegd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; can accommodate the new elements without increasing the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements to be added.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;aankan nieuwe elementen zonder toename van de &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, deze methode is een O (<ph id="ph1">`n`</ph>) bewerking, waarbij <ph id="ph2">`n`</ph> is het aantal elementen moet worden toegevoegd.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the capacity needs to be increased to accommodate the new elements, this method becomes an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Als de capaciteit worden verhoogd moet om ruimte is voor de nieuwe elementen, deze methode wordt een O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-bewerking, waarbij <ph id="ph4">`n`</ph> is het aantal elementen moet worden toegevoegd en <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be added to the end of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Collections.ICollection&gt;waarvan de elementen moeten worden toegevoegd aan het einde van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De verzameling zelf kan niet worden <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, maar deze kan elementen bevatten die zijn <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the default comparer and returns the zero-based index of the element.</source>
          <target state="translated">Zoekt u de volledige gesorteerd <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een element met de standaardvergelijkingsfunctie en retourneert de op nul gebaseerde index van het element.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter and each element of the &lt;xref:System.Collections.ArrayList&gt; must implement the &lt;xref:System.IComparable&gt; interface, which is used for comparisons.</source>
          <target state="translated">De <ph id="ph1">`value`</ph> parameter en elk element van de &lt;xref:System.Collections.ArrayList&gt;moet worden geïmplementeerd de &lt;xref:System.IComparable&gt;interface die wordt gebruikt voor vergelijkingen.&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">De elementen van de &lt;xref:System.Collections.ArrayList&gt;al moeten worden gesorteerd in oplopende waarde volgens de sorteervolgorde gedefinieerd door de &lt;xref:System.IComparable&gt;implementatie; anders wordt het resultaat is mogelijk onjuist.&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">Vergelijken <ph id="ph1">`null`</ph> met elk type is toegestaan en genereert een uitzondering opgetreden bij het gebruik van &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Als u sorteert, <ph id="ph1">`null`</ph> wordt beschouwd als minder dan geen andere objecten.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;bevat meer dan een element met dezelfde waarde, de methode retourneert alleen een van de incidenten en het mogelijk een van de instanties, niet noodzakelijkerwijs het eerste beheerpunt retourneren.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;niet de opgegeven waarde bevat de methode retourneert een negatief geheel getal.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">U kunt de bewerking bitsgewijze aanvulling (~) toepassen op deze-negatief geheel getal ophalen van de index van het eerste element zijn dat groter is dan de waarde van de zoekopdracht.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Bij het invoegen van de waarde in de &lt;xref:System.Collections.ArrayList&gt;, deze index moet worden gebruikt als de invoegpositie voor het onderhouden van de sorteervolgorde.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (log <ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">De &lt;xref:System.Object&gt;vinden.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">De op nul gebaseerde index van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> in de gesorteerde <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>als <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept> is gevonden, anders wordt een negatief getal, namelijk de bitsgewijze aanvulling van de index van het volgende element die groter is dan <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> of, als er geen groter element, het bitsgewijze complement van &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt; is</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Neither <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">Noch <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> noch de elementen van <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> implementeren de &lt;xref:System.IComparable&gt;interface.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is niet van hetzelfde type als de elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Searches the entire sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Zoekt u de volledige gesorteerd <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een element met de opgegeven vergelijkingsfunctie en retourneert de op nul gebaseerde index van het element.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">De vergelijkingsfunctie aanpassen hoe de elementen worden vergeleken.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">U kunt bijvoorbeeld een &lt;xref:System.Collections.CaseInsensitiveComparer&gt;-exemplaar, zoals de vergelijkingsfunctie voor niet-hoofdlettergevoelige tekenreeks zoekopdrachten uit te voeren.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">Als <ph id="ph1">`comparer`</ph> is opgegeven, de elementen van de &lt;xref:System.Collections.ArrayList&gt;worden vergeleken met de opgegeven waarde met behulp van de opgegeven &lt;xref:System.Collections.IComparer&gt;uitvoering.&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">De elementen van de &lt;xref:System.Collections.ArrayList&gt;al moeten worden gesorteerd in oplopende waarde volgens de sorteervolgorde gedefinieerd door <ph id="ph1">`comparer`</ph>; anders wordt het resultaat is mogelijk onjuist.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">Als <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, de vergelijking wordt gedaan met behulp van de &lt;xref:System.IComparable&gt;implementatie geboden door het element zelf of de opgegeven waarde.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">De elementen van de &lt;xref:System.Collections.ArrayList&gt;al moeten worden gesorteerd in oplopende waarde volgens de sorteervolgorde gedefinieerd door de &lt;xref:System.IComparable&gt;implementatie; anders wordt het resultaat is mogelijk onjuist.&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">Vergelijken <ph id="ph1">`null`</ph> met elk type is toegestaan en genereert een uitzondering opgetreden bij het gebruik van &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Als u sorteert, <ph id="ph1">`null`</ph> wordt beschouwd als minder dan geen andere objecten.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;bevat meer dan een element met dezelfde waarde, de methode retourneert alleen een van de incidenten en het mogelijk een van de instanties, niet noodzakelijkerwijs het eerste beheerpunt retourneren.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;niet de opgegeven waarde bevat de methode retourneert een negatief geheel getal.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">U kunt de bewerking bitsgewijze aanvulling (~) toepassen op deze-negatief geheel getal ophalen van de index van het eerste element zijn dat groter is dan de waarde van de zoekopdracht.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Bij het invoegen van de waarde in de &lt;xref:System.Collections.ArrayList&gt;, deze index moet worden gebruikt als de invoegpositie voor het onderhouden van de sorteervolgorde.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (log <ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">De &lt;xref:System.Object&gt;vinden.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">De &lt;xref:System.Collections.IComparer&gt;implementatie moet worden gebruikt bij het vergelijken van elementen.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- of - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruiken de standaardvergelijkingsfunctie die de &lt;xref:System.IComparable&gt;uitvoering van elk element.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">De op nul gebaseerde index van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> in de gesorteerde <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>als <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept> is gevonden, anders wordt een negatief getal, namelijk de bitsgewijze aanvulling van de index van het volgende element die groter is dan <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> of, als er geen groter element, het bitsgewijze complement van &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt; is</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en geen van beide <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> noch de elementen van <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> implementeren de <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is niet van hetzelfde type als de elementen van de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Searches a range of elements in the sorted <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an element using the specified comparer and returns the zero-based index of the element.</source>
          <target state="translated">Zoekt u een bereik van elementen in de gesorteerde <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een element met de opgegeven vergelijkingsfunctie en retourneert de op nul gebaseerde index van het element.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The comparer customizes how the elements are compared.</source>
          <target state="translated">De vergelijkingsfunctie aanpassen hoe de elementen worden vergeleken.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use a &lt;xref:System.Collections.CaseInsensitiveComparer&gt; instance as the comparer to perform case-insensitive string searches.</source>
          <target state="translated">U kunt bijvoorbeeld een &lt;xref:System.Collections.CaseInsensitiveComparer&gt;-exemplaar, zoals de vergelijkingsfunctie voor niet-hoofdlettergevoelige tekenreeks zoekopdrachten uit te voeren.&lt;/xref:System.Collections.CaseInsensitiveComparer&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`comparer`</ph> is provided, the elements of the &lt;xref:System.Collections.ArrayList&gt; are compared to the specified value using the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">Als <ph id="ph1">`comparer`</ph> is opgegeven, de elementen van de &lt;xref:System.Collections.ArrayList&gt;worden vergeleken met de opgegeven waarde met behulp van de opgegeven &lt;xref:System.Collections.IComparer&gt;uitvoering.&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by <ph id="ph1">`comparer`</ph>; otherwise, the result might be incorrect.</source>
          <target state="translated">De elementen van de &lt;xref:System.Collections.ArrayList&gt;al moeten worden gesorteerd in oplopende waarde volgens de sorteervolgorde gedefinieerd door <ph id="ph1">`comparer`</ph>; anders wordt het resultaat is mogelijk onjuist.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, the comparison is done using the &lt;xref:System.IComparable&gt; implementation provided by the element itself or by the specified value.</source>
          <target state="translated">Als <ph id="ph1">`comparer`</ph> is <ph id="ph2">`null`</ph>, de vergelijking wordt gedaan met behulp van de &lt;xref:System.IComparable&gt;implementatie geboden door het element zelf of de opgegeven waarde.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements of the &lt;xref:System.Collections.ArrayList&gt; must already be sorted in increasing value according to the sort order defined by the &lt;xref:System.IComparable&gt; implementation; otherwise, the result might be incorrect.</source>
          <target state="translated">De elementen van de &lt;xref:System.Collections.ArrayList&gt;al moeten worden gesorteerd in oplopende waarde volgens de sorteervolgorde gedefinieerd door de &lt;xref:System.IComparable&gt;implementatie; anders wordt het resultaat is mogelijk onjuist.&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparing <ph id="ph1">`null`</ph> with any type is allowed and does not generate an exception when using &lt;xref:System.IComparable&gt;.</source>
          <target state="translated">Vergelijken <ph id="ph1">`null`</ph> met elk type is toegestaan en genereert een uitzondering opgetreden bij het gebruik van &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">Als u sorteert, <ph id="ph1">`null`</ph> wordt beschouwd als minder dan geen andere objecten.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;bevat meer dan een element met dezelfde waarde, de methode retourneert alleen een van de incidenten en het mogelijk een van de instanties, niet noodzakelijkerwijs het eerste beheerpunt retourneren.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified value, the method returns a negative integer.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;niet de opgegeven waarde bevat de methode retourneert een negatief geheel getal.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</source>
          <target state="translated">U kunt de bewerking bitsgewijze aanvulling (~) toepassen op deze-negatief geheel getal ophalen van de index van het eerste element zijn dat groter is dan de waarde van de zoekopdracht.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inserting the value into the &lt;xref:System.Collections.ArrayList&gt;, this index should be used as the insertion point to maintain the sort order.</source>
          <target state="translated">Bij het invoegen van de waarde in de &lt;xref:System.Collections.ArrayList&gt;, deze index moet worden gebruikt als de invoegpositie voor het onderhouden van de sorteervolgorde.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode is een O (log <ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to search.</source>
          <target state="translated">De op nul gebaseerde startIndex van het bereik moet worden gezocht.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The length of the range to search.</source>
          <target state="translated">De lengte van het bereik moet worden gezocht.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate.</source>
          <target state="translated">De &lt;xref:System.Object&gt;vinden.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">De &lt;xref:System.Collections.IComparer&gt;implementatie moet worden gebruikt bij het vergelijken van elementen.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer that is the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- of - <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> gebruiken de standaardvergelijkingsfunctie die de &lt;xref:System.IComparable&gt;uitvoering van elk element.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The zero-based index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> in the sorted <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p4">&lt;/code&gt;</ept> or, if there is no larger element, the bitwise complement of &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">De op nul gebaseerde index van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> in de gesorteerde <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>als <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept> is gevonden, anders wordt een negatief getal, namelijk de bitsgewijze aanvulling van de index van het volgende element die groter is dan <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">value</ph> <ept id="p4">&lt;/code&gt;</ept> of, als er geen groter element, het bitsgewijze complement van &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt; is</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> niet aanduiding maken van een geldig bereik in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and neither <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> nor the elements of <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en geen van beide <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> noch de elementen van <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> implementeren de <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is not of the same type as the elements of the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is niet van hetzelfde type als de elementen van de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">Opgehaald of ingesteld van het aantal elementen die de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan bevatten.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">Capaciteit is het aantal elementen die de &lt;xref:System.Collections.ArrayList&gt;kunt opslaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;is het aantal elementen daadwerkelijk in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Capaciteit is altijd groter dan of gelijk zijn aan &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Als &lt;xref:System.Collections.ArrayList.Count%2A&gt;dan er capaciteit is tijdens het toevoegen van elementen, de capaciteit wordt automatisch verhoogd met het opnieuw toewijzen van de interne matrix voordat de oude elementen kopiëren en toevoegen van nieuwe elementen.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">De capaciteit kan worden verlaagd door het aanroepen van &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;of door de eigenschap capaciteit expliciet.&lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">Wanneer de waarde van de capaciteit is expliciet ingesteld, wordt de interne matrix ook opnieuw toegewezen aan de opgegeven capaciteit.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">Ophalen van de waarde van deze eigenschap is een bewerking O(1); een O instellen van de eigenschap is (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is de nieuwe capaciteit.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can contain.</source>
          <target state="translated">Het aantal elementen die de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan bevatten.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Capacity is set to a value that is less than &lt;xref:System.Collections.ArrayList.Count*&gt;.</source>
          <target state="translated">Capaciteit is ingesteld op een waarde die kleiner is dan &lt;xref:System.Collections.ArrayList.Count*&gt;.&lt;/xref:System.Collections.ArrayList.Count*&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">Er is onvoldoende geheugen beschikbaar op het systeem.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee verwijdert u alle elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Count%2A&gt;is ingesteld op nul en verwijzingen naar andere objecten in de elementen van de verzameling ook worden vrijgegeven.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;blijft ongewijzigd.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset the capacity of the &lt;xref:System.Collections.ArrayList&gt;, call &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; property directly.</source>
          <target state="translated">Opnieuw instellen van de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;, roepen &lt;xref:System.Collections.ArrayList.TrimToSize%2A&gt;of stel de &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;eigenschap rechtstreeks.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.TrimToSize%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">Een lege bijsnijden &lt;xref:System.Collections.ArrayList&gt;Hiermee stelt u de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;naar de standaardcapaciteit.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Maakt een recente kopie van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Een recente kopie van een verzameling kopieert alleen de elementen van de verzameling of ze verwijzingstypen of typen zijn, maar deze worden niet gekopieerd door de objecten die de verwijzingen naar verwijzen.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">De verwijzingen in de nieuwe verzameling verwijzen naar dezelfde objecten die de verwijzingen in de oorspronkelijke verzameling naar verwijzen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Daarentegen een diepe kopie van een verzameling kopieert de elementen en alles direct of indirect waarnaar wordt verwezen door de elementen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een recente kopie van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Determines whether an element is in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt bepaald of een element in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the beginning of the target array.</source>
          <target state="translated">Kopieert de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar een compatibele eendimensionale &lt;xref:System.Array&gt;, te beginnen aan het begin van de doelmatrix.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">De opgegeven matrix moet van een compatibel type.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">Deze methode gebruikt &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;kopiëren van de elementen.&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd naar de &lt;xref:System.Array&gt;in dezelfde volgorde als waarin de enumerator de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; doorloopt&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De eendimensionale &lt;xref:System.Array&gt;die het doel van de elementen die zijn gekopieerd uit <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">De &lt;xref:System.Array&gt;moet hebben op nul gebaseerde indexering.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is multidimensionaal.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the number of elements that the destination <ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> can contain.</source>
          <target state="translated">- of - het aantal elementen in de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is groter dan het aantal elementen dat de bestemming <ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> kan bevatten.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Het type van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan niet automatisch worden geconverteerd naar het type van de bestemming <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Copies the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">Kopieert de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar een compatibele eendimensionale &lt;xref:System.Array&gt;, te beginnen bij de opgegeven index van de doelmatrix.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">De opgegeven matrix moet van een compatibel type.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">Deze methode gebruikt &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;kopiëren van de elementen.&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd naar de &lt;xref:System.Array&gt;in dezelfde volgorde als waarin de enumerator de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; doorloopt&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De eendimensionale &lt;xref:System.Array&gt;die het doel van de elementen die zijn gekopieerd uit <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">De &lt;xref:System.Array&gt;moet hebben op nul gebaseerde indexering.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">De op nul gebaseerde index in <ph id="ph1">`array`</ph> welke kopiëren begint.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is multidimensionaal.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- of - het aantal elementen in de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> groter is dan de beschikbare ruimte vanaf <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> aan het einde van de bestemming <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Het type van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan niet automatisch worden geconverteerd naar het type van de bestemming <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Copies a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a compatible one-dimensional &lt;xref:System.Array&gt;, starting at the specified index of the target array.</source>
          <target state="translated">Een bereik van elementen uit kopieert de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar een compatibele eendimensionale &lt;xref:System.Array&gt;, te beginnen bij de opgegeven index van de doelmatrix.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">De opgegeven matrix moet van een compatibel type.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt; to copy the elements.</source>
          <target state="translated">Deze methode gebruikt &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;kopiëren van de elementen.&lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd naar de &lt;xref:System.Array&gt;in dezelfde volgorde als waarin de enumerator de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; doorloopt&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The zero-based index in the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at which copying begins.</source>
          <target state="translated">De op nul gebaseerde index in de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> welke kopiëren begint.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De eendimensionale &lt;xref:System.Array&gt;die het doel van de elementen die zijn gekopieerd uit <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">De &lt;xref:System.Array&gt;moet hebben op nul gebaseerde indexering.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">De op nul gebaseerde index in <ph id="ph1">`array`</ph> welke kopiëren begint.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The number of elements to copy.</source>
          <target state="translated">Het aantal elementen te kopiëren.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is multidimensionaal.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph> of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is gelijk aan of groter zijn dan de <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph> van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">- of - het aantal elementen vanaf <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> aan het einde van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> groter is dan de beschikbare ruimte vanaf <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> aan het einde van de bestemming <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Het type van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan niet automatisch worden geconverteerd naar het type van de bestemming <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets the number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt het aantal elementen daadwerkelijk in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.ArrayList&gt; can store.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;het aantal elementen is die de &lt;xref:System.Collections.ArrayList&gt;kunt opslaan.&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Aantal is het aantal elementen die daadwerkelijk in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList.Capacity%2A&gt;is altijd groter zijn dan of gelijk aan Count.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Count exceeds &lt;xref:System.Collections.ArrayList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Als het aantal hoger is dan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;tijdens het toevoegen van elementen, de capaciteit automatisch wordt verhoogd met het opnieuw toewijzen van de interne matrix voordat de oude elementen kopiëren en toevoegen van nieuwe elementen.&lt;/xref:System.Collections.ArrayList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Ophalen van de waarde van deze eigenschap is een O(1)-bewerking.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The number of elements actually contained in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Het aantal elementen daadwerkelijk in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper met een vaste grootte.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Deze wrapper kan worden gebruikt om te voorkomen dat toevoegingen aan en verwijderen van de oorspronkelijke &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">De elementen kunnen nog steeds worden gewijzigd of vervangen.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Een verzameling met een vaste grootte is gewoon een verzameling met een wrapper waardoor toevoegen en verwijderen van elementen; daarom als wijzigingen zijn aangebracht in de onderliggende verzameling, inclusief het toevoegen of verwijderen van elementen, de verzameling met vaste grootte wordt doorgevoerd die wijzigingen.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> laten teruglopen.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper with a fixed size.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper met een vaste grootte.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">Retourneert een &lt;xref:System.Collections.IList&gt;wrapper met een vaste grootte.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wrapper can be used to prevent additions to and deletions from the original &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">Deze wrapper kan worden gebruikt om te voorkomen dat toevoegingen aan en verwijderen van de oorspronkelijke &lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements can still be modified or replaced.</source>
          <target state="translated">De elementen kunnen nog steeds worden gewijzigd of vervangen.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Een verzameling met een vaste grootte is gewoon een verzameling met een wrapper waardoor toevoegen en verwijderen van elementen; daarom als wijzigingen zijn aangebracht in de onderliggende verzameling, inclusief het toevoegen of verwijderen van elementen, de verzameling met vaste grootte wordt doorgevoerd die wijzigingen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">De &lt;xref:System.Collections.IList&gt;laten teruglopen.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper with a fixed size.</source>
          <target state="translated">Een &lt;xref:System.Collections.IList&gt;wrapper met een vaste grootte.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een enumerator voor de hele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">De <ph id="ph1">`foreach`</ph> -instructie van de taal C# (<ph id="ph2">`for each`</ph> in Visual Basic) de complexiteit van de opsommingen worden verborgen.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daarom kan het gebruik <ph id="ph1">`foreach`</ph> wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;brengt ook de enumerator terug naar deze positie.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Op deze positie &lt;xref:System.Collections.IEnumerator.Current%2A&gt;is niet gedefinieerd.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">U moet daarom aanroepen &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;retourneert de hetzelfde object totdat de &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;wordt aangeroepen.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;Hiermee stelt u &lt;xref:System.Collections.IEnumerator.Current%2A&gt;naar het volgende element.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;retourneert <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wanneer de enumerator is op deze positie, volgende aanroepen naar &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;ook retourneren <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Als de laatste aanroep aan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;geretourneerd <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;is niet gedefinieerd.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;U kunt naar het eerste element van de verzameling opnieuw aanroepen &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;gevolgd door &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; instellen</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en het gedrag is niet gedefinieerd.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, vergrendelt u de verzameling gedurende de volledige inventarisatie.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Als u wilt toestaan dat de verzameling worden geopend door meerdere threads voor lezen en schrijven, moet u uw eigen synchronisatie implementeren.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een &lt;xref:System.Collections.IEnumerator&gt;voor de hele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een enumerator voor een aantal elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual C++, <ph id="ph3">`For Each`</ph> Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">De <ph id="ph1">`foreach`</ph> -instructie van de taal C# (<ph id="ph2">`for each`</ph> in Visual C++ <ph id="ph3">`For Each`</ph> Visual Basic) de complexiteit van de opsommingen worden verborgen.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">Daarom kan het gebruik <ph id="ph1">`foreach`</ph> wordt aanbevolen, in plaats van rechtstreeks bewerken van de enumerator.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Enumerators kunnen worden gebruikt om de gegevens in de verzameling te lezen, maar ze kunnen niet worden gebruikt om de onderliggende verzameling niet wijzigen.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">In eerste instantie bevindt de enumerator zich vóór het eerste element in de verzameling.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;brengt ook de enumerator terug naar deze positie.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Op deze positie &lt;xref:System.Collections.IEnumerator.Current%2A&gt;is niet gedefinieerd.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">U moet daarom aanroepen &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;om door te gaan van de enumerator voor het eerste element van de verzameling voordat het lezen van &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;retourneert de hetzelfde object totdat de &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;of &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;wordt aangeroepen.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;Hiermee stelt u &lt;xref:System.Collections.IEnumerator.Current%2A&gt;naar het volgende element.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;geeft het einde van de verzameling, de enumerator bevindt zich na het laatste element in de verzameling en &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;retourneert <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Wanneer de enumerator is op deze positie, volgende aanroepen naar &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;ook retourneren <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">Als de laatste aanroep aan &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;geretourneerd <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;is niet gedefinieerd.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;U kunt naar het eerste element van de verzameling opnieuw aanroepen &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;gevolgd door &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; instellen</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Een enumerator blijft geldig zolang de verzameling ongewijzigd blijft.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Als er wijzigingen zijn aangebracht aan de verzameling, zoals het toevoegen, wijzigen of verwijderen van elementen, de enumerator is permanent ongeldig en het gedrag is niet gedefinieerd.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">De enumerator heeft geen exclusieve toegang tot de verzameling; inventariseren door middel van een verzameling is daarom intrinsiek geen procedure thread-safe.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, vergrendelt u de verzameling gedurende de volledige inventarisatie.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Als u wilt toestaan dat de verzameling worden geopend door meerdere threads voor lezen en schrijven, moet u uw eigen synchronisatie implementeren.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Compatibility    In the .NET Framework versions 1.0 and 1.1, the enumerator for an &lt;xref:System.Collections.ArrayList&gt; wrapper returned by the &lt;xref:System.Collections.ArrayList.Adapter%2A&gt; method treated the second argument as an upper bound rather than as a count.</source>
          <target state="translated">Versie compatibiliteit In de .NET Framework versie 1.0 en 1.1, de enumerator voor een &lt;xref:System.Collections.ArrayList&gt;wrapper die is geretourneerd door de &lt;xref:System.Collections.ArrayList.Adapter%2A&gt;methode het tweede argument behandeld als een bovengrens in plaats van een aantal.&lt;/xref:System.Collections.ArrayList.Adapter%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> the second argument is correctly treated as a count.</source>
          <target state="translated">In de <ph id="ph1">[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]</ph> het tweede argument correct wordt behandeld als een aantal.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">De op nul gebaseerde startIndex van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> sectie die de enumerator naar verwijzen moet.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section that the enumerator should refer to.</source>
          <target state="translated">Het aantal elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> sectie die de enumerator naar verwijzen moet.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the specified range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een &lt;xref:System.Collections.IEnumerator&gt;voor het opgegeven bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> Geef een geldig bereik in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor een subset van de elementen in de bron <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not create copies of the elements.</source>
          <target state="translated">Deze methode maakt geen exemplaren van de onderdelen.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new &lt;xref:System.Collections.ArrayList&gt; is only a view window into the source &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De nieuwe &lt;xref:System.Collections.ArrayList&gt;is alleen een venster weergeven in de bron &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, all subsequent changes to the source &lt;xref:System.Collections.ArrayList&gt; must be done through this view window &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Echter, alle volgende wijzigingen aan de bron &lt;xref:System.Collections.ArrayList&gt;moet worden uitgevoerd via deze weergavevenster &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made directly to the source &lt;xref:System.Collections.ArrayList&gt;, the view window &lt;xref:System.Collections.ArrayList&gt; is invalidated and any operations on it will return an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">Als u wijzigingen rechtstreeks op de bron &lt;xref:System.Collections.ArrayList&gt;, het weergavevenster &lt;xref:System.Collections.ArrayList&gt;ongeldig wordt gemaakt en er bewerkingen op een &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; retourneert&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which the range starts.</source>
          <target state="translated">De op nul gebaseerde <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> index op het bereik wordt gestart.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The number of elements in the range.</source>
          <target state="translated">Het aantal elementen in het bereik.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> which represents a subset of the elements in the source <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor een subset van de elementen in de bron <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> niet aanduiding maken van een geldig bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het eerste exemplaar binnen de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at the first element and ending at the last element.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;doorsturen bij het eerste element begint en eindigt bij het laatste element wordt gezocht.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het eerste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen de gehele <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the specified index to the last element.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het eerste exemplaar binnen het bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die loopt van de opgegeven index naar het laatste element.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the last element.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;doorzocht doorsturen vanaf <ph id="ph1">`startIndex`</ph> en eindigt bij het laatste element.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from <ph id="ph3">`startIndex`</ph> to the end of the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is het aantal elementen vanaf <ph id="ph3">`startIndex`</ph> aan het einde van de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">De op nul gebaseerde startIndex van de zoekopdracht.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (nul) is geldig in een lege lijst.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the last element, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het eerste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen het bereik van elementen in de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die loopt van <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept> naar het laatste element, als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>valt buiten het bereik van geldige indexen voor de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the first occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het eerste exemplaar binnen het bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die begint bij de opgegeven index en bevat het opgegeven aantal elementen.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> plus <ph id="ph3">`count`</ph> minus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;doorzocht doorsturen vanaf <ph id="ph1">`startIndex`</ph> en eindigt bij <ph id="ph2">`startIndex`</ph> plus <ph id="ph3">`count`</ph> min 1, als <ph id="ph4">`count`</ph> is groter dan 0.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">De op nul gebaseerde startIndex van de zoekopdracht.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0 (nul) is geldig in een lege lijst.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Het aantal elementen in de sectie om te zoeken.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p4">&lt;/code&gt;</ept> number of elements, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het eerste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen het bereik van elementen in de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die begint bij <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept> en bevat <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">count</ph> <ept id="p4">&lt;/code&gt;</ept> aantal elementen, als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>valt buiten het bereik van geldige indexen voor de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> Geef een geldige sectie in het <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">Hiermee voegt u een element in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> bij de opgegeven index.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.ArrayList.Count%2A&gt; already equals &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Als &lt;xref:System.Collections.ArrayList.Count%2A&gt;al gelijk is aan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, wordt de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;wordt verhoogd met automatisch opnieuw toewijzen van de interne matrix en de bestaande elementen zijn gekopieerd naar de nieuwe matrix voordat het nieuwe element is toegevoegd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, <ph id="ph2">`value`</ph> is added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Als <ph id="ph1">`index`</ph> gelijk is aan &lt;xref:System.Collections.ArrayList.Count%2A&gt;, <ph id="ph2">`value`</ph> wordt toegevoegd aan het einde van &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">Geschikt voor het nieuwe element in verzamelingen van aangrenzende elementen, zoals lijsten, de elementen die achter de invoegpositie omlaag te verplaatsen.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">De op nul gebaseerde index waarop <ph id="ph1">`value`</ph> moet worden ingevoegd.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert.</source>
          <target state="translated">De &lt;xref:System.Object&gt;invoegen.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is groter dan <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Inserts the elements of a collection into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified index.</source>
          <target state="translated">Hiermee voegt u de onderdelen van een verzameling in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> bij de opgegeven index.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the new &lt;xref:System.Collections.ArrayList.Count%2A&gt; (the current &lt;xref:System.Collections.ArrayList.Count%2A&gt; plus the size of the collection) will be greater than &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.ArrayList&gt; is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</source>
          <target state="translated">Als de nieuwe &lt;xref:System.Collections.ArrayList.Count%2A&gt;(de huidige &lt;xref:System.Collections.ArrayList.Count%2A&gt;plus de grootte van de verzameling) is groter dan &lt;xref:System.Collections.ArrayList.Capacity%2A&gt;, wordt de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;wordt verhoogd met automatisch opnieuw toewijzen van de interne matrix zodat de nieuwe onderdelen en de bestaande elementen zijn gekopieerd naar de nieuwe matrix voordat de nieuwe elementen worden toegevoegd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Capacity%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> is equal to &lt;xref:System.Collections.ArrayList.Count%2A&gt;, the elements are added to the end of &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">Als <ph id="ph1">`index`</ph> is gelijk aan &lt;xref:System.Collections.ArrayList.Count%2A&gt;, worden de elementen toegevoegd aan het einde van &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De volgorde van de elementen in de &lt;xref:System.Collections.ICollection&gt;blijft behouden in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">Geschikt voor het nieuwe element in verzamelingen van aangrenzende elementen, zoals lijsten, de elementen die achter de invoegpositie omlaag te verplaatsen.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>) operation, where <ph id="ph4">`n`</ph> is the number of elements to be added and <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph><ph id="ph2"> + </ph><ph id="ph3">`m`</ph>)-bewerking, waarbij <ph id="ph4">`n`</ph> is het aantal elementen moet worden toegevoegd en <ph id="ph5">`m`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">De op nul gebaseerde index waarop de nieuwe onderdelen moeten worden ingevoegd.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements should be inserted into the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Collections.ICollection&gt;waarvan de elementen moeten worden ingevoegd in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De verzameling zelf kan niet worden <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, maar deze kan elementen bevatten die zijn <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is groter dan <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">Haalt een waarde die aangeeft of de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Een verzameling met een vaste grootte is niet toegestaan het toevoegen of verwijderen van elementen nadat de verzameling is gemaakt, maar kunt u de wijziging van bestaande elementen.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">Een verzameling met een vaste grootte is gewoon een verzameling met een wrapper waardoor toevoegen en verwijderen van elementen; daarom als wijzigingen zijn aangebracht in de onderliggende verzameling, inclusief het toevoegen of verwijderen van elementen, de verzameling met vaste grootte wordt doorgevoerd die wijzigingen.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Ophalen van de waarde van deze eigenschap is een O(1)-bewerking.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> heeft een vaste grootte, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">Haalt een waarde die aangeeft of de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Een verzameling die is alleen-lezen is het toevoegen, verwijderen of wijzigen van de elementen niet toegestaan, nadat de verzameling is gemaakt.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de collectie. daarom als wijzigingen worden aangebracht in de onderliggende verzameling, de verzameling alleen-lezen wordt doorgevoerd die wijzigingen.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Ophalen van de waarde van deze eigenschap is een O(1)-bewerking.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is alleen-lezen, anders, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">Haalt een waarde die aangeeft of de toegang tot de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is gesynchroniseerd (thread-veilig).</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">Om te waarborgen van de veiligheid van de thread van de &lt;xref:System.Collections.ArrayList&gt;, alle bewerkingen moeten worden uitgevoerd via de wrapper die is geretourneerd door de &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;methode.&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de toegang tot de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is gesynchroniseerd (thread-safe); anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Opgehaald of ingesteld van het element bij de opgegeven index.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Item returns an &lt;xref:System.Object&gt;, so you may need to cast the returned value to the original type in order to manipulate it.</source>
          <target state="translated">Het artikel retourneert een &lt;xref:System.Object&gt;dus u moet voor het casten van de geretourneerde waarde naar het oorspronkelijke type om deze te bewerken&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is important to note that &lt;xref:System.Collections.ArrayList&gt; is not a strongly-typed collection.</source>
          <target state="translated">Het is belangrijk te weten dat &lt;xref:System.Collections.ArrayList&gt;is geen sterk getypeerde verzameling.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a strongly-typed alternative, see &lt;xref:System.Collections.Generic.List%601&gt;.</source>
          <target state="translated">Zie voor een alternatieve sterk getypeerde &lt;xref:System.Collections.Generic.List%601&gt;.&lt;/xref:System.Collections.Generic.List%601&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Deze eigenschap biedt de mogelijkheid toegang tot een specifiek element in de verzameling met de volgende syntaxis: <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the Item property.</source>
          <target state="translated">Het trefwoord wordt gebruikt voor het definiëren van de indexeerfuncties in plaats van de implementatie van de eigenschap Item van de taal C#.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic implementeert Item als een standaardeigenschap dezelfde functionaliteit indexering bieden.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">Ophalen van de waarde van deze eigenschap is een bewerking O(1); de eigenschap is ook een O(1)-bewerking.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">De op nul gebaseerde index van het element ophalen of instellen.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">Het element bij de opgegeven index.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is gelijk aan of groter zijn dan <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het laatste exemplaar binnen de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at the last element and ending at the first element.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;terug op het laatste element begint en eindigt bij het eerste element wordt gezocht.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the entire the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het laatste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen de gehele de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that extends from the first element to the specified index.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het laatste exemplaar binnen het bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die loopt van het eerste element aan de opgegeven index.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the first element.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;wordt gezocht naar achteren begint bij <ph id="ph1">`startIndex`</ph> en eindigt bij het eerste element.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements from the beginning of the &lt;xref:System.Collections.ArrayList&gt; to <ph id="ph3">`startIndex`</ph>.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is het aantal elementen vanaf het begin van de &lt;xref:System.Collections.ArrayList&gt;naar <ph id="ph3">`startIndex`</ph>.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">De op nul gebaseerde startIndex van achterwaarts zoeken.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that extends from the first element to <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">startIndex</ph><ept id="p3">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het laatste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen het bereik van elementen in de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die loopt van het eerste element dat <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">startIndex</ph> <ept id="p3">&lt;/code&gt;</ept>als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>valt buiten het bereik van geldige indexen voor de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Searches for the specified &lt;xref:System.Object&gt; and returns the zero-based index of the last occurrence within the range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">Zoekt naar de opgegeven &lt;xref:System.Object&gt;en retourneert de op nul gebaseerde index van het laatste exemplaar binnen het bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die het opgegeven aantal elementen, en eindigt bij de opgegeven index bevat.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.ArrayList&gt; is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph> minus <ph id="ph3">`count`</ph> plus 1, if <ph id="ph4">`count`</ph> is greater than 0.</source>
          <target state="translated">De &lt;xref:System.Collections.ArrayList&gt;wordt gezocht naar achteren begint bij <ph id="ph1">`startIndex`</ph> en eindigt bij <ph id="ph2">`startIndex`</ph> min <ph id="ph3">`count`</ph> plus 1, als <ph id="ph4">`count`</ph> is groter dan 0.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">Beginnen met .NET Framework 2.0, deze methode maakt gebruik van een verzameling objecten &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden op <ph id="ph1">`item`</ph> om te bepalen of item bestaat.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">In eerdere versies van .NET Framework, deze beslissing is gemaakt met behulp van de &lt;xref:System.Object.Equals%2A&gt;en &lt;xref:System.IComparable.CompareTo%2A&gt;methoden van de <ph id="ph1">`item`</ph> parameter voor de objecten in de verzameling.&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;te vinden in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
          <target state="translated">De op nul gebaseerde startIndex van achterwaarts zoeken.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
          <target state="translated">Het aantal elementen in de sectie om te zoeken.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> within the range of elements in the <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that contains <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p3">&lt;/code&gt;</ept> number of elements and ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, if found; otherwise, -1.</source>
          <target state="translated">De op nul gebaseerde index van het laatste exemplaar van <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> binnen het bereik van elementen in de <bpt id="p2">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die bevat <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p3">&lt;/code&gt;</ept> aantal elementen en eindigt bij <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph3">startIndex</ph> <ept id="p4">&lt;/code&gt;</ept>als gevonden, anders wordt -1.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph>valt buiten het bereik van geldige indexen voor de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> Geef een geldige sectie in het <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Returns a read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper.</source>
          <target state="translated">Retourneert een alleen-lezen <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">Om te voorkomen dat alle wijzigingen aan <ph id="ph1">`list`</ph>, blootstellen <ph id="ph2">`list`</ph> alleen via deze wrapper.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de verzameling.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Als wijzigingen worden aangebracht in de onderliggende verzameling, wordt deze wijzigingen doorgevoerd in de verzameling alleen-lezen.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to wrap.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> laten teruglopen.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A read-only <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper around <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">Een alleen-lezen <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper rond <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">list</ph> <ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Returns a read-only &lt;xref:System.Collections.IList&gt; wrapper.</source>
          <target state="translated">Retourneert een alleen-lezen &lt;xref:System.Collections.IList&gt;wrapper.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent any modifications to <ph id="ph1">`list`</ph>, expose <ph id="ph2">`list`</ph> only through this wrapper.</source>
          <target state="translated">Om te voorkomen dat alle wijzigingen aan <ph id="ph1">`list`</ph>, blootstellen <ph id="ph2">`list`</ph> alleen via deze wrapper.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</source>
          <target state="translated">Een verzameling die is alleen-lezen is gewoon een verzameling met een wrapper waardoor het wijzigen van de verzameling.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">Als wijzigingen worden aangebracht in de onderliggende verzameling, wordt deze wijzigingen doorgevoerd in de verzameling alleen-lezen.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Deze methode is een bewerking O(1).</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to wrap.</source>
          <target state="translated">De &lt;xref:System.Collections.IList&gt;laten teruglopen.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>A read-only &lt;xref:System.Collections.IList&gt; wrapper around <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">list</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Een alleen-lezen &lt;xref:System.Collections.IList&gt;wrapper rond <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">list</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee verwijdert u het eerste exemplaar van een specifiek object van het <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Collections.ArrayList&gt; does not contain the specified object, the &lt;xref:System.Collections.ArrayList&gt; remains unchanged.</source>
          <target state="translated">Als de &lt;xref:System.Collections.ArrayList&gt;bevat niet het opgegeven object het &lt;xref:System.Collections.ArrayList&gt;blijft ongewijzigd.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
          <target state="translated">Er is geen uitzondering is opgetreden.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode voert een lineaire zoeken; Deze methode is daarom een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Deze methode bepaalt gelijkheid door het aanroepen van &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In verzamelingen van aangrenzende elementen, zoals lijsten, verplaatsen de elementen die achter de verwijderde element omhoog naar de vrijgekomen spot in beslag nemen.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;verwijderen uit de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee verwijdert u het element bij de opgegeven index van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the element is removed, the size of the collection is adjusted and the value of the &lt;xref:System.Collections.ArrayList.Count%2A&gt; property is decreased by one.</source>
          <target state="translated">Nadat het element is verwijderd, wordt de grootte van de verzameling aangepast en de waarde van de &lt;xref:System.Collections.ArrayList.Count%2A&gt;eigenschap met één verlaagd.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In verzamelingen van aangrenzende elementen, zoals lijsten, verplaatsen de elementen die achter de verwijderde element omhoog naar de vrijgekomen spot in beslag nemen.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">De op nul gebaseerde index van het element te verwijderen.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is gelijk aan of groter zijn dan <ph id="ph2">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Removes a range of elements from the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee verwijdert u een bereik van elementen uit de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">In verzamelingen van aangrenzende elementen, zoals lijsten, verplaatsen de elementen die achter de verwijderde element omhoog naar de vrijgekomen spot in beslag nemen.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Als de verzameling is geïndexeerd, worden de indexen van de elementen die verplaatst worden ook bijgewerkt.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">Dit gedrag is niet van toepassing op verzamelingen waar elementen conceptueel gezien zijn gegroepeerd in buckets, zoals een hash-tabel.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">De op nul gebaseerde startIndex van het bereik van elementen te verwijderen.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The number of elements to remove.</source>
          <target state="translated">Het aantal elementen te verwijderen.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> niet aanduiding maken van een geldig bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose elements are copies of the specified value.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarvan de elementen zijn kopieën van de opgegeven waarde.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to copy multiple times in the new <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Object&gt;kopiëren meerdere keren in het nieuwe <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De waarde kan zijn <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The number of times <ph id="ph1">`value`</ph> should be copied.</source>
          <target state="translated">Het aantal keren <ph id="ph1">`value`</ph> moeten worden gekopieerd.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p2">&lt;/code&gt;</ept> number of elements, all of which are copies of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> met <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">count</ph> <ept id="p2">&lt;/code&gt;</ept> aantal elementen, die allemaal kopieën van zijn <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Keert de volgorde van de elementen in de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">Deze methode gebruikt &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;de volgorde van de elementen zodat het element bij de &lt;xref:System.Collections.ArrayList&gt;[i] wanneer ik een index binnen het bereik is verplaatst naar &lt;xref:System.Collections.ArrayList&gt;[j], waarbij j gelijk is aan <ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> - i - 1.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in the specified range.</source>
          <target state="translated">Keert de volgorde van de elementen in het opgegeven bereik.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt; to reverse the order of the elements, such that the element at &lt;xref:System.Collections.ArrayList&gt; [i], where i is any index within the range, moves to &lt;xref:System.Collections.ArrayList&gt; [j], where j equals <ph id="ph1">`index`</ph><ph id="ph2"> + </ph><ph id="ph3">`index`</ph><ph id="ph4"> + </ph><ph id="ph5">`count`</ph> - i - 1.</source>
          <target state="translated">Deze methode gebruikt &lt;xref:System.Array.Reverse%2A?displayProperty=fullName&gt;de volgorde van de elementen zodat het element bij de &lt;xref:System.Collections.ArrayList&gt;[i] wanneer ik een index binnen het bereik is verplaatst naar &lt;xref:System.Collections.ArrayList&gt;[j], waarbij j gelijk is aan <ph id="ph1">`index`</ph> <ph id="ph2"> + </ph> <ph id="ph3">`index`</ph> <ph id="ph4"> + </ph> <ph id="ph5">`count`</ph> - i - 1.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is <ph id="ph3">`count`</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to reverse.</source>
          <target state="translated">De op nul gebaseerde startIndex van het bereik om terug te draaien.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The number of elements in the range to reverse.</source>
          <target state="translated">Het aantal elementen in het bereik om terug te draaien.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not denote a valid range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> niet aanduiding maken van een geldig bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Copies the elements of a collection over a range of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De elementen van een verzameling gekopieerd via een bereik van elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ArrayList&gt; accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;accepteert <ph id="ph1">`null`</ph> als een geldige waarde en dubbele elementen zijn toegestaan.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the elements in the &lt;xref:System.Collections.ICollection&gt; is preserved in the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De volgorde van de elementen in de &lt;xref:System.Collections.ICollection&gt;blijft behouden in de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph> + 1) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph> + 1)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The zero-based <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> index at which to start copying the elements of <ph id="ph1">`c`</ph>.</source>
          <target state="translated">De op nul gebaseerde <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> index waarop u wilt beginnen met het kopiëren van de elementen van <ph id="ph1">`c`</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; whose elements to copy to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Collections.ICollection&gt;waarvan de elementen kopiëren naar de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The collection itself cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, but it can contain elements that are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De verzameling zelf kan niet worden <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, maar deze kan elementen bevatten die zijn <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus the number of elements in <ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph> is greater than <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> plus het aantal elementen in <ph id="ph2">&lt;code&gt;c&lt;/code&gt;</ph> is groter dan <ph id="ph3">&lt;xref:System.Collections.ArrayList.Count*&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;c&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Sorteert de elementen in de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses &lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;, which uses the QuickSort algorithm.</source>
          <target state="translated">Deze methode maakt gebruik van &lt;xref:System.Array.Sort%2A?displayProperty=fullName&gt;, waarbij de algoritme QuickSort wordt gebruikt.&lt;/xref:System.Array.Sort%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</source>
          <target state="translated">De QuickSort-algoritme is een vergelijking sortering (ook wel een instabiele sorteren), wat dat betekent een 'kleiner dan of gelijk aan' vergelijkingsbewerking bepaalt welke van twee elementen in de laatste gesorteerde lijst eerst moet plaatsvinden.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if two elements are equal, their original order might not be preserved.</source>
          <target state="translated">Echter, als twee elementen gelijk zijn, de oorspronkelijke volgorde mogelijk niet worden bewaard.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Een stabiele sortering bewaart daarentegen de volgorde van elementen die gelijk zijn.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface to use with the other overloads of this method.</source>
          <target state="translated">Als u een stabiele sortering, moet u een aangepaste implementeren &lt;xref:System.Collections.IComparer&gt;interface voor gebruik met de andere overloads van deze methode.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">Gemiddeld deze methode een O is (<ph id="ph1">`n`</ph> logboek <ph id="ph2">`n`</ph>)-bewerking, waarbij <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in het ergste geval een O is (<ph id="ph4">`n`</ph>^&amp;2;) bewerking.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Sorts the elements in the entire <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">Sorteert de elementen in de gehele <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> met behulp van de opgegeven vergelijkingsfunctie.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Sort method to  sort a list of objects with a custom comparer that implements the &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">Gebruik de methode Sort te sorteren van een lijst met objecten met een aangepaste vergelijkingsfunctie waarmee de &lt;xref:System.Collections.IComparer&gt;interface.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`comparer`</ph>, this method uses the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">Als u doorgeeft <ph id="ph1">`null`</ph> voor <ph id="ph2">`comparer`</ph>, deze methode maakt gebruik van de &lt;xref:System.IComparable&gt;uitvoering van elk element.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you must make sure that the objects contained in the list implement the &lt;xref:System.Collections.IComparer&gt; interface or an exception will occur.</source>
          <target state="translated">In dit geval moet u ervoor zorgen dat de objecten in de lijst implementeert de &lt;xref:System.Collections.IComparer&gt;-interface of een uitzondering wordt uitgevoerd.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, using the &lt;xref:System.IComparable&gt; implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Bovendien met behulp van de &lt;xref:System.IComparable&gt;implementatie betekent de lijst sorteert vergelijking (ook wel een instabiele sorteren); dat wil zeggen, als twee elementen gelijk zijn, de volgorde mogelijk niet worden bewaard.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Een stabiele sortering bewaart daarentegen de volgorde van elementen die gelijk zijn.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">Als u een stabiele sortering, moet u een aangepaste implementeren &lt;xref:System.Collections.IComparer&gt;interface.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in the worst case it is an O(<ph id="ph4">`n`</ph>^2) operation.</source>
          <target state="translated">Gemiddeld deze methode een O is (<ph id="ph1">`n`</ph> logboek <ph id="ph2">`n`</ph>)-bewerking, waarbij <ph id="ph3">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;; in het ergste geval een O is (<ph id="ph4">`n`</ph>^&amp;2;) bewerking.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">De &lt;xref:System.Collections.IComparer&gt;implementatie moet worden gebruikt bij het vergelijken van elementen.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- of - een null-verwijzing (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) te gebruiken de &lt;xref:System.IComparable&gt;uitvoering van elk element.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">Er is een fout opgetreden bij het vergelijken van twee elementen.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is passed for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">comparer</ph><ept id="p2">&lt;/code&gt;</ept>, and the elements in the list do not implement &lt;xref:System.IComparable&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>wordt doorgegeven voor <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">comparer</ph> <ept id="p2">&lt;/code&gt;</ept>, en de elementen in de lijst &lt;xref:System.IComparable&gt;.&lt;/xref:System.IComparable&gt; niet wordt geïmplementeerd</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Sorts the elements in a range of elements in <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified comparer.</source>
          <target state="translated">Sorteert de elementen in een bereik van elementen in <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> met behulp van de opgegeven vergelijkingsfunctie.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`comparer`</ph> is set to <ph id="ph2">`null`</ph>, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</source>
          <target state="translated">Als <ph id="ph1">`comparer`</ph> is ingesteld op <ph id="ph2">`null`</ph>, deze methode sorteert vergelijking (ook wel een instabiele sorteren); dat wil zeggen, als twee elementen gelijk zijn, de volgorde mogelijk niet worden bewaard.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a stable sort preserves the order of elements that are equal.</source>
          <target state="translated">Een stabiele sortering bewaart daarentegen de volgorde van elementen die gelijk zijn.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a stable sort, you must implement a custom &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">Als u een stabiele sortering, moet u een aangepaste implementeren &lt;xref:System.Collections.IComparer&gt;interface.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>On average, this method is an O(<ph id="ph1">`n`</ph> log <ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">`count`</ph>; in the worst case it is an O(n^2) operation.</source>
          <target state="translated">Gemiddeld deze methode is een O (<ph id="ph1">`n`</ph> logboek <ph id="ph2">`n`</ph>)-bewerking, waarbij <ph id="ph3">`n`</ph> is <ph id="ph4">`count`</ph>; in het ergste geval is een bewerking O(n^2).</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the range to sort.</source>
          <target state="translated">De op nul gebaseerde startIndex van het bereik te sorteren.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The length of the range to sort.</source>
          <target state="translated">De lengte van het bereik te sorteren.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing elements.</source>
          <target state="translated">De &lt;xref:System.Collections.IComparer&gt;implementatie moet worden gebruikt bij het vergelijken van elementen.&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>-or-       A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to use the &lt;xref:System.IComparable&gt; implementation of each element.</source>
          <target state="translated">- of - een null-verwijzing (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) te gebruiken de &lt;xref:System.IComparable&gt;uitvoering van elk element.&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">- of - <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is kleiner dan nul.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid range in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>en <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> Geef een geldig bereik in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An error occurred while comparing two elements.</source>
          <target state="translated">Er is een fout opgetreden bij het vergelijken van twee elementen.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper die is gesynchroniseerd (thread-veilig).</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">Om te waarborgen van de veiligheid van de thread van de &lt;xref:System.Collections.ArrayList&gt;, moeten alle bewerkingen worden uitgevoerd via deze wrapper.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te synchroniseren.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> wrapper that is synchronized (thread safe).</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wrapper die is gesynchroniseerd (thread-veilig).</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">Retourneert een &lt;xref:System.Collections.IList&gt;wrapper die is gesynchroniseerd (thread-veilig).&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee the thread safety of the &lt;xref:System.Collections.ArrayList&gt;, all operations must be done through this wrapper.</source>
          <target state="translated">Om te waarborgen van de veiligheid van de thread van de &lt;xref:System.Collections.ArrayList&gt;, moeten alle bewerkingen worden uitgevoerd via deze wrapper.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; to synchronize.</source>
          <target state="translated">De &lt;xref:System.Collections.IList&gt;om te synchroniseren.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; wrapper that is synchronized (thread safe).</source>
          <target state="translated">Een &lt;xref:System.Collections.IList&gt;wrapper die is gesynchroniseerd (thread-veilig).&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a synchronized version of the &lt;xref:System.Collections.ArrayList&gt;, use the &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt; method.</source>
          <target state="translated">Maken van een gesynchroniseerde versie van de &lt;xref:System.Collections.ArrayList&gt;, gebruiken de &lt;xref:System.Collections.ArrayList.Synchronized%2A&gt;methode.&lt;/xref:System.Collections.ArrayList.Synchronized%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.ArrayList&gt; using the SyncRoot property.</source>
          <target state="translated">Afgeleide klassen kunnen evenwel de eigen gesynchroniseerde versie van de &lt;xref:System.Collections.ArrayList&gt;met behulp van de eigenschap SyncRoot.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.ArrayList&gt;, not directly on the &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">De code voor het synchroniseren moet bewerkingen uitvoeren op de SyncRoot van de &lt;xref:System.Collections.ArrayList&gt;, niet rechtstreeks op de &lt;xref:System.Collections.ArrayList&gt;.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Dit zorgt ervoor dat de juiste werking van de verzamelingen die zijn afgeleid van andere objecten.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.ArrayList&gt; object.</source>
          <target state="translated">In het bijzonder houdt juiste synchronisatie met andere threads dat tegelijkertijd kan worden wijzigt de &lt;xref:System.Collections.ArrayList&gt;object.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Inventariseren door middel van een verzameling is intrinsiek niet een thread-veilige procedure.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Zelfs wanneer een verzameling wordt gesynchroniseerd, andere threads kunnen nog steeds de verzameling niet wijzigen, waardoor de enumerator is een uitzondering.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Om te garanderen thread veiligheid tijdens de opsomming, moet u de verzameling tijdens de gehele opsomming vergrendelen of het gevolg van wijzigingen die door andere threads uitzonderingen wordt onderschept.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een object dat kan worden gebruikt voor het synchroniseren van toegang tot de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new &lt;xref:System.Object&gt; array.</source>
          <target state="translated">Kopieert de elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar een nieuwe &lt;xref:System.Object&gt;matrix.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd met behulp van &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, namelijk een O (<ph id="ph1">`n`</ph>) bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; array containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een &lt;xref:System.Object&gt;matrix met kopieën van de elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a new array of the specified element type.</source>
          <target state="translated">Kopieert de elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naar een nieuwe matrix van het opgegeven elementtype.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the objects in the &lt;xref:System.Collections.ArrayList&gt; object will be cast to the &lt;xref:System.Type&gt; specified in the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Alle objecten in de &lt;xref:System.Collections.ArrayList&gt;object wordt geconverteerd naar de &lt;xref:System.Type&gt;opgegeven in de <ph id="ph1">`type`</ph> parameter.&lt;/xref:System.Type&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied using &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, which is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">De elementen zijn gekopieerd met behulp van &lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;, namelijk een O (<ph id="ph1">`n`</ph>) bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt; &lt;/xref:System.Array.Copy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>The element &lt;xref:System.Type&gt; of the destination array to create and copy elements to.</source>
          <target state="translated">Het element &lt;xref:System.Type&gt;van de doelmatrix maken en elementen te kopiëren.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>An array of the specified element type containing copies of the elements of the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een matrix van het opgegeven elementtype met kopieën van de elementen van de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the specified type.</source>
          <target state="translated">Het type van de bron <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan niet automatisch worden geconverteerd naar het opgegeven type.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee stelt u de capaciteit aan het werkelijke aantal elementen in de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">Deze methode kan worden gebruikt om te minimaliseren van een verzameling geheugen overhead als er geen nieuwe elementen wordt toegevoegd aan de verzameling.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset a &lt;xref:System.Collections.ArrayList&gt; to its initial state, call the &lt;xref:System.Collections.ArrayList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">Om in te stellen een &lt;xref:System.Collections.ArrayList&gt;aanroepen naar de oorspronkelijke staat de &lt;xref:System.Collections.ArrayList.Clear%2A&gt;methode voordat u TrimToSize aanroept.&lt;/xref:System.Collections.ArrayList.Clear%2A&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trimming an empty &lt;xref:System.Collections.ArrayList&gt; sets the capacity of the &lt;xref:System.Collections.ArrayList&gt; to the default capacity.</source>
          <target state="translated">Een lege bijsnijden &lt;xref:System.Collections.ArrayList&gt;Hiermee stelt u de capaciteit van de &lt;xref:System.Collections.ArrayList&gt;naar de standaardcapaciteit.&lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.</source>
          <target state="translated">Deze methode is een O (<ph id="ph1">`n`</ph>)-bewerking, waarbij <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.ArrayList.Count%2A&gt;.&lt;/xref:System.Collections.ArrayList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">- of - de <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft een vaste grootte.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>