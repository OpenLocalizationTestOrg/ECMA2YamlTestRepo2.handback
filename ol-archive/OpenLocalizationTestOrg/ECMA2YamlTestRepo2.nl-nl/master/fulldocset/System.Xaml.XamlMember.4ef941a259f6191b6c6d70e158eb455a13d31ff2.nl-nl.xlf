<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95fd6000be25aa34c764b63e2170c12445c646eb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlMember.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d98968e4787d78092f0f6c5b611431fcc734852b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">847af931ba8799ec08203b9f9c25be6d8148e483</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the XAML type system identifier for members of XAML types.</source>
          <target state="translated">Biedt de systeemidentificatie XAML-type voor leden van de XAML-typen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) and also for general XAML type system logic.</source>
          <target state="translated">De id wordt gebruikt door de XAML en XAML schrijfprogramma tijdens de verwerking van lid knooppunten (wanneer de XAML-lezer is geplaatst op een <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>) en ook voor algemene XAML type systeemlogica.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <ph id="ph1">`Lookup*`</ph> API that is provided by possible XamlMember subclasses.</source>
          <target state="translated">XamlMember drie methoden kunt gebruiken voor het retourneren van informatie over een XAML-lid: standaard common language runtime (CLR) reflectie; een verwijzing naar alleen-lezen reflectie techniek aanroepen van interne API's die gebruik van geoptimaliseerde bits vlaggen; of aanroepen in virtuele onderdrukkingen van de <ph id="ph1">`Lookup*`</ph> API die wordt geleverd door mogelijke XamlMember subklassen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context.</source>
          <target state="translated">Voor de meeste toepassingen van .NET Framework XAML Services API's en de API XamlMember gebruikt u de standaardcontext XAML-schema.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</source>
          <target state="translated">De standaard XAML schemacontext voor .NET Framework XAML Services maakt gebruik van een back-up voor het type system CLR.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</source>
          <target state="translated">Hierdoor kunnen de XAML en XAML schrijfprogramma werkt met elk type of lid dat is gedefinieerd of anderszins beschikbaar voor de CLR en de technieken reflectie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lookup* APIs and XamlMember Derived Classes    XamlMember defines several virtual members that derived classes might override.</source>
          <target state="translated">Lookup * API's en XamlMember afgeleide klassen XamlMember definieert verschillende virtuele leden die een klassen afgeleide kunnen overschrijven.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>These members have names that always start with the string <ph id="ph1">`Lookup`</ph>.</source>
          <target state="translated">Deze leden hebben namen die altijd met de tekenreeks beginnen <ph id="ph1">`Lookup`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder of the API name then references the property that the virtual method influences.</source>
          <target state="translated">De rest van de API naam vervolgens verwijst naar de eigenschap die van invloed is op de virtuele methode.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a XamlMember derived class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to influence what the base-defined property &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt; returns in a derived class.</source>
          <target state="translated">Bijvoorbeeld, een XamlMember afgeleide klasse overschrijven mogelijk &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;te be√Ønvloeden welke de base gedefinieerde eigenschap &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;retourneert in een afgeleide klasse.&lt;/xref:System.Xaml.XamlMember.TargetType%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant <ph id="ph1">`Lookup*`</ph> methods.</source>
          <target state="translated">U kunt de retourwaarden voorspellen voor dergelijke eigenschappen in de bestaande of XamlMember klassen afgeleide door te lezen van de documentatie voor de desbetreffende <ph id="ph1">`Lookup*`</ph> methoden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of the <ph id="ph1">`Lookup*`</ph> methods is to provide a XAML type system extension technique that incorporates the XamlMember base class.</source>
          <target state="translated">Het doel van de <ph id="ph1">`Lookup*`</ph> methoden is het bieden van een XAML type system extensie techniek waarin de basisklasse XamlMember.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By deriving from XamlMember and overriding the <ph id="ph1">`Lookup`</ph> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</source>
          <target state="translated">Door die zijn afgeleid van XamlMember en het overschrijven van de <ph id="ph1">`Lookup`</ph> virtuele leden, kunt u het concept van een XAML-lid voor een XAML-schema in een XAML-typesysteem zonder wordt gekoppeld aan de details van een back-ups maken typesysteem of technologie.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use a provided XAML schema context under this scheme and still return the results you want.</source>
          <target state="translated">U kunt ook met een opgegeven XAML schemacontext onder dit schema en nog steeds de gewenste resultaten retourneren.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, consider the XamlMember property &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.</source>
          <target state="translated">Een voorbeeld kunt u de eigenschap XamlMember &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property informs callers that operations such as using a &lt;xref:System.Xaml.XamlWriter&gt; for serialization can write a value for this member on a target object.</source>
          <target state="translated">Deze eigenschap informeert aanroepfuncties die bewerkingen zoals het gebruik van een &lt;xref:System.Xaml.XamlWriter&gt;voor serialisatie geen waarde voor dit lid van een doelobject schrijven kan.&lt;/xref:System.Xaml.XamlWriter&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR &lt;xref:System.Type&gt; and its members (the &lt;xref:System.Reflection.MemberInfo&gt;).</source>
          <target state="translated">In de standaardimplementatie de bepaling van of het lid beschrijfbare is wordt gedaan met behulp van reflectie technieken op basis van de back-ups maken CLR &lt;xref:System.Type&gt;en de bijbehorende leden (de &lt;xref:System.Reflection.MemberInfo&gt;).&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, by default, the XAML type system depends on the CLR type system.</source>
          <target state="translated">Daarom standaard het XAML-typesysteem hangt af van het CLR-systeem.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can remove this dependency for your XAML type system reporting of &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; by overriding the API &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;.</source>
          <target state="translated">U kunt echter deze afhankelijkheid voor de XAML type system rapportage van &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;de API &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; overschrijft&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; verwijderen</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</source>
          <target state="translated">Binnen uw onderdrukking, kunt u andere bepalingen, zoals metagegevens die specifiek is voor uw technologie, een master opzoektabel die is geoptimaliseerd voor een vaste XAML vocabulaire of tal van andere strategie√´n om te bepalen of een XAML-lid schrijfbaar in uw XAML-woordenlijst is.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Constructing XamlMember Without XAML Schema Context    Most constructors of XamlMember require a &lt;xref:System.Xaml.XamlSchemaContext&gt; as part of their initialization.</source>
          <target state="translated">XamlMember zonder XAML Schema Context meest construeren constructors van XamlMember vereisen een &lt;xref:System.Xaml.XamlSchemaContext&gt;als onderdeel van de initialisatie.&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xaml.XamlSchemaContext&gt; is also necessary for many internal &lt;xref:System.Xaml.XamlSchemaContext&gt; operations, such as obtaining information that is being forwarded from the backing type.</source>
          <target state="translated">De &lt;xref:System.Xaml.XamlSchemaContext&gt;is ook nodig zijn voor veel interne &lt;xref:System.Xaml.XamlSchemaContext&gt;bewerkingen, zoals het verkrijgen van informatie die van het type back-ups maken wordt doorgestuurd.&lt;/xref:System.Xaml.XamlSchemaContext&gt; &lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are working with the XamlMember API, you typically have a &lt;xref:System.Xaml.XamlSchemaContext&gt; that is available from a surrounding construct such as a &lt;xref:System.Xaml.XamlWriter&gt;.</source>
          <target state="translated">Wanneer u met de API XamlMember werkt, gewoonlijk hebt u een &lt;xref:System.Xaml.XamlSchemaContext&gt;die beschikbaar is in een omringende constructie zoals een &lt;xref:System.Xaml.XamlWriter&gt;.&lt;/xref:System.Xaml.XamlWriter&gt; &lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you can pass the &lt;xref:System.Xaml.XamlSchemaContext&gt; reference through to all XAML type system calls that require a XAML schema context.</source>
          <target state="translated">U kunt in dit geval geeft de &lt;xref:System.Xaml.XamlSchemaContext&gt;via de verwijzing naar alle XAML type systeemaanroepen waarvoor een XAML-schemacontext.&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>One specific constructor, &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;, does not require a &lt;xref:System.Xaml.XamlSchemaContext&gt;.</source>
          <target state="translated">Een specifieke constructor &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;, hoeft u niet een &lt;xref:System.Xaml.XamlSchemaContext&gt;.&lt;/xref:System.Xaml.XamlSchemaContext&gt; &lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a XamlMember that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Echter, een XamlMember dat is opgesteld met de &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;handtekening retourneert <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.</source>
          <target state="translated">Voor een load-pad dat betrekking heeft op &lt;xref:System.Xaml.XamlObjectWriter&gt;, zo'n lid kan niet worden geschreven in een objectgrafiek.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the .NET Framework XAML services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant XamlMember reports <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Met behulp van de implementatie van de .NET Framework XAML-services de &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;aanroepen er wordt een &lt;xref:System.Xaml.XamlObjectWriterException&gt;wanneer de relevante XamlMember rapporteert <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a XamlMember that has a value of <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">U moet een XamlMember met een waarde niet samenstellen <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;tenzij uw implementatie de uitzonderingen van kan verwerken &lt;xref:System.Xaml.XamlObjectWriter&gt;, of u over andere manieren om aan te passen de &lt;xref:System.Xaml.XamlObjectWriter&gt;gedrag.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one or more of the  following might be true of your implementation:      -   The XAML schema context is available later.</source>
          <target state="translated">Bijvoorbeeld, een of meer van de volgende mogelijk geldt ook voor uw implementatie:-de XAML-schemacontext later beschikbaar is.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You use a member invoker pattern.</source>
          <target state="translated">-U een lid invoker-patroon gebruiken.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.</source>
          <target state="translated">-U opzettelijk overschrijven &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;in een aangepaste XAML-schrijver.&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met CLR-systeem &lt;xref:System.Reflection.EventInfo&gt;en een <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an event (event handler connection-point property).</source>
          <target state="translated">Deze constructor gebruiken als het lid een gebeurtenis (gebeurtenis-handler verbindingspunt eigenschap vertegenwoordigt).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.EventInfo&gt;die staat voor het lid van de gebeurtenis.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met CLR-systeem &lt;xref:System.Reflection.PropertyInfo&gt;en een <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents a property (and specifically is not an event handler connection).</source>
          <target state="translated">Deze constructor gebruiken als het lid een eigenschap vertegenwoordigt (en specifiek niet een gebeurtenis-handler verbinding is).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.PropertyInfo&gt;die staat voor een lid van de eigenschap.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using CLR type system &lt;xref:System.Reflection.EventInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met CLR-systeem &lt;xref:System.Reflection.EventInfo&gt;en een <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, waaronder <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informatie.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an event (or an event handler connection-point property).</source>
          <target state="translated">Deze constructor gebruiken als het lid vertegenwoordigt een gebeurtenis (of een gebeurtenis-handler verbindingspunt eigenschap).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.EventInfo&gt; that represents the event member.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.EventInfo&gt;die staat voor het lid van de gebeurtenis.&lt;/xref:System.Reflection.EventInfo&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time reflection calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die verantwoordelijk is voor runtime-reflectie roept tegen de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using reflection &lt;xref:System.Reflection.PropertyInfo&gt; and a <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met reflectie &lt;xref:System.Reflection.PropertyInfo&gt;en een <bpt id="p2">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, waaronder <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informatie.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor only if the member represents a property and if it is not an event handler connection.</source>
          <target state="translated">Gebruik deze constructor alleen als het lid een eigenschap vertegenwoordigt en als het is niet een gebeurtenis-handler-verbinding.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.PropertyInfo&gt; that represents the property member.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.PropertyInfo&gt;die staat voor een lid van de eigenschap.&lt;/xref:System.Reflection.PropertyInfo&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable event.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse voor een <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die staat voor een koppelbare gebeurtenis.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Deze constructor gebruiken als het lid een gebeurtenis toevoegbaar lid vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The string name of the attachable event.</source>
          <target state="translated">De naam van de koppelbare gebeurtenis.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> methode voor het koppelbare lid van de back-ups implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a string name and declaring <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse met behulp van een string-naam en de declarerende <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> informatie.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is constructed with this signature has significant limitations; see Remarks.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die is samengesteld met deze handtekening heeft aanzienlijke beperkingen; Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the XamlMember signature returns <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Een &lt;xref:System.Xaml.XamlMember&gt;die is gemaakt met de handtekening retourneert XamlMember <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, such a member cannot be written into an object graph.</source>
          <target state="translated">Voor een load-pad dat betrekking heeft op &lt;xref:System.Xaml.XamlObjectWriter&gt;, zo'n lid kan niet worden geschreven in een objectgrafiek.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the .NET Framework XAML Services implementation, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Met de .NET Framework XAML Services-implementatie, de &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;aanroepen er wordt een &lt;xref:System.Xaml.XamlObjectWriterException&gt;wanneer de desbetreffende &lt;xref:System.Xaml.XamlMember&gt;rapporten <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a &lt;xref:System.Xaml.XamlMember&gt; with &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;<ph id="ph1">`true`</ph> unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">U moet geen maken een &lt;xref:System.Xaml.XamlMember&gt;met &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph> tenzij uw implementatie de uitzonderingen van kan verwerken &lt;xref:System.Xaml.XamlObjectWriter&gt;, of u over andere manieren om aan te passen de &lt;xref:System.Xaml.XamlObjectWriter&gt;gedrag.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one or more of the following might be true of your implementation:      -   The XAML schema context is available later.</source>
          <target state="translated">Bijvoorbeeld, een of meer van de volgende mogelijk geldt ook voor uw implementatie:-de XAML-schemacontext later beschikbaar is.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You use a member invoker pattern.</source>
          <target state="translated">-U een lid invoker-patroon gebruiken.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You deliberately override &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; in a custom XAML writer.</source>
          <target state="translated">-U opzettelijk overschrijven &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;in een aangepaste XAML-schrijver.&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The string name of the member.</source>
          <target state="translated">De naam van het lid.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the declaring type.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor het declarerende type.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the member is attachable; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om aan te geven dat het lid koppelbare; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable property.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse voor een <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die staat voor een toevoegbare eigenschap.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable property.</source>
          <target state="translated">Deze constructor gebruiken als het lid een toevoegbare eigenschap vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The string name of the attachable property.</source>
          <target state="translated">De naam van de toevoegbare eigenschap.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de accessor van het koppelbare lid een back-implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de accessor van het koppelbare lid een back-implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable event, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse voor een <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die staat voor een koppelbare gebeurtenis, met inbegrip van <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informatie.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable event member.</source>
          <target state="translated">Deze constructor gebruiken als het lid een gebeurtenis toevoegbaar lid vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The string name of the attachable event.</source>
          <target state="translated">De naam van de koppelbare gebeurtenis.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de handler <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> methode voor het koppelbare lid van de back-ups implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that represents an attachable property, including <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse voor een <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> die staat voor een toevoegbare eigenschap met inbegrip van <bpt id="p3">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> informatie.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor if the member represents an attachable property member.</source>
          <target state="translated">Deze constructor gebruiken als het lid een toevoegbare eigenschap lid vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The string name of the attachable property.</source>
          <target state="translated">De naam van de toevoegbare eigenschap.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de accessor van het koppelbare lid een back-implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The CLR type system &lt;xref:System.Reflection.MethodInfo&gt; for the <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor of the attachable member's backing implementation.</source>
          <target state="translated">Het CLR-systeem &lt;xref:System.Reflection.MethodInfo&gt;voor de <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de accessor van het koppelbare lid een back-implementatie.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> context that qualifies the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> context die in aanmerking het lid komt.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time invocation calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die verantwoordelijk is voor het aanroepen van de runtime-aanroepen op basis van de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor het type dat het lid dat is gekoppeld aan dit verklaart <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is typically set during initialization and is usually not <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Deze waarde wordt meestal ingesteld tijdens de initialisatie en is meestal niet <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  DeclaringType information can be passed in by constructors for initialization.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; DeclaringType informatie kan worden doorgegeven aan door een constructors voor initialisatie.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling directly into base constructors, initialization for &lt;xref:System.Xaml.XamlMember&gt; derived classes can omit some of the value-checks that are made in the base class.</source>
          <target state="translated">Door aanroepen rechtstreeks in base constructors, de initialisatie van de &lt;xref:System.Xaml.XamlMember&gt;afgeleide klassen kunnen weglaten een deel van de waarde-controles die zijn aangebracht in de basis-klasse.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</source>
          <target state="translated">De initialisatie van de afgeleide kunt daarom de gerapporteerde type lid zijn van het relatie-informatie van een XAML-lid wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-declaratie.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of declaring type information, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van het declarerende type-informatie.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the type that declares the member that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor het type dat het lid dat is gekoppeld aan dit verklaart <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Haalt een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -object, dat wordt gebruikt voor uitgesteld laden van XAML objecten gedeclareerd.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling DeferringLoader invokes &lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van DeferringLoader roept &lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit gebeurt in gevallen waarbij de eerste interne reflectie logica niet al de informatie ingesteld.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -beperking voor de algemene.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Hiermee haalt u een lijst van <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>These report the members where dependency relationships for initialization order exist relative to this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Deze leden waar afhankelijkheidsrelaties voor van de initialisatievolgorde ten opzichte van dit bestaan rapporteren <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling DependsOn invokes &lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van DependsOn roept &lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in cases where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit gebeurt in gevallen waarbij de eerste interne reflectie logica niet al de informatie ingesteld.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern can be applied to object model cases that deliberately contradict a general XAML rule.</source>
          <target state="translated">De <ph id="ph1">`DependsOn`</ph> patroon kan worden toegepast op objectmodel cases aan dat opzettelijk in tegenspraak met een algemene XAML-regel.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</source>
          <target state="translated">De algemene XAML-regel is dat de leden van een type dat niet worden doorgegeven als tekst initialisatie (of door een fabrieksmethode in XAML 2009) moet kunnen worden toegewezen in willekeurige volgorde.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>By applying a <ph id="ph1">`DependsOn`</ph> pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</source>
          <target state="translated">Door het toepassen van een <ph id="ph1">`DependsOn`</ph> patroon aan een lid, kunt u opdracht geven XAML schrijvers altijd verwerken van het lid waarnaar wordt verwezen voordat dit lid.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</source>
          <target state="translated">Dit patroon in situaties waar de waarde van het huidige lid vereist context of andere informatie die is alleen beschikbaar als het andere lid is ingesteld, kunt u toepassen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DependsOn`</ph> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</source>
          <target state="translated">De <ph id="ph1">`DependsOn`</ph> patroon moet zorgvuldig worden toegepast en gereserveerd voor de eigenschap scenario's waar het een architectuur doel fungeert.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Large numbers of dependencies have the potential to slow down XAML processing.</source>
          <target state="translated">Groot aantal afhankelijkheden hebben de mogelijkheid XAML verwerking vertragen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</source>
          <target state="translated">Ook is het mogelijk voor het produceren van circulaire afhankelijkheden in dat geval het gedrag van de verwerking van XAML is niet gedefinieerd.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example <ph id="ph1">`DependsOn`</ph> scenarios from WPF include certain properties on &lt;xref:System.Windows.Controls.ControlTemplate&gt; and &lt;xref:System.Windows.DataTemplate&gt;, on &lt;xref:System.Windows.Trigger&gt;, and on &lt;xref:System.Windows.Setter&gt;.</source>
          <target state="translated">Voorbeeld <ph id="ph1">`DependsOn`</ph> scenario's van WPF zijn bepaalde eigenschappen op &lt;xref:System.Windows.Controls.ControlTemplate&gt;en &lt;xref:System.Windows.DataTemplate&gt;op &lt;xref:System.Windows.Trigger&gt;, en op &lt;xref:System.Windows.Setter&gt;.&lt;/xref:System.Windows.Setter&gt; &lt;/xref:System.Windows.Trigger&gt; &lt;/xref:System.Windows.DataTemplate&gt; &lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Hiermee wordt aangegeven of het huidige object gelijk aan een ander object is.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The object to compare with this object.</source>
          <target state="translated">Het object dat moet worden vergeleken met dit object.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het huidige object is gelijk aan de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> parameter; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
          <target state="translated">Hiermee wordt aangegeven of het huidige object gelijk aan een ander object van hetzelfde type is.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An object to compare with this object.</source>
          <target state="translated">Een object met dit object moet worden vergeleken.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het huidige object is gelijk aan de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept> parameter; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Retourneert de hash-code voor dit object.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An integer hash code.</source>
          <target state="translated">Een geheel getal-hash-code.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">Retourneert een lijst van XAML-naamruimten, waar dit XAML-lid kan bestaan.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt; call result from the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; that is associated with this &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert het &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt;resultaat van de &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;dat is gekoppeld aan deze &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt; aanroepen&lt;/xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A list of XAML namespace identifiers as strings.</source>
          <target state="translated">Een lijst van XAML-naamruimte-id als tekenreeksen.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Invoker`</ph> pattern is an advanced XAML type system extension technique.</source>
          <target state="translated">De <ph id="ph1">`Invoker`</ph> patroon is een techniek system-extensie voor geavanceerde XAML type.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Invoker`</ph> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</source>
          <target state="translated">De <ph id="ph1">`Invoker`</ph> patroon biedt een manier om het gedrag van verschillende schema type toewijzing, terwijl u ook XAML typedefinities systeem van .NET Framework XAML Services invoeren.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; override returns <ph id="ph1">`null`</ph>, or if the default implementation returns <ph id="ph2">`null`</ph> because it lacks the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; for this &lt;xref:System.Xaml.XamlMember&gt;, the Invoker property returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Als een &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;overschrijven retourneert <ph id="ph1">`null`</ph>, of als de standaardimplementatie retourneert <ph id="ph2">`null`</ph> omdat het ontbreekt &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;voor deze &lt;xref:System.Xaml.XamlMember&gt;wordt de Invoker-eigenschap &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; is the default.</source>
          <target state="translated">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;de standaardwaarde is.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <ph id="ph1">`Invoker`</ph> patterns are passed for construction of XAML type system entities.</source>
          <target state="translated">Dit geldt voor de meeste bewerkingen die gebruikmaken van .NET Framework XAML-Services en de standaardcontext XAML-schema en waar geen specifieke overschrijven <ph id="ph1">`Invoker`</ph> patronen voor bouw van XAML type systeementiteiten worden doorgegeven.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Invoker invokes &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van Invoker roept &lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reported as an ambient property.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wordt gerapporteerd als ambient eigenschap.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsAmbient invokes &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsAmbient roept &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit gebeurt in implementaties waarbij de eerste interne reflectie logica niet al de informatie ingesteld.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">Controleren op omgevingseigenschappen is meestal deel uitmaken van XAML verwerking logica om ervoor te zorgen dat objecten en waarden die afhankelijk van de ambient gebruik voor type kwalificatie zijn correct kunnen werken.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">De API's van .NET Framework XAML Services en de standaardcontext XAML-schema vult deze waarde op basis van afschrijving &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt; uses this existing &lt;xref:System.Windows.Markup.AmbientAttribute&gt; technique, and it returns <ph id="ph1">`true`</ph> if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member declaration.</source>
          <target state="translated">De standaardimplementatie van &lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;gebruikt deze bestaande &lt;xref:System.Windows.Markup.AmbientAttribute&gt;techniek en retourneert <ph id="ph1">`true`</ph> als &lt;xref:System.Windows.Markup.AmbientAttribute&gt;bestaat op de declaratie van een lid.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is found on members of several WPF types, which include &lt;xref:System.Windows.Application&gt;, &lt;xref:System.Windows.Setter&gt;, and &lt;xref:System.Windows.Style&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;is gevonden op de leden van de diverse WPF-typen, waaronder &lt;xref:System.Windows.Application&gt;, &lt;xref:System.Windows.Setter&gt;, en &lt;xref:System.Windows.Style&gt;.&lt;/xref:System.Windows.Style&gt; &lt;/xref:System.Windows.Setter&gt; &lt;/xref:System.Windows.Application&gt;&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also found on the &lt;xref:System.Windows.ResourceDictionary&gt; type, which connotes that any member that uses &lt;xref:System.Windows.ResourceDictionary&gt; as its type should be considered ambient even if the member is not specifically attributed.</source>
          <target state="translated">Ook is gevonden in de &lt;xref:System.Windows.ResourceDictionary&gt;type dat alle leden die gebruikmaakt van DV &lt;xref:System.Windows.ResourceDictionary&gt;aangezien het type moet worden beschouwd als ambient zelfs als het lid niet specifiek wordt toegeschreven.&lt;/xref:System.Windows.ResourceDictionary&gt; &lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is reported as an ambient property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is gerapporteerd als ambient eigenschap, anders, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is an attachable member.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> een koppelbare lid is.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsAttachable value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">De waarde IsAttachable is op basis van welke constructor is gebruikt voor het opstellen van een &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt; ge√Ønitialiseerd</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is an attachable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> een koppelbare lid is; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a XAML directive.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is van een XAML-instructie.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsDirective value is initialized based on which constructor was used to construct a &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">De waarde IsDirective is op basis van welke constructor is gebruikt voor het opstellen van een &lt;xref:System.Xaml.XamlMember&gt;.&lt;/xref:System.Xaml.XamlMember&gt; ge√Ønitialiseerd</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base &lt;xref:System.Xaml.XamlMember&gt; constructors initialize so that IsDirective is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">De base &lt;xref:System.Xaml.XamlMember&gt;constructors initialiseren zodat IsDirective <ph id="ph1">`false`</ph>.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the &lt;xref:System.Xaml.XamlDirective&gt; class (a &lt;xref:System.Xaml.XamlMember&gt; derived class) initializes so that IsDirective is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Echter, de &lt;xref:System.Xaml.XamlDirective&gt;klasse (een &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse) wordt ge√Ønitialiseerd zodat IsDirective <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to report IsDirective as <ph id="ph1">`true`</ph> to callers of a custom XAML schema class for XAML members, make sure you derive from &lt;xref:System.Xaml.XamlDirective&gt; because that is the only way to enable that behavior.</source>
          <target state="translated">Als u wilt rapporteren IsDirective als <ph id="ph1">`true`</ph> voor aanroepers van een aangepaste XAML-schemaklasse voor leden van de XAML, zorg ervoor dat u afgeleid van &lt;xref:System.Xaml.XamlDirective&gt;omdat dit de enige manier om in te schakelen dat gedrag.&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a XAML directive; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is van een XAML richtlijn, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an event member.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid van de gebeurtenis.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsEvent invokes &lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsEvent roept &lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een gebeurtenis; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized with a valid <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> string as its &lt;xref:System.Xaml.XamlMember.Name*&gt;.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is ge√Ønitialiseerd met een geldig <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tekenreeks als de &lt;xref:System.Xaml.XamlMember.Name*&gt;.&lt;/xref:System.Xaml.XamlMember.Name*&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is initialized with a valid <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> string; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is ge√Ønitialiseerd met een geldig <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> reeks; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a read-only member.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een alleen-lezen-lid.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsReadOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsReadOnly roept &lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a read-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een alleen-lezen-lid; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member with a callable public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid met een aanroepbare openbare <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> accessor.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsReadPublic value checks whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public.</source>
          <target state="translated">De IsReadPublic waarde controleert of de &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;openbaar.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id="ph1">`get`</ph> accessor is not callable in a practical way, and IsReadPublic returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Als &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;niet-openbare, is de <ph id="ph1">`get`</ph> accessor kan niet worden aangeroepen in de praktijk en IsReadPublic retourneert <ph id="ph2">`false`</ph>.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsReadPublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsReadPublic roept &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt; method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; De &lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;methode virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a callable public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een aanroepbare openbare <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> accessor; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Haalt een waarde die aangeeft of het lid kan niet worden omgezet door het maken van een back-systeem dat wordt gebruikt voor het omzetten van het type en lid.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlMember&gt; that is constructed with the &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; signature returns <ph id="ph1">`true`</ph> for IsUnknown.</source>
          <target state="translated">Een &lt;xref:System.Xaml.XamlMember&gt;die is gemaakt met de &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;handtekening retourneert <ph id="ph1">`true`</ph> voor IsUnknown.&lt;/xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, a &lt;xref:System.Xaml.XamlMember&gt; with <ph id="ph1">`true`</ph> for IsUnknown cannot be written into an object graph.</source>
          <target state="translated">Voor een load-pad dat betrekking heeft op &lt;xref:System.Xaml.XamlObjectWriter&gt;, een &lt;xref:System.Xaml.XamlMember&gt;met <ph id="ph1">`true`</ph> voor IsUnknown kan niet worden geschreven in een objectgrafiek.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the default implementations in .NET Framework XAML Services APIs, the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlMember&gt; reports <ph id="ph1">`true`</ph> for IsUnknown.</source>
          <target state="translated">Onder de standaard-implementaties in .NET Framework XAML Services API's, de &lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;aanroepen er wordt een &lt;xref:System.Xaml.XamlObjectWriterException&gt;wanneer de desbetreffende &lt;xref:System.Xaml.XamlMember&gt;rapporten <ph id="ph1">`true`</ph> voor IsUnknown.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not construct a &lt;xref:System.Xaml.XamlMember&gt; that has a value of <ph id="ph1">`true`</ph> for IsUnknown unless your implementation can handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior.</source>
          <target state="translated">U moet geen maken een &lt;xref:System.Xaml.XamlMember&gt;die een waarde heeft van <ph id="ph1">`true`</ph> voor IsUnknown tenzij uw implementatie de uitzonderingen van kan verwerken &lt;xref:System.Xaml.XamlObjectWriter&gt;, of u over andere manieren om aan te passen de &lt;xref:System.Xaml.XamlObjectWriter&gt;gedrag.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsUnknown invokes &lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsUnknown roept &lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is not resolvable; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the member is resolvable.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het lid kan niet worden omgezet; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als het lid kan worden omgezet.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a write-only member.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid van de alleen-schrijven.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsWriteOnly invokes &lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsWriteOnly roept &lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een alleen-schrijven lid; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a callable public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid is van een aanroepbare openbare <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> accessor.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IsWritePublic value considers whether the &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is public as part of the determination.</source>
          <target state="translated">De waarde IsWritePublic acht of de &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;openbaar als onderdeel van de bepaling.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; is nonpublic, the <ph id="ph1">`set`</ph> accessor is not callable in a practical way, and IsWritePublic returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Als &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;niet-openbare, is de <ph id="ph1">`set`</ph> accessor kan niet worden aangeroepen in de praktijk en IsWritePublic retourneert <ph id="ph2">`false`</ph>.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling IsWritePublic invokes &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van IsWritePublic roept &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt; method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; De &lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;methode virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a callable public <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een aanroepbare openbare <bpt id="p3">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> accessor; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, returns an <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Wanneer dit wordt ge√Ømplementeerd in een afgeleide klasse, retourneert een <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</source>
          <target state="translated">Negeer deze methode voor de interne reflectie met een andere manier om CLR kenmerkwaarden te verkrijgen.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to &lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;.</source>
          <target state="translated">In het ontbreken van een onderdrukking gebruikt de interne routereflector typische CLR reflectie logica zoals aanroepen naar &lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;.&lt;/xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retourneert de standaardimplementatie <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for deferred loading of XAML declared objects.</source>
          <target state="translated">Retourneert een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -object, dat wordt gebruikt voor uitgesteld laden van XAML objecten gedeclareerd.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; property.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van haalt de &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;eigenschap.&lt;/xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informatie.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns an object either by reading &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; or using a &lt;xref:System.Xaml.XamlDeferringLoader&gt; from the declaring type.</source>
          <target state="translated">De standaardimplementatie retourneert een object door te lezen &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;of met behulp van een &lt;xref:System.Xaml.XamlDeferringLoader&gt;van het declarerende type.&lt;/xref:System.Xaml.XamlDeferringLoader&gt; &lt;/xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither object is available, this method might return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als geen van beide object beschikbaar is, deze methode kan retourneren <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that has a <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> die heeft een <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -beperking voor de algemene.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Retourneert een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Items in the list report the members where dependency relationships for initialization order exist relative to this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Items in de lijst de leden waar afhankelijkheidsrelaties voor van de initialisatievolgorde bestaan ten opzichte van dit rapport <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; property.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van haalt de &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;eigenschap.&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informatie.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WPF XAML reader and writer implementations attribute this case with &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;.</source>
          <target state="translated">De WPF XAML-lezer en -schrijver implementaties kenmerk in dit geval is bij de &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses this existing &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; technique.</source>
          <target state="translated">De standaardimplementatie gebruikt deze bestaande &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;techniek.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not using &lt;xref:System.Windows.Markup.DependsOnAttribute&gt; for this purpose and intend to replace that technique for indicating property processing order with your own technique.</source>
          <target state="translated">Deze methode overschrijven als u geen gebruikmaakt van &lt;xref:System.Windows.Markup.DependsOnAttribute&gt;voor dit doel en wilt vervangen door deze techniek voor die eigenschap verwerkingsvolgorde met uw eigen techniek aangeeft.&lt;/xref:System.Windows.Markup.DependsOnAttribute&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</source>
          <target state="translated">Als u niet van plan bent voor de ondersteuning van een eigenschap verwerkingsvolgorde, kunt u de standaardimplementatie gebruiken omdat het geen resultaten oplevert waarvoor geschikt is.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list is read-only.</source>
          <target state="translated">De lijst is alleen-lezen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">Een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked by calls to &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation does not require that a &lt;xref:System.Xaml.XamlMember&gt; be constructed by using one of the constructors that pass an initial &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.</source>
          <target state="translated">De standaardimplementatie vereist niet dat een &lt;xref:System.Xaml.XamlMember&gt;worden geconstrueerd met een van de constructors die een eerste &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; doorgeven&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; value must exist for the &lt;xref:System.Xaml.XamlMember&gt;; otherwise, the default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Echter, een &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;waarde moet aanwezig zijn voor de &lt;xref:System.Xaml.XamlMember&gt;; anders wordt de standaardimplementatie retourneert <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you also derive from &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; and intend to return the derived class.</source>
          <target state="translated">Deze methode overschrijven als u ook uit &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;en u van plan bent te retourneren van de afgeleide klasse afleiden.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you return <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt; returns &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; to callers.</source>
          <target state="translated">Als u terugkeert <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;retourneert &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;voor aanroepers.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlMember.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reported as an ambient property.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> wordt gerapporteerd als ambient eigenschap.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked by internal calls that check for ambient XAML property information.</source>
          <target state="translated">Deze methode wordt aangeroepen door interne-aanroepen waarmee wordt gecontroleerd op de informatie over de eigenschappen van XAML.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</source>
          <target state="translated">Gedrag Ambient eigenschap wordt in het openbare API-gedrag van XAML en XAML schrijfprogramma verwerkt.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</source>
          <target state="translated">De interne-aanroepen die verwijzen naar LookupIsAmbient uitmaken meestal deel van XAML verwerking logica om ervoor te zorgen dat objecten en waarden die afhankelijk van de ambient gebruik voor type kwalificatie zijn correct kunnen werken.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</source>
          <target state="translated">De standaardimplementatie van .NET Framework XAML Services maakt gebruik van CLR-kenmerk opgeven om deze gegevens via reflectie verkrijgen via een back-typen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the default implementation checks for &lt;xref:System.Windows.Markup.AmbientAttribute&gt; and returns <ph id="ph1">`true`</ph> for LookupIsAmbient if &lt;xref:System.Windows.Markup.AmbientAttribute&gt; exists on a member definition.</source>
          <target state="translated">In het bijzonder de standaardimplementatie controleert &lt;xref:System.Windows.Markup.AmbientAttribute&gt;en retourneert <ph id="ph1">`true`</ph> voor LookupIsAmbient als &lt;xref:System.Windows.Markup.AmbientAttribute&gt;bestaat op de liddefinitie van een.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not using &lt;xref:System.Windows.Markup.AmbientAttribute&gt; for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</source>
          <target state="translated">Deze methode overschrijven als u geen gebruikmaakt van &lt;xref:System.Windows.Markup.AmbientAttribute&gt;voor dit doel en wilt vervangen door deze techniek omgevingseigenschappen XAML met uw eigen techniek aangeeft.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example APIs from WPF that attribute with &lt;xref:System.Windows.Markup.AmbientAttribute&gt; are &lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Voorbeeld van API's van WPF dat kenmerk met &lt;xref:System.Windows.Markup.AmbientAttribute&gt;zijn &lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt;en &lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as an ambient property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>voor het rapporteren van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als een ambient eigenschap; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an event.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een gebeurtenis.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation checks whether &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; is of type &lt;xref:System.Reflection.EventInfo&gt;, and if it is, returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">De standaardcontroles voor implementatie of &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;is van het type &lt;xref:System.Reflection.EventInfo&gt;, en als dit het geval is, retourneert <ph id="ph1">`true`</ph>.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsEvent%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u specifieke metagegevens die kan worden ge√Ønterpreteerd om te bepalen van XAML hebt typ system verklaringen op basis van per aanvraag.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report that this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an event; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>om te rapporteren dat deze <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een gebeurtenis; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an intended read-only property.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> de alleen-lezen eigenschap van een beoogde vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists, but a public <ph id="ph2">`set`</ph> accessor does not exist for it, as determined by internal reflection.</source>
          <target state="translated">Retourneert de standaardimplementatie <ph id="ph1">`true`</ph> als &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;bestaat, maar een openbare <ph id="ph2">`set`</ph> accessor bestaat niet voor, zoals wordt bepaald door de interne reflectie.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsReadOnly%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u specifieke metagegevens die kan worden ge√Ønterpreteerd om te bepalen van XAML hebt typ system verklaringen op basis van per aanvraag.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to report this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as an intended read-only property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>voor het rapporteren van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als een beoogde alleen-lezen eigenschap; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een eigenschap met een openbare <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> accessor.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results based either on internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;, processing in that order.</source>
          <target state="translated">De standaardimplementatie retourneert resultaten die zijn gebaseerd op interne reflectie of de negatie van &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;, verwerking in die volgorde.&lt;/xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>LookupIsReadPublic returns whether the member itself is public; it returns <ph id="ph1">`true`</ph> for a public member on a nonpublic declaring type.</source>
          <target state="translated">LookupIsReadPublic retourneert of het lid zelf openbare; Deze retourneert <ph id="ph1">`true`</ph> voor een openbaar lid op een nonpublic declarerend type.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt; instead, if you also want to consider the visibility of the declaring type.</source>
          <target state="translated">Gebruik &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;in plaats daarvan als u ook wilt rekening houden met de zichtbaarheid van het declarerende type.&lt;/xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsReadPublic%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The LookupIsReadPublic method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; De LookupIsReadPublic methode virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een eigenschap met een openbare <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> accessor; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid dat kan niet worden omgezet door het maken van een back-systeem dat wordt gebruikt voor het omzetten van het type en lid.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.</source>
          <target state="translated">Deze methode worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results that are based on either internal reflection or checking for a <ph id="ph1">`null`</ph> value of &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, processing in that order.</source>
          <target state="translated">De standaardimplementatie retourneert resultaten die op basis van de interne reflectie of controleren of voor een <ph id="ph1">`null`</ph> waarde van &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, verwerking in die volgorde.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a non-resolvable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een niet-omgezette lid; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor but not a public <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid is van een openbare <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> accessor maar niet in een openbare <bpt id="p3">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> accessor.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if an &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; exists that has a public <ph id="ph2">`set`</ph> accessor and a nonpublic <ph id="ph3">`get`</ph> accessor, as determined by internal reflection.</source>
          <target state="translated">Retourneert de standaardimplementatie <ph id="ph1">`true`</ph> als een &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;bestaat waarvoor een openbare <ph id="ph2">`set`</ph> accessor en een nonpublic <ph id="ph3">`get`</ph> accessor, zoals wordt bepaald door de interne reflectie.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a write-only member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een alleen-schrijven lid; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that has a public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">Retourneert of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een lid is van een openbare <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> accessor.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns results based  either internal reflection or the negation of &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;, processing in that order.</source>
          <target state="translated">De standaardimplementatie retourneert resultaten op basis van interne reflectie of de ontkenning van &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;, verwerking in die volgorde.&lt;/xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;.&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The LookupIsWritePublic method is virtual and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; De LookupIsWritePublic methode virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</source>
          <target state="translated">De onderdrukking loopt het risico te wijzigen (met kwaadaardige bedoelingen of anderszins) de gerapporteerde toegang tot informatie van een XAML-lid dat niet meer worden uitgelijnd op een verwachte manier met het type toegang systeemgegevens van de onderliggende CLR-declaratie.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of access levels, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van toegangsniveaus.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a writable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een beschrijfbare lid; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type where the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Retourneert de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type waar de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> kan bestaan.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation distinguishes between attachable and non-attachable members.</source>
          <target state="translated">De standaardimplementatie wordt onderscheid gemaakt tussen koppelbaar en niet-toevoegbaar lid.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For non-attachable members, LookupTargetType always returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.</source>
          <target state="translated">Voor niet-toevoegbaar lid retourneert LookupTargetType altijd &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attachable members, LookupTargetType returns a result based on examining the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; accessor parameter type and interprets that type based on XAML schema context.</source>
          <target state="translated">Voor koppelbare leden LookupTargetType een resultaat op basis van het onderzoek van het &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;type accessor-parameter en interpreteert dat type op basis van XAML schemacontext.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.TargetType%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The type where the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Het type waar de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan bestaan.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">Retourneert de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type dat wordt gebruikt door het lid.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlMember.Type%2A&gt; to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; information.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlMember.Type%2A&gt;om te retourneren van een waarde die verschilt van de waarde die is ingeschakeld door de interne reflectie standaard, en als u ook aangepaste aanbiedt &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;informatie.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses different code paths and conceptual meanings for the returned &lt;xref:System.Xaml.XamlType&gt; that is based on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van verschillende codepaden en conceptuele betekenis voor de geretourneerde &lt;xref:System.Xaml.XamlType&gt;dat is gebaseerd op of dit &lt;xref:System.Xaml.XamlMember&gt;vertegenwoordigt een eigenschap, methode of gebeurtenis.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.</source>
          <target state="translated">-Voor een eigenschap, de geretourneerde &lt;xref:System.Xaml.XamlType&gt;is van het type dat de eigenschap wordt ingesteld of wordt geretourneerd door de eigenschap.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">-Voor een gebeurtenis, de geretourneerde &lt;xref:System.Xaml.XamlType&gt;is het vereiste Gebeurtenisregistratietype (een gemachtigde in een CLR-implementatie).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type.</source>
          <target state="translated">-Voor een methode &lt;xref:System.Xaml.XamlType&gt;is het retourtype.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</source>
          <target state="translated">Schemacontext XAML wordt in elk geval gebruikt voor het evalueren van het type van de XAML van het onderliggende type.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.Type%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type dat wordt gebruikt door het lid.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Returns a type converter implementation that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een type converter implementatie die is gekoppeld aan dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de volgende logica en verwerkingsvolgorde: - als kenmerk opgeven op het lidniveau van het bestaat (&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;), de kenmerk-informatie wordt gebruikt voor een aanroep van &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;tegen de XAML-schemacontext.&lt;/xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; &lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a type converter that is associated with the type is returned.</source>
          <target state="translated">-Als &lt;xref:System.Xaml.XamlMember.Type%2A&gt;is geldig, een type-conversieprogramma die is gekoppeld aan het type wordt geretourneerd.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the member is an event, an event-specific type converter is returned.</source>
          <target state="translated">-Als het lid een gebeurtenis is, wordt een gebeurtenis-specifieke type-conversieprogramma geretourneerd.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;.&lt;/xref:System.Xaml.XamlMember.TypeConverter%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instance with <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> exemplaar met <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking; of <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> accessor die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation interprets the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; property as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id="ph1">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">De standaardimplementatie interpreteert de &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;eigenschap &lt;xref:System.Reflection.PropertyInfo&gt;en retourneert de waarde van &lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt;(met de parameter die is ingesteld op <ph id="ph1">`true`</ph>), wat betekent dat de geretourneerde methode mag niet-openbare.&lt;/xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can result in <ph id="ph1">`null`</ph> for certain cases.</source>
          <target state="translated">Dit gedrag kan leiden tot <ph id="ph1">`null`</ph> voor bepaalde gevallen.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>including cases where no associated accessor exists or the member is not a property.</source>
          <target state="translated">inclusief gevallen waarbij geen bijbehorende accessor bestaat en of het lid is geen eigenschap.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from the &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt; property on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van de &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;eigenschap op een gekoppelde &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; krijgt&lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement LookupUnderlyingGetter, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.</source>
          <target state="translated">Zorg ervoor dat voor het implementeren van LookupUnderlyingGetter, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, en &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;zodat deze alle gecorreleerde resultaten retourneren.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodInfo&gt;voor de bijbehorende <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> accessor; of <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Returns a CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een CLR-systeem &lt;xref:System.Reflection.MemberInfo&gt;dat is gekoppeld aan dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns the underlying member information, which is based on construction.</source>
          <target state="translated">De standaardimplementatie retourneert het onderliggende lid informatie die is gebaseerd op de constructie.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Reflection.MemberInfo&gt; object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als de &lt;xref:System.Reflection.MemberInfo&gt;-object is gemaakt met een handtekening die niet genoeg informatie biedt voor het instellen van het onderliggende lid, retourneert deze methode <ph id="ph1">`null`</ph>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an underlying member was set during construction, you should not need to call this method.</source>
          <target state="translated">Als een onderliggende lid was ingesteld tijdens de constructiefase, hoeft u niet aan deze methode niet aanroepen.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, and LookupUnderlyingMember so that they all return correlated results.</source>
          <target state="translated">Zorg ervoor dat voor het implementeren van &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, &lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;, en LookupUnderlyingMember zodat deze alle retourneren resultaten gecorreleerde.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A CLR type system &lt;xref:System.Reflection.MemberInfo&gt; object that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een system CLR-type &lt;xref:System.Reflection.MemberInfo&gt;-object dat is gekoppeld aan dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; of <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> accessor die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation interprets &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt; as &lt;xref:System.Reflection.PropertyInfo&gt; and returns the value of &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt; (with the parameter set to <ph id="ph1">`true`</ph>), which means that the returned method can be nonpublic.</source>
          <target state="translated">De standaardimplementatie interpreteert &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;Als &lt;xref:System.Reflection.PropertyInfo&gt;en retourneert de waarde van &lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt;(met de parameter die is ingesteld op <ph id="ph1">`true`</ph>), wat betekent dat de geretourneerde methode mag niet-openbare.&lt;/xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can result in <ph id="ph1">`null`</ph> for certain cases, including cases where there is no such accessor, or the member is not a property.</source>
          <target state="translated">Dit kan leiden tot <ph id="ph1">`null`</ph> voor bepaalde gevallen, met inbegrip van gevallen waarin er is geen dergelijke accessor of het lid is geen eigenschap.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt; on an associated &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;.Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;op een gekoppelde &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;haalt. Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt; &lt;/xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure to implement &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, LookupUnderlyingSetter, and &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; so that they all return correlated results.</source>
          <target state="translated">Zorg ervoor dat voor het implementeren van &lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;, LookupUnderlyingSetter, en &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;zodat deze alle gecorreleerde resultaten retourneren.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodInfo&gt; for the associated <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De &lt;xref:System.Reflection.MethodInfo&gt;voor de bijbehorende <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> accessor; of <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Returns a value serializer implementation that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een waarde serializer-implementatie die is gekoppeld aan dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the following logic and processing order:      -   If attributing exists at the member level (&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de volgende logica en verwerkingsvolgorde: - als kenmerk opgeven op het lidniveau van het bestaat (&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;), de kenmerk-informatie wordt gebruikt voor een aanroep van &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;tegen de XAML-schemacontext.&lt;/xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; &lt;/xref:System.Windows.Markup.ValueSerializerAttribute&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.Xaml.XamlMember.Type%2A&gt; is valid, a value converter that is associated with the type is returned.</source>
          <target state="translated">-Als &lt;xref:System.Xaml.XamlMember.Type%2A&gt;is geldig, een waardeconversieprogramma die is gekoppeld aan het type wordt geretourneerd.&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the previous conditions do not apply, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">-Als de vorige voorwaarden zijn niet van toepassing, <ph id="ph1">`null`</ph> wordt geretourneerd.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when a caller gets a value from &lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;.</source>
          <target state="translated">Deze methode wordt aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;.&lt;/xref:System.Xaml.XamlMember.ValueSerializer%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want to report uniform results for an entire &lt;xref:System.Xaml.XamlMember&gt; derived class, or if you have specialized metadata available to determine this on a per-case basis.</source>
          <target state="translated">Deze methode overschrijven als u rapporteren over uniform voor een hele wilt &lt;xref:System.Xaml.XamlMember&gt;afgeleide klasse, of als u de metagegevens beschikbaar zijn om dit te bepalen op basis van per aanvraag hebben speciale.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instance with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> exemplaar met &lt;xref:System.Windows.Markup.ValueSerializer&gt;beperking, of <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> name string that declares this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naam van de tekenreeks die dit verklaart <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is always set during construction.</source>
          <target state="translated">Deze waarde is altijd ingesteld tijdens de constructiefase.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors that are implemented by &lt;xref:System.Xaml.XamlMember&gt; typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <ph id="ph1">`null`</ph> or an empty string, if you are using default .NET Framework XAML Services implementations.</source>
          <target state="translated">De constructors die worden ge√Ømplementeerd door &lt;xref:System.Xaml.XamlMember&gt;meestal Veroorzaak een uitzondering als de naam van een initi√´le niet is opgegeven; daarom niet van plan bent deze eigenschap <ph id="ph1">`null`</ph> of een lege tekenreeks als u van standaard .NET Framework XAML Services implementaties gebruikmaakt.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and naming rules for CLR type and members are not an exact intersect.</source>
          <target state="translated"><bpt id="p1">[</bpt>XamlName grammatica<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> en naamgevingsregels voor CLR-type en de leden zijn niet een exacte intersect.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</source>
          <target state="translated">Het is mogelijk te declareren van de naam van een lid dat is toegestaan onder de CLR, maar niet geldig onder de naamgeving van XAML.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should avoid this situation if possible.</source>
          <target state="translated">Indien mogelijk moet u deze situatie niet.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> name string that declares this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> naam van de tekenreeks die dit verklaart <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have the same value.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten dezelfde waarde hebben.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlMember1</ph><ept id="p2">&lt;/code&gt;</ept> is the same as the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlMember2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de waarde van <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlMember1</ph> <ept id="p2">&lt;/code&gt;</ept> is hetzelfde als de waarde van <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlMember2</ph> <ept id="p3">&lt;/code&gt;</ept>; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have different values.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten hebben verschillende waarden.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlMember1</ph><ept id="p2">&lt;/code&gt;</ept> differs from the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlMember2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de waarde van <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlMember1</ph> <ept id="p2">&lt;/code&gt;</ept> verschilt van de waarde van <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlMember2</ph> <ept id="p3">&lt;/code&gt;</ept>; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Gets the single XAML namespace URI that identifies the primary XAML namespace for this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de √©√©n XAML-naamruimte-URI die de primaire XAML-naamruimte voor deze identificeert <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PreferredXamlNamespace property provides the same value as calling &lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt; and then getting the first value string from the returned list.</source>
          <target state="translated">De eigenschap PreferredXamlNamespace bevat dezelfde waarde als het aanroepen &lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;en vervolgens de eerste waardetekenreeks in de geretourneerde lijst.&lt;/xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</source>
          <target state="translated">De voorkeur XAML-naamruimte moet worden gebruikt bij het schrijven van het lid terug naar tekst of andere vorm van XAML-naamruimte-informatie wordt behouden.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The identifier for the primary XAML namespace for this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, as a string.</source>
          <target state="translated">De id voor de primaire XAML-naamruimte voor dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, als een tekenreeks.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value, which indicates how a visual designer should process the member.</source>
          <target state="translated">Haalt een <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarde waarmee wordt aangegeven hoe het lid moet worden verwerkt door een visuele ontwerper.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">Een waarde van de <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> opsomming.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type where the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type waar de <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> kan bestaan.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is different for attachable and non-attachable members.</source>
          <target state="translated">De geretourneerde waarde verschilt voor koppelbaar en niet-toevoegbaar lid.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For non-attachable members, TargetType returns &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.</source>
          <target state="translated">Voor niet-toevoegbaar lid retourneert TargetType &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;.&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>For attachable members, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; returns a result that is based on this logic:      -   If reflection cannot resolve a backing (&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph>), this method returns an internal constant that represents a generic object type.</source>
          <target state="translated">Voor koppelbare leden &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;retourneert een resultaat dat is gebaseerd op deze logica: - als een back-ups maken kan niet worden omgezet door reflectie (&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; <ph id="ph1">`true`</ph>), deze methode retourneert een interne constante met een algemeen object-type.&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the previous condition does not apply, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; is called.</source>
          <target state="translated">-Als de vorige voorwaarde niet van toepassing, &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;wordt aangeroepen.&lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a &lt;xref:System.Xaml.XamlType&gt; that is based on examining the methods that implement the <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> accessors.</source>
          <target state="translated">De standaardimplementatie retourneert een &lt;xref:System.Xaml.XamlType&gt;dat is gebaseerd op het onderzoeken van de methoden die worden ge√Ømplementeerd de <ph id="ph1">`get`</ph> en <ph id="ph2">`set`</ph> accessors.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class might override &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt; to use a different behavior such as other metadata forms that might report target types for attachable members.</source>
          <target state="translated">Een klasse overschrijven mogelijk &lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;gebruiken een ander gedrag, zoals andere metagegevens formulieren, die mogelijk rapporttypen doel voor koppelbare leden.&lt;/xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The type where the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">Het type waar de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> kan bestaan.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een tekenreeksrepresentatie van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.</source>
          <target state="translated">Deze implementatie retourneert &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een tekenreeksrepresentatie van dit <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type dat wordt gebruikt door het lid.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Type invokes &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van Type roept &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupType%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit gebeurt wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default behavior (no &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt; override), the returned &lt;xref:System.Xaml.XamlType&gt; can have different conceptual meanings.</source>
          <target state="translated">In het standaardgedrag (geen &lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;overschrijven), de geretourneerde &lt;xref:System.Xaml.XamlType&gt;conceptuele betekenis.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlMember.LookupType%2A&gt;</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Which meaning applies depends on whether this &lt;xref:System.Xaml.XamlMember&gt; represents a property, method, or event, as the following list shows:      -   For a property, the returned &lt;xref:System.Xaml.XamlType&gt; is the type that sets the property or is returned by the property.</source>
          <target state="translated">Welke betekenis van toepassing is afhankelijk van of dit &lt;xref:System.Xaml.XamlMember&gt;vertegenwoordigt een eigenschap, methode of gebeurtenis, zoals in de volgende lijst wordt weergegeven: - voor een eigenschap, de geretourneerde &lt;xref:System.Xaml.XamlType&gt;is van het type dat de eigenschap wordt ingesteld of wordt geretourneerd door de eigenschap.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For an event, the returned &lt;xref:System.Xaml.XamlType&gt; is the required event handler type (a delegate in a CLR implementation).</source>
          <target state="translated">-Voor een gebeurtenis, de geretourneerde &lt;xref:System.Xaml.XamlType&gt;is het vereiste Gebeurtenisregistratietype (een gemachtigde in een CLR-implementatie).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   For a method, &lt;xref:System.Xaml.XamlType&gt; is the return type of that method, which may be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">-Voor een methode &lt;xref:System.Xaml.XamlType&gt;is het retourtype van deze methode, die mogelijk <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</source>
          <target state="translated">In elk geval wordt de XAML-schemacontext gebruikt voor het evalueren van de XAML-type van het type back-ups maken.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van het type dat wordt gebruikt door het lid.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which can be used for type conversion construction of XAML declared objects.</source>
          <target state="translated">Haalt een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -object, dat kan worden gebruikt voor het type conversie constructie van XAML objecten gedeclareerd.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling TypeConverter invokes &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van TypeConverter roept &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit probleem treedt op wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations that return a non-null property value for TypeConverter are not necessarily a working &lt;xref:System.ComponentModel.TypeConverter&gt;.</source>
          <target state="translated">Implementaties die een van de niet-null-eigenschapswaarde voor TypeConverter retourneren zijn niet noodzakelijkerwijs een werkende &lt;xref:System.ComponentModel.TypeConverter&gt;.&lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following is a list of possible non-null return values for TypeConverter and what these values represent:      -   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</source>
          <target state="translated">Hieronder volgt een lijst met mogelijke niet-null waarden geretourneerd voor TypeConverter en wat deze waarden vertegenwoordigen:-de retourwaarde rapporten type-conversieprogramma dat specifiek naar dat lid of meer in het algemeen naar het doeltype van de converter is toegewezen.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</source>
          <target state="translated">Dit gedrag is doorgaans de meeste systemen voor XAML-type en om te instanti√´ren van een type-conversieprogramma en de bijbehorende methoden aanroepen Zoek XAML-processors.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The return value reports a built-in value converter.</source>
          <target state="translated">-De retourwaarde rapporteert een ingebouwde waardeconversieprogramma.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>These converters exist for certain internal operations that are performed by a XAML writer.</source>
          <target state="translated">Deze conversieprogramma's aanwezig zijn voor bepaalde interne bewerkingen die worden uitgevoerd door een XAML-schrijver.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</source>
          <target state="translated">Deze ingebouwde waarde conversieprogramma's niet in het bijzonder de onbewerkte kenmerkwaarden voor de tekenreeks converteren naar het niveau van de taal XAML primitieven.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</source>
          <target state="translated">Voor de implementatie van de .NET Framework XAML-Services, worden deze ingebouwde typeconversies vaak doorsturen naar een type-conversieprogramma die is gedefinieerd in de systeemassembly.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a conversion for an &lt;xref:System.Int32&gt; value has built-in forwarded conversion, and therefore, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt; value references &lt;xref:System.ComponentModel.Int32Converter&gt;.</source>
          <target state="translated">Bijvoorbeeld, een conversie voor een &lt;xref:System.Int32&gt;waarde beschikt over een ingebouwde doorgestuurd-conversie en daarom de &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt;waarde verwijzingen &lt;xref:System.ComponentModel.Int32Converter&gt;.&lt;/xref:System.ComponentModel.Int32Converter&gt; &lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt; &lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The return value reports the special case of an unconstrained object model; that is, the &lt;xref:System.Xaml.XamlMember&gt; has a &lt;xref:System.Xaml.XamlMember.Type%2A&gt; value of &lt;xref:System.Object&gt;.</source>
          <target state="translated">-De retourwaarde rapporteert het speciale geval van een onbeperkte objectmodel; dat wil zeggen de die &lt;xref:System.Xaml.XamlMember&gt;heeft een &lt;xref:System.Xaml.XamlMember.Type%2A&gt;waarde van &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; &lt;/xref:System.Xaml.XamlMember.Type%2A&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; reports that the &lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt; is {<ph id="ph1">`Object}`</ph>.</source>
          <target state="translated">In dit geval de &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;wordt gemeld dat de &lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt;is {<ph id="ph1">`Object}`</ph>.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.Schema.XamlValueConverter%601&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt; is <ph id="ph1">`null`</ph> because no actual type or instance is available to perform this conversion.</source>
          <target state="translated">Echter, &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;is <ph id="ph1">`null`</ph> omdat er geen daadwerkelijke type of het exemplaar beschikbaar is voor deze conversie uitvoeren.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</source>
          <target state="translated">In plaats daarvan kan niet het gedrag van het objectmodel worden bepaald tot runtime wanneer de runtime van de specifieke technologie de verwerking van een objectgrafiek bepaalt.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you can access a working &lt;xref:System.ComponentModel.TypeConverter&gt; from &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;, you can invoke its conversion methods.</source>
          <target state="translated">Als u toegang hebt tot een werkende &lt;xref:System.ComponentModel.TypeConverter&gt;van &lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;, kunt u de conversiemethoden aanroept.&lt;/xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt; &lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, many conversion methods rely on service context.</source>
          <target state="translated">Veel conversiemethoden is afhankelijk van servicecontext.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</source>
          <target state="translated">Als er niet dezelfde servicecontext beschikbaar dat de type-conversieprogramma voor de typische rol verwacht van objecten voor objectgrafieken schrijven, kunnen de converter methoden uitzonderingen genereert.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> value, with a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -waarde met een <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -beperking voor de algemene.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Gets the CLR type system &lt;xref:System.Reflection.MemberInfo&gt; that is available for a member that is constructed by &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.Reflection.MethodInfo&gt;, or &lt;xref:System.Reflection.EventInfo&gt;.</source>
          <target state="translated">Het CLR-systeem opgehaald &lt;xref:System.Reflection.MemberInfo&gt;die beschikbaar is voor een lid dat is opgesteld door &lt;xref:System.Reflection.PropertyInfo&gt;, &lt;xref:System.Reflection.MethodInfo&gt;, of &lt;xref:System.Reflection.EventInfo&gt;.&lt;/xref:System.Reflection.EventInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt; &lt;/xref:System.Reflection.PropertyInfo&gt; &lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling UnderlyingMember invokes &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van UnderlyingMember roept &lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>CLR type system &lt;xref:System.Reflection.MemberInfo&gt; information, as cast from the initial constructor parameters.</source>
          <target state="translated">CLR-systeem &lt;xref:System.Reflection.MemberInfo&gt;informatie als de conversie van de eerste constructorparameters.&lt;/xref:System.Reflection.MemberInfo&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is constructed with the <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29<ph id="ph2">&amp;gt;</ph> signature returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die is gemaakt met de <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29<ph id="ph2">&amp;gt;</ph> handtekening retourneert <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for value serialization of XAML declared objects.</source>
          <target state="translated">Haalt een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -object, dat wordt gebruikt voor het serialiseren van de waarde van XAML objecten gedeclareerd.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling ValueSerializer invokes &lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt; or a specific override of that method.</source>
          <target state="translated">Het aanroepen van ValueSerializer roept &lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior occurs when the initial internal reflection logic has not already set the information.</source>
          <target state="translated">Dit probleem treedt op wanneer de eerste interne reflectie logica is de informatie niet hebt ingesteld.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all cases that return a non-null property value for ValueSerializer are necessarily a working &lt;xref:System.Windows.Markup.ValueSerializer&gt;.</source>
          <target state="translated">Niet alle gevallen die resulteren in een niet-null-eigenschapswaarde voor ValueSerializer zijn noodzakelijkerwijs een werkende &lt;xref:System.Windows.Markup.ValueSerializer&gt;.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks in &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;; the same considerations apply to ValueSerializer.</source>
          <target state="translated">Zie de opmerkingen in &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;; dezelfde overwegingen van toepassing op ValueSerializer.&lt;/xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint on the generic.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met &lt;xref:System.Windows.Markup.ValueSerializer&gt;-beperking voor de algemene.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>