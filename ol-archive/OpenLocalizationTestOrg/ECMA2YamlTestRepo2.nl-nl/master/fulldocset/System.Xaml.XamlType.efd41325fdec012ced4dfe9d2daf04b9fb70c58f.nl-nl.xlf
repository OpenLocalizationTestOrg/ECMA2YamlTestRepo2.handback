<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">feaf2e9bc010ccda11a135d0aa3e621b5a7c5cdf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24fc7e820c5ddefe92de2308b53bbd78beaf5eba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12c1164f8af654693804ae92fafcabbf97d05a43</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</source>
          <target state="translated">Informatie over XAML-typen als onderdeel van het algehele XAML-systeem dat is ge√Ømplementeerd in .NET Framework XAML Services-rapporten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many APIs in the XamlType class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</source>
          <target state="translated">Veel API's in de klasse XamlType bevatten informatie over XAML-typen, waarbij het concept dat ze rapporteren over vergelijkbaar met bepaalde gedeelten van de XAML-specificatie [MS-XAML is].</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlType is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</source>
          <target state="translated">XamlType wordt uitgebreid in de .NET Framework XAML Services API gebruikt voor rapportage-informatie over een XAML-type.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>XamlType reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</source>
          <target state="translated">XamlType rapport de informatie die u moet weten over een XAML-type om te kunnen werken met een exemplaar of toegang krijgen tot de leden van een XAML-knooppuntstroom of een vergelijkbare XAML-weergave.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its reporting is similar to how the &lt;xref:System.Type&gt; in the CLR type system, together with reflection classes such as &lt;xref:System.Reflection.MemberInfo&gt;, provide information about a CLR type and its usage.</source>
          <target state="translated">De rapportage is vergelijkbaar met hoe de &lt;xref:System.Type&gt;Typ in de CLR systeem, samen met reflectie klassen zoals &lt;xref:System.Reflection.MemberInfo&gt;, bevatten informatie over een CLR-type en het gebruik ervan.&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To extend the XAML type system, you can derive from XamlType.</source>
          <target state="translated">Om uit te breiden het XAML-typesysteem, kunt u afleiden uit XamlType.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do so effectively, you might also need to implement a &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.</source>
          <target state="translated">Hiertoe dus effectief, mogelijk moet u ook een &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; implementeren</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</source>
          <target state="translated">De &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;kunt werken met het typesysteem back-ups maken dat u als onderdeel van het gedrag voor het aanroepen van opgeeft het gegeneraliseerde XAML-typesysteem.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific custom &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; provides a way to reduce the dependencies on the CLR type system, which are used by the default XamlType behavior.</source>
          <target state="translated">Het specifieke aangepaste &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;biedt een manier om te beperken van de afhankelijkheden van het CLR-systeem, die worden gebruikt door het standaardgedrag voor XamlType.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class based on the underlying CLR type information.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse op basis van de onderliggende CLR-type-informatie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The underlying CLR &lt;xref:System.Type&gt; for the XAML type to construct.</source>
          <target state="translated">De onderliggende CLR &lt;xref:System.Type&gt;voor het type XAML om samen te stellen.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XAML schema context for XAML readers or XAML writers.</source>
          <target state="translated">Schemacontext XAML voor XAML lezers of schrijvers van XAML.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">underlyingType</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">underlyingType</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class based on a string name for the type.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse op basis van een naam voor het type.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a protected constructor.</source>
          <target state="translated">Dit is een beveiligde constructor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>No current public derived classes exist that use this particular path for construction.</source>
          <target state="translated">Er is geen huidige openbare afgeleide klassen bestaan die gebruikmaken van dit bepaalde pad voor de constructie.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a consumer of the existing &lt;xref:System.Xaml.XamlType&gt;, you must use the other constructor signatures (&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt;, &lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt;, or &lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;) to initialize a &lt;xref:System.Xaml.XamlType&gt; object.</source>
          <target state="translated">Als een gebruiker van de bestaande &lt;xref:System.Xaml.XamlType&gt;, moet u de andere constructor handtekeningen (&lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt;, &lt;xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt;, of &lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;) initialiseren een &lt;xref:System.Xaml.XamlType&gt;object.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt; &lt;/xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29&gt; &lt;/xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the type to create.</source>
          <target state="translated">De naam van het type te maken.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The type arguments for a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents a generic type.</source>
          <target state="translated">De typeargumenten voor een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor een algemeen type.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Can be (and often is) <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that the represented type is not a generic type.</source>
          <target state="translated">Kan (en vaak) <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, wat aangeeft dat het type dat wordt vertegenwoordigd niet een generiek type is.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>XAML schema context for XAML readers and XAML writers.</source>
          <target state="translated">Schemacontext voor XAML en XAML schrijfprogramma XAML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class based on underlying type information and a <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse op basis van de onderliggende gegevens en een <bpt id="p2">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The underlying type for the XAML type to construct.</source>
          <target state="translated">Het onderliggende type voor het type XAML om samen te stellen.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>XAML schema context for the XAML reader.</source>
          <target state="translated">XAML-schemacontext van de XAML-lezer.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that handles run-time reflection calls against the <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die verantwoordelijk is voor runtime-reflectie roept tegen de <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">underlyingType</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">underlyingType</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">schemaContext</ph><ept id="p2">&lt;/code&gt;</ept> are <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class based on the XAML namespace and a string name for the type.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse op basis van de XAML-naamruimte en de tekenreeksnaam van een voor het type.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</source>
          <target state="translated">Deze constructor is uitsluitend bedoeld is voor analyse en de registratie van de XAML-knooppunt van type gebruik waarvan bekend is dat u geen back-ups maken in de ondersteunende typesysteem en schemacontext van XAML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</source>
          <target state="translated">Deze constructor alleen gebruiken voor 'Onbekende' typen waar een XAML-type dat is toegewezen aan een onderliggende typesysteem is niet beschikbaar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor might not produce a result where &lt;xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName&gt; is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Deze constructor kan geen queryplan een resultaat waarbij &lt;xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName&gt;is <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the default reflector logic reports the underlying type as &lt;xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">In plaats daarvan de standaard routereflector logica van het onderliggende type rapporten als &lt;xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this behavior can change because of the &lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt; override.</source>
          <target state="translated">Dit gedrag kunt echter wijzigen omdat de &lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;overschrijven.&lt;/xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The XAML namespace for the type, as a string.</source>
          <target state="translated">De XAML-naamruimte voor het type, als een tekenreeks.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The name of the type in the provided <ph id="ph1">`unknownTypeNamespace`</ph> XAML namespace.</source>
          <target state="translated">De naam van het type in de opgegeven <ph id="ph1">`unknownTypeNamespace`</ph> XAML-naamruimte.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The type arguments for a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents a generic type.</source>
          <target state="translated">De typeargumenten voor een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die staat voor een algemeen type.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Can be (and often is) <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which indicates that the represented type is not a generic type.</source>
          <target state="translated">Kan (en vaak) <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, wat aangeeft dat het type dat wordt vertegenwoordigd niet een generiek type is.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>XAML schema context for XAML readers or XAML writers.</source>
          <target state="translated">Schemacontext XAML voor XAML lezers of schrijvers van XAML.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">unknownTypeNamespace</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">unknownTypeName</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">schemaContext</ph><ept id="p3">&lt;/code&gt;</ept> are <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">One or more of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">unknownTypeNamespace</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">unknownTypeName</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">schemaContext</ph><ept id="p3">&lt;/code&gt;</ept> are <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a read-only collection of the types that are usable as the &lt;xref:System.Xaml.XamlType.ContentProperty*&gt; value for this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een verzameling alleen-lezen van de typen die beschikbaar zijn als de &lt;xref:System.Xaml.XamlType.ContentProperty*&gt;waarde voor dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.XamlType.ContentProperty*&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of AllowedContentTypes.</source>
          <target state="translated">Typen die zijn toegewezen een specifiek type inhoud (bijvoorbeeld kunnen worden toegewezen aan een basistype dat is een toegestane inhoudstype) worden niet beschouwd als meerdere typen voor de doeleinden van AllowedContentTypes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A read-only collection of possible content types.</source>
          <target state="translated">Een verzameling alleen-lezen van mogelijke typen inhoud.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the immediate base type of this XAML type.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de onmiddellijke basistype van dit type XAML.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Determination of this value is based on the underlying type of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and schema context.</source>
          <target state="translated">Bepaling van deze waarde is gebaseerd op het onderliggende type van dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en schemacontext.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupBaseType%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, BaseType returns an internal constant that represents an &lt;xref:System.Object&gt; if &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Standaard BaseType retourneert een interne constante die vertegenwoordigt een &lt;xref:System.Object&gt;Als &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt; is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; &lt;xref:System.Xaml.XamlType.LookupBaseType%2A&gt;virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlType.LookupBaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-type.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the immediate base type of this XAML type.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de onmiddellijke basistype van dit type XAML.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether an instance of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has the specified <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in its list of assignable types.</source>
          <target state="translated">Retourneert een waarde die aangeeft of een exemplaar van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> heeft de opgegeven <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> in de lijst met typen kunnen worden toegewezen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</source>
          <target state="translated">Hoewel het toegewezen type niet de mogelijkheden van het verwijzingstype heeft, kunt u deze kunt gebruiken voor toewijzing.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use assignment to make type matches for the values of a property.</source>
          <target state="translated">U kunt bijvoorbeeld toewijzing gebruiken om ervoor te overeenkomt met de waarden van een eigenschap.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</source>
          <target state="translated">Het concept van toewijsbare typen in XAML is vergelijkbaar met het concept van het casten van in het CLR-type-systeem.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, under a CLR type system, every type has an &lt;xref:System.Object&gt; in its assignable type list.</source>
          <target state="translated">Bijvoorbeeld, onder een CLR-type-systeem, elke type heeft een &lt;xref:System.Object&gt;in de lijst Toewijsbaar type.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the two &lt;xref:System.Xaml.XamlType&gt; instances that are used for comparison has &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt; equal to <ph id="ph1">`true`</ph>, this method has a special Unknown mode that returns <ph id="ph2">`true`</ph> if the two &lt;xref:System.Xaml.XamlType&gt; instances are equivalent.</source>
          <target state="translated">Als een van de twee &lt;xref:System.Xaml.XamlType&gt;exemplaren die worden gebruikt voor vergelijking &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;gelijk zijn aan <ph id="ph1">`true`</ph>, deze methode heeft een speciale onbekende modus die als resultaat geeft <ph id="ph2">`true`</ph> als de twee &lt;xref:System.Xaml.XamlType&gt;exemplaren zijn gelijk.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.IsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the CLR &lt;xref:System.Type&gt; from &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; for this &lt;xref:System.Xaml.XamlType&gt; and the input &lt;xref:System.Xaml.XamlType&gt;, and calls &lt;xref:System.Type.IsAssignableFrom%2A&gt;.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de CLR &lt;xref:System.Type&gt;van &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;voor deze &lt;xref:System.Xaml.XamlType&gt;en de invoer &lt;xref:System.Xaml.XamlType&gt;, en aanroepen &lt;xref:System.Type.IsAssignableFrom%2A&gt;.&lt;/xref:System.Type.IsAssignableFrom%2A&gt; &lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want a different determination of assignable types.</source>
          <target state="translated">Deze methode overschrijven als u wilt dat een andere bepaling van de typen kunnen worden toegewezen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing a null <ph id="ph1">`xamlType`</ph> does not throw an exception and always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Een null doorgeven <ph id="ph1">`xamlType`</ph> heeft een uitzondering niet genereren en retourneert altijd <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  CanAssignTo is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; CanAssignTo virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de assignability van een XAML-type wijzigen zodat deze is niet langer wordt uitgelijnd op een verwachte manier met het type casten gedrag van de onderliggende CLR-type.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The type to check against the current <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> .</source>
          <target state="translated">Het type om te controleren op basis van de huidige <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlType</ph><ept id="p2">&lt;/code&gt;</ept> is in the assignable types list; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlType</ph> <ept id="p2">&lt;/code&gt;</ept> is in de lijst met toegewezen typen; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> must have arguments (generic constraints through <bpt id="p2">&lt;xref uid="langword_csharp_x:TypeArguments" name="x:TypeArguments" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, initialization text, or other XAML techniques) to construct a valid instance of the type.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> argumenten moet hebben (algemene beperkingen via <bpt id="p2">&lt;xref uid="langword_csharp_x:TypeArguments" name="x:TypeArguments" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, initialisatie van de tekst of andere technieken XAML) om een geldig exemplaar van het type samen te stellen.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if construction of an instance requires some argument value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als constructie van een exemplaar een argumentwaarde vereist; anders <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the content property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor de eigenschap content van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt; to the type definition.</source>
          <target state="translated">Wanneer met behulp van de binding of een back-up van het systeem CLR-type, de eigenschap van de XAML-content kan worden opgegeven voor een type door toe te passen &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;aan de typedefinitie.&lt;/xref:System.Windows.Markup.ContentPropertyAttribute&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[content property]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[content property]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupContentProperty%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupContentProperty%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the content property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>informatie voor de eigenschap content van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no content property exists.</source>
          <target state="translated">Mogelijk <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> als er geen inhoudseigenschap bestaat.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <bpt id="p1">&lt;xref uid="langword_csharp_Collection&amp;lt;T&amp;gt;" name="Collection&amp;lt;T&amp;gt;" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De typen die worden gebruikt voor het inpakken van inhoud voor een eigenschap voor inhoud wanneer het niet strikt type overeenkomen, zoals tekenreeksen in een sterk getypeerde opgehaald <bpt id="p1">&lt;xref uid="langword_csharp_Collection&amp;lt;T&amp;gt;" name="Collection&amp;lt;T&amp;gt;" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no wrappers to account for type match loosening, this property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als er geen wrappers voor type overeen vergroten, wordt deze eigenschap is <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Types that evaluate as &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt; for a specific content type are not considered multiple types for purposes of ContentWrappers.</source>
          <target state="translated">Typen die worden ge√´valueerd als &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;voor een specifieke inhoudstype worden niet beschouwd als meerdere typen voor de doeleinden van ContentWrappers.&lt;/xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the CLR binding for &lt;xref:System.Xaml&gt; and &lt;xref:System.Xaml.XamlType&gt;, the XAML content wrapper type can be specified on a type as a &lt;xref:System.Windows.Markup.ContentWrapperAttribute&gt;.</source>
          <target state="translated">In de CLR-binding voor &lt;xref:System.Xaml&gt;en &lt;xref:System.Xaml.XamlType&gt;de XAML-content wrapper-type kan worden opgegeven voor een type als een &lt;xref:System.Windows.Markup.ContentWrapperAttribute&gt;.&lt;/xref:System.Windows.Markup.ContentWrapperAttribute&gt; &lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupContentWrappers%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A read-only collection of possible content wrapper types; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een verzameling alleen-lezen mogelijk inhoud wrapper typen; anders <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">Zie de opmerkingen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that represents the deferred loading conversion behavior for this type.</source>
          <target state="translated">Haalt de <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> die staat voor de uitgestelde conversie gedrag voor dit type laden.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML template behavior in WPF is an example of deferred loading behavior.</source>
          <target state="translated">XAML-sjabloon gedrag in WPF is een voorbeeld van het gedrag voor uitgesteld laden.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupDeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint that represents the deferred loading behavior for this type.</source>
          <target state="translated">De <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking die het gedrag voor uitgesteld laden voor dit type vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object.</source>
          <target state="translated">Hiermee wordt aangegeven of het huidige object gelijk aan een ander object is.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The object to compare with this object.</source>
          <target state="translated">Het object dat moet worden vergeleken met dit object.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het huidige object is gelijk aan de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">obj</ph> <ept id="p2">&lt;/code&gt;</ept> parameter; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
          <target state="translated">Hiermee wordt aangegeven of het huidige object gelijk aan een ander object van hetzelfde type is.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An object to compare with this object.</source>
          <target state="translated">Een object met dit object moet worden vergeleken.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current object is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p2">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het huidige object is gelijk aan de <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">other</ph> <ept id="p2">&lt;/code&gt;</ept> parameter; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns the XAML member that is aliased to a XAML directive by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert de XAML-lid dat alias voor een XAML-instructie door <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupAliasedProperty%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The directive for which to find the aliased member.</source>
          <target state="translated">De instructie waarvoor u wilt zoeken naar het lid alias hebben.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The aliased member, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Het lid alias als gevonden. anders <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns a collection that contains all the attachable properties that are exposed by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een verzameling met alle koppelbare eigenschappen die door deze beschikbaar worden gesteld <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Xaml.XamlMember&gt; in the returned collection should contain values that support the concept that the &lt;xref:System.Xaml.XamlMember&gt; is an attachable member.</source>
          <target state="translated">Elke &lt;xref:System.Xaml.XamlMember&gt;in de geretourneerde verzameling waarden die ondersteuning bieden voor het concept moet bevatten die de &lt;xref:System.Xaml.XamlMember&gt;lid is van een koppelbare.&lt;/xref:System.Xaml.XamlMember&gt; &lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, members should return <ph id="ph1">`true`</ph> for &lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;, a type for &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;, and so on.</source>
          <target state="translated">Bijvoorbeeld leden als resultaat moeten geven <ph id="ph1">`true`</ph> voor &lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;, een type voor &lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;, enzovoort.&lt;/xref:System.Xaml.XamlMember.TargetType%2A&gt; &lt;/xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A collection that contains zero or more <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Een verzameling met nul of meer <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns a collection that contains all the members that are exposed by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een verzameling met alle leden die beschikbaar worden gesteld door <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupAllMembers%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A collection that contains zero or more <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Een verzameling met nul of meer <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing a specific named attachable member of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> die een specifieke vertegenwoordigt met de naam toevoegbaar lid van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt; is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; &lt;xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlType.LookupAttachableMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> informatie over het onderliggende type van de CLR.&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The name of the attachable member to get, in <ph id="ph1">`ownerTypeName.MemberName`</ph> form.</source>
          <target state="translated">De naam van het koppelbare lid ophalen in <ph id="ph1">`ownerTypeName.MemberName`</ph> formulier.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the requested attachable member; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if no attachable member by that name exists.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object voor de aangevraagde toevoegbaar lid; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als er geen toevoegbaar lid met die naam bestaat.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Retourneert de hash-code voor dit object.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An integer hash code.</source>
          <target state="translated">Een geheel getal-hash-code.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a specific named member from this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een specifieke naam lid van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value for <ph id="ph1">`name`</ph> is expected to be unqualified.</source>
          <target state="translated">De waarde voor <ph id="ph1">`name`</ph> moet ongekwalificeerd wordt verwacht.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type-qualified names that indicate an attached member should be submitted to &lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt; instead.</source>
          <target state="translated">Type gekwalificeerde namen die wijzen op een gekoppelde lid moeten worden verzonden naar &lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;in plaats daarvan.&lt;/xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</source>
          <target state="translated">Het voorvoegsel van lid namen mogen niet worden gebruikt; een voorvoegsel situationeel op een gebruik is en het XAML-typesysteem kan niet weet de context van een dergelijk gebruik en hoe het voorvoegsel op dat is toegewezen.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupMember%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Xaml.XamlType.LookupMember%2A&gt; is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; &lt;xref:System.Xaml.XamlType.LookupMember%2A&gt;virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlType.LookupMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> informatie over het onderliggende type van de CLR.&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The name of the member to get (as a string).</source>
          <target state="translated">De naam van het lid om op te halen (als tekenreeks).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the member, if such a member was found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor het lid als zo'n lid gevonden, anders wordt is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor markup extensietypen, retourneert u de typen van de positionele parameters die worden ondersteund in een specifieke markup extension gebruik voor deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API is only relevant if this &lt;xref:System.Xaml.XamlType&gt; represents a markup extension (&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">Deze API is alleen relevant als deze &lt;xref:System.Xaml.XamlType&gt;vertegenwoordigt een markup extension (&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; is <ph id="ph1">`true`</ph>).&lt;/xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.</source>
          <target state="translated">De invoer <ph id="ph1">`parameterCount`</ph> is niet voor het aanvragen van het type van een specifieke positionele parameter.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is for specifying the arity of a markup extension usage.</source>
          <target state="translated">Het is voor het opgeven van de ariteit van een markup extension gebruik.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</source>
          <target state="translated">Markup extension gebruik vaak meerdere "handtekeningen' gebruikt, en andere ariteit (aantal) van positionele parameters te onderscheiden.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</source>
          <target state="translated">U kunt echter de schemacontext van een dat dubbele arities zijn toegestaan en typen van de positionele parameters gebruiken voor differentiatie configureren.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;.</source>
          <target state="translated">Zie voor meer informatie &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;.&lt;/xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a specific arity (count), the parameter positions and types can vary.</source>
          <target state="translated">Voor een specifieke ariteit (aantal), kunnen de parameter posities en typen vari√´ren.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the positional type of a specific arity's markup extension usage, you first call GetPositionalParameters specifying the arity count.</source>
          <target state="translated">Als u het positionele type van een specifieke ariteit markup extension gebruik, moet u eerst GetPositionalParameters geven het aantal ariteit aanroepen.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then get the item at that position from the returned collection.</source>
          <target state="translated">Vervolgens het item op die positie van de geretourneerde verzameling worden opgehaald.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this method can invoke &lt;xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Aanroepen naar deze methode kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupPositionalParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The count (arity) of the particular syntax or constructor mode that you want information about.</source>
          <target state="translated">Het aantal (ariteit) van de bepaalde syntaxis of constructor modus waarover u informatie weergeven wilt.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, where each <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is the type for that position in the syntax.</source>
          <target state="translated">Een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden, waarbij elke <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is het type voor de betreffende positie in de syntaxis.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>You must specify the types in the same order when you supply markup input for the markup extension.</source>
          <target state="translated">Als u markup-invoer voor de opmaakextensie opgeeft, moet u de typen in dezelfde volgorde.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Returns a list of string identifiers for XAML namespaces that the type is included in.</source>
          <target state="translated">Retourneert een lijst van een tekenreeks-id's voor XAML-naamruimten die het type is opgenomen in.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typical XAML namespace identifiers are strings in URI form.</source>
          <target state="translated">Typische XAML-naamruimte-id's zijn tekenreeksen in URI-notatie.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation checks the following, in order: the XAML namespace that is supplied in construction (&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt; signature only); and the namespaces that are available from the schema context.</source>
          <target state="translated">De standaardimplementatie in volgorde van het volgende gecontroleerd: de XAML-naamruimte die is opgegeven in de constructie (&lt;xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt; alleen handtekening); en de naamruimten die beschikbaar in de schemacontext zijn.&lt;/xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If these are each <ph id="ph1">`null`</ph>, a new list is generated that contains a single empty string.</source>
          <target state="translated">Als deze elk <ph id="ph1">`null`</ph>, een nieuwe lijst wordt gegenereerd met een lege tekenreeks.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this method to change the lookup methodology.</source>
          <target state="translated">U kunt deze methode als u wilt wijzigen van de methode lookup overschrijven.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A list of string values, where each string is the URI identifier for a XAML namespace.</source>
          <target state="translated">Een lijst met waarden van verbindingsreeksen, waarbij elke tekenreeks de URI-id voor een XAML-naamruimte is.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calling Invoker can invoke either &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt; or a specific override of that method.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, Invoker aanroepen kan worden aangeroepen ofwel &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;of een bepaalde onderdrukking van deze methode.&lt;/xref:System.Xaml.XamlType.LookupInvoker%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt; override returns <ph id="ph1">`null`</ph>, or if the default implementation returns <ph id="ph2">`null`</ph> because of lack of &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; for this &lt;xref:System.Xaml.XamlType&gt;, then Invoker returns &lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">Als een &lt;xref:System.Xaml.XamlType.LookupInvoker%2A&gt;overschrijven retourneert <ph id="ph1">`null`</ph>, of als de standaardimplementatie retourneert <ph id="ph2">`null`</ph> vanwege een gebrek aan &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;voor deze &lt;xref:System.Xaml.XamlType&gt;klikt u vervolgens Invoker &lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; retourneert&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt; &lt;/xref:System.Xaml.XamlType.LookupInvoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie die is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an ambient type, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een ambient type, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an ambient type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een ambient type; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an array.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> een matrix vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an array; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> een matrix vertegenwoordigt; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a collection.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een verzameling.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a collection; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een verzameling; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a constructible type, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een constructible, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[is default constructible]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[is default constructible]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsConstructible%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a constructible type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een constructible; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a dictionary, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een woordenboek, volgens de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[is dictionary]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[is dictionary]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a dictionary; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een woordenboek; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a generic type.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een generiek type.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a helper property that checks for a null value of &lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;.</source>
          <target state="translated">Deze eigenschap is een helper-eigenschap waarmee wordt gecontroleerd of een null-waarde van &lt;xref:System.Xaml.XamlType.TypeArguments%2A&gt;.&lt;/xref:System.Xaml.XamlType.TypeArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no specific <ph id="ph1">`Lookup`</ph> method related to IsGeneric.</source>
          <target state="translated">Er is geen specifieke <ph id="ph1">`Lookup`</ph> methode betrekking hebben op IsGeneric.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a generic type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een generiek type; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a markup extension.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een opmaakextensie.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>In XAML specification terms, this type must be assignable to <ph id="ph1">`x:MarkupExtension`</ph> in order to return <ph id="ph2">`true`</ph> for IsMarkupExtension.</source>
          <target state="translated">In termen van XAML-specificatie, dit type kunnen worden toegewezen aan <ph id="ph1">`x:MarkupExtension`</ph> om te retourneren <ph id="ph2">`true`</ph> voor IsMarkupExtension.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a markup extension; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een markup extension; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a XAML namescope, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een XAML-namescope, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>A XAML namescope enforces the name uniqueness of the property or properties used for <ph id="ph1">`x:Name`</ph><ph id="ph2"> / </ph><ph id="ph3">`[name property]`</ph>.</source>
          <target state="translated">Een XAML-namescope dwingt de uniekheid van de naam van de eigenschap of eigenschappen die worden gebruikt voor <ph id="ph1">`x:Name`</ph> <ph id="ph2"> / </ph> <ph id="ph3">`[name property]`</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IsNameScope is <ph id="ph1">`true`</ph>, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</source>
          <target state="translated">Als IsNameScope <ph id="ph1">`true`</ph>, sommige mechanisme voor het afdwingen van uniekheid moet bestaan en moet evalueren vanuit het perspectief van dit type die eigenaar is van een XAML-namescope.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</source>
          <target state="translated">De XAML-namescope wordt vervolgens naar de inhoud van het type breidt totdat een ander XAML die eigenaar is van namescope type wordt aangetroffen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[is name scope]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[is name scope]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsNameScope%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a XAML namescope; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een XAML-namescope; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized by using a valid <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> string as its &lt;xref:System.Xaml.XamlType.Name*&gt;.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is ge√Ønitialiseerd met behulp van een geldige <bpt id="p2">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> tekenreeks als de &lt;xref:System.Xaml.XamlType.Name*&gt;.&lt;/xref:System.Xaml.XamlType.Name*&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is initialized by using a valid <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> string; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is ge√Ønitialiseerd met behulp van een geldige <bpt id="p3">&lt;xref uid="langword_csharp_xamlName" name="xamlName" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> reeks; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a nullable type, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een type waarvoor null is toegestaan volgens de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[is nullable]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[is nullable]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are not using the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsNullable%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruikmaakt van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsNullable%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsNullable%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a nullable type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een type waarvoor null is toegestaan; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a public type in the relevant type system.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een openbaar type in het relevante typesysteem.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsPublic%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  &lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt; is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; &lt;xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;virtueel is en daarom kan worden genegeerd.&lt;/xref:System.Xaml.XamlType.LookupIsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde toegang tot informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem- en informatie van de onderliggende CLR-type.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a public type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een openbaar type; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a type that cannot be resolved in the underlying type system.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een type dat niet kan worden omgezet in het onderliggende typesysteem.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt;derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsUnknown%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a load path that involves &lt;xref:System.Xaml.XamlObjectWriter&gt;, a &lt;xref:System.Xaml.XamlType&gt; that has <ph id="ph1">`true`</ph> for IsUnknown cannot be written into an object graph.</source>
          <target state="translated">Voor een load-pad dat betrekking heeft op &lt;xref:System.Xaml.XamlObjectWriter&gt;, een &lt;xref:System.Xaml.XamlType&gt;die heeft <ph id="ph1">`true`</ph> voor IsUnknown kan niet worden geschreven in een objectgrafiek.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the default implementations in &lt;xref:System.Xaml&gt; , the &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName&gt; call throws a &lt;xref:System.Xaml.XamlObjectWriterException&gt; when the relevant &lt;xref:System.Xaml.XamlType&gt; reports <ph id="ph1">`true`</ph> for IsUnknown.</source>
          <target state="translated">Onder de standaard-implementaties in &lt;xref:System.Xaml&gt;, wordt de &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName&gt;aanroepen er wordt een &lt;xref:System.Xaml.XamlObjectWriterException&gt;wanneer de desbetreffende &lt;xref:System.Xaml.XamlType&gt;rapporten <ph id="ph1">`true`</ph> voor IsUnknown.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlObjectWriterException&gt; &lt;/xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not pass a &lt;xref:System.Xaml.XamlType&gt; that has IsUnknown as <ph id="ph1">`true`</ph> unless you are prepared to handle the exceptions from &lt;xref:System.Xaml.XamlObjectWriter&gt;, or you have other ways to adjust the &lt;xref:System.Xaml.XamlObjectWriter&gt; behavior or the XAML node stream prior to writing the object graph.</source>
          <target state="translated">Moet u niet doorgeven een &lt;xref:System.Xaml.XamlType&gt;waarvoor IsUnknown als <ph id="ph1">`true`</ph> tenzij u voorbereid bent voor het afhandelen van de uitzonderingen van &lt;xref:System.Xaml.XamlObjectWriter&gt;, of u over andere manieren om aan te passen de &lt;xref:System.Xaml.XamlObjectWriter&gt;gedrag of de XAML-knooppuntstroom voorafgaand aan de objectgrafiek schrijven.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an unresolvable type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een type onherleidbare; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is built top-down during XAML initialization.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> boven naar beneden wordt samengesteld tijdens de initialisatie van XAML.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</source>
          <target state="translated">Boven naar beneden is een voorbeeld die XAML processor gedrag benadert bij het maken van de objectgrafiek.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</source>
          <target state="translated">Wanneer gebouwd boven naar beneden, een type wordt gestart, wordt gekoppeld aan de bovenliggende en vervolgens heeft de eigenschappen instellen.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Top-down construction avoids invoking property-changed handlers multiple times.</source>
          <target state="translated">Boven naar beneden constructie voorkomt eigenschap gewijzigd handlers wordt meerdere keren aangeroepen.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</source>
          <target state="translated">Dergelijke verwerking ripples van de objectgrafiek en daarom meerdere aanroepen van de handler elimineert en biedt een optimalisatie voor opstarten van de prestaties van de objectgrafiek.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is built top-down during XAML initialization; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is gebouwd boven naar beneden tijdens de initialisatie van de XAML, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a whitespace significant collection, as per the XML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> een collectie witruimte aanzienlijke, aan de hand van de XML-definitie.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a whitespace significant collection; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een aanzienlijke verzameling witruimte; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents XML <bpt id="p2">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, as per the XAML definition.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML vertegenwoordigt <bpt id="p2">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, zoals per de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property aligns to the <ph id="ph1">`[is xdata]`</ph> information item in the [MS-XAML] specification.</source>
          <target state="translated">Deze eigenschap wordt uitgelijnd naar de <ph id="ph1">`[is xdata]`</ph> informatie item in de specificatie [MS-XAML].</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsXData%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsXData%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsXData%2A&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents <bpt id="p3">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents <bpt id="p3">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Gets a value that provides the type information for the <bpt id="p1">&lt;xref uid="langword_csharp_Items" name="Items" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een waarde waarmee de type-informatie voor de <bpt id="p1">&lt;xref uid="langword_csharp_Items" name="Items" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eigenschap van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only relevant if this &lt;xref:System.Xaml.XamlType&gt; represents a collection (&lt;xref:System.Xaml.XamlType.IsCollection%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">Deze eigenschap is alleen relevant als deze &lt;xref:System.Xaml.XamlType&gt;vertegenwoordigt een verzameling (&lt;xref:System.Xaml.XamlType.IsCollection%2A&gt; is <ph id="ph1">`true`</ph>).&lt;/xref:System.Xaml.XamlType.IsCollection%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Items`</ph> property is whatever property holds items in that type of collection or array.</source>
          <target state="translated">De <ph id="ph1">`Items`</ph> eigenschap is de eigenschap bevat items in het desbetreffende type verzameling of matrix.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupItemType%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupItemType%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupItemType%2A&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the type of the items in the collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a collection.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object voor het type van de items in de verzameling; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt een verzameling.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets a value that provides the type information for the key property of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a dictionary.</source>
          <target state="translated">Hiermee wordt een waarde waarmee de type-informatie voor de sleuteleigenschap van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, als de <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een woordenlijst.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only relevant if this &lt;xref:System.Xaml.XamlType&gt; represents a dictionary (&lt;xref:System.Xaml.XamlType.IsDictionary%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">Deze eigenschap is alleen relevant als deze &lt;xref:System.Xaml.XamlType&gt;vertegenwoordigt een woordenboek (&lt;xref:System.Xaml.XamlType.IsDictionary%2A&gt; is <ph id="ph1">`true`</ph>).&lt;/xref:System.Xaml.XamlType.IsDictionary%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupKeyType%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupKeyType%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupKeyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the type of the key for dictionary usage, otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a dictionary.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object voor het type van de sleutel voor gebruik met woordenlijst, anders wordt <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt een woordenlijst.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Returns the XAML member that is aliased to a XAML directive by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert de XAML-lid dat alias voor een XAML-instructie door <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetAliasedProperty%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can return results for the following XAML directives: <ph id="ph1">`Key`</ph>; <ph id="ph2">`Name`</ph>; <ph id="ph3">`Uid`</ph>; and <ph id="ph4">`xml:lang`</ph>.</source>
          <target state="translated">De standaardimplementatie kunt retourneren resultaten voor de volgende richtlijnen voor XAML: <ph id="ph1">`Key`</ph>; <ph id="ph2">`Name`</ph>; <ph id="ph3">`Uid`</ph>; and <ph id="ph4">`xml:lang`</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values for these depend on underlying reflection and might still return <ph id="ph1">`null`</ph> if no aliased property is found.</source>
          <target state="translated">Waarden voor deze afhankelijk van onderliggende reflectie zijn en mogelijk nog steeds retourneren <ph id="ph1">`null`</ph> als geen alias-eigenschap is gevonden.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeemgegevens van de XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The directive for which to find the aliased member.</source>
          <target state="translated">De instructie waarvoor u wilt zoeken naar het lid alias hebben.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The aliased member, if found; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Het lid alias als gevonden. anders <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Returns an enumerable set that contains all attachable properties that are exposed by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een inventariseerbare set met alle koppelbare eigenschappen die door deze beschikbaar worden gesteld <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although &lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt; returns a generic collection, this <ph id="ph1">`Lookup`</ph> method returns a generic enumerable set.</source>
          <target state="translated">Hoewel &lt;xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;retourneert een algemene verzameling dit <ph id="ph1">`Lookup`</ph> methode retourneert een algemene inventariseerbare.&lt;/xref:System.Xaml.XamlType.GetAllAttachableMembers%2A&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de interne CLR-reflectie.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>, the default implementation can use &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, if it is available.</source>
          <target state="translated">Wanneer &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>, de standaardimplementatie kunt &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, als deze beschikbaar is.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior calls LookupAllAttachableMembers recursively to attempt to find a valid base type and returns <ph id="ph1">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Dit gedrag LookupAllAttachableMembers recursief om te proberen te vinden van een geldig basistype aanroept en retourneert <ph id="ph1">`null`</ph> als er geen geldig basistype bestaat.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</source>
          <target state="translated">Een null geretourneerd moet voor gevallen waarin informatie kan niet worden vastgesteld vanwege het ontbreken van ondersteuning voor het systeem of reflectie van type worden gereserveerd.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; set.</source>
          <target state="translated">Als een geldig is en reflectie of andere technieken beschikbaar zijn, maar een type geen toevoegbare leden heeft, moet u in plaats daarvan een lege retourneren &lt;xref:System.Collections.Generic.IEnumerable%601&gt;ingesteld.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>An enumerable set that contains zero or more <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een inventariseerbare set met nul of meer <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Returns an enumerable set that contains all the members that are exposed by this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een inventariseerbare set met alle leden die beschikbaar worden gesteld door <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetAllMembers%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although &lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt; returns a generic collection, this <ph id="ph1">`Lookup`</ph> method returns a generic enumerable set.</source>
          <target state="translated">Hoewel &lt;xref:System.Xaml.XamlType.GetAllMembers%2A&gt;retourneert een algemene verzameling dit <ph id="ph1">`Lookup`</ph> methode retourneert een algemene inventariseerbare.&lt;/xref:System.Xaml.XamlType.GetAllMembers%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de interne CLR-reflectie.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cases where &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>, the default implementation can use &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, if it is available.</source>
          <target state="translated">Voor gevallen waarin &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>, de standaardimplementatie kunt &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, als deze beschikbaar is.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior calls LookupAllMembers recursively to attempt to find a valid base type, and returns <ph id="ph1">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Dit gedrag LookupAllMembers recursief om te proberen te vinden van een geldig basistype aanroept en retourneert <ph id="ph1">`null`</ph> als er geen geldig basistype bestaat.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</source>
          <target state="translated">Een null geretourneerd moet voor gevallen waarin informatie kan niet worden vastgesteld vanwege het ontbreken van ondersteuning voor het systeem of reflectie van type worden gereserveerd.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; set.</source>
          <target state="translated">Als een type geldig is, zijn reflectie of andere technieken beschikbaar; Als een type geen leden heeft, moet u in plaats daarvan een lege retourneren &lt;xref:System.Collections.Generic.IEnumerable%601&gt;ingesteld.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return values for LookupAllMembers and &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt; should be mutually exclusive.</source>
          <target state="translated">Retourwaarden voor LookupAllMembers en &lt;xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;moet sluiten elkaar wederzijds uit.&lt;/xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different &lt;xref:System.Xaml.XamlMember&gt; values, with one value appearing in the attachable list and another in the standard members list.</source>
          <target state="translated">Als u een situatie waarin een systeemeigenschap back-ups maken het gebruik van een standaard exemplaar, evenals een koppelbare gebruik ondersteunen kunt hebt, dat dit lid moet worden gerapporteerd als twee verschillende &lt;xref:System.Xaml.XamlMember&gt;waarden met een waarde in de lijst met koppelbaar en andere in de lijst standaard leden.&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>An enumerable set that contains zero or more <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Een inventariseerbare set met nul of meer <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns a list of the types that are usable as the &lt;xref:System.Xaml.XamlType.ContentProperty*&gt; value for this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een lijst van de typen die beschikbaar zijn als de &lt;xref:System.Xaml.XamlType.ContentProperty*&gt;waarde voor dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.XamlType.ContentProperty*&gt;</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;.&lt;/xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Types that evaluate as &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt; for a specific content type are not considered multiple types for purposes of &lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;.</source>
          <target state="translated">Typen die worden ge√´valueerd als &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;voor een specifieke inhoudstype worden niet beschouwd als meerdere typen ten behoeve van &lt;xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt;.&lt;/xref:System.Xaml.XamlType.AllowedContentTypes%2A&gt; &lt;/xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can use other properties of &lt;xref:System.Xaml.XamlType&gt; (&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;, &lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;, or &lt;xref:System.Xaml.XamlType.ItemType%2A&gt;) to obtain a result.</source>
          <target state="translated">De standaardimplementatie kunt andere eigenschappen van &lt;xref:System.Xaml.XamlType&gt;(&lt;xref:System.Xaml.XamlType.ContentWrappers%2A&gt;, &lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;, of &lt;xref:System.Xaml.XamlType.ItemType%2A&gt;) een resultaat te krijgen.&lt;/xref:System.Xaml.XamlType.ItemType%2A&gt; &lt;/xref:System.Xaml.XamlType.ContentProperty%2A&gt; &lt;/xref:System.Xaml.XamlType.ContentWrappers%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Lookup`</ph> overrides for the preceding property list can also be invoked in this determination.</source>
          <target state="translated">De <ph id="ph1">`Lookup`</ph> onderdrukt voor de voorgaande eigenschappenlijst kan ook worden aangeroepen in deze beslissing.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A list of possible content types.</source>
          <target state="translated">Een lijst met mogelijke typen inhoud.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a specific named attachable from this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een specifieke met de naam van deze koppelbare <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.GetAttachableMember%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetAttachableMember%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de interne CLR-reflectie.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>, the default implementation can use &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, if it is available.</source>
          <target state="translated">Wanneer &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>, de standaardimplementatie kunt &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, als deze beschikbaar is.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior calls LookupAttachableMember recursively to attempt to find a valid base type and returns <ph id="ph1">`null`</ph> if no valid base type exists.</source>
          <target state="translated">Dit gedrag LookupAttachableMember recursief om te proberen te vinden van een geldig basistype aanroept en retourneert <ph id="ph1">`null`</ph> als er geen geldig basistype bestaat.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  LookupAttachableMember is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupAttachableMember virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> informatie over het onderliggende type van de CLR.&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The name of the attachable member to get, in <ph id="ph1">`ownerTypeName.MemberName`</ph> form.</source>
          <target state="translated">De naam van het koppelbare lid ophalen in <ph id="ph1">`ownerTypeName.MemberName`</ph> formulier.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the requested attachable member; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if no attachable member by that name exists.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object voor de aangevraagde toevoegbaar lid; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als er geen toevoegbaar lid met die naam bestaat.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the immediate base type of this XAML type.</source>
          <target state="translated">Retourneert de <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de onmiddellijke basistype van dit type XAML.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Determination of this value is based on the underlying type of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and schema context.</source>
          <target state="translated">Bepaling van deze waarde is gebaseerd op het onderliggende type van dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en schemacontext.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation might return an internal constant that represents the &lt;xref:System.Object&gt; if &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">De standaardimplementatie mogelijk retourneren een interne constante die vertegenwoordigt de &lt;xref:System.Object&gt;Als &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  LookupBaseType is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupBaseType virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem-informatie van de onderliggende CLR-type.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the immediate base type of this XAML type.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de onmiddellijke basistype van dit type XAML.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Returns a value of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlCollectionKind"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that declares which specific collection type this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> uses.</source>
          <target state="translated">Retourneert een waarde van de <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlCollectionKind"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -opsomming die wordt gedeclareerd welke specifieke verzameling typt u dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> gebruikt.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked by an internal private method (no public <ph id="ph1">`CollectionKind`</ph> or <ph id="ph2">`GetCollectionKind`</ph> API exists on &lt;xref:System.Xaml.XamlType&gt;).</source>
          <target state="translated">Deze methode wordt aangeroepen door een interne persoonlijke methode (geen enkele openbare <ph id="ph1">`CollectionKind`</ph> of <ph id="ph2">`GetCollectionKind`</ph> API bestaat op &lt;xref:System.Xaml.XamlType&gt;).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses the internal CLR reflection.</source>
          <target state="translated">De standaardimplementatie maakt gebruik van de interne CLR-reflectie.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cases where &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; is <ph id="ph1">`null`</ph>, the default implementation can use &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, if it is available.</source>
          <target state="translated">Voor gevallen waarin &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;is <ph id="ph1">`null`</ph>, de standaardimplementatie kunt &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;, als deze beschikbaar is.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior indirectly calls LookupCollectionKind recursively to attempt to find a valid base type; it returns &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt; if no valid base type exists.</source>
          <target state="translated">Dit gedrag roept indirect LookupCollectionKind recursief om te proberen te vinden van een geldig basistype; Deze retourneert &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;Als er geen geldig basistype bestaat.&lt;/xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the default implementation attempts to find the <ph id="ph1">`Add`</ph> method of the underlying type by reflection.</source>
          <target state="translated">In het algemeen de standaardimplementatie gezocht naar de <ph id="ph1">`Add`</ph> methode van het onderliggende type door reflectie.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>If found, the &lt;xref:System.Reflection.MethodInfo&gt; of the <ph id="ph1">`Add`</ph> method is enough information to determine which &lt;xref:System.Xaml.Schema.XamlCollectionKind&gt; value should be returned.</source>
          <target state="translated">Als gevonden, de &lt;xref:System.Reflection.MethodInfo&gt;van de <ph id="ph1">`Add`</ph> methode is onvoldoende informatie om te bepalen welke &lt;xref:System.Xaml.Schema.XamlCollectionKind&gt;waarde moet worden geretourneerd.&lt;/xref:System.Xaml.Schema.XamlCollectionKind&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it returns &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;.</source>
          <target state="translated">Anders wordt &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;.&lt;/xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlCollectionKind"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">Een waarde van de <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlCollectionKind"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> opsomming.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> must have arguments (generic constraints through <bpt id="p2">&lt;xref uid="langword_csharp_x:TypeArguments" name="x:TypeArguments" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, initialization text, or other XAML techniques) to construct a valid instance of the type.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> argumenten moet hebben (algemene beperkingen via <bpt id="p2">&lt;xref uid="langword_csharp_x:TypeArguments" name="x:TypeArguments" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, initialisatie van de tekst of andere technieken XAML) om een geldig exemplaar van het type samen te stellen.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;.&lt;/xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`false`</ph> for types considered value types in the CLR type system.</source>
          <target state="translated">Retourneert de standaardimplementatie <ph id="ph1">`false`</ph> Typ systeem voor beschouwd als waardetypen in de CLR-typen.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>For other than value types, CLR reflection &lt;xref:System.Reflection.ConstructorInfo&gt; is used to determine whether a default constructor exists.</source>
          <target state="translated">Voor andere dan waardetypen, CLR reflectie &lt;xref:System.Reflection.ConstructorInfo&gt;wordt gebruikt om te bepalen of er sprake is van een standaardconstructor.&lt;/xref:System.Reflection.ConstructorInfo&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if construction of an instance requires some argument value; otherwise, false.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als constructie van een exemplaar een argumentwaarde vereist; anders wordt onwaar.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the content property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor de eigenschap content van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.ContentProperty%2A&gt;.&lt;/xref:System.Xaml.XamlType.ContentProperty%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation checks for &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt; on the type definition.</source>
          <target state="translated">De standaardimplementatie controleert &lt;xref:System.Windows.Markup.ContentPropertyAttribute&gt;voor de typedefinitie.&lt;/xref:System.Windows.Markup.ContentPropertyAttribute&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If these checks do not discover a content type, the default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">De standaardimplementatie retourneert als deze controles geen een inhoudstype detecteert, <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</source>
          <target state="translated">Deze methode overschrijven als u niet afhankelijk standaard interne CLR reflectie en voor het melden van de systeeminformatie van XAML-type of de schema-informatie van een type met behulp van de metagegevens of andere technieken.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the content property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>informatie voor de eigenschap content van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">May be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that represent the content wrappers for this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee haalt u een lijst van <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden die de inhoud wrappers voor deze vertegenwoordigen <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</source>
          <target state="translated">Een inhoud wrapper is een klasse die het type inhoud verzameling vertegenwoordigt wanneer de typen die worden gebruikt in deze verzameling niet aan het typesysteem zijn.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types of collection items for the content wrapper are expected to be limited in some manner beyond &lt;xref:System.Object&gt; or a neutral object equivalent.</source>
          <target state="translated">De verzamelingsitems voor de inhoud wrapper typen moeten worden beperkt op enige wijze buiten &lt;xref:System.Object&gt;of gelijkwaardige object neutrale.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</source>
          <target state="translated">Deze beperking wordt alleen afgedwongen door het ontwerp of het doel van de eigenschappen die gebruikmaken van dat type en niet door het typesysteem.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>More than one content wrapper can exist on a type.</source>
          <target state="translated">Meer dan √©√©n inhoud wrapper kan bestaan op een type.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example class and scenario from the WPF XAML implementation, see &lt;xref:System.Windows.Documents.InlineCollection&gt;.</source>
          <target state="translated">Zie voor een van de voorbeeldklasse en elk scenario van de implementatie van WPF XAML &lt;xref:System.Windows.Documents.InlineCollection&gt;.&lt;/xref:System.Windows.Documents.InlineCollection&gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that represent the content wrappers for this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden die de inhoud wrappers voor deze vertegenwoordigen <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, returns an <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Wanneer dit wordt ge√Ømplementeerd in een afgeleide klasse, retourneert een <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</source>
          <target state="translated">Negeer deze methode voor de interne reflectie met een andere manier om CLR kenmerkwaarden te verkrijgen.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>In absence of an override, the internal reflector uses typical CLR reflection logic.</source>
          <target state="translated">In de afwezigheid van een onderdrukking gebruikt de interne routereflector typische CLR reflectie logica.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Retourneert de standaardimplementatie <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used for deferred loading of XAML-declared objects.</source>
          <target state="translated">Retourneert een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> -object, dat wordt gebruikt voor uitgesteld laden van XAML gedeclareerd objecten.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked when a caller gets a value from &lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen wanneer een aanroeper een waarde van &lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;.&lt;/xref:System.Xaml.XamlType.DeferringLoader%2A&gt; krijgt</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt; to return a different value than is enabled by default internal reflection and are also providing custom &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; information.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.DeferringLoader%2A&gt;retourneren een andere waarde dan door de interne reflectie standaard is ingeschakeld en ook bieden aangepaste &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;informatie.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; &lt;/xref:System.Xaml.XamlType.DeferringLoader%2A&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns an object on the basis of reading &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een object op basis van &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;.&lt;/xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also  check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Deze methode retourneert een waarde is niet beschikbaar als, <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that has a <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint on the generic.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> die heeft een <bpt id="p1">&lt;xref href="System.Xaml.XamlDeferringLoader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -beperking voor de algemene.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat is gekoppeld aan dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.Invoker%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.Invoker%2A&gt;.&lt;/xref:System.Xaml.XamlType.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation does not require that a &lt;xref:System.Xaml.XamlType&gt; be constructed by using one of the constructors that pass an initial &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.</source>
          <target state="translated">De standaardimplementatie vereist niet dat een &lt;xref:System.Xaml.XamlType&gt;worden geconstrueerd met een van de constructors die een eerste &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt; doorgeven&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, an &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; value must exist for the &lt;xref:System.Xaml.XamlType&gt;; otherwise, the default implementation returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Echter, een &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;waarde moet aanwezig zijn voor de &lt;xref:System.Xaml.XamlType&gt;; anders wordt de standaardimplementatie retourneert <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you also create a derived class from &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt; and intend to return the derived class.</source>
          <target state="translated">Deze methode overschrijven als u ook een afgeleide klasse uit &lt;xref:System.Xaml.Schema.XamlTypeInvoker&gt;en u van plan bent te retourneren van de afgeleide klasse maken.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you return <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlType.Invoker%2A&gt; returns &lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; to callers.</source>
          <target state="translated">Als u terugkeert <ph id="ph1">`null`</ph>, &lt;xref:System.Xaml.XamlType.Invoker%2A&gt;retourneert &lt;xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;voor aanroepers.&lt;/xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlType.Invoker%2A&gt;</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlTypeInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an ambient type, as per the XAML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een ambient type, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses CLR reflection on the &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; and can check the base types.</source>
          <target state="translated">De standaardimplementatie CLR reflectie gebruikt op de &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;en controleren van de basistypen.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation checks for the &lt;xref:System.Windows.Markup.AmbientAttribute&gt; that is applied to the relevant type's definition at the class level and returns <ph id="ph1">`true`</ph> in this case.</source>
          <target state="translated">Deze implementatie zoekt de &lt;xref:System.Windows.Markup.AmbientAttribute&gt;die wordt toegepast op het gewenste type definitie op het klasseniveau van de en retourneert <ph id="ph1">`true`</ph> in dit geval.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other cases return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Retourneren van alle andere gevallen <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt; to return a different value than is enabled by default internal reflection.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;worden geretourneerd van een andere waarde dan wordt ingeschakeld door standaard interne reflectie.&lt;/xref:System.Xaml.XamlType.IsAmbient%2A&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents an ambient type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een ambient type; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a constructible type, as per the XAML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een constructible, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsConstructible%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses CLR reflection on the &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.</source>
          <target state="translated">De standaardimplementatie CLR reflectie gebruikt op de &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type must be concrete, non-nested, and closed.</source>
          <target state="translated">Het type moet concrete niet genest en gesloten.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation checks whether the type is a value type and the return of &lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;.</source>
          <target state="translated">De standaardimplementatie wordt gecontroleerd of het type een waardetype en het rendement van &lt;xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt;.&lt;/xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A&gt; is</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, this method returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Voor een null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, deze methode retourneert <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt; to return a different value than is enabled by default internal reflection.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsConstructible%2A&gt;worden geretourneerd van een andere waarde dan wordt ingeschakeld door standaard interne reflectie.&lt;/xref:System.Xaml.XamlType.IsConstructible%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a constructible type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een constructible; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a markup extension.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een opmaakextensie.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation consists only of this call:       <ph id="ph1">`return CanAssignTo(XamlLanguage.MarkupExtension);`</ph>       Override this method if you want &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; to use different logic.</source>
          <target state="translated">De standaardimplementatie bestaat alleen uit deze aanroep: <ph id="ph1">`return CanAssignTo(XamlLanguage.MarkupExtension);`</ph> deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>In XAML specification terms, this type must be assignable to <ph id="ph1">`x:MarkupExtension`</ph> in order to return <ph id="ph2">`true`</ph> for &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;.</source>
          <target state="translated">In termen van XAML-specificatie, dit type kunnen worden toegewezen aan <ph id="ph1">`x:MarkupExtension`</ph> om te retourneren <ph id="ph2">`true`</ph> voor &lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a markup extension; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een markup extension; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a XAML namescope, as per the XAML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een XAML-namescope, aan de hand van de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsNameScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation makes a &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt; call indirectly against the type &lt;xref:System.Windows.Markup.INameScope&gt;.</source>
          <target state="translated">De standaardimplementatie maakt een &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;indirect op basis van het type &lt;xref:System.Windows.Markup.INameScope&gt;.&lt;/xref:System.Windows.Markup.INameScope&gt; aanroepen&lt;/xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Markup.INameScope&gt; is an interface that is defined in the assembly WindowsBase.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.INameScope&gt;is een interface die is gedefinieerd in de assembly WindowsBase.&lt;/xref:System.Windows.Markup.INameScope&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique for XAML namescope identification is used both by WPF and <ph id="ph1">[!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)]</ph> implementations of XAML.</source>
          <target state="translated">Deze techniek voor XAML namescope identificatie wordt gebruikt door WPF zowel en <ph id="ph1">[!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)]</ph> implementaties van XAML.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsNameScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>A XAML namescope enforces the name uniqueness of the property or properties that are used for <ph id="ph1">`x:Name`</ph><ph id="ph2"> / </ph><ph id="ph3">`[name property]`</ph>.</source>
          <target state="translated">Een XAML-namescope dwingt de uniekheid van de naam van de eigenschap of eigenschappen die worden gebruikt voor <ph id="ph1">`x:Name`</ph> <ph id="ph2"> / </ph> <ph id="ph3">`[name property]`</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt; is <ph id="ph1">`true`</ph>, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</source>
          <target state="translated">Als &lt;xref:System.Xaml.XamlType.IsNameScope%2A&gt;is <ph id="ph1">`true`</ph>, en vervolgens een mechanisme voor het afdwingen van uniekheid moet bestaan en moet evalueren vanuit het perspectief van dit type die eigenaar is van een XAML-namescope.&lt;/xref:System.Xaml.XamlType.IsNameScope%2A&gt;</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</source>
          <target state="translated">De XAML-namescope wordt vervolgens naar de inhoud van het type breidt totdat een ander XAML namescope dat type wordt aangetroffen.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a XAML namescope; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een XAML-namescope; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a nullable type, as per the XAML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een type waarvoor null is toegestaan volgens de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsNullable%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation makes a determination based on the CLR core library nullable concept, checked against &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.</source>
          <target state="translated">De standaardimplementatie maakt om te bepalen op basis van het CLR-bibliotheek null kernconcept, vergeleken met &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, it returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Voor een null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, wordt hiermee <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsNullable%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsNullable%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsNullable%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a nullable type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een type waarvoor null is toegestaan; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a public type in the relevant type system.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een openbaar type in het relevante typesysteem.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses CLR reflection against a non-null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.</source>
          <target state="translated">De standaardimplementatie gebruikt CLR reflectie op basis van een niet-null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, it returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Voor een null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, wordt hiermee <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsPublic%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsPublic%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  LookupIsPublic is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupIsPublic virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde toegang tot informatie over een XAML-type wijzigen zodat deze niet langer afgestemd op een verwachte manier de systeem- of -informatie van de onderliggende CLR-type.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van de van toewijzingsbewerkingen en toegang.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a public type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een openbaar type; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a type that cannot be resolved in the underlying type system.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een type dat niet kan worden omgezet in het onderliggende typesysteem.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can use CLR reflection.</source>
          <target state="translated">De standaardimplementatie kunt CLR reflectie.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, it returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Voor een null &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;, wordt hiermee <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsUnknown%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsUnknown%2A&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a nonresolvable type; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een nonresolvable; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a whitespace significant collection, as per the XML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> een collectie witruimte aanzienlijke, aan de hand van de XML-definitie.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt;.&lt;/xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check the &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren de &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is not available, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a white-space significant collection; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een aanzienlijke verzameling spatietekens; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents XML <bpt id="p2">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, as per the XAML definition.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML vertegenwoordigt <bpt id="p2">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, zoals per de XAML-definitie.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsXData%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsXData%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsXData%2A&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation makes a &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt; call indirectly against the type &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">De standaardimplementatie maakt een &lt;xref:System.Xaml.XamlType.CanAssignTo%2A&gt;indirect op basis van het type &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; aanroepen&lt;/xref:System.Xaml.XamlType.CanAssignTo%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsXData%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsXData%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsXData%2A&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents <bpt id="p3">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents <bpt id="p3">&lt;xref uid="langword_csharp_XDATA" name="XDATA" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Returns a value that provides the type information for the <bpt id="p1">&lt;xref uid="langword_csharp_Items" name="Items" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een waarde waarmee de type-informatie voor de <bpt id="p1">&lt;xref uid="langword_csharp_Items" name="Items" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eigenschap van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.ItemType%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.ItemType%2A&gt;.&lt;/xref:System.Xaml.XamlType.ItemType%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can use CLR reflection concepts, such as checking for an <ph id="ph1">`Add`</ph> method by &lt;xref:System.Reflection.MethodInfo&gt; and using the &lt;xref:System.Reflection.ParameterInfo&gt;; checking &lt;xref:System.Xaml.XamlType.IsArray%2A&gt;; and checking &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; and trying the same logic there.</source>
          <target state="translated">De standaardimplementatie kunt CLR reflectie concepten, zoals het controleren op een <ph id="ph1">`Add`</ph> methode door &lt;xref:System.Reflection.MethodInfo&gt;en het gebruik van de &lt;xref:System.Reflection.ParameterInfo&gt;; controleren &lt;xref:System.Xaml.XamlType.IsArray%2A&gt;; en het controleren van &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;en probeert dezelfde logica.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Xaml.XamlType.IsArray%2A&gt; &lt;/xref:System.Reflection.ParameterInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.ItemType%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.ItemType%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.ItemType%2A&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cases where &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; returns &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt; should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Indien &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;retourneert &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;als resultaat moet geven <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the type of the items in the collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a collection.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object voor het type van de items in de verzameling; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt een verzameling.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns a value that provides the type information for the key property of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if the <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a dictionary.</source>
          <target state="translated">Retourneert een waarde waarmee de type-informatie voor de sleuteleigenschap van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, als de <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een woordenlijst.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.KeyType%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.KeyType%2A&gt;.&lt;/xref:System.Xaml.XamlType.KeyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can use CLR reflection concepts, such as checking for an <ph id="ph1">`Add`</ph> method by &lt;xref:System.Reflection.MethodInfo&gt; and using the &lt;xref:System.Reflection.ParameterInfo&gt;; and checking &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; and trying the same logic there.</source>
          <target state="translated">De standaardimplementatie kunt CLR reflectie concepten, zoals het controleren op een <ph id="ph1">`Add`</ph> methode door &lt;xref:System.Reflection.MethodInfo&gt;en het gebruik van de &lt;xref:System.Reflection.ParameterInfo&gt;; en het controleren van &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;en probeert dezelfde logica.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt; &lt;/xref:System.Reflection.ParameterInfo&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.KeyType%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.KeyType%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.KeyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cases where &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt; does not return &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt; should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Indien &lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;retourneert geen &lt;xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt;als resultaat moet geven <ph id="ph1">`null`</ph>.&lt;/xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the type of the key for dictionary usage, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a dictionary,</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> object voor het type van de sleutel voor het gebruik van een woordenboek of <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt een woordenlijst</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Returns a value that provides the type information for the returned <bpt id="p1">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if it represents a markup extension.</source>
          <target state="translated">Retourneert een waarde waarmee de type-informatie voor de geretourneerde <bpt id="p1">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze een opmaakextensie vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;.&lt;/xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a &lt;xref:System.Xaml.XamlType&gt; on the basis of reading &lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een &lt;xref:System.Xaml.XamlType&gt;op basis van &lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;.&lt;/xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt; lezen&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is not available, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the return type for markup extension usage; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a markup extension.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object voor het retourtype voor markup extension Gebruik; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt geen opmaakextensie.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a specific named member from this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert de <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor een specifieke naam lid van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.GetMember%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.GetMember%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a &lt;xref:System.Xaml.XamlType&gt; based on internal CLR reflection and evaluation against the schema context.</source>
          <target state="translated">De standaardimplementatie retourneert een &lt;xref:System.Xaml.XamlType&gt;op basis van interne CLR reflectie en evaluatie aan de hand van de schemacontext.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.GetMember%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.GetMember%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.GetMember%2A&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  LookupMember is virtual, and therefore, can be overridden.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; LookupMember virtueel is en daarom kan worden genegeerd.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> information about the underlying CLR type.</source>
          <target state="translated">Is de kans dat de onderdrukking (of voor schadelijke doeleinden of anderszins) de gerapporteerde leden van een XAML-type wijzigen zodat deze niet langer uitgelijnd op een verwachte manier met de &lt;xref:System.ComponentModel.TypeDescriptor&gt; <ph id="ph1">`Get*`</ph> informatie over het onderliggende type van de CLR.&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any security-critical checks of member reporting, use the underlying CLR type instead.</source>
          <target state="translated">Gebruik in plaats daarvan het onderliggende CLR-type voor elke risicovolle controle van lid reporting.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The name of the member to get (as a string).</source>
          <target state="translated">De naam van het lid om op te halen (als tekenreeks).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to return a member even if that member has a <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value for <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to not return a <ph id="ph3">&amp;lt;</ph>xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph> member.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>een lid retourneren, zelfs als dat lid is een <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> waarde voor <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> niet retourneren een <ph id="ph3">&amp;lt;</ph>xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph> lid.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De standaardwaarde is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for the member, if a member was found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> informatie voor het lid als een lid gevonden, anders wordt is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Voor markup extensietypen, retourneert u de typen van de positionele parameters die worden ondersteund in een specifieke markup extension gebruik voor deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;.&lt;/xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation uses internal reflection information based on finding constructors and checking the arity.</source>
          <target state="translated">De standaardimplementatie gebruikt interne reflectie-informatie op basis van een constructors zoeken en controleren van de ariteit.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API is only relevant if this &lt;xref:System.Xaml.XamlType&gt; represents a markup extension (&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">Deze API is alleen relevant als deze &lt;xref:System.Xaml.XamlType&gt;vertegenwoordigt een markup extension (&lt;xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; is <ph id="ph1">`true`</ph>).&lt;/xref:System.Xaml.XamlType.IsMarkupExtension%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`parameterCount`</ph> is not for requesting the type of a specific positional parameter.</source>
          <target state="translated">De invoer <ph id="ph1">`parameterCount`</ph> is niet voor het aanvragen van het type van een specifieke positionele parameter.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is for specifying the arity of a markup extension usage.</source>
          <target state="translated">Het is voor het opgeven van de ariteit van een markup extension gebruik.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</source>
          <target state="translated">Markup extension gebruik vaak meerdere handtekeningen gebruikt, en andere ariteit (aantal) van positionele parameters te onderscheiden.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</source>
          <target state="translated">U kunt echter de schemacontext van een dat dubbele arities zijn toegestaan en typen van de positionele parameters gebruiken voor differentiatie configureren.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;.</source>
          <target state="translated">Zie voor meer informatie &lt;xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;.&lt;/xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a specific arity count, the parameter positions and types can vary.</source>
          <target state="translated">Voor een aantal specifieke ariteit kunnen parameter posities en typen vari√´ren.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the positional type of a specific arity's markup extension usage, you first call &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt; with the arity count.</source>
          <target state="translated">Als u het positionele type van een specifieke ariteit markup extension gebruik, u eerst aan te roepen &lt;xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;met het aantal ariteit.&lt;/xref:System.Xaml.XamlType.GetPositionalParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then get the item at that position from the returned collection.</source>
          <target state="translated">Vervolgens het item op die positie van de geretourneerde verzameling worden opgehaald.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The count (arity) of the particular syntax or constructor mode that you want information about.</source>
          <target state="translated">Het aantal (ariteit) van de bepaalde syntaxis of constructor modus waarover u informatie weergeven wilt.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>A list of <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values where each such <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is the type for that position in the syntax.</source>
          <target state="translated">Een lijst met <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden waar elke zoals <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is het type voor de betreffende positie in de syntaxis.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>You must specify those types in the same order when supplying markup input for the markup extension.</source>
          <target state="translated">U moet deze bestandstypen in dezelfde volgorde opgeven bij het opgeven van markup invoer voor de opmaakextensie.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Returns a handler callback to use for the set operations of markup extensions.</source>
          <target state="translated">Retourneert een retouraanroep handler moet worden gebruikt voor de set-bewerkingen van opmaakextensies.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>A handler callback to use for the set operations of markup extensions.</source>
          <target state="translated">Een retouraanroep handler moet worden gebruikt voor de set-bewerkingen van opmaakextensies.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Returns a handler to use for type converter setting cases.</source>
          <target state="translated">Retourneert een handler moet worden gebruikt voor type-conversieprogramma gevallen instellen.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt;.&lt;/xref:System.Windows.Markup.XamlSetTypeConverterAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>A handler to use for type converter setting cases.</source>
          <target state="translated">Een handler moet worden gebruikt voor type-conversieprogramma gevallen instellen.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should be serialized using a mode that  trims surrounding whitespace.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> moet worden geserialiseerd met behulp van een modus waarbij omringende witruimte verwijdert.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;.&lt;/xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A&gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt;.&lt;/xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should be serialized in a mode that trims surrounding whitespace; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> moet worden geserialiseerd in een modus omringende witruimte verwijdert, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that has a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint, which represents type-conversion behavior for values of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> die heeft een <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking, waarmee het gedrag voor waarden van dit type conversie <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;.&lt;/xref:System.Xaml.XamlType.TypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">De standaardimplementatie kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also includes special logic for default conversion of enumerations, common value types, and generics.</source>
          <target state="translated">Dit omvat ook speciale logica voor de conversie van de standaardwaarde van de opsommingen, algemene waardetypen en algemene typen.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.TypeConverter%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.TypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint that represents type-conversion behavior for values of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking die gedrag voor waarden van dit type conversie vertegenwoordigt <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Returns the CLR &lt;xref:System.Type&gt; that underlies this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert de CLR &lt;xref:System.Type&gt;die dit voltooiingscallback <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns an internal field.</source>
          <target state="translated">De standaardimplementatie retourneert een intern veld.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</source>
          <target state="translated">Dit veld in het algemeen tijdens de constructiefase is ge√Ønitialiseerd en de waarde is gebaseerd op welke constructor is aangeroepen en de informatie die u hebt opgegeven.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The CLR &lt;xref:System.Type&gt; that underlies this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De CLR &lt;xref:System.Type&gt;die dit voltooiingscallback <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is built top-down during XAML initialization.</source>
          <target state="translated">Retourneert een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> boven naar beneden wordt samengesteld tijdens de initialisatie van XAML.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</source>
          <target state="translated">Boven naar beneden is een voorbeeld die XAML processor gedrag benadert bij het maken van de objectgrafiek.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>When built top-down, a type is instantiated, attached to the parent, and has its properties set.</source>
          <target state="translated">Wanneer gebouwd boven naar beneden, een type ge√Ønstantieerd gekoppeld aan de bovenliggende en de eigenschappen ervan is ingesteld.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Top-down construction avoids invoking property-changed handlers multiple times.</source>
          <target state="translated">Boven naar beneden constructie voorkomt eigenschap gewijzigd handlers wordt meerdere keren aangeroepen.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</source>
          <target state="translated">Dergelijke verwerking ripples van de objectgrafiek en daarom meerdere aanroepen van de handler elimineert en biedt een optimalisatie voor opstarten van de prestaties van de objectgrafiek.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;.&lt;/xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt;.&lt;/xref:System.Windows.Markup.UsableDuringInitializationAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is built top-down during XAML initialization; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is gebouwd boven naar beneden tijdens de initialisatie van de XAML, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> that has a &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint, which represents value serialization behavior for values of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> die heeft een &lt;xref:System.Windows.Markup.ValueSerializer&gt;beperking, waarmee de werking van de waarde-serialisatie voor waarden van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be invoked by calls to &lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;.</source>
          <target state="translated">Deze methode kan worden aangeroepen door het aanroepen van &lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;.&lt;/xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns a value based on reading &lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;.</source>
          <target state="translated">De standaardimplementatie retourneert een waarde op basis van &lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;.&lt;/xref:System.Windows.Markup.ValueSerializerAttribute&gt; lezen</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also check &lt;xref:System.Xaml.XamlType.BaseType%2A&gt; for the attribute if no attribute is found on the immediate underlying type.</source>
          <target state="translated">U kunt ook controleren &lt;xref:System.Xaml.XamlType.BaseType%2A&gt;voor het kenmerk als geen kenmerk is aangetroffen op de direct onderliggende type.&lt;/xref:System.Xaml.XamlType.BaseType%2A&gt;</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also includes special logic for default serialization of enumerations, common value types, or generics.</source>
          <target state="translated">Dit omvat ook speciale logica voor standaard-serialisatie van opsommingen, algemene typen of algemene typen.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value is unavailable, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Als een waarde niet beschikbaar is, retourneert <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if you want &lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt; to use different logic.</source>
          <target state="translated">Deze methode als u wilt overschrijven &lt;xref:System.Xaml.XamlType.ValueSerializer%2A&gt;gebruiken verschillende logica.&lt;/xref:System.Xaml.XamlType.ValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint that represents value serialization behavior for values of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met &lt;xref:System.Windows.Markup.ValueSerializer&gt;beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Gets a value that provides the type information for the returned <bpt id="p1">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if it represents a markup extension.</source>
          <target state="translated">Hiermee wordt een waarde waarmee de type-informatie voor de geretourneerde <bpt id="p1">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> van deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze een opmaakextensie vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only relevant if this &lt;xref:System.Xaml.XamlType&gt; represents a markup extension (<ph id="ph1">`x:MarkupExtension`</ph> is in the assignable types list).</source>
          <target state="translated">Deze eigenschap is alleen relevant als deze &lt;xref:System.Xaml.XamlType&gt;vertegenwoordigt een markup extension (<ph id="ph1">`x:MarkupExtension`</ph> bevindt zich in de lijst met bestandstypen kunnen worden toegewezen).&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A&gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the return type for markup extension usage; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, if this <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> does not represent a markup extension.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object voor het retourtype voor markup extension Gebruik; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, als deze <bpt id="p3">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> vertegenwoordigt geen opmaakextensie.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Gets the string name of the type that this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents.</source>
          <target state="translated">De naam van het type opgehaald die dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property typically gets the schema-constructed name (per the &lt;xref:System.Xaml.XamlType.%23ctor%2A&gt; signature), or the name of the &lt;xref:System.Type&gt;, if it is constructed by using the pertinent constructor of the CLR type system.</source>
          <target state="translated">Deze eigenschap wordt doorgaans de naam van de schema-samengesteld (per de &lt;xref:System.Xaml.XamlType.%23ctor%2A&gt;handtekening), of de naam van de &lt;xref:System.Type&gt;, als deze wordt samengesteld met behulp van de relevante constructor van het CLR-systeem.&lt;/xref:System.Type&gt; &lt;/xref:System.Xaml.XamlType.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The string name of this XAML type.</source>
          <target state="translated">De naam van dit type XAML.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have the same value.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten dezelfde waarde hebben.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlType1</ph><ept id="p2">&lt;/code&gt;</ept> is the same as the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlType2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de waarde van <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlType1</ph> <ept id="p2">&lt;/code&gt;</ept> is hetzelfde als de waarde van <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlType2</ph> <ept id="p3">&lt;/code&gt;</ept>; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have different values.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten hebben verschillende waarden.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlType1</ph><ept id="p2">&lt;/code&gt;</ept> is different from the value of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">xamlType2</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de waarde van <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlType1</ph> <ept id="p2">&lt;/code&gt;</ept> verschilt van de waarde van <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">xamlType2</ph> <ept id="p3">&lt;/code&gt;</ept>; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Gets the single XAML namespace that is the primary XAML namespace for this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt de enkel XAML-naamruimte die is de primaire XAML-naamruimte voor deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation provides the same value as calling &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt; and then getting the first value string from the returned enumerable set.</source>
          <target state="translated">Deze implementatie biedt dezelfde waarde als het aanroepen &lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt;en vervolgens de eerste waardetekenreeks van de geretourneerde inventariseerbare set.&lt;/xref:System.Xaml.XamlType.GetXamlNamespaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>The identifier, as a string, of the primary XAML namespace for this XAML type.</source>
          <target state="translated">De id als een tekenreeks, van de primaire XAML-naamruimte voor dit type XAML.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Gets the active <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for processing this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De actieve opgehaald <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de verwerking van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlSchemaContext&gt; is a required parameter entry when constructing a &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlSchemaContext&gt;is een vereiste parameter-vermelding bij het maken van een &lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt;&lt;/xref:System.Xaml.XamlSchemaContext&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The active <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for processing this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De actieve <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> voor de verwerking van dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Retourneert een tekenreeksrepresentatie van deze <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xaml.XamlType&gt; implementation of &lt;xref:System.Object.ToString%2A&gt; returns the &lt;xref:System.Xaml.XamlType.Name%2A&gt; property of the &lt;xref:System.Xaml.XamlType&gt;.</source>
          <target state="translated">De &lt;xref:System.Xaml.XamlType&gt;uitvoering van &lt;xref:System.Object.ToString%2A&gt;de &lt;xref:System.Xaml.XamlType.Name%2A&gt;eigenschap van het &lt;xref:System.Xaml.XamlType&gt;.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.Name%2A&gt; retourneert&lt;/xref:System.Object.ToString%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>A string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een tekenreeksrepresentatie van dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</source>
          <target state="translated">Hiermee wordt een waarde die aangeeft of dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> witruimte gedrag voor serialisatie die de omringende witruimte in de inhoud verwijdert voor het verwerken is.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a type that uses whitespace trimming; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als dit <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt een type met witruimte bijsnijden, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Gets a list of type arguments for cases where this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a generic.</source>
          <target state="translated">Hiermee haalt u een lijst van typeargumenten voor gevallen waarin dit <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> vertegenwoordigt een algemeen.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are certain scenarios for a &lt;xref:System.Xaml.XamlType&gt; where calling the TypeArguments parameter returns a list where the types are still open.</source>
          <target state="translated">Er zijn bepaalde scenario's voor een &lt;xref:System.Xaml.XamlType&gt;waar het aanroepen van de parameter TypeArguments retourneert een lijst waarin de typen nog zijn geopend.&lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, one or more of the returned &lt;xref:System.Xaml.XamlType&gt; values will have placeholder values for &lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt;, such as <ph id="ph1">`T`</ph>, to represent that the generic is still open.</source>
          <target state="translated">In dit geval, een of meer van de geretourneerde &lt;xref:System.Xaml.XamlType&gt;waarden hebben tijdelijke aanduiding voor waarden voor &lt;xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt;, zoals <ph id="ph1">`T`</ph>, om aan te duiden dat de algemene nog geopend is.&lt;/xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario can occur if you get a &lt;xref:System.Xaml.XamlType&gt; from a call to &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt;, instead of from a XAML reader implementation.</source>
          <target state="translated">Dit kan gebeuren als u krijgt een &lt;xref:System.Xaml.XamlType&gt;vanuit een aanroep van &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt;, in plaats van vanaf de implementatie van een XAML-lezer.&lt;/xref:System.Xaml.XamlSchemaContext.GetXamlType%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>A list of type argument types; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> does not represent a generic.</source>
          <target state="translated">Een lijst met type argumenttypen; anders <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, als deze <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> vertegenwoordigt geen algemeen.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint that represents type conversion behavior for values of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking dat vertegenwoordigt conversie gedrag voor waarden van deze typen <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint that represents type conversion behavior for values of this <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> beperking dat vertegenwoordigt conversie gedrag voor waarden van deze typen <bpt id="p2">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Gets the CLR &lt;xref:System.Type&gt; that underlies this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De CLR opgehaald &lt;xref:System.Type&gt;die dit voltooiingscallback <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>The CLR &lt;xref:System.Type&gt; that underlies this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">De CLR &lt;xref:System.Type&gt;die dit voltooiingscallback <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint that represents value serialization behavior for values of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Haalt een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met &lt;xref:System.Windows.Markup.ValueSerializer&gt;beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use the default internal CLR reflection technique for a &lt;xref:System.Xaml.XamlType&gt;, calls to this property can invoke &lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt; overrides on &lt;xref:System.Xaml.XamlType&gt; derived classes.</source>
          <target state="translated">Als u geen gebruik van de standaard interne CLR reflectie techniek voor een &lt;xref:System.Xaml.XamlType&gt;, aanroepen naar deze eigenschap kunnen aanroepen &lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;overschrijft op &lt;xref:System.Xaml.XamlType&gt;afgeleide klassen.&lt;/xref:System.Xaml.XamlType&gt; &lt;/xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt; &lt;/xref:System.Xaml.XamlType&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about return values and other behavior, see the documentation for &lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt; on this type.</source>
          <target state="translated">Zie voor meer informatie over retourwaarden en ander gedrag, de documentatie voor &lt;xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;voor dit type.&lt;/xref:System.Xaml.XamlType.LookupValueSerializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> with &lt;xref:System.Windows.Markup.ValueSerializer&gt; constraint that represents value serialization behavior for values of this <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Een <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> met &lt;xref:System.Windows.Markup.ValueSerializer&gt;beperking die waarde serialisatie gedrag voor waarden van dit vertegenwoordigt <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>; anders <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Markup.ValueSerializer&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>