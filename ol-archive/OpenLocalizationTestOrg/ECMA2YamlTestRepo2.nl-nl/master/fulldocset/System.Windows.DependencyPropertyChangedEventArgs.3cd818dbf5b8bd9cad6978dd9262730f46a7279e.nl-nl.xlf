<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b29a890905ae20cc20d68dce90bf4de2ab9a7e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyPropertyChangedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d309b7f9119ddcc4eba6e50fcc38f530f258d299</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">209c5c8e10db85ab6500d4cc42ee5cc95e0705d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for various property changed events.</source>
          <target state="translated">Biedt gegevens voor de diverse gebeurtenissen van de eigenschap gewijzigd.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Typically these events report effective value changes in the value of a read-only dependency property.</source>
          <target state="translated">Deze gebeurtenissen melden doorgaans effectieve waarde wijzigingen in de waarde van een alleen-lezen afhankelijkheidseigenschap.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Another usage is as part of a <bpt id="p1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">Gebruik een andere is als onderdeel van een <bpt id="p1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> implementatie.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The events that use the DependencyPropertyChangedEventArgs class for event data, and the &lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt; method implementations for handlers, generally follow the naming pattern <ph id="ph1">`Is*Changed`</ph>, and are generally implemented as <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> events without &lt;xref:System.Windows.RoutedEvent&gt; backing (they are not routed events).</source>
          <target state="translated">De gebeurtenissen die de klasse DependencyPropertyChangedEventArgs voor gegevens van gebeurtenissen gebruiken en de &lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt;methode implementaties voor handlers, in het algemeen volgen het naamgevingspatroon <ph id="ph1">`Is*Changed`</ph>, en over het algemeen worden geïmplementeerd als <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> gebeurtenissen zonder &lt;xref:System.Windows.RoutedEvent&gt;back-ups maken (ze zijn geen gerouteerde gebeurtenissen).&lt;/xref:System.Windows.RoutedEvent&gt; &lt;/xref:System.Windows.DependencyPropertyChangedEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;, also use the DependencyPropertyChangedEventArgs class for event data.</source>
          <target state="translated">Een klasse verwerken van de methoden die '' anders verwerken weergegeven gebeurtenissen die een statuswijziging via een wijziging van de eigenschap, zoals rapporteren &lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;, de klasse DependencyPropertyChangedEventArgs ook gebruiken voor gegevens van gebeurtenissen.&lt;/xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The scenario for &lt;xref:System.Windows.PropertyChangedCallback&gt; is to use the arguments to report old and new values that come from the property system evaluation of the property.</source>
          <target state="translated">Het scenario voor &lt;xref:System.Windows.PropertyChangedCallback&gt;is het gebruik van de argumenten voor het rapport oude en nieuwe waarden die afkomstig van de eigenschap system evaluatie van de eigenschap zijn.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</source>
          <target state="translated">Een retouraanroep die oude en nieuwe waarden verwerkt kunt speciale verwerking, afhankelijk van deze waarden, zoals niet reageert op waarde wijzigingen die worden geacht verwaarlozen kiezen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Initialiseert een nieuw exemplaar van de <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</source>
          <target state="translated">Implementeerders van aangepaste gebeurtenissen die afhankelijkheid eigenschapswijzigingen rapporteren moeten deze constructor gebruiken voor het invullen van de gegevens van de gebeurtenis met de details van de wijziging, wanneer de gebeurtenis wordt geactiveerd.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property that changed.</source>
          <target state="translated">De id voor de afhankelijkheidseigenschap die gewijzigd.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The value of the property before the change reported by the relevant event or state change.</source>
          <target state="translated">De waarde van de eigenschap vóór de wijziging gemeld door de betreffende gebeurtenis of een statuswijziging.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The value of the property after the change reported by the relevant event or state change.</source>
          <target state="translated">De waarde van de eigenschap na de wijziging gemeld door de betreffende gebeurtenis of een statuswijziging.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Determines whether the provided object is equivalent to the current <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt bepaald of het opgegeven object gelijk aan de huidige is <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation relies on value equivalence of all properties, including internal properties.</source>
          <target state="translated">Deze implementatie is afhankelijk van waarde equivalentie van alle eigenschappen, inclusief interne eigenschappen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object to compare to the current <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Het object te vergelijken met de huidige <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the provided object is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als het opgegeven object gelijk aan de huidige is <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; anders <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether the provided <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt bepaald of de opgegeven <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> is gelijk aan de huidige <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation relies on value equivalence of all properties, including internal properties.</source>
          <target state="translated">Deze implementatie is afhankelijk van waarde equivalentie van alle eigenschappen, inclusief interne eigenschappen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> moet worden vergeleken met de huidige<bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the provided <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p3">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de opgegeven <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> is gelijk aan de huidige <bpt id="p3">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>; anders <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a hash code  for this <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Hiermee wordt een hash-code voor dit <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer hash code.</source>
          <target state="translated">Een 32-bits geheel hash-code.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the value of the property after the change.</source>
          <target state="translated">Hiermee haalt de waarde van de eigenschap na de wijziging.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided should always be castable to the type of the dependency property being reported.</source>
          <target state="translated">Het type van de opgegeven waarde moet altijd castable naar het type van de afhankelijkheidseigenschap worden gerapporteerd.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The property value after the change.</source>
          <target state="translated">De waarde van de eigenschap na de wijziging.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the value of the property before the change.</source>
          <target state="translated">Hiermee wordt de waarde van de eigenschap vóór de wijziging.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the value provided should always be castable to the type of the dependency property being reported.</source>
          <target state="translated">Het type van de opgegeven waarde moet altijd castable naar het type van de afhankelijkheidseigenschap worden gerapporteerd.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The property value before the change.</source>
          <target state="translated">De waarde van de eigenschap vóór de wijziging.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects have the same value.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten dezelfde waarde hebben.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation uses the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.</source>
          <target state="translated">De implementatie maakt gebruik van dezelfde logica als &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">De eerste <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te vergelijken.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">De tweede <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te vergelijken.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are equivalent; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de twee <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> exemplaren zijn equivalent, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are different.</source>
          <target state="translated">Hiermee wordt bepaald of twee opgegeven <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> objecten zijn verschillend.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation returns the negation of the same logic as &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.</source>
          <target state="translated">De implementatie retourneert de negatie van dezelfde logica als &lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;.&lt;/xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">De eerste <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te vergelijken.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated">De tweede <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> om te vergelijken.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances are different; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de twee <bpt id="p2">&lt;xref href="System.Windows.DependencyPropertyChangedEventArgs"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> exemplaren zijn verschillende, anders wordt <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the identifier for the dependency property where the value change occurred.</source>
          <target state="translated">Hiermee haalt de id voor de afhankelijkheidseigenschap waar de waarde is gewijzigd.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is relevant if used within a common &lt;xref:System.Windows.PropertyChangedCallback&gt; that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</source>
          <target state="translated">Deze eigenschap is van belang als gebruikt binnen een algemeen &lt;xref:System.Windows.PropertyChangedCallback&gt;die is geregistreerd voor de verschillende eigenschappen en is nodig om op te heffen die eigenschap veranderen de callback aangeroepen.&lt;/xref:System.Windows.PropertyChangedCallback&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</source>
          <target state="translated">De eigenschap is niet doorgaans relevant zijn voor het verhogen van gebeurtenissen, omdat er meestal een 1:1-overeenkomst tussen de eigenschappen en gebeurtenissen die rapporteren wijziging in de eigenschap.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event that was raised is itself the indication of which property changed.</source>
          <target state="translated">De gebeurtenis die is gegenereerd. is de vermelding waarvan de eigenschap wordt gewijzigd.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The identifier field of the dependency property where the value change occurred.</source>
          <target state="translated">Het veld id van de afhankelijkheidseigenschap waar de waarde wijzigen is opgetreden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>