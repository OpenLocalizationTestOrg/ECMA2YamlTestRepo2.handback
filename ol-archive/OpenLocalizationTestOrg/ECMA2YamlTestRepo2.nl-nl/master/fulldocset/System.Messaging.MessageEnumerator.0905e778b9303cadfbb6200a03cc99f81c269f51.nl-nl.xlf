<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="nl-nl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48866610ef8d80da05371b0b6ef7e6d9609661bd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.MessageEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a570860269ef6d3d9454ac1b94ae9a92fb373c77</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">033622fbc69b34a2532b7f1b35be969738c8cd13</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Biedt een alleen-voorwaarts cursor voor berichten in de berichtenwachtrij van een inventariseren.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use MessageEnumerator for dynamic interaction with messages in a queue.</source>
          <target state="translated">Gebruik MessageEnumerator voor dynamische interactie met berichten in een wachtrij.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods available through the &lt;xref:System.Messaging.MessageQueue&gt; class can return either a MessageEnumerator pointing to a dynamic list of messages in the queue, or an array that contains a copy at a given instant - a snapshot - of the queue at the time the specified method was called.</source>
          <target state="translated">Methoden die beschikbaar is via de &lt;xref:System.Messaging.MessageQueue&gt;klasse ofwel een MessageEnumerator die verwijst naar een dynamische lijst met berichten in de wachtrij of een matrix met een kopie op een gegeven moment - momentopname - van de wachtrij op het moment dat de opgegeven methode is aangeroepen kunt terugkeren.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike a static snapshot, an enumerator allows you to modify the collection.</source>
          <target state="translated">In tegenstelling tot een statische momentopname kunt een enumerator u de verzameling niet wijzigen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a MessageEnumerator, you can remove messages from the queue, and the change is immediately reflected in the queue.</source>
          <target state="translated">Met een MessageEnumerator, kunt u berichten verwijderen uit de wachtrij en de wijziging onmiddellijk weergegeven in de wachtrij.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator does not remove the messages from the queue when it queries the queue.</source>
          <target state="translated">Een enumerator wordt niet verwijderd van de berichten uit de wachtrij wanneer deze een query naar de wachtrij.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns information about the message at the current cursor position, but it leaves the message in the queue.</source>
          <target state="translated">Gegevens over het bericht op de huidige cursorpositie worden geretourneerd, maar laat u het bericht in de wachtrij.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MessageEnumerator is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">Een MessageEnumerator is een cursor, geïnitialiseerd op de kop van een dynamische lijst.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list order is the same as the order of the messages in the queue, according to message priority.</source>
          <target state="translated">De lijstvolgorde is hetzelfde als de volgorde van de berichten in de wachtrij, volgens de prioriteit van bericht.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can move the cursor to the first message in the queue by calling &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">U kunt de cursor naar het eerste bericht in de wachtrij verplaatsen door het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the enumerator has been initialized, you can use &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to step forward through the remaining messages.</source>
          <target state="translated">Nadat de enumerator is geïnitialiseerd, kunt u &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;naar stap vooruit via de resterende berichten.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify whether to wait for a message to become available by passing a timeout into the &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; method.</source>
          <target state="translated">U kunt opgeven of de wachttijd voor een bericht beschikbaar komen door een time-out in de &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;methode.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the enumerator is dynamic, a message that is appended beyond the cursor's current position (for example, due to low priority), can be accessed by the enumerator.</source>
          <target state="translated">Omdat de enumerator dynamisch is, kan een bericht dat wordt toegevoegd na de huidige positie van de cursor (bijvoorbeeld door een lage prioriteit), zijn toegankelijk door de enumerator.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message that is inserted before the cursor's current position cannot be accessed.</source>
          <target state="translated">Een bericht dat wordt ingevoegd voordat de huidige cursorpositie kan niet worden geopend.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to step backward with a MessageEnumerator.</source>
          <target state="translated">Het is niet mogelijk naar stap achteruit met een MessageEnumerator.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cursor allows forward-only movement.</source>
          <target state="translated">Een cursor kan alleen-voorwaartse beweging.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt; method enables you to place the cursor back at the beginning of the queue.</source>
          <target state="translated">De &lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;methode kunt u de cursor terug aan het begin van de wachtrij plaatsen.&lt;/xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of MessageEnumerator for a given queue work independently.</source>
          <target state="translated">Exemplaren van MessageEnumerator voor een bepaalde wachtrij onafhankelijk werken.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create two MessageEnumerator instances that apply to the same queue.</source>
          <target state="translated">U kunt twee MessageEnumerator-exemplaren die betrekking hebben op dezelfde wachtrij maken.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The changes that one MessageEnumerator makes to the messages in the queue will be reflected immediately in a second enumerator if the second enumerator is positioned before the first.</source>
          <target state="translated">De wijzigingen die één MessageEnumerator voor de berichten in de wachtrij maakt worden, onmiddellijk weergegeven in een tweede enumerator als de tweede enumerator bevindt zich voor de eerste.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if two enumerators have the same position and one of them removes the message at that position, an exception is thrown if the other enumerator attempts to get the value of the &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt; property on the now-deleted message.</source>
          <target state="translated">Echter, als twee enumerators dezelfde positie hebben en één van deze methode het bericht op die positie verwijdert, er een uitzondering gegenereerd als de andere enumerator probeert op te halen van de waarde van de &lt;xref:System.Messaging.MessageEnumerator.Current%2A&gt;eigenschap voor het bericht nu verwijderd.&lt;/xref:System.Messaging.MessageEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you create an instance of &lt;xref:System.Messaging.MessageQueue&gt; with &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; set to <ph id="ph2">`true`</ph>, no other application can modify the messages in your enumerator while you have the connection to the queue.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Als u geen exemplaar van maken &lt;xref:System.Messaging.MessageQueue&gt;met &lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt;ingesteld op <ph id="ph2">`true`</ph>, er geen andere toepassing kan de berichten in de enumerator niet wijzigen terwijl u de verbinding met de wachtrij hebt.&lt;/xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Maakt de resources die zijn gekoppeld aan de enumerator.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system retains an open handle to the queue during the lifetime of the cursor.</source>
          <target state="translated">Het besturingssysteem behoudt een geopende ingang naar de wachtrij tijdens de levensduur van de cursor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call Close to release the resources associated with the handle.</source>
          <target state="translated">Wanneer u klaar bent met de enumerator, vrijgeven aanroep dicht bij de resources die zijn gekoppeld aan de ingang.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that this enumerator points to.</source>
          <target state="translated">De huidige opgehaald <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat deze enumerator naar verwijst.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it points to the head of the queue, at a location before the first message.</source>
          <target state="translated">Wanneer de enumerator is gemaakt, wordt deze verwijst naar de kop van de wachtrij op een locatie voor het eerste bericht.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, Current is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">In dit geval huidige is niet geldig en genereert een uitzondering als deze is geopend.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; to position the cursor at the first message in the queue.</source>
          <target state="translated">U moet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;op de cursorpositie het eerste bericht in de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current message.</source>
          <target state="translated">Het huidige bericht.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You called Current before the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<bpt id="p1">*</bpt>&gt;. The cursor is located before the first element of the message enumeration.       -or-       You called Current after a call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext<ept id="p1">*</ept>&gt; had returned <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> (indicating the cursor is located after the last element of the message enumeration.)</source>
          <target state="translated">U huidige aangeroepen voordat de eerste aanroep &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;. De cursor bevindt zich vóór het eerste element van de bericht-opsomming.       - of - u huidige aangeroepen na een aanroep van &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; retourneert <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> (waarmee wordt aangegeven van de cursor bevindt zich na het laatste element van de bericht-opsomming.)</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The message the enumerator is currently pointing to no longer exists.</source>
          <target state="translated">Het bericht dat de enumerator momenteel niet meer verwijst is bestaat.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>It might have been deleted.</source>
          <target state="translated">Het is mogelijk verwijderd.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the native Message Queuing cursor handle used to browse messages in the queue.</source>
          <target state="translated">De systeemeigen Message Queuing-cursor koppeling gebruikt om te bladeren berichten in de wachtrij opgehaald.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains the native handle to the enumeration.</source>
          <target state="translated">Deze eigenschap bevat de systeemeigen koppeling voor de opsomming.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished working with the enumerator, call &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt; to release this resource.</source>
          <target state="translated">Wanneer u klaar bent met de enumerator, roept &lt;xref:System.Messaging.MessageEnumerator.Close%2A&gt;deze bron vrij te geven.&lt;/xref:System.Messaging.MessageEnumerator.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The native cursor handle.</source>
          <target state="translated">De koppeling systeemeigen cursor.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The handle does not exist.</source>
          <target state="translated">De ingang bestaat niet.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Versies van alle resources die worden gebruikt door de <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Messaging.MessageEnumerator&gt; to be reallocated for other purposes.</source>
          <target state="translated">Aanroepen van Dispose kan de bronnen die worden gebruikt door de &lt;xref:System.Messaging.MessageEnumerator&gt;naar opnieuw worden toegewezen voor andere doeleinden.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Zie voor meer informatie over Dispose <bpt id="p1">[</bpt>onbeheerde hulpbronnen reinigen<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Heft de niet-beheerde bronnen worden gebruikt door de <bpt id="p1">&lt;xref href="System.Messaging.MessageEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> en eventueel de beheerde bronnen vrij.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Deze methode wordt aangeroepen door het publiek &lt;xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;methode en de &lt;xref:System.Object.Finalize%2A&gt;methode.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>Hiermee wordt de beveiligde <ph id="ph2">`Dispose(Boolean)`</ph> methode met de <ph id="ph3">`disposing`</ph> parameter ingesteld op <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;roept <ph id="ph1">`Dispose`</ph> met <ph id="ph2">`disposing`</ph> ingesteld op <ph id="ph3">`false`</ph>.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Messaging.MessageEnumerator&gt; references.</source>
          <target state="translated">Wanneer de <ph id="ph1">`disposing`</ph> parameter <ph id="ph2">`true`</ph>, deze methode worden alle resources die beheerde objecten waarover vrijgegeven dat dit &lt;xref:System.Messaging.MessageEnumerator&gt;verwijzingen.&lt;/xref:System.Messaging.MessageEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Deze methode roept de <ph id="ph1">`Dispose()`</ph> methode van elk object waarnaar wordt verwezen.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>voor het vrijgeven van zowel beheerde als onbeheerde hulpbronnen; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> om alleen niet-beheerde bronnen vrij te geven.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue, if one is currently available.</source>
          <target state="translated">De enumerator verplaatst naar het volgende bericht in de wachtrij als die momenteel beschikbaar is.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload returns immediately if there is no message in the queue.</source>
          <target state="translated">Deze overbelasting wordt onmiddellijk geretourneerd als er geen bericht in de wachtrij is.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is another overload that waits a specified &lt;xref:System.TimeSpan&gt; for a message to arrive.</source>
          <target state="translated">Er is een andere overload die een opgegeven wacht &lt;xref:System.TimeSpan&gt;voor een bericht moet worden uitgevoerd.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, MoveNext returns <ph id="ph1">`false`</ph> to the calling method.</source>
          <target state="translated">Als een bericht momenteel niet beschikbaar is omdat de wachtrij leeg is of omdat u na het laatste element in de verzameling hebt verplaatst, MoveNext retourneert <ph id="ph1">`false`</ph> aan de methode aanroepen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the queue, and the first call to MoveNext brings the first message of the queue into view.</source>
          <target state="translated">Nadat deze is gemaakt, een conceptueel enumerator staat voor het eerste bericht van de wachtrij en de eerste aanroep MoveNext wordt het eerste bericht van de wachtrij.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was succesfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de enumerator met succes is geavanceerde naar het volgende bericht is; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als de enumerator heeft het einde van de wachtrij bereikt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Er is een specifiek zijn voor Message Queuing-uitzondering opgetreden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next message in the queue.</source>
          <target state="translated">De enumerator verplaatst naar het volgende bericht in de wachtrij.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the enumerator is positioned at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt; waits until a message is available or the given timeout expires.</source>
          <target state="translated">Als de enumerator bevindt zich aan het einde van de wachtrij &lt;xref:System.Messaging.MessageEnumerator.MoveNext*&gt;Wacht totdat een bericht beschikbaar is of de opgegeven time-out is verlopen.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload waits if there is no message in the queue or if the cursor has reached the end of the queue.</source>
          <target state="translated">Deze overbelasting wacht als er geen bericht in de wachtrij is of als de cursor heeft het einde van de wachtrij bereikt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is not currently available because the queue is empty or because you have moved beyond the last element in the collection, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; waits the specified timeout.</source>
          <target state="translated">Als u een bericht is momenteel niet beschikbaar omdat de wachtrij leeg is of omdat u na het laatste element in de verzameling hebt verplaatst &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;Wacht van de opgegeven time-out.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is already at the end of the queue, &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; only returns <ph id="ph1">`true`</ph> if the new message arrives within the specified time interval, has lower priority than all messages currently in the queue and is placed at the end of the queue.</source>
          <target state="translated">Als de cursor al aan het einde van de wachtrij is &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;retourneert alleen <ph id="ph1">`true`</ph> als het nieuw bericht binnen het opgegeven tijdsinterval binnenkomt, lagere prioriteit dan alle berichten momenteel in de wachtrij en aan het einde van de wachtrij is geplaatst.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>An overload with no parameter returns immediately if no further messages are in the queue.</source>
          <target state="translated">Een overbelasting met er is geen parameter wordt onmiddellijk geretourneerd als geen berichten meer in de wachtrij zijn.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is conceptually positioned before the first message of the enumeration, and the first call to &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; brings the first message of the enumeration into view.</source>
          <target state="translated">Nadat deze is gemaakt, een conceptueel enumerator staat voor het eerste bericht van de inventarisatie en de eerste aanroep &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;brengt het eerste bericht van de inventarisatie in weergave.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; to wait for a message to be available if the enumerator is positioned at the end of the queue.</source>
          <target state="translated">De &lt;xref:System.TimeSpan&gt;wachttijd voor een bericht niet beschikbaar als de enumerator bevindt zich aan het einde van de wachtrij.&lt;/xref:System.TimeSpan&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator successfully advanced to the next message; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has reached the end of the queue and a message does not become available within the time specified by the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Als de enumerator is voortgezet naar het volgende bericht; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> als de enumerator het einde van de wachtrij bereikt heeft en een bericht is niet beschikbaar is binnen de tijd die is opgegeven door de <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p3">&lt;/code&gt;</ept> parameter.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value specified for the timeout parameter is invalid.</source>
          <target state="translated">De opgegeven waarde voor de parameter timeout is ongeldig.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>It might represent a negative number.</source>
          <target state="translated">Er kan geen negatief getal vertegenwoordigen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An exception specific to Message Queuing was thrown.</source>
          <target state="translated">Er is een specifiek zijn voor Message Queuing-uitzondering opgetreden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       The timeout has expired.</source>
          <target state="translated">- of - de time-out is verlopen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional or non-transactional queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht in een wachtrij transactioneel of niet-transactionele en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Er is geen time-out opgegeven voor een bericht moet worden uitgevoerd in de wachtrij.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>RemoveCurrent removes and returns the message at the cursor's current location.</source>
          <target state="translated">RemoveCurrent verwijdert en retourneert het bericht op de huidige cursorpositie.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling RemoveCurrent.</source>
          <target state="translated">U hebt niet aan te roepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van RemoveCurrent.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Als u deze overbelasting voor een transactionele wachtrij aanroepen, maakt Message Queuing een enkele interne transactie.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht in een transactionele wachtrij en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Er is geen time-out opgegeven voor een bericht moet worden uitgevoerd in de wachtrij.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;verwijdert en retourneert het bericht op de huidige locatie van de cursor, met behulp van de context van de interne transactie gedefinieerd door de <ph id="ph1">`transaction`</ph> parameter.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Als u werkt met transactionele wachtrijen, terugdraaien van een transactie zorgt ervoor dat alle berichten die zijn verwijderd door een aanroep naar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;moeten worden geretourneerd naar de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">De verwijdering is niet niet ongedaan worden gemaakt totdat de transactie doorgevoerd is.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">U hebt niet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction in which the message will be removed.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object dat de transactie waarin het bericht wordt verwijderd.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht in een wachtrij en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>There is no timeout specified for a message to arrive in the queue.</source>
          <target state="translated">Er is geen time-out opgegeven voor een bericht moet worden uitgevoerd in de wachtrij.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;verwijdert en retourneert het bericht op de huidige locatie van de cursor, met behulp van een transactiecontext die zijn gedefinieerd door de <ph id="ph1">`transactionType`</ph> parameter.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Geef <ph id="ph1">`Automatic`</ph> voor de <ph id="ph2">`transactionType`</ph> parameter als er al een externe transactiecontext gekoppeld aan de thread die u wilt gebruiken om het bericht te ontvangen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Geef <ph id="ph1">`Single`</ph> als u wilt ontvangen het bericht als een enkele interne transactie.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">U kunt opgeven <ph id="ph1">`None`</ph> als u wilt een bericht ontvangen van een transactionele wachtrij buiten een transactiecontext.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Als u werkt met transactionele wachtrijen, terugdraaien van een transactie zorgt ervoor dat alle berichten die zijn verwijderd door een aanroep naar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;moeten worden geretourneerd naar de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">De verwijdering is niet niet ongedaan worden gemaakt totdat de transactie doorgevoerd is.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">U hebt niet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Een van de <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden, de beschrijving van het type van de transactiecontext koppelen aan het bericht.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">De <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parameter is niet een van de <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> leden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Removes the current message from the queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht uit de wachtrij en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Als er een bericht te verwijderen, retourneert de methode deze onmiddellijk.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">De methode wacht anders de opgegeven time-out voor een nieuw bericht moet worden uitgevoerd.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;verwijdert en retourneert het bericht op de huidige cursorpositie.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Als de cursor zich aan het einde van de wachtrij, deze overbelasting van de methode wacht totdat een bericht beschikbaar is of het interval opgegeven door de <ph id="ph1">`timeout`</ph> parameter is verlopen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">U hebt niet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this overload on a transactional queue, Message Queuing creates a single internal transaction.</source>
          <target state="translated">Als u deze overbelasting voor een transactionele wachtrij aanroepen, maakt Message Queuing een enkele interne transactie.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for a message to arrive in the queue.</source>
          <target state="translated">Het interval van de wachttijd voor een bericht moet worden uitgevoerd in de wachtrij.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">De opgegeven waarde voor de <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parameter is ongeldig.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">De time-out is verlopen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Removes the current message from a transactional queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht in een transactionele wachtrij en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Als er een bericht te verwijderen, retourneert de methode deze onmiddellijk.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">De methode wacht anders de opgegeven time-out voor een nieuw bericht moet worden uitgevoerd.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;verwijdert en retourneert het bericht op de huidige cursorpositie.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Als de cursor zich aan het einde van de wachtrij, deze overbelasting van de methode wacht totdat een bericht beschikbaar is of het interval opgegeven door de <ph id="ph1">`timeout`</ph> parameter is verlopen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Als u werkt met transactionele wachtrijen, terugdraaien van een transactie zorgt ervoor dat alle berichten die zijn verwijderd door een aanroep naar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;moeten worden geretourneerd naar de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">De verwijdering is niet niet ongedaan worden gemaakt totdat de transactie doorgevoerd is.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">U hebt niet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Het interval van de wachttijd voor het bericht moet worden verwijderd.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies the transaction context for the message.</source>
          <target state="translated">De <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> -object dat de transactiecontext van het bericht aangeeft.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">De opgegeven waarde voor de <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parameter is ongeldig.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transaction</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">De time-out is verlopen.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes the current message from a queue and returns the message to the calling application.</source>
          <target state="translated">Hiermee verwijdert u het huidige bericht in een wachtrij en retourneert het bericht naar de aanroepende toepassing.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If there is a message to remove, the method returns it immediately.</source>
          <target state="translated">Als er een bericht te verwijderen, retourneert de methode deze onmiddellijk.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Otherwise, the method waits the specified timeout for a new message to arrive.</source>
          <target state="translated">De methode wacht anders de opgegeven time-out voor een nieuw bericht moet worden uitgevoerd.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; removes and returns the message at the cursor's current location, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;verwijdert en retourneert het bericht op de huidige locatie van de cursor, met behulp van een transactiecontext die zijn gedefinieerd door de <ph id="ph1">`transactionType`</ph> parameter.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cursor is at the end of the queue, this overload of the method waits until a message is available or the interval specified by the <ph id="ph1">`timeout`</ph> parameter has expired.</source>
          <target state="translated">Als de cursor zich aan het einde van de wachtrij, deze overbelasting van de methode wacht totdat een bericht beschikbaar is of het interval opgegeven door de <ph id="ph1">`timeout`</ph> parameter is verlopen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">Geef <ph id="ph1">`Automatic`</ph> voor de <ph id="ph2">`transactionType`</ph> parameter als er al een externe transactiecontext gekoppeld aan de thread die u wilt gebruiken om het bericht te ontvangen.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">Geef <ph id="ph1">`Single`</ph> als u wilt ontvangen het bericht als een enkele interne transactie.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">U kunt opgeven <ph id="ph1">`None`</ph> als u wilt een bericht ontvangen van een transactionele wachtrij buiten een transactiecontext.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using queue journaling, removing the message causes a copy to be kept in the journal queue, just as the &lt;xref:System.Messaging.MessageQueue&gt; class's &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method does.</source>
          <target state="translated">Als u van logboekregistratie in de wachtrij gebruikmaakt, het bericht verwijdert een kopie worden bewaard in de logboekwachtrij, net zoals de &lt;xref:System.Messaging.MessageQueue&gt;van de klasse &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;webmethode.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with transactional queues, a rollback of a transaction causes any messages removed by a call to &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; to be returned to the queue.</source>
          <target state="translated">Als u werkt met transactionele wachtrijen, terugdraaien van een transactie zorgt ervoor dat alle berichten die zijn verwijderd door een aanroep naar &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;moeten worden geretourneerd naar de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removal is not irreversible until the transaction is committed.</source>
          <target state="translated">De verwijdering is niet niet ongedaan worden gemaakt totdat de transactie doorgevoerd is.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you remove the current message, the cursor is moved to the next message.</source>
          <target state="translated">Wanneer u het huidige bericht verwijdert, wordt de cursor naar het volgende bericht verplaatst.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.</source>
          <target state="translated">U hebt niet aanroepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het aanroepen van &lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;.&lt;/xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt; &lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The interval of time to wait for the message to be removed.</source>
          <target state="translated">Het interval van de wachttijd voor het bericht moet worden verwijderd.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated">Een van de <bpt id="p1">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> waarden, de beschrijving van het type van de transactiecontext koppelen aan het bericht.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the first message available in the queue.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het eerste bericht beschikbaar in de wachtrij.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated">De opgegeven waarde voor de <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept> parameter is ongeldig.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The timeout has expired.</source>
          <target state="translated">De time-out is verlopen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">transactionType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not one of the <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> members.</source>
          <target state="translated">De <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">transactionType</ph> <ept id="p1">&lt;/code&gt;</ept> parameter is niet een van de <bpt id="p2">&lt;xref href="System.Messaging.MessageQueueTransactionType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> leden.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Resets the current enumerator so it points to the head of the queue.</source>
          <target state="translated">Hiermee stelt u de huidige enumerator zodat deze naar de kop van de wachtrij verwijst.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator can only move in a forward direction.</source>
          <target state="translated">Een enumerator kan alleen een vooruit verplaatsen.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to start over at the beginning of the queue.</source>
          <target state="translated">Gebruik deze methode te beginnen aan het begin van de wachtrij.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Reset, the cursor points to the first message.</source>
          <target state="translated">Na het opnieuw instellen wordt aangeroepen, wordt de cursor verwijst naar het eerste bericht.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to call &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt; after calling Reset to move the cursor forward to the first message in the queue.</source>
          <target state="translated">U hoeft niet aan te roepen &lt;xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;na het opnieuw instellen voor het verplaatsen van de cursor wordt aangeroepen door te sturen naar het eerste bericht in de wachtrij.&lt;/xref:System.Messaging.MessageEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">Retourneert een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het bericht op de cursorpositie.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that references the message at the current cursor position.</source>
          <target state="translated">Een <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> dat verwijst naar het bericht op de cursorpositie.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>