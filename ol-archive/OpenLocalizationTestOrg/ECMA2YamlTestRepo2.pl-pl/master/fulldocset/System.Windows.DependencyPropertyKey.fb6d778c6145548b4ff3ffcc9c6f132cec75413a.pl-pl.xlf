<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4691a6e122ecbf5305faed03fb963be4f3007c7e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyPropertyKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6841db7b46cbc620ad780d693b6cf47c03bc2d50</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8a436c8a112474f58b9bb1881a040508df4e8e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a dependency property identifier for limited write access to a read-only dependency property.</source>
          <target state="translated">Zapewnia ograniczony dostęp zapisu do właściwości tylko do odczytu zależności identyfikatora właściwości zależności.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>DependencyPropertyKey instances are obtained as the return value of a dependency property registration call using the methods &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt; or &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.</source>
          <target state="translated">DependencyPropertyKey wystąpienia są uzyskiwane jako wartość zwracaną przez wywołanie rejestracji właściwości zależności przy użyciu metody &lt;xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;lub &lt;xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt;.&lt;/xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A&gt; &lt;/xref:System.Windows.DependencyProperty.RegisterReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types that register a dependency property can use the DependencyPropertyKey in calls to &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; and &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt; that adjust the property's value as part of class logic.</source>
          <target state="translated">Typy, które Zarejestruj właściwości zależności można użyć DependencyPropertyKey w wywołaniach &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;i &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;który dostosowanie wartości właściwości jako część logiki klasy.&lt;/xref:System.Windows.DependencyObject.ClearValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If permitted by the access level of the key, related classes can use the key and the dependency property also.</source>
          <target state="translated">Jeśli dozwolone przez poziom dostępu do klucza, powiązanymi klasami również użyć klucza i właściwości zależności.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, you can declare the key as internal, and other types within the same assembly can also set that dependency property.</source>
          <target state="translated">Na przykład można zadeklarować klucz jako wewnętrzne i innych typów w ramach tego samego zestawu można również ustawić tej właściwości zależności.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyPropertyKey returned by read-only dependency property registration should not be made public, because exposing the key makes the property settable, thus defeating the point of registering it as a read-only dependency property.</source>
          <target state="translated">DependencyPropertyKey zwrócony przez rejestracji właściwości tylko do odczytu zależności nie należy publiczne, ponieważ udostępnianie klucz sprawia, że właściwość można ustawić, w związku z tym defeating punktu rejestrując go jako właściwość zależności tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, exposing the key causes a mismatch between the available dependency property behaviors and its <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> property wrapper implementations, which is bad class design.</source>
          <target state="translated">Również udostępnianie klucz powoduje niezgodność między dostępne zależności zachowania właściwości i jego <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> implementacji otoki właściwości, które jest zła projektowania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of exposing the key itself, you should instead expose the &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A&gt; value of the DependencyPropertyKey as a <ph id="ph1">`public static readonly`</ph>&lt;xref:System.Windows.DependencyProperty&gt; on your class.</source>
          <target state="translated">Zamiast udostępnianie samego klucza, zamiast tego powinny ujawniać &lt;xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A&gt;wartość DependencyPropertyKey jako <ph id="ph1">`public static readonly`</ph> &lt;xref:System.Windows.DependencyProperty&gt;w Twojej klasie.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the property to return a valid dependency property identifier for certain property system operations such as enumerating locally set values.</source>
          <target state="translated">Dzięki temu właściwości do zwrócenia zależności nieprawidłowy identyfikator właściwości dla niektórych właściwości systemu operacji, takich jak lokalnie wyliczania zestaw wartości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the identifier thus obtained does not have the full capabilities of a &lt;xref:System.Windows.DependencyProperty&gt; for many property system operations.</source>
          <target state="translated">Jednak identyfikator uzyskanych w związku z tym nie ma w pełni możliwości &lt;xref:System.Windows.DependencyProperty&gt;na wiele właściwości systemu operacji.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the dependency property identifier associated with this specialized read-only dependency property identifier.</source>
          <target state="translated">Pobiera identyfikator właściwości zależności, które są skojarzone z identyfikatorem właściwość specjalne zależności tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyProperty value enables a read-only property's identifier to participate in common property system operations using some of the same interfaces as used for read-write dependency properties.</source>
          <target state="translated">Wartość właściwości DependencyProperty włącza identyfikator właściwości tylko do odczytu do udziału wspólnych właściwości operacje systemu za pomocą niektóre z tych samych interfejsów jako używane dla właściwości zależności odczytu i zapisu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to implement the get property accessor for a read-only dependency property, you should create and expose a &lt;xref:System.Windows.DependencyProperty&gt; identifier on your class.</source>
          <target state="translated">Aby mogła implementować metody dostępu właściwości get dla właściwości tylko do odczytu zależności, należy utworzyć i uwidocznić &lt;xref:System.Windows.DependencyProperty&gt;identyfikatora klasy użytkownika.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This serves two purposes:      -   Your own class needs the &lt;xref:System.Windows.DependencyProperty&gt; identifier in order to implement the get accessor for the property wrapper.</source>
          <target state="translated">Służy do dwóch celów: — Twoja klasa musi być właścicielem &lt;xref:System.Windows.DependencyProperty&gt;identyfikator, aby mogła implementować metody dostępu get dla właściwości otoki.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the &lt;xref:System.Windows.DependencyProperty&gt; as a parameter for the &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; call that implements the get accessor.</source>
          <target state="translated">Możesz użyć &lt;xref:System.Windows.DependencyProperty&gt;jako parametru dla &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;wywołania, który implementuje metody dostępu get.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.DependencyProperty&gt; identifiers expose your dependency property to the property system such that other methods that rely on metadata can access it in a standard form.</source>
          <target state="translated">- &lt;xref:System.Windows.DependencyProperty&gt;identyfikatory uwidocznienie z właściwości zależności w systemie właściwości, dzięki czemu innych metod, które opierają się na metadanych do niego dostęp w formie standardowej.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, if you called &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt; on some &lt;xref:System.Windows.DependencyObject&gt; and obtained an enumeration of locally set properties (values and identifiers) the identifier returned for a read-only dependency property would be your &lt;xref:System.Windows.DependencyProperty&gt; value rather than the key.</source>
          <target state="translated">Na przykład jeśli wywołujesz &lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;na niektórych &lt;xref:System.Windows.DependencyObject&gt;i pobierane wyliczenie lokalnie zestawu właściwości (wartości i identyfikatorów), identyfikator zwrócona dla właściwości tylko do odczytu zależności będą Twojej &lt;xref:System.Windows.DependencyProperty&gt;wartość zamiast klucza.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not exposing a &lt;xref:System.Windows.DependencyProperty&gt; identifier does not increase the security of your read-only dependency property in any way, it just makes operations that involve your property more awkward both for subsequent derived classes and class instances.</source>
          <target state="translated">Udostępnianie nie &lt;xref:System.Windows.DependencyProperty&gt;Identyfikator nie zwiększenie bezpieczeństwa sieci właściwości tylko do odczytu zależności w dowolny sposób, ale tylko operacji związanych z właściwości więcej nieodpowiednich zarówno dla kolejnych klas pochodnych i wystąpień klas.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To expose the  &lt;xref:System.Windows.DependencyProperty&gt; identifier on your class, you call DependencyProperty directly on your key.</source>
          <target state="translated">Aby udostępnić &lt;xref:System.Windows.DependencyProperty&gt;identyfikatora klasy, należy wywołać element DependencyProperty bezpośrednio na klucz.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this value to create a <ph id="ph1">`public static readonly`</ph>&lt;xref:System.Windows.DependencyProperty&gt; identifier on the class, which parallels the &lt;xref:System.Windows.DependencyPropertyKey&gt;.</source>
          <target state="translated">Użyj tej wartości, aby utworzyć <ph id="ph1">`public static readonly`</ph> &lt;xref:System.Windows.DependencyProperty&gt;Identyfikator klasy, która równoleżnikami &lt;xref:System.Windows.DependencyPropertyKey&gt;.&lt;/xref:System.Windows.DependencyPropertyKey&gt; &lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The relevant dependency property identifier.</source>
          <target state="translated">Identyfikator właściwości odpowiednich zależności.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.</source>
          <target state="translated">Zastępuje metadane właściwości tylko do odczytu zależności reprezentowanego przez ten identyfikator właściwości zależności.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overriding metadata on a read-only dependency property is done for similar reasons as overriding metadata on a read-write dependency property, and is restricted to access at the key level because behaviors specified in the metadata can change the set behavior (the default value, for instance).</source>
          <target state="translated">Zastępowanie metadanych dla właściwości tylko do odczytu zależności odbywa się podobnych przyczyn jako Zastępowanie metadanych dla właściwości zależności odczytu i zapisu i jest ograniczony do dostęp na poziomie klucza, ponieważ określony w metadanych zachowania można zmienić zachowanie zestawu (wartość domyślna, na przykład).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with read-write dependency properties, overriding metadata on a read-only dependency property should only be done prior to that property being placed in use by the property system (this equates to the time that specific instances of objects that register the property are instantiated).</source>
          <target state="translated">Jako właściwości zależności odczytu i zapisu, zastępowanie metadanych dla właściwości tylko do odczytu zależności powinno być wykonane przed tą właściwością zostanie umieszczona w użycia przez system właściwości (to jest równa godzinę, o której tworzone są określone wystąpienia obiektów, które rejestrują właściwości).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to OverrideMetadata should only be performed within the static constructors of the type that provides itself as the <ph id="ph1">`forType`</ph> parameter of this method, or equivalent initialization for that class.</source>
          <target state="translated">Wywołania metody OverrideMetadata powinny zostać wykonane tylko w konstruktorów statycznych typu, który udostępnia siebie jako <ph id="ph1">`forType`</ph> parametru tej metody, lub równoważne inicjowania dla tej klasy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method effectively forwards to the &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt; method, passing the &lt;xref:System.Windows.DependencyPropertyKey&gt; instance as the key parameter.</source>
          <target state="translated">Ta metoda skutecznie przekazuje do &lt;xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;jest metoda &lt;xref:System.Windows.DependencyPropertyKey&gt;wystąpienia jako parametr klucza.&lt;/xref:System.Windows.DependencyPropertyKey&gt; &lt;/xref:System.Windows.DependencyProperty.OverrideMetadata%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type on which this dependency property exists and metadata should be overridden.</source>
          <target state="translated">Typ, na którym ta właściwość zależności istnieje i powinna zostać zastąpiona w metadanych.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Metadata supplied for this type.</source>
          <target state="translated">Metadane podane dla tego typu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Attempted metadata override on a read-write dependency property (cannot be done using this signature).</source>
          <target state="translated">Próba metadane zastępcze dla właściwości zależności odczytu i zapisu (nie można wykonać za pomocą tego podpisu).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Metadata was already established for the property as it exists on the provided type.</source>
          <target state="translated">Metadane już zostało ustanowione dla właściwości, ponieważ znajduje się na udostępnionego typu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>