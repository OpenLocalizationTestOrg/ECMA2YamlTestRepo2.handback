<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ce0b224927104a1128e11d8115c047dedbac509</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CharEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6496d4cad20c484b5b3dde327b7a84e6f96ee6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd8ffbc3a7ac62cdc2a76dc47127321c76dbd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports iterating over a &lt;xref:System.String&gt; object and reading its individual characters.</source>
          <target state="translated">Obsługuje Iterowanie po &lt;xref:System.String&gt;obiektu i odczytywanie ich indywidualnych znaków.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">Ta klasa nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator provides read-only access to the characters in a referenced &lt;xref:System.String&gt; object.</source>
          <target state="translated">CharEnumerator umożliwia dostęp tylko do odczytu do znaków w odwoływany &lt;xref:System.String&gt;obiektu.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">`foreach`</ph> statement of the Microsoft Visual Basic and C# programming languages, which iterates through the elements of a collection, retrieves a CharEnumerator from a &lt;xref:System.String&gt; object in order to iterate through the characters in that object.</source>
          <target state="translated">Na przykład <ph id="ph1">`foreach`</ph> instrukcji języka Visual Basic i C# języków programowania, który iteruje po kolekcji elementów, pobiera CharEnumerator z &lt;xref:System.String&gt;obiekt, aby można było wykonać iterację znaków w tym obiekcie.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no public constructor for CharEnumerator.</source>
          <target state="translated">Nie ma publicznego konstruktora dla CharEnumerator.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call a &lt;xref:System.String&gt; object's &lt;xref:System.String.GetEnumerator%2A&gt; method to obtain a CharEnumerator that is initialized to reference the string.</source>
          <target state="translated">Zamiast tego wywołać &lt;xref:System.String&gt;obiektu &lt;xref:System.String.GetEnumerator%2A&gt;metodę, aby uzyskać CharEnumerator, inicjowany do odwołania ciągu.&lt;/xref:System.String.GetEnumerator%2A&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A CharEnumerator maintains an internal index to the characters in the string the CharEnumerator references.</source>
          <target state="translated">CharEnumerator obsługuje wewnętrzny indeks znaków w ciągu CharEnumerator odwołania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of the index is invalid when it references a character position logically before the first character or after the last character in the string, and valid when it references a character within the string.</source>
          <target state="translated">Stan indeksu jest nieprawidłowy, gdy odwołuje się do pozycji znaku logicznie przed pierwszym znakiem i po ostatnim znaku w ciągu i ważne, gdy odwołuje się do znaku w ciągu.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is initialized to a position logically before the first character, and is set to a position after the last character when the iteration is complete.</source>
          <target state="translated">Indeks jest ustawiana na pozycji logicznie przed pierwszym znakiem i ma ustawioną wartość pozycji za ostatni znak po zakończeniu iteracji.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if you attempt to access a character while the index is invalid.</source>
          <target state="translated">Wyjątek jest próba uzyskania dostępu znak, gdy indeks jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method increments the index by one, so the first and subsequent characters are accessed in turn.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.MoveNext%2A&gt;Metody zwiększa indeks, dlatego pierwsze i kolejne znaki są dostępne z kolei.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Reset%2A&gt; method sets the index to a position logically before the first character.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Reset%2A&gt;Metody ustawia indeks na pozycji logicznie przed pierwszym znakiem.&lt;/xref:System.CharEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Current%2A&gt; property retrieves the character currently referenced by index.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Current%2A&gt;Właściwość pobiera znak obecnie wywoływane przez indeks.&lt;/xref:System.CharEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator.Clone%2A&gt; method creates a copy of the CharEnumerator.</source>
          <target state="translated">&lt;xref:System.CharEnumerator.Clone%2A&gt;Metoda tworzy kopię CharEnumerator.&lt;/xref:System.CharEnumerator.Clone%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Several independent instances of CharEnumerator across one or more threads can have access to a single instance of &lt;xref:System.String&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Kilka wystąpień niezależne CharEnumerator między co najmniej jeden wątek może mieć dostęp do pojedynczego wystąpienia &lt;xref:System.String&gt;.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is implemented to support the &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Ta klasa jest zaimplementowana do obsługi &lt;xref:System.Collections.IEnumerator&gt;interfejsu.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information regarding the use of an enumerator, see the &lt;xref:System.Collections.IEnumerator&gt; topic.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat użycia modułu wyliczającego zobacz &lt;xref:System.Collections.IEnumerator&gt;tematu.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Tworzy kopię bieżącego <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is a copy of this instance of &lt;xref:System.CharEnumerator&gt; and its current state.</source>
          <target state="translated">Wartość zwracana jest kopię tego wystąpienia &lt;xref:System.CharEnumerator&gt;i swojego bieżącego stanu.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for saving your state while iterating through a &lt;xref:System.String&gt; object.</source>
          <target state="translated">Jest to przydatne w przypadku Zapisywanie stanu użytkownika podczas iteracji &lt;xref:System.String&gt;obiektu.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose your application uses an original instance of &lt;xref:System.CharEnumerator&gt; to iterate through each character in a &lt;xref:System.String&gt;.</source>
          <target state="translated">Na przykład załóżmy, że aplikacja korzysta z oryginalnego wystąpienia &lt;xref:System.CharEnumerator&gt;do iterowania po każdym znaku w &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When some unique character is encountered, your application pauses processing and invokes the Clone method.</source>
          <target state="translated">W przypadku niektórych znaków unikatowy aplikacji umożliwia przetwarzanie i wywołuje metodę klonowania.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In effect, this saves the &lt;xref:System.CharEnumerator&gt; object's index in the &lt;xref:System.String&gt;.</source>
          <target state="translated">W efekcie zapisuje &lt;xref:System.CharEnumerator&gt;indeksu obiektu &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application uses the clone to navigate to another part of the <ph id="ph1">`String`</ph> to perform some auxiliary processing.</source>
          <target state="translated">Aplikacja używa klonu, aby przejść do innej części <ph id="ph1">`String`</ph> do wykonania niektórych dodatkowego przetwarzania.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The side-effect of this navigation is the clone loses track of the position where processing stopped.</source>
          <target state="translated">Efektem ubocznym tego nawigacji jest klonu utraci śledzenie pozycji, której przetwarzanie zostało zakończone.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the auxiliary processing is complete, your application discards the clone and uses the original &lt;xref:System.CharEnumerator&gt; instance to resume working on the &lt;xref:System.String&gt; where the original processing stopped.</source>
          <target state="translated">Jednak po ukończeniu dodatkowego przetwarzania aplikacji odrzuca klonu i używa oryginalnej &lt;xref:System.CharEnumerator&gt;wystąpienia, aby wznowić pracę na &lt;xref:System.String&gt;gdzie oryginalnego przetwarzania zatrzymana.&lt;/xref:System.String&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is implemented to support the &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Ta metoda jest zaimplementowana do obsługi &lt;xref:System.ICloneable&gt;interfejsu.&lt;/xref:System.ICloneable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a copy of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;Czyli kopię bieżącego <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Pobiera obecnie przywoływanego znak w ciągu wyliczyć to <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Current property returns the character that is currently referenced by the index.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;Klasa obsługuje indeks wewnętrzny wyliczany ciąg i bieżącą właściwość zwraca znak, który obecnie jest przywoływany przez indeks.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be invoked only when the index is valid; otherwise, an exception is thrown.</source>
          <target state="translated">Ta właściwość powinna być wywoływana tylko wtedy, gdy indeks jest nieprawidłowy; w przeciwnym wypadku jest zwracany wyjątek.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is always invalid for an empty string ("").</source>
          <target state="translated">Indeks zawsze jest nieprawidłowy dla pustego ciągu ("").</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is also invalid after the &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; method is called.</source>
          <target state="translated">Indeks jest nieprawidłowy po również &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;lub &lt;xref:System.CharEnumerator.Reset%2A&gt;Metoda jest wywoływana.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>After either of these methods is called, invoke the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method to adjust the index to the first character in the enumerated string.</source>
          <target state="translated">Po każdej z tych metod, wywołaj &lt;xref:System.CharEnumerator.MoveNext%2A&gt;metodę, aby dopasować indeks pierwszego znaku w ciągu wyliczany.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is valid whenever the &lt;xref:System.CharEnumerator.MoveNext%2A&gt; method returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Indeks jest nieprawidłowy gdy &lt;xref:System.CharEnumerator.MoveNext%2A&gt;Metoda zwraca <ph id="ph1">`true`</ph>.&lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Current does not move the index, and consecutive calls to Current return the same character until &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, or &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; is called.</source>
          <target state="translated">Bieżący nie przenosi indeks i kolejne wywołania bieżącego zwracać ten sam znak do &lt;xref:System.CharEnumerator.MoveNext%2A&gt;, &lt;xref:System.CharEnumerator.Reset%2A&gt;, lub &lt;xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt;jest wywoływana.&lt;/xref:System.String.GetEnumerator%2A?displayProperty=fullName&gt; &lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.CharEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Znak Unicode, w obecnie odwołuje się ten <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The index is invalid; that is, it is before the first or after the last character of the enumerated string.</source>
          <target state="translated">Indeks jest nieprawidłowy. oznacza to, że jest przed pierwszym lub za ostatnim znakiem wyliczany ciąg.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call Dispose when you are finished using the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">Wywołaj metodę Dispose po zakończeniu przy użyciu &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method leaves the &lt;xref:System.CharEnumerator&gt; in an unusable state.</source>
          <target state="translated">Metoda Dispose pozostawia &lt;xref:System.CharEnumerator&gt;w stanie uniemożliwiającym jego używanie.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.CharEnumerator&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.CharEnumerator&gt; was occupying.</source>
          <target state="translated">Po wywołaniu metody Dispose, konieczne jest zwolnienie wszystkich odwołań do &lt;xref:System.CharEnumerator&gt;, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który &lt;xref:System.CharEnumerator&gt;klasy.&lt;/xref:System.CharEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> i <bpt id="p2">[</bpt>implementacja metody Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call Dispose before you release your last reference to the &lt;xref:System.CharEnumerator&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Wywołania zawsze dysponować przed zwolnieniem ostatniego odwołania do &lt;xref:System.CharEnumerator&gt;.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.CharEnumerator&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne &lt;xref:System.CharEnumerator&gt;obiektu <ph id="ph1">`Finalize`</ph> metody.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Increments the internal index of the current <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the next character of the enumerated string.</source>
          <target state="translated">Indeks wewnętrzny bieżącego zwiększa <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu na następny znak wyliczany ciąg.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the MoveNext method increments the index by one.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;Klasa obsługuje indeks wewnętrzny wyliczany ciąg i skompiluj zwiększa indeks o jeden.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call MoveNext after calling &lt;xref:System.String.GetEnumerator%2A&gt; or &lt;xref:System.CharEnumerator.Reset%2A&gt; to increment the current character position to the first character in the enumerated string.</source>
          <target state="translated">Wywołaj polecenie MoveNext po wywołaniu &lt;xref:System.String.GetEnumerator%2A&gt;lub &lt;xref:System.CharEnumerator.Reset%2A&gt;Aby zwiększyć bieżącą pozycję znaku do pierwszego znaku w ciągu wyliczany.&lt;/xref:System.CharEnumerator.Reset%2A&gt; &lt;/xref:System.String.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check that the return value is <ph id="ph1">`true`</ph> to determine that the current character position is valid.</source>
          <target state="translated">Sprawdź, czy jest zwracana wartość <ph id="ph1">`true`</ph> ustalenie, czy bieżące położenie znaku jest prawidłowa.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the index is already beyond the last character of the enumerated string, the index is not changed and <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Jeśli indeks jest poza ostatni znak wyliczany ciąg, indeks nie ulega zmianie i <ph id="ph1">`false`</ph> jest zwracany.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that if the enumerated string is empty (""), the state of the &lt;xref:System.CharEnumerator&gt; is always invalid.</source>
          <target state="translated">Zwróć uwagę, że jeśli wyliczany ciąg jest pusty (""), stan &lt;xref:System.CharEnumerator&gt;zawsze jest nieprawidłowa.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the internal index for the &lt;xref:System.CharEnumerator&gt; is initially before the first character of the enumerated string and is therefore invalid.</source>
          <target state="translated">Jest to spowodowane indeks wewnętrzny &lt;xref:System.CharEnumerator&gt;jest początkowo, przed pierwszym znakiem wyliczany ciąg i dlatego jest nieprawidłowy.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>MoveNext logically sets the index after the last (nonexistent) character of the enumerated string which is also invalid.</source>
          <target state="translated">MoveNext logicznie ustawia indeks za ostatni znak (nieistniejącą) wyliczany ciągu, który również jest nieprawidłowy.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the index is successfully incremented and within the enumerated string; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli indeks pomyślnie jest zwiększany i ciągu wyliczany; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes the index to a position logically before the first character of the enumerated string.</source>
          <target state="translated">Inicjuje indeks pozycji logicznie przed pierwszym znakiem wyliczany ciąg.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CharEnumerator&gt; class maintains an internal index to the enumerated string, and the Reset method sets the index to the invalid state.</source>
          <target state="translated">&lt;xref:System.CharEnumerator&gt;Indeks wewnętrzny wyliczany ciąg obsługuje klasy i metody resetowania ustawia indeks nieprawidłowy stan.&lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the currently referenced character in the string enumerated by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Pobiera obecnie przywoływanego znak w ciągu wyliczyć to <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Opis tego elementu członkowskiego, zobacz <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją elementu interfejsu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.CharEnumerator&gt; instance is cast to an &lt;xref:System.Collections.IEnumerator&gt; interface.</source>
          <target state="translated">Można go używać tylko wtedy, gdy &lt;xref:System.CharEnumerator&gt;wystąpienia jest rzutowane na &lt;xref:System.Collections.IEnumerator&gt;interfejsu.&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.CharEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The boxed Unicode character currently referenced by this <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Opakowany obecnie odwołuje się ten znak Unicode <bpt id="p1">&lt;xref href="System.CharEnumerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Enumeration has not started.</source>
          <target state="translated">Wyliczanie nie zostało uruchomione.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       Enumeration has ended.</source>
          <target state="translated">- lub - wyliczanie zostało zakończone.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>