<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef5a0217e216b89d3656c391ac24ed333d0bee7a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8993e930cc698df8e580a6654583385e4bb402cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd979f5a7e3a281a1fb43a5cd55931c4bc6b079d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Reprezentuje obiekt, który uczestniczy w systemie właściwości zależności.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DependencyObject class enables <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> property system services on its many derived classes.</source>
          <target state="translated">Umożliwia klasy DependencyObject <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> właściwości usług systemowych na jej wielu klas pochodnych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property system's primary function is to compute the values of properties, and to provide system notification about values that have changed.</source>
          <target state="translated">Podstawową funkcją systemu właściwość jest do obliczenia wartości właściwości oraz zapewnienie systemu powiadomień o wartości, które zostały zmienione.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another key class that participates in the property system is &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Inna klasa klucza, który uczestniczy w systemie właściwości jest &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyProperty&gt; enables the registration of dependency properties into the property system, and provides identification and information about each dependency property, whereas DependencyObject as a base class enables objects to use the dependency properties.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty&gt;Umożliwia rejestrację właściwości zależności w systemie właściwości i zawiera identyfikator i informacje o każdej właściwości zależności DependencyObject jako klasa podstawowa umożliwia obiektów do użycia właściwości zależności.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>DependencyObject services and characteristics include the following:      -   Dependency property hosting support.</source>
          <target state="translated">Usługi DependencyObject i właściwości są następujące:-właściwości zależności hosting pomocy technicznej.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You register a dependency property by calling the &lt;xref:System.Windows.DependencyProperty.Register%2A&gt; method, and storing the method's return value as a public static field in your class.</source>
          <target state="translated">Zarejestruj właściwości zależności w wywołaniu &lt;xref:System.Windows.DependencyProperty.Register%2A&gt;metody i przechowywanie wartości zwracanej metody jako publiczne pola statycznego w klasie użytkownika.&lt;/xref:System.Windows.DependencyProperty.Register%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Attached property hosting support.</source>
          <target state="translated">-Dołączona właściwość hosting pomocy technicznej.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You register an attached property by calling the &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt; method, and storing the method's return value as a public static read-only field in your class.</source>
          <target state="translated">Dołączona właściwość możesz zarejestrować w wywołaniu &lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;metody i przechowywanie wartości zwracanej przez metodę jako publiczne statyczne pole tylko do odczytu w Twojej klasy.&lt;/xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>(There are also additional member requirements; note that this represents a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> specific implementation for attached properties.</source>
          <target state="translated">(Istnieją również wymagania dodatkowy element członkowski; należy pamiętać, że jest to <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> konkretnej implementacji w przypadku dołączonych właściwości.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) Your attached property can then be set on any class that derives from DependencyObject.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>dołączony Przegląd właściwości<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.) Twoje dołączonej właściwości można następnie ustawić na dowolnej klasy, która pochodzi z obiektu DependencyObject.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Get, set, and clear utility methods for values of any dependency properties that exist on the DependencyObject.</source>
          <target state="translated">-Get, ustaw i wyczyść metody narzędziowe do wartości wszystkich właściwości zależności, które istnieją na obiekt DependencyObject.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Metadata, coerce value support, property changed notification, and override callbacks for  dependency properties or attached properties.</source>
          <target state="translated">-Metadanych, wymuszone wartość pomocy technicznej, właściwość zmienić powiadomień i wywołania zwrotne zastąpienia dla właściwości zależności lub dołączone właściwości.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the DependencyObject class facilitates the per-owner property metadata for a dependency property.</source>
          <target state="translated">Ponadto klasy DependencyObject ułatwia na właściciela metadane właściwości dla właściwości zależności.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   A common base class for classes derived from &lt;xref:System.Windows.ContentElement&gt;, &lt;xref:System.Windows.Freezable&gt;, or &lt;xref:System.Windows.Media.Visual&gt;.</source>
          <target state="translated">-Wspólną klasę podstawową dla klas pochodnych &lt;xref:System.Windows.ContentElement&gt;, &lt;xref:System.Windows.Freezable&gt;, lub &lt;xref:System.Windows.Media.Visual&gt;.&lt;/xref:System.Windows.Media.Visual&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.ContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>(&lt;xref:System.Windows.UIElement&gt;, another base element class, has a class hierarchy that includes &lt;xref:System.Windows.Media.Visual&gt;.)</source>
          <target state="translated">(&lt;xref:System.Windows.UIElement&gt;, inny base element klasa, ma hierarchii klasy, która obejmuje &lt;xref:System.Windows.Media.Visual&gt;.)&lt;/xref:System.Windows.Media.Visual&gt; &lt;/xref:System.Windows.UIElement&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Clears the local value of a property.</source>
          <target state="translated">Czyści lokalnego wartości właściwości.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The property to be cleared is specified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier.</source>
          <target state="translated">Właściwość do wyczyszczenia jest określona przez <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identyfikator.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Wyczyszczenie wartości właściwości przez wywołanie metody ClearValue niekoniecznie daje właściwości zależności domyślną wartość, która została określona w metadanych właściwości zależności.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property only specifically clears whatever local value may have been applied.</source>
          <target state="translated">Czyszczenie właściwości tylko wyraźnie czyści niezależnie od wartości lokalnej zostały zastosowane.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pierwszeństwo wartość właściwości zależności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The dependency property to be cleared, identified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object reference.</source>
          <target state="translated">Właściwości zależności, aby wyczyścić, identyfikowane przez <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> obiektu odwołania.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Attempted to call ClearValue on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Nastąpiła próba wywołania ClearValue w zapieczętowanym <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Clears the local value of a read-only property.</source>
          <target state="translated">Usuwa lokalną wartość właściwości tylko do odczytu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to be cleared is specified by a <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Właściwość do wyczyszczenia jest określona przez <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.DependencyPropertyKey&gt; identifies a read-only dependency property for property system operations.</source>
          <target state="translated">A &lt;xref:System.Windows.DependencyPropertyKey&gt;identyfikuje właściwość tylko do odczytu zależności dla właściwości systemu operacji.&lt;/xref:System.Windows.DependencyPropertyKey&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that define read-only dependency properties should not expose this key with public access.</source>
          <target state="translated">Klasy, które definiują właściwości tylko do odczytu zależności nie powinny ujawniać tego klucza publicznego.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A publicly exposed key would provide a public code pathway that negated the read-only character of the property, if methods such as &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt; or &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt; could be called outside the class or assembly, referencing the key.</source>
          <target state="translated">Klucz publicznie ujawnionych zapewni ścieżki kodu publicznego, który zanegowane znak tylko do odczytu właściwości, jeśli metod, takich jak &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;lub &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;może zostać wywołana poza klasę lub odwołanie do klucza zestawu.&lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt; &lt;/xref:System.Windows.DependencyObject.ClearValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Wyczyszczenie wartości właściwości przez wywołanie metody ClearValue niekoniecznie daje właściwości zależności domyślną wartość, która została określona w metadanych właściwości zależności.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clearing the value only specifically clears whatever local value may have been applied.</source>
          <target state="translated">Wyczyszczenie wartości tylko w szczególności czyści niezależnie od wartości lokalnej zostały zastosowane.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pierwszeństwo wartość właściwości zależności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The key for the dependency property to be cleared.</source>
          <target state="translated">Klucz dla właściwości zależności do wyczyszczenia.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Attempted to call &lt;xref:System.Windows.DependencyObject.ClearValue*&gt; on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Nastąpiła próba wywołania &lt;xref:System.Windows.DependencyObject.ClearValue*&gt;w zapieczętowanym <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.DependencyObject.ClearValue*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Coerces the value of the specified dependency property.</source>
          <target state="translated">Przekształca wynik dane wartości właściwości określonej zależności.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This is accomplished by invoking any <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function specified in property metadata for the dependency property as it exists on the calling <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jest to osiągane przez wywoływanie żadnego <bpt id="p1">&lt;xref href="System.Windows.CoerceValueCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> funkcji określonej w metadanych właściwości dla właściwości zależności, ponieważ znajduje się na wywołujący <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to being explicitly invoked through calling CoerceValue, the &lt;xref:System.Windows.CoerceValueCallback&gt; for a dependency property is also invoked internally whenever the dependency property value is being re-evaluated by the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> property system.</source>
          <target state="translated">Oprócz jawnie wywoływany przez element CoerceValue, wywoływania &lt;xref:System.Windows.CoerceValueCallback&gt;Zależność właściwości jest również wywoływana wewnętrznie zawsze, gdy wartość właściwości zależności jest ponownie oceniane przez <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> właściwości systemu.&lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you invoke the CoerceValue method, you are ultimately invoking the coerce value callback for the property that you specify.</source>
          <target state="translated">Po wywołaniu metody element CoerceValue są ostatecznie wywoływanie wywołania zwrotnego wartość coerce dla określonej właściwości.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you will invoke CoerceValue only if you know that a coerce value callback exists, and if you know the callback's criteria for coercion.</source>
          <target state="translated">Zwykle będzie wywołać element CoerceValue tylko wtedy, gdy wiesz, czy istnieje wartość coerce wywołania zwrotnego i jeśli znasz kryteria metodę wywołania zwrotnego dla wymuszenia.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common scenario for calling CoerceValue is within class handling or property change callbacks of related properties that influence each other's values in a dependent way.</source>
          <target state="translated">Najbardziej typowym scenariuszem wywoływania element CoerceValue mieści się obsługa klasy lub wywołań zwrotnych zmiany właściwości powiązanych właściwości, które wpływają na wartości w sposób zależnych.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>wywołania zwrotne właściwości zależności i sprawdzania poprawności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property to coerce.</source>
          <target state="translated">Identyfikator właściwości zależności, aby wymusić.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dp</ph><ept id="p1">&lt;/code&gt;</ept> or its value were invalid or do not exist.</source>
          <target state="translated">Określony <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dp</ph> <ept id="p1">&lt;/code&gt;</ept> lub jego wartość były nieprawidłowe lub nie istnieją.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that wraps the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">Pobiera <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> który opakowuje <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> typu tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful if an object that is returned from a method has a return value type of &lt;xref:System.Windows.DependencyObject&gt; and you want to perform property system specific operations on it depending on its type.</source>
          <target state="translated">Ta właściwość jest przydatna, jeśli obiekt jest zwracany z metody ma typ wartości zwracanej &lt;xref:System.Windows.DependencyObject&gt;i chcesz przeprowadzić właściwości określonych operacji w systemie go w zależności od jego typu.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example it is more efficient to call &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt; using the &lt;xref:System.Windows.DependencyObjectType&gt; rather than the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type.</source>
          <target state="translated">Na przykład jest bardziej wydajne, aby wywołać &lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;przy użyciu &lt;xref:System.Windows.DependencyObjectType&gt;zamiast <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> typu.&lt;/xref:System.Windows.DependencyObjectType&gt; &lt;/xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.DependencyObjectType&gt; facilitates faster lookup.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyObjectType&gt;Umożliwia szybsze wyszukiwanie.&lt;/xref:System.Windows.DependencyObjectType&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that wraps the <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> który opakowuje <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> typu tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Determines whether a provided <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is equivalent to the current <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Określa, czy podany <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> jest odpowiednikiem bieżącego <bpt id="p2">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation is reference equality only, and does not attempt to evaluate value equality of the contained properties.</source>
          <target state="translated">Ta implementacja jest tylko równości odwołań, a nie próbuje ocenić równości wartości zawartych w niej właściwości.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to the current instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Do porównania z bieżącym wystąpieniem.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the two instances are the same; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli dwa wystąpienia są takie same; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Pobiera wartość skrótu dla tego <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer hash code.</source>
          <target state="translated">Całkowita 32-bitowa wartość skrótu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Creates a specialized enumerator for determining which dependency properties have locally set values on this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Tworzy specjalne modułu wyliczającego określania właściwości zależności, które ustawiono lokalnie wartości na tym <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>local value<ept id="p1">*</ept> is any dependency property value that was set by &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;, as opposed to other aspects of the property system.</source>
          <target state="translated">A <bpt id="p1">*</bpt>wartości lokalnej<ept id="p1">*</ept> jest dowolną wartością właściwości zależności, która została ustawiona przez &lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;, w przeciwieństwie do innych aspektów dla właściwości.&lt;/xref:System.Windows.DependencyObject.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.LocalValueEnumerator&gt; obtained by calling GetLocalValueEnumerator can be used to enumerate properties that have a locally set value on a &lt;xref:System.Windows.DependencyObject&gt; instance.</source>
          <target state="translated">&lt;xref:System.Windows.LocalValueEnumerator&gt;Została utworzona przez wywołanie GetLocalValueEnumerator może służyć do wyliczenia właściwości, które mają lokalnie ustawiony wartość na &lt;xref:System.Windows.DependencyObject&gt;wystąpienia.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.LocalValueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each such property is represented in the enumerator by a &lt;xref:System.Windows.LocalValueEntry&gt; object, which has properties that reference the specific &lt;xref:System.Windows.DependencyProperty&gt; and its values.</source>
          <target state="translated">Każdej z tych właściwości jest reprezentowany przez moduł wyliczający &lt;xref:System.Windows.LocalValueEntry&gt;obiektu, który ma właściwości, które odwołują się do konkretnych &lt;xref:System.Windows.DependencyProperty&gt;i jej wartości.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.LocalValueEntry&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique of enumerating over the locally set values can be used for optimization or for other handling of local values, such as to determine which property values of a &lt;xref:System.Windows.DependencyObject&gt; would change if they were cleared.</source>
          <target state="translated">Ta technika wyliczania za pośrednictwem lokalnie ustawiony wartości może służyć do optymalizacji lub innych obsługi wartości lokalnej, takich jak do określenia wartości właściwości z &lt;xref:System.Windows.DependencyObject&gt;zmieniłby, jeśli zostały one wyczyszczone.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The returned &lt;xref:System.Windows.LocalValueEnumerator&gt; might contain &lt;xref:System.Windows.LocalValueEntry&gt; records for dependency properties that are read-only, or dependency properties where values are calculated by the property system.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Zwróconego &lt;xref:System.Windows.LocalValueEnumerator&gt;może zawierać &lt;xref:System.Windows.LocalValueEntry&gt;rekordów dla właściwości zależności, które są tylko do odczytu lub właściwości zależności, których wartości są obliczane przez system właściwości.&lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.LocalValueEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a visual framework element that has an established width through layout will report a local value for &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;.</source>
          <target state="translated">Na przykład element visual framework, który ma ustaloną szerokość za pośrednictwem układu będzie zgłaszać wartości lokalnej dla &lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;.&lt;/xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are getting local values in order to reset them, check the &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt; value on the property identifier of each &lt;xref:System.Windows.LocalValueEntry&gt; to verify that the &lt;xref:System.Windows.DependencyProperty&gt; in question is not read-only.</source>
          <target state="translated">Aby zresetować je w przypadku uzyskiwania wartości lokalnej, sprawdź &lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;wartość na podstawie identyfikatora właściwości każdego &lt;xref:System.Windows.LocalValueEntry&gt;do sprawdzenia, czy &lt;xref:System.Windows.DependencyProperty&gt;zagrożona nie jest tylko do odczytu.&lt;/xref:System.Windows.DependencyProperty&gt; &lt;/xref:System.Windows.LocalValueEntry&gt; &lt;/xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A specialized local value enumerator.</source>
          <target state="translated">Moduł wyliczający specjalne wartości lokalnej.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the current effective value of a dependency property on this instance of a <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Zwraca bieżącą wartość skuteczne właściwości zależności dla tego wystąpienia obiektu <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">*</bpt>effective value<ept id="p1">*</ept> is the value of the property that is returned by the property system to any caller that is requesting the value.</source>
          <target state="translated"><bpt id="p1">*</bpt>Wartość efektywna<ept id="p1">*</ept> jest wartością zwracaną przez system właściwości do każdego obiektu wywołującego, który żąda wartość właściwości.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effective value is the result of the property system having evaluated all the possible inputs that participate in the property system value precedence.</source>
          <target state="translated">Wartość efektywna jest wynikiem systemu właściwość o ocenie wszystkich możliwych danych wejściowych uczestniczących w pierwszeństwo wartość właściwości systemu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes coercion and animation.</source>
          <target state="translated">Dotyczy to również koercja i animacji.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pierwszeństwo wartość właściwości zależności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will never return &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">Ta metoda zwróci nigdy nie &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.DependencyProperty&gt; is a sentinel value for the property system that is used in various capacities internally and occasionally also exposed through coercion callbacks.</source>
          <target state="translated">&lt;xref:System.Windows.DependencyProperty&gt;Jest wartością wartownik systemu właściwości, który jest używany w różnych formach wewnętrznie i czasami również dostępne za pośrednictwem wywołania zwrotne koercja.&lt;/xref:System.Windows.DependencyProperty&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are not sure what the property's type should be, you can query the identifier of the requested dependency property to determine whether there is a more specific &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt; that the return value can be converted to.</source>
          <target state="translated">Jeśli nie masz pewności, co powinna być typu właściwości, można zbadać identyfikatora właściwości zależności żądanych, aby ustalić, czy jest określony więcej &lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;której można przekonwertować wartości zwracanej.&lt;/xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to retrieve the value for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Identyfikator można pobrać wartości właściwości.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns the current effective value.</source>
          <target state="translated">Zwraca bieżącą wartość skuteczne.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dp</ph><ept id="p1">&lt;/code&gt;</ept> or its value was invalid, or the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">dp</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">Określony <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dp</ph> <ept id="p1">&lt;/code&gt;</ept> lub jego wartość jest nieprawidłowy lub określony <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">dp</ph> <ept id="p2">&lt;/code&gt;</ept> nie istnieje.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Re-evaluates the effective value for the specified dependency property</source>
          <target state="translated">Ponownie oblicza wartość efektywna dla właściwości zależności określony</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call InvalidateProperty, any associated and applicable &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions registered for that dependency property might be invoked.</source>
          <target state="translated">Podczas wywoływania InvalidateProperty, wszystkie skojarzone i stosowane &lt;xref:System.Windows.CoerceValueCallback&gt;lub &lt;xref:System.Windows.PropertyChangedCallback&gt;Funkcje zarejestrowany dla tej właściwości zależności mogą wywołać.&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling InvalidateProperty on a property that has its local value set will have no effect, because the local value takes precedence over other property system inputs, except for animations.</source>
          <target state="translated">Wywoływania InvalidateProperty dla właściwości, która ma lokalnego wartością ustawioną nie odniesie żadnego skutku, ponieważ wartość lokalnego mają pierwszeństwo przed innych danych wejściowych do systemu z właściwości, z wyjątkiem animacji.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you could call &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;, then call InvalidateProperty.</source>
          <target state="translated">Jednak można wywołać &lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;, następnie wywołaj InvalidateProperty.&lt;/xref:System.Windows.DependencyObject.ClearValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>pierwszeństwo wartość właściwości zależności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling InvalidateProperty is not necessarily applicable for many dependency property scenarios.</source>
          <target state="translated">Wywołania InvalidateProperty nie jest mieć zastosowania w różnych scenariuszach właściwości zależności.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a dependency property becomes invalidated because of value changes in any of the constituents, the property system invalidates and re-evaluates the dependency property automatically.</source>
          <target state="translated">Jeśli właściwość zależności staje się unieważnionych z powodu zmiany wartości w jednym ze składników, system właściwości unieważnia i ponownie automatycznie sprawdza właściwości zależności.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there are still some appropriate scenarios where InvalidateProperty is useful.</source>
          <target state="translated">Jednak nadal istnieją pewne odpowiednie scenariusze, w których InvalidateProperty jest użyteczny.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, you can use InvalidateProperty inside the coerce value or property changed callback for a different dependency property.</source>
          <target state="translated">W szczególności można użyć InvalidateProperty wewnątrz coerce wywołania zwrotnego dla właściwości zależności różnych zmiany wartości lub właściwości.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use InvalidateProperty to force re-evaluation of a binding against a data source that is not able to implement the recommended &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt; notification mechanism (perhaps if consuming data classes that cannot be derived from, or where the data is a static member).</source>
          <target state="translated">Umożliwia także InvalidateProperty Aby wymusić ponowną ocenę powiązanie względem źródła danych, który nie jest w stanie do zaimplementowania zalecanej &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;mechanizm powiadomień (możliwe, że jeśli korzystanie z klas danych, która nie może dziedziczyć po lub gdy dane są statycznego elementu członkowskiego).&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to invalidate.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Identyfikator właściwości unieważnić.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this instance is currently sealed (read-only).</source>
          <target state="translated">Pobiera wartość wskazującą, czy to wystąpienie jest obecnie zapieczętowane (tylko do odczytu).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is set internally.</source>
          <target state="translated">Ta wartość jest ustawiana wewnętrznie.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this instance is sealed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli to wystąpienie jest zapieczętowany; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Invoked whenever the effective value of any dependency property on this <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been updated.</source>
          <target state="translated">Wywoływane, gdy wartość efektywna dowolnej właściwości zależności na tym <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> została zaktualizowana.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The specific dependency property that changed is reported in the event data.</source>
          <target state="translated">Właściwości określonych zależności, które zmienić jest zgłaszana w danych zdarzenia.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to generally detect individual property changes or perform invalidations of properties on a per-case basis.</source>
          <target state="translated">Ta metoda nie ma zazwyczaj wykrycia zmiany indywidualne właściwości lub wykonać invalidations właściwości na poszczególnych przypadków.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnPropertyChanged is instead intended for modifications of the general invalidation pattern, if certain information is known about wide classifications of properties.</source>
          <target state="translated">OnPropertyChanged zamiast tego jest przeznaczony dla modyfikacje wzorca unieważniania ogólne, jeśli znane jest niektórych informacji o klasyfikacjach szeroki właściwości.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, changes in a &lt;xref:System.Windows.Freezable&gt; might be changes in the value types of the &lt;xref:System.Windows.Freezable&gt;, or might be subproperties, where the changes are within other &lt;xref:System.Windows.Freezable&gt; references.</source>
          <target state="translated">Na przykład zmiany w &lt;xref:System.Windows.Freezable&gt;może być zmiany w typach wartości &lt;xref:System.Windows.Freezable&gt;, lub może nie zawierać właściwości, której zmiany są w innych &lt;xref:System.Windows.Freezable&gt;odwołań.&lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.Freezable&gt; &lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Freezable&gt; override implementation of OnPropertyChanged uses internal information to determine whether the properties are subproperties, and provides appropriate base class logic for either case.</source>
          <target state="translated">&lt;xref:System.Windows.Freezable&gt;Zastąpienie implementacja OnPropertyChanged używa wewnętrzny informacji do ustalenia, czy właściwości mają właściwości i udostępnia logikę odpowiedniej klasy podstawowej dla obu przypadkach.&lt;/xref:System.Windows.Freezable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>OnPropertyChanged is potentially invoked many times during the life of an object.</source>
          <target state="translated">OnPropertyChanged jest potencjalnie wywołana wiele razy w okresie istnienia obiektu.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you can achieve better performance for the overall property system if you override the metadata of specific properties and then attach &lt;xref:System.Windows.CoerceValueCallback&gt; or &lt;xref:System.Windows.PropertyChangedCallback&gt; functions for individual properties.</source>
          <target state="translated">W związku z tym można osiągnąć lepszą wydajność systemu ogólne właściwości, jeśli Zastępowanie metadanych określone właściwości, a następnie dołącz &lt;xref:System.Windows.CoerceValueCallback&gt;lub &lt;xref:System.Windows.PropertyChangedCallback&gt;funkcje dla poszczególnych właściwości.&lt;/xref:System.Windows.PropertyChangedCallback&gt; &lt;/xref:System.Windows.CoerceValueCallback&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you would use this method if a &lt;xref:System.Windows.DependencyObject&gt; includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">Jednak czy użyć tej metody, jeśli &lt;xref:System.Windows.DependencyObject&gt;obejmuje znaczących właściwości zależności powiązanych wartości, lub jeśli zawiera logikę, takich jak zachowanie renderowania, który musi zostać uruchomiony ponownie dla kilku powiązanych przypadków właściwość invalidations.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</source>
          <target state="translated">Dane zdarzenia, który będzie zawierać identyfikator właściwości zależności zainteresowań, metadane właściwości dla typu i starej i nowej wartości.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns the local value of a dependency property, if it exists.</source>
          <target state="translated">Zwraca wartość lokalnego właściwości zależności, jeśli istnieje.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt; for most typical "get" operations for a dependency property.</source>
          <target state="translated">Należy używać &lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;najbardziej typowych operacji "get" dla właściwości zależności.&lt;/xref:System.Windows.DependencyObject.GetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReadLocalValue does not return the effective value for a variety of circumstances where the value was not locally set.</source>
          <target state="translated">ReadLocalValue nie zwraca wartość efektywna dla różnych okolicznościach w której wartość nie została lokalnie ustawiona.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values that are set by styles, themes, templates, the default value from metadata, or property value inheritance are not considered to be local values.</source>
          <target state="translated">Wartości, które są ustawiane przez style, kompozycje i szablony, wartością domyślną z metadanych lub dziedziczenie wartość właściwości nie są uważane można wartości lokalnej.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, bindings and other expressions are considered to be local values, after they have been evaluated.</source>
          <target state="translated">Jednak powiązania i inne wyrażenia są uważane wartości lokalnego po zostały ocenione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>When no local value is set, this method returns &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;.</source>
          <target state="translated">Jeśli ustawiono nie wartości lokalnej, ta metoda zwraca &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the returned value is other than &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;, you can query the metadata of the requested dependency property to determine whether there is a more specific type that the return value can be converted to.</source>
          <target state="translated">Jeśli zwrócona wartość jest inny niż &lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;, możesz zbadać metadane właściwości żądanego zależności, aby ustalić, czy jest więcej określonego typu, który można przekonwertować na wartość zwracaną.&lt;/xref:System.Windows.DependencyProperty.UnsetValue&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to retrieve the value for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Identyfikator można pobrać wartości właściwości.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns the local value, or returns the sentinel value <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no local value is set.</source>
          <target state="translated">Zwraca wartość lokalnego lub zwraca wartość wskaźnikowe <bpt id="p1">&lt;xref href="System.Windows.DependencyProperty"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> przypadku nie wartości lokalnego.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Sets the value of a dependency property without changing its value source.</source>
          <target state="translated">Ustawia wartości właściwości zależności zmieniając wartość źródła.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used by a component that programmatically sets the value of one of its own properties without disabling an application's declared use of the property.</source>
          <target state="translated">Ta metoda jest używana przez składnik programowo ustawia wartości jednego z jego własnej właściwości bez konieczności wyłączania aplikacji użyj zadeklarowane właściwości.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetCurrentValue method changes the effective value of the property, but existing triggers, data bindings, and styles will continue to work.</source>
          <target state="translated">Metoda SetCurrentValue zmienia wartość właściwości, ale istniejące wyzwalacze, powiązania danych i style będą nadal działać.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Identyfikator właściwości zależności do ustawienia.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Nowa wartość lokalnego.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Podjęto próbę modyfikacji właściwości zależności tylko do odczytu lub właściwość zapieczętowane <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>nie ma poprawnego typu jest zarejestrowany dla <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Sets the local value of a dependency property, specified by its dependency property identifier.</source>
          <target state="translated">Ustawia wartość lokalnego właściwości zależności, określony przez jego identyfikatora właściwości zależności.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Jeśli podany typ niezgodny z typem, który jest zadeklarowana dla właściwości zależności, ponieważ pierwotnie został zarejestrowany, jest zwracany wyjątek.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Zawsze należy podawać parametru jako odpowiedniego typu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception conditions are potentially influenced by the &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt; callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Potencjalnie wpływało warunków wyjątków &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;wywołania zwrotnego, która istnieje na podstawie identyfikatora właściwości zależności ustawiania właściwości zależności.&lt;/xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the value provided might be failing general type-checking conditions (for example, passing a string when the native type is Double).</source>
          <target state="translated">W przeciwnym razie wartość podana może awarii ogólnych warunków Sprawdzanie typu (np. przekazywanie ciąg, gdy typ macierzysty jest o podwójnej precyzji).</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Identyfikator właściwości zależności do ustawienia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Nowa wartość lokalnego.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Podjęto próbę modyfikacji właściwości zależności tylko do odczytu lub właściwość zapieczętowane <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>nie ma poprawnego typu jest zarejestrowany dla <ph id="ph2">&lt;code&gt;dp&lt;/code&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Sets the local value of a read-only dependency property, specified by the <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the dependency property.</source>
          <target state="translated">Ustawia wartość lokalnego właściwości zależności tylko do odczytu, określona przez <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identyfikatora właściwości zależności.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature is generally used when you set values for read-only dependency properties that are defined by your custom classes.</source>
          <target state="translated">Ta sygnatura jest zazwyczaj używana w przypadku ustawienia wartości dla właściwości tylko do odczytu zależności, które są zdefiniowane przez użytkownika klas niestandardowych.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, SetValue is called only from the type that registered that dependency property, which implements the internal logic that provides the determined value for the dependency property.</source>
          <target state="translated">Ogólnie rzecz biorąc SetValue jest wywoływane tylko z typ zarejestrowanych tej właściwości zależności, która implementuje wewnętrzny logiki, która zawiera wartości określone dla właściwości zależności.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Read-Only Dependency Properties<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>tylko do odczytu właściwości zależności<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Jeśli podany typ niezgodny z typem, który jest zadeklarowana dla właściwości zależności, ponieważ pierwotnie został zarejestrowany, jest zwracany wyjątek.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Zawsze należy podawać parametru jako odpowiedniego typu.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception conditions are potentially influenced by the &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt; callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Potencjalnie wpływało warunków wyjątków &lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;wywołania zwrotnego, która istnieje na podstawie identyfikatora właściwości zależności ustawiania właściwości zależności.&lt;/xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identifier of the property to set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyPropertyKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Identyfikator właściwości do ustawienia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The new local value.</source>
          <target state="translated">Nowa wartość lokalnego.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</source>
          <target state="translated">Zwraca wartość wskazującą, czy procesy serializacji powinny serializacji wartości dla właściwości zależności podana.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation returns <ph id="ph1">`true`</ph> for all cases in which a dependency property had a local value established on the &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">Domyślna implementacja zwraca <ph id="ph1">`true`</ph> we wszystkich przypadkach, w których właściwość zależności miał wartość lokalnego w &lt;xref:System.Windows.DependencyObject&gt;.&lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The identifier for the dependency property that should be serialized.</source>
          <target state="translated">Identyfikator właściwości zależności, które powinny być serializowane.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the dependency property that is supplied should be value-serialized; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli właściwość zależności, która jest dostarczana powinny być serializowane wartości; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>