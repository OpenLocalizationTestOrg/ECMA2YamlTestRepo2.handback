<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fba5e6929959852d868d0a3334aaf9a93a7acba9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.ContextStack.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b5c26b86bf9caf3f9b1d167a105ccb64dadb92b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51bb5506215bed4ac62bc2e1619a432f3365b1a4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a stack object that can be used by a serializer to make information available to nested serializers.</source>
          <target state="translated">Udostępnia obiekt stosu, który pozwala przez serializator udostępnią informacje o serializatorów zagnieżdżonych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some serializers require information about the context of an object to correctly persist their state.</source>
          <target state="translated">Niektóre serializatorów wymagają informacje o kontekście obiektu poprawnie utrwalić stanu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ContextStack class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</source>
          <target state="translated">Klasa ContextStack umożliwia serializator ustawić danych o kontekście obiektu, który jest serializowana stos, w którym inny element serializujący do niego dostęp.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt; property is provided by an &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; to share information of use to some serializers.</source>
          <target state="translated">Wartość &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;właściwość jest udostępniana przez &lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;do udostępniania informacji do użytku niektórych serializatorów.&lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt; &lt;/xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</source>
          <target state="translated">Stos kontekstu jest przydatne, ponieważ głęboko zagnieżdżone procesu szeregowania dokument projektowy i obiektów na każdym poziomie zagnieżdżenia może wymagać informacje o kontekście poprawnie utrwalić stanu obiektu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A serializer can set a context object to the stack before invoking a nested serializer.</source>
          <target state="translated">Element serializujący można ustawić obiekt kontekstu stosu przed wywołaniem zagnieżdżonych serializatora.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</source>
          <target state="translated">Każdy obiekt ustawioną na stosie powinien zostać usunięty przez serializator ustawioną go po powrocie wywołania zagnieżdżonych serializatora.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the objects on the stack contain information about the context of the current object that is being serialized.</source>
          <target state="translated">Na ogół obiektów na stosie zawierają informacje o kontekście bieżącego obiektu, który jest serializowana.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</source>
          <target state="translated">Serializator nadrzędnego dodaje informacje o kontekście stosu o następny obiekt, który można serializować, wywołuje odpowiedni serializator i, po zakończeniu serializator wykonywania dla obiektu, usuwa informacje o kontekście ze stosu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is up to the implementation of each serializer to determine what objects get pushed on this stack.</source>
          <target state="translated">Jest implementacja każdego serializatora do określenia, jakie obiekty uzyskać wypychana tej stosu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, an object with a property named <ph id="ph1">`Enabled`</ph> has a data type of &lt;xref:System.Boolean&gt;.</source>
          <target state="translated">Na przykład o nazwie obiektu z właściwością <ph id="ph1">`Enabled`</ph> &lt;xref:System.Boolean&gt;.&lt;/xref:System.Boolean&gt; typ danych</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</source>
          <target state="translated">Jeśli serializatora zapisuje tę wartość w strumieniu danych, może być konieczne uwzględnienie kontekstu lub typ właściwości go zapisuje.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serializer does not have this information, however, because it is only instructed to write the &lt;xref:System.Boolean&gt; value.</source>
          <target state="translated">Serializator nie zawiera te informacje, ponieważ tylko instrukcje zapisu &lt;xref:System.Boolean&gt;wartość.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide this information to the serializer, the parent serializer can push a &lt;xref:System.ComponentModel.PropertyDescriptor&gt; that points to the <ph id="ph1">`Enabled`</ph> property on the context stack.</source>
          <target state="translated">Może przekazać tę informację do serializatora, serializator nadrzędnego może wypchnąć &lt;xref:System.ComponentModel.PropertyDescriptor&gt;wskazującego <ph id="ph1">`Enabled`</ph> właściwości na stos kontekstu.&lt;/xref:System.ComponentModel.PropertyDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</source>
          <target state="translated">Dołącza obiekt na koniec stosu, a nie wypychania go na wierzchu stosu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</source>
          <target state="translated">Ta metoda umożliwia serializatora do komunikowania się z innymi serializatorów przez dodawanie obiektów dane kontekstowe, które nie mają być usuwane w kolejności.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no way to remove an object that was appended to the end of the stack without removing all other objects.</source>
          <target state="translated">Nie istnieje sposób można usunąć obiektu, który został dodany na końcu stosu bez usuwania wszystkie inne obiekty.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A context object to append to the stack.</source>
          <target state="translated">Obiekt kontekstu do dołączenia do stosu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the current object on the stack.</source>
          <target state="translated">Pobiera bieżący obiekt na stosie.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current object is the object at the top of the stack, or the object last added to the stack.</source>
          <target state="translated">Bieżący obiekt jest obiektem ze szczytu stosu lub obiektu, który został ostatnio dodany do stosu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current object on the stack, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no objects were pushed.</source>
          <target state="translated">Bieżący obiekt na stosie, lub <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Jeśli żadne obiekty nie zostały przekazane.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the object on the stack at the specified level.</source>
          <target state="translated">Pobiera obiekt na stosie na określonym poziomie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The level of the object to retrieve on the stack.</source>
          <target state="translated">Poziom obiektu do pobrania na stosie.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Level 0 is the top of the stack, level 1 is the next down, and so on.</source>
          <target state="translated">Poziom 0 to górę stosu, poziom 1 jest następny w dół, i tak dalej.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This level must be 0 or greater.</source>
          <target state="translated">Ten poziom musi być mniejsza od 0.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If level is greater than the number of levels on the stack, it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Jeśli poziom jest większa niż liczba poziomów na stosie, zwraca <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object on the stack at the specified level, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object exists at that level.</source>
          <target state="translated">Obiekt na stosie na określonym poziomie, lub <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> , jeśli nie istnieje żaden obiekt na tym poziomie.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;level&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;level&lt;/code&gt;</ph>jest mniejsza niż 0.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the first object on the stack that inherits from or implements the specified type.</source>
          <target state="translated">Pobiera pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>A check is made on each level of the stack, searching for an object that implements or inherits <ph id="ph1">`type`</ph>.</source>
          <target state="translated">Dokonuje na każdym poziomie stosu, wyszukiwanie obiektu, który implementuje lub dziedziczy <ph id="ph1">`type`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match is found, it is returned.</source>
          <target state="translated">Jeśli dopasowanie zostanie znaleziony, jest zwracana.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A type to retrieve from the context stack.</source>
          <target state="translated">Typ do pobrania ze stosu kontekstu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The first object on the stack that inherits from or implements the specified type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no object on the stack implements the type.</source>
          <target state="translated">Pierwszy obiekt na stosie, która dziedziczy lub implementuje określonego typu lub <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Jeśli typ implementuje żaden obiekt na stosie.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Removes the current object off of the stack, returning its value.</source>
          <target state="translated">Usuwa bieżący obiekt wylogowuje stosu, zwracając wartość.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The object removed from the stack; <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no objects are on the stack.</source>
          <target state="translated">Obiekt usunięty ze stosu; <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Jeśli żadne obiekty nie są na stosie.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Pushes, or places, the specified object onto the stack.</source>
          <target state="translated">Wypchnięcia lub miejsc, jak określony obiekt na stosie.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The context object to push onto the stack.</source>
          <target state="translated">Obiekt kontekstu do przekazania do stosu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>