<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f17a2e09bd7502b63e4af215a62d5f6485de4c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.BinaryKeyIdentifierClause.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d9b548a84810fbfb9f51b2a91b342eb5d8d6d99</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3992a27c76a964b91fd4b1ccd1cc2119b080fdff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
          <target state="translated">Reprezentuje klasę podstawową dla klauzuli identyfikatora klucza, które są oparte na danych binarnych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the BinaryKeyIdentifierClause does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">Zazwyczaj BinaryKeyIdentifierClause nie trzeba używać, inne niż podczas tworzenia usługi tokenu zabezpieczeń niestandardowych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">Po powrocie z usługi tokenu zabezpieczającego tokenu zabezpieczającego tokenu zabezpieczeń zawiera odwołania do tokenów zabezpieczających dołączona i odłączyć.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
          <target state="translated">Dołączone odwołania dotyczą tokeny zabezpieczające, które są zawarte w nagłówku zabezpieczeń wiadomości SOAP i niedołączonych odwołań są tokeny zabezpieczające, które nie są uwzględniane w nagłówku zabezpieczeń wiadomości protokołu SOAP.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">Te odwołania potwierdzają zwykle autentyczności token zabezpieczeń.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne i wartość, która wskazuje, czy dane binarne muszą być sklonować.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">Ustawia wartość &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;Właściwości.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;zawierający dane binarne, który reprezentuje identyfikator klucza.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone the array passed into the <ph id="ph1">`identificationData`</ph> parameter; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>klonowanie tablicy przekazany <ph id="ph1">`identificationData`</ph> parametru; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>ma zerową długość.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> przy użyciu określonego identyfikatora klucza typu klauzuli, dane binarne, wartość wskazującą, czy dane binarne muszą sklonowany, identyfikatora jednorazowego i długość klucza.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated">Gdy <ph id="ph1">`derivationNonce`</ph> i <ph id="ph2">`derivationLength`</ph> zostały podane parametry, dorozumianych klucza pochodnego jest używany zamiast klucza zabezpieczeń bezpośredniego tokenu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">Niezależnie od wartości przekazywane do <ph id="ph1">`cloneBuffer`</ph> parametru &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;metody zawsze zwróci klon tablicy przekazany <ph id="ph2">`identificationData`</ph> parametru.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
          <target state="translated">Typ klauzuli identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt; property.</source>
          <target state="translated">Ustawia wartość &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;Właściwości.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;zawierający dane binarne, który reprezentuje identyfikator klucza.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sets the binary data that is returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method.</source>
          <target state="translated">Ustawia dane binarne, który jest zwracany przez &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;metody.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to clone the array passed into the <ph id="ph1">`identificationData`</ph> parameter; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>klonowanie tablicy przekazany <ph id="ph1">`identificationData`</ph> parametru; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that was used to create a derived key.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;zawierający identyfikator jednorazowy, który został użyty do utworzenia klucza pochodnego.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sets the value that is returned by the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt; method.</source>
          <target state="translated">Ustawia wartość, która jest zwracana w wyniku &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;metody.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">Rozmiar klucza pochodnego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt; property.</source>
          <target state="translated">Ustawia wartość &lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;Właściwości.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph>ma zerową długość.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Pobiera dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the GetBuffer method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
          <target state="translated">Niezależnie od wartości przekazany do konstruktora <ph id="ph1">`cloneBuffer`</ph> parametru GetBuffer — metoda zawsze zwróci klon tablicy przekazany do konstruktora <ph id="ph2">`identificationData`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;zawierający dane binarne, który reprezentuje identyfikator klucza.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
          <target state="translated">Pobiera dane binarne, który reprezentuje identyfikator klucza.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array returned by the GetRawBuffer method is a clone of the constructor's <ph id="ph1">`identificationData`</ph> parameter when the value passed into the <ph id="ph2">`cloneBuffer`</ph> is <ph id="ph3">`true`</ph>; otherwise it is same array.</source>
          <target state="translated">Tablica zwrócona przez metodę GetRawBuffer jest Sklonowanie konstruktora <ph id="ph1">`identificationData`</ph> parametru, gdy wartość przekazywana do <ph id="ph2">`cloneBuffer`</ph> jest <ph id="ph3">`true`</ph>; w przeciwnym razie jest tej samej tablicy.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt; method always returns a clone of the array passed into the constructor's <ph id="ph1">`identificationData`</ph> parameter.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;Metody zawsze zwróci klon tablicy przekazany do konstruktora <ph id="ph1">`identificationData`</ph> parametru.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the binary data that represents the key identifier.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;zawierający dane binarne, który reprezentuje identyfikator klucza.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia odpowiada określonym danych binarnych.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; to compare to.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;do porównania.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p2"> &lt;/code&gt;</ept>is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">data</ph> <ept id="p2"> &lt;/code&gt;</ept>jest odpowiednikiem dane binarne zwrócony przez &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;metody; w przeciwnym razie <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">Zwraca wartość wskazującą, czy identyfikator klucza dla tego wystąpienia jest odpowiednikiem klauzuli określonego identyfikatora klucza.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare to.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> do porównania.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">keyIdentifierClause</ph><ept id="p2">&lt;/code&gt;</ept> is of type <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method is identical for the <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">keyIdentifierClause</ph><ept id="p4">&lt;/code&gt;</ept> parameter and the current instance; otherwise, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">keyIdentifierClause</ph> <ept id="p2">&lt;/code&gt;</ept> jest typu <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> i danych binarnych zwrócony przez &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;metody jest taka sama dla <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">keyIdentifierClause</ph> <ept id="p4">&lt;/code&gt;</ept> parametr i bieżącego wystąpienia; w przeciwnym razie <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dane binarne dla bieżącego wystąpienia jest odpowiednikiem określone dane binarne od wskazanego przesunięcia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; to compare to.</source>
          <target state="translated">Tablica &lt;xref:System.Byte&gt;do porównania.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The index in the array at which the comparison starts.</source>
          <target state="translated">Indeks w tablicy, w którym rozpoczyna się porównania.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the binary data in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p2"> &lt;/code&gt;</ept>parameter starting at the index specified in the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter is equivalent to the binary data returned by the &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt; method (starting at index zero); otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli dane binarne w <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">data</ph> <ept id="p2"> &lt;/code&gt;</ept>parametr w indeksie określone w <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">offset</ph> <ept id="p3">&lt;/code&gt;</ept> parametru jest odpowiednikiem dane binarne zwrócony przez &lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;— Metoda (rozpoczyna się od zera indeks); w przeciwnym razie <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.&lt;/xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>