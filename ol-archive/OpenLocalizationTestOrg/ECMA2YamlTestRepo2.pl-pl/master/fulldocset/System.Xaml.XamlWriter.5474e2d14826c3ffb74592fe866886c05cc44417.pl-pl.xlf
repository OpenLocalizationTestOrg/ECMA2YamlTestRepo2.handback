<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pl-pl">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f55a66b17a0893f709950c5df6dd09df06a0d1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">878667b571c63df00255b56ed0f09c2cac7c108d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a29166a9764d72ef00d0e8acb4275872a44bc25e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides default implementation and base class definitions for a XAML writer.</source>
          <target state="translated">Udostępnia domyślne implementacji i base definicje klas dla edytora XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is not a working default XAML writer; you must either derive from XamlWriter and implement its abstract members, or use an existing XamlWriter derived class.</source>
          <target state="translated">Nie jest to edytor XAML domyślne pracy; Możesz musi pochodzić od obiekcie XamlWriter i implementować jego abstrakcyjne elementy członkowskie, lub użyj istniejącego obiekcie XamlWriter pochodnej klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two most relevant practical derived classes of XamlWriter are the &lt;xref:System.Xaml.XamlXmlWriter&gt; and &lt;xref:System.Xaml.XamlObjectWriter&gt; classes, as the following details explain:      -   &lt;xref:System.Xaml.XamlXmlWriter&gt; processes a XAML node set and produces an XML text file.</source>
          <target state="translated">Są dwa najistotniejsza praktyczne klas pochodnych obiekcie XamlWriter &lt;xref:System.Xaml.XamlXmlWriter&gt;i &lt;xref:System.Xaml.XamlObjectWriter&gt;klas poniżej wyjaśniono:- &lt;xref:System.Xaml.XamlXmlWriter&gt;przetwarza zestaw węzłów XAML i tworzy plik tekstowy XML.&lt;/xref:System.Xaml.XamlXmlWriter&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</source>
          <target state="translated">Ta klasa może być używana do serializacji lub jako część funkcji narzędzia, która współdziała z reprezentacji w pamięci XAML i generuje dane wyjściowe w pliku XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Xaml.XamlObjectWriter&gt; processes a XAML node set and produces an object graph.</source>
          <target state="translated">- &lt;xref:System.Xaml.XamlObjectWriter&gt;przetwarza zestaw węzłów XAML i tworzy wykres obiektu.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used as part of a full or partial customization of a technology's XAML parser.</source>
          <target state="translated">Ta klasa może być używana jako część pełnej lub częściowej dostosowywania to technologia analizatora języka XAML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlWriterSettings&gt; is a class for settings that are used by a XamlWriter; however, by default, the &lt;xref:System.Xaml.XamlWriterSettings&gt; class does not hold any specific settings.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlWriterSettings&gt;jest klasą ustawień, które są używane w obiekcie XamlWriter; jednak domyślnie &lt;xref:System.Xaml.XamlWriterSettings&gt;Klasa nie ma żadnych określonych ustawień.&lt;/xref:System.Xaml.XamlWriterSettings&gt;&lt;/xref:System.Xaml.XamlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XamlWriter base constructor does not use this settings class as an argument, nor does any other XamlWriter member.</source>
          <target state="translated">Jako argument konstruktora podstawowego obiekcie XamlWriter nie używa tej klasy ustawienia, ani nie innego członka obiekcie XamlWriter.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the &lt;xref:System.Xaml.XamlXmlWriter&gt; and &lt;xref:System.Xaml.XamlObjectWriter&gt; classes include their own settings classes as construction arguments.</source>
          <target state="translated">Zamiast tego &lt;xref:System.Xaml.XamlXmlWriter&gt;i &lt;xref:System.Xaml.XamlObjectWriter&gt;klasy mają własne ustawienia klas jako argumenty konstrukcji.&lt;/xref:System.Xaml.XamlObjectWriter&gt; &lt;/xref:System.Xaml.XamlXmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings classes are &lt;xref:System.Xaml.XamlXmlWriterSettings&gt; and &lt;xref:System.Xaml.XamlObjectWriterSettings&gt;.</source>
          <target state="translated">Klasy te ustawienia są &lt;xref:System.Xaml.XamlXmlWriterSettings&gt;i &lt;xref:System.Xaml.XamlObjectWriterSettings&gt;.&lt;/xref:System.Xaml.XamlObjectWriterSettings&gt; &lt;/xref:System.Xaml.XamlXmlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The settings classes define actual settings values and are based on &lt;xref:System.Xaml.XamlWriterSettings&gt;, so that they can use the &lt;xref:System.Xaml.XamlWriterSettings&gt; merge feature.</source>
          <target state="translated">Klasy ustawień zdefiniować ustawienia wartości rzeczywistej wartości i są oparte na &lt;xref:System.Xaml.XamlWriterSettings&gt;, tak aby mogli używać &lt;xref:System.Xaml.XamlWriterSettings&gt;Funkcja scalania.&lt;/xref:System.Xaml.XamlWriterSettings&gt; &lt;/xref:System.Xaml.XamlWriterSettings&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Closes the XAML writer object.</source>
          <target state="translated">Zamyka obiekt składnika zapisywania języka XAML.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the base implementation, calling Close calls the &lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt; method with the <ph id="ph1">`isDisposing`</ph> parameter as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">W podstawowej implementacji wywoływanie zamknięcia wywołania &lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;metody z <ph id="ph1">`isDisposing`</ph> parametru <ph id="ph2">`true`</ph>.&lt;/xref:System.Xaml.XamlWriter.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <bpt id="p1">&lt;xref href="System.Xaml.XamlWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the base class to get &lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt; = <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Należy wywołać klasy podstawowej, aby uzyskać &lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;= <ph id="ph1">`true`</ph>.&lt;/xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release the managed resources; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Aby zwolnić zasoby zarządzane. w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets whether &lt;xref:System.Xaml.XamlWriter.Dispose*&gt; has been called.</source>
          <target state="translated">Pobiera czy &lt;xref:System.Xaml.XamlWriter.Dispose*&gt;została wywołana.&lt;/xref:System.Xaml.XamlWriter.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if &lt;xref:System.Xaml.XamlWriter.Dispose*&gt; has been called; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Jeśli &lt;xref:System.Xaml.XamlWriter.Dispose*&gt;została wywołana; w przeciwnym razie <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.XamlWriter.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the active XAML schema context.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej pobiera aktywny kontekst schematu XAML.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The active XAML schema context.</source>
          <target state="translated">Aktywny kontekst schematu XAML.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.IDisposable.Dispose*&gt;.</source>
          <target state="translated">Zobacz &lt;xref:System.IDisposable.Dispose*&gt;.&lt;/xref:System.IDisposable.Dispose*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end member node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy reprezentację zakończenia węzeł elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end object node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy reprezentację końcowego obiektu węzła.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej tworzy obiekt do przypadkach, gdy obiekt jest domyślne lub niejawne wartości właściwości jest ustawiona, zamiast określany jako wartość discrete obiektu w zestawie wejściowym węzła XAML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a XAML namespace declaration node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje węzła deklaracji przestrzeni nazw XAML.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The namespace declaration to write.</source>
          <target state="translated">Deklaracja przestrzeni nazw do zapisu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Performs switching based on node type from the XAML reader (<ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlReader.NodeType%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>) and calls the relevant <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method for the writer implementation.</source>
          <target state="translated">Wykonuje przełączania na podstawie typu węzła z czytnika XAML (<ph id="ph1">&amp;lt;</ph>xref:System.Xaml.XamlReader.NodeType%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>) i wywołuje odpowiednie <bpt id="p1">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> metodę wdrażania składnika zapisywania.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">##</ph> Notes for Inheritors    The WriteNode method is not a virtual method because it has practical implementation for all existing &lt;xref:System.Xaml.XamlNodeType&gt; values.</source>
          <target state="translated"><ph id="ph1">##</ph>Uwagi dotyczące obiektów dziedziczących WriteNode metody nie jest metodą wirtualną, ponieważ ma ona wdrożeniem dla wszystkich istniejących &lt;xref:System.Xaml.XamlNodeType&gt;wartości.&lt;/xref:System.Xaml.XamlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on &lt;xref:System.Xaml.XamlNodeType&gt;, WriteNode calls into the <ph id="ph1">`Write`</ph> virtual members that are dedicated to particular node types.</source>
          <target state="translated">Na podstawie &lt;xref:System.Xaml.XamlNodeType&gt;, wywołuje WriteNode <ph id="ph1">`Write`</ph> wirtualne elementy członkowskie, które są przeznaczone do określonego węzła typów.&lt;/xref:System.Xaml.XamlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use WriteNode calls in your logic.</source>
          <target state="translated">Dysponując zaawansowanym scenariuszu zapis XAML rozwijający system typów języka XAML i koncepcji strumienia węzłów XAML, dzięki czemu nowe typy węzłów są zdefiniowane, nie należy używać w logice WriteNode wywołania.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</source>
          <target state="translated">Zamiast tego należy podać własne alternatywą dla typu węzła przełączania logikę w klasie lub zastąpienia wirtualnego.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The reader to use for node determination.</source>
          <target state="translated">Czytnik do użycia na potrzeby określenia węzła.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default implementation encountered a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is not in the default enumeration.</source>
          <target state="translated">Domyślna implementacja napotkano <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> nie jest w wyliczeniu domyślne.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start member node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje reprezentację węzeł elementu członkowskiego początkowy.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The member node to write.</source>
          <target state="translated">Węzeł elementu członkowskiego do zapisu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start object node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje reprezentację węzeł obiekt początkowy.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The XAML type of the object to write.</source>
          <target state="translated">Typ obiektu do zapisania XAML.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a value node.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, zapisuje węzła wartości.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
          <target state="translated">Wartość do zapisania.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>