<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7201c2b86268d8c1c80bec31eb651ab72204b2cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.AsymmetricSignatureDeformatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48868c288a5f2ad7baab726f66155c8c71d2a822</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37f6eff6daa212f2f415e754d6b7be9980f64232</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which all implementations of asymmetric signature deformatters derive.</source>
          <target state="translated">非対称署名逆フォーマッタのすべての実装の派生元となる抽象基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Asymmetric signature deformatters verify the digital signatures that are created using implementations of &lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;.</source>
          <target state="translated">非対称署名逆フォーマッタ&lt;xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;。&lt;/xref:System.Security.Cryptography.AsymmetricSignatureFormatter&gt;の実装を使用して作成されるデジタル署名を確認します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricSignatureDeformatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricSignatureDeformatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">抽象クラスのインスタンスを作成することはできません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Use implementations of &lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt; and &lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt; to set the key and hash algorithm before calling an implementation of &lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">実装を&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;。&lt;/xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;の実装を呼び出す前に、キーとハッシュ アルゴリズムを設定して&lt;/xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm%2A&gt;&lt;/xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey%2A&gt;の使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the hash algorithm to use for verifying the signature.</source>
          <target state="translated">派生クラスでオーバーライドされると、署名の検証に使用するハッシュ アルゴリズムを設定します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You must set a hash algorithm before calling an implementation of &lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;。&lt;/xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;の実装を呼び出す前に、ハッシュ アルゴリズムを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the hash algorithm to use for verifying the signature.</source>
          <target state="translated">署名の検証に使用するハッシュ アルゴリズムの名前。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the public key to use for verifying the signature.</source>
          <target state="translated">派生クラスでオーバーライドされると、署名の検証に使用する公開キーを設定します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must set a key before calling an implementation of &lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;。&lt;/xref:System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature%2A&gt;の実装を呼び出す前に、キーを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The instance of an implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the public key.</source>
          <target state="translated">実装のインスタンス<bpt id="p1">&lt;xref href="System.Security.Cryptography.AsymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>公開キーを保持します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, verifies the signature for the specified data.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定されたデータの署名を検証します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You must specify a public key and a hash algorithm before calling this method.</source>
          <target state="translated">このメソッドを呼び出す前に、公開キーおよびハッシュ アルゴリズムを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The data signed with <ph id="ph1">`rgbSignature`</ph>.</source>
          <target state="translated">データが署名された<ph id="ph1">`rgbSignature`</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The signature to be verified for <ph id="ph1">`rgbHash`</ph>.</source>
          <target state="translated">検証する署名<ph id="ph1">`rgbHash`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">rgbSignature</ph><ept id="p2">&lt;/code&gt;</ept> matches the signature computed using the specified hash algorithm and key on <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">rgbHash</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">rgbSignature</ph> <ept id="p2">&lt;/code&gt;</ept>で、指定したハッシュ アルゴリズムとキーを使用して計算された署名と一致する<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">rgbHash</ph> <ept id="p3">&lt;/code&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Verifies the signature from the specified hash value.</source>
          <target state="translated">指定したハッシュ値から署名を検証します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This method sets the hash algorithm to be used before verifying the signature of the input hash algorithm value.</source>
          <target state="translated">このメソッドは、入力のハッシュ アルゴリズムの値の署名を検証する前に使用するハッシュ アルゴリズムを設定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to verify the signature.</source>
          <target state="translated">署名の検証に使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The signature to be verified.</source>
          <target state="translated">検証する署名します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is valid for the hash; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>署名がハッシュ; で有効な場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">hash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">hash</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>