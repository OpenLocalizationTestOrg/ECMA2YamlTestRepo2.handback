<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15fcc10a38d11e8cf4f78a212ce2c850111af79e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlSchemaContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a17cc21f668d2bc3f2e7aa719b644a324bc9a04c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a62bdab0182a10917c82ce00ad3bd46758325ad3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">解釈または XAML 型、およびそれらの基になるアセンブリの種類のマッピングの再利用可能なコンテキストを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">XAML スキーマ コンテキストでは、スキーマまたは xaml でボキャブラリと特定のパーサー実装間で抽象化レイヤーを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">スキーマ コンテキストの概念を挿入してスキーマを別の XAML パーサーで使用できるし、スキーマ コンテキストを特定の XAML パーサーと対話するために必要な詳細を入力します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">たとえば、XAML スキーマ コンテキストは、クエリと CLR バインディングを指定し、XAML 型システムまたは XAML の概念に関連する Api を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">XAML スキーマ コンテキストは、バッキング型の XAML パーサーを検索する場所を定義する、読み込まれたアセンブリのアセンブリ リストを保守管理を担当もできます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a set of reference assemblies.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>参照アセンブリのセットに基づくクラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">アセンブリ情報項目の列挙可能なセット。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">各アセンブリの情報項目がで指定された、&lt;xref:System.Reflection.Assembly&gt;値&lt;/xref:System.Reflection.Assembly&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a settings object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>設定オブジェクトに基づくクラスです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">設定オブジェクトは、コンバーターとスキーマ コンテキストのマークアップ拡張機能の詳細に関する情報を格納します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Xaml.XamlSchemaContextSettings&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Xaml.XamlSchemaContextSettings&gt;。&lt;/xref:System.Xaml.XamlSchemaContextSettings&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The settings object to use to construct the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定オブジェクトを構築するために使用する、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、参照アセンブリおよび設定オブジェクトのセットを基にします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">アセンブリ情報の列挙可能なセット。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">各アセンブリの情報項目がで指定された、&lt;xref:System.Reflection.Assembly&gt;値&lt;/xref:System.Reflection.Assembly&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The settings object to use to construct the <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定オブジェクトを構築するために使用する、 <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides a nonstandard <bpt id="p1">&lt;xref uid="langword_csharp_Finalize" name="Finalize" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation that does not invoke <bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">非標準<bpt id="p1">&lt;xref uid="langword_csharp_Finalize" name="Finalize" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呼び出しません実装<bpt id="p2">&lt;xref uid="langword_csharp_Dispose" name="Dispose" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">自動ガベージ コレクションによって、または手動操作によって、XAML スキーマ コンテキストを破棄されなければなりません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Although XAML schema contexts  have no unmanaged resources, &lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt; properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">XAML スキーマ コンテキストには、アンマネージ リソースがない&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;プロパティがアクティブである可能性があり、関連する遅延読み込み操作に干渉することができますな XAML スキーマ コンテキストを破棄します&lt;/xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.AppDomain.AssemblyLoad&gt; event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated">&lt;xref:System.AppDomain.AssemblyLoad&gt;弱い参照として内部的に接続されている、イベント ハンドラーは、この実装でクリーンアップされます。&lt;/xref:System.AppDomain.AssemblyLoad&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">XAML スキーマとそのコンテキストが検索 API によって返される値に完全修飾アセンブリ名を使用するかどうかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.</source>
          <target state="translated">このプロパティを返します、&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;値の設定で規定されている、&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;コンス トラクターのシグネチャ&lt;/xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;&lt;/xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If other signatures were used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt; is not specifically set to <ph id="ph1">`true`</ph>, the value of this property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">構築の他の署名に使用された場合、または場合&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;に特に設定されていない<ph id="ph1">`true`</ph>、このプロパティの値が<ph id="ph2">`false`</ph>&lt;/xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value of this property influences the strings that are returned by &lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;.</source>
          <target state="translated">このプロパティの値に影響を与えます&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;。&lt;/xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;によって返される文字列</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If FullyQualifyAssemblyNamesInClrNamespaces is <ph id="ph1">`true`</ph>, the assembly portion of the string reports the equivalent of &lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">FullyQualifyAssemblyNamesInClrNamespaces 場合<ph id="ph1">`true`</ph>、文字列のアセンブリ部分は報告&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;.&lt;/xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName&gt;の該当するショートカットは、</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>XAML スキーマとそのコンテキストは、完全修飾アセンブリ名を使用して、検索 Api; によって返される値の場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Searches the assemblies that are held by this <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns a set of namespaces.</source>
          <target state="translated">これによって保持されているアセンブリが検索<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>名前空間のセットを返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">このメソッドは、構築またはプロパティの設定を通じて渡される場合にのみ参照アセンブリを検索します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this &lt;xref:System.Xaml.XamlSchemaContext&gt; is active.</source>
          <target state="translated">このメソッドのロジックが読み込まれているすべてのアセンブリを調べ参照アセンブリとしてアセンブリが作成されていない場合、この&lt;xref:System.Xaml.XamlSchemaContext&gt;がアクティブです&lt;/xref:System.Xaml.XamlSchemaContext&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">名前空間の識別子の列挙可能なセット。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">これらの識別子は、文字列として提供されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Searches the assemblies that are held by this <bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">これによって保持されているアセンブリが検索<bpt id="p1">&lt;xref href="System.Xaml.XamlSchemaContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>し、指定の XAML 名前空間の型のセットを返します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">型を返すに XAML 名前空間。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">XAML の型の列挙可能なセット。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each XAML type in the set is represented by a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">各 XAML 型で表される、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">指定した XAML 名前空間を割り当てるときに使用するコンシューマーにとって適切なプレフィックスとして報告されている文字列を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">情報の最もイミディ エイトのコンシューマーは、XAML ライターでは通常です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">その他の間接的なコンシューマーには、デザイン ツールが含まれます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying &lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt; at the assembly level.</source>
          <target state="translated">共通言語ランタイム (CLR) の XAML バインドの一部として、適用することでこの情報を指定できます&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;アセンブリ レベルでします&lt;/xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">適切なプレフィックスを取得する XAML 名前空間。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">マークアップの指定の XAML 名前空間を割り当てるときにコンシューマーが使用する文字列を使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlns&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlns&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ディレクティブ、XAML 言語用、または特定の実装を表す値です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Override this method if you create a derived class from &lt;xref:System.Xaml.XamlDirective&gt; as part of a XAML type system extension scenario.</source>
          <target state="translated">派生クラスを作成する場合は、このメソッドをオーバーライド&lt;xref:System.Xaml.XamlDirective&gt;XAML 型システムの拡張シナリオの一部として&lt;/xref:System.Xaml.XamlDirective&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">名前付きのディレクティブを含む XAML 名前空間。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of the directive to obtain.</source>
          <target state="translated">取得するディレクティブの名前。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the requested directive.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要求されたディレクティブを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;name&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a CLR type identifier.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CLR 型の識別子に基づきます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">このオーバー ロードでは、バッキング型システムの CLR を使用していることを前提としています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you are not using the CLR type system, use &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;.</source>
          <target state="translated">CLR 型システムを使用していない場合は、 &lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;。&lt;/xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The type to get a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">取得する型、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>入力に一致する<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">type</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a XAML system type name.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML システム型の名前に基づきます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The XAML type name to get a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for.</source>
          <target state="translated">XAML の型名を取得する、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>入力に一致する<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">xamlTypeName</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p1">&lt;/code&gt;</ept> (&lt;xref:System.Xaml.Schema.XamlTypeName.Name<bpt id="p2">*</bpt>&gt; or &lt;xref:System.Xaml.Schema.XamlTypeName.Namespace<ept id="p2">*</ept>&gt;) is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlTypeName</ph><ept id="p1">&lt;/code&gt;</ept> (&lt;&gt;<bpt id="p2">*</bpt>&gt; or &lt;&gt;<ept id="p2">*</ept>&gt;) is <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlTypeName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlTypeName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 名前空間と型の名前に文字列をベースです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">この署名は、目的の型がジェネリックの型である場合は型引数を指定できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">目的の型を含む XAML 名前空間。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The string name of the desired type.</source>
          <target state="translated">目的の型の文字列名。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">ジェネリック型の初期化型の引数。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that matches the input criteria.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>入力条件に一致します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">操作が含まれている XAML 名前空間を解決するために必要なアセンブリを解決するのにはこのスキーマ コンテキストを使用するときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the &lt;xref:System.Reflection.AssemblyName&gt; construction behavior.</source>
          <target state="translated">内部 API には、基になるアセンブリの解決方法に基づいて、アセンブリ名の別の文字列形式の組み込みの公差があると、&lt;xref:System.Reflection.AssemblyName&gt;構築動作&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">この API の目的は、グローバル アセンブリ キャッシュに対するの代わりに、参照アセンブリなど、アセンブリの既知のセットに対する初回の解決を有効にします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">参照アセンブリの一覧が表示される場合、既定の実装は、既知の参照アセンブリにアクセスできます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The name of the assembly to load.</source>
          <target state="translated">読み込むアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>See Remarks.</source>
          <target state="translated">「解説」を参照してください。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The resolved assembly.</source>
          <target state="translated">解決済みのアセンブリ。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">XAML スキーマ コンテキストの参照アセンブリの列挙可能なセットを取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">スキーマ コンテキストの参照アセンブリの列挙可能なセット。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Each assembly information item is specified by an &lt;xref:System.Reflection.Assembly&gt; value.</source>
          <target state="translated">各アセンブリの情報項目がで指定された、&lt;xref:System.Reflection.Assembly&gt;値&lt;/xref:System.Reflection.Assembly&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">XAML スキーマとそのコンテキストがアリティ (入力パラメーターの数) が同じ&amp;2; つのコンス トラクターがあるマークアップ拡張機能をサポートするかどうかを指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This property returns the &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; value that is established in the settings for the &lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt; constructor signature.</source>
          <target state="translated">このプロパティを返します、&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;値の設定で規定されている、&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;コンス トラクターのシグネチャ&lt;/xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;&lt;/xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If other signatures are used for construction or if &lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt; is not specifically set to <ph id="ph1">`true`</ph>, the value of this property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">作成するため他の署名が使用されている場合、または場合&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;に特に設定されていない<ph id="ph1">`true`</ph>、このプロパティの値は<ph id="ph2">`false`</ph>&lt;/xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">具体的には、マークアップ拡張機能の重複するアリティは XAML の仕様 [MS-XAML] セクション 6.6.7.2 で処理では対応できません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">これは、ため、XAML の情報項目、マークアップ拡張機能の構成は、マークアップ拡張機能の実装に存在する重複するアリティに関係なく同じです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">マークアップ拡張機能の実際の呼び出しだけと、その<ph id="ph1">`ProvideValue`</ph>重複するアリティに関連する問題を公開します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">重複するアリティの処理の動作は未定義しは、最大で各実装の XAML スキーマ コンテキストと XAML ライターとの統合されません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">既定の XAML スキーマ コンテキスト .NET Framework XAML サービス操作に対して実装されるとは重複するアリティをサポートしていませんさまざまな .NET Framework XAML サービス Api には、基になる重複するアリティによるマークアップ拡張機能の使用を処理するときに例外がスローされます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">マークアップ拡張機能の定義の詳細については、次を参照してください。 <bpt id="p1">[</bpt>XAML の概要のマークアップ拡張機能<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the schema context permits markup extensions that have duplicate arity; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>スキーマ コンテキストは、重複するアリティのマークアップ拡張機能を許可している場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">互換性のある XAML 名前空間の要求の成否を返します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">要求が成功した場合は、out パラメーターとしてその XAML 名前空間を報告します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Internally, this method uses the following lookup order:      1.</source>
          <target state="translated">このメソッドは内部的には、次の検索順序を使用する: 1。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">内部的に実装された互換性ディクショナリ以前の検索で作成された可能性があります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt; parameter evaluation.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;パラメーター評価&lt;/xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">互換性のあるその他の名前空間が検出されないと、このメソッドが戻るかどうか<ph id="ph1">`false`</ph>、<ph id="ph2">`compatibleNamespace`</ph>パラメーターの出力と同じ値を持つ可能性があります、<ph id="ph3">`xamlNamespace`</ph>入力します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>互換性のある結果をチェックする XAML 名前空間の文字列。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When this method returns, the <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string for a compatible XAML namespace request.</source>
          <target state="translated">このメソッドが戻るとき、 <bpt id="p1">&lt;xref uid="langword_csharp_xmlns" name="xmlns" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>互換性のある XAML 名前空間の要求の文字列。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This might be identical to <ph id="ph1">`xamlNamespace`</ph> if the method returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これと同一である可能性があります<ph id="ph1">`xamlNamespace`</ph>メソッドを返す場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">compatibleNamespace</ph><ept id="p2">&lt;/code&gt;</ept> contains a usable result; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">compatibleNamespace</ph> <ept id="p2">&lt;/code&gt;</ept>使用可能な結果が含まれています。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xamlNamespace&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>