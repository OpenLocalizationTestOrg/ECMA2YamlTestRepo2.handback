<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98af067dd0c342c7a6cc34c8d2ee5117cb84fbe4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.ClientScriptManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50518b4ddd2871e5bd64707d0d600d228e935259</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b84143d140f22d400688e0e48fcb7a55a34ea0b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods for managing client scripts in Web applications.</source>
          <target state="translated">Web アプリケーションでクライアント スクリプトを管理するためのメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ClientScriptManager class is used to manage client scripts and add them to Web applications.</source>
          <target state="translated">ClientScriptManager クラスは、Web アプリケーションに追加のクライアント スクリプトの管理に使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can get a reference to the ClientScriptManager class from the &lt;xref:System.Web.UI.Page.ClientScript%2A&gt; property of the &lt;xref:System.Web.UI.Page&gt; object.</source>
          <target state="translated">ClientScriptManager クラスへの参照を取得することができます、&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;のプロパティ、&lt;xref:System.Web.UI.Page&gt;オブジェクト&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.Page.ClientScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</source>
          <target state="translated">できるスクリプトを追加するクライアント Web ページに宣言によって、ページの HTML マークアップに、スクリプトを含めることで。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, there are situations when adding client script dynamically is needed.</source>
          <target state="translated">ただし、クライアント スクリプトを動的に追加することが必要な場合もあります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To add a script dynamically, use the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method, the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; method, the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method, or the &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt; method, depending on when and how you want to add the script.</source>
          <target state="translated">スクリプトを動的に追加するにはこの&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;メソッドは、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;メソッド&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;メソッド、または&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;、スクリプトを追加するタイミングと方法に応じて、メソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add Client Script Dynamically to ASP.NET Web Pages<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 追加クライアント スクリプト動的に ASP.NET Web Pages を<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The ClientScriptManager class uniquely identifies scripts by a key &lt;xref:System.String&gt; and a &lt;xref:System.Type&gt;.</source>
          <target state="translated">ClientScriptManager クラスは、キー&lt;xref:System.String&gt;と&lt;xref:System.Type&gt;。&lt;/xref:System.Type&gt;&lt;/xref:System.String&gt;でスクリプトを一意に識別します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</source>
          <target state="translated">スクリプトの種類を使用して、ページ上で使用可能性のある別のユーザー コントロールからのようなスクリプトの混乱を避けるために役立ちます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The ClientScriptManager class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</source>
          <target state="translated">ときに呼び出される状況でのクライアント コールバック ポストバックを実行せず、クライアントからサーバー コードを実行することが望ましい ClientScriptManager クラスを使用できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is referred to as performing an out-of-band callback to the server.</source>
          <target state="translated">これは、サーバーへの帯域外のコールバックの実行と呼ばれます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</source>
          <target state="translated">クライアント コールバックでは、クライアント スクリプト関数は、ASP.NET Web ページへの非同期要求を送信します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Web page runs a modified version of its normal life cycle to process the callback.</source>
          <target state="translated">Web ページには、コールバックを処理する通常のライフ サイクルの変更済みバージョンが実行されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</source>
          <target state="translated">使用して、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;呼び出されると、クライアント関数への参照を取得するメソッドは、サーバー イベントへのクライアント コールバックを開始します&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ポストバックなしクライアント コールバックの実装<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; スクリプト コールバックが、ドキュメント オブジェクト モデル (DOM) をサポートしていない古いブラウザーでは機能しなくなり、ECMAScript がクライアントで有効になっている必要です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To check if the browser supports callbacks, use the &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt; property, which is accessible through the &lt;xref:System.Web.HttpRequest.Browser%2A&gt; property of the ASP.NET intrinsic &lt;xref:System.Web.HttpContext.Request%2A&gt; object.</source>
          <target state="translated">確認するには、ブラウザーがコールバックをサポートしているかどうかを使用して、&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;経由でアクセスできるは、プロパティ、&lt;xref:System.Web.HttpRequest.Browser%2A&gt;組み込みの ASP.NET のプロパティ&lt;xref:System.Web.HttpContext.Request%2A&gt;オブジェクト&lt;/xref:System.Web.HttpContext.Request%2A&gt;&lt;/xref:System.Web.HttpRequest.Browser%2A&gt;&lt;/xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method and the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt; method to define a client postback event.</source>
          <target state="translated">使用して、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドおよび&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;クライアント ポストバック イベントを定義するメソッド&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These methods enable client script functions, when invoked, to cause the server to post back to the page.</source>
          <target state="translated">これらのメソッドは、発生するページへのポストバックをサーバーに、呼び出されたときに、クライアント スクリプト関数を有効にします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</source>
          <target state="translated">クライアントのポストバック イベントは、Web ページには、クライアントのポストバック イベントをプロセスに通常のライフ サイクルが完了することで、クライアント コールバックと異なります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you are using a &lt;xref:System.Web.UI.WebControls.Button&gt; control and the &lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt; property is set to <ph id="ph2">`false`</ph>, then you can use the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method to return the client postback event for the &lt;xref:System.Web.UI.WebControls.Button&gt; control.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を使用している場合、&lt;xref:System.Web.UI.WebControls.Button&gt;コントロールと&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;プロパティに設定されている<ph id="ph2">`false`</ph>を使用して、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;クライアントを返すメソッドをポストバック イベントを&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.Button&gt; control, &lt;xref:System.Web.UI.WebControls.ImageButton&gt; control, and &lt;xref:System.Web.UI.WebControls.LinkButton&gt; control can be used to run client script.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;のプロパティ、&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール、&lt;xref:System.Web.UI.WebControls.ImageButton&gt;コントロール、および&lt;xref:System.Web.UI.WebControls.LinkButton&gt;コントロールを使用してクライアントを実行するスクリプト&lt;/xref:System.Web.UI.WebControls.LinkButton&gt;&lt;/xref:System.Web.UI.WebControls.ImageButton&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</source>
          <target state="translated">クライアント関数が、呼び出されると、クライアントの開始にコールバックして、サーバー イベントへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The client function for this overloaded method includes a specified control, argument, client script, and context.</source>
          <target state="translated">このオーバー ロードされたメソッドのクライアント機能には、指定したコントロール、引数、クライアント スクリプト、およびコンテキストが含まれています。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The GetCallbackEventReference method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</source>
          <target state="translated">GetCallbackEventReference メソッドでは、ページの通常の有効期間の変更済みバージョンをあるサーバーに、帯域外のコールバックを実行します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ポストバックなしクライアント コールバックの実装<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ブラウザーは、Microsoft Internet Explorer (バージョン 5.0 以降) が、スクリプトのコールバック機構はよう COM オブジェクトによって実装されし、ブラウザーで ActiveX コントロールの実行を設定する必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</source>
          <target state="translated">その他のブラウザーでは、ブラウザーのローカル ドキュメント オブジェクト モデル (DOM) を使用して、XMLHttpRequest を使用します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To check whether a browser supports client callbacks, use the &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt; property.</source>
          <target state="translated">確認するには、ブラウザーがクライアントのコールバックをサポートしているかどうかを使用して、&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;プロパティ&lt;/xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To check whether a browser supports XML over HTTP, use the &lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt; property.</source>
          <target state="translated">確認するには、ブラウザーが HTTP 経由での XML をサポートしているかどうかを使用して、&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;プロパティ&lt;/xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Both properties are accessible through the &lt;xref:System.Web.HttpRequest.Browser%2A&gt; property of the intrinsic ASP.NET &lt;xref:System.Web.HttpContext.Request%2A&gt; object.</source>
          <target state="translated">両方のプロパティが経由でアクセスできる、&lt;xref:System.Web.HttpRequest.Browser%2A&gt;組み込みの ASP.NET のプロパティ&lt;xref:System.Web.HttpContext.Request%2A&gt;オブジェクト&lt;/xref:System.Web.HttpContext.Request%2A&gt;&lt;/xref:System.Web.HttpRequest.Browser%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The GetCallbackEventReference overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method performs a callback synchronously using XML over HTTP.</source>
          <target state="translated">GetCallbackEventReference オーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドが HTTP 経由で同期的に XML を使用してコールバックを実行します&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</source>
          <target state="translated">コールバックのシナリオでデータを同期的に送信するとき、同期コールバックはすぐに返すし、ブラウザーはブロックされません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>No two synchronous callbacks callback can execute at the same time in the browser.</source>
          <target state="translated">2 つの同期コールバックをブラウザーで同時に実行することはできます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</source>
          <target state="translated">1 つは現在保留中、2 つ目の同期コールバックが発生した場合は、2 つ目の同期のコールバックが最初をキャンセルし、2 番目のコールバックのみが返されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To send data asynchronously, use one of the overloads that takes the <ph id="ph1">`useAsync`</ph> parameter, which is a Boolean value controlling this behavior.</source>
          <target state="translated">データを非同期的に送信するを取るオーバー ロードのいずれかの操作を使用して、<ph id="ph1">`useAsync`</ph>パラメーターで、ブール値は、この動作を制御する値。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</source>
          <target state="translated">非同期のシナリオでは、保留中の複数のコールバック; を持つことができます。ただし、返される順序は、開始された順序と一致するは保証されません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Additionally, this overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method specifies no client function to handle the case of an error condition generated by the &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt; method.</source>
          <target state="translated">さらに、このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドは、クライアントを処理する関数によって生成されたエラー状態の場合の指定なし、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To specify a client error callback handler, use one of the overloads that takes the <ph id="ph1">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">クライアント エラー コールバック ハンドラーを指定するを取るオーバー ロードのいずれかの操作を使用して、<ph id="ph1">`clientErrorCallback`</ph>のパラメーターです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The GetCallbackEventReference method takes an optional string <ph id="ph1">`argument`</ph> parameter and returns a string.</source>
          <target state="translated">GetCallbackEventReference メソッドは省略可能な文字列<ph id="ph1">`argument`</ph>パラメーター文字列を返します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</source>
          <target state="translated">渡す、または複数の値を受信するには、入力内の値を連結したり、それぞれの文字列を返します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; スクリプトのコールバック操作中に更新する必要があるページまたはコントロールのプロパティの実装での表示状態を使用しないでください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the properties are to survive page requests, you can use session state.</source>
          <target state="translated">プロパティは、ページ要求からの復旧は、セッション状態を使用することができます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that handles the client callback.</source>
          <target state="translated">サーバー <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント コールバックを処理します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The control must implement the <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and provide a &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">コントロールを実装する必要があります、 <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスし、提供、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An argument passed from the client script to the server       &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">サーバーにクライアント スクリプトから渡される引数&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">成功したサーバー イベントの結果を受け取るクライアント イベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">コールバックを開始する前に、クライアント上で評価されるクライアント スクリプトです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">スクリプトの結果は、クライアントのイベント ハンドラーに渡されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">クライアント コールバックを呼び出すクライアント関数の名前。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified does not implement the <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定を実装しません、 <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">クライアント関数が、呼び出されると、クライアントが初期化にコールバックするサーバー イベントへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</source>
          <target state="translated">このオーバー ロードされたメソッドのクライアント機能には、指定したコントロール、引数、クライアント スクリプト、コンテキスト、およびブール値が含まれています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method requires a <ph id="ph1">`useAsync`</ph> parameter, which allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドが必要な<ph id="ph1">`useAsync`</ph>値を設定して、クライアント コールバックを非同期的に実行することができます、パラメーター <ph id="ph2">`true`</ph>&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">このメソッドのオーバー ロード バージョンを必要としない、<ph id="ph1">`useAsync`</ph>パラメーターに値を設定する<ph id="ph2">`false`</ph>既定です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information on this method, see the remarks for the overload &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method.</source>
          <target state="translated">このメソッドの詳細については、オーバー ロードは、「解説」を参照してください。&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッド。&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that handles the client callback.</source>
          <target state="translated">サーバー <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント コールバックを処理します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The control must implement the <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and provide a &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">コントロールを実装する必要があります、 <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスし、提供、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An argument passed from the client script to the server       &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">サーバーにクライアント スクリプトから渡される引数&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">成功したサーバー イベントの結果を受け取るクライアント イベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">コールバックを開始する前に、クライアント上で評価されるクライアント スクリプトです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">スクリプトの結果は、クライアントのイベント ハンドラーに渡されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform the callback asynchronously; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to perform the callback synchronously.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コールバックを非同期的に実行するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コールバックを同期的に実行します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">クライアント コールバックを呼び出すクライアント関数の名前。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified does not implement the <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定を実装しません、 <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">クライアント関数が、呼び出されると、クライアントが初期化にコールバックするサーバー イベントへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">このオーバー ロードされたメソッドのクライアント機能には、指定されたターゲット、引数、クライアント スクリプト、コンテキスト、エラー ハンドラー、およびブール値が含まれています。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method takes a <ph id="ph1">`target`</ph> string parameter instead of a &lt;xref:System.Web.UI.Control&gt; parameter.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドは、<ph id="ph1">`target`</ph>文字列パラメーターの代わりに、&lt;xref:System.Web.UI.Control&gt;のパラメーターです&lt;/xref:System.Web.UI.Control&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use this overload when you want the callback to go back to something other than a string containing the &lt;xref:System.Web.UI.Control.UniqueID%2A&gt; of the control.</source>
          <target state="translated">コールバックを含む文字列以外にする場合は、このオーバー ロードを使用して、&lt;xref:System.Web.UI.Control.UniqueID%2A&gt;コントロールの&lt;/xref:System.Web.UI.Control.UniqueID%2A&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Additionally, this overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method requires a <ph id="ph1">`useAsync`</ph> and a <ph id="ph2">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">さらに、このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドが必要な<ph id="ph1">`useAsync`</ph>と<ph id="ph2">`clientErrorCallback`</ph>パラメーター&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`useAsync`</ph>パラメーター値を設定して、クライアント コールバックを非同期的に実行できます。<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">このメソッドのオーバー ロード バージョンを必要としない、<ph id="ph1">`useAsync`</ph>パラメーターに値を設定する<ph id="ph2">`false`</ph>既定です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler, the &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt; method, returns an error.</source>
          <target state="translated"><ph id="ph1">`clientErrorCallback`</ph>パラメーターを使用する場合に呼び出されるクライアント関数の名前を定義するサーバー ハンドラー、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;メソッド、エラーが返されます&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">このメソッドのオーバー ロード バージョンを必要としない、<ph id="ph1">`clientErrorCallback`</ph>パラメーターは、値を null に設定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information on this method, see the remarks for the overload &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method.</source>
          <target state="translated">このメソッドの詳細については、オーバー ロードは、「解説」を参照してください。&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッド。&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The name of a server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that handles the client callback.</source>
          <target state="translated">サーバーの名前<bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント コールバックを処理します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The control must implement the <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and provide a &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">コントロールを実装する必要があります、 <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスし、提供、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An argument passed from the client script to the server       &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">サーバーにクライアント スクリプトから渡される引数&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">成功したサーバー イベントの結果を受け取るクライアント イベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">コールバックを開始する前に、クライアント上で評価されるクライアント スクリプトです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">スクリプトの結果は、クライアントのイベント ハンドラーに渡されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">サーバー イベント ハンドラーでエラーが発生したときに、結果を受け取るクライアントのイベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform the callback asynchronously; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to perform the callback synchronously.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コールバックを非同期的に実行するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コールバックを同期的に実行します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">クライアント コールバックを呼び出すクライアント関数の名前。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">クライアント関数が、呼び出されると、クライアントが初期化にコールバックするサーバー イベントへの参照を取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">このオーバー ロードされたメソッドのクライアント機能には、指定したコントロール、引数、クライアント スクリプト、コンテキスト、エラー ハンドラー、およびブール値が含まれています。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method requires a <ph id="ph1">`useAsync`</ph> and a <ph id="ph2">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッドが必要な<ph id="ph1">`useAsync`</ph>と<ph id="ph2">`clientErrorCallback`</ph>のパラメーターです&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`useAsync`</ph>パラメーター値を設定して、クライアント コールバックを非同期的に実行できます。<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">このメソッドのオーバー ロード バージョンを必要としない、<ph id="ph1">`useAsync`</ph>パラメーターに値を設定する<ph id="ph2">`false`</ph>既定です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler (the &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt; method) returns an error.</source>
          <target state="translated"><ph id="ph1">`clientErrorCallback`</ph>パラメーターを使用する場合に呼び出されるクライアント関数の名前を定義するサーバー ハンドラー (、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;メソッド) はエラーを返します&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">このメソッドのオーバー ロード バージョンを必要としない、<ph id="ph1">`clientErrorCallback`</ph>パラメーターは、値を null に設定します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information on this method, see the remarks for the overload &lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt; method.</source>
          <target state="translated">このメソッドの詳細については、オーバー ロードは、「解説」を参照してください。&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;メソッド。&lt;/xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that handles the client callback.</source>
          <target state="translated">サーバー <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント コールバックを処理します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The control must implement the <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and provide a &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">コントロールを実装する必要があります、 <bpt id="p1">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスし、提供、&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An argument passed from the client script to the server &lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt; method.</source>
          <target state="translated">サーバーにクライアント スクリプトから渡される引数&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;メソッド&lt;/xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">成功したサーバー イベントの結果を受け取るクライアント イベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">コールバックを開始する前に、クライアント上で評価されるクライアント スクリプトです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">スクリプトの結果は、クライアントのイベント ハンドラーに渡されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">サーバー イベント ハンドラーでエラーが発生したときに、結果を受け取るクライアントのイベント ハンドラーの名前。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>to perform the callback asynchronously; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to perform the callback synchronously.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true " name="true " href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コールバックを非同期的に実行するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コールバックを同期的に実行します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">クライアント コールバックを呼び出すクライアント関数の名前。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified does not implement the <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定を実装しません、 <bpt id="p2">&lt;xref href="System.Web.UI.ICallbackEventHandler"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a reference, with <bpt id="p1">&lt;xref uid="langword_csharp_javascript:" name="javascript:" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</source>
          <target state="translated">参照を取得<bpt id="p1">&lt;xref uid="langword_csharp_javascript:" name="javascript:" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント イベントで指定されたイベント引数を使用して、指定したコントロールのサーバーへのポストバックを使用できるの先頭に追加されます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method requires the control that handles the postback to implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface.</source>
          <target state="translated">使用して、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを実装するポストバックを処理するコントロールが必要です、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;インターフェイス&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt;,  use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、 &lt;xref:System.Web.UI.Page&gt;、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The server control to process the postback.</source>
          <target state="translated">ポストバックを処理するサーバー コントロール。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The parameter passed to the server control.</source>
          <target state="translated">サーバー コントロールに、パラメーターが渡されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">対象のコントロールの ID とイベントの引数を含むポストバック関数に JavaScript の呼び出しを表す文字列。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets a reference, with <bpt id="p1">&lt;xref uid="langword_csharp_javascript:" name="javascript:" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</source>
          <target state="translated">参照を取得<bpt id="p1">&lt;xref uid="langword_csharp_javascript:" name="javascript:" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を指定したコントロールを指定されたイベント引数とブール値を示す値イベントの検証を通知を登録するかどうかのサーバーにポスト クライアント イベントで使用できるの先頭に追加されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method requires the control that handles the postback to implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface.</source>
          <target state="translated">使用して、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを実装するポストバックを処理するコントロールが必要です、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;インターフェイス&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt;, use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、 &lt;xref:System.Web.UI.Page&gt;、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The server control to process the postback.</source>
          <target state="translated">ポストバックを処理するサーバー コントロール。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The parameter passed to the server control.</source>
          <target state="translated">サーバー コントロールに、パラメーターが渡されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to register the postback event for validation; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to not register the post back event for validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>検証のポストバック イベントを登録するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>に検証のためにポストバック イベントを登録できません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">対象のコントロールの ID とイベントの引数を含むポストバック関数に JavaScript の呼び出しを表す文字列。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">サーバーへのポストバックが発生するクライアント イベントで使用できる文字列を返します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">参照文字列が定義されている指定した<bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt;,  use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、 &lt;xref:System.Web.UI.Page&gt;、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method can be used with the &lt;xref:System.Web.UI.WebControls.Button&gt; control when the &lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt; property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを使用できます、&lt;xref:System.Web.UI.WebControls.Button&gt;タイミングを制御、&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;プロパティは<ph id="ph1">`false`</ph>&lt;/xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method returns the client postback event for the &lt;xref:System.Web.UI.WebControls.Button&gt; control.</source>
          <target state="translated">このシナリオでは、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを返しますが、クライアントのポストバック イベントを&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the postback.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ポストバックを定義します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">文字列をクライアントでスクリプトとして扱われたときに、クライアントのポストバックを開始します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パラメーターは、<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">サーバーへのポストバックが発生するクライアント イベントで使用できる文字列を返します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">参照文字列は、ポストバックおよびその他のイベント情報の文字列引数を処理する指定されたコントロールによって定義されます。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt;,  use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、 &lt;xref:System.Web.UI.Page&gt;、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method can be used with the &lt;xref:System.Web.UI.WebControls.Button&gt; control when the &lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt; property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを使用できます、&lt;xref:System.Web.UI.WebControls.Button&gt;タイミングを制御、&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;プロパティは<ph id="ph1">`false`</ph>&lt;/xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method returns the client postback event for the &lt;xref:System.Web.UI.WebControls.Button&gt; control.</source>
          <target state="translated">このシナリオでは、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを返しますが、クライアントのポストバック イベントを&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that processes the postback on the server.</source>
          <target state="translated">サーバー <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>サーバーにポストバックを処理します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A string of optional arguments to pass to the control that processes the postback.</source>
          <target state="translated">省略可能なポストバックを処理するコントロールに渡す引数の文字列。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">文字列をクライアントでは、スクリプトとして扱われたとき、ポストバックが開始します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">サーバーへのポストバックが発生するクライアント イベントで使用できる文字列を返します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">参照文字列が定義されている指定した<bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">必要に応じて、検証のためのイベントの参照を登録します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt; object, use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、&lt;xref:System.Web.UI.Page&gt;オブジェクト、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method can be used with the &lt;xref:System.Web.UI.WebControls.Button&gt; control when the &lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt; property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを使用できます、&lt;xref:System.Web.UI.WebControls.Button&gt;タイミングを制御、&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;プロパティは<ph id="ph1">`false`</ph>&lt;/xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method returns the client postback event for the &lt;xref:System.Web.UI.WebControls.Button&gt; control.</source>
          <target state="translated">このシナリオでは、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを返しますが、クライアントのポストバック イベントを&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is <ph id="ph2">`true`</ph>, the GetPostBackEventReference method calls the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt; method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">場合<ph id="ph1">`registerForEventValidation`</ph>は<ph id="ph2">`true`</ph>、GetPostBackEventReference メソッドの呼び出し、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;イベントを生成するクライアントのコントロールを表す一意のコントロール id の検証イベントの参照を登録するメソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the postback.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ポストバックを定義します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to register the event reference for validation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベントの参照を検証; に登録するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">文字列をクライアントでスクリプトとして扱われたときに、クライアントのポストバックを開始します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Returns a string to use in a client event to cause postback to the server.</source>
          <target state="translated">サーバーへのポストバックが発生するクライアントのイベントで使用する文字列を返します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">参照文字列は、ポストバックおよびその他のイベント情報の文字列引数を処理する指定されたコントロールによって定義されます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">必要に応じて、検証のためのイベントの参照を登録します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>To implement the &lt;xref:System.Web.UI.IPostBackEventHandler&gt; interface for a &lt;xref:System.Web.UI.Page&gt;, use the  directive.</source>
          <target state="translated">実装する、&lt;xref:System.Web.UI.IPostBackEventHandler&gt;のためのインターフェイス、 &lt;xref:System.Web.UI.Page&gt;、ディレクティブを使用します&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.IPostBackEventHandler&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method can be used with the &lt;xref:System.Web.UI.WebControls.Button&gt; control when the &lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt; property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを使用できます、&lt;xref:System.Web.UI.WebControls.Button&gt;タイミングを制御、&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;プロパティは<ph id="ph1">`false`</ph>&lt;/xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt; method returns the client postback event for the &lt;xref:System.Web.UI.WebControls.Button&gt; control.</source>
          <target state="translated">このシナリオでは、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;メソッドを返しますが、クライアントのポストバック イベントを&lt;xref:System.Web.UI.WebControls.Button&gt;コントロール&lt;/xref:System.Web.UI.WebControls.Button&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is true, the &lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt; method calls the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt; method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">場合<ph id="ph1">`registerForEventValidation`</ph>が true の場合、&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;メソッドの呼び出し、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;イベントを生成するクライアントのコントロールを表す一意のコントロール id の検証イベントの参照を登録するメソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;&lt;/xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The server <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that processes the postback on the server.</source>
          <target state="translated">サーバー <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>サーバーにポストバックを処理します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A string of optional arguments to pass to <ph id="ph1">`control`</ph>.</source>
          <target state="translated">渡される省略可能な引数の文字列<ph id="ph1">`control`</ph>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to register the event reference for validation; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベントの参照を検証; に登録するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">文字列をクライアントでは、スクリプトとして扱われたとき、ポストバックが開始します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The specified <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets a URL reference to a resource in an assembly.</source>
          <target state="translated">アセンブリ内のリソースへの URL 参照を取得します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The GetWebResourceUrl method returns a URL reference to a resource embedded in an assembly.</source>
          <target state="translated">GetWebResourceUrl メソッドでは、アセンブリに埋め込まれているリソースへの URL 参照を返します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The returned reference is not URL encoded.</source>
          <target state="translated">返される参照は、エンコードされた URL ではありません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Resources can be script files, images, or any static file.</source>
          <target state="translated">リソースは、スクリプト ファイル、画像、または、静的ファイルを使用できます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">リソースにアクセスするオブジェクトに基づく種類を指定します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A Web resource registered with the page is uniquely identified by its type and name.</source>
          <target state="translated">ページに登録されている Web リソースは、その型と名前によって一意に識別します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Only one resource with a given type and name pair can be registered with the page.</source>
          <target state="translated">渡された型と名前のペアを持つ&amp;1; つだけのリソースは、ページを登録することができます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</source>
          <target state="translated">既に登録されているリソースを登録しようとして、登録済みのリソースの複製が作成されることはできません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The GetWebResourceUrl method is used in conjunction with the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt; method for accessing resources embedded in assemblies.</source>
          <target state="translated">組み合わせて GetWebResourceUrl メソッドを使用、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;アセンブリに埋め込まれているリソースにアクセスするメソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For more information on using resources in applications, see <bpt id="p1">[</bpt>ASP.NET Web Page Resources Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">アプリケーションでリソースの使用の詳細については、次を参照してください。 <bpt id="p1">[</bpt>ASP.NET Web ページのリソースの概要<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The type of the resource.</source>
          <target state="translated">リソースの種類。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the resource in the assembly.</source>
          <target state="translated">アセンブリ内のリソースの完全修飾名。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The URL reference to the resource.</source>
          <target state="translated">リソースへの URL 参照します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Determines whether the client script block is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key.</source>
          <target state="translated">クライアント スクリプト ブロックに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定のキーを使用します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method to avoid registering duplicate scripts.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;スクリプトが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt; method calls the overload that takes both a <ph id="ph1">`key`</ph> and a <ph id="ph2">`type`</ph> parameter with the type set as a &lt;xref:System.Web.UI.Page&gt; object</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;メソッドは、両方を受け取るオーバー ロードを呼び出し、<ph id="ph1">`key`</ph>と<ph id="ph2">`type`</ph>&lt;xref:System.Web.UI.Page&gt;オブジェクト&lt;/xref:System.Web.UI.Page&gt;として、型を持つパラメーターが設定&lt;/xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The key of the client script block to search for.</source>
          <target state="translated">検索対象のクライアント スクリプト ブロックのキー。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client script block is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント スクリプト ブロックの場合は登録します。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Determines whether the client script block is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a key and type.</source>
          <target state="translated">クライアント スクリプト ブロックに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのキーおよび種類を使用します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method to avoid registering duplicate scripts.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;スクリプトが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">リソースにアクセスするオブジェクトに基づく種類を指定します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">インスタンスを使用する場合、<ph id="ph1">`Page`</ph>を指定する、リソースにアクセスするインスタンス、<ph id="ph2">`Page`</ph>型です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The type of the client script block to search for.</source>
          <target state="translated">検索対象のクライアント スクリプト ブロックの型。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The key of the client script block to search for.</source>
          <target state="translated">検索対象のクライアント スクリプト ブロックのキー。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client script block is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント スクリプト ブロックの場合は登録します。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The client script type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クライアント スクリプトの種類は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Determines whether the client script include is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key.</source>
          <target state="translated">決定に登録されているが、クライアント スクリプトを含めるかどうか、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定のキーを使用します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; method to avoid registering duplicate scripts.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;スクリプトが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型では一意に識別します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method calls the overload that takes both a <ph id="ph1">`key`</ph> and a <ph id="ph2">`type`</ph> parameter with the type set as a &lt;xref:System.Web.UI.Page&gt; object.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;メソッドは、両方を受け取るオーバー ロードを呼び出し、<ph id="ph1">`key`</ph>と<ph id="ph2">`type`</ph>、型のパラメーターを設定、&lt;xref:System.Web.UI.Page&gt;オブジェクト&lt;/xref:System.Web.UI.Page&gt;&lt;/xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The key of the client script include to search for.</source>
          <target state="translated">検索するクライアント スクリプトのキーが含まれます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client script include is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント スクリプトに含める場合は登録です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Determines whether the client script include is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a key and type.</source>
          <target state="translated">決定クライアント スクリプトに含めるかどうかに登録されて、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトのキーおよび種類を使用しています。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; method to avoid registering duplicate client script includes.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;重複しているクライアント スクリプトを登録しないようにするメソッドが含まれています&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型では一意に識別します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">リソースにアクセスするオブジェクトに基づく種類を指定します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For instance, when using a Page instance to access the resource, you specify the <ph id="ph1">`Page`</ph> type.</source>
          <target state="translated">たとえば、ページ インスタンスを使用して、リソースにアクセスする、指定した、<ph id="ph1">`Page`</ph>型です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The type of the client script include to search for.</source>
          <target state="translated">検索するクライアント スクリプトの種類が含まれます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The key of the client script include to search for.</source>
          <target state="translated">検索するクライアント スクリプトのキーが含まれます。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the client script include is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クライアント スクリプトに含める場合は登録です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The client script include type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クライアント スクリプトに含める型は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Determines whether the OnSubmit statement is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key.</source>
          <target state="translated">OnSubmit ステートメントに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定のキーを使用します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt; method to avoid registering duplicate OnSubmit statements.</source>
          <target state="translated">このメソッドを呼び出す前に、 &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;OnSubmit ステートメントが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">これは、ステートメントを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">ステートメントは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーと型指定されたステートメントは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt; method calls the overload that takes both a <ph id="ph1">`key`</ph> and a <ph id="ph2">`type`</ph> parameter with the type set as a &lt;xref:System.Web.UI.Page&gt; object</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;メソッドは、両方を受け取るオーバー ロードを呼び出し、<ph id="ph1">`key`</ph>と<ph id="ph2">`type`</ph>型とパラメーターの設定を&lt;xref:System.Web.UI.Page&gt;オブジェクト&lt;/xref:System.Web.UI.Page&gt;として&lt;/xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">検索する OnSubmit ステートメントのキー。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the OnSubmit statement is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>OnSubmit ステートメントは、登録されている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Determines whether the OnSubmit statement is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key and type.</source>
          <target state="translated">OnSubmit ステートメントに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定したキーと型を使用します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt; method to avoid registering duplicate statements.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;ステートメントが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">これは、ステートメントを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">ステートメントは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーと型指定されたステートメントは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">リソースにアクセスするオブジェクトに基づく種類を指定します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">インスタンスを使用する場合、<ph id="ph1">`Page`</ph>を指定する、リソースにアクセスするインスタンス、<ph id="ph2">`Page`</ph>型です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The type of the OnSubmit statement to search for.</source>
          <target state="translated">検索する OnSubmit ステートメントの種類。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">検索する OnSubmit ステートメントのキー。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the OnSubmit statement is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>OnSubmit ステートメントは、登録されている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The OnSubmit statement type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">OnSubmit ステートメントの種類は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Determines whether the startup script is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key.</source>
          <target state="translated">スタートアップ スクリプトに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定のキーを使用します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method to avoid registering duplicate scripts.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;スクリプトが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">スタートアップ スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method calls the overload that takes both a string <ph id="ph1">`key`</ph> and a <ph id="ph2">`type`</ph> parameter with the type set as a &lt;xref:System.Web.UI.Page&gt; object</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;メソッドは、両方の文字列を受け取るオーバー ロードを呼び出す<ph id="ph1">`key`</ph>と<ph id="ph2">`type`</ph>&lt;xref:System.Web.UI.Page&gt;オブジェクト&lt;/xref:System.Web.UI.Page&gt;として、型を持つパラメーターが設定&lt;/xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The key of the startup script to search for.</source>
          <target state="translated">検索対象のスタートアップ スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the startup script is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>スタートアップ スクリプトは、登録されている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Determines whether the startup script is registered with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the specified key and type.</source>
          <target state="translated">スタートアップ スクリプトに登録されているかどうかを判断、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの指定したキーと型を使用します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Call this method before calling the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method to avoid registering duplicate scripts.</source>
          <target state="translated">このメソッドを呼び出す前に、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;スクリプトが重複する登録を回避するためです&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">これは、スクリプトを作成するサーバーのリソースの消費量が必要な場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A client startup script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアントのスタートアップ スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The type of the startup script to search for.</source>
          <target state="translated">検索対象のスタートアップ スクリプトの種類。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The key of the startup script to search for.</source>
          <target state="translated">検索対象のスタートアップ スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the startup script is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>スタートアップ スクリプトは、登録されている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The startup script type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">スタートアップ スクリプトの種類が<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Registers a JavaScript array declaration with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using an array name and array value.</source>
          <target state="translated">JavaScript 配列宣言を登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの配列の名前と配列の値を使用します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The array name to register.</source>
          <target state="translated">登録する配列の名前。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The array value or values to register.</source>
          <target state="translated">配列の値または値を登録します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Registers the client script with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, key, and script literal.</source>
          <target state="translated">クライアントを使用してスクリプトを登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キー、およびスクリプト リテラルを使用します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">ページには、指定された型とキー ペアを持つ&amp;1; つだけのスクリプトを登録できます。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">既に登録されているスクリプトを登録しようとしています。 重複したスクリプトは作成されません。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt; method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">呼び出す、&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;所定のキーと型のペアを持つクライアント スクリプトかどうかを判断するメソッドは既に登録されてしスクリプトを追加しようとしてが不必要に回避します。&lt;/xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>In this overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method, you must make sure that the script provided in the <ph id="ph1">`script`</ph> parameter is wrapped in a <ph id="ph2">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">このオーバー ロードで、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;メソッド、する必要がありますでスクリプトが指定されていることを確認して、<ph id="ph1">`script`</ph>にパラメーターがラップされて、<ph id="ph2">`&lt;script&gt;`</ph>要素ブロック&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method adds a script block to the top of the rendered page.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;メソッドは、レンダリングされるページの上部にスクリプト ブロックを追加します&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">スクリプト ブロックは、登録されている順序で出力されるとは限りません。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>If the order of the script blocks is important, use a &lt;xref:System.Text.StringBuilder&gt; object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">スクリプト ブロックの順序が重要な場合を使用して、&lt;xref:System.Text.StringBuilder&gt;オブジェクトを&amp;1; つの文字列で、スクリプトを収集し、それらすべてを&amp;1; つのクライアント スクリプト ブロック内に登録します&lt;/xref:System.Text.StringBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The type of the client script to register.</source>
          <target state="translated">登録するクライアント スクリプトの種類。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The key of the client script to register.</source>
          <target state="translated">登録するクライアント スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The client script literal to register.</source>
          <target state="translated">クライアント スクリプトを登録するリテラルです。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Registers the client script with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</source>
          <target state="translated">クライアントを使用してスクリプトを登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キー、スクリプト タグを追加するかどうかを示すスクリプト リテラル、およびブール値を使用します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">ページには、指定された型とキー ペアを持つ&amp;1; つだけのスクリプトを登録できます。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">既に登録されているスクリプトを登録しようとしています。 重複したスクリプトは作成されません。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt; method to determine whether a client script with a given key and type pair is already registered.</source>
          <target state="translated">呼び出す、&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;指定したキーおよび種類のペアでクライアント スクリプトは既に登録されているかどうかを調べます&lt;/xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This lets you avoid unnecessarily attempting to add the script.</source>
          <target state="translated">これにより、スクリプトを追加しようとしてが不必要に回避できます。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method, you can indicate whether the script provided in the <ph id="ph1">`script`</ph> parameter is wrapped with a <ph id="ph2">`&lt;script&gt;`</ph> element block by using the <ph id="ph3">`addScriptTags`</ph> parameter.</source>
          <target state="translated">このオーバー ロードで、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;メソッドを示すことができます、スクリプトがで提供されるかどうか、<ph id="ph1">`script`</ph>でパラメーターをラップ、<ph id="ph2">`&lt;script&gt;`</ph>要素ブロックを使用して、<ph id="ph3">`addScriptTags`</ph>パラメーター&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">設定<ph id="ph1">`addScriptTags`</ph>に<ph id="ph2">`true`</ph>スクリプト タグが自動的に追加することを示します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt; method adds a script block to the top of the rendered page.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;メソッドは、レンダリングされるページの上部にスクリプト ブロックを追加します&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">スクリプト ブロックは、登録されている順序で出力されるとは限りません。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>If the order of the script blocks is important, use a &lt;xref:System.Text.StringBuilder&gt; object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">スクリプト ブロックの順序が重要な場合を使用して、&lt;xref:System.Text.StringBuilder&gt;オブジェクトを&amp;1; つの文字列で、スクリプトを収集し、それらすべてを&amp;1; つのクライアント スクリプト ブロック内に登録します&lt;/xref:System.Text.StringBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The type of the client script to register.</source>
          <target state="translated">登録するクライアント スクリプトの種類。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The key of the client script to register.</source>
          <target state="translated">登録するクライアント スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The client script literal to register.</source>
          <target state="translated">クライアント スクリプトを登録するリテラルです。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">スクリプト タグを追加するかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The client script block type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クライアント スクリプト ブロックの型は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Registers the client script with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a key and a URL, which enables the script to be called from the client.</source>
          <target state="translated">クライアントを使用してスクリプトを登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト キーと、URL では、により、クライアントから呼び出されるスクリプトを使用します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型では一意に識別します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">ページには、指定された型とキー ペアを持つ&amp;1; つだけのスクリプトを登録できます。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">既に登録されているスクリプトを登録しようとしています。 重複したスクリプトは作成されません。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt; method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;クライアント スクリプトを指定したキーに含めるかどうかと型のペアは既に登録されているし、スクリプトを追加しようとしてが不必要に回避するを判断するメソッド&lt;/xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;を呼び出す</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To resolve the client URL, use the &lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; クライアント URL を解決するを使用して、&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;メソッド&lt;/xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">このメソッドは、これが呼び出されるパスを解決するのには、URL のコンテキストを使用します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; method calls the overload that takes a <ph id="ph1">`key`</ph>, a <ph id="ph2">`URL`</ph>, and a <ph id="ph3">`type`</ph> parameter.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;メソッド呼び出しを受け取るオーバー ロード、 <ph id="ph1">`key`</ph>、 <ph id="ph2">`URL`</ph>、および<ph id="ph3">`type`</ph>パラメーター&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The method adds a script block at the top of the rendered page.</source>
          <target state="translated">メソッドは、レンダリングされたページの上部にあるスクリプト ブロックを追加します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The key of the client script include to register.</source>
          <target state="translated">登録するクライアント スクリプトのキーが含まれます。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The URL of the client script include to register.</source>
          <target state="translated">登録するクライアント スクリプトの URL が含まれます。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Registers the client script include with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, a key, and a URL.</source>
          <target state="translated">レジスタとクライアント スクリプトに含める、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キー、および URL を使用します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt; method takes <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>url<ept id="p2">*</ept> parameters to identify the script, as well as a <ph id="ph1">`type`</ph> parameter to specify the identification of the client script include.</source>
          <target state="translated">このオーバー ロード、&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;メソッドは<bpt id="p1">*</bpt>キー<ept id="p1">*</ept>と<bpt id="p2">*</bpt>url<ept id="p2">*</ept> 、スクリプトを識別するパラメーターと同様に、<ph id="ph1">`type`</ph>クライアント スクリプトの id を指定するパラメーターが含まれます&lt;/xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">リソースにアクセスするオブジェクトに基づく種類を指定します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">インスタンスを使用する場合、<ph id="ph1">`Page`</ph>を指定する、リソースにアクセスするインスタンス、<ph id="ph2">`Page`</ph>型です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To resolve the client URL, use the &lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; クライアント URL を解決するを使用して、&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;メソッド&lt;/xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">このメソッドは、これが呼び出されるパスを解決するのには、URL のコンテキストを使用します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>This method adds a script block at the top of the rendered page.</source>
          <target state="translated">このメソッドは、レンダリングされたページの上部にあるスクリプト ブロックを追加します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The type of the client script include to register.</source>
          <target state="translated">登録するクライアント スクリプトの種類が含まれます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The key of the client script include to register.</source>
          <target state="translated">登録するクライアント スクリプトのキーが含まれます。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The URL of the client script include to register.</source>
          <target state="translated">登録するクライアント スクリプトの URL が含まれます。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The client script include type is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">クライアント スクリプトに含める型は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Registers the client script resource with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type and a resource name.</source>
          <target state="translated">クライアント スクリプト リソースの登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの型およびリソース名を使用します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The RegisterClientScriptResource method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</source>
          <target state="translated">RegisterClientScriptResource メソッドは、WebResource.axd HTTP ハンドラーのアセンブリのコンパイル時のリソースにアクセスする場合に使用されます。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The RegisterClientScriptResource method registers the script with the &lt;xref:System.Web.UI.Page&gt; object and prevents duplicate scripts.</source>
          <target state="translated">RegisterClientScriptResource メソッドを使用してスクリプトを登録する、&lt;xref:System.Web.UI.Page&gt;オブジェクトし、重複するスクリプトを防止します&lt;/xref:System.Web.UI.Page&gt;。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>This method wraps the contents of the resource URL with a <ph id="ph1">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">このメソッドを使用してリソースの URL の内容をラップする、<ph id="ph1">`&lt;script&gt;`</ph>要素ブロックします。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The type of the client script resource to register.</source>
          <target state="translated">リソースの種類、クライアント スクリプトを登録します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The name of the client script resource to register.</source>
          <target state="translated">登録するクライアント スクリプト リソースの名前。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</source>
          <target state="translated">コントロールの ID、属性名、および属性値を指定して指定したコントロールのカスタム (expando) 属性として名前/値ペアを登録します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The RegisterExpandoAttribute method registers a name/value pair as a custom (expando) attribute on the specified &lt;xref:System.Web.UI.Control&gt;.</source>
          <target state="translated">RegisterExpandoAttribute メソッドは、指定した&lt;xref:System.Web.UI.Control&gt;。&lt;/xref:System.Web.UI.Control&gt;カスタム (expando) 属性として名前/値ペアを登録します。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">Expando 属性が、レンダリングされたコントロールのマークアップの XHTML 互換性を保つための JavaScript から動的に設定されます。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Quotes and backslashes in the custom (expando) attribute's values are escaped.</source>
          <target state="translated">引用符と円記号のカスタム (expando) 属性の値はエスケープされます。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>If you do not want to escape quotes and backslashes, call the &lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt; overload method and set the <ph id="ph1">`encode`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">引用符と円記号をエスケープするためにしたくない場合、&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;メソッドをオーバー ロードされ、設定、<ph id="ph1">`encode`</ph>にパラメーター <ph id="ph2">`false`</ph>&lt;/xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Expando 属性が見つからない、または expando 属性を追加するコントロールが見つからない場合は、クライアント スクリプトが生成されますが、コントロールには影響しません。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the page that contains the custom attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>カスタム属性を含むページにします。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">登録するカスタム属性の名前。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The value of the custom attribute.</source>
          <target state="translated">カスタム属性の値です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</source>
          <target state="translated">コントロールの ID、属性名、属性値、および属性値をエンコードするかどうかを示すブール値を指定して指定したコントロールのカスタム (expando) 属性として名前/値ペアを登録します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The RegisterExpandoAttribute method registers a name/value pair as a custom (expando) attribute on the specified &lt;xref:System.Web.UI.Control&gt;.</source>
          <target state="translated">RegisterExpandoAttribute メソッドは、指定した&lt;xref:System.Web.UI.Control&gt;。&lt;/xref:System.Web.UI.Control&gt;カスタム (expando) 属性として名前/値ペアを登録します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">Expando 属性が、レンダリングされたコントロールのマークアップの XHTML 互換性を保つための JavaScript から動的に設定されます。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Set the <ph id="ph1">`encode`</ph> parameter to <ph id="ph2">`true`</ph> if you need to escape quotes and backslashes in your expando attribute's value.</source>
          <target state="translated">設定、<ph id="ph1">`encode`</ph>にパラメーター<ph id="ph2">`true`</ph>引用符と expando 属性の値にバック スラッシュをエスケープする必要がある場合。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Expando 属性が見つからない、または expando 属性を追加するコントロールが見つからない場合は、クライアント スクリプトが生成されますが、コントロールには影響しません。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the page that contains the custom attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.UI.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>カスタム属性を含むページにします。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">登録するカスタム属性の名前。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The value of the custom attribute.</source>
          <target state="translated">カスタム属性の値です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether to encode the custom attribute to register.</source>
          <target state="translated">登録するカスタム属性をエンコードするかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Registers an event reference for validation with a unique control ID representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意のコントロール ID を検証用のイベントの参照を登録します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>For more information and examples, see the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; method.</source>
          <target state="translated">詳細と例については、次を参照してください、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;メソッド。&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意の ID。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Registers an event reference for validation with <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">登録、イベントの参照を使用して検証<bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>For more information and examples, see the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; method.</source>
          <target state="translated">詳細と例については、次を参照してください、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;メソッド。&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies how client JavaScript is generated to initiate a postback event.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.PostBackOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ポストバック イベントを開始するクライアントの JavaScript を生成する方法を指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意のコントロール ID とイベント引数を使用して、イベントの参照の検証を登録します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意の ID。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Event arguments passed with the client event.</source>
          <target state="translated">クライアント イベントにイベント引数に渡されます。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The method is called prior to the &lt;xref:System.Web.UI.Page.Render*&gt; method.</source>
          <target state="translated">メソッドは前に、&lt;xref:System.Web.UI.Page.Render*&gt;メソッド&lt;/xref:System.Web.UI.Page.Render*&gt;。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Registers a hidden value with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">非表示の値を登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The RegisterHiddenField method creates a hidden <ph id="ph1">`&lt;input&gt;`</ph> element on the rendered HTML page.</source>
          <target state="translated">RegisterHiddenField メソッドが非表示を作成<ph id="ph1">`&lt;input&gt;`</ph>レンダリングされた HTML ページ上の要素。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The name of the hidden field to register.</source>
          <target state="translated">登録する隠しフィールドの名前。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The initial value of the field to register.</source>
          <target state="translated">登録するフィールドの初期値。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hiddenFieldName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hiddenFieldName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Registers an OnSubmit statement with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, a key, and a script literal.</source>
          <target state="translated">登録 OnSubmit ステートメントを<bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キー、およびスクリプトのリテラルを使用します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The statement executes when the <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is submitted.</source>
          <target state="translated">ステートメントを実行したときに、 <bpt id="p1">&lt;xref href="System.Web.UI.HtmlControls.HtmlForm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が送信されます。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>An OnSubmit statement is uniquely identified by its key and its type.</source>
          <target state="translated">OnSubmit ステートメントは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーと型指定されたステートメントは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Only one statement with a given type and key pair can be registered with the page.</source>
          <target state="translated">指定された型とキー ペアを持つ&amp;1; つだけのステートメントは、ページを登録することができます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Attempting to register a statement that is already registered will not create a duplicate of the statement.</source>
          <target state="translated">既に登録されているステートメントを登録しようとしても、ステートメントの重複は作成されません。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt; method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;OnSubmit ステートメントが指定されたキーと型のペアに既に登録されているかどうかを確認し、スクリプトを追加しようとしてが不必要に回避するメソッド&lt;/xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;を呼び出す</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`script`</ph> parameter of the RegisterOnSubmitStatement method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</source>
          <target state="translated"><ph id="ph1">`script`</ph> RegisterOnSubmitStatement メソッドのパラメーターが適切にセミコロン (;) で区切られている限り、複数のスクリプト コマンドを含めることができます。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The RegisterOnSubmitStatement adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</source>
          <target state="translated">RegisterOnSubmitStatement は、ページが送信され、送信を取り消す機会が与えられます前に実行されるスクリプトを追加します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>For more information on HTML forms and the <ph id="ph1">`OnSubmit`</ph> attribute, see the <bpt id="p1">[</bpt>World Wide Web Consortium (W3C) Web site<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.</source>
          <target state="translated">HTML フォームの詳細については、<ph id="ph1">`OnSubmit`</ph>属性を参照してください、 <bpt id="p1">[</bpt>World Wide Web コンソーシアム (W3C) の Web サイト<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>です。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The type of the OnSubmit statement to register.</source>
          <target state="translated">登録する OnSubmit ステートメントの種類。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The key of the OnSubmit statement to register.</source>
          <target state="translated">登録する OnSubmit ステートメントのキー。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The script literal of the OnSubmit statement to register.</source>
          <target state="translated">登録する OnSubmit ステートメントのスクリプト リテラルです。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>Registers the startup script with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, a key, and a script literal.</source>
          <target state="translated">使用してスタートアップ スクリプトを登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キー、およびスクリプトのリテラルを使用します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">クライアント スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">ページには、指定された型とキー ペアを持つ&amp;1; つだけのスクリプトを登録できます。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">既に登録されているスクリプトを登録しようとしています。 重複したスクリプトは作成されません。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">呼び出す、&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;所定のキーと型のペアを持つスタートアップ スクリプトかどうかを判断するメソッドは既に登録されてしスクリプトを追加しようとしてが不必要に回避します。&lt;/xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>In this overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method, you must make sure that the script provided in the <ph id="ph1">`script`</ph> parameter is wrapped with a <ph id="ph2">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">このオーバー ロードで、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;メソッド、する必要がありますでスクリプトが指定されていることを確認して、<ph id="ph1">`script`</ph>でパラメーターがラップされて、<ph id="ph2">`&lt;script&gt;`</ph>要素ブロック&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The script block added by the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method executes when the page finishes loading but before the page's &lt;xref:System.Web.UI.Control.OnLoad%2A&gt; event is raised.</source>
          <target state="translated">によって追加されたスクリプト ブロック、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;ページ読み込みが完了したときに、ページの前に、メソッドが実行される&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;イベントが発生します&lt;/xref:System.Web.UI.Control.OnLoad%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">スクリプト ブロックは、登録されている順序で出力されるとは限りません。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If the order of the script blocks is important, use a &lt;xref:System.Text.StringBuilder&gt; object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">スクリプト ブロックの順序が重要な場合を使用して、&lt;xref:System.Text.StringBuilder&gt;オブジェクトを&amp;1; つの文字列で、スクリプトを収集し、それらすべてを&amp;1; つのクライアント スクリプト ブロック内に登録します&lt;/xref:System.Text.StringBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The type of the startup script to register.</source>
          <target state="translated">登録するスタートアップ スクリプトの種類。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The key of the startup script to register.</source>
          <target state="translated">登録するスタートアップ スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The startup script literal to register.</source>
          <target state="translated">スタートアップ スクリプトを登録するリテラルです。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Registers the startup script with the <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</source>
          <target state="translated">使用してスタートアップ スクリプトを登録、 <bpt id="p1">&lt;xref href="System.Web.UI.Page"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトの種類、キーをスクリプト リテラル、およびスクリプト タグを追加するかどうかを示すブール値を使用します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">スタートアップ スクリプトは、そのキーとその型で一意に識別します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">同じキーおよび種類を使用してスクリプトは、重複と見なされます。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">ページには、指定された型とキー ペアを持つ&amp;1; つだけのスクリプトを登録できます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">既に登録されているスクリプトを登録しようとしています。 重複したスクリプトは作成されません。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt; method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">呼び出す、&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;所定のキーと型のペアを持つスタートアップ スクリプトかどうかを判断するメソッドは既に登録されてしスクリプトを追加しようとしてが不必要に回避します。&lt;/xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>In this overload of the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method, you can indicate whether the script provided in the <ph id="ph1">`script`</ph> parameter is wrapped with a <ph id="ph2">`&lt;script&gt;`</ph> element block by using the <ph id="ph3">`addScriptTags`</ph> parameter.</source>
          <target state="translated">このオーバー ロードで、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;メソッドを示すことができます、スクリプトがで提供されるかどうか、<ph id="ph1">`script`</ph>でパラメーターをラップ、<ph id="ph2">`&lt;script&gt;`</ph>要素ブロックを使用して、<ph id="ph3">`addScriptTags`</ph>パラメーター&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">設定<ph id="ph1">`addScriptTags`</ph>に<ph id="ph2">`true`</ph>スクリプト タグが自動的に追加することを示します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The script block added by the &lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt; method executes when the page finishes loading but before the page's &lt;xref:System.Web.UI.Control.OnLoad%2A&gt; event is raised.</source>
          <target state="translated">によって追加されたスクリプト ブロック、&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;ページ読み込みが完了したときに、ページの前に、メソッドが実行される&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;イベントが発生します&lt;/xref:System.Web.UI.Control.OnLoad%2A&gt;&lt;/xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">スクリプト ブロックは、登録されている順序で出力されるとは限りません。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>If the order of the script blocks is important, use a &lt;xref:System.Text.StringBuilder&gt; object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">スクリプト ブロックの順序が重要な場合を使用して、&lt;xref:System.Text.StringBuilder&gt;オブジェクトを&amp;1; つの文字列で、スクリプトを収集し、それらすべてを&amp;1; つのクライアント スクリプト ブロック内に登録します&lt;/xref:System.Text.StringBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The type of the startup script to register.</source>
          <target state="translated">登録するスタートアップ スクリプトの種類。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The key of the startup script to register.</source>
          <target state="translated">登録するスタートアップ スクリプトのキー。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The startup script literal to register.</source>
          <target state="translated">スタートアップ スクリプトを登録するリテラルです。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">スクリプト タグを追加するかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Validates a client event that was registered for event validation using the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt; method.</source>
          <target state="translated">イベントの検証を使用するために登録されたクライアント イベントを検証、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt;メソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt;。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意の ID。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Validates a client event that was registered for event validation using the &lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt; method.</source>
          <target state="translated">イベントの検証を使用するために登録されたクライアント イベントを検証、&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt;メソッド&lt;/xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*&gt;。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">イベントを生成するクライアントのコントロールを表す一意の ID。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The event arguments passed with the client event.</source>
          <target state="translated">クライアント イベントにイベント引数に渡されます。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uniqueId&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;uniqueId&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または空の文字列 ("") です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>