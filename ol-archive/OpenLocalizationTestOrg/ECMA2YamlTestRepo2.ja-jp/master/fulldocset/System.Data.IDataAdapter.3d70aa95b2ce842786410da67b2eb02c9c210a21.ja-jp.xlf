<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c87c52d225e2d4c73dcae7cd16c89247314103fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.IDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc01169181a93883ad8187486a06720855522e05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">428812566c77c872da46336cf574756971109e19</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update a data source.</source>
          <target state="translated">オブジェクトをデータ アダプターを実装するのには、メソッドと入力し、更新に使用されるマッピング操作に関連するプロパティのセットを表します、 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>およびデータ ソースを更新します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances are for data sources that are (or resemble) relational databases with textual commands (like <ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph>), while IDataAdapter instances could can use any type of data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンスは、リレーショナル データベース コマンドのテキストを含む) は (またはのようになります) するデータ ソース (と同様に<ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph>) IDataAdapter インスタンスにデータ ソースの任意の型を使用できますできますが、します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The IDataAdapter interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">IDataAdapter インターフェイスにより、データ ソースと&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;間のブリッジを表すデータ アダプター クラスの実装、継承したクラス</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about DataAdapter classes, see <bpt id="p1">[</bpt>Populating a DataSet from a DataAdapter<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">DataAdapter クラスの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DataAdapter からの DataSet の読み込み<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An application does not create an instance of the IDataAdapter interface directly, but implements an instance of a class that inherits IDataAdapter.</source>
          <target state="translated">アプリケーションでは、直接、IDataAdapter インターフェイスのインスタンスは作成されませんが、IDataAdapter を継承するクラスのインスタンスを実装します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Classes that inherit IDataAdapter must implement the inherited members, and they typically define additional members to add provider-specific functionality.</source>
          <target state="translated">IDataAdapter を継承するクラスは継承されたメンバーを実装する必要があり、通常プロバイダー固有の機能を追加するための追加メンバーを定義します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, the IDataAdapter interface defines a &lt;xref:System.Data.IDataAdapter.Fill%2A&gt; method that takes a &lt;xref:System.Data.DataSet&gt; as a parameter.</source>
          <target state="translated">たとえば、IDataAdapter インターフェイス定義、&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;を受け取るメソッド、&lt;xref:System.Data.DataSet&gt;をパラメーターとして&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.IDataAdapter.Fill%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In turn, the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; class inherits the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method and also defines two additional overloads of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method that take an ADO Recordset object as a parameter.</source>
          <target state="translated">さらに、&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;クラスは継承、&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;メソッド定義のオーバー ロードを&amp;2; つ追加して、&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;を ADO レコード セット オブジェクトをパラメーターとして受け取るメソッド&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Adds or updates rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in the data source using the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> name, and creates a <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> named "Table".</source>
          <target state="translated">追加または内の行を更新、 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一致するように、データ ソースを使用して、 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>名、および作成、 <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> "Table"という名前です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Fill retrieves rows from the data source using the SELECT statement specified by an associated &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">Fill が関連付けられている、指定した SELECT ステートメントを使用してデータ ソースから行を取得&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;プロパティ&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the connection is closed before Fill is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Fill が呼び出される前に、接続が閉じている場合は、データを取得するために開く、閉じられました。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the connection is open before Fill is called, it remains open.</source>
          <target state="translated">Fill が呼び出される前に、接続が開いている場合は、開いたままです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The Fill operation then adds the rows to destination &lt;xref:System.Data.DataTable&gt; objects in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; objects if they do not already exist.</source>
          <target state="translated">格納操作し、変換先に行を追加する&lt;xref:System.Data.DataTable&gt;内のオブジェクト、 &lt;xref:System.Data.DataSet&gt;、作成、&lt;xref:System.Data.DataTable&gt;オブジェクトのかどうかは、まだ存在しない&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataTable&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When creating &lt;xref:System.Data.DataTable&gt; objects, the Fill operation usually creates only column name metadata.</source>
          <target state="translated">作成するときに&lt;xref:System.Data.DataTable&gt;オブジェクトを格納操作は、通常のみの列名のメタデータを作成します&lt;/xref:System.Data.DataTable&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">ただし場合、&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;プロパティに設定されている<ph id="ph1">`AddWithKey`</ph>、適切なプライマリ キーと制約も作成されます&lt;/xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">場合、 <ph id="ph1">`SelectCommand`</ph> OUTER JOIN の結果を返します、 <ph id="ph2">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;結果として得られる&lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt;の値&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt;を設定しません</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>主キーを定義する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">場合、&lt;xref:System.Data.IDataAdapter&gt;重複する列を設定中に検出すると、 &lt;xref:System.Data.DataTable&gt;、パターン"columnname1"、"columnname2"、"columnname3"などを使用して、連続した列の名前が生成されます&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.IDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the incoming data contains unnamed columns, they are put in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">配置されますが、受信データに名前のない列が含まれている場合、&lt;xref:System.Data.DataSet&gt;に従ってパターン"Column1"、"Column2"など&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt;, each result set is put in a separate table.</source>
          <target state="translated">複数の結果セットが追加されたとき、 &lt;xref:System.Data.DataSet&gt;、各結果セットが別のテーブルに格納します&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に整数値を追加してという名前です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">アプリケーションは、注意を使用して、列やテーブルの名前を使用して、これらの名前付けパターンとの競合が発生しないことを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the SELECT statement that is used to populate the &lt;xref:System.Data.DataSet&gt; returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">ときに設定するために使用する SELECT ステートメント、&lt;xref:System.Data.DataSet&gt;複数の結果を返すバッチの SQL ステートメントなど、エラーが含まれる結果のいずれかの場合連続するすべての結果はスキップされ、 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;に追加されていない&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can use the Fill method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">同じ&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt; 、Fill メソッド複数回を使用できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">主キーが存在する場合は、受信した行が既に存在する行と一致すると共にマージされます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">主キーがない場合、受信した行が&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When handling batch SQL statements that return multiple results, the implementation of Fill and &lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt; for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を複数の結果、塗りつぶしの実装を返す SQL ステートメントのバッチを処理するときに、&lt;xref:System.Data.IDataAdapter.FillSchema%2A&gt;の .NET Framework データ プロバイダーが最初の結果のみのスキーマ情報を取得します&lt;/xref:System.Data.IDataAdapter.FillSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if necessary, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のレコードを格納して、必要に応じて、スキーマです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">行の数が正常に追加または更新されて、 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">これには、行を返さないステートメントによって影響を受けた行は含まれません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> named "Table" to the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and configures the schema to match that in the data source based on the specified <bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">追加、 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> "Table"をという名前を指定した<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>に基づいて、指定された、データ ソースにある一致するようにスキーマを構成および<bpt id="p3">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The FillSchema method retrieves the schema from the data source using the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">FillSchema メソッド&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;。&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;を使用してデータ ソースからスキーマを取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The connection object associated with the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt; must be valid, but it does not need to be open.</source>
          <target state="translated">接続オブジェクトに関連付けられている、&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;有効である必要がありますを開く必要はありませんが&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the connection is closed before FillSchema is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">FillSchema が呼び出される前に、接続が閉じている場合は、データを取得するために開く、閉じられました。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the connection is open before FillSchema is called, it remains open.</source>
          <target state="translated">FillSchema が呼び出される前に、接続が開いている場合は、開いたままです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A FillSchema operation adds a &lt;xref:System.Data.DataTable&gt; to the destination &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">FillSchema 操作追加&lt;xref:System.Data.DataTable&gt;先&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It then adds columns to the &lt;xref:System.Data.DataColumnCollection&gt; of the &lt;xref:System.Data.DataTable&gt; and configures the following &lt;xref:System.Data.DataColumn&gt; properties if they exist at the data source:      -   &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;      -   &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.</source>
          <target state="translated">列を次に、追加、&lt;xref:System.Data.DataColumnCollection&gt;の&lt;xref:System.Data.DataTable&gt;、次の構成と&lt;xref:System.Data.DataColumn&gt;プロパティ、データ ソースに存在する場合:- &lt;xref:System.Data.DataColumn.AllowDBNull%2A&gt;- &lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;.&lt;/xref:System.Data.DataColumn.AutoIncrement%2A&gt; &lt;/xref:System.Data.DataColumn.AllowDBNull%2A&gt; &lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataColumnCollection&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You must set &lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt; and &lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt; separately.</source>
          <target state="translated">設定する必要があります&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;と&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;とは別にします&lt;/xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;&lt;/xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;      -   &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;      -   &lt;xref:System.Data.DataColumn.Unique%2A&gt;       FillSchema also configures the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; and &lt;xref:System.Data.DataTable.Constraints%2A&gt; properties according to the following rules:      -   If one or more primary key columns are returned by the &lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;, they are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">- &lt;xref:System.Data.DataColumn.MaxLength%2A&gt;- &lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;-&lt;xref:System.Data.DataColumn.Unique%2A&gt;構成も行います FillSchema、&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;と&lt;xref:System.Data.DataTable.Constraints%2A&gt;次の規則に従ってプロパティ: -&amp;1; つまたは複数の主キー列がこの&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;&lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt;の主キー列として使用される、&lt;/xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;によって返される場合&lt;/xref:System.Data.DataTable.Constraints%2A&gt;&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt;&lt;/xref:System.Data.DataColumn.Unique%2A&gt;&lt;/xref:System.Data.DataColumn.ReadOnly%2A&gt;&lt;/xref:System.Data.DataColumn.MaxLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-   If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</source>
          <target state="translated">主キー列は返されませんが、一意の列は場合、は、すべての一意の列が null 非許容の場合は、主キーとしての一意の列が使用されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If any of the columns are nullable, a &lt;xref:System.Data.UniqueConstraint&gt; is added to the &lt;xref:System.Data.ConstraintCollection&gt;, but the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property is not set.</source>
          <target state="translated">任意の列は null を許容すると場合、&lt;xref:System.Data.UniqueConstraint&gt;に追加、 &lt;xref:System.Data.ConstraintCollection&gt;、ですが、&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;プロパティが設定されていません&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt;&lt;/xref:System.Data.ConstraintCollection&gt;&lt;/xref:System.Data.UniqueConstraint&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">主キー列と一意の列の両方が返された場合でも、主キー列は&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;の主キー列として使用されます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Note that primary keys and unique constraints are added to the &lt;xref:System.Data.ConstraintCollection&gt; according to the previous rules, but other constraint types are not added.</source>
          <target state="translated">主キーと一意の制約が追加することに注意してください、&lt;xref:System.Data.ConstraintCollection&gt;以前の規則が、その他の制約に従って、型は追加されません&lt;/xref:System.Data.ConstraintCollection&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">一意のクラスター化または SQL Server テーブルに複数の列にインデックスを定義し、主キー制約が定義されて、個別の列のセットで、クラスター化インデックスの列の名前が返されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information about how to specify query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">クエリ ヒントを指定する方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>クエリ ヒント (TRANSACT-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.IDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">場合、&lt;xref:System.Data.IDataAdapter&gt;重複する列を設定中に検出すると、 &lt;xref:System.Data.DataTable&gt;、パターン"columnname1"、"columnname2"、"columnname3"などを使用して、連続した列の名前が生成されます&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.IDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If the incoming data contains unnamed columns, they are put in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">配置されますが、受信データに名前のない列が含まれている場合、&lt;xref:System.Data.DataSet&gt;に従ってパターン"Column1"、"Column2"など&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt;, each result set is put in a separate table.</source>
          <target state="translated">複数の結果セットが追加されたとき、 &lt;xref:System.Data.DataSet&gt;、各結果セットが別のテーブルに格納します&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に整数値を追加してという名前です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</source>
          <target state="translated">アプリケーションは、注意を使用して、列やテーブルの名前を使用して、これらの名前付けパターンとの競合が発生しないことを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>FillSchema returns no rows.</source>
          <target state="translated">FillSchema は、行を返しません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.IDataAdapter.Fill%2A&gt; method to add rows to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt; &lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;行を追加するメソッド&lt;/xref:System.Data.IDataAdapter.Fill%2A&gt;を使用して</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be filled with the schema from the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データ ソースからスキーマを格納します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.SchemaType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contain schema information returned from the data source.</source>
          <target state="translated">配列<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データ ソースからスキーマ情報を格納するオブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">SQL SELECT ステートメントを実行するときに、ユーザーによって設定パラメーターを取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contains the parameters set by the user.</source>
          <target state="translated">配列<bpt id="p1">&lt;xref href="System.Data.IDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>パラメーターが含まれているオブジェクトがユーザーによって設定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</source>
          <target state="translated">示すかどうかのマップされていないソース テーブルまたは列が渡されるソース名でフィルター処理するために、またはエラーが発生するを指定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt; property provides the master mapping between the returned records and the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.TableMappings%2A&gt;プロパティは、返されたレコードと&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;マスターのマッピングを提供します。&lt;/xref:System.Data.IDataAdapter.TableMappings%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Passthrough" name="Passthrough" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_Passthrough" name="Passthrough" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">設定されている値が、 <bpt id="p1">&lt;xref href="System.Data.MissingMappingAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</source>
          <target state="translated">示すか、不足しているソース テーブル、列、およびそれらのリレーションシップは無視、データセットのスキーマを追加したり、発生するエラーが発生するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_Add" name="Add" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value set is not one of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">設定されている値が、 <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Indicates how a source table is mapped to a dataset table.</source>
          <target state="translated">ソース テーブルを dataset テーブルにマップする方法を示します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.IDataAdapter&gt; uses only the mappings for the source table named "Table".</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter&gt;"Table"という名前のソース テーブルのマッピングのみが使用されます&lt;/xref:System.Data.IDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</source>
          <target state="translated">すべてを選択して、データの値を返すステートメントの INSERT、DELETE、および更新する必要がありますは一貫性のある列の名前付けを使用しています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</source>
          <target state="translated">レコードで返される列名は一意である必要があります、同じ名前の列が以前のデータを上書きするそれ以外の場合。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>On &lt;xref:System.Data.IDataAdapter.Update%2A&gt;, only the table mapped to the source table named "Table" will have its changes reconciled.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter.Update%2A&gt;、"Table"という名前のソース テーブルにマップされているテーブルの変更を調整する必要がのみ&lt;/xref:System.Data.IDataAdapter.Update%2A&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A collection that provides the master mapping between the returned records and the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返されたレコードの間でマスター マッピングを提供するコレクションと<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default value is an empty collection.</source>
          <target state="translated">既定値は、空のコレクションです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> named "Table".</source>
          <target state="translated">それぞれの INSERT、UPDATE、または DELETE ステートメントの問い合わせについては、挿入、更新、または削除された、指定した行をそれぞれ<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>から、 <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> "Table"という名前です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>When an application calls the Update method, the &lt;xref:System.Data.IDataAdapter&gt; examines the &lt;xref:System.Data.DataRow.RowState%2A&gt; property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">アプリケーションは、Update メソッドを呼び出すときに、&lt;xref:System.Data.IDataAdapter&gt;を調べ、&lt;xref:System.Data.DataRow.RowState%2A&gt;プロパティ、 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;で構成されているインデックスの順序に基づいて、各行の繰り返し、必要な INSERT、UPDATE、または DELETE ステートメントを実行および&lt;/xref:System.Data.DataRow.RowState%2A&gt;&lt;/xref:System.Data.IDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, Update might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">たとえば、更新が&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;内の行の順序付けのため、INSERT ステートメントとし、もう&amp;1; つの DELETE ステートメントを続けて、DELETE ステートメントを実行可能性があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Be aware that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">これらのステートメントは、バッチ処理としては実行されないことに注意してください。各行が個別に更新されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An application can call the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">アプリケーションが呼び出すことができます、&lt;xref:System.Data.DataSet.GetChanges%2A&gt;メソッドの場合は、一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Dataadapter によるデータ ソースを更新<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method generates an exception.</source>
          <target state="translated">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;メソッドで例外が生成されます&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>However, you can create a &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; or &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; object to automatically generate SQL statements for single-table updates if you set the <ph id="ph1">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">ただし、作成することができます、&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;または&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;設定した場合、SQL ステートメントの&amp;1; つのテーブルの更新プログラムを自動的に生成するオブジェクト、 <ph id="ph1">`SelectCommand`</ph> .NET Framework データ プロバイダーのプロパティ&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</source>
          <target state="translated">次に、設定しない追加の SQL ステートメントは、CommandBuilder によって生成されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">この生成ロジックには、 &lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;に存在するキー列情報が必要です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;メソッドは、更新プログラムを実行する前に最初のマッピングに示されたテーブルから行を取得します&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; then updates the row using the value of the &lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;の値を使用して行を更新、&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;プロパティ&lt;/xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">返されるその他の行は無視されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>After any data is loaded back into the &lt;xref:System.Data.DataSet&gt;, the &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised, allowing the user to inspect the reconciled &lt;xref:System.Data.DataSet&gt; row and any output parameters returned by the command.</source>
          <target state="translated">すべてのデータが読み込まれた後、 &lt;xref:System.Data.DataSet&gt;、&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;イベントを発生すると、ユーザーが、調整を検査できるように&lt;xref:System.Data.DataSet&gt;行とその出力、コマンドによって返されるパラメーター&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; &lt;/xref:System.Data.DataSet&gt; 。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">行が正常に更新される、その行に対する変更が受け入れられます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When using Update, the order of execution is as follows:      1.</source>
          <target state="translated">実行の順序は次のように、更新プログラムを使用する場合: 1。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">内の値、&lt;xref:System.Data.DataRow&gt;パラメーターの値に移動されます&lt;/xref:System.Data.DataRow&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;イベントが発生します&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">コマンドを実行します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is put in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">コマンドに設定されている場合<ph id="ph1">`FirstReturnedRecord`</ph>、最初に返された結果が&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt;に格納し、</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are put in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataRow&gt;。&lt;/xref:System.Data.DataRow&gt;れたりする場合は出力パラメーターがあります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;イベントが発生します&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;呼び出されます。&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Each command associated with the &lt;xref:System.Data.IDataAdapter&gt; usually has a parameter collection associated with it.</source>
          <target state="translated">&lt;xref:System.Data.IDataAdapter&gt;通常はそれに関連付けられているパラメーターのコレクション&lt;/xref:System.Data.IDataAdapter&gt;に関連付けられている各コマンド</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">パラメーターを使用して、現在行にマップされます、<ph id="ph1">`SourceColumn`</ph>と<ph id="ph2">`SourceVersion`</ph>の .NET Framework データ プロバイダーのプロパティ<ph id="ph3">`Parameter`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a &lt;xref:System.Data.DataTable&gt; column that the &lt;xref:System.Data.IDataAdapter&gt; references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>指す、&lt;xref:System.Data.DataTable&gt;列を&lt;xref:System.Data.IDataAdapter&gt;参照を現在の行のパラメーターの値を取得します&lt;/xref:System.Data.IDataAdapter&gt;&lt;/xref:System.Data.DataTable&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph>すべてのテーブル マップを適用する前に、マップされていない列の名前を指します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following &lt;xref:System.Data.MissingMappingAction&gt; values.</source>
          <target state="translated">場合<ph id="ph1">`SourceColumn`</ph>は存在しない列に実行されるアクションは、次のいずれかに依存&lt;xref:System.Data.MissingMappingAction&gt;値&lt;/xref:System.Data.MissingMappingAction&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>|Enumeration Value|Action Taken|   |-----------------------|------------------|   |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|Use the source column names and table names in the &lt;xref:System.Data.DataSet&gt; if no mapping is present.|   |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A &lt;xref:System.SystemException&gt; is generated.</source>
          <target state="translated">|列挙値 |実行されるアクション |  |-----------------------|------------------|  |<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|マッピングが存在しない場合、ソース列の名前とテーブル名を&lt;xref:System.Data.DataSet&gt;に使用します |。  |<ph id="ph2">`MissingMappingAction.Ignore`</ph>|A&lt;xref:System.SystemException&gt;が生成されます&lt;/xref:System.SystemException&gt;&lt;/xref:System.Data.DataSet&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.|   |<ph id="ph1">`MissingMappingAction.Error`</ph>|A &lt;xref:System.SystemException&gt; is generated.|       The <ph id="ph2">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">設定すると、マッピングが明示的に、入力パラメーターは、通常、エラーが原因の不足しているマッピングします |。  |<ph id="ph1">`MissingMappingAction.Error`</ph>|&lt;xref:System.SystemException&gt;が生成されます |。      <ph id="ph2">`SourceColumn`</ph>出力の値をマップするプロパティを使用しても、または入力/出力パラメーターにバックアップ、 <ph id="ph3">`DataSet`</ph>&lt;/xref:System.SystemException&gt; 。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">存在しない列を参照する場合、例外が生成されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the <ph id="ph3">`Original`</ph>, <ph id="ph4">`Current`</ph>, or <ph id="ph5">`Proposed`</ph> version of the column value.</source>
          <target state="translated"><ph id="ph1">`SourceVersion`</ph>の .NET Framework データ プロバイダーのプロパティ<ph id="ph2">`Parameter`</ph>クラスかどうかを使用する、 <ph id="ph3">`Original`</ph>、 <ph id="ph4">`Current`</ph>、または<ph id="ph5">`Proposed`</ph>列の値のバージョン。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含める頻繁に使用します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 行を更新中にエラーが発生した場合、例外がスローされ、更新プログラムの実行は廃止されました。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the &lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt; property to <ph id="ph1">`true`</ph> before calling &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.</source>
          <target state="translated">エラーが発生したときに例外を生成せず、更新操作を続行するには設定、&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;プロパティを<ph id="ph1">`true`</ph> &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;を呼び出す前に&lt;/xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">内の行ごとにエラーに応答することがありますも、 <ph id="ph1">`RowUpdated`</ph> DataAdapter のイベントです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the &lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt; property of the &lt;xref:System.Data.Common.RowUpdatedEventArgs&gt; to &lt;xref:System.Data.UpdateStatus&gt;.</source>
          <target state="translated">内で例外を生成せず、更新操作を続行する、<ph id="ph1">`RowUpdated`</ph>イベント、&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;&lt;xref:System.Data.UpdateStatus&gt;&lt;/xref:System.Data.UpdateStatus&gt;&lt;/xref:System.Data.Common.RowUpdatedEventArgs&gt;のプロパティ&lt;/xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;を設定します。。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to update the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データ ソースを更新するために使用します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The number of rows successfully updated from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">正常に更新された行の数、 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">INSERT、UPDATE、または DELETE ステートメントを実行しようとすると、影響を受けた&amp;0; 個のレコードが発生しました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>