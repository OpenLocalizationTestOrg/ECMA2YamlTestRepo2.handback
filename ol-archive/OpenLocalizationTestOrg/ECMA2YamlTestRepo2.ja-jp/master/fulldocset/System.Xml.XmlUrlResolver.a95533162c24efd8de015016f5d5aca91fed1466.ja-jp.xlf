<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6575fef3945d2c71d8ce5747d792d2a524287c39</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlUrlResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b75540f35c4dcf87a366dec4644487950659476</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a97154ecefd8f34a23c6defbcf1294f1299db18d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Resolves external XML resources named by a Uniform Resource Identifier (URI).</source>
          <target state="translated">によって、Uniform Resource Identifier () をという名前の外部 XML リソースを解決します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XmlUrlResolver is used to resolve external XML resources such as entities, document type definitions (DTDs) or schemas.</source>
          <target state="translated">XmlUrlResolver を使用して、エンティティ、ドキュメント型定義 (Dtd) またはスキーマなどの外部の XML リソースを解決します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It is also used to process include and import elements found in Extensible StyleSheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.</source>
          <target state="translated">使用されてもプロセスを含めるし、拡張スタイル シート言語 (XSL) スタイル シートまたは XML スキーマ定義言語 (XSD) スキーマで検出された要素をインポートします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XmlUrlResolver is the default resolver for all classes in the &lt;xref:System.Xml&gt; namespace.</source>
          <target state="translated">XmlUrlResolver はのすべてのクラスの既定のリゾルバー、&lt;xref:System.Xml&gt;名前空間&lt;/xref:System.Xml&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It supports the <ph id="ph1">`file://`</ph> and <ph id="ph2">`http://`</ph> protocols and requests from the &lt;xref:System.Net.WebRequest&gt; class.</source>
          <target state="translated">これをサポートしている、<ph id="ph1">`file://`</ph>と<ph id="ph2">`http://`</ph>プロトコルおよび&lt;xref:System.Net.WebRequest&gt;クラス&lt;/xref:System.Net.WebRequest&gt;からの要求</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  XmlUrlResolver objects can contain sensitive information such as user credentials.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; XmlUrlResolver オブジェクトは、ユーザーの資格情報などの機密情報を含めることができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should be careful when you cache XmlUrlResolver objects and should not pass XmlUrlResolver objects to an untrusted component.</source>
          <target state="translated">XmlUrlResolver オブジェクトをキャッシュし、信頼できないコンポーネントに XmlUrlResolver オブジェクトを渡す必要がありますいないときに、注意する必要があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Resolving DTDs    If an XML reader (&lt;xref:System.Xml.XmlReader&gt;) is reading an XML file that contains an external DTD, it calls the &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt; method to get a stream representation of the DTD.</source>
          <target state="translated">Dtd 場合、XML リーダーを解決する (&lt;xref:System.Xml.XmlReader&gt;) を外部の DTD を含む XML ファイルの読み取りは、呼び出し、 &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt;DTD のストリームの表現を取得するメソッド&lt;/xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the URI of the DTD is a relative URI, the XML reader calls the &lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt; method and returns an absolute URI for the given <ph id="ph1">`relativeUri`</ph> and <ph id="ph2">`baseURi`</ph> parameters.</source>
          <target state="translated">DTD の URI が相対 URI の場合は、XML リーダーを呼び出して、&lt;xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt;メソッドの絶対 URI を返すと、指定された<ph id="ph1">`relativeUri`</ph>と<ph id="ph2">`baseURi`</ph>パラメーター&lt;/xref:System.Xml.XmlUrlResolver.ResolveUri%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the XmlUrlResolver doesn't know how to resolve the URI, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">返すかどうか、XmlUrlResolver は URI を解決する方法を認識しません、<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt; method uses the information in the &lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt; property as appropriate to gain access to the resource.</source>
          <target state="translated">&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;メソッド内の情報を使用して、&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;リソースにアクセスするために適切なプロパティです&lt;/xref:System.Xml.XmlUrlResolver.Credentials%2A&gt;&lt;/xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There is no <ph id="ph1">`get`</ph> accessor to this property for security reasons.</source>
          <target state="translated">ない<ph id="ph1">`get`</ph>のセキュリティの理由からこのプロパティをアクセサー。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When overwriting &lt;xref:System.Xml.XmlResolver&gt;, <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept> is the method that utilizes the credential information in the <bpt id="p2">**</bpt>Credentials<ept id="p2">**</ept> property.</source>
          <target state="translated">上書きする場合&lt;xref:System.Xml.XmlResolver&gt;、 <bpt id="p1">**</bpt>GetEntity<ept id="p1">**</ept>の資格情報を使用するメソッドは、<bpt id="p2">**</bpt>資格情報<ept id="p2">**</ept>プロパティ&lt;/xref:System.Xml.XmlResolver&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Resolving all other XML resources is very similar to resolving DTDs.</source>
          <target state="translated">その他のすべての XML リソースの解決は、Dtd の解決に非常に似ています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlResolver&gt; negotiates the connection with the external resource and returns a &lt;xref:System.IO.Stream&gt; representation of the content.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver&gt;外部のリソースへの接続をネゴシエートしを返します、 &lt;xref:System.IO.Stream&gt;、内容の表示&lt;/xref:System.IO.Stream&gt;。&lt;/xref:System.Xml.XmlResolver&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The object that is making the call to &lt;xref:System.Xml.XmlResolver&gt; interprets the stream.</source>
          <target state="translated">オブジェクトへの呼び出しを行っている&lt;xref:System.Xml.XmlResolver&gt;ストリームを解釈します&lt;/xref:System.Xml.XmlResolver&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Extending the XmlUrlResolver class    The default behavior of the XmlUrlResolver class is to resolve an XML data resource from its source, not from cache.</source>
          <target state="translated">キャッシュからではなく、そのソースから XML データ リソースを解決するのには、XmlUrlResolver クラス XmlUrlResolver クラスの既定の動作の拡張です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In some cases, resolving a data resource from cache can improve the performance of an application by saving a trip to the data resource's server.</source>
          <target state="translated">場合によっては、キャッシュからのデータ リソースを解決することができますを向上させる、アプリケーションのパフォーマンス データ リソース サーバーへのトリップでします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The performance gains here must be weighed against the need for up-to-date content.</source>
          <target state="translated">このパフォーマンスの向上は、最新のコンテンツの必要性を比較検討する必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example extends XmlUrlResolver and builds a new class, <ph id="ph1">`XmlCachingResolver`</ph>, to retrieve resources from the cache.</source>
          <target state="translated">次の例は、XmlUrlResolver を拡張し、新しいクラスを構築<ph id="ph1">`XmlCachingResolver`</ph>、キャッシュからリソースを取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This is done by overriding the &lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt; property and the &lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">これは、オーバーライドで、&lt;xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt;プロパティおよび&lt;xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XmlCachingResolver_ex#1<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlCachingResolver_ex#1<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs)</ept><ept id="p3">]</ept>       The caching behavior of the <ph id="ph1">`XmlCachingResolver`</ph> class is implemented in the <ph id="ph2">`GetEntity`</ph> method.</source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>XmlCachingResolver_ex&amp;1;<ept id="p2">](~/add/codesnippet/visualbasic/t-system.xml.xmlurlresol_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>XmlCachingResolver_ex&amp;1;<ept id="p4">](~/add/codesnippet/csharp/t-system.xml.xmlurlresol_1.cs)</ept> <ept id="p3">]</ept>のキャッシュ動作、<ph id="ph1">`XmlCachingResolver`</ph>でクラスが実装されている、<ph id="ph2">`GetEntity`</ph>メソッドです。  </target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This is done by creating new &lt;xref:System.Net.WebRequest&gt; and &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; objects.</source>
          <target state="translated">これは、新規に作成するで&lt;xref:System.Net.WebRequest&gt;と&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;オブジェクト&lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt;&lt;/xref:System.Net.WebRequest&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; object is created using the &lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt; member of the &lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt; enumeration.</source>
          <target state="translated">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;を使用してオブジェクトを作成、&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;のメンバー、&lt;xref:System.Net.Cache.HttpRequestCacheLevel&gt;列挙体です&lt;/xref:System.Net.Cache.HttpRequestCacheLevel&gt;&lt;/xref:System.Net.Cache.HttpRequestCacheLevel&gt;&lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.WebRequest.CachePolicy%2A&gt; property of the &lt;xref:System.Net.WebRequest&gt; object is set with the &lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt; object.</source>
          <target state="translated">&lt;xref:System.Net.WebRequest.CachePolicy%2A&gt;のプロパティ、&lt;xref:System.Net.WebRequest&gt;でオブジェクトが設定されている、&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;オブジェクト&lt;/xref:System.Net.Cache.HttpRequestCachePolicy&gt;&lt;/xref:System.Net.WebRequest&gt;&lt;/xref:System.Net.WebRequest.CachePolicy%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An instance of the <ph id="ph1">`XmlCachingResolver`</ph> class is created with the <ph id="ph2">`Boolean``enableHttpCaching`</ph>.</source>
          <target state="translated">インスタンス、<ph id="ph1">`XmlCachingResolver`</ph>でクラスを作成、<ph id="ph2">`Boolean``enableHttpCaching`</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When this value is set to <ph id="ph1">`true`</ph>, the instance resolves a resource from the default cache if possible.</source>
          <target state="translated">この値に設定すると<ph id="ph1">`true`</ph>インスタンスが可能であれば、既定のキャッシュからのリソースを解決します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`enableHttpCaching`</ph> is set to <ph id="ph2">`false`</ph>, the instance uses the default behavior and resolves resources from their source.</source>
          <target state="translated">ときに<ph id="ph1">`enableHttpCaching`</ph>に設定されている<ph id="ph2">`false`</ph>インスタンスが既定の動作を使用し、それらのソースからリソースを解決します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This example leverages the extensibility of the XML classes in the .NET Framework.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; この例は .NET Framework の XML クラスの拡張機能を活用します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Other classes can be extended and customized to suit the needs of a particular application.</source>
          <target state="translated">その他のクラスを拡張し、特定のアプリケーションのニーズに合わせてカスタマイズできます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the cache policy for the underlying &lt;xref:System.Net.WebRequest&gt; object.</source>
          <target state="translated">基になるのキャッシュ ポリシーの設定を取得または&lt;xref:System.Net.WebRequest&gt;オブジェクト&lt;/xref:System.Net.WebRequest&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The cache policy for the underlying web request.</source>
          <target state="translated">基になる web 要求のキャッシュ ポリシー。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sets credentials used to authenticate web requests.</source>
          <target state="translated">Web 要求の認証に使用される資格情報を設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the virtual directory does not require authentication, this property does not need to be set.</source>
          <target state="translated">仮想ディレクトリに認証が必要としない場合このプロパティが設定する必要はありません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Otherwise, the credentials of the user must be supplied.</source>
          <target state="translated">それ以外の場合、ユーザーの資格情報を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can associate different credentials with different URIs and add them to a cache.</source>
          <target state="translated">異なる Uri に別の資格情報を関連付けるでき、それらをキャッシュに追加することができます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can then use the credentials to check authentication for different URIs, regardless of the original source of the XML.</source>
          <target state="translated">資格情報を使用して、XML の送信元に関係なく、別の Uri の認証を確認できます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following C# code shows how to set the Credentials property to a credential cache.</source>
          <target state="translated">次の c# コードでは、資格情報のキャッシュに資格情報のプロパティを設定する方法を示します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
          <target state="translated">Web 要求の認証に使用する資格情報です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>; that is, the <bpt id="p2">&lt;xref uid="langword_csharp_XmlUrlResolver" name="XmlUrlResolver" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has no user credentials.</source>
          <target state="translated">このプロパティが設定されていない場合、既定値<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。 つまり、 <bpt id="p2">&lt;xref uid="langword_csharp_XmlUrlResolver" name="XmlUrlResolver" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>ユーザーの資格情報がありません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Maps a URI to an object that contains the actual resource.</source>
          <target state="translated">URI を実際のリソースを格納しているオブジェクトをマップします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method is used when the caller wants to map a given URI to an object that contains the resource that the URI represents.</source>
          <target state="translated">このメソッドは、呼び出し元が指定した URI を URI を表すリソースを格納しているオブジェクトにマップするときに使用されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For the asynchronous version of this method, see &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;.</source>
          <target state="translated">このメソッドの非同期バージョン、 &lt;xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;。&lt;/xref:System.Xml.XmlUrlResolver.GetEntityAsync%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Your application can mitigate memory denial of service threats to the GetEntity method by implementing IStream&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt; to limit the number of bytes read.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; IStream を実装することによって、アプリケーションがメモリ サービス拒否の脅威 GetEntity メソッドを緩和できます&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;読み取られたバイト数を制限する&lt;/xref:System.Runtime.InteropServices.ComTypes.IStream&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the GetEntity method.</source>
          <target state="translated">これにより、悪意のあるコードがメソッドに渡し、バイト ストリーム、GetEntity しようとする状況を防ぐことができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;。&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;から返された URI</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">使用されていません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">返すオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The current implementation only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">現在の実装のみ返します&lt;xref:System.IO.Stream&gt;オブジェクト&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">ストリーム オブジェクトまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリーム以外の型が指定されている場合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is neither <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nor a <bpt id="p2">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> type.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph>どちらも<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>も<bpt id="p2">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>型です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
          <target state="translated">指定された URI は絶対 URI ではないです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
          <target state="translated">ランタイム エラー (たとえば、中断されたサーバー接続) があります。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
          <target state="translated">URI を実際のリソースを格納しているオブジェクトを非同期的にマップします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The URI returned from &lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlResolver.ResolveUri*&gt;。&lt;/xref:System.Xml.XmlResolver.ResolveUri*&gt;から返された URI</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
          <target state="translated">使用されていません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
          <target state="translated">返すオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The current implementation only returns &lt;xref:System.IO.Stream&gt; objects.</source>
          <target state="translated">現在の実装のみ返します&lt;xref:System.IO.Stream&gt;オブジェクト&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A stream object or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a type other than stream is specified.</source>
          <target state="translated">ストリーム オブジェクトまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリーム以外の型が指定されている場合。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the network proxy for the underlying &lt;xref:System.Net.WebRequest&gt; object.</source>
          <target state="translated">取得または設定、ネットワーク プロキシ、基になる&lt;xref:System.Net.WebRequest&gt;オブジェクト&lt;/xref:System.Net.WebRequest&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.IWebProxy&gt; to use to access the Internet resource.</source>
          <target state="translated">&lt;xref:System.Net.IWebProxy&gt;を使用して、インターネット リソースにアクセスする&lt;/xref:System.Net.IWebProxy&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Resolves the absolute URI from the base and relative URIs.</source>
          <target state="translated">ベース uri と相対 Uri から絶対 URI を解決します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The absolute URI can be used as the base URI for any subsequent requests for entities that are relative to this URI.</source>
          <target state="translated">絶対 URI は、この URI に対する相対されているエンティティの後続の要求のベース URI として使用できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
          <target state="translated">ベース URI は相対 URI の解決に使用されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
          <target state="translated">解決するのには URI です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
          <target state="translated">絶対パスまたは相対 URI でもかまいません。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <ph id="ph1">`baseUri`</ph> value.</source>
          <target state="translated">かどうか絶対で、この値は効果的に置き換え、<ph id="ph1">`baseUri`</ph>値。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <ph id="ph1">`baseUri`</ph> to make an absolute URI.</source>
          <target state="translated">かどうか、相対それを組み合わせて、<ph id="ph1">`baseUri`</ph>絶対 URI を作成します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The absolute URI, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the relative URI cannot be resolved.</source>
          <target state="translated">絶対 URI、または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>相対 URI を解決できない場合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;baseUri&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>