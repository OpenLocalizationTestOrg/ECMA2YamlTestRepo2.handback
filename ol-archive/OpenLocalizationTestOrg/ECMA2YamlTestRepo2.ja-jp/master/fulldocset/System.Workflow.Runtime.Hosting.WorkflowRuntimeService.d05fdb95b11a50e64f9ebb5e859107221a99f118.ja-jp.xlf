<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0ea2cc3d70d31ea2b618485cb1cc69efee45358</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.Hosting.WorkflowRuntimeService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd1c419d4adddd5c8b58d0555bc4c1346bdd3a61</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e866d941252268361f63c1128395e15319ffa83c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">ワークフロー ランタイム エンジンのコア サービスの派生元となる抽象基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       Services that derive from the WorkflowRuntimeService class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>WorkflowRuntimeService クラスから派生したサービスを開始し、ワークフロー ランタイム エンジンによって停止できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">順序、サービスを開始または停止すると、ただしが不確定であると、サービスによって正しくとそれらが開始されると、逆に、必要があります自体を初期化するために他のサービスのサポートが必要と、他のサービスに正しくサポートするためにシャット ダウンは、停止されたときにします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">この問題に対処するには、ワークフロー ランタイム エンジンを開始およびサービスを停止するための&amp;2; フェーズ機構を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called, the workflow runtime engine invokes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for each of its services that derive from the WorkflowRuntimeService class.</source>
          <target state="translated">ときに&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;が呼び出されると、ワークフロー ランタイム エンジン&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;の各 WorkflowRuntimeService クラスから派生したサービスのメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;を呼び出します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>After all of these services have been started, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event, which causes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">これらすべてのサービスの開始後に、ワークフロー ランタイム エンジンを発生させます、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;これにより、イベント、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;ワークフロー ランタイム エンジンのサービスごとに呼び出されるメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Your service can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method to participate in this two phase process.</source>
          <target state="translated">サービスを上書きできます、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;この&amp;2; つの段階のプロセスに参加するメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Similarly, when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event, and the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method provide this two-phase mechanism.</source>
          <target state="translated">同様に、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;が呼び出されると、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;メソッド、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;イベント、および&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;メソッドは、この&amp;2; フェーズ機構を提供します&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The State property contains a &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">State プロパティが含まれています、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;サービスが開始または停止処理を行っていますか、完全に開始または停止しているかどうかを示す値&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Services that derive from the WorkflowRuntimeService class can raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when they encounter a condition that causes an unhandled exception by calling &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;.</source>
          <target state="translated">WorkflowRuntimeService クラスから派生したサービスは、 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;を呼び出すことによってハンドルされない例外の原因となる条件を検出したときにイベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;を発生させることができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Services derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, and the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class ultimately derives from the WorkflowRuntimeService class.</source>
          <target state="translated">この&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;クラスをこの&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;クラス&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;クラス、および&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;クラスは、最終的に WorkflowRuntimeService クラスから派生&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;から派生したサービス</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">派生クラスで実装された場合の新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is initialized to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;に初期化されます。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">派生クラスでオーバーライドされると、ワークフロー ランタイム エンジンが発生したときに呼び出されるメソッドを表す、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Started"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for all of its workflow runtime engine services.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;クラスは、2 フェーズ開始機構を実装、ワークフロー ランタイム エンジンのサービスは、ワークフロー ランタイム エンジンが呼び出された後に、その他のサービスに依存する初期化を行うことがあります、 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;、ワークフロー ランタイム エンジンのサービスのすべてのメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event.</source>
          <target state="translated">後、ワークフロー ランタイム エンジンと呼ばれる、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;を生成、ワークフロー ランタイム エンジンのサービスのすべてのメソッドを&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can override the OnStarted method to provide any final startup functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">サービスが必要、最終的なスタートアップ機能を提供する OnStarted メソッドをオーバーライドすることができる場合、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;イベントが発生します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">サブスクリプションとサブスクリプションからのしくみ、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;イベントは内部で処理されます&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; への呼び出しによって、ワークフロー ランタイム エンジンに、サービスを追加&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;、ワークフロー ランタイム エンジンは既に開始されて、ワークフロー ランタイム エンジンは呼び出します&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;サービスに対して&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in OnStarted from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method.</source>
          <target state="translated">ただし、このような状況では、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;イベントが既に発生した、このため、サービスは、内部から OnStarted で通常実行する任意の初期化を実行する必要があります、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;メソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">テストすることができます&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;、ワークフロー ランタイム エンジンが起動されているかどうかを確認する&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStarted is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;設定されている&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;OnStarted を呼び出す前にします&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The default implementation of OnStarted performs no action.</source>
          <target state="translated">OnStarted の既定の実装には、操作は実行されません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">派生クラスでオーバーライドされると、ワークフロー ランタイム エンジンが発生したときに呼び出されるメソッドを表す、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.Stopped"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;クラスは、ワークフロー ランタイム エンジンのサービスの後に一部の機能が保持できるように、2 フェーズ停止機構を実装、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;で順序が、必要に応じて、サポートされる他のサービスのシャット ダウン メソッドがワークフロー ランタイム エンジンによって呼び出されます&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>After the workflow runtime engine has called the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method of all of its workflow runtime engine services, it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event.</source>
          <target state="translated">ワークフロー ランタイム エンジンがという名前のした、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;を生成、ワークフロー ランタイム エンジンのサービスのすべてのメソッド、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;イベントです&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can override the OnStopped method to provide any final shutdown functionality required by your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">サービスが必要、最終的なシャット ダウン機能を提供する OnStopped メソッドをオーバーライドすることができる場合、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;イベントが発生します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The mechanics of subscribing and unsubscribing from the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is handled internally.</source>
          <target state="translated">サブスクリプションとサブスクリプションからのしくみ、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;イベントは内部で処理されます&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 場合、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;への呼び出しによってワークフロー ランタイム エンジンから削除&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;、ワークフロー ランタイム エンジンの実行中に、ワークフロー ランタイム エンジンを呼び出す&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;サービスに対して&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>However, in this situation, the OnStopped method will not be called for your service.</source>
          <target state="translated">ただし、このような状況で、OnStopped メソッドは、サービスに対しては呼び出されませんするされます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in OnStopped from inside the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method.</source>
          <target state="translated">そのため、サービスは、内部から OnStopped で通常実行する最終的なシャット ダウンを実行する必要があります、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;メソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">テストすることができます&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;をワークフロー ランタイム エンジンが実行されているかどうかを判断します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt; is set to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt; before OnStopped is invoked.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;設定されている&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;OnStopped を呼び出す前にします&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default implementation of OnStopped performs no action.</source>
          <target state="translated">OnStopped の既定の実装には、操作は実行されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">発生させる、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Your service can call RaiseServicesExceptionNotHandledEvent to raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt; event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">サービスは、発生させる RaiseServicesExceptionNotHandledEvent を呼び出すことができます、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;実行中に処理できない例外が発生したときにイベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You should pass the &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">渡す必要があります、&lt;xref:System.Guid&gt;未処理の例外に関連付けられたワークフロー インスタンスの&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, a timer service might pass the &lt;xref:System.Guid&gt; associated with the timer for which the exception occurred.</source>
          <target state="translated">たとえば、タイマー サービス渡し、&lt;xref:System.Guid&gt;例外が発生したタイマーに関連付けられている&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The exception that could not be handled.</source>
          <target state="translated">この例外を処理できませんでした。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">&lt;xref:System.Guid&gt;未処理の例外に関連付けられたワークフロー インスタンスの&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this service.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このサービスを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine sets this property before it calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on the service.</source>
          <target state="translated">呼び出す前に、ワークフロー ランタイム エンジンがこのプロパティを設定&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;サービス&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, starts the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされると、サービスとの変更が開始、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;に<bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Start is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; is called.</source>
          <target state="translated">派生したそのサービスのすべてのワークフロー ランタイム エンジンによって開始が呼び出される、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;クラス&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;と呼びます&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Start is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already started.</source>
          <target state="translated">呼び出しによってワークフロー ランタイム エンジンのサービスがワークフロー ランタイム エンジンに追加されるとに、開始がワークフロー ランタイム エンジンによって呼び出されますも&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;、ワークフロー ランタイム エンジンは既に開始した後&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default implementation of Start tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated">開始の既定の実装では、サービスは開始されており、この情報を使用して、既に実行中に、サービスが開始された場合は、適切な例外をスローするかどうかを追跡します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">このメソッドをオーバーライドすることで、ワークフロー ランタイム エンジンによって開始された、サービスが必要な追加機能を提供できます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls Start on your service.</source>
          <target state="translated">これに関する保証はありません、ワークフロー ランタイム エンジンは、サービスの開始を呼び出したときに存在する場合、サービスが実行されています。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Therefore, in the Start method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">そのため、開始の方法で行う必要がありますのみが他のサービスによって提供される機能に依存しない、初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">これには、スケジューラ サービスなどのコア サービスによって提供される機能が含まれます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt; event after it has called the Start method of all of its workflow runtime engine services.</source>
          <target state="translated">ワークフロー ランタイム エンジンを発生させる、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;ランタイム エンジンのサービスのすべてのワークフローの Start メソッドを呼び出した後のイベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; method in order to perform this initialization when the Start event is raised.</source>
          <target state="translated">サービスでは、すべてのワークフロー ランタイム エンジン サービスが開始された後、追加の初期化が必要とする場合は、上書き、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;開始イベントが発生したときに、この初期化を実行するためにメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your service is added to the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; after the workflow runtime engine has already been started, the workflow runtime engine will call Start on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; への呼び出しによって、ワークフロー ランタイム エンジンに、サービスを追加&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;、ワークフロー ランタイム エンジンが、サービスの開始を呼び出し、ワークフロー ランタイム エンジンが起動された後です&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt; from inside the Start method.</source>
          <target state="translated">ただし、このような状況では、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;イベントが既に発生した、そのため、サービスで通常実行する任意の初期化を実行する必要があります&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;から開始メソッドの内部&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine has been started.</source>
          <target state="translated">テストすることができます&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;、ワークフロー ランタイム エンジンが起動されているかどうかを確認する&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Start should only be called by the workflow runtime engine.</source>
          <target state="translated">開始は、ワークフロー ランタイム エンジンによってのみ呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic)       -or-       The service has already been started.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で) - または - サービスが既に開始されています。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the state of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">状態を取得、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;クラスは両方の開始とワークフロー ランタイム エンジンのサービスの停止の&amp;2; フェーズ機構を実装します&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method for the service.</source>
          <target state="translated">開始機構の最初のフェーズを開始、ワークフロー ランタイム エンジンの実装を呼び出すときに、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;サービスのメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;状態を設定する&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;の基本実装を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event.</source>
          <target state="translated">ワークフロー ランタイム エンジンの開始後にそのすべてのワークフロー ランタイム エンジン サービスを発生させるときに、2 番目のフェーズが発生した、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;内部でこのイベントへのサブスクリプションを管理し、そのハンドラーは&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;状態を設定&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method for the service.</source>
          <target state="translated">ワークフロー ランタイム エンジンの実装を呼び出すときに、ワークフロー ランタイム エンジンのサービスを停止するための&amp;2; フェーズ機構が開始され、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;サービスのメソッド&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method should call the base implementation of &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;, which sets State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;状態を設定する&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;の基本実装を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt; event.</source>
          <target state="translated">そのすべてのワークフロー ランタイム エンジン サービスが停止、した後、ワークフロー ランタイム エンジンを発生させます、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;イベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; internally manages a subscription to this event and its handler will set State to &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;内部でこのイベントへのサブスクリプションを管理し、そのハンドラーは&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;状態を設定&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, stops the service and changes the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; to <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされると、停止、サービスと変更、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt;に<bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*&gt; 。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Stop is invoked by the workflow runtime engine on all of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; is called.</source>
          <target state="translated">停止がから派生したそのサービスのすべてのワークフロー ランタイム エンジンによって呼び出される、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;場合にクラス&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;と呼びます&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Stop is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;.</source>
          <target state="translated">停止は呼び出すことも、ワークフロー ランタイム エンジンによって&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;。&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;への呼び出しによって、ワークフロー ランタイム エンジンからワークフロー ランタイム エンジンのサービスが削除されたときに</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default implementation of Stop tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated">停止の既定の実装では、サービスが開始されたこの情報を使ってが開始される前に、サービスが停止している場合は、適切な例外をスローするかどうかを追跡します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">このメソッドをオーバーライドすることで、ワークフロー ランタイム エンジンによって停止、サービスが必要な追加機能を提供できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>There is no guarantee about which, if any, services will be stopped or running when Stop is called on your service.</source>
          <target state="translated">場合は、いずれかのサービスが、これには、に関する保証はありませんを停止するか、サービスの停止が呼び出されたときに実行します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event after it has called the Stop method of all of its workflow runtime engine services.</source>
          <target state="translated">ワークフロー ランタイム エンジンを発生させる、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;ランタイム エンジンのサービスのワークフローのすべての Stop メソッドを呼び出した後のイベント&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">サービスは、ワークフロー ランタイム エンジンのすべてのサービスの停止メソッドが、ワークフロー ランタイム エンジンによって呼び出されるあるまで、他のサービスをサポートするためにいくつかの残留機能を保持する必要があります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If your service must retain such functionality, you can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method to perform any additional action required to finish stopping your service when the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">オーバーライドすることができる場合は、サービスでは、このような機能を保持する必要があります、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;メソッドをサービスの停止を完了するために必要な追加アクションを実行するときに、&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;イベントが発生します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; is removed from the workflow runtime engine by a call to &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; while the workflow runtime engine is running, the workflow runtime engine will call Stop on your service.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 場合、&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;への呼び出しによってワークフロー ランタイム エンジンから削除&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;、ワークフロー ランタイム エンジンが、サービスの停止を呼び出して、ワークフロー ランタイム エンジンの実行中に&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>However, in this situation, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; method will not be called for your service.</source>
          <target state="translated">ただし、このような状況では、 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;、サービスのメソッドは呼び出されません&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt; from inside the Stop method.</source>
          <target state="translated">そのため、サービスは通常で実行する追加のシャット ダウン機能はすべてを実行する必要があります&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;から停止メソッドの内部&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can test &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to determine whether the workflow runtime engine is running.</source>
          <target state="translated">テストすることができます&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;をワークフロー ランタイム エンジンが実行されているかどうかを判断します&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Stop should only be called by the workflow runtime engine.</source>
          <target state="translated">停止は、ワークフロー ランタイム エンジンによってのみ呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt; is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;null 参照 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic で)。&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The service has not yet been started.</source>
          <target state="translated">または、サービスが開始されていません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>