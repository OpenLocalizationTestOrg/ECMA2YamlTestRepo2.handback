<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c32d0b882a779f931e8bb875e7daf43dfad8da89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlCommandBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30acda7cc6e1c4a1eaf9a7a8ecac573d159e139d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">413c14e9eee4c274b4210d40c34fe1d651ed6509</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Automatically generates single-table commands that are used to reconcile changes made to a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the associated SQL Server database.</source>
          <target state="translated">加えられた変更を調整するために使用される単一テーブル コマンドを自動的に生成、 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SQL Server データベースに関連付けられました。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; does not automatically generate the Transact-SQL statements required to reconcile changes made to a &lt;xref:System.Data.DataSet&gt; with the associated instance of SQL Server.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;に加えられた変更を調整するために必要な TRANSACT-SQL ステートメントを自動的に生成しない、&lt;xref:System.Data.DataSet&gt;関連付けられている SQL Server のインスタンスと&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, you can create a SqlCommandBuilder object to automatically generate Transact-SQL statements for single-table updates if you set the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property of the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">ただし、 &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;のプロパティ&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;を設定した場合、1 つのテーブルの更新プログラム用の TRANSACT-SQL ステートメントを自動的に生成する Sqlcommand オブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Then, any additional Transact-SQL statements that you do not set are generated by the SqlCommandBuilder.</source>
          <target state="translated">次に、追加の Transact SQL ステートメントを設定しないことが、SqlCommandBuilder によって生成されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The SqlCommandBuilder registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events whenever you set the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt; property.</source>
          <target state="translated">SqlCommandBuilder では、自身を登録するためのリスナーとして&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;を設定する場合に、イベント、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;プロパティ&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can only associate one &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; or SqlCommandBuilder object with each other at one time.</source>
          <target state="translated">関連付けることができますのみ&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;または Sqlcommand オブジェクトは、互いに一度に&amp;1; つ&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To generate INSERT, UPDATE, or DELETE statements, the SqlCommandBuilder uses the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; property to retrieve a required set of metadata automatically.</source>
          <target state="translated">INSERT、UPDATE、または DELETE ステートメントを生成する、SqlCommandBuilder を使用して、&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;自動的に必要な一連のメタデータを取得するプロパティ&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you change the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; after the metadata has been retrieved, such as after the first update, you should call the &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; method to update the metadata.</source>
          <target state="translated">変更した場合、&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;呼び出す必要があります最初の更新の後など、メタデータが取得された後、&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;にメタデータを更新する方法&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph>に少なくとも&amp;1; つの主キーまたは一意の列にも返す必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If none are present, an <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept> exception is generated, and the commands are not generated.</source>
          <target state="translated">存在しない場合、 <bpt id="p1">**</bpt>InvalidOperation<ept id="p1">**</ept>例外が生成され、コマンドは生成されません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The SqlCommandBuilder also uses the &lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;, &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; properties referenced by the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.</source>
          <target state="translated">また、SqlCommandBuilder、使用、 &lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;、 &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;、 &lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt; &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;によって参照されるプロパティ&lt;/xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;と&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;&lt;/xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The user should call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if one or more of these properties are modified, or if the &lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt; itself is replaced.</source>
          <target state="translated">ユーザーが呼び出す必要があります&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;1 つ以上のこれらのプロパティを変更すると場合、または、&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;自体は置き換えられます&lt;/xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt; properties retain their previous values.</source>
          <target state="translated">それ以外の場合、 &lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;、 &lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;、および&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;プロパティは、前回の値を保持します&lt;/xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;, the SqlCommandBuilder is disassociated from the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;, and the generated commands are no longer used.</source>
          <target state="translated">呼び出す場合&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;から、SqlCommandBuilder の関連付けが解除され、 &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;、され、生成されたコマンドは使用されなく&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the associated <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、関連付けられているクラス<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;自体のリスナーとして登録&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;によって生成されるイベント、&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;このプロパティで指定します&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">新しいインスタンスを作成する場合&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;、既存&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;これに関連付けられている&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;を解放します&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名前、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sets or gets the <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for an instance of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>のインスタンスの<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.Common.CatalogLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Sets or gets a string used as the catalog separator for an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">インスタンスのカタログの区切り記号として使用する文字列を取得または設定、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that indicates the catalog separator for use with an instance of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">インスタンスで使用するカタログの区切り記号を示す文字列、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommandBuilder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトをどの TRANSACT-SQL ステートメントが自動的に生成します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; registers itself as a listener for &lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt; events that are generated by the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; specified in this property.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;自体のリスナーとして登録&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;によって生成されるイベント、&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;このプロパティで指定します&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;&lt;/xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you create a new instance of &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;, any existing &lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt; associated with this &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt; is released.</source>
          <target state="translated">新しいインスタンスを作成する場合&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;、既存&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;これに関連付けられている&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;を解放します&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Retrieves parameter information from the stored procedure specified in the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and populates the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定されたストアド プロシージャからパラメーター情報を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>取り込んで、&lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;の指定されたコレクション<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DeriveParameters`</ph> overwrites any existing parameter information for the <ph id="ph2">`SqlDbCommand`</ph>.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>既存のパラメーター情報を上書き、<ph id="ph2">`SqlDbCommand`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DeriveParameters`</ph> requires an additional call to the database to obtain the information.</source>
          <target state="translated"><ph id="ph1">`DeriveParameters`</ph>情報を取得するデータベースに追加の呼び出しが必要です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</source>
          <target state="translated">パラメーター情報が事前にわかっている場合は、情報を明示的に設定して、パラメーター コレクションを設定する方が効率的です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can only use <ph id="ph1">`DeriveParameters`</ph> with stored procedures.</source>
          <target state="translated">使用できるだけ<ph id="ph1">`DeriveParameters`</ph>ストアド プロシージャを使用します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> with extended stored procedures.</source>
          <target state="translated">使用することはできません<ph id="ph1">`DeriveParameters`</ph>拡張ストアド プロシージャでします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`DeriveParameters`</ph> to populate the &lt;xref:System.Data.SqlClient.SqlParameterCollection&gt; with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</source>
          <target state="translated">使用することはできません<ph id="ph1">`DeriveParameters`</ph>を設定する、&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;パラメーター化された SELECT ステートメントなど、任意の TRANSACT-SQL ステートメントを使用します&lt;/xref:System.Data.SqlClient.SqlParameterCollection&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>構成パラメーターとパラメーターのデータ型<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> referencing the stored procedure from which the parameter information is to be derived.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が、パラメーター情報の派生元となるストアド プロシージャを参照します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The derived parameters are added to the &lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; collection of the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生パラメーターに追加されます、&lt;xref:System.Data.SqlClient.SqlCommand.Parameters*&gt;のコレクション、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Data.SqlClient.SqlCommand.Parameters*&gt; 。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The command text is not a valid stored procedure name.</source>
          <target state="translated">コマンド テキストは、有効なストアド プロシージャ名ではありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト、データベースの削除を実行するために必要です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An application can use the GetDeleteCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションは、返すために、情報やトラブルシューティングのための GetDeleteCommand メソッドを使用できます、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also use GetDeleteCommand as the basis of a modified command.</source>
          <target state="translated">また、変更されたコマンドの基礎として GetDeleteCommand を使用することができます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, you might call GetDeleteCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、可能性があります GetDeleteCommand を呼び出し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetDeleteCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、GetDeleteCommand が使用される情報を前のステートメントは、正しくない可能性があります。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetDeleteCommand.</source>
          <target state="translated">SQL ステートメントは、アプリケーションがいずれかの&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または GetDeleteCommand&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform deletions.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>削除を実行するために必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>削除を実行するデータベースで必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;メソッド情報やトラブルシューティングの目的を返すので、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">使用することも&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;変更されたコマンドの基礎として&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、呼び出すことができます&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After the SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;正しくない可能性があります、前のステートメントからの情報が使用される&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;.</source>
          <target state="translated">SQL ステートメントは、アプリケーションがいずれか&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;を代わりに、列名に基づいたパラメーターを生成します&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">これが成功したら、次の条件を満たしている場合のみ: -&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すし、ではありません、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションが指定されており、その長さが同じかまたは生成されたパラメーター名よりも大きい&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成されたパラメーターの名前で指定した条件を満たしている、&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;正規表現のコレクション&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションを指定します&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、可能な場合は、列名を一致するパラメーター名を生成します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、生成<ph id="ph1">@p1</ph>、<ph id="ph2">@p2</ph>のようにします。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform deletions.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>削除を実行する必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データベースでの挿入を実行するために必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An application can use the GetInsertCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションは、返すために、情報やトラブルシューティングのための GetInsertCommand メソッドを使用できます、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can also use GetInsertCommand as the basis of a modified command.</source>
          <target state="translated">また、変更されたコマンドの基礎として GetInsertCommand を使用することができます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For example, you might call GetInsertCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、可能性があります GetInsertCommand を呼び出し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetInsertCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、GetInsertCommand が使用される情報を前のステートメントは、正しくない可能性があります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetInsertCommand.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または GetInsertCommand&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform insertions.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>挿入を実行するために必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>挿入を実行するデータベースで必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;メソッド情報やトラブルシューティングの目的を返すので、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">使用することも&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;変更されたコマンドの基礎として&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、呼び出すことができます&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;正しくない可能性があります、前のステートメントからの情報が使用される&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれか&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;を代わりに、列名に基づいたパラメーターを生成します&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">これが成功したら、次の条件を満たしている場合のみ: -&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すし、ではありません、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションが指定されており、その長さが同じかまたは生成されたパラメーター名よりも大きい&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成されたパラメーターの名前で指定した条件を満たしている、&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;正規表現のコレクション&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションを指定します&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、可能な場合は、列名を一致するパラメーター名を生成します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、生成<ph id="ph1">@p1</ph>、<ph id="ph2">@p2</ph>のようにします。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform insertions.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>挿入を実行する必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト、データベースに対する更新を実行するために必要です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An application can use the GetUpdateCommand method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションは、返すために、情報やトラブルシューティングのための GetUpdateCommand メソッドを使用できます、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can also use GetUpdateCommand as the basis of a modified command.</source>
          <target state="translated">また、変更されたコマンドの基礎として GetUpdateCommand を使用することができます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, you might call GetUpdateCommand and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、可能性があります GetUpdateCommand を呼び出し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Otherwise, the GetUpdateCommand will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、GetUpdateCommand が使用される情報を前のステートメントは、正しくない可能性があります。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or GetUpdateCommand.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれかの&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または GetUpdateCommand&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is required to perform updates.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>更新を実行する必要なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates on the database.</source>
          <target state="translated">自動的に生成された取得<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト、データベースに対する更新を実行するために必要です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An application can use the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; method for informational or troubleshooting purposes because it returns the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;メソッド情報やトラブルシューティングの目的を返すので、&lt;xref:System.Data.SqlClient.SqlCommand&gt;を実行するオブジェクト&lt;/xref:System.Data.SqlClient.SqlCommand&gt;&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You can also use &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; as the basis of a modified command.</source>
          <target state="translated">使用することも&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;変更されたコマンドの基礎として&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, you might call &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; and modify the &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt; value, and then explicitly set that on the &lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;.</source>
          <target state="translated">たとえば、呼び出すことができます&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;し&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;値、および&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;。&lt;/xref:System.Data.SqlClient.SqlDataAdapter&gt;ことを明示的に設定&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;を変更&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>After the Transact-SQL statement is first generated, the application must explicitly call &lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt; if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります: TRANSACT-SQL ステートメントを生成後&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;任意の方法で、ステートメントが変更された場合&lt;/xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;正しくない可能性があります、前のステートメントからの情報が使用される&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The Transact-SQL statements are first generated when the application calls either &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; or &lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、アプリケーションがいずれか&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;または&lt;xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter lets you force the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt; to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターさせることができます、&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;を代わりに、列名に基づいたパラメーターを生成します&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This succeeds only if the following conditions are met:      -   The &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">これが成功したら、次の条件を満たしている場合のみ: -&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すし、ではありません、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションが指定されており、その長さが同じかまたは生成されたパラメーター名よりも大きい&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-   The generated parameter name meets the criteria specified in the &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection regular expression.</source>
          <target state="translated">-生成されたパラメーターの名前で指定した条件を満たしている、&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;正規表現のコレクション&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   A &lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt; returned from the <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept> method call and found in the &lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt; collection is specified.</source>
          <target state="translated">A&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;から返される、 <bpt id="p1">**</bpt>GetSchema<ept id="p1">**</ept>メソッドを呼び出すしで見つかった、&lt;xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;コレクションを指定します&lt;/xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation&gt;&lt;/xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Commandbuilder でのコマンドを生成する<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate parameter names matching column names if possible.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、可能な場合は、列名を一致するパラメーター名を生成します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generate <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、生成<ph id="ph1">@p1</ph>、<ph id="ph2">@p2</ph>のようにします。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The automatically generated <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object required to perform updates.</source>
          <target state="translated">自動的に生成された<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトの更新を実行するために必要です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</source>
          <target state="translated">正しいカタログ ケースで囲まれていない識別子、指定したを返します、正しい形式の id を引用符で囲まれました。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This includes correctly escaping any embedded quotes in the identifier.</source>
          <target state="translated">これには、識別子に埋め込まれた引用符は、正しくエスケープが含まれます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The original unquoted identifier.</source>
          <target state="translated">元の囲まれていない識別子です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The quoted version of the identifier.</source>
          <target state="translated">引用符で囲まれた識別子のバージョンです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Embedded quotes within the identifier are correctly escaped.</source>
          <target state="translated">Id 内に埋め込まれた引用符は、正しくエスケープします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the starting character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">取得または開始文字以上のテーブルまたは名前にスペースまたは予約済みトークンなどの文字を含む列などの SQL Server データベース オブジェクトを指定するときに使用する文字を設定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The starting character or characters to use.</source>
          <target state="translated">開始する文字または文字列を使用します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">既定では、空の文字列です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an INSERT, UPDATE, or DELETE command has been generated.</source>
          <target state="translated">このプロパティは、INSERT、UPDATE、後に変更することはできませんまたは DELETE コマンドが生成されました。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the ending character or characters to use when specifying SQL Server database objects, such as tables or columns, whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">取得または終了文字以上のテーブルまたは名前にスペースまたは予約済みトークンなどの文字を含む列などの SQL Server データベース オブジェクトを指定するときに使用する文字を設定します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The ending character or characters to use.</source>
          <target state="translated">最後の文字またはを使用する文字列。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
          <target state="translated">既定では、空の文字列です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">Insert、update、または delete コマンドが生成された後に、このプロパティを変更できません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">取得またはスキーマ識別子とその他の id の間の区切り記号に使用する文字を設定します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Generally, database servers indicate the schema for a identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">一般に、データベース サーバーは、いくつかの文字を持つ id からスキーマ名を区切ることによって、識別子のスキーマを示します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For example, SQL Server uses a period, creating complete identifiers such as Person.CustomerName, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">たとえば、SQL Server はピリオド、Person.CustomerName、"Person"、スキーマ名があり、識別子は、"CustomerName"などの完全な識別子を作成します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Setting this property lets developers modify this behavior.</source>
          <target state="translated">このプロパティの設定には、開発者はこの動作を変更することができます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">スキーマの区切り記号として使用する文字。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier.</source>
          <target state="translated">引用符で囲まれた識別子では、指定した識別子の正しい引用符なしの形式を返します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This includes correctly unescaping any embedded quotes in the identifier.</source>
          <target state="translated">これには、識別子に埋め込まれた引用符を正しくエスケープ解除が含まれます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">埋め込まれた引用符が削除される id。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The unquoted identifier, with embedded quotes properly unescaped.</source>
          <target state="translated">正しくエスケープ解除された埋め込み文字を引用符で囲まれていない識別子です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>