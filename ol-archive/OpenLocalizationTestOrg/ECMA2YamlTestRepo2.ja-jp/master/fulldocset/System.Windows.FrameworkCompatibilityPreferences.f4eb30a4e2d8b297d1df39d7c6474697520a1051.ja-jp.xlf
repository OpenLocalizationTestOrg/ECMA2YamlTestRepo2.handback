<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">412736014778d2c44ba0cec84e68a1d372c02b49</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.FrameworkCompatibilityPreferences.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c681fb2bb3793dd64bca0bb43dd25d545992843</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b3a71dd4446af913963c9935916028d1cac3949</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</source>
          <target state="translated">PresentationFramework アセンブリ内にある WPF 機能に関連して、アプリケーションの動作方法を指定するプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the application should use the &lt;xref:System.Windows.SystemColors.InactiveSelectionHighlightBrush<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush<ept id="p1">*</ept>&gt; properties for the colors of inactive selected items.</source>
          <target state="translated">取得またはアプリケーションで使用するかどうかを示す値を設定、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; 非アクティブな選択した項目の色のプロパティです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The default value of this property depends which version of WPF that your app targets.</source>
          <target state="translated">このプロパティの既定値には、WPF のバージョンが依存していること、アプリケーションが対象です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If your app targets WPF 4.0 or earlier, the default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">アプリケーションが対象 WPF 4.0 または既定値は、以前に場合<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your app targets WPF 4.5, the default is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">アプリでは、WPF 4.5 をターゲットとする場合、既定は<ph id="ph1">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</source>
          <target state="translated">WPF の動作を変更するこのプロパティを使用する場合は、アプリケーションから継承するクラスのコンス トラクターでこのようなアプリの有効期間の初期段階で、プロパティの値を変更する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>After the value is read, you cannot change it again.</source>
          <target state="translated">値が読み取られた後にもう一度変更することはできません。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application should use the &lt;xref:System.Windows.SystemColors.InactiveSelectionHighlightBrush<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush<ept id="p2">*</ept>&gt; properties for the colors of inactive selected items; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アプリケーションが使用する場合、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; 非アクティブな選択した項目の色のプロパティをそれ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a data-bound <bpt id="p1">&lt;xref href="System.Windows.Controls.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should display a string that is identical to the value of the source its &lt;xref:System.Windows.Controls.TextBox.Text*&gt; property</source>
          <target state="translated">取得または設定を示す値、データにバインドされたかどうか<bpt id="p1">&lt;xref href="System.Windows.Controls.TextBox"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ソースの値と同一である文字列にその&lt;xref:System.Windows.Controls.TextBox.Text*&gt;プロパティ&lt;/xref:System.Windows.Controls.TextBox.Text*&gt;を表示する必要があります</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The default value of this property depends which version of WPF that your app targets.</source>
          <target state="translated">このプロパティの既定値には、WPF のバージョンが依存していること、アプリケーションが対象です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If your app targets WPF 4.0 or earlier, the default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">アプリケーションが対象 WPF 4.0 または既定値は、以前に場合<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your app targets WPF 4.5, the default is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">アプリでは、WPF 4.5 をターゲットとする場合、既定は<ph id="ph1">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</source>
          <target state="translated">WPF の動作を変更するこのプロパティを使用する場合は、アプリケーションから継承するクラスのコンス トラクターでこのようなアプリの有効期間の初期段階で、プロパティの値を変更する必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>After the value is read, you cannot change it again.</source>
          <target state="translated">値が読み取られた後にもう一度変更することはできません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a data-bound <bpt id="p2">&lt;xref href="System.Windows.Controls.TextBox"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should display a string that is identical to the value of the source its &lt;xref:System.Windows.Controls.TextBox.Text*&gt; property; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、データにバインドされた<bpt id="p2">&lt;xref href="System.Windows.Controls.TextBox"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ソースの値と同一である文字列を表示する必要があります、&lt;xref:System.Windows.Controls.TextBox.Text*&gt;プロパティ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>&lt;/xref:System.Windows.Controls.TextBox.Text*&gt; 。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a failed copy or cut operation in a <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.TextBoxBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance results in a <bpt id="p2">&lt;xref href="System.Runtime.InteropServices.ExternalException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定を示す値を取得または失敗したコピーまたは切り取り操作であるかどうか、 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.TextBoxBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で結果をインスタンス化、 <bpt id="p2">&lt;xref href="System.Runtime.InteropServices.ExternalException"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If a clipboard operation fails, such as with a <bpt id="p1">**</bpt>HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)<ept id="p1">**</ept> error, a corresponding &lt;xref:System.Runtime.InteropServices.ExternalException&gt; (which is a type of ExternalException) is thrown.</source>
          <target state="translated">クリップボードの操作が失敗した場合などの<bpt id="p1">**</bpt>HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)<ept id="p1">**</ept> 、対応するエラー &lt;xref:System.Runtime.InteropServices.ExternalException&gt;(ExternalException の型です) がスローされます&lt;/xref:System.Runtime.InteropServices.ExternalException&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Because the Win32 <ph id="ph1">`OpenClipboard`</ph> API acts globally, well-written applications should call the corresponding <ph id="ph2">`CloseClipboard`</ph> API as soon as they have completed their clipboard operations.</source>
          <target state="translated">Win32 <ph id="ph1">`OpenClipboard`</ph> API は機能し、グローバルに適切に記述されたアプリケーション呼び出す必要があります、対応する<ph id="ph2">`CloseClipboard`</ph>API、クリップボード操作が完了するとすぐにします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Otherwise, other applications running in the same session will be unable to access clipboard functions.</source>
          <target state="translated">それ以外の場合、他のアプリケーションが、同じセッションで実行することはできませんクリップボード機能へのアクセスします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In WPF, such a denial of access to the clipboard is normally ignored silently.</source>
          <target state="translated">WPF では、このようなクリップボードへのアクセスの拒否はサイレント モードで無視通常されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, applications can opt to receive an <ph id="ph1">`ExternalException`</ph> upon failure by setting the ShouldThrowOnCopyOrCutFailure flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">ただし、アプリケーションこともできますが、 <ph id="ph1">`ExternalException`</ph> ShouldThrowOnCopyOrCutFailure フラグ設定して障害発生時に<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, opting to receive exceptions also requires the application to handle &lt;xref:System.Windows.Input.ApplicationCommands.Cut%2A&gt; and &lt;xref:System.Windows.Input.ApplicationCommands.Copy%2A&gt; RoutedUICommands through a &lt;xref:System.Windows.Input.CommandBinding&gt;, and then apply that binding to all TextBoxBase controls (&lt;xref:System.Windows.Controls.TextBox&gt; and &lt;xref:System.Windows.Controls.RichTextBox&gt;)  in the application.</source>
          <target state="translated">ただし、例外を受信することも必要です、アプリケーションで処理する&lt;xref:System.Windows.Input.ApplicationCommands.Cut%2A&gt;と&lt;xref:System.Windows.Input.ApplicationCommands.Copy%2A&gt;を通じて RoutedUICommands、 &lt;xref:System.Windows.Input.CommandBinding&gt;、TextBoxBase、すべてのコントロールに適用し、バインディングを (&lt;xref:System.Windows.Controls.TextBox&gt;と&lt;xref:System.Windows.Controls.RichTextBox&gt;) アプリケーションにします&lt;/xref:System.Windows.Controls.RichTextBox&gt;&lt;/xref:System.Windows.Controls.TextBox&gt;&lt;/xref:System.Windows.Input.CommandBinding&gt;&lt;/xref:System.Windows.Input.ApplicationCommands.Copy%2A&gt;&lt;/xref:System.Windows.Input.ApplicationCommands.Cut%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding's Executed handler.</source>
          <target state="translated">アプリケーションは、ExternalExceptions CommandBinding の Executed ハンドラーで、コピーと切り取り操作の結果を処理することを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a failed copy or cut operation in a <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.TextBoxBase"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance results in a <bpt id="p3">&lt;xref href="System.Runtime.InteropServices.ExternalException"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>失敗したコピーまたは切り取り操作の場合、 <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.TextBoxBase"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>で結果をインスタンス化、 <bpt id="p3">&lt;xref href="System.Runtime.InteropServices.ExternalException"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>