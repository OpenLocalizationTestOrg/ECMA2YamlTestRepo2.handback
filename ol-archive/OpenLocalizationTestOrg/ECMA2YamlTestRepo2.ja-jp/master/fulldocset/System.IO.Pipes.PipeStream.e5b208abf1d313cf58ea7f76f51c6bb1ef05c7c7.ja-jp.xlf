<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">567206194fcc78b2af7295b70140ef3a4b3cf108</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Pipes.PipeStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">709659ba2ed4177ed78abeec01d43d1a8b2fd08d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5dacffe4b1ddf3b42059c0b63d46919a756967b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes a &lt;xref:System.IO.Stream&gt; object around a pipe, which supports both anonymous and named pipes.</source>
          <target state="translated">公開、&lt;xref:System.IO.Stream&gt;両方匿名パイプと名前付きパイプをサポートする、パイプの周囲のオブジェクト&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The PipeStream class provides the base class for named and anonymous pipes operations in the .NET Framework.</source>
          <target state="translated">PipeStream クラスは、.NET Framework で、匿名の名前付きパイプ操作の基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.NamedPipeServerStream&gt; and &lt;xref:System.IO.Pipes.NamedPipeClientStream&gt; classes for named pipe operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.NamedPipeServerStream&gt;と&lt;xref:System.IO.Pipes.NamedPipeClientStream&gt;名前付きパイプ操作のためのクラス&lt;/xref:System.IO.Pipes.NamedPipeClientStream&gt;&lt;/xref:System.IO.Pipes.NamedPipeServerStream&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt; and &lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt; classes for anonymous pipe operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;と&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;匿名パイプ操作のためのクラス&lt;/xref:System.IO.Pipes.AnonymousPipeClientStream&gt;&lt;/xref:System.IO.Pipes.AnonymousPipeServerStream&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about pipes, see <bpt id="p1">[</bpt>Pipes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">パイプの詳細については、次を参照してください。<bpt id="p1">[</bpt>パイプ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an example of anonymous pipes, see <bpt id="p1">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">匿名パイプの例は、次を参照してください。<bpt id="p1">[</bpt>する方法: ローカルのプロセス間通信に使用する匿名パイプ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For an example of named pipes, see <bpt id="p1">[</bpt>How to: Use Named Pipes for Network Interprocess Communication<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">名前付きパイプの例は、次を参照してください。<bpt id="p1">[</bpt>する方法: ネットワーク プロセス間通信に使用する名前付きパイプ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> value and buffer size.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>値とバッファー サイズ。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This constructor uses a pipe transmission mode of &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;.</source>
          <target state="translated">このコンス トラクターが&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;。&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;パイプ送信モードを使用します</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates the direction of the pipe object.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パイプ オブジェクトの方向を示す値。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than or equal to 0 that indicates the buffer size.</source>
          <target state="translated">正&lt;xref:System.Int32&gt;バッファー サイズを示す 0 以上の値&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>有効ではありません<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and buffer size.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 <bpt id="p3">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、およびバッファー サイズ。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates the direction of the pipe object.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パイプ オブジェクトの方向を示す値。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates the transmission mode of the pipe object.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>パイプ オブジェクトの転送モードを示す値。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than or equal to 0 that indicates the buffer size.</source>
          <target state="translated">正&lt;xref:System.Int32&gt;バッファー サイズを示す 0 以上の値&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph>有効ではありません<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeDirection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;transmissionMode&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;transmissionMode&lt;/code&gt;</ph>が無効です<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">非同期の読み取り操作を開始します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Pass the returned &lt;xref:System.IAsyncResult&gt; object to the &lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt; method to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">返された渡す&lt;xref:System.IAsyncResult&gt;オブジェクトを&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;読み取られたバイト数を決定しの読み取りに使用されているオペレーティング システム リソースを解放するメソッド&lt;/xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt; must be called once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;beginread 呼び出しごとに&amp;1; 回呼び出す必要があります。&lt;/xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This can be done either in the same code that called BeginRead or in a callback that is passed to BeginRead.</source>
          <target state="translated">これは、BeginRead を呼び出した同じコードまたは BeginRead に渡されたコールバックでは実行できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports read operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる読み取り操作&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the pipe is closed or an invalid argument is passed to BeginRead, the appropriate exceptions are raised immediately.</source>
          <target state="translated">パイプは閉じて BeginRead に無効な引数が渡される場合、適切な例外が直ちに発生します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">非同期要求を読み取り中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The exceptions are raised when the code calls the &lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt; method.</source>
          <target state="translated">コードを呼び出すときに例外が発生した、&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;メソッド&lt;/xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The buffer to read data into.</source>
          <target state="translated">データを読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin reading.</source>
          <target state="translated">内のバイト オフセット<ph id="ph1">`buffer`</ph>読み取りを開始する位置。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取るバイトの最大数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The method to call when the asynchronous read operation is completed.</source>
          <target state="translated">非同期の読み取り操作したときに呼び出すメソッドが完了するとします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">この特定の非同期読み取り要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that references the asynchronous read.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;読み取り、非同期参照するオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>使用できるバイト数よりも大きい<ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The pipe does not support read operations.</source>
          <target state="translated">パイプでは、読み取り操作はサポートしません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt; must be called once for every call to BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;BeginWrite を呼び出すたびに&amp;1; 回呼び出す必要があります。&lt;/xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This can be done either in the same code that called BeginWrite or in a callback that is passed to BeginWrite.</source>
          <target state="translated">これは、BeginWrite を呼び出した同じコードまたは BeginWrite に渡されたコールバックでは実行できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports write operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる書き込み操作です&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If the pipe is closed or an invalid argument is passed to BeginWrite, the appropriate exceptions are raised immediately.</source>
          <target state="translated">パイプは閉じて BeginWrite に無効な引数が渡される場合、適切な例外が直ちに発生します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">非同期書き込み要求中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The exceptions are raised when the code calls the  &lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt; method.</source>
          <target state="translated">コードを呼び出すときに例外が発生した、&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;メソッド&lt;/xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The buffer that contains the data to write to the current stream.</source>
          <target state="translated">現在のストリームに書き込むデータを格納しているバッファー。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">内の&amp;0; から始まるバイト オフセット<ph id="ph1">`buffer`</ph>現在のストリームにバイトのコピーを開始する位置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込むバイトの最大数。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The method to call when the asynchronous write operation is completed.</source>
          <target state="translated">非同期の書き込み操作が完了したときに呼び出すメソッド。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">この特定の非同期書き込み要求を他の要求と区別するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that references the asynchronous write operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期の書き込み操作を参照するオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>使用できるバイト数よりも大きい<ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The pipe does not support write operations.</source>
          <target state="translated">パイプは書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports read operations.</source>
          <target state="translated">現在のストリームが読み取り操作をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.IO.Pipes.PipeStream&gt; object is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合、&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトが閉じられると、このプロパティを返します<ph id="ph1">`false`</ph>&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports read operations; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリームをサポートしている場合は、読み取り操作です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seek operations.</source>
          <target state="translated">シーク操作を現在のストリームをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.IO.Pipes.PipeStream&gt; object is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合、&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトが閉じられると、このプロパティを返します<ph id="ph1">`false`</ph>&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>すべての場合。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports write operations.</source>
          <target state="translated">現在のストリームが書き込み操作をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.IO.Pipes.PipeStream&gt; object is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">場合、&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトが閉じられると、このプロパティを返します<ph id="ph1">`false`</ph>&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports write operations; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ストリームが書き込み操作をサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Verifies that the pipe is in a proper state for getting or setting properties.</source>
          <target state="translated">パイプが取得または設定のプロパティに対して適切な状態であることを確認します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Verifies that the pipe is in a connected state for read operations.</source>
          <target state="translated">パイプが読み取り操作に対して接続状態であることを確認します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Verifies that the pipe is in a connected state for write operations.</source>
          <target state="translated">パイプが書き込み操作に対して接続状態であることを確認します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスし、必要に応じてマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;保護された Dispose メソッドを呼び出し、<ph id="ph1">`disposing`</ph>パラメーターに設定<ph id="ph2">`true`</ph>です。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;Dispose を呼び出す<ph id="ph1">`disposing`</ph>'éý'<ph id="ph2">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>When the disposing parameter is <ph id="ph1">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.Pipes.PipeStream&gt; object references.</source>
          <target state="translated">Disposing パラメーターがの場合<ph id="ph1">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクト参照。&lt;/xref:System.IO.Pipes.PipeStream&gt; 。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This method invokes the Dispose method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの Dispose メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Ends a pending asynchronous read request.</source>
          <target state="translated">保留中の非同期読み込み要求を終了します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes read into the byte array specified by the earlier call to &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;以前の呼び出しによって指定されたバイト配列に読み取ったバイト数</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Pass the returned &lt;xref:System.IAsyncResult&gt; object to the EndRead method to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">返された渡す&lt;xref:System.IAsyncResult&gt;EndRead メソッドを読み取られたバイト数を確認しの読み取りに使用するオペレーティング システム リソースを解放するオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>EndRead must be called once for every call to &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;.</source>
          <target state="translated">EndRead は&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;呼び出しごとに&amp;1; 回呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This can be done either in the same code that called &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt; or in a callback that is passed to &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;.</source>
          <target state="translated">これ行う&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;または&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;に渡されるコールバック&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;を呼び出した同じコードのいずれか</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports read operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる読み取り操作&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the pipe is closed or an invalid argument is passed to &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;, the appropriate exceptions are raised immediately.</source>
          <target state="translated">パイプが閉じられたか、無効な引数が渡されました&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;、すぐに、適切な例外が生成されます&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous read request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">非同期要求を読み取り中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The exceptions are raised when the code calls the EndRead method.</source>
          <target state="translated">例外は、コードが EndRead メソッドを呼び出すときに発生します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request.</source>
          <target state="translated">保留中の非同期要求への参照。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The number of bytes that were read.</source>
          <target state="translated">読み取られたバイト数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A return value of 0 indicates the end of the stream (the pipe has been closed).</source>
          <target state="translated">戻り値は 0 では、(パイプが閉じられました) ストリームの末尾を示します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> did not originate from a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead*&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>取得されませんでした、<ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginRead*&gt;</ph>メソッドを現在のストリーム。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">ストリームが閉じているか、内部エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Ends a pending asynchronous write request.</source>
          <target state="translated">保留中の非同期書き込み要求を終了します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>EndWrite must be called once for every call to &lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;.</source>
          <target state="translated">EndWrite は&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;呼び出しごとに&amp;1; 回呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This can be done either in the same code that called &lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt; or in a callback that is passed to &lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;.</source>
          <target state="translated">これ行う&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;または&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;に渡されるコールバック&lt;/xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;を呼び出した同じコードのいずれか</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports write operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる書き込み操作です&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If the pipe is closed or an invalid argument is passed to &lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;, the appropriate exceptions are raised immediately.</source>
          <target state="translated">パイプが閉じられたか、無効な引数が渡されました&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;、すぐに、適切な例外が生成されます&lt;/xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Errors that occur during an asynchronous write request occur on the thread pool thread that is performing the request.</source>
          <target state="translated">非同期書き込み要求中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The exceptions are raised when the code the calls EndWrite method.</source>
          <target state="translated">例外が発生したときに、コード呼び出し EndWrite メソッドです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request.</source>
          <target state="translated">保留中の非同期要求への参照。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> did not originate from a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite*&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>取得されませんでした、<ph id="ph2">&lt;xref:System.IO.Pipes.PipeStream.BeginWrite*&gt;</ph>メソッドを現在のストリーム。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">ストリームが閉じているか、内部エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Clears the buffer for the current stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">現在のストリームのバッファーをクリアし、基になるデバイスに書き込まれるバッファー内のデータします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The Flush method is not supported in the &lt;xref:System.IO.Pipes.PipeStream&gt; class and does nothing when it is called.</source>
          <target state="translated">Flush メソッドはサポートされていません、&lt;xref:System.IO.Pipes.PipeStream&gt;クラスと呼び出された場合に何もしません&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The pipe does not support write operations.</source>
          <target state="translated">パイプは書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that encapsulates the access control list (ACL) entries for the pipe described by the current <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在が示すパイプのアクセス制御リスト (ACL) エントリをカプセル化するオブジェクト<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</source>
          <target state="translated">アクセス制御リスト (ACL) は、個人やグループがある、またはなくても、指定されたファイルの特定のアクションを実行する権限について説明します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 追加または削除するアクセス制御リスト エントリ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that encapsulates the access control list (ACL) entries for the pipe described by the current <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在が示すパイプのアクセス制御リスト (ACL) エントリをカプセル化するオブジェクト<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the size, in bytes, of the inbound buffer for a pipe.</source>
          <target state="translated">パイプの着信バッファーのバイト単位のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If InBufferSize is 0, the buffer size is allocated as needed.</source>
          <target state="translated">受信バッファー サイズが 0 の場合は、必要に応じて、バッファーのサイズが割り当てられます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An integer value that represents the inbound buffer size, in bytes.</source>
          <target state="translated">着信バッファーのサイズ、(バイト単位) を表す整数値。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The stream is unreadable.</source>
          <target state="translated">ストリームが読み取り可能ではありません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The pipe is waiting to connect.</source>
          <target state="translated">パイプは、接続を待機しています。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Initializes a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object from the specified <bpt id="p2">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初期化、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から、指定したオブジェクト<bpt id="p2">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If the pipe is in a connected state, this method also sets the &lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">パイプが接続状態である場合は、このメソッドは設定も、&lt;xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.IO.Pipes.PipeStream.IsConnected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of the pipe to initialize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を初期化するパイプのオブジェクト。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to expose the handle; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ハンドルを公開するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the handle was opened asynchronously; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ハンドルが非同期的に開かれたことを示すためにそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A handle cannot be bound to the pipe.</source>
          <target state="translated">ハンドルは、パイプにバインドできません。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was opened asynchronously or synchronously.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが非同期的または同期的に開かれました。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This property enables your code to use the &lt;xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt; property correctly.</source>
          <target state="translated">このプロパティを使用するコードを使用して、&lt;xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt;プロパティ正しく&lt;/xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object was opened asynchronously; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>非同期的に、それ以外のオブジェクトが開かれた<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is connected.</source>
          <target state="translated">取得または設定を示す値かどうか、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが接続されています。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The IsConnected property returns <ph id="ph1">`true`</ph> only if the &lt;xref:System.IO.Pipes.PipeStream&gt; object is connected.</source>
          <target state="translated">操作のプロパティから返される<ph id="ph1">`true`</ph>場合にのみ、&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトが接続されている&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If this property returns <ph id="ph1">`false`</ph>, the pipe may be waiting to connect, or may be disconnected, closed, or broken.</source>
          <target state="translated">このプロパティを返す場合<ph id="ph1">`false`</ph>、パイプ可能性がある、接続を待機している可能性があります切断されているを閉じると、または分割します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is connected; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトが接続されている、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a handle to a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is exposed.</source>
          <target state="translated">ハンドルかどうかを示す値を取得、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトを公開します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The value of this property is set when obtaining a handle to the pipe that is encapsulated by the current &lt;xref:System.IO.Pipes.PipeStream&gt; object.</source>
          <target state="translated">現在のカプセル化されているパイプへのハンドルを取得するときにこのプロパティの値が設定されて&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクト&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a handle to the <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is exposed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合へのハンドル、 <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクトが公開されている、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether there is more data in the message returned from the most recent read operation.</source>
          <target state="translated">最新の読み取り操作から返されたメッセージでより多くのデータがあるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This property is relevant if the pipe's &lt;xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt; property was set to &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; by the most recent call to &lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt; or &lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;.</source>
          <target state="translated">このプロパティは、該当する場合、パイプの&lt;xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt;プロパティ&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;&lt;xref:System.IO.Pipes.PipeStream.Read%2A&gt;または&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;.&lt;/xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;&lt;/xref:System.IO.Pipes.PipeStream.Read%2A&gt;に最新の呼び出しによって&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;に設定されました&lt;/xref:System.IO.Pipes.PipeStream.ReadMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are no more characters to read in the message; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>メッセージを読み取る文字がある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The pipe is not connected.</source>
          <target state="translated">パイプが接続されていません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-       The pipe handle has not been set.</source>
          <target state="translated">- または - パイプ ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-or-       The pipe's &lt;xref:System.IO.Pipes.PipeStream.ReadMode*&gt; property value is not <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">- または - パイプの&lt;xref:System.IO.Pipes.PipeStream.ReadMode*&gt;プロパティの値が<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.IO.Pipes.PipeStream.ReadMode*&gt; 。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the length of a stream, in bytes.</source>
          <target state="translated">バイト単位のストリームの長さを取得します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeStream&gt; class does not support the Length property.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeStream&gt;クラスは、Length プロパティをサポートしていません&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>0 in all cases.</source>
          <target state="translated">常に&amp;0; を返します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Always thrown.</source>
          <target state="translated">常にスローされます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Gets the size, in bytes, of the outbound buffer for a pipe.</source>
          <target state="translated">パイプの発信バッファーのバイト単位のサイズを取得します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>If OutBufferSize is 0, the buffer size is allocated as needed.</source>
          <target state="translated">送信バッファー サイズが 0 の場合は、必要に応じて、バッファーのサイズが割り当てられます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The outbound buffer size, in bytes.</source>
          <target state="translated">発信バッファーのサイズ (バイト)。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The stream is unwriteable.</source>
          <target state="translated">ストリームが書き込み可能ではありません。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The pipe is waiting to connect.</source>
          <target state="translated">パイプは、接続を待機しています。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position of the current stream.</source>
          <target state="translated">取得または現在のストリームの現在の位置を設定します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeStream&gt; class does not support the Position property.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeStream&gt;クラスは、Position プロパティをサポートしていません&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>0 in all cases.</source>
          <target state="translated">常に&amp;0; を返します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Always thrown.</source>
          <target state="translated">常にスローされます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Reads a block of bytes from a stream and writes the data to a specified buffer.</source>
          <target state="translated">ストリームからバイトのブロックを読み取り、データを指定されたバッファーに書き込みます。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports read operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる読み取り操作&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Calling the Read method blocks until <ph id="ph1">`count`</ph> bytes are read or the end of the stream is reached.</source>
          <target state="translated">Read メソッドを呼び出すまでブロック<ph id="ph1">`count`</ph>バイトが読み取られるか、ストリームの末尾に到達します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>For asynchronous read operations, see &lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt; and &lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;.</source>
          <target state="translated">非同期の読み取り操作&lt;xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;および&lt;xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.EndRead%2A&gt;&lt;/xref:System.IO.Pipes.PipeStream.BeginRead%2A&gt;参照してください。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">このメソッドが戻るときまでの値が指定したバイト配列が含まれています。<ph id="ph1">`offset`</ph>と (<ph id="ph2">`offset`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`count`</ph> - 1) 現在のソースから読み取られたバイトに置き換えられます。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The byte offset in the <ph id="ph1">`buffer`</ph> array at which the bytes that are read will be placed.</source>
          <target state="translated">内のバイト オフセット、<ph id="ph1">`buffer`</ph>が読み取られるバイトが配置される配列。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取るバイトの最大数。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The total number of bytes that are read into <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">読み取られるバイトの総数<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This might be less than the number of bytes requested if that number of bytes is not currently available, or 0 if the end of the stream is reached.</source>
          <target state="translated">そのバイト数が現在使用できないかどうかに要求したバイト数よりも小さくなることや、ストリームの末尾に達した場合は 0 です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>使用できるバイト数よりも大きい<ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The pipe does not support read operations.</source>
          <target state="translated">パイプでは、読み取り操作はサポートしません。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Any I/O error occurred.</source>
          <target state="translated">何らかの I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Reads a byte from a pipe.</source>
          <target state="translated">パイプからバイトを読み取ります。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports read operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる読み取り操作&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The byte, cast to &lt;xref:System.Int32&gt;, or -1 indicates the end of the stream (the pipe has been closed).</source>
          <target state="translated">キャストしたバイト&lt;xref:System.Int32&gt;、-1 (パイプが閉じられました) ストリームの末尾&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The pipe does not support read operations.</source>
          <target state="translated">パイプでは、読み取り操作はサポートしません。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Any I/O error occurred.</source>
          <target state="translated">何らかの I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets or sets the reading mode for a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得または設定の読み取りモード、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; mode message transmission.</source>
          <target state="translated">匿名パイプはサポートしていない&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;モードのメッセージの送信&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates how the <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object reads from the pipe.</source>
          <target state="translated">いずれか、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を示す値、 <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>パイプからオブジェクトを読み取ります。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The supplied value is not a valid <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">指定された値が有効な<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The supplied value is not a supported <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for this pipe stream.</source>
          <target state="translated">指定された値は、サポートされていません<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このパイプ ストリームの値。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The handle has not been set.</source>
          <target state="translated">ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>-or-       The pipe is waiting to connect with a named client.</source>
          <target state="translated">- または - パイプが名前付きクライアントで接続を待機しています。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The pipe is broken or an I/O error occurred with a named client.</source>
          <target state="translated">パイプが壊れているか、名前付きクライアントで I/O エラーが発生します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets the safe handle for the local end of the pipe that the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">パイプのローカルの終端のセーフ ハンドルを取得、現在<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトによってカプセル化します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the pipe that is encapsulated by the current <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafePipeHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトは、現在のカプセル化されるパイプの<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The pipe handle has not been set.</source>
          <target state="translated">パイプ ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Sets the current position of the current stream to the specified value.</source>
          <target state="translated">指定した値を現在のストリームの現在の位置を設定します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The Seek method is not supported in pipes and raises a &lt;xref:System.NotSupportedException&gt; when it is called.</source>
          <target state="translated">Seek メソッドは、パイプ、および発生でサポートされていません、&lt;xref:System.NotSupportedException&gt;が呼び出される場合&lt;/xref:System.NotSupportedException&gt;。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The point, relative to <ph id="ph1">`origin`</ph>, to begin seeking from.</source>
          <target state="translated">相対的に、ポイント<ph id="ph1">`origin`</ph>、シークの開始。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Specifies the beginning, the end, or the current position as a reference point for <ph id="ph1">`offset`</ph>, using a value of type &lt;xref:System.IO.SeekOrigin&gt;.</source>
          <target state="translated">参照ポイントとして先頭、末尾、または現在位置を示す<ph id="ph1">`offset`</ph>、 &lt;xref:System.IO.SeekOrigin&gt;.&lt;/xref:System.IO.SeekOrigin&gt;型の値を使用します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The new position in the stream.</source>
          <target state="translated">ストリームの新しい位置。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Applies the access control list (ACL) entries specified by a <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the pipe specified by the current <bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定されたアクセス制御リスト (ACL) エントリを適用する<bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを現在の指定されたパイプに<bpt id="p2">&lt;xref href="System.IO.Pipes.PipeStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An access control list (ACL) describes individuals and/or groups that have, or do not have, rights to perform specific actions on a specified file.</source>
          <target state="translated">アクセス制御リスト (ACL) は、個人やグループがある、またはなくても、指定されたファイルの特定のアクションを実行する権限について説明します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 追加または削除するアクセス制御リスト エントリ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that specifies an access control list (ACL) entry to apply to the current pipe.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を現在のパイプに適用するアクセス制御リスト (ACL) エントリを指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pipeSecurity&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pipeSecurity&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The underlying call to set security information failed.</source>
          <target state="translated">セキュリティ情報の設定を基になる呼び出しが失敗しました。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Sets the length of the current stream to the specified value.</source>
          <target state="translated">現在のストリームの長さを指定した値に設定します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Pipes.PipeStream&gt; class does not support the SetLength method.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeStream&gt;クラスは SetLength メソッドをサポートしていません&lt;/xref:System.IO.Pipes.PipeStream&gt;。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The new length of the stream.</source>
          <target state="translated">ストリームの新しい長さ。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets the pipe transmission mode supported by the current pipe.</source>
          <target state="translated">現在のパイプでサポートされるパイプ送信モードを取得します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Anonymous pipes do not support &lt;xref:System.IO.Pipes.PipeTransmissionMode&gt; mode message transmission.</source>
          <target state="translated">匿名パイプはサポートしていない&lt;xref:System.IO.Pipes.PipeTransmissionMode&gt;モードのメッセージの送信&lt;/xref:System.IO.Pipes.PipeTransmissionMode&gt;。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that indicates the transmission mode supported by the current pipe.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeTransmissionMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を現在のパイプでサポートされている送信モードを示す値。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The handle has not been set.</source>
          <target state="translated">ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>-or-       The pipe is waiting to connect in an anonymous client/server operation or with a named client.</source>
          <target state="translated">- または - パイプが匿名クライアント/サーバー操作、または名前付きクライアントでの接続を待機しています。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Waits for the other end of the pipe to read all sent bytes.</source>
          <target state="translated">送信されたすべてのバイトを読み取り、パイプのもう一方の端まで待機します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The WaitForPipeDrain method blocks until the other end of the pipe has read all sent bytes.</source>
          <target state="translated">WaitForPipeDrain メソッドは、パイプのもう一方の端が送信されたすべてのバイトを読み取るまでをブロックします。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The pipe does not support write operations.</source>
          <target state="translated">パイプは書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Writes a block of bytes to the current stream using data from a buffer.</source>
          <target state="translated">バッファーからデータを使用して現在のストリームにバイトのブロックを書き込みます。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports write operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる書き込み操作です&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Calling the Write method blocks until <ph id="ph1">`count`</ph> bytes are read or the end of the stream is reached.</source>
          <target state="translated">書き込みメソッドを呼び出すまでブロック<ph id="ph1">`count`</ph>バイトが読み取られるか、ストリームの末尾に到達します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>For asynchronous read operations, see &lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt; and &lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;.</source>
          <target state="translated">非同期の読み取り操作&lt;xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;および&lt;xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;。&lt;/xref:System.IO.Pipes.PipeStream.EndWrite%2A&gt;&lt;/xref:System.IO.Pipes.PipeStream.BeginWrite%2A&gt;参照してください。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The buffer that contains data to write to the pipe.</source>
          <target state="translated">パイプに書き込むデータを格納しているバッファー。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">内の&amp;0; から始まるバイト オフセット<ph id="ph1">`buffer`</ph>現在のストリームにバイトのコピーを開始する位置。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write to the current stream.</source>
          <target state="translated">現在のストリームに書き込むバイトの最大数。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>0 未満です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>が 0 未満です。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available in <ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>使用できるバイト数よりも大きい<ph id="ph2">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The pipe does not support write operations.</source>
          <target state="translated">パイプは書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current stream.</source>
          <target state="translated">現在のストリームにバイトを書き込みます。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt; property to determine whether the current &lt;xref:System.IO.Pipes.PipeStream&gt; object supports write operations.</source>
          <target state="translated">使用して、&lt;xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;プロパティを決定するかどうか、現在&lt;xref:System.IO.Pipes.PipeStream&gt;オブジェクトでサポートされる書き込み操作です&lt;/xref:System.IO.Pipes.PipeStream&gt;&lt;/xref:System.IO.Pipes.PipeStream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The byte to write to the stream.</source>
          <target state="translated">ストリームに書き込むバイト。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The pipe is closed.</source>
          <target state="translated">パイプは閉じています。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The pipe does not support write operations.</source>
          <target state="translated">パイプは書き込み操作をサポートしていません。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The pipe is disconnected, waiting to connect, or the handle has not been set.</source>
          <target state="translated">パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The pipe is broken or another I/O error occurred.</source>
          <target state="translated">パイプが壊れているか、別の I/O エラーが発生しました。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>