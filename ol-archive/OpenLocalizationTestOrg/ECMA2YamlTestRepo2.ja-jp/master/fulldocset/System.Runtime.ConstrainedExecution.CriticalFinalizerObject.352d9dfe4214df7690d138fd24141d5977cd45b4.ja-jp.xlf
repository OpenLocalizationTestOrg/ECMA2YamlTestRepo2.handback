<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18662fc7d4230fec1646d4f41a321def8a23513b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.ConstrainedExecution.CriticalFinalizerObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c95124a7cc714a3067ad0821539278c03f3469b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9b04922d7371f340cf7d6c6a6bd3b788587af5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">派生クラス内のすべての終了コードに重要としてマークされていることを確認します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Classes deriving from the CriticalFinalizerObject class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">CriticalFinalizerObject クラスから派生するクラスは、制約された実行領域 (CER) として暗黙的に扱われます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">これには、のみ強力な信頼性のコントラクトにコードを呼び出すファイナライザーでコードが必要です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about CERs, see the &lt;xref:System.Runtime.ConstrainedExecution&gt; namespace.</source>
          <target state="translated">Cer の詳細については、次を参照してください、&lt;xref:System.Runtime.ConstrainedExecution&gt;名前空間。&lt;/xref:System.Runtime.ConstrainedExecution&gt; 。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In classes derived from the CriticalFinalizerObject class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">CriticalFinalizerObject クラスから派生したクラス、共通言語ランタイム (CLR) ことを保証するすべての重要な終了コードは、実行する営業案件に付与される提供ファイナライザーを CLR に強制的にアプリケーション ドメインをアンロードしたり中止したり、スレッドの場合であっても、CER の規則に従います。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">ファイナライザー CER の規則に違反する場合に可能性がありますが正常に実行されません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">さらに、CLR は通常の動作と重要なファイナライザー間弱い順序付けを確立します。 クリティカル ファイナライザーのいずれかの前に、同時にガベージ コレクションによって回収されるオブジェクトのすべての重要でないファイナライザーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, a class such as &lt;xref:System.IO.FileStream&gt;, which holds data in the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class that is derived from CriticalFinalizerObject, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">などのクラスなど、 &lt;xref:System.IO.FileStream&gt;、内のデータを保持する、 &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;CriticalFinalizerObject から派生したクラスは、バッファー内の既存のデータをフラッシュする標準のファイナライザーを実行できます&lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;&lt;/xref:System.IO.FileStream&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In most cases, you do not need to write classes that derive from the CriticalFinalizerObject class.</source>
          <target state="translated">ほとんどの場合は、CriticalFinalizerObject クラスから派生するクラスを作成する必要はありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The .NET Framework class library provides two classes, &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; and &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">.NET Framework クラス ライブラリには、2 つのクラスが用意されています&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;と&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;、ハンドル リソースの重要な終了処理の機能を提供します&lt;/xref:System.Runtime.InteropServices.CriticalHandle&gt;&lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class, and this set is located in the &lt;xref:Microsoft.Win32.SafeHandles&gt; namespace.</source>
          <target state="translated">さらに、.NET Framework がから派生したクラスの定義済みのセットを提供、&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;クラス、およびこのセットにある、&lt;xref:Microsoft.Win32.SafeHandles&gt;名前空間&lt;/xref:Microsoft.Win32.SafeHandles&gt;&lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">これらのクラスは、ファイルとオペレーティング システム ハンドルをサポートするための共通の機能を提供する設計されています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all the resources used by the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The finalizer for any types deriving from &lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt; is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">派生する任意の型のファイナライザーを&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;する機会が与えられますを実行しは中断できない、ファイナライザーは、制約された実行領域 (CER) の規則を正しくに従いと仮定した場合します&lt;/xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>