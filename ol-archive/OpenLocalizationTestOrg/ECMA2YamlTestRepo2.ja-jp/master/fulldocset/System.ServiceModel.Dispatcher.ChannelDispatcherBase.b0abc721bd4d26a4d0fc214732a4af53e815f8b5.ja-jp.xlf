<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f02546ad90e504289210da4c2815ed63e307fabf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Dispatcher.ChannelDispatcherBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4f30284045a4707122e2632ddf65ef47a43ba7c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b42c611decd4b7ec981ac85485ffabdbf9f731bc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</source>
          <target state="translated">チャネルを受け入れるし、サービスを関連付けるチャネル ディスパッチャーの抽象基本クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is used by developers who want to keep the <ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> programming model but replace the system-provided runtime.</source>
          <target state="translated">これは、使用しておく必要のある開発者が、<ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>プログラミング モデル、ランタイムは置き換えようシステムが提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</source>
          <target state="translated">このようなアプリケーションでは、チャネルからメッセージをプルし、ユーザー定義のディスパッチャーを直接処理します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To use ChannelDispatcherBase , create a class derived from it, extend &lt;xref:System.ServiceModel.ServiceHost&gt; and override &lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;, adding instances of your class derived from ChannelDispatcherBase to &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;.</source>
          <target state="translated">そこから派生した ChannelDispatcherBase を使用して、クラスを作成、&lt;xref:System.ServiceModel.ServiceHost&gt;上書き&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;。&lt;/xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; ChannelDispatcherBase から派生したクラスのインスタンスを追加すること、&lt;/xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;および&lt;/xref:System.ServiceModel.ServiceHost&gt;拡張</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; and the &lt;xref:System.ServiceModel.ServiceHost&gt;, associated with the ChannelDispatcherBase object are available for inspection or modification through the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt; and &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt; respectively.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;と&lt;xref:System.ServiceModel.ServiceHost&gt;、関連付けられている ChannelDispatcherBase オブジェクトでは使用を検査または変更を&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;と&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;それぞれ&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;&lt;/xref:System.ServiceModel.ServiceHost&gt;&lt;/xref:System.ServiceModel.Channels.IChannelListener&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.ServiceHost&gt; calls the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt; or &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt; methods when adding or removing a ChannelDispatcherBase item from its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;呼び出し、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;または&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;メソッドを追加またはから ChannelDispatcherBase 項目を削除するときにその&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;コレクションです&lt;/xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;。&lt;/xref:System.ServiceModel.ServiceHost&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.ServiceHost&gt; calls the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt; during shutdown before closing InstanceContexts.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;呼び出し、 &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;InstanceContexts を閉じる前にシャット ダウン中に&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;。&lt;/xref:System.ServiceModel.ServiceHost&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]</ph>この呼び出しを使用して、データグラム チャネルを閉じるし、すべてのメッセージが InstanceContext に到着するまで待機します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcherBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcherBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, attaches the channel dispatcher to a specific host.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーを特定のホストにアタッチします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method can only be set when the instance of the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; is in the &lt;xref:System.ServiceModel.CommunicationState&gt; state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">このメソッドがときにのみ設定のインスタンス、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;では、&lt;xref:System.ServiceModel.CommunicationState&gt;状態は変更可能な両方、破棄されていない唯一の状態&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ServiceModel.ServiceHost&gt; calls this method when the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is added to its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.</source>
          <target state="translated">A&lt;xref:System.ServiceModel.ServiceHost&gt;このメソッドを呼び出すときに、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;に追加その&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;コレクションです&lt;/xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;&lt;/xref:System.ServiceModel.ServiceHost&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This gives the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; a chance to hook events and inspect the &lt;xref:System.ServiceModel.ServiceHost&gt;, and provides the value that should be returned from the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt; property.</source>
          <target state="translated">これにより、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;イベントをフックし、検査する機会、&lt;xref:System.ServiceModel.ServiceHost&gt;から返される値を提供し、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;&lt;/xref:System.ServiceModel.ServiceHost&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the service.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>サービス。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The communication object is in an &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state or the host is already set.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;または&lt;xref:System.ServiceModel.CommunicationState&gt;状態またはホストが既に設定されています&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;または&lt;xref:System.ServiceModel.CommunicationState&gt;状態&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; state.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;状態&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているエンドポイント ディスパッチャーを削除します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.ServiceHost&gt; calls this method during shutdown to give the dispatcher a chance to drain messages.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;ディスパッチャーのメッセージをドレインする機会を与えるシャット ダウン中にこのメソッドを呼び出します。&lt;/xref:System.ServiceModel.ServiceHost&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; uses this call to close datagram channels.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;この呼び出しを使用して、データグラム チャネルを閉じます。&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, detaches the channel dispatcher from a specific host.</source>
          <target state="translated">派生クラスでオーバーライドされると、特定のホストからチャネル ディスパッチャーをデタッチします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.ServiceHostBase&gt; can only be detached when the instance of the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; is in the &lt;xref:System.ServiceModel.CommunicationState&gt; state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHostBase&gt;できるときにのみ切断のインスタンス、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;では、&lt;xref:System.ServiceModel.CommunicationState&gt;状態は変更可能な両方、破棄されていない唯一の状態&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;&lt;/xref:System.ServiceModel.ServiceHostBase&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Should set the &lt;xref:System.ServiceModel.ServiceHostBase&gt; associated with the channel dispatcher to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">設定する必要があります、&lt;xref:System.ServiceModel.ServiceHostBase&gt;チャネル ディスパッチャーに関連付けられている<ph id="ph1">`null`</ph>&lt;/xref:System.ServiceModel.ServiceHostBase&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.ServiceHost&gt; calls this method when the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is removed from its &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.</source>
          <target state="translated">&lt;xref:System.ServiceModel.ServiceHost&gt;このメソッドを呼び出すときに、&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;から削除その&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;コレクション&lt;/xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;。&lt;/xref:System.ServiceModel.ServiceHost&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This gives the &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; a chance to unhook events and inspect the &lt;xref:System.ServiceModel.ServiceHost&gt;.</source>
          <target state="translated">これは&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;イベントをアンフックし、 &lt;xref:System.ServiceModel.ServiceHost&gt;。&lt;/xref:System.ServiceModel.ServiceHost&gt;を検査する機会&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;を与えます</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The communication object is in an &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state or the host is already set.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;または&lt;xref:System.ServiceModel.CommunicationState&gt;状態またはホストが既に設定されています&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; or &lt;xref:System.ServiceModel.CommunicationState&gt; state.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;または&lt;xref:System.ServiceModel.CommunicationState&gt;状態&lt;/xref:System.ServiceModel.CommunicationState&gt;&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The communication object is in a &lt;xref:System.ServiceModel.CommunicationState&gt; state.</source>
          <target state="translated">通信オブジェクトは、&lt;xref:System.ServiceModel.CommunicationState&gt;状態&lt;/xref:System.ServiceModel.CommunicationState&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the service host associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているサービス ホストを取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.ServiceModel.ServiceHost&gt; object can have many &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; objects, each associated with a different &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; for that service.</source>
          <target state="translated">各&lt;xref:System.ServiceModel.ServiceHost&gt;オブジェクトが持つ多く&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;オブジェクトを別に関連付けられている各&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;のサービスに対する&lt;/xref:System.ServiceModel.Channels.IChannelListener&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;&lt;/xref:System.ServiceModel.ServiceHost&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The host keeps a list of these &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; objects in the &lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt; collection.</source>
          <target state="translated">ホストは、これらのリストを保持&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;内のオブジェクト、&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;コレクションです&lt;/xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the service associated with the dispatcher.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ディスパッチャーに関連付けられているサービスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているチャネル リスナーを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt; associates an &lt;xref:System.ServiceModel.Channels.IChannelListener&gt; whose channels and messages this &lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt; is dispatching.</source>
          <target state="translated">A&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;関連付けます、&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;いるチャネルおよびメッセージこの&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;をディスパッチします&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;&lt;/xref:System.ServiceModel.Channels.IChannelListener&gt;&lt;/xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the channel dispatcher.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>チャネル ディスパッチャーに関連付けられています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>