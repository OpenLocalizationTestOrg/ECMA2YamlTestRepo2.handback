<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4602ef117dd03cd0fdcb285a408828fdacdbe351</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.IProcessInitializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc3734f2ec5c3e9312e06a274d0ab3dbf2cb24ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6e88b5c54646b8f30bce4b5eff2658bebc60465</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">COM コンポーネントの起動やシャット ダウン時に呼び出すことができるメソッドをサポートしています。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implement the IProcessInitializer interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">サーバー プロセス (Dllhost.exe) が起動または終了時に、それぞれ初期化またはシャット ダウン コードを実行する場合は、サービス コンポーネントで IProcessInitializer インターフェイス メソッドを実装します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + に用意<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>Dllhost.exe の開始し、終了時にイベント。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">この機能は、(以下に、サーバー コンポーネントと呼びます) のカスタムの初期化を実行し、コードをクリーンアップする COM + サーバー アプリケーションにインストールされている COM + コンポーネントを使用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An instance of each component that implements the IProcessInitializer interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">IProcessInitializer インターフェイスを実装する各コンポーネントのインスタンスは作成され、格納されているプロセスの期間のインターフェイス メソッドにスタートアップおよびシャット ダウン中に呼び出されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When implemented on a &lt;xref:System.EnterpriseServices.ServicedComponent&gt;, during registration of the component, the <ph id="ph1">`InitializesServerApplication`</ph> parameter in the <ph id="ph2">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">実装された場合、 &lt;xref:System.EnterpriseServices.ServicedComponent&gt;、コンポーネントの登録時に、<ph id="ph1">`InitializesServerApplication`</ph>内のパラメーター、<ph id="ph2">`COMAdminCatalogObject`</ph>コンポーネント内でコレクションが に設定されている<ph id="ph3">`true`</ph>&lt;/xref:System.EnterpriseServices.ServicedComponent&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">使用して、<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>イベント、リソースの初期化、接続を作成することができます、共有、データの初期化とクリーンアップ コードを実行します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">ただし、サーバー コンポーネントのインスタンスがまだ作成されていないためには、COM + に固有の状態にアクセスする必要がありますできません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">さらに、コード、<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>イベントは、システムをシステム プロセスの開始後にライセンス認証を受け入れる準備を Dllhost.exe で 90 秒のみを待機するため、できるだけ迅速に返す必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">Dllhost.exe が可能である 90 秒以内を通知されない場合、システム プロセスを終了します。したがって、すべての初期化プロセスはこの期間内に完了する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each server component that participates in initialization must support the IProcessInitializer interface.</source>
          <target state="translated">初期化に参加している各サーバー コンポーネントは、IProcessInitializer インターフェイスをサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the IProcessInitializer interface, and calls the &lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt; function.</source>
          <target state="translated">DllHost.exe スタートアップ時に、COM + 作成を呼び出し、このサービスを要求したすべてのサーバー コンポーネント<ph id="ph1">`QueryInterface`</ph>IProcessInitializer インターフェイス、および呼び出し、&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;関数&lt;/xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the &lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt; function on those previously stored interface pointers.</source>
          <target state="translated">同様に、DllHost.exe のプロセスがシャット ダウン時に呼び出し、&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;これらの関数は以前のインターフェイス ポインターを格納します&lt;/xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Performs shutdown actions.</source>
          <target state="translated">シャット ダウン操作を実行します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">Dllhost.exe をシャット ダウン時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Shutdown is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated">フェイルファースト、またはその他の重大なシャット ダウン イベントの間にシャット ダウンは呼び出されません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Performs initialization at startup.</source>
          <target state="translated">起動時の初期化を実行します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">Dllhost.exe が開始されたときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an &lt;xref:System.EnterpriseServices.IProcessInitControl&gt; interface.</source>
          <target state="translated">によって参照されるオブジェクト<ph id="ph1">`punkProcessControl`</ph>を実装する&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;インターフェイス&lt;/xref:System.EnterpriseServices.IProcessInitControl&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.EnterpriseServices.IProcessInitControl&gt; supports the single method &lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;.</source>
          <target state="translated">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;。&lt;/xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;の&amp;1; つのメソッドをサポートしています&lt;/xref:System.EnterpriseServices.IProcessInitControl&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The initialization code in Startup can call the &lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">スタートアップの初期化コードを呼び出すことができます、 &lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;、コンポーネントがタイムアウトの起動前に残り秒数に設定してタイムアウトを指定しています&lt;/xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows XP, a pointer to the <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface of the COM component starting up.</source>
          <target state="translated">Microsoft Windows XP へのポインターでは、 <bpt id="p1">&lt;xref uid="langword_csharp_IUnknown" name="IUnknown" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を起動する COM コンポーネントのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In Microsoft Windows 2000, this argument is always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Microsoft Windows 2000 では、この引数は常に<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>