<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c43abccd07fb39eb71ee689bccaf54771aad16b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlDirective.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1adff98d359dd07ed5d8de0f8bf78c9c4bce1bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">918320d99a28c136bca19996d90ab674d6d3227c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the XAML type system identifier for a member if the member is also a XAML directive.</source>
          <target state="translated">メンバーは XAML ディレクティブもある場合は、メンバーの XAML 型システム識別子を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XAML readers and XAML writers use the XamlDirective identifier during processing of member nodes.</source>
          <target state="translated">XAML リーダーと XAML ライターは、メンバー ノードの処理中に XamlDirective 識別子を使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The identifier is used when the XAML reader is positioned on a <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and &lt;xref:System.Xaml.XamlMember.IsDirective*&gt; is <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">識別子は、XAML リーダーの位置にある場合、 <bpt id="p1">&lt;xref href="System.Xaml.XamlNodeType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と&lt;xref:System.Xaml.XamlMember.IsDirective*&gt;は<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Xaml.XamlMember.IsDirective*&gt; 。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>XamlDirective provides expected values for the XAML type system when the member is a XAML directive.</source>
          <target state="translated">XamlDirective では、メンバーが XAML ディレクティブである場合に、XAML 型システムの予期される値を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By definition, a XAML directive has characteristics that always return the same results for a subset of the &lt;xref:System.Xaml.XamlMember&gt; properties, and the same XAML type system information is reported for all possible XAML directives.</source>
          <target state="translated">定義上、XAML ディレクティブが常に、同じ結果を返しますのサブセットの特性、&lt;xref:System.Xaml.XamlMember&gt;プロパティ、および同じ XAML 型システム情報が報告されるすべての可能な XAML ディレクティブ&lt;/xref:System.Xaml.XamlMember&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of &lt;xref:System.Xaml.XamlMember&gt; <ph id="ph1">`Lookup*`</ph> virtual members in the XamlDirective class.</source>
          <target state="translated">内部の動作を使用してまたはのオーバーライドでは実現ディレクティブに固有の XAML 型システムの特性のために報告&lt;xref:System.Xaml.XamlMember&gt;<ph id="ph1">`Lookup*`</ph>XamlDirective クラスの仮想メンバー&lt;/xref:System.Xaml.XamlMember&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following list shows the returned results of a XAML directive for &lt;xref:System.Xaml.XamlMember&gt; when the member is actually a XamlDirective:      -   &lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt; is always <ph id="ph1">`null`</ph>.</source>
          <target state="translated">以下の XAML ディレクティブから返される結果を示します&lt;xref:System.Xaml.XamlMember&gt;メンバーは XamlDirective 実際には、場合:-&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;は常に<ph id="ph1">`null`</ph>&lt;/xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;&lt;/xref:System.Xaml.XamlMember&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt; is always <ph id="ph1">`null`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;は常に<ph id="ph1">`null`</ph>&lt;/xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; is always <ph id="ph1">`null`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;は常に<ph id="ph1">`null`</ph>&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt; is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;は常に<ph id="ph1">`false`</ph>&lt;/xref:System.Xaml.XamlMember.IsAmbient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt; is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;は常に<ph id="ph1">`false`</ph>&lt;/xref:System.Xaml.XamlMember.IsAttachable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt; is always <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;は常に<ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlMember.IsDirective%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt; is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;は常に<ph id="ph1">`false`</ph>&lt;/xref:System.Xaml.XamlMember.IsEvent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt; is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;は常に<ph id="ph1">`false`</ph>&lt;/xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt; is always <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;は常に<ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; is always <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;は常に<ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Also, the internal backing for &lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt; remains unset and returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">内部のバックアップも、&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;が設定されていないと、返す<ph id="ph1">`null`</ph>&lt;/xref:System.Xaml.XamlMember.DeclaringType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  XamlDirective is a &lt;xref:System.Xaml.XamlMember&gt; subclass.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; XamlDirective は、&lt;xref:System.Xaml.XamlMember&gt;サブクラスです&lt;/xref:System.Xaml.XamlMember&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As with &lt;xref:System.Xaml.XamlMember&gt;, XamlDirective has security considerations regarding how the XAML type system reports access.</source>
          <target state="translated">同様に&lt;xref:System.Xaml.XamlMember&gt;、XamlDirective は XAML 型システムがアクセスを報告する方法に関するセキュリティの考慮事項&lt;/xref:System.Xaml.XamlMember&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Remarks in &lt;xref:System.Xaml.XamlMember&gt;.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlMember&gt;。&lt;/xref:System.Xaml.XamlMember&gt;の「解説」を参照してください</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying values for a name and a single XAML namespace.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、名前と単一の XAML 名前空間の値を指定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Use this signature only when you want or expect &lt;xref:System.Xaml.XamlMember.IsUnknown*&gt; to report <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the directive.</source>
          <target state="translated">この署名を使用するか、想定する場合にのみ&lt;xref:System.Xaml.XamlMember.IsUnknown*&gt;レポートに<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ディレクティブの&lt;/xref:System.Xaml.XamlMember.IsUnknown*&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This signature of the constructor always generates an identifier for the directive where &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; reports <ph id="ph2">`true`</ph> for the XAML type system.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; コンス トラクターのこの署名は常に、ディレクティブの識別子を生成、&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;レポート<ph id="ph2">`true`</ph>xaml 型システム&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the &lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName&gt; constructor signature instead.</source>
          <target state="translated">必要な情報がある場合 (バッキング型および変換については、テキスト構文情報項目) ディレクティブの使用に適用可能な識別子をして、&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName&gt;コンス トラクター シグネチャ代わりにします&lt;/xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you use this signature, the &lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt; value for the instance is &lt;xref:System.Xaml.Schema.AllowedMemberLocations&gt;; and the &lt;xref:System.Xaml.XamlMember.Type%2A&gt; value and &lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt; value are both <ph id="ph1">`null`</ph>.</source>
          <target state="translated">この署名を使用する場合、&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;の値、インスタンスが&lt;xref:System.Xaml.Schema.AllowedMemberLocations&gt;; および&lt;xref:System.Xaml.XamlMember.Type%2A&gt;値および&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;値の両方が<ph id="ph1">`null`</ph>&lt;/xref:System.Xaml.XamlMember.TypeConverter%2A&gt;&lt;/xref:System.Xaml.XamlMember.Type%2A&gt;&lt;/xref:System.Xaml.Schema.AllowedMemberLocations&gt;&lt;/xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The primary XAML namespace where this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">プライマリの XAML 名前空間でこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>存在できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The identifying name of the <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">識別名、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, specifying values for each per-case value of a <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、値の各ケースの値を指定する、 <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You must use this constructor to generate a &lt;xref:System.Xaml.XamlDirective&gt; that does not report &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; as <ph id="ph1">`true`</ph>.</source>
          <target state="translated">このコンス トラクターを使用して生成する必要があります、&lt;xref:System.Xaml.XamlDirective&gt;は報告されません&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;として<ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;&lt;/xref:System.Xaml.XamlDirective&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A set of XAML namespaces where this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can exist, passed as an enumerable set of the identifier strings.</source>
          <target state="translated">XAML 名前空間のセットをこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>識別子文字列の列挙可能なセットとして渡される、存在できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The identifying name of the <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">識別名、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The XAML type that backs the <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">バックアップする XAML の種類、 <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The type converter that this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses for text syntax conversion.</source>
          <target state="translated">型コンバーターは、この<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>はテキストの構文への変換を使用します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A value of the <bpt id="p1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">値、 <bpt id="p1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies the XAML node types where the directive can be specified.</source>
          <target state="translated">ディレクティブを指定することができます、XAML ノードの種類を指定する値を取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You can set this value in the &lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt; constructor signature.</source>
          <target state="translated">この値を設定することができます、&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;コンス トラクターのシグネチャ&lt;/xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you construct by using the &lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt; constructor signature, the AllowedLocation value for the instance is &lt;xref:System.Xaml.Schema.AllowedMemberLocations&gt;.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;コンス トラクター シグネチャ、インスタンスの AllowedLocation 値は&lt;xref:System.Xaml.Schema.AllowedMemberLocations&gt;.&lt;/xref:System.Xaml.Schema.AllowedMemberLocations&gt;&lt;/xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;を使用して構築する場合</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>However, the instance always reports &lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt; as <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ただし、インスタンス常に報告&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;として<ph id="ph1">`true`</ph>&lt;/xref:System.Xaml.XamlMember.IsUnknown%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This behavior typically affects attempts to write object graphs and also affects other practical uses of a &lt;xref:System.Xaml.XamlMember&gt; value.</source>
          <target state="translated">通常、この動作に影響オブジェクトは、グラフ化しの他の実際の使用にも影響の書き込み試行、&lt;xref:System.Xaml.XamlMember&gt;値&lt;/xref:System.Xaml.XamlMember&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You typically would not construct a XAML directive case where AllowedLocation is &lt;xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName&gt;.</source>
          <target state="translated">通常は、XAML ディレクティブ場合 AllowedLocation &lt;xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName&gt;。&lt;/xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName&gt;を作成できません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
          <target state="translated">列挙体の値です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default is the enumeration default, which is <bpt id="p1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は列挙型の既定値は<bpt id="p1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An integer hash code.</source>
          <target state="translated">整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">この XAML メンバーが存在できる XAML 名前空間の一覧を返します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</source>
          <target state="translated">XAML 名前空間の識別子は、XAML および XML 名前空間の通常の規則に従って (Uniform Resource Identifier) の文字列形式に通常表示される文字列です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</source>
          <target state="translated">一覧には、1 つ以上の項目が含まれています場合、セットの最初の項目処理する目的で、プライマリ関連の XAML 名前空間は、通常、他のアイテムは代替です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName&gt; relies on this ordering.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName&gt;この順序に依存します。&lt;/xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A list of XAML namespace identifiers, as strings.</source>
          <target state="translated">文字列としての XAML 名前空間の識別子の一覧。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>実装します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Because a XAML directive cannot have custom attributes, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">XAML ディレクティブは、カスタム属性を持つことはできません、ため常にこの実装を返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> object, which is used during deferred loading of XAML-declared objects.</source>
          <target state="translated">返します、 <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph>オブジェクトの XAML 宣言の遅延読み込み中に使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Because a directive cannot have deferred loading, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">ディレクティブ遅延読み込みができない、ため常にこの実装を返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns a list of <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">一覧を返します<bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The list reports the members where dependency relationships for initialization order exist relative to this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一覧は、この基準の初期化の順序の依存関係のあるメンバーを報告<bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Because a XAML directive cannot have initialization order, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">XAML ディレクティブは、初期化の順序を持つことはできません、ため常にこの実装を返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is associated with a <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>と関連付けられている、 <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This method may be invoked by calls to &lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;.&lt;/xref:System.Xaml.XamlMember.Invoker%2A&gt;への呼び出しによって呼び出される場合があります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This implementation returns an internal static &lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt; value that is specific to directives in the XAML type system.</source>
          <target state="translated">この実装を返します内部静的&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;値は、XAML 型システムでディレクティブに固有です&lt;/xref:System.Xaml.Schema.XamlMemberInvoker&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> information for this <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>情報<bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is reported as an ambient property.</source>
          <target state="translated">返します。 かどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>はアンビエント プロパティとして報告します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Because a XAML directive cannot be an ambient type, this implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">XAML ディレクティブは、アンビエント型にすることはできません、ため常にこの実装を返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an event.</source>
          <target state="translated">返すかどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベントを表します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an intended read-only property.</source>
          <target state="translated">返します。 かどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>目的の読み取り専用プロパティを表します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By definition, directives are settable.</source>
          <target state="translated">定義上、ディレクティブは設定可能です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">返します。 かどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を持つパブリック プロパティを表す<bpt id="p2">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>アクセサー。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">返すかどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>型およびメンバーの解決に使用されているバックアップ システムによって名前解決ではないメンバーを表します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xaml.XamlDirective&gt; implementation only calls base and does nothing more.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;のみ、この実装では呼び出す基底と以上何も行われません&lt;/xref:System.Xaml.XamlDirective&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;.</source>
          <target state="translated">基底の実装は、この順序で結果を返します。 結果は内部のリフレクション; に基づいてに並べ替えられます。または、結果は&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;。&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;の null 値のチェックに基づきます</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xaml.XamlDirective&gt; implementation seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;実装封印この仮想メンバーですしたがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります。&lt;/xref:System.Xaml.XamlDirective&gt; &lt;/xref:System.Xaml.XamlDirective&gt; 。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a non-resolvable member; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>この場合<bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>以外で解決可能なメンバーを表す、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents an intended write-only property.</source>
          <target state="translated">返します。 かどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>目的書き込み専用プロパティを表します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns whether this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> represents a property that has a public <bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> accessor.</source>
          <target state="translated">返します。 かどうかこの<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を持つパブリック プロパティを表す<bpt id="p2">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>アクセサー。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type where the <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can exist.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>型の場所、 <bpt id="p2">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>存在できます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Target types are not relevant for directives; therefore, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">対象の種類では無関係ディレクティブです。したがって、この実装は常に返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Returns the <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>メンバーによって使用される型。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xaml.XamlDirective&gt; implementation only calls base and does nothing more.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;のみ、この実装では呼び出す基底と以上何も行われません&lt;/xref:System.Xaml.XamlDirective&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The base implementation returns results based either on internal reflection, or checking for a null value of &lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;, processing in that order.</source>
          <target state="translated">基底の実装は、内部リフレクションの場合、またはの null 値のチェックの結果を返します&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;、その順序で処理します&lt;/xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>See Remarks in &lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName&gt; for more information about what information &lt;xref:System.Xaml.XamlMember.Type%2A&gt; carries.</source>
          <target state="translated">「解説」を参照してください&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName&gt;どのような情報の詳細については&lt;xref:System.Xaml.XamlMember.Type%2A&gt;実行します。&lt;/xref:System.Xaml.XamlMember.Type%2A&gt; &lt;/xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the type that is used by the member.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.XamlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>メンバーによって使用される型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns a type converter implementation that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これに関連付けられている型コンバーターの実装を返します<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xaml.XamlDirective&gt; implementation only calls base and does nothing more.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;のみ、この実装では呼び出す基底と以上何も行われません&lt;/xref:System.Xaml.XamlDirective&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName&gt;。&lt;/xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph> instance that has <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constraint; or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Xaml.Schema.XamlValueConverter%601<ph id="ph2">&amp;gt;</ph>を持つインスタンス<bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>制約または<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_get" name="get" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これに関連付けられているアクセサー <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Returns a CLR reflection &lt;xref:System.Reflection.MemberInfo&gt; that is associated with this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">CLR 反射を返します&lt;xref:System.Reflection.MemberInfo&gt;これに関連付けられている<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Reflection.MemberInfo&gt; 。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> accessor that is associated with this <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref uid="langword_csharp_set" name="set" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これに関連付けられているアクセサー <bpt id="p2">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This implementation always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この実装は常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xaml.XamlDirective&gt; seals this virtual member; therefore, all &lt;xref:System.Xaml.XamlDirective&gt; types and all predefined XAML directives must use this behavior.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlDirective&gt;この仮想メンバーをシールします。したがって、すべて&lt;xref:System.Xaml.XamlDirective&gt;型および定義済みのすべての XAML ディレクティブは、この動作を使用する必要があります&lt;/xref:System.Xaml.XamlDirective&gt;。&lt;/xref:System.Xaml.XamlDirective&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この文字列表現を返します<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If XAML namespace information is available, this implementation returns a string combination of &lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt; and &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.</source>
          <target state="translated">XAML 名前空間情報が利用可能な場合は、この実装は文字列&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;と&lt;/xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;を組み合わせた&lt;xref:System.Xaml.XamlMember.Name%2A&gt;。&lt;/xref:System.Xaml.XamlMember.Name%2A&gt;を返します</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If XAML namespace information is unavailable, this implementation returns &lt;xref:System.Xaml.XamlMember.Name%2A&gt;.</source>
          <target state="translated">XAML 名前空間情報が使用できない場合、この実装は&lt;xref:System.Xaml.XamlMember.Name%2A&gt;。&lt;/xref:System.Xaml.XamlMember.Name%2A&gt;を返します</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A string representation of this <bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この文字列表現<bpt id="p1">&lt;xref href="System.Xaml.XamlDirective"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>