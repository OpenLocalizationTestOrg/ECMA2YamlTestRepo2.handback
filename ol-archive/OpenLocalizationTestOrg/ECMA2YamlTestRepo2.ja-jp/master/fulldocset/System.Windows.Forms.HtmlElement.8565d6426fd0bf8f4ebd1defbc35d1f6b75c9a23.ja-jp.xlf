<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cca72bfbc065732ac67a02f263bea26cde81681a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.HtmlElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e951b10964f9c28c71337b568df716dbb0e3aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51ed27020bf2a91581b7cafbd70054d7ae048783</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an HTML element inside of a Web page.</source>
          <target state="translated">Web ページ内の HTML 要素を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>HtmlElement represents any possible type of element in an HTML document, such as <ph id="ph1">`BODY`</ph>, <ph id="ph2">`TABLE`</ph>, and <ph id="ph3">`FORM`</ph>, among others.</source>
          <target state="translated">HtmlElement では、HTML ドキュメント内の要素の可能な型をなどを表す<ph id="ph1">`BODY`</ph>、 <ph id="ph2">`TABLE`</ph>、および<ph id="ph3">`FORM`</ph>、その他。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The class exposes the most common properties you can expect to find on all elements.</source>
          <target state="translated">クラスは、すべての要素を検索する最も一般的なプロパティを公開します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Most elements can have <bpt id="p1">*</bpt>child elements<ept id="p1">*</ept>: other HTML elements that are placed underneath them.</source>
          <target state="translated">ほとんどの要素を持つことができます<bpt id="p1">*</bpt>子要素<ept id="p1">*</ept>: その下に配置されているその他の HTML 要素です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt; property to test whether a given element has children, and the &lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt; collection to iterate through them.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;プロパティを指定された要素がある子かどうかをテストして、&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;それらを反復するコレクション&lt;/xref:System.Windows.Forms.HtmlElement.Children%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt; property returns the HtmlElement in which the current element is nested.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;プロパティは、現在の要素が入れ子になった HtmlElement を返します&lt;/xref:System.Windows.Forms.HtmlElement.Parent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You often need access to attributes, properties, and methods on the underlying element that are not directly exposed by HtmlElement, such as the <ph id="ph1">`SRC`</ph> attribute on an <ph id="ph2">`IMG`</ph> element or the <ph id="ph3">`Submit`</ph> method on a <ph id="ph4">`FORM`</ph>.</source>
          <target state="translated">多くの場合、属性、プロパティ、およびは直接によって公開されていない HtmlElement などを基になる要素のメソッドへのアクセスを必要な<ph id="ph1">`SRC`</ph>属性を<ph id="ph2">`IMG`</ph>要素または<ph id="ph3">`Submit`</ph>メソッドを<ph id="ph4">`FORM`</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt; and &lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt; methods enable you to retrieve and alter any attribute or property on a specific element, while &lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt; provides access to any methods not exposed in the managed Document Object Model (DOM).</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;と&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;を取得し、すべての属性またはの特定の要素のプロパティを変更するメソッドを使用するときに&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;管理対象のドキュメント オブジェクト モデル (DOM) で公開されていないすべてのメソッドへのアクセスを提供します&lt;/xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If your application has unmanaged code permission, you can also access unexposed properties and methods with the &lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt; attribute.</source>
          <target state="translated">場合は、アプリケーションはアンマネージ コードのアクセス許可が、アクセスすることも持つ非公開のプロパティおよびメソッド、&lt;xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;属性&lt;/xref:System.Windows.Forms.HtmlElement.DomElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt; property to test whether an element is of a specific type.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;要素が特定の種類があるかどうかをテストするプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.TagName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Any HTML document can be modified at run time.</source>
          <target state="translated">任意の HTML ドキュメントは、実行時に変更できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can create new HtmlElement objects with the &lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt; method of &lt;xref:System.Windows.Forms.HtmlDocument&gt;, and add them to another element using the &lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt; or &lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt; methods.</source>
          <target state="translated">持つ新しい HtmlElement オブジェクトを作成することができます、&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;メソッドの&lt;xref:System.Windows.Forms.HtmlDocument&gt;、要素を使用して別に追加し、&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;または&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;メソッド&lt;/xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;&lt;/xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also create the elements as HTML tags and assign them to an existing element's &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt; property.</source>
          <target state="translated">また要素として HTML タグを作成し、既存の要素に割り当てることができます&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;プロパティ&lt;/xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of all elements underneath the current element.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の現在の要素の下にあるすべての要素。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To access only those elements which have the current element as their direct parent, use the &lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt; collection instead.</source>
          <target state="translated">現在の要素とその直接の親を持つ要素のみにアクセスするには、使用、&lt;xref:System.Windows.Forms.HtmlElement.Children%2A&gt;コレクション代わりにします&lt;/xref:System.Windows.Forms.HtmlElement.Children%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Elements in this collection will not necessarily be returned in source order.</source>
          <target state="translated">このコレクション内の要素はないソースの順序で返さとは限りません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A collection of all elements that are direct or indirect children of the current element.</source>
          <target state="translated">現在の要素の直接または間接の子であるすべての要素のコレクション。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the current element is a <ph id="ph1">`TABLE`</ph>, for example, All will return every <ph id="ph2">`TH`</ph>, <ph id="ph3">`TR`</ph>, and <ph id="ph4">`TD`</ph> element within the table, as well as any other elements, such as <ph id="ph5">`DIV`</ph> and <ph id="ph6">`SPAN`</ph> elements, contained within the cells.</source>
          <target state="translated">現在の要素がある場合、 <ph id="ph1">`TABLE`</ph>、たとえば、すべて返されますすべて<ph id="ph2">`TH`</ph>、<ph id="ph3">`TR`</ph>と<ph id="ph4">`TD`</ph>などその他の要素を他のテーブル内の要素<ph id="ph5">`DIV`</ph>と<ph id="ph6">`SPAN`</ph>セル内に含まれる要素です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adds an element to another element's subtree.</source>
          <target state="translated">別の要素のサブツリーに要素を追加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The HTML Document Object Model (DOM) enables you to alter the run-time contents of an HTML file in a number of ways.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) では、さまざまな方法で HTML ファイルの実行時の内容を変更することができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use AppendChild to add new elements to an existing document, or to move an element on the page.</source>
          <target state="translated">AppendChild を使用して、既存のドキュメントに新しい要素を追加したり、ページの要素を移動します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If an element has already been parented, appending an element to another element will automatically remove that element from its previous parent.</source>
          <target state="translated">要素は既に親されて、別の要素に要素を追加することは自動的に削除その要素以前の親から。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any additions made to a document at run-time using AppendChild will not be persisted when you call the &lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt; method on the &lt;xref:System.Windows.Forms.WebBrowser&gt; control.</source>
          <target state="translated">実行時にドキュメントに加えられた追加 AppendChild を使用して保持されないを呼び出すとき、&lt;xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;メソッドを&lt;xref:System.Windows.Forms.WebBrowser&gt;コントロール&lt;/xref:System.Windows.Forms.WebBrowser&gt;&lt;/xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to append to this location in the tree.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ツリーで、この位置に追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The element after it has been added to the tree.</source>
          <target state="translated">ツリーに追加された後の要素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds an event handler for a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) で指定したイベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The Managed Document Object Model (DOM) exposes only a select number of events.</source>
          <target state="translated">管理対象のドキュメント オブジェクト モデル (DOM) は、イベントの選択数のみを公開します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Most of the unexposed events are only defined for specific types of elements; such as the <ph id="ph1">`submit`</ph> event, which is valid only on <ph id="ph2">`FORM`</ph> elements.</source>
          <target state="translated">非公開のイベントのほとんどが特定の種類の要素の定義のみなど、<ph id="ph1">`submit`</ph>でのみ有効であるイベント<ph id="ph2">`FORM`</ph>要素。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use AttachEventHandler to add an event handler to these unexposed events.</source>
          <target state="translated">AttachEventHandler を使用して、これらの非公開イベントにイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You should not attach an event to the document or one of its objects until the document has completed loading.</source>
          <target state="translated">ドキュメントの読み込みが完了するまで、ドキュメントまたはそのオブジェクトのいずれかのイベントをアタッチする必要がありますできません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The earliest you should call this method is in the &lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt; event of the &lt;xref:System.Windows.Forms.WebBrowser&gt; control.</source>
          <target state="translated">できるだけ早くこのメソッドを呼び出す必要がありますが、&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;のイベント、&lt;xref:System.Windows.Forms.WebBrowser&gt;コントロール&lt;/xref:System.Windows.Forms.WebBrowser&gt;&lt;/xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information about the available unmanaged events, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and the IHTMLElement interfaces: <bpt id="p2">[</bpt>IHTMLElement<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>, <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>, <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>, <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>.</source>
          <target state="translated">使用可能なアンマネージ イベントの詳細については、次を参照してください。 <bpt id="p1">[</bpt>、管理されている HTML ドキュメント オブジェクト モデルでのへのアクセスの非公開メンバー<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と IHTMLElement インターフェイス: <bpt id="p2">[</bpt>IHTMLElement<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104876)</ept>、 <bpt id="p3">[</bpt>IHTMLElement2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104877)</ept>、 <bpt id="p4">[</bpt>IHTMLElement3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104878)</ept>、 <bpt id="p5">[</bpt>IHTMLElement4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104879)</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name of the event you want to handle.</source>
          <target state="translated">処理するイベントの名前。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The managed code that handles the event.</source>
          <target state="translated">イベントを処理するマネージ コード。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this element can have child elements.</source>
          <target state="translated">この要素が子要素を持つかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Some elements, such as <ph id="ph1">`IMG`</ph> and <ph id="ph2">`SCRIPT`</ph>, cannot have any children.</source>
          <target state="translated">一部の要素など<ph id="ph1">`IMG`</ph>と<ph id="ph2">`SCRIPT`</ph>子を持つことはできません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use this property before you call &lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt; or &lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt; on an arbitrary element.</source>
          <target state="translated">呼び出す前に、このプロパティを使用して&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;または&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;で任意の要素&lt;/xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if element can have child elements; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素が子要素を持つ場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of all children of the current element.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>すべての子の現在の要素。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Many of the elements inside of an HTML file can have other HTML elements underneath them.</source>
          <target state="translated">下にある場合は、他の HTML 要素の HTML ファイル内で要素の多くができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The Children collection provides a simple mechanism for exploring the tree structure of a document.</source>
          <target state="translated">子コレクションでは、ドキュメントのツリー構造を探索するための簡単なメカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Children only exposes elements whose direct parent is the current element.</source>
          <target state="translated">子は、その直接の親が、現在の要素では要素のみを公開します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you have an &lt;xref:System.Windows.Forms.HtmlElement&gt; for a <ph id="ph1">`TABLE`</ph> element, Children will give you all of the <ph id="ph2">`TR`</ph> (row) elements inside of the <ph id="ph3">`TABLE`</ph>.</source>
          <target state="translated">ある場合、&lt;xref:System.Windows.Forms.HtmlElement&gt;の<ph id="ph1">`TABLE`</ph>要素、子が提供するすべての<ph id="ph2">`TR`</ph>(行) の要素の内側、 <ph id="ph3">`TABLE`</ph>&lt;/xref:System.Windows.Forms.HtmlElement&gt; 。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To retrieve the <ph id="ph1">`TD`</ph> (cell) elements contained inside of the <ph id="ph2">`TR`</ph> elements, you will need to use either the Children collection on each individual <ph id="ph3">`TR`</ph> element, or use the &lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt; collection on &lt;xref:System.Windows.Forms.HtmlElement&gt;.</source>
          <target state="translated">取得する、 <ph id="ph1">`TD`</ph> (セル) 要素の内側に含まれる、<ph id="ph2">`TR`</ph>ごとに、いずれかの子コレクションを使用する必要は要素、<ph id="ph3">`TR`</ph>要素、または使用&lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt;&lt;xref:System.Windows.Forms.HtmlElement&gt;&lt;/xref:System.Windows.Forms.HtmlElement&gt;コレクション&lt;/xref:System.Windows.Forms.HtmlElement.All%2A&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Elements in this collection are not guaranteed to be in source order.</source>
          <target state="translated">このコレクション内の要素は、ソースの順序である保証はありません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt; is <ph id="ph1">`false`</ph>, <ph id="ph2">`Children`</ph> will always be empty.</source>
          <target state="translated">場合&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;は<ph id="ph1">`false`</ph>、<ph id="ph2">`Children`</ph>は常に空になります&lt;/xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A collection of all <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that have the current element as a parent.</source>
          <target state="translated">すべてのコレクション<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を親として現在の要素を持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks on the element with the left mouse button.</source>
          <target state="translated">要素をマウスの左ボタンで、ユーザーがクリックしたときに発生します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a Click event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の Click イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A Click event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の Click イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If the user clicks on an element that does not currently have input focus, the Click event will occur after the &lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt; event, but before the &lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt; event for that element.</source>
          <target state="translated">いない現在入力フォーカスを要素に、ユーザーがクリックすると後の Click イベントが発生、&lt;xref:System.Windows.Forms.HtmlElement.Focusing&gt;イベント、その前に、&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;要素のイベントを&lt;/xref:System.Windows.Forms.HtmlElement.LostFocus&gt;&lt;/xref:System.Windows.Forms.HtmlElement.Focusing&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the bounds of the client area of the element in the HTML document.</source>
          <target state="translated">HTML ドキュメント内の要素のクライアント領域の境界を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>ClientRectangle will return position data only for elements that have been assigned an explicit height and width, or elements that use absolute positioning.</source>
          <target state="translated">簡略では、明示的な高さと幅を割り当てられている要素または絶対位置を使用する要素だけの位置データを返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A document is absolutely positioned if its position style is set to <ph id="ph1">`absolute`</ph>, after which it can be positioned at any coordinate on the HTML page.</source>
          <target state="translated">ドキュメントに、位置スタイルが設定されている場合の絶対位置が<ph id="ph1">`absolute`</ph>、することできますに配置する HTML ページ上の任意の座標の後にします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The client area occupied by the element, minus any area taken by borders and scroll bars.</source>
          <target state="translated">任意の領域で、罫線およびスクロール バーがマイナス、要素によって占有されているクライアント領域。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To obtain the position and dimensions of the element inclusive of its adornments, use &lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt; instead.</source>
          <target state="translated">位置と含めた要素の寸法を取得するには使用&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt;代わりにします&lt;/xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Removes an event handler from a named event on the HTML Document Object Model (DOM).</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) で指定したイベントからイベント ハンドラーを削除します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the event you want to handle.</source>
          <target state="translated">処理するイベントの名前。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The managed code that handles the event.</source>
          <target state="translated">イベントを処理するマネージ コード。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which this element belongs.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この要素が属しています。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Some HTML pages can host frames using the <ph id="ph1">`FRAMESET`</ph> tags.</source>
          <target state="translated">一部の HTML ページを使用してフレームをホストできる、<ph id="ph1">`FRAMESET`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this case, each individual <ph id="ph1">`FRAME`</ph> element will contain its own instance of &lt;xref:System.Windows.Forms.HtmlDocument&gt;.</source>
          <target state="translated">この場合、各<ph id="ph1">`FRAME`</ph>要素&lt;xref:System.Windows.Forms.HtmlDocument&gt;.&lt;/xref:System.Windows.Forms.HtmlDocument&gt;の独自のインスタンスには</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This property is most useful when you have received a reference to an element in an event handler from the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;, and need to perform some action on the document in which the element resides.</source>
          <target state="translated">このプロパティは、要素への参照をイベント ハンドラーから受信したときに、最も役に立つ、 &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;、要素が含まれているドキュメントに対して何らかのアクションを実行する必要があります&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The parent document of this element.</source>
          <target state="translated">この要素の親ドキュメント。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets an unmanaged interface pointer for this element.</source>
          <target state="translated">この要素のアンマネージ インターフェイス ポインターを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.HtmlElement&gt; is a wrapper for the Internet Explorer Document Object Model (DOM), which is written using the Component Object Model (COM).</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement&gt;ラッパーの Internet Explorer ドキュメント オブジェクト モデル (DOM)、コンポーネント オブジェクト モデル (COM) を使用して記述されたです。&lt;/xref:System.Windows.Forms.HtmlElement&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you need to access unexposed properties or methods on the underlying COM interfaces, such as <ph id="ph1">`IHTMLElement`</ph>, you can use this object to query for them.</source>
          <target state="translated">など、非公開のプロパティまたはメソッドに、基になる COM インターフェイスにアクセスする必要がある場合<ph id="ph1">`IHTMLElement`</ph>、それらのクエリには、このオブジェクトを使用することができます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>In order to use the unmanaged interfaces, you will need to import the MSHTML library (mshtml.dll) into your application.</source>
          <target state="translated">アンマネージ インターフェイスを使用するのには、アプリケーションに MSHTML ライブラリ (mshtml.dll) をインポートする必要があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, you can also execute unexposed properties and methods using the <ph id="ph1">`Invoke`</ph> method.</source>
          <target state="translated">ただし、実行することも公開されていないプロパティとメソッドを使用して、<ph id="ph1">`Invoke`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The COM <ph id="ph1">`IUnknown`</ph> pointer for the element, which you can cast to one of the HTML element interfaces, such as <ph id="ph2">`IHTMLElement`</ph>.</source>
          <target state="translated">COM<ph id="ph1">`IUnknown`</ph>など、要素は、HTML 要素のいずれかにキャストできますへのポインターがインタ フェース<ph id="ph2">`IHTMLElement`</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks the left mouse button over an element twice, in rapid succession.</source>
          <target state="translated">ユーザーがクリックすると、マウスの左ボタン要素上で&amp;2; 回すばやく連続的に発生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
          <target state="translated">ダブルクリックは、ユーザーのオペレーティング システムのマウス設定によって決まります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
          <target state="translated">ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリックの間隔を設定できます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a DoubleClick event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して要素を DoubleClick イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A DoubleClick event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素を DoubleClick イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags text to various locations.</source>
          <target state="translated">ユーザーは、さまざまな場所にテキストをドラッグしたときに発生します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This event occurs when text is dragged to the following locations:      -   Within or between HTML pages hosted in the &lt;xref:System.Windows.Forms.WebBrowser&gt; control or Internet Explorer      -   To another application      -   To the Windows desktop       You can cancel the default action for a Drag event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">テキストが次の場所にドラッグされたときに、このイベントが発生する: - 内または HTML ページでホストされている間、&lt;xref:System.Windows.Forms.WebBrowser&gt;コントロールまたは Windows に Internet Explorer の別のアプリケーションのデスクトップを設定して要素をドラッグ イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;&lt;/xref:System.Windows.Forms.WebBrowser&gt;。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A Drag event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素をドラッグ イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Occurs when a user finishes a drag operation.</source>
          <target state="translated">ユーザーがドラッグ操作を終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a DragEnd event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して要素を DragEnd イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A DragEnd event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素に DragEnd イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Occurs when the user is no longer dragging an item over this element.</source>
          <target state="translated">ユーザーがこの要素上で項目のドラッグ不要になったときに発生します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags text over the element.</source>
          <target state="translated">ユーザーが要素上でテキストをドラッグしたときに発生します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a DragOver event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して要素にドラッグされたイベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A DragOver event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素にドラッグされたイベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the user can input data into this element.</source>
          <target state="translated">取得またはユーザーがこの要素にデータを入力できるかどうかを設定します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`FORM`</ph> elements such as text boxes and radio buttons, setting Enabled to <ph id="ph2">`false`</ph> will prevent the user from using these form fields.</source>
          <target state="translated"><ph id="ph1">`FORM`</ph>などのテキスト ボックス、ラジオ ボタン、有効要素<ph id="ph2">`false`</ph>ユーザーがフォームのフィールドを使用できなくなります。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For other elements, such as <ph id="ph1">`DIV`</ph> or <ph id="ph2">`SPAN`</ph>, setting Enabled to <ph id="ph3">`false`</ph> will cause all text within the element to appear shaded; however, the text will still be selectable.</source>
          <target state="translated">他の要素など<ph id="ph1">`DIV`</ph>または<ph id="ph2">`SPAN`</ph>、有効<ph id="ph3">`false`</ph>灰色表示にすると、要素内のすべてのテキストになります。 ただし、テキストがまだ選択可能です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To cancel selection, add an event handler for the unexposed <ph id="ph1">`onselectstart`</ph> event using the &lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt; method.</source>
          <target state="translated">選択を解除する、非公開のイベント ハンドラーを追加<ph id="ph1">`onselectstart`</ph>イベントを使用して、&lt;xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;メソッド&lt;/xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A&gt;。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element allows user input; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がユーザーの入力を受け付ける場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Tests if the supplied object is equal to the current element.</source>
          <target state="translated">指定したオブジェクトが現在の要素と等しいかどうか。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The object to test for equality.</source>
          <target state="translated">等しいかどうかをテストするオブジェクト。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is an <bpt id="p3">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p2">&lt;/code&gt;</ept> is an <bpt id="p3">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the next element below this element in the document tree.</source>
          <target state="translated">ドキュメント ツリーにおいてこの要素の下の次の要素を取得します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Use FirstChild in conjunction with &lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt; to walk the document tree for an HTML document.</source>
          <target state="translated">FirstChild を使用すると組み合わせて&lt;xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;を HTML ドキュメントに、ドキュメント ツリーをウォークします&lt;/xref:System.Windows.Forms.HtmlElement.NextSibling%2A&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the first element contained underneath the current element, in source order.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ソースの順序で、現在の要素の下にある最初の要素を表すです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Puts user input focus on the current element.</source>
          <target state="translated">現在の要素には、ユーザーの入力フォーカスを設定します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Setting the focus on an element both gives that element focus and makes it the active element; for example, the element that has focus will be returned by the &lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt; property of &lt;xref:System.Windows.Forms.HtmlDocument&gt;.</source>
          <target state="translated">要素にフォーカスを設定とその要素にフォーカスが移動の両方のアクティブな要素になりますフォーカスを持つ要素が&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;&lt;xref:System.Windows.Forms.HtmlDocument&gt;。&lt;/xref:System.Windows.Forms.HtmlDocument&gt;プロパティ&lt;/xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;によって返されるなど、</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Any key strokes entered by a user after Focus has been called will be sent to that element.</source>
          <target state="translated">フォーカスが呼び出された後に、ユーザーが入力した任意のキー ストロークは、その要素に送信されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Occurs when the element first receives user input focus.</source>
          <target state="translated">要素が初めてユーザーの入力フォーカスを得たときに発生します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An element that had focus before the user switched to another application using the taskbar or the ALT+TAB keys will receive the Focusing and &lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt; events again when the user switches back to your application.</source>
          <target state="translated">タスク バーまたは alt キーを押しながら TAB キーを使用して別のアプリケーションに切り替え、ユーザーは、Focusing を受け取る前にフォーカスがあった要素および&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;イベント再度ときにユーザーを切り替える、アプリケーションに戻す&lt;/xref:System.Windows.Forms.HtmlElement.GotFocus&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>You cannot cancel the default behavior of this event.</source>
          <target state="translated">このイベントの既定の動作を取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>To remove focus from an element, call &lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt; on a different element from within the &lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt; event.</source>
          <target state="translated">フォーカスを要素から削除するには、呼び出す&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;内から別の要素で、&lt;xref:System.Windows.Forms.HtmlElement.GotFocus&gt;イベント&lt;/xref:System.Windows.Forms.HtmlElement.GotFocus&gt;&lt;/xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A Focusing event on an element will also occur on that element's parents and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親とも要素に Focusing イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the named attribute on the element.</source>
          <target state="translated">要素の名前付き属性の値を取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An attribute in HTML is any valid name/value pair for that element.</source>
          <target state="translated">HTML 内の属性は、その要素のいずれかの有効な名前/値ペアです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.HtmlElement&gt; exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph1">`SRC`</ph> is a predefined attribute for the <ph id="ph2">`IMG`</ph> tag, for example, but not for the <ph id="ph3">`DIV`</ph> tag.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement&gt;要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。<ph id="ph1">`SRC`</ph>の定義済み属性は、<ph id="ph2">`IMG`</ph>などのタグのではなく、<ph id="ph3">`DIV`</ph>タグ。&lt;/xref:System.Windows.Forms.HtmlElement&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Use GetAttribute and &lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt; to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">GetAttribute を使用し、&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作する&lt;/xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>GetAttribute and &lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt; are case-insensitive.</source>
          <target state="translated">GetAttribute と&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;小文字は区別されません&lt;/xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The name of the attribute.</source>
          <target state="translated">属性の名前です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This argument is case-insensitive.</source>
          <target state="translated">この引数は区別されません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The value of this attribute on the element, as a &lt;xref:System.String&gt; value.</source>
          <target state="translated">この要素、属性の値として、&lt;xref:System.String&gt;値&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If the specified attribute does not exist on this element, returns an empty string.</source>
          <target state="translated">この要素で指定した属性が存在しない場合は、空の文字列を返します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of elements represented in HTML by the specified <ph id="ph1">`HTML`</ph> tag.</source>
          <target state="translated">指定した html 形式で表される要素のコレクションを取得して<ph id="ph1">`HTML`</ph>タグ。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The name of the tag whose <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects you wish to retrieve.</source>
          <target state="translated">タグの名前が<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing all elements whose <ph id="ph1">`HTML`</ph> tag name is equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">tagName</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を含むすべての要素が<ph id="ph1">`HTML`</ph>タグ名と等しい<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">tagName</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">特定の種類のハッシュ関数として機能します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A hash code for the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">現在&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;のハッシュ コード</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Occurs when the element has received user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを得たときに発生します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>You can neither cancel this event's default behavior, nor prevent it from bubbling.</source>
          <target state="translated">このイベントの既定の動作をキャンセルも、バブルを防止します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To remove focus from an element, call &lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt; on a different element from within the GotFocus event.</source>
          <target state="translated">フォーカスを要素から削除するには、呼び出す&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;から GotFocus イベント内の異なる要素上です&lt;/xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets a label by which to identify the element.</source>
          <target state="translated">取得または設定を要素を識別するラベル。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Id must be unique; you cannot have two elements with the same Id inside of the same document.</source>
          <target state="translated">Id は一意である必要があります。2 つの要素の同じドキュメント内で同じ Id を持つことはできません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt; property to give the same identifier to a group of logically related elements.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Forms.HtmlElement.Name%2A&gt;論理的に関連する要素のグループに同じ識別子を指定するプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The unique identifier for the element.</source>
          <target state="translated">要素の一意の識別子。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTML markup underneath this element.</source>
          <target state="translated">取得またはこの要素の下位にある HTML マークアップを設定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>There are several ways to add new elements to an existing HTML page, such as the &lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt; and &lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt; methods.</source>
          <target state="translated">いくつかの方法など、既存の HTML ページに新しい要素を追加する、&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;と&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;メソッド&lt;/xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Using InnerHtml is often the fastest way to add new content when you have to set many attributes or styles on your new elements.</source>
          <target state="translated">InnerHtml を使用することは、新しい要素で多くの属性またはスタイルを設定する必要があるときに、新しいコンテンツを追加する最も簡単な方法では多くの場合です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>InnerHtml differs from &lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt; in that InnerHtml will not include the HTML that represents the object you are calling.</source>
          <target state="translated">InnerHtml とは異なります&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;を呼び出している InnerHtml には、オブジェクトを表す HTML に含めないことで&lt;/xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt; for more information about the difference between these two properties.</source>
          <target state="translated">参照してください&lt;xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;これら&amp;2; つのプロパティの違いの詳細についてはします&lt;/xref:System.Windows.Forms.HtmlElement.OuterHtml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Setting InnerHtml destroys any children previously appended to the element.</source>
          <target state="translated">InnerHtml を設定すると、要素に追加されるすべての子が破棄されます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If you retrieve an element from the DOM and then assign new HTML to its parents' InnerHtml property, your reference to that element will be useless, and its behavior when it calls its properties and methods is undefined.</source>
          <target state="translated">DOM から要素を取得して新しい HTML を親の InnerHtml プロパティに割り当てる場合その要素への参照は役に立たない、されプロパティとメソッドを呼び出すときは、その動作は未定義です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For some elements, setting InnerHtml is not a valid operation.</source>
          <target state="translated">一部の要素の InnerHtml の設定、有効な操作ではありません。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Some HTML tags have no closing tag, such as the <ph id="ph1">`IMG`</ph> tag, and therefore cannot contain nested elements.</source>
          <target state="translated">複数の HTML タグなし終了タグを持つ、ように、<ph id="ph1">`IMG`</ph>タグ、およびそのため、入れ子になった要素を含めることはできません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Some tags, such as the <ph id="ph1">`SCRIPT`</ph> tag, can only contain text content; setting InnerHtml will result in an error.</source>
          <target state="translated">などのいくつかのタグ、<ph id="ph1">`SCRIPT`</ph>タグ、テキスト コンテンツ; InnerHtml の設定エラーが発生のみを含めることができます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For both types of tags, the &lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt; property will return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">両方の種類、タグの&lt;xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;が返される<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>However, you also cannot set InnerHtml on <ph id="ph1">`TABLE`</ph> and <ph id="ph2">`TR`</ph> elements, as assigning malformed HTML to these elements could corrupt the rendering of the document.</source>
          <target state="translated">ただし、設定することもできません InnerHtml で<ph id="ph1">`TABLE`</ph>と<ph id="ph2">`TR`</ph>要素は、これらの要素への不正な HTML の割り当てとは、ドキュメントのレンダリングを壊れる可能性があります。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt; or the <ph id="ph1">`insertRow`</ph> and <ph id="ph2">`insertCell`</ph> methods on the unmanaged <ph id="ph3">`IHTMLTable`</ph> interface to add rows and cells to a <ph id="ph4">`TABLE`</ph>.</source>
          <target state="translated">使用して&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;または<ph id="ph1">`insertRow`</ph>と<ph id="ph2">`insertCell`</ph>アンマネージ メソッド<ph id="ph3">`IHTMLTable`</ph>インターフェイスを追加する行や、行のセル、 <ph id="ph4">`TABLE`</ph>&lt;/xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If you need only to assign text to an element and not HTML markup, use the &lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt; property instead.</source>
          <target state="translated">要素といない HTML マークアップにテキストを割り当てる場合にのみ必要がある場合、&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;プロパティ代わりにします&lt;/xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Assigning a value to InnerHtml will destroy any text values previously assigned using &lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;.</source>
          <target state="translated">InnerHtml に値を割り当てると、テキスト値を使用して割り当てられていた&lt;xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;。&lt;/xref:System.Windows.Forms.HtmlElement.InnerText%2A&gt;が破棄されます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The HTML markup that defines the child elements of the current element.</source>
          <target state="translated">現在の要素の子要素を定義する HTML マークアップ。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Creating child elements on this element is not allowed.</source>
          <target state="translated">この要素の子要素を作成することはできません。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets or sets the text assigned to the element.</source>
          <target state="translated">取得または要素に割り当てられたテキストを設定します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If you attempt to assign HTML to an element with InnerText, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">InnerText を持つ要素に HTML を割り当てるしようとする場合は、テキスト ファイル内で HTML を表示していた場合と同様、ドキュメント内でリテラルとして HTML コードが表示されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If you assign HTML to an element using the &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt; property, InnerText will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML 要素を使用して、割り当てた場合、&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;プロパティ、InnerText を返しますのすべてのテキストを使用して HTML マークアップを削除します&lt;/xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Assigning a value to InnerText will destroy any child elements that belong to the element.</source>
          <target state="translated">InnerText に値を代入すると、要素に属しているすべての子要素が破棄されます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The element's text, absent any HTML markup.</source>
          <target state="translated">すべての HTML マークアップの存在しない要素のテキスト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If the element contains child elements, only the text in those child elements will be preserved.</source>
          <target state="translated">要素に子要素が含まれている場合は、それらの子要素のテキストのみが保持されます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The specified element cannot contain text (for example, an <ph id="ph1">`IMG`</ph> element).</source>
          <target state="translated">指定した要素にテキストを含めることはできません (たとえば、<ph id="ph1">`IMG`</ph>要素)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Insert a new element into the Document Object Model (DOM).</source>
          <target state="translated">ドキュメント オブジェクト モデル (DOM) に新しい要素を挿入します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Do not call this method until after the &lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt; event on the &lt;xref:System.Windows.Forms.WebBrowser&gt; control has occurred.</source>
          <target state="translated">後までは、このメソッドを呼び出す必要はありません、&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;でイベントを&lt;xref:System.Windows.Forms.WebBrowser&gt;コントロールが発生しました&lt;/xref:System.Windows.Forms.WebBrowser&gt;&lt;/xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Calling this method before then can result in an exception, as the document will not have finished loading.</source>
          <target state="translated">その前にこのメソッドを呼び出すとすると、ドキュメントの読み込みが終了しないに、例外が発生することができます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Whether a value of &lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt; is valid will depend on the type of the element.</source>
          <target state="translated">値かどうか&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;が有効では、要素の型によって異なります&lt;/xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>For example, &lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt; is valid if the element is a <ph id="ph1">`DIV`</ph>, but not if it is a <ph id="ph2">`SCRIPT`</ph> or <ph id="ph3">`IMG`</ph> element, neither of which can contain child elements.</source>
          <target state="translated">たとえば、&lt;xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;場合は、要素が有効では、<ph id="ph1">`DIV`</ph>がない場合は、<ph id="ph2">`SCRIPT`</ph>または<ph id="ph3">`IMG`</ph>要素の子要素を含めることができます&lt;/xref:System.Windows.Forms.HtmlElementInsertionOrientation&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Where to insert this element in relation to the current element.</source>
          <target state="translated">現在の要素に関連して、この要素を挿入する位置です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The new element to insert.</source>
          <target state="translated">挿入する新しい要素。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was just inserted.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>挿入されました。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If insertion failed, this will return <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">挿入が失敗したかどうか、これが返されます<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Executes an unexposed method on the underlying DOM element of this element.</source>
          <target state="translated">この要素の基になる DOM 要素に対して非公開メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Use this version of InvokeMember to execute unexposed methods that take no arguments.</source>
          <target state="translated">InvokeMember のこのバージョンを使用して、引数を受け取らない非公開メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;.</source>
          <target state="translated">例については、 &lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;。&lt;/xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">プロパティまたは呼び出すメソッドの名前。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The element returned by this method, represented as an &lt;xref:System.Object&gt;.</source>
          <target state="translated">このメソッドによって返される要素が&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;として表されます</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>If this &lt;xref:System.Object&gt; is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated">この場合&lt;xref:System.Object&gt;の参照を使用して別の HTML 要素には、アンマネージ MSHTML ライブラリ プロジェクトに追加することができますにキャストする適切なアンマネージ インターフェイス&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Executes a function defined in the current HTML page by a scripting language.</source>
          <target state="translated">現在の HTML ページで、スクリプト言語によって定義された関数を実行します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This method can be used to call methods from the Document Object Model (DOM) that do not have equivalents in managed code.</source>
          <target state="translated">このメソッドは、メソッドがない対応するマネージ コードでドキュメント オブジェクト モデル (DOM) からの呼び出しに使用できます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>All arguments supplied to InvokeMember will be converted to Win32 <ph id="ph1">`VARIANT`</ph> data types before they are passed to the named scripting function.</source>
          <target state="translated">InvokeMember に指定されたすべての引数は Win32 に変換されます<ph id="ph1">`VARIANT`</ph>データ型、名前付きスクリプト関数に渡される前にします。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The name of the property or method to invoke.</source>
          <target state="translated">プロパティまたは呼び出すメソッドの名前。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A list of parameters to pass.</source>
          <target state="translated">渡すパラメーターの一覧。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The element returned by the function, represented as an &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;として表される、関数によって返される要素</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If this &lt;xref:System.Object&gt; is another HTML element, and you have a reference to the unmanaged MSHTML library added to your project, you can cast it to its appropriate unmanaged interface.</source>
          <target state="translated">この場合&lt;xref:System.Object&gt;の参照を使用して別の HTML 要素には、アンマネージ MSHTML ライブラリ プロジェクトに追加することができますにキャストする適切なアンマネージ インターフェイス&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Occurs when the user presses a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを押したときに発生します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>KeyDown occurs before &lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;, which in turns occurs before &lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;.</source>
          <target state="translated">KeyDown が&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;。&lt;/xref:System.Windows.Forms.HtmlElement.KeyUp&gt;の前に発生でになり、&lt;/xref:System.Windows.Forms.HtmlElement.KeyPress&gt;前に発生します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a KeyDown event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の KeyDown イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A KeyDown event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の KeyDown イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Occurs when the user presses and releases a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを押して離したときに発生します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>KeyPress occurs after &lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt; and before &lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;.</source>
          <target state="translated">Keypress イベントとそれに続く&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;&lt;xref:System.Windows.Forms.HtmlElement.KeyUp&gt;。&lt;/xref:System.Windows.Forms.HtmlElement.KeyUp&gt;前に&lt;/xref:System.Windows.Forms.HtmlElement.KeyDown&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a KeyPress event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の KeyPress イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A KeyPress event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の KeyPress イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Occurs when the user releases a key on the keyboard.</source>
          <target state="translated">ユーザーがキーボードのキーを離したときに発生します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>KeyUp occurs after &lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;, which occurs after &lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;.</source>
          <target state="translated">KeyUp とそれに続く&lt;xref:System.Windows.Forms.HtmlElement.KeyPress&gt;&lt;xref:System.Windows.Forms.HtmlElement.KeyDown&gt;。&lt;/xref:System.Windows.Forms.HtmlElement.KeyDown&gt;後に発生する、&lt;/xref:System.Windows.Forms.HtmlElement.KeyPress&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A KeyUp event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の KeyUp イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Occurs when the element is losing user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを失うと発生します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Occurs when the element has lost user input focus.</source>
          <target state="translated">要素がユーザーの入力フォーカスを失ったときに発生します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An element will no longer receive key stroke events after LostFocus occurs until it is given focus again, either by the user selecting it on the page or by the application calling the &lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt; method on that element.</source>
          <target state="translated">要素は LostFocus は、指定されるまで、フォーカスもう一度、ページを選択すると、ユーザーまたはアプリケーションの呼び出し元のいずれかが発生した後、キー ストローク イベントを受信しなく、&lt;xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;その要素のメソッド&lt;/xref:System.Windows.Forms.HtmlElement.Focus%2A&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An LostFocus event on an element will also occur on that element's parents and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親とも要素を LostFocus イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Occurs when the user presses a mouse button.</source>
          <target state="translated">ユーザーがマウス ボタンを押したときに発生します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a MouseDown event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の MouseDown イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A MouseDown event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の MouseDown イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Occurs when the user first moves the mouse cursor over the current element.</source>
          <target state="translated">ユーザーが、現在の要素上最初、マウス カーソルを移動したときに発生します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Occurs when the user moves the mouse cursor off of the current element.</source>
          <target state="translated">現在の要素からマウス カーソルを動かしたときに発生します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Occurs when the user moves the mouse cursor across the element.</source>
          <target state="translated">要素にマウス カーソルを動かしたときに発生します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>You cannot cancel this event.</source>
          <target state="translated">このイベントを取り消すことはできません。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A MouseMove event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の MouseMove イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse cursor enters the bounds of the element.</source>
          <target state="translated">マウス カーソルが要素の境界に入ったときに発生します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a MouseOver event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の MouseOver イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A MouseOver event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の MouseOver イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Occurs when the user releases a mouse button.</source>
          <target state="translated">ユーザーがマウス ボタンを離したときに発生します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>You can cancel the default action for a MouseUp event on an element by setting the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、要素の MouseUp イベントの既定のアクションを取り消すことができます、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A MouseUp event on an element will also occur on that element's parent elements and on the &lt;xref:System.Windows.Forms.HtmlDocument&gt; class itself, unless you set the &lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt; property of the &lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt; class to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">その要素の親要素とも要素の MouseUp イベントが発生、&lt;xref:System.Windows.Forms.HtmlDocument&gt;設定していない場合それ自体には、クラス、&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;のプロパティ、&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;クラスを<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.HtmlElementEventArgs&gt;&lt;/xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;&lt;/xref:System.Windows.Forms.HtmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>For more information about the difference between canceling event bubbling and canceling the default action on an event, see <bpt id="p1">[</bpt>About the DHTML Object Model<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>.</source>
          <target state="translated">バブルのイベントとイベントの既定の操作をキャンセルの取り消しの違いの詳細については、次を参照してください。 <bpt id="p1">[</bpt>DHTML オブジェクト モデルについて<ept id="p1">](http://msdn.microsoft.com/library/ms533022.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the element.</source>
          <target state="translated">取得または要素の名前を設定します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Use the Name property to retrieve elements from a document using the &lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt; method on the &lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt; property of &lt;xref:System.Windows.Forms.HtmlDocument&gt;.</source>
          <target state="translated">Name プロパティを使用して、 &lt;xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt; &lt;xref:System.Windows.Forms.HtmlElement.All%2A&gt; &lt;xref:System.Windows.Forms.HtmlDocument&gt;。&lt;/xref:System.Windows.Forms.HtmlDocument&gt;のプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.All%2A&gt;のメソッド&lt;/xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A&gt;を使用してドキュメントから要素を取得するには</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>When applied to <ph id="ph1">`INPUT`</ph> elements, Name defines the variable name for that element's data when its form is submitted to the server.</source>
          <target state="translated">適用すると<ph id="ph1">`INPUT`</ph>要素、名前変数名を定義する要素のデータにそのフォームがサーバーに送信されるときにします。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; representing the element's name.</source>
          <target state="translated">A&lt;xref:System.String&gt;要素の名前を表すします&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets the next element at the same level as this element in the document tree.</source>
          <target state="translated">ドキュメント ツリーにおいてこの要素と同じレベルには、次の要素を取得します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Use NextSibling in conjunction with &lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt; to walk the document tree for an HTML element.</source>
          <target state="translated">組み合わせて使用 NextSibling&lt;xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;を HTML 要素、ドキュメント ツリーをウォークします&lt;/xref:System.Windows.Forms.HtmlElement.FirstChild%2A&gt;。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the element to the right of the current element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の現在の要素の右側にある要素を表すです。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets the element from which &lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt; is calculated.</source>
          <target state="translated">元の要素を取得&lt;xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt;計算されます&lt;/xref:System.Windows.Forms.HtmlElement.OffsetRectangle*&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Elements can be positioned on an HTML page in one of three ways: default flow positioning; relative positioning, in which the element is offset by a fixed amount relative to its parent; and absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます。 既定のフローは次の位置です。相対位置で親; に対して、固定量でオフセットが、要素絶対位置とする要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>When a document's elements use relative or absolute positioning, you can use <ph id="ph1">`OffsetParent`</ph> to calculate an element's coordinate position in the client area.</source>
          <target state="translated">ドキュメントの要素は、相対位置または絶対位置を使用して、ときに行うこともできます<ph id="ph1">`OffsetParent`</ph>クライアント領域内の要素の座標位置を計算します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">要素の詳細については、HTML での配置を参照してください<bpt id="p1">[</bpt>要素の配置に関する<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The element from which the offsets are calculated.</source>
          <target state="translated">オフセットの計算元となる要素。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>If an element's parent or another element in the element's hierarchy uses relative or absolute positioning, <bpt id="p1">&lt;xref uid="langword_csharp_OffsetParent" name="OffsetParent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will be the first relatively or absolutely positioned element in which the current element is nested.</source>
          <target state="translated">要素の親、または要素の階層内の別の要素は、相対位置または絶対位置を使用している場合<bpt id="p1">&lt;xref uid="langword_csharp_OffsetParent" name="OffsetParent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>の現在の要素が入れ子になった最初の比較的または絶対位置の要素になります。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>If none of the elements above the current element are absolutely or relatively positioned, <bpt id="p1">&lt;xref uid="langword_csharp_OffsetParent" name="OffsetParent" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will be the <ph id="ph1">`BODY`</ph> tag of the document.</source>
          <target state="translated">現在の要素の上位要素なしは絶対的または相対的にある場合、 <bpt id="p1">&lt;xref uid="langword_csharp_OffsetParent" name="OffsetParent" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>なります、<ph id="ph1">`BODY`</ph>ドキュメントのタグ。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets the location of an element relative to its parent.</source>
          <target state="translated">親を基準として要素の位置を取得します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Elements can be positioned on an HTML page in one of three ways:      -   Default flow positioning.</source>
          <target state="translated">要素は、3 つの方法のいずれかで HTML ページに配置されていることができます:-既定のフローを配置します。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-   Relative positioning, in which the element is offset by a fixed amount relative to its parent.</source>
          <target state="translated">相対位置では、その親の基準とした、固定量でオフセットが、要素でします。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>-   Absolute positioning, in which the element is given a fixed coordinate position relative to the upper-left corner of the document.</source>
          <target state="translated">絶対位置を要素が指定された固定のドキュメントの左上隅に対する相対位置を調整します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>For more information about element positioning in HTML, see <bpt id="p1">[</bpt>About Element Positioning<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>.</source>
          <target state="translated">要素の詳細については、HTML での配置を参照してください<bpt id="p1">[</bpt>要素の配置に関する<ept id="p1">](http://msdn.microsoft.com/library/ms533005.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The x- and y-coordinate positions of the element, and its width and its height, in relation to its parent.</source>
          <target state="translated">要素、およびその幅と高さ、その親との関連の x 座標と y 座標位置。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If an element's parent is relatively or absolutely positioned, OffsetRectangle will return the offset of the parent element.</source>
          <target state="translated">要素の親は比較的または絶対位置を OffsetRectangle は親要素のオフセットを返します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>If the element itself is relatively positioned with respect to its parent, OffsetRectangle will return the offset from its parent.</source>
          <target state="translated">要素自体は比較的にある場合、親に関して、OffsetRectangle はその親からのオフセットを返します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Compares two elements for equality.</source>
          <target state="translated">2 つの要素が等しいかどうかを比較します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The equality operator tests the <ph id="ph1">`IUnknown`</ph> pointers of the underlying COM objects wrapped by the supplied &lt;xref:System.Windows.Forms.HtmlElement&gt; classes.</source>
          <target state="translated">等値演算子のテスト、<ph id="ph1">`IUnknown`</ph>基になるに指定されたによってラップされた COM オブジェクトのポインター&lt;xref:System.Windows.Forms.HtmlElement&gt;クラス&lt;/xref:System.Windows.Forms.HtmlElement&gt;。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">最初の<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">2 番目<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if both parameters are <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or if both elements have the same underlying COM interface; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>両方のパラメーターが場合<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、または両方の要素がある同一の基になる COM インターフェイスです。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Compares two <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects for inequality.</source>
          <target state="translated">比較する&amp;2; つ<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>の非等値オブジェクトです。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The first <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">最初の<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The second <bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">2 番目<bpt id="p1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is only one element is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or the two objects are not equal; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>1 つだけの要素は<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、2 つのオブジェクトが等しくない。 それ以外の場合、または<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Gets or sets the current element's HTML code.</source>
          <target state="translated">取得または現在の要素の HTML コードを設定します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Whereas &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt; will return all HTML contained in the current element excluding the current element's surrounding tags, OuterHtml includes the current element's tag as well as the HTML that tag contains, for example:       <ph id="ph1">`&lt;HTML&gt;`</ph>       <ph id="ph2">`&lt;BODY&gt;`</ph>       <ph id="ph3">`&lt;DIV id="div1"&gt;`</ph>       <ph id="ph4">`Hello`</ph>       <ph id="ph5">`&lt;DIV id="div2"&gt;`</ph>       <ph id="ph6">`World`</ph>       <ph id="ph7">`&lt;DIV id="div3"&gt;`</ph>       <ph id="ph8">`How are you?`</ph>       <ph id="ph9">`&lt;/DIV&gt;`</ph>       <ph id="ph10">`&lt;/DIV&gt;`</ph>       <ph id="ph11">`&lt;/DIV&gt;`</ph>       <ph id="ph12">`&lt;/BODY&gt;`</ph>       <ph id="ph13">`&lt;/HTML&gt;`</ph>       In this example, calling OuterHtml on <ph id="ph14">`div2`</ph> will return:       <ph id="ph15">`&lt;DIV id="div2"&gt;`</ph>       <ph id="ph16">`World`</ph>       <ph id="ph17">`&lt;DIV id="div3"&gt;`</ph>       <ph id="ph18">`How are you?`</ph>       <ph id="ph19">`&lt;/DIV&gt;`</ph>       <ph id="ph20">`&lt;/DIV&gt;`</ph>       Calling &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt; will return:       <ph id="ph21">`World`</ph>       <ph id="ph22">`&lt;DIV id="div3"&gt;`</ph>       <ph id="ph23">`How are you?`</ph>       <ph id="ph24">`&lt;/DIV&gt;`</ph>       If you assign a new value to OuterHtml, the current element reference will become invalid; it will not reflect the name, properties and child content of the HTML you have just assigned.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;には、現在の要素の周囲のタグを除く、現在の要素に含まれるすべての HTML を返しますが、一方 OuterHtml には、現在の要素のタグとタグを含む、たとえば HTML: <ph id="ph1">`&lt;HTML&gt;`</ph> <ph id="ph2">`&lt;BODY&gt;`</ph> <ph id="ph3">`&lt;DIV id="div1"&gt;`</ph> <ph id="ph4">`Hello`</ph> <ph id="ph5">`&lt;DIV id="div2"&gt;`</ph> <ph id="ph6">`World`</ph> <ph id="ph7">`&lt;DIV id="div3"&gt;`</ph> <ph id="ph8">`How are you?`</ph> <ph id="ph9">`&lt;/DIV&gt;`</ph> <ph id="ph10">`&lt;/DIV&gt;`</ph> <ph id="ph11">`&lt;/DIV&gt;`</ph> <ph id="ph12">`&lt;/BODY&gt;`</ph> <ph id="ph13">`&lt;/HTML&gt;`</ph> OuterHtml を呼び出すことで、この例では<ph id="ph14">`div2`</ph>が返されます: <ph id="ph15">`&lt;DIV id="div2"&gt;`</ph> <ph id="ph16">`World`</ph> <ph id="ph17">`&lt;DIV id="div3"&gt;`</ph> <ph id="ph18">`How are you?`</ph> <ph id="ph19">`&lt;/DIV&gt;`</ph> <ph id="ph20">`&lt;/DIV&gt;`</ph> &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;の呼び出しが返されます: <ph id="ph21">`World`</ph> <ph id="ph22">`&lt;DIV id="div3"&gt;`</ph> <ph id="ph23">`How are you?`</ph> <ph id="ph24">`&lt;/DIV&gt;`</ph> OuterHtml に新しい値を代入する場合、現在の要素の参照が無効になります名前が反映されません。でのみ割り当てられている HTML のプロパティと子のコンテンツ。                     &lt;/xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;                                                                                                                        &lt;/xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The HTML code for the current element and its children.</source>
          <target state="translated">現在の要素とその子の HTML コード。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Gets or sets the current element's text.</source>
          <target state="translated">取得または現在の要素のテキストを設定します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>If you attempt to assign HTML to an element with OuterText, the HTML code will display as literals in the document, just as if you were viewing HTML within a text file.</source>
          <target state="translated">OuterText を持つ要素に HTML を割り当てようとする場合は、テキスト ファイル内で HTML を表示していた場合と同様、ドキュメント内でリテラルとして HTML コードが表示されます。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>If you assign HTML to an element using the &lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt; property, OuterText will return all of the text in that HTML with the markup removed.</source>
          <target state="translated">HTML 要素を使用して、割り当てた場合、&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;プロパティ、OuterText を返しますのすべてのテキストを使用して HTML マークアップを削除します&lt;/xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Assigning a value to OuterText will destroy any child elements that belong to the element.</source>
          <target state="translated">OuterText に値を代入すると、要素に属しているすべての子要素が破棄されます。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The text inside the current element, and in the element's children.</source>
          <target state="translated">現在の要素および要素の子のテキスト。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>You cannot set text outside of this element.</source>
          <target state="translated">この要素外のテキストを設定することはできません。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Gets the current element's parent element.</source>
          <target state="translated">現在の要素の親要素を取得します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The Parent property enables discovery of an element's context.</source>
          <target state="translated">親プロパティでは、要素のコンテキストの検出を使用します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>It is most useful inside of event handlers such as &lt;xref:System.Windows.Forms.HtmlElement.Click&gt;, which can fire for any element anywhere in the document's object hierarchy.</source>
          <target state="translated">イベント ハンドラー内で最も役に立つよう&lt;xref:System.Windows.Forms.HtmlElement.Click&gt;、ドキュメントのオブジェクト階層の任意の場所の任意の要素が起動することができます&lt;/xref:System.Windows.Forms.HtmlElement.Click&gt;。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The Parent property of the HTML element (the top of an HTML document) points back to itself.</source>
          <target state="translated">HTML 要素 (HTML ドキュメントの上部) の親プロパティは、それ自体へポイントします。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If you call Parent inside a loop, verify that the loop's break condition compares the type of the current element and the type of the <ph id="ph1">`Parent`</ph> property, or else your code may execute an infinite loop.</source>
          <target state="translated">ループ内親を呼び出した場合、ループのブレークの条件が、現在の要素の型との種類を比較することを確認、<ph id="ph1">`Parent`</ph>プロパティ、またはそうしないと、コードが無限ループを実行できます。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The element above the current element in the HTML document's hierarchy.</source>
          <target state="translated">HTML ドキュメントの階層で現在の要素の上位要素です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Causes the named event to call all registered event handlers.</source>
          <target state="translated">すべての登録済みのイベント ハンドラーを名前付きイベントが発生します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This method is used to access HTML Document Object Model (DOM) events.</source>
          <target state="translated">このメソッドは HTML ドキュメント オブジェクト モデル (DOM) のイベントにアクセスに使用されます。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>It directly calls the <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept> method.</source>
          <target state="translated">直接呼び出し、 <bpt id="p1">[</bpt>IHTMLElement3::fireEvent<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=103189)</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>For more information about how to use the DOM through the &lt;xref:System.Windows.Forms.HtmlElement&gt; class, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">を通じて DOM を使用する方法についての詳細、&lt;xref:System.Windows.Forms.HtmlElement&gt;クラスを参照してください<bpt id="p1">[</bpt>、管理されている HTML ドキュメント オブジェクト モデルでのアクセスの非公開メンバー<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>&lt;/xref:System.Windows.Forms.HtmlElement&gt; 。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The name of the event to raise.</source>
          <target state="translated">発生させるイベントの名前。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Removes focus from the current element, if that element has focus.</source>
          <target state="translated">その要素にフォーカスがある場合は、現在の要素からフォーカスを削除します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Calling this method raises the &lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt; event for the element.</source>
          <target state="translated">このメソッドの呼び出しを生成、&lt;xref:System.Windows.Forms.HtmlElement.LostFocus&gt;要素のイベント&lt;/xref:System.Windows.Forms.HtmlElement.LostFocus&gt;。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>When focus is cleared from an element using this method, it is given to the document containing the element, not to the next element in the tab order.</source>
          <target state="translated">このメソッドを使用して要素からフォーカスをオフにした場合は、タブ オーダーの次の要素ではない要素を含むドキュメントに付与されます。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Scrolls through the document containing this element until the top or bottom edge of this element is aligned with the document's window.</source>
          <target state="translated">この要素の上端または下端がドキュメントのウィンドウに位置合わせされるまで、この要素を含むドキュメントをスクロールします。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the top of the object will be displayed at the top of the window.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトの上部がウィンドウの上部に表示されます。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the bottom of the object will be displayed at the bottom of the window.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトの下部がウィンドウの下部に表示されます。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Gets or sets the distance between the edge of the element and the left edge of its content.</source>
          <target state="translated">取得または要素の端とその内容の左端との間の距離を設定します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The full dimensions of the scroll area are available using &lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;; <ph id="ph1">`ScrollLeft`</ph> and &lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt; are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">スクロール領域の全サイズは&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;; で使用できます。<ph id="ph1">`ScrollLeft`</ph>と&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の&amp;2; つのプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The distance, in pixels, between the left edge of the element and the left edge of its content.</source>
          <target state="translated">(ピクセル単位)、要素の左端とその内容の左端の間の距離。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Gets the dimensions of an element's scrollable region.</source>
          <target state="translated">要素のスクロール可能な領域の寸法を取得します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>An element will have a scrollable region if its content exceeds the size of its dimensions, unless the overflow style on the element forbids rendering scrollbars.</source>
          <target state="translated">要素に、要素のオーバーフロー スタイルのレンダリングのスクロール バーを禁止する場合を除きはそのコンテンツがその次元のサイズを超えた場合スクロール可能な領域があります。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>You cannot modify the size of the scroll area directly, but you can modify the distance between the edges of the scroll area and the edges of the element.</source>
          <target state="translated">スクロール領域のサイズを直接変更することはできませんが、スクロール領域の端と、要素の端の間の距離を変更することができます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt; and &lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt; properties to achieve this.</source>
          <target state="translated">使用して、&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;と&lt;xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;これを実現するプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.ScrollTop%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The size and coordinate location of the scrollable area of an element.</source>
          <target state="translated">要素のスクロール可能な領域のサイズと座標位置。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets or sets the distance between the edge of the element and the top edge of its content.</source>
          <target state="translated">取得または要素の端とその内容の上端との間の距離を設定します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The full dimensions of the scroll area are available using &lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;; &lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt; and <ph id="ph1">`ScrollTop`</ph> are exposed independently because these are the only two properties of the scroll area that developers can set.</source>
          <target state="translated">スクロール領域の全サイズは&lt;xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;; で使用できます。&lt;xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;と<ph id="ph1">`ScrollTop`</ph>はいない独立しているために、公開これらは、開発者が設定されるスクロール領域の&amp;2; つのプロパティ&lt;/xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A&gt;&lt;/xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The distance, in pixels, between the top edge of the element and the top edge of its content.</source>
          <target state="translated">(ピクセル単位) の要素の上端とその内容の上端との間の距離。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Sets the value of the named attribute on the element.</source>
          <target state="translated">要素の名前付き属性の値を設定します。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>An attribute in HTML is any valid name-value pair for that element.</source>
          <target state="translated">HTML 内の属性は、その要素のいずれかの有効な名前と値ペアです。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.HtmlElement&gt; exposes only those attributes that are common to all elements, leaving out those that only apply to certain types of elements; <ph id="ph1">`SRC`</ph> is a predefined attribute for the <ph id="ph2">`IMG`</ph> tag, for example, but not for the <ph id="ph3">`DIV`</ph> tag.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement&gt;要素の特定の種類にのみ適用されるものは除外され、すべての要素に共通している属性のみを公開します。<ph id="ph1">`SRC`</ph>の定義済み属性は、<ph id="ph2">`IMG`</ph>などのタグのではなく、<ph id="ph3">`DIV`</ph>タグ。&lt;/xref:System.Windows.Forms.HtmlElement&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt; and SetAttribute to manipulate attributes not exposed on the managed Document Object Model (DOM).</source>
          <target state="translated">使用して&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;と管理対象のドキュメント オブジェクト モデル (DOM) で公開されていない属性を操作する SetAttribute&lt;/xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`attributeName`</ph> is not a defined attribute on an element, SetAttribute will define it on the element as a new attribute.</source>
          <target state="translated">場合<ph id="ph1">`attributeName`</ph>定義された属性ではない、要素に SetAttribute は定義に新しい属性として要素にします。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt; and SetAttribute are case-insensitive.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;および SetAttribute 小文字は区別されません。&lt;/xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>To set the <ph id="ph1">`class`</ph> attribute on an &lt;xref:System.Windows.Forms.HtmlElement&gt; , you must refer to the attribute as <ph id="ph2">`className`</ph> when specifying the first argument to SetAttribute</source>
          <target state="translated">設定する、<ph id="ph1">`class`</ph>属性を&lt;xref:System.Windows.Forms.HtmlElement&gt;、として属性を参照する必要があります<ph id="ph2">`className`</ph>SetAttribute に最初の引数を指定するときに&lt;/xref:System.Windows.Forms.HtmlElement&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The name of the attribute to set.</source>
          <target state="translated">設定する属性の名前。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The new value of this attribute.</source>
          <target state="translated">この属性の新しい値。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Gets or sets a semicolon-delimited list of styles for the current element.</source>
          <target state="translated">取得または現在の要素のスタイルのセミコロン区切りのリストを設定します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The HTML Document Object Model (DOM) uses styles as defined in the World Wide Web Consortiums Cascading Style Sheets specification to control the display of an element.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル (DOM) を使ってスタイル World Wide Web コンソーシアムをカスケード スタイル シートの仕様で定義されている要素の表示を制御します。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Styles in the Style property take the form of colon-delimited name-value pairs, with each pair separated by a semicolon, as follows:       <ph id="ph1">`style-name1:value1;...;[style-nameN:valueN;]`</ph>       To set the font for a <ph id="ph2">`DIV`</ph> element to 14-point Times New Roman bold, for example, you would assign the following string:       <ph id="ph3">`font-face:Times New Roman;font-size:14px;font-weight:bold;`</ph>       For a full list of all available styles in the HTML DOM, see <bpt id="p1">[</bpt>STYLE Attribute<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>.</source>
          <target state="translated">スタイル プロパティのスタイルがコロンで区切られた名前と値のペアで、次のように、セミコロンで区切られた各ペアの形式を取る:<ph id="ph1">`style-name1:value1;...;[style-nameN:valueN;]`</ph>のフォントを設定する、 <ph id="ph2">`DIV`</ph> 14 ポイント Times New roman bold 要素、たとえば、割り当てると、次の文字列: <ph id="ph3">`font-face:Times New Roman;font-size:14px;font-weight:bold;`</ph> HTML DOM 内のすべての利用可能なスタイルの一覧については、次を参照してください。<bpt id="p1">[</bpt>スタイル属性<ept id="p1">](http://msdn.microsoft.com/library/ms534651.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>A string consisting of all of the element's styles</source>
          <target state="translated">すべての要素のスタイルから成る文字列</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of this element in the tab order.</source>
          <target state="translated">取得またはタブ オーダーでこの要素の位置を設定します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>TabIndex determines which element in an HTML document will next receive focus when the user presses the TAB key.</source>
          <target state="translated">Tabindex プロパティは、HTML ドキュメント内のどの要素は、ユーザーが TAB キーを押すとフォーカス次を決定します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>By default, the only elements included in the tab order are <ph id="ph1">`INPUT`</ph> elements, the <ph id="ph2">`SELECT`</ph> control, and any element whose <ph id="ph3">`contentEditable`</ph> property is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">タブ オーダーに含まれる唯一の要素は、既定では、 <ph id="ph1">`INPUT`</ph> 、要素、<ph id="ph2">`SELECT`</ph>制御、および任意の要素が<ph id="ph3">`contentEditable`</ph>プロパティに設定されている<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You can include any HTML element in the tab order, such as a <ph id="ph1">`DIV`</ph>, by assigning it an explicit TabIndex.</source>
          <target state="translated">タブ オーダー内など任意の HTML 要素を含めることができます、 <ph id="ph1">`DIV`</ph>、明示的な TabIndex を割り当てることによりします。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Valid values for TabIndex range from -32767 to 32767.</source>
          <target state="translated">-32767 から 32767 までの TabIndex 範囲の有効な値です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The numeric index of the element in the tab order.</source>
          <target state="translated">タブ オーダー内の要素の数値インデックス。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Gets the name of the HTML tag.</source>
          <target state="translated">HTML タグの名前を取得します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Many elements in the HTML Document Object Model have attributes, properties, and methods that are unique to those elements; such as the <ph id="ph1">`HREF`</ph> attribute on the <ph id="ph2">`A`</ph> element, or the <ph id="ph3">`Submit`</ph> method on <ph id="ph4">`FORM`</ph>.</source>
          <target state="translated">HTML ドキュメント オブジェクト モデル内の要素は、属性、プロパティ、およびそれらの要素に固有のメソッドがあります。など、<ph id="ph1">`HREF`</ph>属性を<ph id="ph2">`A`</ph>要素、または<ph id="ph3">`Submit`</ph>メソッド<ph id="ph4">`FORM`</ph>です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Use TagName when you have an element of a potentially arbitrary type, and need to perform a type-specific operation.</source>
          <target state="translated">可能性のある任意の型の要素があるし、型固有の操作を実行する必要がある場合は、タグ名を使用します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The name used to create this element using HTML markup.</source>
          <target state="translated">HTML マークアップを使用してこの要素を作成するために使用する名前です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>