<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c717b36d0a6075fe1c04136eda5dc7caa2564151</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Policy.NetCodeGroup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ede94f0369f568eaa04a9a01f2be36a990c977ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3666e05ed38e03d8c128672f7155ae5335d8233</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Grants Web permission to the site from which the assembly was downloaded.</source>
          <target state="translated">アセンブリのダウンロード元となるサイトの Web アクセス許可を付与します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Code groups are the building blocks of code access security policy.</source>
          <target state="translated">コード グループとは、コード アクセス セキュリティ ポリシーの構成要素です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each policy level consists of a root code group that can have one or more child code groups.</source>
          <target state="translated">各ポリシー レベルは、1 つまたは複数の子コード グループを持つことができるルート コード グループで構成されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree.</source>
          <target state="translated">各子コード グループは、独自の子コード グループを持つことができます。この動作は、任意のツリーを形成するレベル数を拡張します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly.</source>
          <target state="translated">各コード グループには、指定したアセンブリ、そのアセンブリの証拠に基づくグループに属している場合を決定するメンバーシップ条件があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.</source>
          <target state="translated">メンバーシップ条件を持つとその子コード グループの指定したアセンブリと一致するコード グループだけでは、コード アクセス セキュリティ ポリシーを適用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>NetCodeGroup has the same merge semantics as that of &lt;xref:System.Security.Policy.UnionCodeGroup&gt;; it forms the union of the &lt;xref:System.Security.Policy.PolicyStatement&gt; objects of all matching child code groups and the &lt;xref:System.Security.Policy.PolicyStatement&gt; it generates from the input &lt;xref:System.Security.Policy.Url&gt; evidence.</source>
          <target state="translated">NetCodeGroup のと同じ結合セマンティクスを持つ&lt;xref:System.Security.Policy.UnionCodeGroup&gt;; の和集合を形成、&lt;xref:System.Security.Policy.PolicyStatement&gt;の一致するすべての子オブジェクトのコード グループと&lt;xref:System.Security.Policy.PolicyStatement&gt;入力から生成&lt;xref:System.Security.Policy.Url&gt;証拠&lt;/xref:System.Security.Policy.Url&gt;&lt;/xref:System.Security.Policy.PolicyStatement&gt;&lt;/xref:System.Security.Policy.PolicyStatement&gt;&lt;/xref:System.Security.Policy.UnionCodeGroup&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, NetCodeGroup returns a permission containing a dynamically calculated &lt;xref:System.Net.WebPermission&gt; that grants connect access to the site from which the code is run; &lt;xref:System.Security.Policy.UnionCodeGroup&gt; simply returns a static permission set.</source>
          <target state="translated">ただし、NetCodeGroup が元となるコードを実行します。 サイトを接続アクセスを許可する動的に計算された&lt;xref:System.Net.WebPermission&gt;を含むアクセス許可を返します&lt;xref:System.Security.Policy.UnionCodeGroup&gt;単に、静的なアクセス許可セットを返します&lt;/xref:System.Security.Policy.UnionCodeGroup&gt;&lt;/xref:System.Net.WebPermission&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When a NetCodeGroup is created, it contains the default connection access rules shown in the following table.</source>
          <target state="translated">NetCodeGroup が作成されると、次の表に示すように既定の接続アクセス規則が含まれています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>|URI Scheme|Rule|   |----------------|----------|   |file|No connection access to the origin server is permitted.|   |http|HTTP and HTTPS access is permitted using the origin port.|   |https|HTTPS access is permitted using the origin port.|       You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a &lt;xref:System.Security.Policy.CodeConnectAccess&gt; object with the appropriate &lt;xref:System.Security.Policy.CodeConnectAccess.Scheme%2A&gt; and &lt;xref:System.Security.Policy.CodeConnectAccess.Port%2A&gt; property values to the &lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt; method.</source>
          <target state="translated">|URI スキーム |ルール |  |----------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。      スキームおよびを渡すことによって、その元のサイトに接続するときに使用するコードが許可されているポートを制御することができます、&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクトと適切な&lt;xref:System.Security.Policy.CodeConnectAccess.Scheme%2A&gt;と&lt;xref:System.Security.Policy.CodeConnectAccess.Port%2A&gt;プロパティ値を&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;メソッド&lt;/xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess.Port%2A&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess.Scheme%2A&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying &lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt; ("") as the scheme.</source>
          <target state="translated">元のスキームが証拠に存在しないかを指定して認識されないときに適用される接続アクセス規則を作成する&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;("")、スキームとして&lt;/xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying &lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt; ("*") as the scheme.</source>
          <target state="translated">指定して一致する構成を組み合わせてアクセス ルールが接続されていないときに適用される接続アクセス規則を作成することもできます&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;("*")、スキームとして。&lt;/xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt; 。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 任意のスキームを使用して、送信元のサイトにアクセスを許可するコードが証拠として URI スキームを送信しない場合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When a &lt;xref:System.Security.Policy.NetCodeGroup&gt; is created, it contains the default connection access rules shown in the following table.</source>
          <target state="translated">ときに、&lt;xref:System.Security.Policy.NetCodeGroup&gt;が作成されるが含まれている次の表に示すように既定の接続アクセス規則&lt;/xref:System.Security.Policy.NetCodeGroup&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>|Scheme|Rule|   |------------|----------|   |file|No connection access to the origin server is permitted.|   |http|HTTP and HTTPS access is permitted using the origin port.|   |https|HTTPS access is permitted using the origin port.|</source>
          <target state="translated">|スキーム |ルール |  |------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A membership condition that tests evidence to determine whether this code group applies code access security policy.</source>
          <target state="translated">このコード グループがコード アクセス セキュリティ ポリシーを適用するかどうかを判断する証拠をテストするメンバーシップ条件です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">membershipCondition</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
          <target state="translated">型、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">membershipCondition</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</source>
          <target state="translated">不明であるか、または認識されない原点スキームでコードの接続アクセスを指定する値が含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When calling the &lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt; method, you specify a scheme and an associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; object.</source>
          <target state="translated">呼び出すときに、&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;メソッド、スキームと関連付けられているを指定する&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクト&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;&lt;/xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects that you add to the &lt;xref:System.Security.Policy.NetCodeGroup&gt; using AbsentOriginScheme as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the &lt;xref:System.Security.Policy.NetCodeGroup&gt; object.</source>
          <target state="translated">どの&lt;xref:System.Security.Policy.CodeConnectAccess&gt;に追加するオブジェクト、&lt;xref:System.Security.Policy.NetCodeGroup&gt;コードの元のスキームがその証拠に存在しないか、またはで認識されるスキーマではない時に適用される元のスキームとして AbsentOriginScheme を使用して、&lt;xref:System.Security.Policy.NetCodeGroup&gt;オブジェクト&lt;/xref:System.Security.Policy.NetCodeGroup&gt;&lt;/xref:System.Security.Policy.NetCodeGroup&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To specify the &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current &lt;xref:System.Security.Policy.NetCodeGroup&gt; object, use the &lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt; value.</source>
          <target state="translated">指定する、&lt;xref:System.Security.Policy.CodeConnectAccess&gt;コードの元のスキームに一致しない場合に現在追加元スキームのセットに含まれているパターンのいずれかを使用するオブジェクト&lt;xref:System.Security.Policy.NetCodeGroup&gt;オブジェクトを使用して、&lt;xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;値&lt;/xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme&gt;&lt;/xref:System.Security.Policy.NetCodeGroup&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value of the AbsentOriginScheme field is an empty string ("").</source>
          <target state="translated">AbsentOriginScheme フィールドの値は空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Adds the specified connection access to the current code group.</source>
          <target state="translated">指定した接続アクセスを現在のコード グループに追加します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can add multiple &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects for the same <ph id="ph1">`origin scheme`</ph>.</source>
          <target state="translated">複数を追加する&lt;xref:System.Security.Policy.CodeConnectAccess&gt;同じオブジェクト<ph id="ph1">`origin scheme`</ph>&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`origin scheme`</ph> already has one or more associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects, specifying <ph id="ph2">`null`</ph> for <ph id="ph3">`connectAccess`</ph> has no effect.</source>
          <target state="translated">場合、 <ph id="ph1">`origin scheme`</ph>&amp;1; つ以上の関連するには既に&lt;xref:System.Security.Policy.CodeConnectAccess&gt;を指定するオブジェクト<ph id="ph2">`null`</ph>の<ph id="ph3">`connectAccess`</ph>も何も起こりません&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the origin scheme does not have associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects, specifying <ph id="ph1">`null`</ph> for <ph id="ph2">`connectAccess`</ph> prevents code with an origin scheme that matches <ph id="ph3">`originScheme`</ph> from accessing its origin server.</source>
          <target state="translated">元のスキームが関連付けられていない場合&lt;xref:System.Security.Policy.CodeConnectAccess&gt;を指定するオブジェクト<ph id="ph1">`null`</ph>の<ph id="ph2">`connectAccess`</ph>により、元のスキームに一致するとコード<ph id="ph3">`originScheme`</ph>その元のサーバーにアクセスできない&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the scheme to match against the code's scheme.</source>
          <target state="translated">A&lt;xref:System.String&gt;コードのスキームと照合するスキームを含むします&lt;/xref:System.String&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Policy.CodeConnectAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the scheme and port code can use to connect back to its origin server.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Policy.CodeConnectAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキームおよびポートのコードを使用して、元のサーバーに接続を指定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph> contains characters that are not permitted in schemes.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph>スキームでは許可されない文字が含まれています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph><ph id="ph2"> = </ph><bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup.AbsentOriginScheme"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph3">&lt;code&gt;connectAccess&lt;/code&gt;</ph> specifies <bpt id="p2">&lt;xref href="System.Security.Policy.CodeConnectAccess.OriginScheme"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as its scheme.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;originScheme&lt;/code&gt;</ph><ph id="ph2"> = </ph><bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup.AbsentOriginScheme"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph3">&lt;code&gt;connectAccess&lt;/code&gt;</ph> specifies <bpt id="p2">&lt;xref href="System.Security.Policy.CodeConnectAccess.OriginScheme"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as its scheme.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Contains a value used to specify any other unspecified origin scheme.</source>
          <target state="translated">他の不特定の元のスキームを指定する値が含まれています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When calling the &lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt; method, you specify a scheme and an associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; object.</source>
          <target state="translated">呼び出すときに、&lt;xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;メソッド、スキームと関連付けられているを指定する&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクト&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;&lt;/xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can use the value of the AnyOtherOriginScheme field to specify the &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current &lt;xref:System.Security.Policy.NetCodeGroup&gt; object.</source>
          <target state="translated">AnyOtherOriginScheme フィールドの値を使用して、&lt;xref:System.Security.Policy.CodeConnectAccess&gt;現在追加元スキームのセットに明示的に含まれていない任意のスキームを使用するオブジェクト&lt;xref:System.Security.Policy.NetCodeGroup&gt;オブジェクト&lt;/xref:System.Security.Policy.NetCodeGroup&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects specified with the AnyOtherOriginScheme field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current &lt;xref:System.Security.Policy.NetCodeGroup&gt; object.</source>
          <target state="translated">&lt;xref:System.Security.Policy.CodeConnectAccess&gt;AnyOtherOriginScheme フィールドで指定したオブジェクトには、コードの元のスキームに一致しない場合に現在追加元スキームのセットに含まれているパターンのいずれかのみを使用、&lt;xref:System.Security.Policy.NetCodeGroup&gt;オブジェクト&lt;/xref:System.Security.Policy.NetCodeGroup&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To specify the &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the &lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt; value.</source>
          <target state="translated">指定する、&lt;xref:System.Security.Policy.CodeConnectAccess&gt;コードの元のスキームが証拠で利用できないかが認識されないときに適用するオブジェクトを使用して、&lt;xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;値&lt;/xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value of the AnyOtherOriginScheme field is "*".</source>
          <target state="translated">AnyOtherOriginScheme フィールドの値は"*"です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">コード グループのポリシー ステートメントの属性の文字列表現を取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Makes a deep copy of the current code group.</source>
          <target state="translated">現在のコード グループのディープ コピーを作成します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.</source>
          <target state="translated">このメソッドは、コード グループに含まれるすべてのオブジェクトのコピーも行われることを意味、コード グループの詳細コピーを作成します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An equivalent copy of the current code group, including its membership conditions and child code groups.</source>
          <target state="translated">メンバーシップ条件と子コード グループを含む、現在のコード グループの同等のコピー。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Determines whether the specified code group is equivalent to the current code group.</source>
          <target state="translated">指定されたコード グループが現在のコード グループと等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following data are used to determine the equality of two &lt;xref:System.Security.Policy.NetCodeGroup&gt; objects:      -   The &lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt; and &lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt; properties.</source>
          <target state="translated">次のデータが&amp;2; つの等しいかどうかを使用する&lt;xref:System.Security.Policy.NetCodeGroup&gt;オブジェクト: -&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;と&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;プロパティ&lt;/xref:System.Security.Policy.CodeGroup.Description%2A&gt;&lt;/xref:System.Security.Policy.CodeGroup.Name%2A&gt;&lt;/xref:System.Security.Policy.NetCodeGroup&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt; property.</source>
          <target state="translated">-&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;プロパティ&lt;/xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-   The set of origin schemes and the associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects.</source>
          <target state="translated">-一連の原点のスキームと関連付けられている&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクト&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to compare with the current code group.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Policy.NetCodeGroup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のコード グループと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified code group is equivalent to the current code group; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定されたコード グループは、現在のコード グループと同じ場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the connection access information for the current code group.</source>
          <target state="translated">現在のコード グループの接続アクセス情報を取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In each dictionary entry, the &lt;xref:System.Collections.DictionaryEntry.Key%2A&gt; property value is the origin scheme, and the &lt;xref:System.Collections.DictionaryEntry.Value%2A&gt; property value is the array of associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects.</source>
          <target state="translated">各ディクショナリ エントリで、&lt;xref:System.Collections.DictionaryEntry.Key%2A&gt;プロパティの値が元のスキームと&lt;xref:System.Collections.DictionaryEntry.Value%2A&gt;プロパティの値の配列は、関連付けられている&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクト&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;&lt;/xref:System.Collections.DictionaryEntry.Value%2A&gt;&lt;/xref:System.Collections.DictionaryEntry.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If there are no associated &lt;xref:System.Security.Policy.CodeConnectAccess&gt; objects, &lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt; returns an empty array.</source>
          <target state="translated">いいえ関連がある場合&lt;xref:System.Security.Policy.CodeConnectAccess&gt;オブジェクト、&lt;xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt;空の配列を返します&lt;/xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName&gt;&lt;/xref:System.Security.Policy.CodeConnectAccess&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.DictionaryEntry&gt; array containing connection access information.</source>
          <target state="translated">A&lt;xref:System.Collections.DictionaryEntry&gt;接続アクセスの情報を含む配列&lt;/xref:System.Collections.DictionaryEntry&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the hash code of the current code group.</source>
          <target state="translated">現在のコード グループのハッシュ コードを取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The hash code of the current code group.</source>
          <target state="translated">現在のコード グループのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the logic to use for merging groups.</source>
          <target state="translated">グループをマージするために使用するロジックを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The string "Union".</source>
          <target state="translated">文字列"Union"です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the name of the <bpt id="p1">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the code group.</source>
          <target state="translated">名前を取得、 <bpt id="p1">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コード グループです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Always the string "Same site Web."</source>
          <target state="translated">常に、文字列"同じ site Web"</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Removes all connection access information for the current code group.</source>
          <target state="translated">現在のコード グループのすべての接続アクセスの情報を削除します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Use this method to remove the system-supplied default connection access rules.</source>
          <target state="translated">このメソッドを使用すると、システム提供の既定の接続アクセス規則を削除できます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default rules are shown in the following table.</source>
          <target state="translated">既定の規則は、次の表に示します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>|Scheme|Rule|   |------------|----------|   |file|No connection access to the origin server is permitted.|   |http|HTTP and HTTPS access is permitted using the origin port.|   |https|HTTPS access is permitted using the origin port.|</source>
          <target state="translated">|スキーム |ルール |  |------------|----------|  | ファイル |元のサーバーへの接続アクセスが許可されていません |。  | http |元のポートを使用して HTTP および HTTPS のアクセスが許可されています |。  | https |元のポートを使用して HTTPS アクセスを許可します |。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Resolves policy for the code group and its descendants for a set of evidence.</source>
          <target state="translated">コード グループのポリシーと証拠のセットをその子孫を解決します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">読み込まれるアセンブリの証拠を指定するには、このメソッドは、まず、指定した証拠をメンバーシップ条件を調べることによって、コード グループを評価します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</source>
          <target state="translated">一致がある場合、このメソッドは、子コード グループの評価を含む、コード グループのポリシー ステートメントを返します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The operation of this method is as follows:       If the membership condition does not match the specified evidence, return <ph id="ph1">`null`</ph>; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue.</source>
          <target state="translated">このメソッドの動作を次に示します: メンバーシップ条件が一致しない場合、指定した証拠、返す<ph id="ph1">`null`</ph>、それ以外の権限 (P) が返されるセットに一致するコード グループのポリシー ステートメント コンティニュ セット。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For each child code group, resolve the code group with the same evidence; if the result is not <ph id="ph1">`null`</ph>, return that policy statement.</source>
          <target state="translated">各子コード グループです。 同じ証拠を使用して、コード グループを解決します。場合は、結果は<ph id="ph1">`null`</ph>、そのポリシー ステートメントを返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If no child code group matched, return P (the parent's policy statement).</source>
          <target state="translated">子コード グループが一致しない場合は、P (親のポリシー ステートメント) を返します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Policy.Evidence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the assembly.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Policy.Evidence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>アセンブリのです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Policy.PolicyStatement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that consists of the permissions granted by the code group with optional attributes, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the code group does not apply (the membership condition does not match the specified evidence).</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Policy.PolicyStatement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オプション属性を持つコード グループによって付与された権限で構成されるまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>コード グループが適用されない場合 (メンバーシップ条件は、指定した証拠を一致していません)。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">evidence</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">evidence</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>More than one code group (including the parent code group and any child code groups) is marked <bpt id="p1">&lt;xref href="System.Security.Policy.PolicyStatementAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">(親コード グループと子コード グループを含む)&amp;2; つ以上のコード グループはマークされて<bpt id="p1">&lt;xref href="System.Security.Policy.PolicyStatementAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Resolves matching code groups.</source>
          <target state="translated">一致するコード グループを解決します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</source>
          <target state="translated">読み込まれるアセンブリの証拠を指定するには、このメソッドは、まず、指定した証拠をメンバーシップ条件を調べることによって、コード グループを評価します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If there is a match, this method returns a root code group.</source>
          <target state="translated">一致がある場合、このメソッドは、ルート コード グループを返します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</source>
          <target state="translated">返されるコード グループは、さらが可能性があるも子コード グループ、戻り値が指定された証拠と一致したコード グループの完全なセットを反映するための子コード グループを含めることができます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The evidence for the assembly.</source>
          <target state="translated">アセンブリの証拠。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The complete set of code groups that were matched by the evidence.</source>
          <target state="translated">証拠と一致したコード グループの完全なセット。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">evidence</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">evidence</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>