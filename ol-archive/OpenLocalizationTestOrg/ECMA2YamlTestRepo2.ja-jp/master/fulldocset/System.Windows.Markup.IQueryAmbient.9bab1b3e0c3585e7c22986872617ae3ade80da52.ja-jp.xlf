<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc0f9059ccdb447123ce112112b6b992f363b51d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IQueryAmbient.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46f3db6648a1727a934d25683214ac0d0da40c8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7525a30dae94d83fc1bdca8158dd99215e943b06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified property should be treated as ambient in the current scope.</source>
          <target state="translated">かどうか、指定したプロパティに処理するかアンビエントとして、現在のスコープを照会します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</source>
          <target state="translated">アンビエント プロパティ メカニズムの目的は、通知することが分かっている、オブジェクトが一時的と実行時の一般的なアプリケーションに適していない値である場合、特定のオブジェクトをインスタンス化しないように、XAML オブジェクト ライターで解析時間を向上させるためにです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</source>
          <target state="translated">通常は、XAML 実行するルックアップや XAML の処理プロパティの get アクセサーの必要がありますをすぐに使用できる値を持つオブジェクト グラフ表現を入力するには、このようなオブジェクトをインスタンス化します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>IQueryAmbient has one member: &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.</source>
          <target state="translated">IQueryAmbient が&amp;1; つのメンバー: &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;.&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>IQueryAmbient is a parallel mechanism to &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">IQueryAmbient &lt;xref:System.Windows.Markup.AmbientAttribute&gt;。&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;並列メカニズムは、します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>IQueryAmbient is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> for &lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;), whereas the attribute is essentially static analysis).</source>
          <target state="translated">IQueryAmbient はリフレクションを使用して、情報の決定および act を上回りことも回避する特殊なメカニズム (レポートするように選択されたオブジェクト<ph id="ph1">`true`</ph>または<ph id="ph2">`false`</ph>の&lt;xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;) 属性がスタティック分析本質的に対し、).&lt;/xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Markup.AmbientAttribute&gt; is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties &lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt; and &lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;通常、専用 XAML 型システムのプロパティ&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;と&lt;xref:System.Xaml.XamlType.IsAmbient%2A&gt;。&lt;/xref:System.Xaml.XamlType.IsAmbient%2A&gt;&lt;/xref:System.Xaml.XamlMember.IsAmbient%2A&gt;を相関付ける、XAML オブジェクト ライターによって使用できる一般的なメカニズムは、します。&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>WPF Implementations of IQueryAmbient    In WPF, IQueryAmbient is used for the resource dictionary lookup process.</source>
          <target state="translated">WPF 実装の IQueryAmbient で WPF、IQueryAmbient リソース ディクショナリのルックアップ プロセスが使用されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The lookup process gets successive <ph id="ph1">`Resources`</ph> values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</source>
          <target state="translated">照合プロセスを連続する取得<ph id="ph1">`Resources`</ph>WPF の論理ツリー全体で値が検出されるまで、キーのリソースのスコープのルートに向かって実行またはスコープに存在するキーが決定されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Normally, doing so would require instantiating a &lt;xref:System.Windows.ResourceDictionary&gt; each time to receive the results.</source>
          <target state="translated">通常は、行うには、インスタンス化する、&lt;xref:System.Windows.ResourceDictionary&gt;たびに、結果を受け取ります&lt;/xref:System.Windows.ResourceDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Declaring the contents of <ph id="ph1">`Resources`</ph> as ambient so long as <ph id="ph2">`Resources`</ph> exists optimizes this lookup process.</source>
          <target state="translated">内容を宣言する<ph id="ph1">`Resources`</ph>限りアンビエントとして<ph id="ph2">`Resources`</ph>が存在するこの照合プロセスを最適化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In WPF, this interface is implemented in the following cases:      -   &lt;xref:System.Windows.FrameworkElement&gt; implements &lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt; to return <ph id="ph1">`true`</ph> for all property names if it contains an existing &lt;xref:System.Windows.ResourceDictionary&gt; for &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;, and so long as the query is not for the &lt;xref:System.Windows.FrameworkElement.Resources%2A&gt; property itself.</source>
          <target state="translated">WPF では、このインターフェイスは、次の場合:-&lt;xref:System.Windows.FrameworkElement&gt;実装&lt;xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt;を返す<ph id="ph1">`true`</ph>既存が含まれている場合、すべてのプロパティ名の&lt;xref:System.Windows.ResourceDictionary&gt;の&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;、クエリを使用しない限り、および、&lt;xref:System.Windows.FrameworkElement.Resources%2A&gt;プロパティ自体&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt;&lt;/xref:System.Windows.FrameworkElement.Resources%2A&gt;&lt;/xref:System.Windows.ResourceDictionary&gt;&lt;/xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A&gt;&lt;/xref:System.Windows.FrameworkElement&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Style&gt; implements the same pattern for its &lt;xref:System.Windows.Style.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.Style&gt;その&lt;xref:System.Windows.Style.Resources%2A&gt;.&lt;/xref:System.Windows.Style.Resources%2A&gt;の同じパターンを実装&lt;/xref:System.Windows.Style&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Application&gt; implements the same pattern for its &lt;xref:System.Windows.Application.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.Application&gt;その&lt;xref:System.Windows.Application.Resources%2A&gt;.&lt;/xref:System.Windows.Application.Resources%2A&gt;の同じパターンを実装&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.FrameworkContentElement&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.FrameworkContentElement&gt;その&lt;xref:System.Windows.FrameworkContentElement.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkContentElement.Resources%2A&gt;の同じパターンを実装&lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.FrameworkTemplate&gt; implements the same pattern for its &lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.</source>
          <target state="translated">-&lt;xref:System.Windows.FrameworkTemplate&gt;その&lt;xref:System.Windows.FrameworkTemplate.Resources%2A&gt;.&lt;/xref:System.Windows.FrameworkTemplate.Resources%2A&gt;の同じパターンを実装&lt;/xref:System.Windows.FrameworkTemplate&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It also reports &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; content as ambient but returns <ph id="ph1">`false`</ph> if querying for &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt; itself.</source>
          <target state="translated">報告&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;アンビエントは返しますコンテンツ<ph id="ph1">`false`</ph>のクエリを実行する場合&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;自体&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>-   In each of these cases, the relevant <ph id="ph1">`Resources`</ph> property (and &lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) are attributed as &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.</source>
          <target state="translated">それぞれの場合、関連する<ph id="ph1">`Resources`</ph>プロパティ (および&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;) &lt;xref:System.Windows.Markup.AmbientAttribute&gt;.&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;として属性が設定&lt;/xref:System.Windows.FrameworkTemplate.Template%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The typical usage is to query for the properties that are NOT the &lt;xref:System.Windows.Markup.AmbientAttribute&gt; attributed properties of the object that defines the interface.</source>
          <target state="translated">一般的な使用されないプロパティを照会する、&lt;xref:System.Windows.Markup.AmbientAttribute&gt;インターフェイスを定義するオブジェクトのプロパティの属性を設定します&lt;/xref:System.Windows.Markup.AmbientAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</source>
          <target state="translated">つまり、オブジェクト グラフの作成時に、潜在的な実行時間の値を提供するために、リソース ディクショナリが存在する限り、リソース ディクショナリのプロパティのコンテナーだけでなく、他のプロパティ扱えるアンビエントとして。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified named property can be considered ambient in the current scope.</source>
          <target state="translated">かどうか、指定した名前付きプロパティと見なすアンビエント現在のスコープ内のクエリです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the property to check for ambience state.</source>
          <target state="translated">アンビエントの状態を確認するプロパティの名前。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested property can be considered ambient; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、要求されたプロパティと見なされます。 アンビエントです。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>