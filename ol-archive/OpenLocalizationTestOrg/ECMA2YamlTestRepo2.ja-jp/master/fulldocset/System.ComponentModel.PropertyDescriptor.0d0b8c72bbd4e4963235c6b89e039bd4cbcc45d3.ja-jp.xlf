<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dc1f36798159a6e997fd9ebb83de5f55c4dde0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.PropertyDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de6e45d4702ba0349d8085833d7e2e94b8d2da6d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d82f4665462cf134a7e5db6b4e44871dd6cd797</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">クラスのプロパティの抽象化を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">プロパティの説明は、名前、その属性、プロパティが関連付けられているコンポーネントのクラスおよびプロパティの型で構成されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor provides the following properties and methods:      -   &lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt; contains the &lt;xref:System.ComponentModel.TypeConverter&gt; for this property.</source>
          <target state="translated">PropertyDescriptor は、次のプロパティとメソッドを提供します-&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;が含まれています、&lt;xref:System.ComponentModel.TypeConverter&gt;このプロパティの。&lt;/xref:System.ComponentModel.TypeConverter&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt; indicates whether this property should be localized.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;このプロパティをローカライズする必要があるかどうかを示します&lt;/xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt; returns an editor of the specified type.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;指定した型のエディターを返します&lt;/xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor also provides the following <ph id="ph1">`abstract`</ph> properties and methods:      -   &lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt; contains the type of component this property is bound to.</source>
          <target state="translated">PropertyDescriptor は、以下も用意されています<ph id="ph1">`abstract`</ph>プロパティとメソッド:-&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;にこのプロパティがバインドされているコンポーネントの型が含まれています。&lt;/xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt; indicates whether this property is read-only.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;このプロパティは読み取り専用であるかどうかを示します&lt;/xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt; gets the type of the property.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;プロパティの型を取得します&lt;/xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt; indicates whether resetting the component changes the value of the component.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;コンポーネントの値が変更コンポーネントをリセットするかどうかを示します&lt;/xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt; returns the current value of the property on a component.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;コンポーネントのプロパティの現在の値を返します&lt;/xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt; resets the value for this property of the component.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;コンポーネントのこのプロパティの値にリセットします&lt;/xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; sets the value of the component to a different value.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;を別の値のコンポーネントの値を設定します&lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt; indicates whether the value of this property needs to be persisted.</source>
          <target state="translated">-&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;このプロパティの値が永続化する必要があるかどうかを示します&lt;/xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">通常、<ph id="ph1">`abstract`</ph>メンバーは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">リフレクションに関する詳細については、トピックを参照してください。<bpt id="p1">[</bpt>リフレクション<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the name and attributes in the specified <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス名と、指定した属性を持つ<bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the name of the property and its attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロパティとその属性の名前を格納しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the name in the specified <bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the attributes in both the <bpt id="p3">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and the &lt;xref:System.Attribute&gt; array.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定した名前のクラス<bpt id="p2">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>と両方の属性、 <bpt id="p3">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>と&lt;xref:System.Attribute&gt;配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This constructor appends the attributes in the &lt;xref:System.Attribute&gt; array to the attributes in the &lt;xref:System.ComponentModel.MemberDescriptor&gt;.</source>
          <target state="translated">このコンス トラクター &lt;xref:System.Attribute&gt; &lt;xref:System.ComponentModel.MemberDescriptor&gt;。&lt;/xref:System.ComponentModel.MemberDescriptor&gt;属性に配列&lt;/xref:System.Attribute&gt;内の属性を追加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the name of the member and its attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.MemberDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>メンバーとその属性の名前を含むです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Attribute&gt; array containing the attributes you want to associate with the property.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;プロパティと関連付ける属性を含む配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified name and attributes.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した名前および属性を持つクラス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">プロパティの名前です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that contains the property attributes.</source>
          <target state="translated">型の配列&lt;xref:System.Attribute&gt;プロパティの属性を格納している&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">このプロパティが変更されたときに通知するには、その他のオブジェクトを有効にします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The component to add the handler for.</source>
          <target state="translated">ハンドラーを追加するコンポーネントです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The delegate to add as a listener.</source>
          <target state="translated">リスナーとして追加するデリゲート。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">派生クラスでオーバーライドされると、その値を変更オブジェクトをリセットするかどうかを返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The component to test for reset capability.</source>
          <target state="translated">テストするためのコンポーネントは、機能をリセットします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if resetting the component changes its value; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンポーネントをリセットする場合です。 値を変化します。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">派生クラスでオーバーライドされると、このプロパティにバインドするコンポーネントの種類を取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of component this property is bound to.</source>
          <target state="translated">A&lt;xref:System.Type&gt;にこのプロパティがバインドされているコンポーネントの型を表す&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.ComponentModel.PropertyDescriptor.GetValue<bpt id="p1">*</bpt>&gt; or &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue<ept id="p1">*</ept>&gt; methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated">ときに、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; または&lt;&gt; <ept id="p1">*</ept>&gt; メソッドが呼び出され、指定されたオブジェクトはこの型のインスタンスである可能性があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the type converter for this property.</source>
          <target state="translated">このプロパティの型コンバーターを取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used to convert the &lt;xref:System.Type&gt; of this property.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>変換に使用される、&lt;xref:System.Type&gt;このプロパティの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">指定した型のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>CreateInstance looks for a constructor that takes the specified type.</source>
          <target state="translated">CreateInstance は、指定された型を受け取るコンス トラクターを検索します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">コンス トラクターが見つかると、プロパティの型に渡されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">コンバーターとエディターは、このメソッドを使用して、コンポーネントのバージョンを作成します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">このメソッドは、1 つのコンポーネントを&amp;1; つ以上の型の再利用できます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type to create.</source>
          <target state="translated">A&lt;xref:System.Type&gt;を作成する型を表す&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A new instance of the type.</source>
          <target state="translated">型の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">別のオブジェクトが等しいかどうかに表示するには、これを比較します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object to compare to this <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これと比較するオブジェクト<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the values are equivalent; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>値が等しい場合はそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds the attributes of the <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified list of attributes in the parent class.</source>
          <target state="translated">属性を追加、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を指定した属性の一覧で、親クラスです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">重複する属性を一覧に追加された最後の&amp;1; つは保持します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that lists the attributes in the parent class.</source>
          <target state="translated">の&lt;xref:System.Collections.IList&gt;親クラスで属性を一覧表示します。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initially, this is empty.</source>
          <target state="translated">最初に、これが空です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the default <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値を返します<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">このメソッドは成功<ph id="ph1">`null`</ph>両方に対して、<ph id="ph2">`instance`</ph>パラメーターおよび<ph id="ph3">`filter`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティ、<ph id="ph1">`instance`</ph>パラメーターとは異なる、クラスのプロパティ、コンテナーは追加したり、場合に、プロパティを削除するため、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること&lt;xref:System.Type&gt;と&lt;xref:System.Attribute&gt;オブジェクト&lt;/xref:System.Attribute&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">フィルター処理は、次のルールによって定義します - a&lt;xref:System.Type&gt;オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、&lt;xref:System.Type&gt;属性のセットにします。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt; 。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-プロパティがない場合、 &lt;xref:System.Attribute&gt;、同じクラスのプロパティは含まれません、返された配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">インスタンスの場合、属性の&lt;xref:System.Attribute&gt;、プロパティは、返された配列に含まれると、完全に一致する必要があります&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; and it is the default property, it will be included in the returned array, even if there is no instance of &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-指定した場合、&lt;xref:System.Attribute&gt;と既定のプロパティに含められます、返された配列のインスタンスがない場合でも&lt;xref:System.Attribute&gt;プロパティ&lt;/xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A collection of property descriptor.</source>
          <target state="translated">プロパティ記述子のコレクション。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a specified array of attributes as a filter.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>フィルターとして指定した属性配列を使用します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">このメソッドは渡します<ph id="ph1">`null`</ph>の<ph id="ph2">`instance`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること&lt;xref:System.Type&gt;と&lt;xref:System.Attribute&gt;オブジェクト&lt;/xref:System.Attribute&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">フィルター処理は、次のルールによって定義します - a&lt;xref:System.Type&gt;オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、&lt;xref:System.Type&gt;属性のセットにします。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt; 。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-プロパティがない場合、 &lt;xref:System.Attribute&gt;、同じクラスのプロパティは含まれません、返された配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">インスタンスの場合、属性の&lt;xref:System.Attribute&gt;、プロパティは、返された配列に含まれると、完全に一致する必要があります&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-指定した場合、&lt;xref:System.Attribute&gt;インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、&lt;xref:System.Attribute&gt;プロパティ&lt;/xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">型の配列&lt;xref:System.Attribute&gt;フィルターとして使用する&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定の属性と一致するプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a given object.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から特定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">このメソッドは渡します<ph id="ph1">`null`</ph>の<ph id="ph2">`filter`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること&lt;xref:System.Type&gt;と&lt;xref:System.Attribute&gt;オブジェクト&lt;/xref:System.Attribute&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">フィルター処理は、次のルールによって定義します - a&lt;xref:System.Type&gt;オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、&lt;xref:System.Type&gt;属性のセットにします。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt; 。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-プロパティがない場合、 &lt;xref:System.Attribute&gt;、同じクラスのプロパティは含まれません、返された配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">インスタンスの場合、属性の&lt;xref:System.Attribute&gt;、プロパティは、返された配列に含まれると、完全に一致する必要があります&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-指定した場合、&lt;xref:System.Attribute&gt;インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、&lt;xref:System.Attribute&gt;プロパティ&lt;/xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">プロパティを取得するコンポーネント。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたコンポーネントのプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から特定のオブジェクトをフィルターとして指定した属性配列を使用します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること&lt;xref:System.Type&gt;と&lt;xref:System.Attribute&gt;オブジェクト&lt;/xref:System.Attribute&gt;&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; object is treated as a wildcard; it matches any property that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">フィルター処理は、次のルールによって定義します - a&lt;xref:System.Type&gt;オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、&lt;xref:System.Type&gt;属性のセットにします。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt; 。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property will not be included in the returned array.</source>
          <target state="translated">-プロパティがない場合、 &lt;xref:System.Attribute&gt;、同じクラスのプロパティは含まれません、返された配列&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of &lt;xref:System.Attribute&gt;, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">インスタンスの場合、属性の&lt;xref:System.Attribute&gt;、プロパティは、返された配列に含まれると、完全に一致する必要があります&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-   If you specify an &lt;xref:System.Attribute&gt; instance and it is the default property, it will be included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-指定した場合、&lt;xref:System.Attribute&gt;インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、&lt;xref:System.Attribute&gt;プロパティ&lt;/xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Generally, child properties should be returned by implementing the &lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt; member of the &lt;xref:System.ComponentModel.TypeConverter&gt; returned from this property.</source>
          <target state="translated">子のプロパティを実装することによって返される一般的に、&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;のメンバー、&lt;xref:System.ComponentModel.TypeConverter&gt;このプロパティからが返されます&lt;/xref:System.ComponentModel.TypeConverter&gt;&lt;/xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">プロパティを取得するコンポーネント。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">型の配列&lt;xref:System.Attribute&gt;フィルターとして使用する&lt;/xref:System.Attribute&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたコンポーネントの指定した属性と一致するプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">指定した型のエディターを取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">複数のエディターに対応するプロパティを区別するために使用されるエディターの基本データ型。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An instance of the requested editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an editor cannot be found.</source>
          <target state="translated">要求されたエディターの種類のインスタンスまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>エディターが見つからない場合。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">このメソッドは、メンバーの呼び出し中に使用されるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">通常、戻り値は、同じにする、<ph id="ph1">`instance`</ph>で渡されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the GetInvocationTarget method may return a different value.</source>
          <target state="translated">別のオブジェクトをこのインスタンスに関連付けられた他のユーザー インスタンスは、カスタム型記述子場合や、GetInvocationTarget メソッドは、異なる値を返すことがあります。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the invocation target.</source>
          <target state="translated">&lt;xref:System.Type&gt;呼び出し対象の&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The potential invocation target.</source>
          <target state="translated">潜在的な呼び出し対象です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; that should be used during invocation of members.</source>
          <target state="translated">&lt;xref:System.Object&gt;メンバーの呼び出し中を使用する必要があります&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returns a type using its name.</source>
          <target state="translated">その名前を使用して型を返します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>To find the appropriate type, this method first checks the assembly of the type that this &lt;xref:System.ComponentModel.PropertyDescriptor&gt; references.</source>
          <target state="translated">適切な型を検索するには、このメソッドはまず、アセンブリ、型のこの&lt;xref:System.ComponentModel.PropertyDescriptor&gt;参照&lt;/xref:System.ComponentModel.PropertyDescriptor&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If it does not find the type in the assembly, it calls &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt;。&lt;/xref:System.Type.GetType%2A?displayProperty=fullName&gt;が呼び出すことが見つからない場合、型、アセンブリに、</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">取得する型のアセンブリ修飾名。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that matches the given type name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a match cannot be found.</source>
          <target state="translated">A&lt;xref:System.Type&gt;指定された型名と一致するか、 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一致が見つからない場合&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">派生クラスでオーバーライドされると、コンポーネントのプロパティの現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This method automatically calls the pre-change method, &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;, and post-change method, &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;, of the &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;.</source>
          <target state="translated">このメソッドに自動的には、前の変更、 &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;、変更適用後のメソッド、および&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;、 &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;&lt;/xref:System.ComponentModel.Design.IComponentChangeService&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">値を取得する対象のプロパティを持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of a property for a given component.</source>
          <target state="translated">指定されたコンポーネントのプロパティの値。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Retrieves the current set of <ph id="ph1">`ValueChanged`</ph> event handlers for a specific component</source>
          <target state="translated">現在のセットを取得<ph id="ph1">`ValueChanged`</ph>特定のコンポーネントのイベント ハンドラー</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">イベント ハンドラーを取得する対象のコンポーネントです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A combined multicast event handler, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no event handlers are currently assigned to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">component</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">A がマルチキャスト イベント ハンドラーを結合または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>イベント ハンドラーは、現在割り当てられていない場合に<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">component</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this property should be localized, as specified in the <bpt id="p1">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティをローカライズする必要があるかどうかを示す値を取得するように指定した、 <bpt id="p1">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When a property is marked with the &lt;xref:System.ComponentModel.LocalizableAttribute&gt; set to <ph id="ph1">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">プロパティにマークされている場合、 &lt;xref:System.ComponentModel.LocalizableAttribute&gt;'éý'<ph id="ph1">`true`</ph>とその値は、ビジュアル デザイナーで使用されているリソース ファイルに保存されます&lt;/xref:System.ComponentModel.LocalizableAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">属性でプロパティをマークし、コードでプロパティを設定すると、リソース ファイルは使用されません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is marked with the <bpt id="p2">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> set to <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>メンバーが付いている場合、 <bpt id="p2">&lt;xref href="System.ComponentModel.LocalizableAttribute"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 'éý' <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">派生クラスでオーバーライドされると、このプロパティは読み取り専用であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティが読み取り専用の場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">`ValueChanged`</ph> event that you implemented.</source>
          <target state="translated">発生させる、<ph id="ph1">`ValueChanged`</ph>実装するイベントです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">このメソッドは、プロパティの値が変更されたときに、プロパティ記述子の実装によって呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The object that raises the event.</source>
          <target state="translated">イベントを発生させるオブジェクトです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;イベント データを格納します&lt;/xref:System.EventArgs&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">派生クラスでオーバーライドされると、プロパティの型を取得します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of the property.</source>
          <target state="translated">A&lt;xref:System.Type&gt;プロパティの型を表す&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">このプロパティが変更されたときに通知するには、その他のオブジェクトを有効にします。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The component to remove the handler for.</source>
          <target state="translated">ハンドラーを削除するコンポーネント。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">リスナーとして削除するデリゲート。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;handler&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">派生クラスでオーバーライドされると、コンポーネントのこのプロパティの値を既定値にリセットします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This method determines the value to reset the property to in the following order of precedence:      1.</source>
          <target state="translated">このメソッドは、次の優先順位にするプロパティをリセットする値を決定します。 1。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">このプロパティの影付きのプロパティがあります。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>There is a &lt;xref:System.ComponentModel.DefaultValueAttribute&gt; for this property.</source>
          <target state="translated">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;このプロパティの&lt;/xref:System.ComponentModel.DefaultValueAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">渡すプロパティの名前を"MyProperty"がここでは、実装している"ResetMyProperty"メソッドがあります。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; automatically in the following order:      1.</source>
          <target state="translated">このメソッドを作成、&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;次の順序で自動的に: 1&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; 。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt; method to create a new &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; to represent the changes.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;メソッドを作成、新しい&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;変更内容を表す&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt; method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;メソッドをトランザクションが開始され、変更が発生することを示します&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt; method to indicate that the changes have occurred.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;メソッドを変更が発生したことを示します&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The method calls &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt; to indicate that the transaction is completed.</source>
          <target state="translated">このメソッドの呼び出し&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;をトランザクションが完了したことを示します&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">トランザクションの目的は、サポートする<ph id="ph1">`Undo`</ph>と<ph id="ph2">`Redo`</ph>機能します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">既定値にリセットするのには、プロパティの値を持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibilityAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティはシリアル化する必要があるかどうかを示す値を取得するように指定した、 <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibilityAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.ComponentModel.DesignerSerializationVisibility"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このプロパティをシリアル化するかどうかを指定する列挙値。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">派生クラスでオーバーライドされると、別の値に、コンポーネントの値を設定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; automatically in the following order:      1.</source>
          <target state="translated">このメソッドを作成、&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;次の順序で自動的に: 1&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; 。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt; method to create a new &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; to represent the changes.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;メソッドを作成、新しい&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;変更内容を表す&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt; method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;メソッドをトランザクションが開始され、変更が発生することを示します&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The method calls the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt; method to indicate that the changes have occurred.</source>
          <target state="translated">このメソッドの呼び出し、&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;メソッドを変更が発生したことを示します&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The method calls &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt; to indicate that the transaction is complete.</source>
          <target state="translated">このメソッドの呼び出し&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;をトランザクションが完了したことを示します&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">トランザクションの目的は、サポートする<ph id="ph1">`Undo`</ph>と<ph id="ph2">`Redo`</ph>機能します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">設定するプロパティの値を持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The new value.</source>
          <target state="translated">新しい値。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">派生クラスでオーバーライドされると、このプロパティの値が永続化する必要があるかどうかを示す値を決定します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">永続化のため調査するプロパティを持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property should be persisted; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、プロパティを永続化する必要があります。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">このプロパティの値の変更通知がプロパティ記述子の外部由来しているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The SupportsChangeEvents property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; method.</source>
          <target state="translated">SupportsChangeEvents プロパティは、このプロパティの値の変更通知可能性があります以外から発生させてプロパティ記述子など、コンポーネント自体、またはに加えられたかどうか通知は、直接の呼び出しから発信されますのみかどうかを示します、&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;メソッド&lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>For example, the component may implement the &lt;xref:System.ComponentModel.INotifyPropertyChanged&gt; interface, or may have an explicit <ph id="ph1">`name``Changed`</ph> event for this property.</source>
          <target state="translated">たとえば、コンポーネントが実装することが、&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;インターフェイス、または明示的な場合があります<ph id="ph1">`name``Changed`</ph>このプロパティのイベント&lt;/xref:System.ComponentModel.INotifyPropertyChanged&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if value change notifications may originate from outside the property descriptor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティ記述子です。 外部から発生値を変更する場合の通知それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>