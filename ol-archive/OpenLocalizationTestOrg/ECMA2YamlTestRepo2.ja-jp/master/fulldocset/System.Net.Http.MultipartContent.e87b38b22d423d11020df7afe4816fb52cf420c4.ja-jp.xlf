<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8625c9f5884954010a1995d5e05ac6b42d1e13d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Http.MultipartContent.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc3b7953dac7dd2ec897b358803f9e702238f66e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ddca88583d855690138f623467f2905e0476c2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">コレクションを提供<bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マルチパートを使用してシリアル化されるオブジェクト/* コンテンツ タイプ仕様です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを作成、 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを作成、 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The subtype of the multipart content.</source>
          <target state="translated">マルチパート コンテンツのサブタイプ。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subtype</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or contains only white space characters.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">subtype</ph> <ept id="p1">&lt;/code&gt;</ept>が<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>または空白文字だけが含まれています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを作成、 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The subtype of the multipart content.</source>
          <target state="translated">マルチパート コンテンツのサブタイプ。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The boundary string for the multipart content.</source>
          <target state="translated">マルチパート コンテンツの境界文字列。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subtype</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">subtype</ph> <ept id="p1">&lt;/code&gt;</ept>が<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>または空の文字列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or contains only white space characters.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept>が<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>または空白文字だけが含まれています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> ends with a space character.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept>空白文字で終了します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">boundary</ph><ept id="p1">&lt;/code&gt;</ept> was greater than 70.</source>
          <target state="translated">長さ、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">boundary</ph> <ept id="p1">&lt;/code&gt;</ept>が 70 を超えています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Add multipart HTTP content to a collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification.</source>
          <target state="translated">コレクションをマルチパートの HTTP コンテンツを追加<bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マルチパートを使用してシリアル化されるオブジェクト/* コンテンツ タイプ仕様です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The HTTP content to add to the collection.</source>
          <target state="translated">コレクションに追加する HTTP コンテンツ。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">content</ph><ept id="p1">&lt;/code&gt;</ept> was <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally disposes of the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Net.Http.MultipartContent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オプションでマネージ リソースを破棄します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.When the <ph id="ph4">`disposing`</ph> parameter is <ph id="ph5">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Http.MultipartContent&gt; references.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。ときに、<ph id="ph4">`disposing`</ph>パラメーターは<ph id="ph5">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Net.Http.MultipartContent&gt;参照。&lt;/xref:System.Net.Http.MultipartContent&gt; 。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of <bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that get serialized using the multipart/* content type specification..</source>
          <target state="translated">コレクションを反復処理する列挙子を返します<bpt id="p1">&lt;xref href="System.Net.Http.HttpContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マルチパートを使用してシリアル化されるオブジェクト/* コンテンツ タイプ仕様.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 言語の (Visual Basic では各) foreach ステートメントは、列挙子の複雑さを非表示にします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">そのため、foreach の使用をお勧め、直接操作すると、列挙子の代わりにします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理に使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Serialize the multipart HTTP content to a stream as an asynchronous operation.</source>
          <target state="translated">非同期操作としてマルチパートの HTTP コンテンツ ストリームにシリアル化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">この操作はブロックされません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task%601&gt; object will complete after all of the content has been serialized to the target stream.</source>
          <target state="translated">返された&lt;xref:System.Threading.Tasks.Task%601&gt;オブジェクトは、すべてのコンテンツは、対象のストリームにシリアル化された後に完了します&lt;/xref:System.Threading.Tasks.Task%601&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The target stream.</source>
          <target state="translated">対象のストリーム。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Information about the transport (channel binding token, for example).</source>
          <target state="translated">トランスポート (チャネル バインド トークンなど) について説明します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This parameter may be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このパラメーターがあります<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク オブジェクト。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The explicit implementation of the &lt;xref:System.Net.Http.MultipartContent.GetEnumerator*&gt; method.</source>
          <target state="translated">明示的な実装、&lt;xref:System.Net.Http.MultipartContent.GetEnumerator*&gt;メソッド&lt;/xref:System.Net.Http.MultipartContent.GetEnumerator*&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理に使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Determines whether the HTTP multipart content has a valid length in bytes.</source>
          <target state="translated">HTTP マルチパート コンテンツがバイト単位で有効な長さを持つかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The TryComputeLength method gives HTTP multipart content the ability to calculate the content length.</source>
          <target state="translated">TryComputeLength メソッドは、マルチパート コンテンツの HTTP コンテンツの長さを計算する機能を示します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This is useful for content types which are able to easily calculate the content length.</source>
          <target state="translated">これは、簡単にコンテンツの長さを計算することは、コンテンツ タイプに役立ちます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">コンテンツの長さが可能でないか、高価な (は必要なシリアル化高価なや、大量のメモリを割り当てることが必要に、コンテンツ全体をバッファーに書き込むシステム) を計算するには、このメソッドは返す<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If this method returns <ph id="ph1">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</source>
          <target state="translated">このメソッドが戻る場合<ph id="ph1">`false`</ph>、つまり、チャンク転送が必要かあるコンテンツをサーバーに送信される前にバッファーを取得する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The length in bytes of the HHTP content.</source>
          <target state="translated">HHTP コンテンツの長さをバイト単位です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p2">&lt;/code&gt;</ept> is a valid length; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">length</ph> <ept id="p2">&lt;/code&gt;</ept>長さが無効です。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>