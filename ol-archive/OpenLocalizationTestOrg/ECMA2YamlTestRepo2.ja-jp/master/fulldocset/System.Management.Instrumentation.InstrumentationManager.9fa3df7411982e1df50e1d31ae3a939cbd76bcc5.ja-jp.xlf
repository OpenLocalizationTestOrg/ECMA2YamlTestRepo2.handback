<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">374eb1b43b33ea113bf7babe1da894a751bf1790</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Management.Instrumentation.InstrumentationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc0836d753334b76864c2b17b9a3e338784c728e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f26e0b3e4d6fd2b6ba5058255556ca645075297b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that manage the lifetime and the model used for decoupled providers.</source>
          <target state="translated">有効期間は、分離プロバイダーに使用するモデルを管理するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</source>
          <target state="translated">注: WMI .NET ライブラリと見なされます最終的な状態は、およびなし開発ではさらに、拡張機能、または更新プログラムは、これらのライブラリに影響を与えるセキュリティ以外の関連する問題できるようになります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>MI APIs<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.</source>
          <target state="translated"><bpt id="p1">[</bpt>MI Api<ept id="p1">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept>すべての新しい開発で使用する必要があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Decoupled providers are hosted by an application.</source>
          <target state="translated">分離プロバイダーは、アプリケーションによってホストされます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Two methods can be used by the application to make instances of WMI classes available: publish/revoke or the callback method.</source>
          <target state="translated">2 つのメソッドは、WMI クラスのインスタンスを使用できるようにするアプリケーションで使用できます。 発行または取り消すか、コールバック メソッド。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The callback method uses the &lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt; and &lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt; methods.</source>
          <target state="translated">コールバック メソッドを使用して、&lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;と&lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;メソッド&lt;/xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;&lt;/xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the publish/revoke model, the WMI infrastructure provides default behavior for many of the methods you have to write yourself in the callback method.</source>
          <target state="translated">発行または取り消すモデルでは、WMI インフラストラクチャは、多くのコールバック メソッドで自分で作成する必要があるメソッドの既定の動作を提供します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These include the enumeration and bind methods.</source>
          <target state="translated">これらは、列挙体を含めるし、メソッドをバインドします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this model, the application creates instances and publishes them.</source>
          <target state="translated">このモデルでは、アプリケーションは、インスタンスを作成しに公開します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The application is responsible for ensuring that the key properties of the classes are respected.</source>
          <target state="translated">このアプリケーションは、クラスのキー プロパティが守られていることを保証します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The application is also responsible for deleting instances.</source>
          <target state="translated">アプリケーションは、インスタンスを削除する役割もできます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the callback model, the WMI infrastructure expects the application to have methods that handle enumeration, binding and any other methods required to implement the functionality of the provider.</source>
          <target state="translated">コールバック モデルでは、WMI インフラストラクチャには、列挙型、バインディング、およびプロバイダーの機能を実装するために必要なその他のメソッドを処理するメソッドをアプリケーションが期待しています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It calls into the application for this functionality and fails if it does not exist or is not implemented properly.</source>
          <target state="translated">この機能のため、アプリケーションを呼び出すし、それが存在しないか、正しく実装されていない場合は失敗します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The application registers the type of its WMI classes with the infrastructure by calling &lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt; and indicates that it no longer wants the WMI classes exposed by calling &lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;.</source>
          <target state="translated">アプリケーションは、インフラストラクチャ&lt;xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;を示し不要になった必要である&lt;xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;。&lt;/xref:System.Management.Instrumentation.InstrumentationManager.UnregisterType%2A&gt;を呼び出すことによって公開される WMI クラス&lt;/xref:System.Management.Instrumentation.InstrumentationManager.RegisterType%2A&gt;を呼び出すことによってその WMI クラスの種類を登録します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Makes an instance of a provider available within the WMI infrastructure.</source>
          <target state="translated">により、プロバイダーのインスタンスは、WMI インフラストラクチャ内で使用できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An instance of the class that implements the provider to publish.</source>
          <target state="translated">公開するプロバイダーを実装するクラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Registers an assembly with the WMI infrastructure.</source>
          <target state="translated">WMI インフラストラクチャにアセンブリを登録します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The assembly to register.</source>
          <target state="translated">登録するアセンブリ。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Registers a class with the WMI infrastructure.</source>
          <target state="translated">クラス、WMI インフラストラクチャに登録します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the class.</source>
          <target state="translated">クラスの型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</source>
          <target state="translated">現在使用可能なプロバイダーのインスタンスは、WMI インフラストラクチャ内で使用できなくなります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of the class that implements the provider to revoke.</source>
          <target state="translated">破棄するプロバイダーを実装するクラスのインスタンス。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Unregisters an assembly currently registered with the WMI infrastructure.</source>
          <target state="translated">現在、WMI インフラストラクチャに登録されているアセンブリを登録解除します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The registered assembly to unregister.</source>
          <target state="translated">登録したアセンブリの登録を解除します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Unregisters a class registered with the WMI infrastructure.</source>
          <target state="translated">WMI インフラストラクチャに登録されたクラスの登録を解除します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The registered type to unregister.</source>
          <target state="translated">登録を解除する登録済みの型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>