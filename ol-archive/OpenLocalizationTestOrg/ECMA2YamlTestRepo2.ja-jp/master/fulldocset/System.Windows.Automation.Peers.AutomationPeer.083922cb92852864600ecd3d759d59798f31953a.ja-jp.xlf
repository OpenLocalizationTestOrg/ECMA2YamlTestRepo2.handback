<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac9b3d7d25843d98c9f37d1a6afe3ec5f7312598</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Peers.AutomationPeer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b8ec93f25e336b70b8ade307d361feb2a24cc5f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a5771a919351d70e53f3fd52dcf480917ee7402</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class that exposes an element to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>.</source>
          <target state="translated">要素を公開する基本クラスを提供<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> queries the root of a <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> application about an element, the root returns the <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer for that element.</source>
          <target state="translated">ときに<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>のルートのクエリ、<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>要素に関するアプリケーションのルートを返します、<ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>その要素のピアです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The peer also responds to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> queries about its corresponding element.</source>
          <target state="translated">対応して、ピア<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>クエリについて、対応する要素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides initialization for base class values when they are called by the constructor of a derived class.</source>
          <target state="translated">派生クラスのコンス トラクターによって呼び出された場合は、基本クラスの値の初期化を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is reported to the automation client as a source for all the events that come from this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これに由来するすべてのイベントのソースとして、オートメーション クライアントに報告される<bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the source of events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントのソースであります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the accelerator key combinations for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">アクセラレータ キーに関連付けられている要素の組み合わせを取得、<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>ピアです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The accelerator key.</source>
          <target state="translated">アクセラレータ キー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If an application responds to keyboard events to provide shortcut key behavior, it should return a string that contains the keyboard shortcut combination.</source>
          <target state="translated">アプリケーションは、ショートカット キーの動作を提供するキーボード イベントに応答する場合は、キーボード ショートカットの組み合わせを表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, for an element that can copy text to the clipboard, this attached property might be set to the value "CTRL+C".</source>
          <target state="translated">たとえば、テキストをクリップボードにコピーする要素は、この添付プロパティを値"CTRL + C"に設定可能性があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The accelerator key.</source>
          <target state="translated">アクセラレータ キー。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the access key for the element that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられている要素のアクセス キーを取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The string that contains the access key.</source>
          <target state="translated">アクセス キーを含む文字列です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An access key (sometimes referred to as a keyboard shortcut or mnemonic) is a character in the text of a menu, menu item, or label of a control such as a button that invokes the associated menu function.</source>
          <target state="translated">(キーボード ショートカットまたはニーモニックとも呼ばれます) のアクセス キーは、メニューのメニュー項目または関連付けられたメニュー関数を呼び出すボタンなどのコントロールのラベルのテキストの文字です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, to provide a shortcut way to open the <ph id="ph1">`File`</ph> menu (for which the access key is typically F), an element might have this attached property set to "ALT+F".</source>
          <target state="translated">たとえば、ショートカットを表示する方法を提供するため、<ph id="ph1">`File`</ph>メニュー (アクセス キーは通常 F)、要素がありますこの添付プロパティを"alt キーを押しながら F"に設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The string that contains the access key.</source>
          <target state="translated">アクセス キーを含む文字列です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the control type for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">関連付けられている要素のコントロールの種類を取得、<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>ピアです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The control type.</source>
          <target state="translated">コントロールの種類。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The control type.</source>
          <target state="translated">コントロールの種類。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt; of the element that is associated with the automation peer.</source>
          <target state="translated">取得、&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt;オートメーション ピアに関連付けられている要素の&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The value of the automation identifier is the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt; property.</source>
          <target state="translated">オートメーション識別子の値は、&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;プロパティ&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If that property is not set, the value is the &lt;xref:System.Windows.FrameworkElement.Name%2A&gt; property.</source>
          <target state="translated">そのプロパティが設定されていない場合、値は、&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;プロパティ&lt;/xref:System.Windows.FrameworkElement.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The identifier.</source>
          <target state="translated">識別子です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The value of the automation identifier is the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt; property.</source>
          <target state="translated">オートメーション識別子の値は、&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;プロパティ&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If that property is not set, the value is the &lt;xref:System.Windows.FrameworkElement.Name%2A&gt; property.</source>
          <target state="translated">そのプロパティが設定されていない場合、値は、&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;プロパティ&lt;/xref:System.Windows.FrameworkElement.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The string that contains the identifier.</source>
          <target state="translated">識別子を表す文字列。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the screen coordinates of the element that is associated with the automation peer.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> automation peer に関連付けられている要素の画面座標を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The bounding rectangle.</source>
          <target state="translated">外接する四角形。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The bounding rectangle.</source>
          <target state="translated">外接する四角形。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the collection of GetChildren elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</source>
          <target state="translated">オートメーション ピアの直接の子要素として、UI オートメーション ツリーで表される GetChildren 要素のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The collection of child elements.</source>
          <target state="translated">子要素のコレクション。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection of child elements.</source>
          <target state="translated">子要素のコレクション。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a name that is used with <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, to differentiate the control that is represented by this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">使用される名前を取得<bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、これによって表されるコントロールを区別するために<bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">クラス名。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">クラス名。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the element that is associated with the automation peer that responds to a mouse click.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>マウスに応答するオートメーション ピアに関連付けられている要素をクリックします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, if the element represents a &lt;xref:System.Windows.Controls.Button&gt;, a clickable point is any point in the visible client area of the &lt;xref:System.Windows.Controls.Button&gt; that issues the command that the button represents when it is clicked by the mouse.</source>
          <target state="translated">たとえば、要素を表している場合、 &lt;xref:System.Windows.Controls.Button&gt;、クリック可能なポイントは、表示されているクライアント領域の任意の時点、&lt;xref:System.Windows.Controls.Button&gt;をマウスでクリックしてされたときに、ボタンが表すコマンドを発行する&lt;/xref:System.Windows.Controls.Button&gt;&lt;/xref:System.Windows.Controls.Button&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A point in the clickable area of the element.</source>
          <target state="translated">要素のクリック可能な領域内のポイント。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A point within the clickable area of the element.</source>
          <target state="translated">要素のクリック可能な領域内のポイント。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets text that describes the functionality of the control that is associated with the automation peer.</source>
          <target state="translated">オートメーション ピアに関連付けられているコントロールの機能を説明するテキストを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The returned string typically provides the same text that is provided by the tooltip for the control.</source>
          <target state="translated">返される文字列は、通常、コントロールのツールヒントによって提供されるのと同じテキストを提供します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The help text.</source>
          <target state="translated">ヘルプ テキスト。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The help text.</source>
          <target state="translated">ヘルプ テキスト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Tells <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> where in the <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree to place the <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being hosted by a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> element.</source>
          <target state="translated">指示<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>内の場所、<ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>を配置するツリー、 <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>によってホストされている、<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>要素。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method returns the hosted <ph id="ph1">`hwnd`</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">`hwnd`</ph> objects.</source>
          <target state="translated">このメソッドは、ホストされている返します<ph id="ph1">`hwnd`</ph>に<ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>コントロールをホストする<ph id="ph3">`hwnd`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that is associated with an element that immediately hosts an <ph id="ph1">`hwnd`</ph> must override this method.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;直ちにをホストしている要素に関連付けられている、<ph id="ph1">`hwnd`</ph>このメソッドをオーバーライドする必要があります&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If this method is not overridden, <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> places the <ph id="ph2">`hwnd`</ph> as a child element of the &lt;xref:System.Windows.Interop.HwndSource&gt; that hosts the whole application.</source>
          <target state="translated">このメソッドがオーバーライドされていない場合<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>配置、<ph id="ph2">`hwnd`</ph>の子要素として、&lt;xref:System.Windows.Interop.HwndSource&gt;全体のアプリケーションをホストする&lt;/xref:System.Windows.Interop.HwndSource&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Typically, you want to override this default behavior and set <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> to position the hosted <ph id="ph2">`hwnd`</ph> parallel to the place where it is located in the <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> logical tree.</source>
          <target state="translated">通常、この既定の動作をオーバーライドし、設定を選択<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>ホストを配置する<ph id="ph2">`hwnd`</ph>並列に配置されている場所に、<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>論理ツリー。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Except in hosting scenarios, do not allow &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; types to override this method.</source>
          <target state="translated">ホストのシナリオでは、許可しない&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;このメソッドをオーバーライドする型&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In addition to overriding this method, the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; types that are associated with an element that immediately hosts an <ph id="ph1">`hwnd`</ph> must return the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that is cast to &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt; in response to WM_GETOBJECT coming to the hosted <ph id="ph2">`hwnd`</ph>.</source>
          <target state="translated">このメソッドをオーバーライドするだけでなく、&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;直ちにをホストしている要素に関連付けられている型、<ph id="ph1">`hwnd`</ph>返す必要があります、&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;にキャストする&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;WM_GETOBJECT で受信するホストへの応答<ph id="ph2">`hwnd`</ph>&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To get a pointer to &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;, call &lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt; &lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;。&lt;/xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;を呼び出し&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;、ポインターを取得するには</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method returns the hosted <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <bpt id="p2">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">このメソッドは、ホストされている返します<bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>に<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>コントロールをホストする<bpt id="p2">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets text that conveys the visual status of the element that is associated with this automation peer.</source>
          <target state="translated">この automation peer に関連付けられている要素のビジュアルの状態を表すテキストを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, the status of a messenger contact might be "Busy" or "Online".</source>
          <target state="translated">たとえば、「ビジー」または"Online"messenger の連絡先の状態があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The status.</source>
          <target state="translated">状態です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The status.</source>
          <target state="translated">状態です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a string that describes what kind of item an object represents.</source>
          <target state="translated">表す、オブジェクトの項目の種類を説明する文字列を取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Examples of the returned string are "Mail Message", "Contact", and "Document".</source>
          <target state="translated">返される文字列には、「メッセージ」、"Contact"、"Document"などがあります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The kind of item.</source>
          <target state="translated">項目の種類。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The kind of item.</source>
          <target state="translated">項目の種類。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is targeted to the element.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の<bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>要素を対象とします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For example, if the element is a &lt;xref:System.Windows.Controls.ComboBox&gt; control, the GetLabeledBy method gets the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; for the &lt;xref:System.Windows.Controls.Label&gt; that is associated with the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">たとえば、要素は、&lt;xref:System.Windows.Controls.ComboBox&gt;コントロール、GetLabeledBy メソッドを取得&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;&lt;xref:System.Windows.Controls.Label&gt;&lt;xref:System.Windows.Controls.ComboBox&gt;。&lt;/xref:System.Windows.Controls.ComboBox&gt;に関連付けられている&lt;/xref:System.Windows.Controls.Label&gt;&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;&lt;/xref:System.Windows.Controls.ComboBox&gt;場合</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the following image, the &lt;xref:System.Windows.Controls.Label&gt; "Themes" is targeted to the &lt;xref:System.Windows.Controls.ComboBox&gt;; therefore the &lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt; for the &lt;xref:System.Windows.Controls.Label&gt; also targets the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Label&gt;「テーマ」が対象とする、&lt;xref:System.Windows.Controls.ComboBox&gt;です。 したがって&lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;&lt;xref:System.Windows.Controls.Label&gt;も&lt;xref:System.Windows.Controls.ComboBox&gt;。&lt;/xref:System.Windows.Controls.ComboBox&gt;をターゲット&lt;/xref:System.Windows.Controls.Label&gt;に&lt;/xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;&lt;/xref:System.Windows.Controls.ComboBox&gt;&lt;/xref:System.Windows.Controls.Label&gt;、次の図</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When the user presses <bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>, the &lt;xref:System.Windows.Controls.ComboBox&gt; gets focus instead of the &lt;xref:System.Windows.Controls.Label&gt;.</source>
          <target state="translated">押されたとき<bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>、 &lt;xref:System.Windows.Controls.ComboBox&gt; &lt;xref:System.Windows.Controls.Label&gt;.&lt;/xref:System.Windows.Controls.Label&gt;の代わりにフォーカスを取得&lt;/xref:System.Windows.Controls.ComboBox&gt;する</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Display properties shows labeled by usage<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>Display properties shows labeled by usage<ept id="p2">")</ept>       The GetLabeledBy method for &lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt; returns the &lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt; for the corresponding &lt;xref:System.Windows.Controls.Label&gt;.</source>
          <target state="translated"><bpt id="p1">![</bpt>使用してラベルの付いた表示プロパティを示しています<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>表示プロパティを示しますを使用してラベル付けされた<ept id="p2">")</ept>&lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;を返します&lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;対応する&lt;xref:System.Windows.Controls.Label&gt;&lt;/xref:System.Windows.Controls.Label&gt;&lt;/xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;&lt;/xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;の「GetLabeledBy メソッド。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This enables an automation client to get the text string that describes the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">これにより、 &lt;xref:System.Windows.Controls.ComboBox&gt;。&lt;/xref:System.Windows.Controls.ComboBox&gt;を説明するテキスト文字列を取得するオートメーション クライアント</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the element that is targeted by the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が対象となる要素の<bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the element that is targeted by the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が対象となる要素の<bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets a human-readable localized string that represents the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the control that is associated with this automation peer.</source>
          <target state="translated">表す人間が判読できるローカライズされた文字列を取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>この automation peer に関連付けられているコントロールの値。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type of the control.</source>
          <target state="translated">コントロールの型。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The type of the control.</source>
          <target state="translated">コントロールの型。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets text that describes the element that is associated with this automation peer.</source>
          <target state="translated">この automation peer に関連付けられている要素を説明するテキストを取得します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method calls the derived implementation of &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;.</source>
          <target state="translated">このメソッドは派生&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;の実装を呼び出します</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name.</source>
          <target state="translated">名前です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can think of this value as a string that users use to explain the control they are referring to.</source>
          <target state="translated">ユーザーを使用して参照しているコントロールの説明を文字列として、この値を考えることができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This property is used by tools such as Narrator to tell the user what the control is.</source>
          <target state="translated">このプロパティは、コントロールの内容をユーザーに伝えるためナレーターなどのツールによって使用されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For example, a button with a string "OK" should return "OK".</source>
          <target state="translated">たとえば、文字列"OK"のボタンは、"OK"を返す必要があります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Controls.ListBox&gt; control that lets users select a color might return "Colors".</source>
          <target state="translated">A&lt;xref:System.Windows.Controls.ListBox&gt;の色を選択できるようにするコントロールは、「色」を返す場合があります。&lt;/xref:System.Windows.Controls.ListBox&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Make sure that you have assigned a name to all controls in the <ph id="ph1">[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]</ph> so that accessibility tools such as screen readers can refer to each control in a localized manner.</source>
          <target state="translated">すべてのコントロールに名前を割り当てることを確認してください、<ph id="ph1">[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]</ph>ユーザー補助ツールなど、スクリーン リーダーは、ローカライズされた方法で各コントロールを参照できるようにします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The string that contains the label.</source>
          <target state="translated">ラベルを表す文字列。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the explicit control orientation, if any.</source>
          <target state="translated">存在する場合は、明示的な制御の向きを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The orientation of the control.</source>
          <target state="translated">コントロールの方向です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The orientation of the control.</source>
          <target state="translated">コントロールの方向です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the parent of this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これの親である<bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The parent automation peer.</source>
          <target state="translated">親のオートメーション ピアです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the control pattern that is associated with the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">派生クラスでオーバーライドされると、コントロール パターンを取得しますが、指定された関連付けられている<bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">値、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The object that implements the pattern interface; <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this peer does not support this interface.</source>
          <target state="translated">パターン インターフェイスを実装するオブジェクト<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このピアがこのインターフェイスをサポートしていない場合。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified point.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された点からです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The position on the screen to get the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from.</source>
          <target state="translated">画面上での位置、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>からです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified point.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した位置にします。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called from &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt;から呼び出されます</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The position on the screen to get the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from.</source>
          <target state="translated">画面上での位置、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>からです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified point.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した位置にします。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</source>
          <target state="translated">現在この automation peer に関連付けられている要素にキーボード フォーカスがあるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素にキーボード フォーカスがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素にキーボード フォーカスがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Triggers recalculation of the main properties of the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and raises the &lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt; notification to the Automation Client if the properties changed.</source>
          <target state="translated">主要なプロパティの計算が行われます、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を発生させると、&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;プロパティが変更された場合、オートメーション クライアントに通知します&lt;/xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Examples of main properties include, but are not limited to, &lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt; and &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;.</source>
          <target state="translated">主要なプロパティの例がありますが、 &lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt; &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;。&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;&lt;/xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;に限定されていません</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Typically, updates and notifications happen automatically after the update of the layout in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">通常、更新および通知自動的に行われますでレイアウトの更新後<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>(The update occurs in response to the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event.) Sometimes, however, properties change without raising the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event.</source>
          <target state="translated">(への応答が発生した更新プログラム、&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;イベントです)&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt; 。場合によっては、ただし、プロパティ変更を発生させず、&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;イベント&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, when the whole &lt;xref:System.Windows.Window&gt; moves, the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event is not raised.</source>
          <target state="translated">たとえば、全体&lt;xref:System.Windows.Window&gt;に移動、&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;イベントは発生しません&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt;&lt;/xref:System.Windows.Window&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In this example, the set of &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt; objects change because the objects are expressed in screen coordinates.</source>
          <target state="translated">この例では、一連の&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;オブジェクトのオブジェクトは画面座標で表されているために変更します&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Therefore, the &lt;xref:System.Windows.Window&gt; must call InvalidatePeer on its peer on &lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;.</source>
          <target state="translated">したがって、&lt;xref:System.Windows.Window&gt;そのピア&lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;。&lt;/xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;で InvalidatePeer を呼び出す必要があります。&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</source>
          <target state="translated">この automation peer に関連付けられている要素には、ユーザーに表示されるデータが含まれるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A content element contains data that is presented to the user.</source>
          <target state="translated">コンテンツの要素には、ユーザーに表示されるデータが含まれています。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>An example of a content element is an item in a list box or a button in a dialog box.</source>
          <target state="translated">コンテンツ要素の例は、リスト ボックス内のアイテムまたはダイアログ ボックスのボタンです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>You typically use non-content elements (which are also referred to as peripheral elements) to work with the content in a composite control.</source>
          <target state="translated">通常、非コンテンツ要素 (これとも呼びます周辺要素) を使用するには、複合コントロールのコンテンツを操作します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An example of a non-content element is the button in a drop-down control.</source>
          <target state="translated">非コンテンツ要素の例は、ドロップダウン コントロールのボタンです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a content element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素のコンテンツ要素である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a content element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素のコンテンツ要素である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/add/includes/tla2sharptla-gui-md.md)]</ph>.</source>
          <target state="translated">内のコントロールの論理構造として、または対話的なものとして、ユーザーが、要素を認識するかどうかを示す値を取得、<ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/add/includes/tla2sharptla-gui-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がコントロールである場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がコントロールである場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element associated with this automation peer supports interaction.</source>
          <target state="translated">この automation peer に関連付けられている要素が相互作用をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element supports interaction; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素は、対話をサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the automation peer can receive and send events; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オートメーション ピアがイベントを送受信できる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> hosts <bpt id="p2">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">示す値を取得するかどうか、要素に関連付けられているこの<bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ホスト<bpt id="p2">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>で<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Two examples of elements that host <ph id="ph1">`hwnds`</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> are &lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt; and &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.</source>
          <target state="translated">ホストしている要素の&amp;2; つの例<ph id="ph1">`hwnds`</ph>で<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>は&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;および&lt;xref:System.Windows.Controls.Primitives.Popup&gt;.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>These peers must also override &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;.</source>
          <target state="translated">また、これらのピアは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;をオーバーライドする可能性があります。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element that is associated with this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> hosts <bpt id="p3">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>かどうか、要素に関連付けられているこの<bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ホスト<bpt id="p3">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>で<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element can accept keyboard focus.</source>
          <target state="translated">要素がキーボード フォーカスを受け入れるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can accept keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がキーボード フォーカスを受け入れることができる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can accept keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がキーボード フォーカスを受け入れることができる場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an element is off the screen.</source>
          <target state="translated">要素が画面をオフにするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This property does not indicate whether the element is visible.</source>
          <target state="translated">このプロパティは、要素が表示されているかどうかを示すものではありません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>In some circumstances, an element is on the screen but is still not visible.</source>
          <target state="translated">状況によっては、要素は、画面には表示されていないです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>For example, if the element is on the screen but obscured by other elements, it might not be visible.</source>
          <target state="translated">たとえば、要素が他の要素によって非表示になるが、画面上にある場合は、これは表示されません。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>In this case, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">この場合、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is not on the screen; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素が画面上にない場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is not on the screen; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素が画面上にない場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element contains sensitive content.</source>
          <target state="translated">要素に機密性の高いコンテンツが含まれるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element contains sensitive content such as a password; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素には、パスワードなどの機密性の高いコンテンツが含まれている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element contains sensitive content; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素には、機密情報が含まれている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</source>
          <target state="translated">フォームにこのピアに関連付けられている要素を完了する必要があるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element must be completed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素を完了する必要があります。 場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt;によって呼び出されます</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is must be completed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要素がある場合を完了する必要があります。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the specified event.</source>
          <target state="translated">示す値を取得するかどうか<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>が指定されたイベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Typically, you call this method before creating the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that raises the event.</source>
          <target state="translated">通常、作成する前にこのメソッドを呼び出す、&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;イベントを発生させます&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This method is a performance measure because if <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> does not listen for the event, it does not make sense to create a peer to raise one.</source>
          <target state="translated">このメソッドは、パフォーマンスの基準場合<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>はリッスンしません、イベントのことは無意味にピアを発生させるを作成します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is static and only answers if a delegate listens for the specified event in <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>, not for an event on a specific element.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このメソッドは静的であり、デリゲートがで指定したイベントをリッスンする場合にのみ応答<ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>ではなく、イベントの特定の要素。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> can create broadcast listeners; therefore the per-element information is irrelevant.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>ブロードキャストのリスナーを作成できます。そのため、要素ごとの情報は無効です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
          <target state="translated">列挙値の&amp;1; つ。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_boolean" name="boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the event.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_boolean" name="boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を示すかどうか<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>がイベントをリッスンします。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> proxy.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定された<bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>プロキシ。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The class that implements <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">実装するクラス<bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> proxy.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定された<bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>プロキシ。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定された<bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The automation peer.</source>
          <target state="translated">オートメーション ピアです。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The proxy.</source>
          <target state="translated">プロキシ。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Called by the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to raise the <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">によって呼び出される、 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>させる、 <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>イベント。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Raises an automation event.</source>
          <target state="translated">オートメーション イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The event identifier.</source>
          <target state="translated">イベントの識別子です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Raises an event to notify the automation client of a changed property value.</source>
          <target state="translated">変更されたプロパティ値のオートメーション クライアントに通知するイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The property that changed.</source>
          <target state="translated">変更されたプロパティ。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The previous value of the property.</source>
          <target state="translated">プロパティの前の値。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The new value of the property.</source>
          <target state="translated">プロパティの新しい値。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Synchronously resets the tree of child elements by calling &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt;を呼び出すことによって、子要素のツリーを同期的にリセットします。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Use this method in certain peer implementations that change the set of child elements in response to a call to a control pattern interface.</source>
          <target state="translated">コントロール パターン インターフェイスへの呼び出しに応答内の子要素のセットを変更する特定のピア実装では、このメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An example is &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;, which can change the child elements of the peer by moving the &lt;xref:System.Windows.Documents.TextRange&gt;.</source>
          <target state="translated">例としては、 &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt; &lt;xref:System.Windows.Documents.TextRange&gt;。&lt;/xref:System.Windows.Documents.TextRange&gt;を移動することによって、ピアの子要素を変更することができます。&lt;/xref:System.Windows.Automation.Provider.ITextProvider&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus on the element that is associated with this automation peer.</source>
          <target state="translated">この automation peer に関連付けられている要素にキーボード フォーカスを設定します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt;.</source>
          <target state="translated">派生クラスでオーバーライドされるは&lt;xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt;。&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt;によって呼び出されます</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>