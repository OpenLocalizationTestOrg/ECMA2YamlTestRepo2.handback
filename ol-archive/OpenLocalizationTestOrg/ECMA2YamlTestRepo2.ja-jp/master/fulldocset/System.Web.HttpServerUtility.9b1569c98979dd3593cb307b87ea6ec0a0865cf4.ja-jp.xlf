<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c8bd05644a5981d99be6b1280f02fd389a0ee79</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.HttpServerUtility.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f062cafa90ffba31c8dbfe7fbb94397f0c3e7037</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">441b66e4ae2fe9b18006a560e441611ae6bf5b2b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides helper methods for processing Web requests.</source>
          <target state="translated">Web 要求を処理するヘルパー メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The methods and properties of the HttpServerUtility class are exposed through the intrinsic &lt;xref:System.Web.HttpContext.Server%2A&gt; object provided by ASP.NET.</source>
          <target state="translated">メソッドと HttpServerUtility クラスのプロパティは、組み込みを通じて公開される&lt;xref:System.Web.HttpContext.Server%2A&gt;ASP.NET によって提供されるオブジェクト&lt;/xref:System.Web.HttpContext.Server%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Clears the previous exception.</source>
          <target state="translated">前の例外をクリアします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</source>
          <target state="translated">オブジェクトのプログラム識別子 (ProgID) で識別される COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The class or type of object to create an instance of.</source>
          <target state="translated">クラスまたはのインスタンスを作成するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An instance of the object could not be created.</source>
          <target state="translated">オブジェクトのインスタンスを作成できませんでした。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's type.</source>
          <target state="translated">オブジェクトの型で識別される COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; representing the object to create.</source>
          <target state="translated">A&lt;xref:System.Type&gt;を作成するオブジェクトを表すします&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a server instance of a COM object identified by the object's class identifier (CLSID).</source>
          <target state="translated">オブジェクトのクラス id (CLSID) で識別される COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The class identifier of the object to create an instance of.</source>
          <target state="translated">インスタンスを作成するオブジェクトのクラス識別子です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An instance of the object could not be created.</source>
          <target state="translated">オブジェクトのインスタンスを作成できませんでした。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">現在の要求のコンテキストで指定された仮想パスのハンドラーを実行します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Execute method continues execution of the original page after execution of the new page is completed.</source>
          <target state="translated">Execute メソッドは、新しいページの実行が完了した後に、元のページの実行を続行します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method unconditionally transfers execution to another handler.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;メソッドが別のハンドラーの実行を無条件で転送します&lt;/xref:System.Web.HttpServerUtility.Transfer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the Execute method.</source>
          <target state="translated">ASP.NET では、Execute メソッドによって提供されるリソースを表示する現在のユーザーが許可されているは検証されません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Execute method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接 Execute メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Execute method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッド、Execute メソッドではなく&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.HttpResponse.Redirect%2A&gt; performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Execute method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;メソッド、Execute メソッドを呼び出して前にします&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p1">*</ept>&gt; collections.</source>
          <target state="translated">現在の要求のコンテキストで指定された仮想パスのハンドラーを実行し、オフにするかどうかを指定します、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p4">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p4">*</ept>&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;&gt;<bpt id="p4">*</bpt>&gt; and &lt;&gt;<ept id="p4">*</ept>&gt; collections.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">現在の要求のコンテキストで指定された仮想パスのハンドラーを実行します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; captures output from the executed handler.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;実行したハンドラーからの出力をキャプチャします&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Execute method continues execution of the original request after execution of the virtual path specified is completed.</source>
          <target state="translated">Execute メソッドは、指定された仮想パスの実行が完了した後に、元の要求の実行を続行します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method unconditionally transfers execution to another handler.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;メソッドが別のハンドラーの実行を無条件で転送します&lt;/xref:System.Web.HttpServerUtility.Transfer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the Execute method.</source>
          <target state="translated">ASP.NET では、Execute メソッドによって提供されるリソースを表示する現在のユーザーが許可されているは検証されません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Execute method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接 Execute メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Execute method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッド、Execute メソッドではなく&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.HttpResponse.Redirect%2A&gt; performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Execute method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;メソッド、Execute メソッドを呼び出して前にします&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to capture the output.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;、出力をキャプチャする&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">現在の要求のコンテキストで指定された仮想パスのハンドラーを実行します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; captures output from the page and a Boolean parameter specifies whether to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p1">*</ept>&gt; collections.</source>
          <target state="translated">A &lt;xref:System.IO.TextWriter&gt;、ページ、およびブール値パラメーターからの出力をキャプチャすると、オフにするかどうかを指定します、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コレクションです&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpServerUtility.Execute%2A&gt; method continues execution of the original request after execution of the specified virtual path is completed.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;メソッドは、指定した仮想パスの実行が完了した後に、元の要求の実行を続けます&lt;/xref:System.Web.HttpServerUtility.Execute%2A&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method unconditionally transfers execution to another handler.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;メソッドが別のハンドラーの実行を無条件で転送します&lt;/xref:System.Web.HttpServerUtility.Transfer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the Execute method.</source>
          <target state="translated">ASP.NET では、Execute メソッドによって提供されるリソースを表示する現在のユーザーが許可されているは検証されません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Execute method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接 Execute メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Execute method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッド、Execute メソッドではなく&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.HttpResponse.Redirect%2A&gt; performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Execute method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;メソッド、Execute メソッドを呼び出して前にします&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to capture the output.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;、出力をキャプチャする&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p4">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p4">*</ept>&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;&gt;<bpt id="p4">*</bpt>&gt; and &lt;&gt;<ept id="p4">*</ept>&gt; collections.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">現在の要求のコンテキストで指定された仮想パスのハンドラーを実行します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; captures output from the executed handler and a Boolean parameter specifies whether to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p1">*</ept>&gt; collections.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;実行したハンドラーとブール型パラメーターからの出力をキャプチャすると、オフにするかどうかを指定します、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コレクションです&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">事前定義された、特定の種類の共通言語仕様 (CLS) に準拠した任意の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">従来の ASP (従来の ASP とも呼ばれます) のページまたは ASP.NET ページではなく HTTP ハンドラーのクラスで定義されている実行可能コードは、これらの特定の要求に応答します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスと対話する HTTP ハンドラーを使用して、機能が類似している ISAPI 拡張機能には、プログラミング モデルがより単純です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the Execute method.</source>
          <target state="translated">ASP.NET は、Execute メソッドによって提供されるリソースを表示する現在のユーザーが許可されていることを確認できません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the Execute method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接は Execute メソッドで示され、新しいリソースの認証と承認のロジックを再実行されませんするハンドラーを呼び出します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアント リソースにアクセスするために適切な承認を許可する必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Execute method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッド、Execute メソッドではなく&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるため、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックにそれが加わっています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Execute method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;メソッド、Execute メソッドを呼び出して前にします&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The HTTP handler that implements the <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to transfer the current request to.</source>
          <target state="translated">HTTP ハンドラーを実装する、 <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を現在の要求を転送します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; to capture the output.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;、出力をキャプチャする&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p4">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p4">*</ept>&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;&gt;<bpt id="p4">*</bpt>&gt; and &lt;&gt;<ept id="p4">*</ept>&gt; collections.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An error occurred while executing the handler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">指定されたハンドラーの実行中にエラーが発生しました。 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handler</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns the previous exception.</source>
          <target state="translated">前の例外を返します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The previous exception that was thrown.</source>
          <target state="translated">前回の例外がスローされました。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Decodes an HTML-encoded string and returns the decoded string.</source>
          <target state="translated">HTML エンコードされた文字列をデコードし、デコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The decoded text.</source>
          <target state="translated">デコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Decodes an HTML-encoded string and sends the resulting output to a &lt;xref:System.IO.TextWriter&gt; output stream.</source>
          <target state="translated">HTML エンコードされた文字列をデコードし、結果として得られるに出力を送信、&lt;xref:System.IO.TextWriter&gt;出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; output stream that contains the decoded string.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;デコードされた文字列を格納している出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>HTML-encodes a string and returns the encoded string.</source>
          <target state="translated">文字列を HTML エンコードし、エンコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The text string to encode.</source>
          <target state="translated">エンコードするテキスト文字列。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The HTML-encoded text.</source>
          <target state="translated">HTML エンコードされたテキストです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>HTML-encodes a string and sends the resulting output to a &lt;xref:System.IO.TextWriter&gt; output stream.</source>
          <target state="translated">文字列を HTML エンコードし、結果の出力を&lt;xref:System.IO.TextWriter&gt;出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The string to encode.</source>
          <target state="translated">エンコードする文字列。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; output stream that contains the encoded string.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;エンコードの文字列を格納する出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the server's computer name.</source>
          <target state="translated">サーバーのコンピューター名を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name of the local computer.</source>
          <target state="translated">ローカル コンピューターの名前。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The computer name cannot be found.</source>
          <target state="translated">コンピューター名が見つかりません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Returns the physical file path that corresponds to the specified virtual path.</source>
          <target state="translated">指定した仮想パスに対応する物理ファイル パスを返します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The virtual path in the Web application.</source>
          <target state="translated">Web アプリケーションの仮想パス。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The physical file path on the Web server that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">対応する Web サーバー上の物理ファイル パス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The current <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets and sets the request time-out value in seconds.</source>
          <target state="translated">取得し、要求のタイムアウト値を秒単位で設定します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The ScriptTimeout property can be set in the Web.config file by setting the <ph id="ph1">`executionTimeout`</ph> attribute of the  element.</source>
          <target state="translated">ScriptTimeout プロパティは、設定によって、Web.config ファイルで設定される、<ph id="ph1">`executionTimeout`</ph>要素の属性です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Setting the time-out programmatically with the ScriptTimeout property takes precedence over the Web.config setting.</source>
          <target state="translated">Web.config の設定より ScriptTimeout プロパティを使用してプログラムでタイムアウトの設定が優先されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you set the <ph id="ph2">`debug`</ph> attribute of the  element to <ph id="ph3">`true`</ph> in the Web.config file, the value of ScriptTimeout will be ignored.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 設定した場合、<ph id="ph2">`debug`</ph>する要素の属性<ph id="ph3">`true`</ph>Web.config ファイルで ScriptTimeout の値は無視されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The time-out value setting for requests.</source>
          <target state="translated">要求のタイムアウト値の設定。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The current <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The time-out period is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or otherwise could not be set.</source>
          <target state="translated">タイムアウト期間は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>か、それ以外の場合、設定できませんでした。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">現在の要求に対しては、ページの指定された URL パスを使用して新しいページの現在のページと開始の実行の実行を終了します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">転送先のページには、別の .aspx ページをする必要があります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">たとえば、.asp ファイルまたは .asmx ページへの転送が正しくありません。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The Transfer method preserves the &lt;xref:System.Web.HttpRequest.QueryString%2A&gt; and &lt;xref:System.Web.HttpRequest.Form%2A&gt; collections.</source>
          <target state="translated">転送方法を維持、&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;と&lt;xref:System.Web.HttpRequest.Form%2A&gt;コレクションです&lt;/xref:System.Web.HttpRequest.Form%2A&gt;&lt;/xref:System.Web.HttpRequest.QueryString%2A&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Transfer calls &lt;xref:System.Web.HttpResponse.End%2A&gt;, which throws a &lt;xref:System.Threading.ThreadAbortException&gt; exception upon completion.</source>
          <target state="translated">呼び出しを転送&lt;xref:System.Web.HttpResponse.End%2A&gt;、どのがスローされます、&lt;xref:System.Threading.ThreadAbortException&gt;完了時に例外です&lt;/xref:System.Threading.ThreadAbortException&gt;&lt;/xref:System.Web.HttpResponse.End%2A&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the Transfer method.</source>
          <target state="translated">ASP.NET では、転送方法によって配信されるリソースを表示する現在のユーザーが許可されているは検証されません。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Transfer method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接転送メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Transfer method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;転送メソッドの代わりにメソッド&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Transfer method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;転送メソッドを呼び出して前に、のメソッド&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">実行するサーバー上に新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">現在のページの実行を終了し、ページの指定された URL パスを使用して新しいページの実行を開始します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies whether to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p1">*</ept>&gt; collections.</source>
          <target state="translated">オフにするかどうかを指定します、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">転送先のページには、別の .aspx ページをする必要があります。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">たとえば、.asp ファイルまたは .asmx ページへの転送が正しくありません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Transfer calls &lt;xref:System.Web.HttpResponse.End%2A&gt;, which throws a &lt;xref:System.Threading.ThreadAbortException&gt; exception upon completion.</source>
          <target state="translated">呼び出しを転送&lt;xref:System.Web.HttpResponse.End%2A&gt;、どのがスローされます、&lt;xref:System.Threading.ThreadAbortException&gt;完了時に例外です&lt;/xref:System.Threading.ThreadAbortException&gt;&lt;/xref:System.Web.HttpResponse.End%2A&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property.</source>
          <target state="translated">設定した場合、<ph id="ph1">`preserveForm`</ph>にパラメーター <ph id="ph2">`true`</ph>、対象のページは、前のページのビュー ステートを使用してアクセスするようになります、&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;プロパティ&lt;/xref:System.Web.UI.Page.PreviousPage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">セキュリティのために、おく必要があります、<ph id="ph1">`enableViewStateMac`</ph>属性に設定<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the Transfer method.</source>
          <target state="translated">ASP.NET では、転送方法によって配信されるリソースを表示する現在のユーザーが許可されているは検証されません。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Transfer method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接転送メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Transfer method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;転送メソッドの代わりにメソッド&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Transfer method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;転送メソッドを呼び出して前に、のメソッド&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">実行するサーバー上に新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p4">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p4">*</ept>&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;&gt;<bpt id="p4">*</bpt>&gt; and &lt;&gt;<ept id="p4">*</ept>&gt; collections.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The current page request is a callback.</source>
          <target state="translated">現在のページ要求は、コールバックです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and specifies whether to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections.</source>
          <target state="translated">現在のページの実行を終了しを実装するカスタム HTTP ハンドラーを使用して新しい要求の実行を開始、 <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インターフェイスし、オフにするかどうかを指定します、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">事前定義された、特定の種類の共通言語仕様 (CLS) に準拠した任意の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">従来の ASP (従来の ASP とも呼ばれます) のページまたは ASP.NET ページではなく HTTP ハンドラーのクラスで定義されている実行可能コードは、これらの特定の要求に応答します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスと対話する HTTP ハンドラーを使用して、機能が類似している ISAPI 拡張機能には、プログラミング モデルがより単純です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the &lt;xref:System.Web.UI.Page.PreviousPage%2A&gt; property.</source>
          <target state="translated">設定した場合、<ph id="ph1">`preserveForm`</ph>にパラメーター <ph id="ph2">`true`</ph>、対象のページは、前のページのビュー ステートを使用してアクセスするようになります、&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;プロパティ&lt;/xref:System.Web.UI.Page.PreviousPage%2A&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">セキュリティのために、おく必要があります、<ph id="ph1">`enableViewStateMac`</ph>属性に設定<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the &lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt; method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;メソッド&lt;/xref:System.Web.HttpServerUtility.Transfer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the Transfer method, and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET の承認および認証ロジックが実行されるは、元のリソースのハンドラーが呼び出される前に、ASP.NET は直接転送メソッドで指定されたハンドラーを呼び出し、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can force reauthorization by using the &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method instead of the Transfer method.</source>
          <target state="translated">使用して強制することができます、&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;転送メソッドの代わりにメソッド&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.HttpResponse.Redirect%2A&gt; method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します&lt;/xref:System.Web.HttpResponse.Redirect%2A&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるため、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックにそれが加わっています。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the &lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt; method before the application calls the Transfer method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;転送メソッドを呼び出して前に、のメソッド&lt;/xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The HTTP handler that implements the <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to transfer the current request to.</source>
          <target state="translated">HTTP ハンドラーを実装する、 <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を現在の要求を転送します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collections; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.QueryString<bpt id="p4">*</bpt>&gt; and &lt;xref:System.Web.HttpRequest.Form<ept id="p4">*</ept>&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;&gt;<bpt id="p4">*</bpt>&gt; and &lt;&gt;<ept id="p4">*</ept>&gt; collections.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The current page request is a callback.</source>
          <target state="translated">現在のページ要求は、コールバックです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL.</source>
          <target state="translated">指定された URL の非同期実行を実行します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This method overload calls the &lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt; overload with the <ph id="ph1">`preserveForm`</ph> parameter set to <ph id="ph2">`false`</ph>, the <ph id="ph3">`method`</ph> parameter set to <ph id="ph4">`null`</ph>, the <ph id="ph5">`headers`</ph> parameter set to <ph id="ph6">`null`</ph>, and the <ph id="ph7">`preserveUser`</ph> parameter set to <ph id="ph8">`true`</ph>.</source>
          <target state="translated">このメソッドのオーバー ロードを呼び出す、&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;を持つオーバー ロード、<ph id="ph1">`preserveForm`</ph>パラメーターに設定<ph id="ph2">`false`</ph>、<ph id="ph3">`method`</ph>パラメーターに設定<ph id="ph4">`null`</ph>、<ph id="ph5">`headers`</ph>パラメーターに設定<ph id="ph6">`null`</ph>、および<ph id="ph7">`preserveUser`</ph>パラメーターに設定<ph id="ph8">`true`</ph>&lt;/xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For more information, see the "Remarks" section in &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt; overload.</source>
          <target state="translated">詳細については、「解説」セクションを参照してください。&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;オーバー ロード。&lt;/xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">実行するサーバー上に新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">要求には、統合パイプライン モードが必要です。<ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
          <target state="translated">サーバーでは、要求の処理に使用できません。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL and preserves query string parameters.</source>
          <target state="translated">指定した URL の非同期実行を実行して、クエリ文字列パラメーターを保存します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This overload calls the &lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt; overload with the <ph id="ph1">`preserveForm`</ph> parameter set to the value passed in, the <ph id="ph2">`method`</ph> parameter set to <ph id="ph3">`null`</ph>, the <ph id="ph4">`headers`</ph> parameter set to <ph id="ph5">`null`</ph>, and the <ph id="ph6">`preserveUser`</ph> parameter set to <ph id="ph7">`true`</ph>.</source>
          <target state="translated">このオーバー ロードを呼び出す、&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;を持つオーバー ロード、<ph id="ph1">`preserveForm`</ph>パラメーターに、渡された値を設定、<ph id="ph2">`method`</ph>パラメーターに設定<ph id="ph3">`null`</ph>、<ph id="ph4">`headers`</ph>パラメーターに設定<ph id="ph5">`null`</ph>、および<ph id="ph6">`preserveUser`</ph>パラメーターに設定<ph id="ph7">`true`</ph>&lt;/xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>For more information, see the "Remarks" section in &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;。&lt;/xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt; 「解説」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>TransferRequest is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">TransferRequest は、.NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>バージョンおよび依存関係<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">実行するサーバー上に新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.Form<bpt id="p2">*</bpt>&gt; collection; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>をクリアする、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">要求には、統合パイプライン モードが必要です。<ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
          <target state="translated">サーバーでは、要求の処理に使用できません。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</source>
          <target state="translated">指定された HTTP メソッドおよびヘッダーを使用して、指定した URL の非同期実行を実行します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is used when running with the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</source>
          <target state="translated">このメソッドは、統合パイプライン モードでを実行するときは使用<ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>正しい要求コンテキストを持つ対象の要求の実行中に&amp;1; つのリソースの種類から別に転送する要求の処理を許可します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For example, you can use the TransferRequest method to transfer a request for an ASPX page to a request for an XML page.</source>
          <target state="translated">たとえば、XML ページに対する要求に ASPX ページの要求を転送するのに TransferRequest メソッドを使用することができます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The TransferRequest method performs an asynchronous child execution of the specified URL with the following conditions:      -   If the <ph id="ph1">`path`</ph> parameter specifies a query string, it will be used as the new query string.</source>
          <target state="translated">TransferRequest メソッドは次の条件の指定された URL の実行を非同期の子を実行する:: の場合、<ph id="ph1">`path`</ph>パラメーター クエリ文字列を指定する、新しいクエリ文字列として使用されます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If no query string is included, the query string of the request will be re-used.</source>
          <target state="translated">クエリ文字列が含まれていない場合、要求のクエリ文字列は再利用されます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>-   If the <ph id="ph1">`method`</ph> parameter is specified, it will be used.</source>
          <target state="translated">場合、<ph id="ph1">`method`</ph>パラメーターを指定すると、それが使用されます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If it is <ph id="ph1">`null`</ph>, the HTTP method of the original request will be used.</source>
          <target state="translated">場合は<ph id="ph1">`null`</ph>、元の要求の HTTP メソッドが使用されます。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-   If the <ph id="ph1">`preserveForm`</ph> parameter is <ph id="ph2">`true`</ph>, the current entity body of the request will be available to the target request.</source>
          <target state="translated">場合、<ph id="ph1">`preserveForm`</ph>パラメーターは<ph id="ph2">`true`</ph>要求の現在のエンティティ ボディが対象の要求を使用できます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This allows form posts and uploads to be transferred.</source>
          <target state="translated">これにより、により、フォーム ポストし、転送にアップロードします。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>-   If the user identity is currently set on the original request, the identity will be transferred to the new request.</source>
          <target state="translated">場合は、ユーザー id は、元の要求で現在設定されて、id が、新しい要求に転送されます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>This allows authenticated requests to re-use the result of the authentication for the new request.</source>
          <target state="translated">これにより、認証済みの要求で新しい要求の認証の結果を再利用できます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If you do not want the user to be transferred, set the user to <ph id="ph1">`null`</ph> on the original request before transferring.</source>
          <target state="translated">ユーザーを転送するしたくない場合は、ユーザーを設定<ph id="ph1">`null`</ph>転送する前に元の要求にします。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>-   If the <ph id="ph1">`headers`</ph> parameter is specified, the new request will execute with the specified headers.</source>
          <target state="translated">場合、<ph id="ph1">`headers`</ph>パラメーターを指定すると、新しい要求が、指定したヘッダーで実行されます。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</source>
          <target state="translated">これにより、要求ヘッダーと、新しい要求の cookie を変更するために使用するか、元の要求の受信場所を指定する特殊なヘッダーを追加します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This method calls the &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt; method overload with the <ph id="ph1">`preserveUser`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このメソッドは、&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;メソッドのオーバー ロードで、<ph id="ph1">`preserveUser`</ph>にパラメーターが設定<ph id="ph2">`true`</ph>&lt;/xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">実行するサーバー上に新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.Form<bpt id="p2">*</bpt>&gt; collection; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>をクリアする、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the execution of the new request.</source>
          <target state="translated">新しい要求の実行で使用する HTTP メソッド。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of request headers for the new request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の新しい要求の要求ヘッダー。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The request requires <ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph> running in integrated mode.</source>
          <target state="translated">要求が必要です<ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>統合モードで実行します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
          <target state="translated">サーバーでは、要求の処理に使用できません。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</source>
          <target state="translated">指定された HTTP メソッド、ヘッダー、およびパスを使用して、指定された URL の非同期実行を実行し、必要に応じてユーザー id とフォーム値を保持します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For more information, see the "Remarks" section in &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;。&lt;/xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt; 「解説」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The path.</source>
          <target state="translated">パスです。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the &lt;xref:System.Web.HttpRequest.Form<bpt id="p2">*</bpt>&gt; collection; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to clear the &lt;xref:System.Web.HttpRequest.Form<ept id="p2">*</ept>&gt; collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>保持するために、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; コレクションです。<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>をクリアする、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; コレクション。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the new request.</source>
          <target state="translated">新しい要求で使用する HTTP メソッド。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains request headers for the new request.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>新しい要求の要求ヘッダーを含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve the user identity; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ユーザーの id を保持するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The other method overloads of this method call this overload with this parameter set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このメソッドの他のメソッド オーバー ロードは、このパラメーターを設定したこのオーバー ロードを呼び出して<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">要求には、統合パイプライン モードが必要です。<ph id="ph1">[!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The server is not available to handle the request.</source>
          <target state="translated">サーバーでは、要求の処理に使用できません。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>URL-decodes a string and returns the decoded string.</source>
          <target state="translated">文字列を URL デコードし、デコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">疑問符 (?) などの文字、アンパサンド (&amp;)、スラッシュ記号 (/) などの空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This method is a convenient way to access the &lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt; method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;実行時に ASP.NET アプリケーションからメソッド&lt;/xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Internally, this method uses &lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt; to decode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;文字列をデコードします&lt;/xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the &lt;xref:System.Web.HttpServerUtility&gt; class through the <ph id="ph1">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、&lt;xref:System.Web.HttpServerUtility&gt;クラスを通じて、<ph id="ph1">`Server`</ph>プロパティ&lt;/xref:System.Web.HttpServerUtility&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the &lt;xref:System.Web.HttpServerUtility&gt; class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>&lt;xref:System.Web.HttpServerUtility&gt;クラス&lt;/xref:System.Web.HttpServerUtility&gt;のインスタンスにアクセスするには</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Outside of a web application, use the &lt;xref:System.Net.WebUtility&gt; class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、&lt;xref:System.Net.WebUtility&gt;クラス値をエンコードまたはデコードします&lt;/xref:System.Net.WebUtility&gt;。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The text string to decode.</source>
          <target state="translated">デコードするテキスト文字列。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The decoded text.</source>
          <target state="translated">デコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Decodes an HTML string received in a URL and sends the resulting output to a &lt;xref:System.IO.TextWriter&gt; output stream.</source>
          <target state="translated">URL で受信した HTML 文字列をデコードし、結果として得られるに出力を送信、&lt;xref:System.IO.TextWriter&gt;出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">疑問符 (?) などの文字、アンパサンド (&amp;)、スラッシュ記号 (/) などの空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt; is a convenient way to access the &lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt; method at run time from an ASP.NET application.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;アクセスする便利な方法は、&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;実行時に ASP.NET アプリケーションからメソッド&lt;/xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;。&lt;/xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Internally, &lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt; uses &lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt; to decode strings.</source>
          <target state="translated">内部的には、&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;使用&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;に文字列をデコードします&lt;/xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName&gt;&lt;/xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To encode or decode values outside of a web application, use the &lt;xref:System.Net.WebUtility&gt; class.</source>
          <target state="translated">Web アプリケーションの外部の値をエンコードまたはデコード、&lt;xref:System.Net.WebUtility&gt;クラス&lt;/xref:System.Net.WebUtility&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; output stream that contains the decoded string.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;デコードされた文字列を格納している出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>URL-encodes a string and returns the encoded string.</source>
          <target state="translated">文字列を URL エンコードし、エンコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">疑問符 (?) などの文字、アンパサンド (&amp;)、スラッシュ記号 (/) などの空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>This method is a convenient way to access the &lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt; method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;実行時に ASP.NET アプリケーションからメソッド&lt;/xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Internally, this method uses &lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt; to encode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;文字列をエンコードする&lt;/xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the &lt;xref:System.Web.HttpServerUtility&gt; class through the <ph id="ph1">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、&lt;xref:System.Web.HttpServerUtility&gt;クラスを通じて、<ph id="ph1">`Server`</ph>プロパティ&lt;/xref:System.Web.HttpServerUtility&gt;。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the &lt;xref:System.Web.HttpServerUtility&gt; class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>&lt;xref:System.Web.HttpServerUtility&gt;クラス&lt;/xref:System.Web.HttpServerUtility&gt;のインスタンスにアクセスするには</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Outside of a web application, use the &lt;xref:System.Net.WebUtility&gt; class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、&lt;xref:System.Net.WebUtility&gt;クラス値をエンコードまたはデコードします&lt;/xref:System.Net.WebUtility&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The text to URL-encode.</source>
          <target state="translated">URL エンコードするテキスト。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The URL-encoded text.</source>
          <target state="translated">URL でエンコードされたテキストです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>URL-encodes a string and sends the resulting output to a &lt;xref:System.IO.TextWriter&gt; output stream.</source>
          <target state="translated">文字列を URL エンコードし、結果の出力を&lt;xref:System.IO.TextWriter&gt;出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">疑問符 (?) などの文字、アンパサンド (&amp;)、スラッシュ記号 (/) などの空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt; is a convenient way to access the &lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt; method at run time from an ASP.NET application.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;アクセスする便利な方法は、&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;実行時に ASP.NET アプリケーションからメソッド&lt;/xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;。&lt;/xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Internally, &lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt; uses &lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt; to encode strings.</source>
          <target state="translated">内部的には、&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;使用&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;文字列をエンコードする&lt;/xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName&gt;&lt;/xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To encode or decode values outside of a web application, use the &lt;xref:System.Net.WebUtility&gt; class.</source>
          <target state="translated">Web アプリケーションの外部の値をエンコードまたはデコード、&lt;xref:System.Net.WebUtility&gt;クラス&lt;/xref:System.Net.WebUtility&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The text string to encode.</source>
          <target state="translated">エンコードするテキスト文字列。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; output stream that contains the encoded string.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;エンコードの文字列を格納する出力ストリーム&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Do not use; intended only for browser compatibility.</source>
          <target state="translated">使用しないでください。ブラウザーの互換性のためだけのものです。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Web.HttpServerUtility.UrlEncode*&gt;.</source>
          <target state="translated">&lt;xref:System.Web.HttpServerUtility.UrlEncode*&gt;。&lt;/xref:System.Web.HttpServerUtility.UrlEncode*&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The text to URL-encode.</source>
          <target state="translated">URL エンコードするテキスト。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The URL encoded text.</source>
          <target state="translated">URL でエンコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Decodes a URL string token to its equivalent byte array using base 64 digits.</source>
          <target state="translated">Base 64 を使用して、等価のバイト配列を URL 文字列トークンをデコードします。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The UrlTokenDecode method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</source>
          <target state="translated">UrlTokenDecode メソッドでは、base64 の数字としてバイナリ データをエンコード、URL 文字列トークンをそれと等価のバイト配列形式に変換します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Use the UrlTokenDecode method to decode tokens transmitted on the URL and encoded by using the &lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;.</source>
          <target state="translated">UrlTokenDecode メソッドを使用して、URL に送信され、 &lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;。&lt;/xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;を使用してエンコードされたトークンをデコード</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The UrlTokenDecode method will return an empty byte array if the <ph id="ph1">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated">場合に UrlTokenDecode メソッドが空のバイト配列を返します、<ph id="ph1">`input`</ph>のパラメーターが&amp;1; 未満の長さ。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The URL string token to decode.</source>
          <target state="translated">デコードする URL 文字列トークン。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The byte array containing the decoded URL string token.</source>
          <target state="translated">デコードされた URL 文字列トークンを含むバイト配列。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">input</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</source>
          <target state="translated">バイト配列を base64 の数字を使用して、これは、URL での送信に使用可能な等価の文字列形式にエンコードします。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The UrlTokenEncode method converts a byte array into an equivalent string representation encoded with base 64 digits.</source>
          <target state="translated">UrlTokenEncode メソッドは、バイト配列を base 64 でエンコードされた等価の文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The resulting string token can be transmitted on the URL.</source>
          <target state="translated">生成される文字列トークンは、URL に送信できます。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The UrlTokenEncode will return an empty string if the <ph id="ph1">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated">場合、空の文字列が返されます、UrlTokenEncode、<ph id="ph1">`input`</ph>のパラメーターが&amp;1; 未満の長さ。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The byte array to encode.</source>
          <target state="translated">エンコードするバイト配列。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The string containing the encoded token if the byte array <bpt id="p1">*</bpt>length<ept id="p1">*</ept> is greater than one; otherwise, an empty string ("").</source>
          <target state="translated">トークンの場合、エンコードされたバイト配列を含む文字列<bpt id="p1">*</bpt>長さ<ept id="p1">*</ept>が&amp;1; よりも大きい場合、空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">値、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">input</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>