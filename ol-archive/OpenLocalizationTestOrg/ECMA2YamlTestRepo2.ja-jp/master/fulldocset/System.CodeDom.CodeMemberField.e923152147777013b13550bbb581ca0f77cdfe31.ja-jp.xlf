<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b2b3ff290f639554ea0cdfdee18947b9c572317</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.CodeMemberField.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3456c38ee13ab249ecf64155781b177bdde81917</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e6f57143ac102e28539c24ccb65015dc79ae895</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a declaration for a field of a type.</source>
          <target state="translated">型のフィールドの宣言を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CodeMemberField can be used to represent the declaration for a field of a type.</source>
          <target state="translated">型のフィールドの宣言を表す CodeMemberField を使用できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified field type and field name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したフィールドの型とフィールド名を使用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An object that indicates the type of the field.</source>
          <target state="translated">フィールドの種類を示すオブジェクトです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified field type and field name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したフィールドの型とフィールド名を使用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`type`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.</source>
          <target state="translated">場合、<ph id="ph1">`type`</ph>パラメーター、ジェネリック型を参照して、ジェネリック型の構文表記規則に従う必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Generic types are formatted as follows: the name of the type, followed by a grave accent ("`"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.</source>
          <target state="translated">ジェネリック型の形式は次のとおり: 抑音アクセント後に、型の名前 ("'")、続けてジェネリック型引数の数、角かっこで区切られたパラメーター続きます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 角かっこ () といない、c# の山かっこを使用する必要があります (&lt;&gt;) をジェネリック パラメーターを区切るためにします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To avoid the possibility of making a syntactic mistake, consider using the &lt;xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29&gt; constructor that takes a type instead of a string as a parameter.</source>
          <target state="translated">構文の間違いを犯す可能性を回避するのには、使用を検討して、&lt;xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29&gt;文字列をパラメーターとしてではなく型を受け取るコンス トラクター&lt;/xref:System.CodeDom.CodeMemberField.%23ctor%28System.Type%2CSystem.String%29&gt; 。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified field type and field name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.CodeMemberField"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したフィールドの型とフィールド名を使用します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the initialization expression for the field.</source>
          <target state="translated">取得またはフィールドの初期化式を設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The initialization expression for the field.</source>
          <target state="translated">フィールドの初期化式です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the field.</source>
          <target state="translated">取得またはフィールドの型を設定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The type of the field.</source>
          <target state="translated">フィールドの型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>