<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c55270081c089c98b6121c9a2a94d27692659a38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.IPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c3d9e953724cab94439bd147172af79a31db93b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6118a9a0b9036c6d7344acc3059c1906bd3e1aa4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods implemented by permission types.</source>
          <target state="translated">アクセス許可の種類によって実装されるメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</source>
          <target state="translated">共通言語ランタイムでのアクセス許可は、指定したリソースのセキュリティを設定できる操作のセットを記述するオブジェクトです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</source>
          <target state="translated">権限オブジェクトには、操作またはセキュリティ制御の対象となるアクセスについて説明します。アクセスまたは操作を実行する権限は表しません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Permissions are used by both application code and the .NET Framework security system in the following ways.</source>
          <target state="translated">アクセス許可は、次のようにアプリケーション コードと .NET Framework セキュリティ システムの両方で使用されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   Code requests the permissions it needs in order to run.</source>
          <target state="translated">コードでは、実行するために必要なアクセス許可を要求します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   The security system policy grants permissions to code in order for it to run.</source>
          <target state="translated">-セキュリティ システム ポリシーでは、コードを実行するために権限を付与します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   Code demands that calling code has a permission.</source>
          <target state="translated">-コードでは、コードの呼び出しのアクセス許可があることを要求します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   Code overrides the security stack using assert/deny/permit-only.</source>
          <target state="translated">コードでは、アサート/拒否/許可のみを使用して、セキュリティのスタックをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you write a new permission, you must implement this interface in your class.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 新しいアクセス許可を記述する場合は、クラス内でこのインターフェイスを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  A permission can be accessed by multiple threads.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; アクセス許可は、複数のスレッドによってアクセスできます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When implementing this interface, you must guarantee that the &lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;, &lt;xref:System.Security.IPermission.Intersect%2A&gt;, &lt;xref:System.Security.IPermission.Union%2A&gt;, and &lt;xref:System.Security.IPermission.Copy%2A&gt; method implementations are thread safe.</source>
          <target state="translated">このインターフェイスを実装するときを保証する必要があります、 &lt;xref:System.Security.IPermission.IsSubsetOf%2A&gt;、 &lt;xref:System.Security.IPermission.Intersect%2A&gt;、 &lt;xref:System.Security.IPermission.Union%2A&gt;、および&lt;xref:System.Security.IPermission.Copy%2A&gt;メソッドの実装がスレッド セーフである&lt;/xref:System.Security.IPermission.Copy%2A&gt;&lt;/xref:System.Security.IPermission.Union%2A&gt;&lt;/xref:System.Security.IPermission.Intersect%2A&gt;&lt;/xref:System.Security.IPermission.IsSubsetOf%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates and returns an identical copy of the current permission.</source>
          <target state="translated">作成して、現在のアクセス許可の完全なコピーを返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A copy of a permission represents the same access to resources as the original permission.</source>
          <target state="translated">アクセス許可のコピーは、元のアクセス許可としてリソースに対して同じアクセス権を表します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A copy of the current permission.</source>
          <target state="translated">現在のアクセス許可のコピー。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Throws a &lt;xref:System.Security.SecurityException&gt; at run time if the security requirement is not met.</source>
          <target state="translated">スロー、&lt;xref:System.Security.SecurityException&gt;セキュリティ要件が満たされていない場合、実行時に&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method is typically used by secure libraries to ensure that callers have permission to access a resource.</source>
          <target state="translated">このメソッドは通常、呼び出し元がリソースにアクセスする権限を持っていることを確認する安全なライブラリによって使用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For example, a file class in a secure class library calls &lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt; for the necessary &lt;xref:System.Security.Permissions.FileIOPermission&gt; before performing a file operation requested by the caller.</source>
          <target state="translated">たとえば、安全なクラス ライブラリ内のファイル クラスを呼び出します&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;、必要なの&lt;xref:System.Security.Permissions.FileIOPermission&gt;、呼び出し元によって要求されたファイルの操作を実行する前にします&lt;/xref:System.Security.Permissions.FileIOPermission&gt;&lt;/xref:System.Security.CodeAccessPermission.Demand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</source>
          <target state="translated">このインターフェイス メソッドを実装するクラスのほとんどは、完全なスタック ウォークを実行することによってセキュリティ基準を満たす、スタック ウォークは必ずしも行われません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An example of an implementation that does not perform a stack walk is &lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">スタック ウォークを実行しない実装の例としては&lt;xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;。&lt;/xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">スタック ウォークが実行されると、このメソッドを呼び出すコードのアクセス許可はチェックされません。チェックは、そのコードの直前の呼び出し元から開始され、スタックの上位に進みます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">通常、呼び出し履歴はコール スタックに呼び出し履歴の上位にあるメソッドが下位にあるメソッドを呼び出すようにダウン、成長として表されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt; succeeds only if no &lt;xref:System.Security.SecurityException&gt; is raised.</source>
          <target state="translated">&lt;xref:System.Security.CodeAccessPermission.Demand%2A&gt;場合にのみ成功ありません&lt;xref:System.Security.SecurityException&gt;が発生します&lt;/xref:System.Security.SecurityException&gt;。&lt;/xref:System.Security.CodeAccessPermission.Demand%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission that is the intersection of the current permission and the specified permission.</source>
          <target state="translated">作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
          <target state="translated">2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
          <target state="translated">元の両方の権限を通過する要求だけでは、積集合を渡されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following statements are required to be true for all implementations of the Intersect method.</source>
          <target state="translated">次のステートメントは、true、Intersect メソッドのすべての実装を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent &lt;xref:System.Security.IPermission&gt; object references that are not <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>および<ph id="ph2">`Y`</ph>表す&lt;xref:System.Security.IPermission&gt;れていないオブジェクト参照<ph id="ph3">`null`</ph>&lt;/xref:System.Security.IPermission&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`X`</ph>) returns a value equal to <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.Intersect (<ph id="ph2">`X`</ph>) と等しい値を返します<ph id="ph3">`X`</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`Y`</ph>) returns the same value as <ph id="ph3">`Y`</ph>.Intersect(<ph id="ph4">`X`</ph>).</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.Intersect (<ph id="ph2">`Y`</ph>) と同じ値を返します<ph id="ph3">`Y`</ph>です。Intersect (<ph id="ph4">`X`</ph>)。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Intersect(<ph id="ph2">`null`</ph>) returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.Intersect (<ph id="ph2">`null`</ph>) を返します<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A permission to intersect with the current permission.</source>
          <target state="translated">現在のアクセス許可と交差するアクセス許可。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">これは、現在のアクセス許可と同じ型でなければなりません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A new permission that represents the intersection of the current permission and the specified permission.</source>
          <target state="translated">現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This new permission is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">この新しいアクセス許可は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>積集合が空の場合。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not an instance of the same class as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターではありません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>し、現在のアクセス許可と同じクラスのインスタンスではありません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Determines whether the current permission is a subset of the specified permission.</source>
          <target state="translated">現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A permission that is to be tested for the subset relationship.</source>
          <target state="translated">サブセットの関係をテストするのには権限です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This permission must be of the same type as the current permission.</source>
          <target state="translated">このアクセス許可は、現在のアクセス許可と同じ型でなければなりません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current permission is a subset of the specified permission; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>現在のアクセス許可が指定した権限のサブセットの場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターではありません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>と現在のアクセス許可と同じ型でもありません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates a permission that is the union of the current permission and the specified permission.</source>
          <target state="translated">現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission.</source>
          <target state="translated">共用体への呼び出しの結果は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表すアクセス許可です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Any demand that passes either permission passes their union.</source>
          <target state="translated">いずれかのアクセス許可に適合する要求は、その共用体を渡します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following statements are required to be true for all implementations of the Union method.</source>
          <target state="translated">次のステートメントは、true、共用体のメソッドのすべての実装を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`X`</ph> and <ph id="ph2">`Y`</ph> represent &lt;xref:System.Security.IPermission&gt; objects that are not <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`X`</ph>および<ph id="ph2">`Y`</ph>表す&lt;xref:System.Security.IPermission&gt;れていないオブジェクト<ph id="ph3">`null`</ph>&lt;/xref:System.Security.IPermission&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`X`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.共用体 (<ph id="ph2">`X`</ph>) と同じ値を持つオブジェクトを返します<ph id="ph3">`X`</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`Y`</ph>) returns an object that has the same value as the object returned by <ph id="ph3">`Y`</ph>.Union(<ph id="ph4">`X`</ph>).</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.共用体 (<ph id="ph2">`Y`</ph>) によって返されるオブジェクトと同じ値を持つオブジェクトを返します<ph id="ph3">`Y`</ph>です。共用体 (<ph id="ph4">`X`</ph>)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`X`</ph>.Union(<ph id="ph2">`null`</ph>) returns an object that has the same value as <ph id="ph3">`X`</ph>.</source>
          <target state="translated">-   <ph id="ph1">`X`</ph>.共用体 (<ph id="ph2">`null`</ph>) と同じ値を持つオブジェクトを返します<ph id="ph3">`X`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A permission to combine with the current permission.</source>
          <target state="translated">現在のアクセス許可と結合するアクセス許可。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
          <target state="translated">これは、現在のアクセス許可と同じ型でなければなりません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A new permission that represents the union of the current permission and the specified permission.</source>
          <target state="translated">現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and is not of the same type as the current permission.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターではありません<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>と現在のアクセス許可と同じ型でもありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>