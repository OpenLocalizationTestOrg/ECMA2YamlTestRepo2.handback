<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">905c14769cbf01faa2a4715cab9ff22565142665</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.IDataContractSurrogate.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">991e5aac4f7b18d5162f5d608deeb0741ed7fca9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33df00df818b2b1baa8399c5998c1f9267961c1e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the methods needed to substitute one type for another by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; during serialization, deserialization, and export and import of XML schema documents (XSD).</source>
          <target state="translated">によって、他の&amp;1; つの型の代わりに必要なメソッドを提供、&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;シリアル化、逆シリアル化、およびエクスポートおよびインポート中の XML スキーマ ドキュメント (XSD).&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the IDataContractSurrogate when using the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; if you need to do one of the following: substitute one type or object for another, or to dynamically generate schema variations.</source>
          <target state="translated">使用する場合に、IDataContractSurrogate を使用して、&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;場合は、次のいずれかを実行する必要があります&amp;1; つの型に置き換えるか、またはオブジェクト、またはスキーマのバリエーションを動的に生成します。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt; 。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For a sample application, see <bpt id="p1">[</bpt>DataContract Surrogate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">サンプル アプリケーションについては、次を参照してください。 <bpt id="p1">[</bpt>DataContract のサロゲート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">データ コントラクトの詳細については、次を参照してください。<bpt id="p1">[</bpt>を使用してデータ コントラクト<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>At run time, you can find the specific &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt; for any operation in a service by using the &lt;xref:System.ServiceModel.Description.OperationDescription&gt; to find the &lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt; instance.</source>
          <target state="translated">、実行時に、固有の仕様が見つかります&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;を使用してサービスのすべての操作に対して、&lt;xref:System.ServiceModel.Description.OperationDescription&gt;を検索する、&lt;xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt;インスタンス。&lt;/xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior&gt; &lt;/xref:System.ServiceModel.Description.OperationDescription&gt; &lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about implementing the interface to create a surrogate, see <bpt id="p1">[</bpt>Data Contract Surrogates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">サロゲートを作成するインターフェイスの実装の詳細については、次を参照してください。<bpt id="p1">[</bpt>データ コントラクト サロゲート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can also use the IDataContractSurrogate to affect the import and export of XML schemas when you are using the &lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt; and &lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt; classes.</source>
          <target state="translated">使用しているときに、XML スキーマのエクスポートとインポートを与える、IDataContractSurrogate を使用することもできます、&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;と&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;クラス&lt;/xref:System.Runtime.Serialization.XsdDataContractImporter&gt;&lt;/xref:System.Runtime.Serialization.XsdDataContractExporter&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can do so by assigning the IDataContractSurrogate to the &lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ExportOptions&gt; class, or to the &lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt; property of the &lt;xref:System.Runtime.Serialization.ImportOptions&gt; class.</source>
          <target state="translated">監視できるように IDataContractSurrogate を割り当てることによって、&lt;xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;のプロパティ、&lt;xref:System.Runtime.Serialization.ExportOptions&gt;クラス、または&lt;xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;&lt;xref:System.Runtime.Serialization.ImportOptions&gt;クラス&lt;/xref:System.Runtime.Serialization.ImportOptions&gt;のプロパティ&lt;/xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A&gt;に&lt;/xref:System.Runtime.Serialization.ExportOptions&gt;&lt;/xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Schema Import and Export<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>スキーマのインポートとエクスポート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">スキーマ エクスポート操作中には、null 以外の戻り値のスキーマに注釈を挿入します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.MemberInfo&gt; that describes the member.</source>
          <target state="translated">A&lt;xref:System.Reflection.MemberInfo&gt;メンバーの説明です&lt;/xref:System.Reflection.MemberInfo&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt;.</source>
          <target state="translated">A &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">XML スキーマ定義に挿入される注釈を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>During schema export operations, inserts annotations into the schema for non-null return values.</source>
          <target state="translated">スキーマ エクスポート操作中には、null 以外の戻り値のスキーマに注釈を挿入します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CLR type to be replaced.</source>
          <target state="translated">置き換えられる CLR 型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data contract type to be annotated.</source>
          <target state="translated">注釈が付けられるデータ コントラクトの型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object that represents the annotation to be inserted into the XML schema definition.</source>
          <target state="translated">XML スキーマ定義に挿入される注釈を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>During serialization, deserialization, and schema import and export, returns a data contract type that substitutes the specified type.</source>
          <target state="translated">シリアル化、逆シリアル化、およびスキーマのインポートおよびエクスポート中に、指定された型を置き換えるデータ コントラクト型を返します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The CLR type &lt;xref:System.Type&gt; to substitute.</source>
          <target state="translated">CLR 型&lt;xref:System.Type&gt;代わりに使用します&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to substitute for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> value.</source>
          <target state="translated">&lt;xref:System.Type&gt;の代わりに、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>値&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This type must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">この型は&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;によってシリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">たとえばでマークする必要がある、&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性か、シリアライザーが認識できる他のメカニズム&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>During deserialization, returns an object that is a substitute for the specified object.</source>
          <target state="translated">逆シリアル化中に指定されたオブジェクトの代わりには、オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In a simple implementation, use an if…then…else control structure to test whether the <ph id="ph1">`obj`</ph> value is of the surrogated type.</source>
          <target state="translated">単純な実装の場合に、使用して then... else 制御構造をテストするかどうか、<ph id="ph1">`obj`</ph>値は、サロゲートされた型。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If so, transform it as necessary and return the substituted object.</source>
          <target state="translated">場合は、変換に必要な戻り値、置き換えられたオブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The substituted object can be a new instance or the same <ph id="ph1">`obj`</ph> instance.</source>
          <target state="translated">置き換えられたオブジェクトは、または同一の新しいインスタンスを指定できます<ph id="ph1">`obj`</ph>インスタンス。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The deserialized object to be substituted.</source>
          <target state="translated">代わりに使用する逆シリアル化されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that the substituted object should be assigned to.</source>
          <target state="translated">&lt;xref:System.Type&gt;に置き換えられたオブジェクトを割り当てる必要があります&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The substituted deserialized object.</source>
          <target state="translated">代替の逆シリアル化されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This object must be of a type that is serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">このオブジェクトは、 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;によってシリアル化可能である型でなければなりません</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">たとえばでマークする必要がある、&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性か、シリアライザーが認識できる他のメカニズム&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets the collection of known types to use for serialization and deserialization of the custom data objects.</source>
          <target state="translated">カスタム データ オブジェクトの逆シリアル化とシリアル化に使用する既知の型のコレクションを設定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This method is required during schema export or schema import only if annotations are inserted into the schema using the &lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt; method.</source>
          <target state="translated">このメソッドが必要な時にスキーマのエクスポートまたはスキーマのインポートを使用して、スキーマに注釈を挿入する場合にのみ、&lt;xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;メソッド&lt;/xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of &lt;xref:System.Type&gt; to add known types to.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>の&lt;xref:System.Type&gt;既知の型を追加する&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>During serialization, returns an object that substitutes the specified object.</source>
          <target state="translated">シリアル化中を指定したオブジェクトを置き換えるオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method must not return <ph id="ph1">`null`</ph> because on deserialization the data will be cast to type &lt;xref:System.Object&gt; and an &lt;xref:System.InvalidCastException&gt; is thrown.</source>
          <target state="translated">このメソッドが返す必要がありますいない<ph id="ph1">`null`</ph>型に逆シリアル化で、データがキャストするため&lt;xref:System.Object&gt;と&lt;xref:System.InvalidCastException&gt;がスローされます&lt;/xref:System.InvalidCastException&gt;&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object to substitute.</source>
          <target state="translated">置き換えるオブジェクト。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that the substituted object should be assigned to.</source>
          <target state="translated">&lt;xref:System.Type&gt;に置き換えられたオブジェクトを割り当てる必要があります&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The substituted object that will be serialized.</source>
          <target state="translated">シリアル化される置き換えられたオブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The object must be serializable by the &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;.</source>
          <target state="translated">オブジェクトは、 &lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;。&lt;/xref:System.Runtime.Serialization.DataContractSerializer&gt;によってシリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, it must be marked with the &lt;xref:System.Runtime.Serialization.DataContractAttribute&gt; attribute or other mechanisms that the serializer recognizes.</source>
          <target state="translated">たとえばでマークする必要がある、&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;属性か、シリアライザーが認識できる他のメカニズム&lt;/xref:System.Runtime.Serialization.DataContractAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>During schema import, returns the type referenced by the schema.</source>
          <target state="translated">スキーマのインポート中に、スキーマによって参照される型を返します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Null`</ph> should be returned if a CLR type does not exist for representing the schema type.</source>
          <target state="translated"><ph id="ph1">`Null`</ph>スキーマの種類を表すため、CLR 型が存在しないかどうかに返されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This will cause a new type to be generated during schema import.</source>
          <target state="translated">これは、スキーマのインポート中に生成する新しい型になります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the type in schema.</source>
          <target state="translated">スキーマ内の型の名前。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The namespace of the type in schema.</source>
          <target state="translated">スキーマ内の型の名前空間。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The object that represents the annotation inserted into the XML schema definition, which is data that can be used for finding the referenced type.</source>
          <target state="translated">参照先の型を検索するために使用できるデータは、XML スキーマ定義に挿入された注釈を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to use for the referenced type.</source>
          <target state="translated">&lt;xref:System.Type&gt;参照された型を使用する&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Processes the type that has been generated from the imported schema.</source>
          <target state="translated">インポートされたスキーマから生成された型を処理します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The input &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; or other information in the &lt;xref:System.CodeDom.CodeCompileUnit&gt; can be modified by the user in this method.</source>
          <target state="translated">入力&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;または他の情報を&lt;xref:System.CodeDom.CodeCompileUnit&gt;このメソッド内のユーザーによって変更できます&lt;/xref:System.CodeDom.CodeCompileUnit&gt;&lt;/xref:System.CodeDom.CodeTypeDeclaration&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph> is returned, it will cause the type to not be generated.</source>
          <target state="translated">場合<ph id="ph1">`null`</ph>が返されるおそれがある型を生成できません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If a new &lt;xref:System.CodeDom.CodeTypeDeclaration&gt; is returned, it will replace the original type generated.</source>
          <target state="translated">場合、新しい&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;が返されると、生成元の型が置き換わります&lt;/xref:System.CodeDom.CodeTypeDeclaration&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to process that represents the type declaration generated during schema import.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマのインポート中に生成された型の宣言を表すプロセスにします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the other code generated during schema import.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeCompileUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマのインポート中に生成された他のコードを格納しています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the processed type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeTypeDeclaration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>処理済みの型を格納します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>