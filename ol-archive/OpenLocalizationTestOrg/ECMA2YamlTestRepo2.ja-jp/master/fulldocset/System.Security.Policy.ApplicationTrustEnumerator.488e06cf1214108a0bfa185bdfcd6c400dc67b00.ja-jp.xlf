<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39d33a1f0c1c3b797a07c7d6c366bd1099784263</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Policy.ApplicationTrustEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b152876d1979252b3b529975a8ec3a62eabaf15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">764fa3c4ac9096cf18255ed0a5d3ecf543040456</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the enumerator for <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">列挙子を表す<bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内のオブジェクト、 <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コレクション。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enumerators only allow reading the data in the collection.</source>
          <target state="translated">列挙子は、コレクション内のデータの読み取りのみ許可します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
          <target state="translated">列挙子を使用して、基になるコレクションを変更することはできません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt; method also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;メソッドがこの位置に戻さも、列挙子を表示します&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>At this position, calling the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; property throws an exception.</source>
          <target state="translated">この位置で、呼び出し、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;プロパティは例外をスローします&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Therefore, you must call the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; property.</source>
          <target state="translated">そのため、呼び出す必要があります、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;メソッドの値を読み取る前に、コレクションの最初の要素に列挙子を進める、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;プロパティ&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;いずれかのまで同じオブジェクトを返します&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;または&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;と呼びます&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;次の要素にします&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;。&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列挙子が呼び出すと、コレクション内の最後の要素の後ろに配置され、コレクションの末尾が渡されると、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;返します<ph id="ph1">`false`</ph>&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">場合は、最後の呼び出し&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;返される<ph id="ph1">`false`</ph>、呼び出し元&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;例外をスローします&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To reset &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; to the first element of the collection, call &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt; followed by a call to &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;コレクションの最初の要素を呼び出す&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;への呼び出し後に&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;リセットするには</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">コレクションが変更されない限り、列挙子は有効です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; or &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt; exception.</source>
          <target state="translated">無効になり、次の呼び出しに変更を追加するなど、コレクションを変更、または要素を削除するには、列挙子は回復不可能&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;または&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;スロー、&lt;xref:System.InvalidOperationException&gt;例外です&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the collection is modified between calling &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; and &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;, &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
          <target state="translated">呼び出し元のコレクションが変更された場合&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;と&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;列挙子が既に無効になっている場合でもが現在設定される、要素を返します&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the current <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">現在の取得<bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>内のオブジェクト、 <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>コレクション。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the enumerator is created, it does not point to an object, so the Current property is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">列挙子が作成されると、それを指していませんオブジェクト、ため、現在のプロパティが無効であり、アクセスする場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You must first call the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; method to position the cursor at the first object in the collection.</source>
          <target state="translated">最初に呼び出す必要があります、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;メソッドをコレクションの最初のオブジェクトにカーソルを合わせます&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Multiple calls to Current with no intervening calls to &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; will return the same &lt;xref:System.Security.Policy.ApplicationTrust&gt; object.</source>
          <target state="translated">現在ない中間の呼び出しを複数の呼び出し&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;は同じを返します&lt;xref:System.Security.Policy.ApplicationTrust&gt;オブジェクト&lt;/xref:System.Security.Policy.ApplicationTrust&gt;&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The current <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Moves to the next element in the <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">次の要素に移動、 <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクション。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The MoveNext method immediately returns <ph id="ph1">`false`</ph> if there are no objects in the collection.</source>
          <target state="translated">MoveNext メソッドが直ちに返されます<ph id="ph1">`false`</ph>コレクション内のオブジェクトがない場合。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>MoveNext will return <ph id="ph1">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated">MoveNext は返します<ph id="ph1">`true`</ph>コレクションの末尾に達するまでします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">その<ph id="ph1">`false`</ph>連続する呼び出しごとにします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>However, after MoveNext has returned <ph id="ph1">`false`</ph>, accessing the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; property will throw an exception.</source>
          <target state="translated">ただし、MoveNext が返された後に<ph id="ph1">`false`</ph>へのアクセス、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;プロパティは例外をスローします&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Upon creation, an enumerator is positioned before the first &lt;xref:System.Security.Policy.ApplicationTrust&gt; object in the collection, and the first call to MoveNext positions the enumerator at the first object in the collection.</source>
          <target state="translated">作成時に、列挙子が&amp;1; つ目の前に位置付けられます&lt;xref:System.Security.Policy.ApplicationTrust&gt;コレクション、および MoveNext への最初の呼び出しでオブジェクトがコレクション内の最初のオブジェクトに、列挙子を配置します&lt;/xref:System.Security.Policy.ApplicationTrust&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the enumerator was successfully advanced to the next element; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列挙子が次の要素に正常に進んだ場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>列挙子がコレクションの末尾を越えた場合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Resets the enumerator to the beginning of the <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">先頭に、列挙子をリセット、 <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクション。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">列挙子は、順方向専用の方向に移動します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use this method to return the enumerator to the beginning of the collection of &lt;xref:System.Security.Policy.ApplicationTrust&gt; objects.</source>
          <target state="translated">このメソッドのコレクションの先頭に、列挙子を使用して&lt;xref:System.Security.Policy.ApplicationTrust&gt;オブジェクト&lt;/xref:System.Security.Policy.ApplicationTrust&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Reset method positions the cursor at the first object in the collection.</source>
          <target state="translated">Reset メソッドは、コレクションの最初のオブジェクトにカーソルを位置付けます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>After calling Reset, you do not need to call the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt; method to move the cursor forward to the first object.</source>
          <target state="translated">リセットを呼び出した後を呼び出す必要はありません、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;最初のオブジェクトにカーソルを前方に移動する方法&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the current &lt;xref:System.Object&gt; in the <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> collection.</source>
          <target state="translated">現在の取得&lt;xref:System.Object&gt;で、 <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>コレクションです&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Do not call this method; use the &lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt; property instead.</source>
          <target state="translated">このメソッドを呼び出す必要はありません。使用して、&lt;xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;プロパティ代わりにします&lt;/xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The current &lt;xref:System.Object&gt; in the <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在&lt;xref:System.Object&gt;で、 <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrustCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Object&gt; 。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>