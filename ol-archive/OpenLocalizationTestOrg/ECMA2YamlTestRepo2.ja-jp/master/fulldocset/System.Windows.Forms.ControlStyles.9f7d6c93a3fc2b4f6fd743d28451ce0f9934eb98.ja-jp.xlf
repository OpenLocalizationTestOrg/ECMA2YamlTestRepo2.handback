<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8741904f60d9cdd9157e887a3c871a064f110f2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.ControlStyles.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8281c8dd7a498ac92db5b5c29b605a9e09d11db4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e77d5af3fb11487e16d284bafd99c6ef3cb33a96</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">コントロールの動作とスタイルを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">コントロールは、機能を指定するのにさまざまなプロパティおよびメソッドでこの列挙体を使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A control can enable a style by calling the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">コントロールは、呼び出すことにより、スタイルを有効にできます、&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;メソッドと適切な ControlStyles ビット (またはビット) に渡すことと、ビットに設定するブール値&lt;/xref:System.Windows.Forms.Control.SetStyle%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">たとえば、Visual Basic コードの次の行では、二重のバッファリングが有効にします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```</ph>       If the AllPaintingInWmPaint bit is set to <ph id="ph2">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; and &lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt; methods are called directly from the window message WM_PAINT.</source>
          <target state="translated"><ph id="ph1">```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```</ph>AllPaintingInWmPaint ビットに設定されている場合<ph id="ph2">`true`</ph>、WM_ERASEBKGND を無視すると、ウィンドウ メッセージおよび&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;と&lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;メソッドは、ウィンドウ メッセージ WM_PAINT から直接呼び出されます&lt;/xref:System.Windows.Forms.Control.OnPaint%2A&gt;&lt;/xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">その他のコントロールがコントロールに WM_ERASEBKGND ウィンドウ メッセージを送信しない限り、ちらつき一般に短縮できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a &lt;xref:System.Windows.Forms.ToolBar&gt; with flat appearance does this.</source>
          <target state="translated">SupportsTransparentBackColor; のような擬似透過的な効果を実現するウィンドウ メッセージ WM_ERASEBKGRND を送信する可能性があります。たとえば、&lt;xref:System.Windows.Forms.ToolBar&gt;フラットな外観ではこの&lt;/xref:System.Windows.Forms.ToolBar&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ダブル バッファリングを完全に有効に OptimizedDoubleBuffer と AllPaintingInWmPaint のビットを設定できます<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the &lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt; property for the control to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">ただし、ダブル バッファリングを有効にするため、同じ結果を生成するには、これはお勧めを設定する、&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;するコントロールのプロパティ<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the &lt;xref:System.Windows.Forms.Control.BackColor%2A&gt; is set to a color whose alpha component is less than 255, &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">SupportsTransparentBackColor ビットが設定されている場合<ph id="ph1">`true`</ph>、および&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;のアルファ コンポーネントは、255 より小さい色に設定されている&lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;背景を描画するには、その親コントロールを確認して、透過性をシミュレートします&lt;/xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;&lt;/xref:System.Windows.Forms.Control.BackColor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is not true transparency.</source>
          <target state="translated">これは真の透過性ではありません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; コントロールとその親の間で別のコントロールがある場合、現在のコントロールには表示されないコントロール中央です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: &lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;, and &lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">UserMouse ビットを設定すると<ph id="ph1">`true`</ph>、次のメソッドが呼び出されますも: &lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;&lt;/xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the &lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; event.</source>
          <target state="translated">コントロールがクリックされたときにさせるビットが設定されている場合<ph id="ph1">`true`</ph>、&lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt;メソッドが呼び出され、発生、&lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;イベント&lt;/xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;&lt;/xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the &lt;xref:System.Windows.Forms.Control.DoubleClick&gt; event.</source>
          <target state="translated">コントロールがダブルクリックされたときとさせると StandardDoubleClick の両方のビットに設定されます<ph id="ph1">`true`</ph>に渡され、クリック、&lt;xref:System.Windows.Forms.Control.DoubleClick&gt;イベント&lt;/xref:System.Windows.Forms.Control.DoubleClick&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Then the &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; event.</source>
          <target state="translated">続いて、&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt;メソッドが呼び出され、発生、&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;イベント&lt;/xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;&lt;/xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the control can call &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; or &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt; directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">ただし、コントロールを呼び出すことができます&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;または&lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;直接させると StandardDoubleClick に関係なくビット値&lt;/xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;&lt;/xref:System.Windows.Forms.Control.OnClick%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information on control click and double click behaviors, see the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; and &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; topics.</source>
          <target state="translated">制御の詳細については をクリックし、動作をダブルクリックして、参照してください、&lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;と&lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;トピック&lt;/xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;&lt;/xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">UseTextForAccessibility ビットが設定されているし、コントロールの値がある<ph id="ph1">`Text`</ph>プロパティ、そのコントロールの値<ph id="ph2">`Text`</ph>プロパティ、コントロールの既定の Active Accessibility 名とショートカット キーを決定します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Otherwise, the text of the preceding &lt;xref:System.Windows.Forms.Label&gt; control will be used instead.</source>
          <target state="translated">それ以外の場合、上記のテキスト&lt;xref:System.Windows.Forms.Label&gt;コントロールが使用されます&lt;/xref:System.Windows.Forms.Label&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This style is set by default.</source>
          <target state="translated">既定では、このスタイルを設定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Certain built-in control types, such as &lt;xref:System.Windows.Forms.TextBox&gt; and &lt;xref:System.Windows.Forms.ComboBox&gt;, reset this style so that the <ph id="ph1">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">などの特定の組み込みのコントロール型&lt;xref:System.Windows.Forms.TextBox&gt;と&lt;xref:System.Windows.Forms.ComboBox&gt;、このスタイルをリセットできるように、 <ph id="ph1">`Text`</ph> Active Accessibility によってそれらのコントロールのプロパティは使用されません&lt;/xref:System.Windows.Forms.ComboBox&gt;&lt;/xref:System.Windows.Forms.TextBox&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ちらつきを軽減するウィンドウ メッセージ WM_ERASEBKGND は無視されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This style should only be applied if the UserPaint bit is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このスタイルに UserPaint ビットが設定されている場合のみ適用されます<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control keeps a copy of the text rather than getting it from the &lt;xref:System.Windows.Forms.Control.Handle*&gt; each time it is needed.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールから取得するのではなく、テキストのコピーを保持する、&lt;xref:System.Windows.Forms.Control.Handle*&gt;が必要なたび&lt;/xref:System.Windows.Forms.Control.Handle*&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This style defaults to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このスタイルの既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">この動作は、パフォーマンスが向上しますが、同期されているテキストを保持するが困難になります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is a container-like control.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールがコンテナーのようなコントロールです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>図面は、バッファーに実行され、結果が出力を画面には、完了後に、します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">ダブル バッファリングには、コントロールの描画によるちらつきができなくなります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you set DoubleBuffer to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you should also set UserPaint and AllPaintingInWmPaint to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">DoubleBuffer に設定する場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、UserPaint やに AllPaintingInWmPaint を設定する必要がありますも<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Windows.Forms.Control.OnNotifyMessage<bpt id="p2">*</bpt>&gt; method is called for every message sent to the control's &lt;xref:System.Windows.Forms.Control.WndProc<ept id="p2">*</ept>&gt;.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; メソッドは、コントロールに送信されるすべてのメッセージに対して&lt;&gt; <ept id="p2">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This style defaults to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このスタイルの既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EnableNotifyMessage does not work in partial trust.</source>
          <target state="translated">EnableNotifyMessage は、部分信頼では機能しません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールに固定サイズの高さがあるときに自動スケーリングします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Height*&gt; remains unchanged.</source>
          <target state="translated">たとえば、次のレイアウト操作が、新しいに合わせてコントロールを変更しようとしています<bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールの&lt;xref:System.Windows.Forms.Control.Height*&gt;は変更されません。&lt;/xref:System.Windows.Forms.Control.Height*&gt; 。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールには固定幅があるときに自動スケーリングします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Width*&gt; remains unchanged.</source>
          <target state="translated">たとえば、次のレイアウト操作に合わせて新しいコントロールを変更しようとしました<bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールの&lt;xref:System.Windows.Forms.Control.Width*&gt;は変更されません。&lt;/xref:System.Windows.Forms.Control.Width*&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールの不透明な描画および背景は描画されません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールが最初に描画をバッファーにはなく、直接の画面になることができますちらつきを軽減します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you set this property to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you should also set the AllPaintingInWmPaint to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティを設定する場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>もに、AllPaintingInWmPaint を設定する必要があります<bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is redrawn when it is resized.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、サイズが変更されるときに、コントロールが再描画します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control can receive focus.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールがフォーカスを受け取ることができます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control implements the standard <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Click"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> behavior.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールは、標準を実装して<bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Click"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>動作します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control implements the standard <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.DoubleClick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> behavior.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールは、標準を実装して<bpt id="p2">&lt;xref href="System.Windows.Forms.Control.DoubleClick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>動作します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This style is ignored if the StandardClick bit is not set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">させるビットに設定されていない場合、このスタイルは無視されます<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control accepts a &lt;xref:System.Windows.Forms.Control.BackColor*&gt; with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロールが受け入れる、&lt;xref:System.Windows.Forms.Control.BackColor*&gt;透過性をシミュレートするために 255 より小さいのアルファ コンポーネントを持つ&lt;/xref:System.Windows.Forms.Control.BackColor*&gt;。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Transparency will be simulated only if the UserPaint bit is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the parent control is derived from <bpt id="p2">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">UserPaint ビットに設定されている場合にのみ、透過性はシミュレートされます<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、親コントロールから派生して<bpt id="p2">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コントロールを使用して、自身のマウス処理、およびマウス イベントは、オペレーティング システムでは処理されません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、コントロール自体ではなくこれにより、オペレーティング システムを描画します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event is not raised.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、 <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>イベントは発生しません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This style only applies to classes derived from <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このスタイルはから派生したクラスにのみ適用されます<bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies that the value of the control's <ph id="ph1">`Text`</ph> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">指定のコントロールの値<ph id="ph1">`Text`</ph>プロパティ場合、コントロールの既定の Active Accessibility 名とショートカット キーを決定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>