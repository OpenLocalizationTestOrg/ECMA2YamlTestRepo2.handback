<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88b333ea3e4674af973d2abc550709dbf19184e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.IHttpHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8f572b239e5d5a353e03e4bf7332f1828fe709a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05f454ae158f9fa0a44a411d6d3a5e7e617a123d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</source>
          <target state="translated">ASP.NET がカスタム HTTP ハンドラーを使用した HTTP Web 要求を同期的に処理するために実装するコントラクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</source>
          <target state="translated">事前定義された、特定の種類の共通言語仕様 (CLS) 準拠の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Executable code defined in the <ph id="ph1">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</source>
          <target state="translated">定義されている実行可能コード、<ph id="ph1">`HttpHandler`</ph>これら特定の要求に応答を従来の ASP または ASP.NET Web ページではなく、クラス、します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP ハンドラーは、低レベルの要求と、IIS Web サーバーの応答サービスと対話する手段を提供し、プログラミング モデルがより単純ですが、ISAPI 拡張機能と同様に機能を提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your handler will access session state values, it must implement the &lt;xref:System.Web.SessionState.IRequiresSessionState&gt; interface (a marker interface with no methods).</source>
          <target state="translated">場合は、ハンドラーのセッション状態の値がアクセスする必要がありますを実装して、&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;インターフェイス (マーカー インターフェイスにメソッドを持たない).&lt;/xref:System.Web.SessionState.IRequiresSessionState&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether another request can use the <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">別の要求が使用できるかどうかを示す値を取得、 <bpt id="p1">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You explicitly set the IsReusable property to <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> by code you provide that overrides the IsReusable property accessor (getter).</source>
          <target state="translated">明示的に設定する IsReusable プロパティ<ph id="ph1">`true`</ph>または<ph id="ph2">`false`</ph>IsReusable プロパティのアクセサー (get アクセス操作子) をオーバーライドするを指定するコードによってです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is reusable; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インスタンスが再利用可能なそれ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Enables processing of HTTP Web requests by a custom <bpt id="p1">&lt;xref uid="langword_csharp_HttpHandler" name="HttpHandler" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that implements the <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">カスタム HTTP Web 要求の処理を有効<bpt id="p1">&lt;xref uid="langword_csharp_HttpHandler" name="HttpHandler" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>を実装する、 <bpt id="p2">&lt;xref href="System.Web.IHttpHandler"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Place your custom <ph id="ph1">`HttpHandler`</ph> code in the ProcessRequest virtual method, as shown in the following example.</source>
          <target state="translated">カスタムの配置<ph id="ph1">`HttpHandler`</ph>ProcessRequest 仮想メソッドでコードの次の例で示すようにします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that provides references to the intrinsic server objects (for example, <bpt id="p2">&lt;xref uid="langword_csharp_Request" name="Request" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref uid="langword_csharp_Response" name="Response" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, <bpt id="p4">&lt;xref uid="langword_csharp_Session" name="Session" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, and <bpt id="p5">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>) used to service HTTP requests.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.HttpContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>組み込みサーバー オブジェクトへの参照を提供するオブジェクト (たとえば、 <bpt id="p2">&lt;xref uid="langword_csharp_Request" name="Request" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 <bpt id="p3">&lt;xref uid="langword_csharp_Response" name="Response" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、 <bpt id="p4">&lt;xref uid="langword_csharp_Session" name="Session" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>、および<bpt id="p5">&lt;xref uid="langword_csharp_Server" name="Server" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>) HTTP 要求を処理するために使用します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>