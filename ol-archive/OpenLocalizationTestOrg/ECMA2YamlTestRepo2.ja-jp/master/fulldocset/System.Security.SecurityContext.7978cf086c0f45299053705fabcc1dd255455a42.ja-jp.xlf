<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1db988f555437680b7d01d6f130692cb983299a8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.SecurityContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a545334273400fac8abddb54bdb97b2ba5b0059</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01d0114dc8af45a9ebf23201369689b03bc97fad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates and propagates all security-related data for execution contexts transferred across threads.</source>
          <target state="translated">カプセル化し、スレッド間で転送される実行コンテキストのすべてのセキュリティに関連するデータを伝達します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Captures the security context for the current thread.</source>
          <target state="translated">現在のスレッドのセキュリティ コンテキストをキャプチャします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The captured security context can be applied to another thread.</source>
          <target state="translated">キャプチャされたセキュリティ コンテキストは、別のスレッドに適用できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.SecurityContext&gt; consists of the &lt;xref:System.Threading.CompressedStack&gt; and the &lt;xref:System.Security.Principal.WindowsIdentity&gt; for the executing thread.</source>
          <target state="translated">&lt;xref:System.Security.SecurityContext&gt;から成る、&lt;xref:System.Threading.CompressedStack&gt;と&lt;xref:System.Security.Principal.WindowsIdentity&gt;の実行中のスレッド&lt;/xref:System.Security.Principal.WindowsIdentity&gt;&lt;/xref:System.Threading.CompressedStack&gt;&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The security context for the current thread.</source>
          <target state="translated">現在のスレッドのセキュリティ コンテキスト。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current security context.</source>
          <target state="translated">現在のセキュリティ コンテキストのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The current context must have been acquired through a capture or a copy operation.</source>
          <target state="translated">現在のコンテキストは、キャプチャまたはコピー操作で取得されている必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This method is useful for applying a captured &lt;xref:System.Security.SecurityContext&gt; to multiple threads.</source>
          <target state="translated">このメソッドは、キャプチャしたを適用するために役立ちます&lt;xref:System.Security.SecurityContext&gt;複数のスレッドにします&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The security context for the current thread.</source>
          <target state="translated">現在のスレッドのセキュリティ コンテキスト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The current security context has been previously used, was marshaled across application domains, or was not acquired through the &lt;xref:System.Security.SecurityContext.Capture*&gt; method.</source>
          <target state="translated">現在のセキュリティ コンテキストが以前使用されて、アプリケーション ドメイン間でマーシャ リングされたまたはで取得されなかった、&lt;xref:System.Security.SecurityContext.Capture*&gt;メソッド&lt;/xref:System.Security.SecurityContext.Capture*&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.SecurityContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">現在のインスタンスによって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Security.SecurityContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.SecurityContext&gt;.</source>
          <target state="translated">呼び出す<ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.SecurityContext&gt;.&lt;/xref:System.Security.SecurityContext&gt;の使用が終了したときに</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.SecurityContext&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>メソッドによって、&lt;xref:System.Security.SecurityContext&gt;使用不可の状態&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.SecurityContext&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.SecurityContext&gt; was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">`Dispose`</ph>へのすべての参照を解放する必要があります、&lt;xref:System.Security.SecurityContext&gt;ガベージ コレクターがメモリを再利用できるようにする、&lt;xref:System.Security.SecurityContext&gt;占有されていた&lt;/xref:System.Security.SecurityContext&gt;&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.SecurityContext&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 常に呼び出し<ph id="ph2">`Dispose`</ph>&lt;xref:System.Security.SecurityContext&gt;&lt;/xref:System.Security.SecurityContext&gt;の最後の参照を解放する前に。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.SecurityContext&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、&lt;xref:System.Security.SecurityContext&gt;オブジェクトの<ph id="ph1">`Finalize`</ph>メソッド&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether the flow of the security context has been suppressed.</source>
          <target state="translated">セキュリティ コンテキストのフローが中止されたかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The IsFlowSuppressed method is used by infrastructure components to determine whether to transfer the &lt;xref:System.Security.SecurityContext&gt; information during asynchronous operations.</source>
          <target state="translated">転送するかどうかを決定するインフラストラクチャ コンポーネントによって IsFlowSuppressed メソッドが使用される、&lt;xref:System.Security.SecurityContext&gt;非同期操作中に情報&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the flow has been suppressed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>フローが中止された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</source>
          <target state="translated">現在のセキュリティ コンテキストの Windows id 部分のフローが中止されたかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The IsWindowsIdentityFlowSuppressed method is used by infrastructure components to determine whether to transfer the Windows identity information when the &lt;xref:System.Security.SecurityContext&gt; migrates during asynchronous operations.</source>
          <target state="translated">IsWindowsIdentityFlowSuppressed メソッドは Windows id 情報を転送するかどうかを決定するインフラストラクチャ コンポーネントによって使用時に、&lt;xref:System.Security.SecurityContext&gt;非同期操作中に移行します&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the flow has been suppressed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>フローが中止された場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Restores the flow of the security context across asynchronous threads.</source>
          <target state="translated">非同期スレッド間でのセキュリティ コンテキストのフローを復元します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The RestoreFlow method is called by the &lt;xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName&gt; method to reverse the effect of a prior &lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt; method call.</source>
          <target state="translated">RestoreFlow メソッドによって呼び出されます、&lt;xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName&gt;前の効果を反転させるメソッド&lt;xref:System.Security.SecurityContext.SuppressFlow%2A&gt;メソッドの呼び出し&lt;/xref:System.Security.SecurityContext.SuppressFlow%2A&gt;&lt;/xref:System.Threading.AsyncFlowControl.Undo%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The security context is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated">セキュリティ コンテキストが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または空の文字列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Runs the specified method in the specified security context on the current thread.</source>
          <target state="translated">指定されたセキュリティ コンテキストで現在のスレッドで、指定したメソッドを実行します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The security context for the current thread is returned to its previous state when the method call is complete.</source>
          <target state="translated">メソッドの呼び出しが完了すると、以前の状態を現在のスレッドのセキュリティ コンテキストが返されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The security context to set.</source>
          <target state="translated">設定するセキュリティ コンテキスト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The delegate that represents the method to run in the specified security context.</source>
          <target state="translated">指定されたセキュリティ コンテキストで実行するメソッドを表すデリゲート。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object to pass to the callback method.</source>
          <target state="translated">コールバック メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph> was not acquired through a capture operation.</source>
          <target state="translated">- または - <ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph> capture 操作では取得されませんでした。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph> has already been used as the argument to a Run method call.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;securityContext&lt;/code&gt;</ph>実行メソッドの呼び出しに引数として既に使用されています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Suppresses the flow of the security context across asynchronous threads.</source>
          <target state="translated">非同期スレッド間でのセキュリティ コンテキストのフローを中止します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use this method to suppress the flow of &lt;xref:System.Security.SecurityContext&gt; information on the current thread for asynchronous operations.</source>
          <target state="translated">このメソッドを使用して抑制する状況のフロー&lt;xref:System.Security.SecurityContext&gt;非同期操作の現在のスレッドに関する情報&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The common language runtime (CLR) is only aware of the impersonation operations performed using managed code.</source>
          <target state="translated">共通言語ランタイム (CLR) は、マネージ コードを使用して実行される権限借用の操作の対応はのみです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The CLR has no knowledge of impersonation performed outside of managed code, such as platform invokes to unmanaged code that does the impersonation, or through calls to Win32 functions.</source>
          <target state="translated">プラットフォーム呼び出しまたは Win32 関数を呼び出すことで、偽装するアンマネージ コードになど、CLR は、マネージ コードの外部で実行される偽装の知識がありません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To flow identity across asynchronous points you must use the managed &lt;xref:System.Security.Principal.WindowsIdentity&gt; and &lt;xref:System.Security.Principal.WindowsImpersonationContext&gt; methods.</source>
          <target state="translated">マネージを使用する必要があります非同期ポイント間のフローの id に&lt;xref:System.Security.Principal.WindowsIdentity&gt;と&lt;xref:System.Security.Principal.WindowsImpersonationContext&gt;メソッド&lt;/xref:System.Security.Principal.WindowsImpersonationContext&gt;&lt;/xref:System.Security.Principal.WindowsIdentity&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt; method on the returned &lt;xref:System.Threading.AsyncFlowControl&gt; structure to return the &lt;xref:System.Security.SecurityContext&gt; object to its previous state.</source>
          <target state="translated">使用して、&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;メソッドで返された&lt;xref:System.Threading.AsyncFlowControl&gt;構造体を返す、&lt;xref:System.Security.SecurityContext&gt;を以前の状態オブジェクト&lt;/xref:System.Security.SecurityContext&gt;&lt;/xref:System.Threading.AsyncFlowControl&gt;&lt;/xref:System.Threading.AsyncFlowControl.Undo%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This method is protected with a &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; for &lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt; permission.</source>
          <target state="translated">このメソッドで保護された、&lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;の&lt;xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt;権限&lt;/xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName&gt;&lt;/xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A fully trusted component can call this method to suppress the flow of the &lt;xref:System.Security.SecurityContext&gt; information during asynchronous calls.</source>
          <target state="translated">完全に信頼されたコンポーネントのフローを抑制するには、このメソッドを呼び出すことができます、&lt;xref:System.Security.SecurityContext&gt;非同期呼び出し中に情報&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the flow is suppressed, the &lt;xref:System.Security.SecurityContext.Capture%2A&gt; method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">フローが抑制されている場合、&lt;xref:System.Security.SecurityContext.Capture%2A&gt;メソッドを返します<ph id="ph1">`null`</ph>。&lt;/xref:System.Security.SecurityContext.Capture%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure for restoring the flow.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Threading.AsyncFlowControl"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>フローを復元するための構造体。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</source>
          <target state="translated">非同期スレッド間で現在のセキュリティ コンテキストの Windows id 部分のフローを中止します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A structure for restoring the flow.</source>
          <target state="translated">フローを復元するための構造体。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>