<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6394e0e2cf45005e24a4b98b9053f525e3f3a5cf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.SqlClient.SqlDataReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">197d9bbadb53bfa2c8bfa8ea6ad238254d3750b8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fddeea18fe35a9ebb34e4e88e62c4655e77c2473</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way of reading a forward-only stream of rows from a SQL Server database.</source>
          <target state="translated">SQL Server データベースからの行の順方向専用ストリームを読み取る手段を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To create a SqlDataReader, you must call the &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt; method of the &lt;xref:System.Data.SqlClient.SqlCommand&gt; object, instead of directly using a constructor.</source>
          <target state="translated">呼び出す必要があります、SqlDataReader を作成する、&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;のメソッド、&lt;xref:System.Data.SqlClient.SqlCommand&gt;コンス トラクターを直接使用する代わりに、オブジェクトです&lt;/xref:System.Data.SqlClient.SqlCommand&gt;&lt;/xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>While the SqlDataReader is being used, the associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; is busy serving the SqlDataReader, and no other operations can be performed on the &lt;xref:System.Data.SqlClient.SqlConnection&gt; other than closing it.</source>
          <target state="translated">SqlDataReader が使用されているときに、関連する&lt;xref:System.Data.SqlClient.SqlConnection&gt;は、ビジー状態、SqlDataReader を提供していると&lt;xref:System.Data.SqlClient.SqlConnection&gt;それを閉じる以外&lt;/xref:System.Data.SqlClient.SqlConnection&gt;ではないその他の操作を実行できます&lt;/xref:System.Data.SqlClient.SqlConnection&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is the case until the &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt; method of the SqlDataReader is called.</source>
          <target state="translated">までには、その場合は、 &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;SqlDataReader のメソッドが呼び出されます&lt;/xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, you cannot retrieve output parameters until after you call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;を呼び出した後にするまでの出力パラメーターを取得することはできませんなど</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Changes made to a result set by another process or thread while data is being read may be visible to the user of the <ph id="ph1">`SqlDataReader`</ph>.</source>
          <target state="translated">結果データの読み取り中に、別のプロセスまたはスレッドがセットに加えられた変更は、のユーザーに表示される可能性があります、<ph id="ph1">`SqlDataReader`</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, the precise behavior is timing dependent.</source>
          <target state="translated">ただし、正確な動作、タイミングによって決まります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt; and &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the SqlDataReader is closed.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;および&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;呼び出すことのできる唯一のプロパティは、SqlDataReader が閉じられた後です&lt;/xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Although the &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; property may be accessed while the SqlDataReader exists, always call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt; before returning the value of &lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt; to guarantee an accurate return value.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;プロパティがあります、SqlDataReader が存在する間、アクセスを常に呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;の値を返す前に&lt;xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;正確な戻り値を保証する&lt;/xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When using sequential access (&lt;xref:System.Data.CommandBehavior?displayProperty=fullName&gt;), an &lt;xref:System.InvalidOperationException&gt; will be raised if the SqlDataReader position is advanced and another read operation is attempted on the previous column.</source>
          <target state="translated">順次アクセスを使用する場合 (&lt;xref:System.Data.CommandBehavior?displayProperty=fullName&gt;)、 &lt;xref:System.InvalidOperationException&gt;SqlDataReader の位置を進められ、他の読み取り前の列で操作が試行する場合に生成されます&lt;/xref:System.InvalidOperationException&gt;&lt;/xref:System.Data.CommandBehavior?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  For optimal performance, SqlDataReader avoids creating unnecessary objects or making unnecessary copies of data.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 不要なオブジェクトを作成またはデータの不要なコピーを作成する最適なパフォーマンスは、SqlDataReader を回避できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Therefore, multiple calls to methods such as &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt; return a reference to the same object.</source>
          <target state="translated">そのため、何度も呼び出すメソッドになど&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;、同じオブジェクトへの参照を返します&lt;/xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use caution if you are modifying the underlying value of the objects returned by methods such as &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;などのメソッドによって返されるオブジェクトの基になる値を変更する場合は、注意を使用します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Closes the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">閉じる、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must explicitly call the Close method when you are through using the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; to use the associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; for any other purpose.</source>
          <target state="translated">Close メソッドを明示的に呼び出す必要がありますを使用しているときに、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;を使用して、関連付けられている&lt;xref:System.Data.SqlClient.SqlConnection&gt;、他の目的&lt;/xref:System.Data.SqlClient.SqlConnection&gt;&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Close`</ph> method fills in the values for output parameters, return values and <ph id="ph2">`RecordsAffected`</ph>, increasing the time that it takes to close a <ph id="ph3">`SqlDataReader`</ph> that was used to process a large or complex query.</source>
          <target state="translated"><ph id="ph1">`Close`</ph>メソッドの出力パラメーター、戻り値の値を入力および<ph id="ph2">`RecordsAffected`</ph>、終了するまでにかかる時間を長く、<ph id="ph3">`SqlDataReader`</ph>大規模または複雑なクエリの処理に使用されました。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When the return values and the number of records affected by a query are not significant, the time that it takes to close the <ph id="ph1">`SqlDataReader`</ph> can be reduced by calling the &lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt; method of the associated &lt;xref:System.Data.SqlClient.SqlCommand&gt; object before calling the <ph id="ph2">`Close`</ph> method.</source>
          <target state="translated">場合、戻り値と、クエリによって影響を受けたレコードの数は意味を持ちません、終了するまでにかかる時間、<ph id="ph1">`SqlDataReader`</ph>を呼び出すことによって、減少、&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;関連付けられているメソッド&lt;xref:System.Data.SqlClient.SqlCommand&gt;オブジェクトを呼び出す前に、<ph id="ph2">`Close`</ph>メソッド&lt;/xref:System.Data.SqlClient.SqlCommand&gt;&lt;/xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Do not call <ph id="ph2">`Close`</ph> or <ph id="ph3">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id="ph4">`Finalize`</ph> method of your class.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 呼び出さない<ph id="ph2">`Close`</ph>または<ph id="ph3">`Dispose`</ph>接続、DataReader、または その他のマネージ オブジェクトで、<ph id="ph4">`Finalize`</ph>クラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
          <target state="translated">ファイナライザーで、クラスが直接所有されているアンマネージ リソースだけを解放する必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
          <target state="translated">クラスがアンマネージ リソースを所有していない場合は含まれません、<ph id="ph1">`Finalize`</ph>メソッド、クラス定義にします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ガベージ コレクション<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に関連付けられている、 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に関連付けられている、 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the depth of nesting for the current row.</source>
          <target state="translated">現在の行の入れ子の深さを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The outermost table has a depth of zero.</source>
          <target state="translated">最も外側のテーブルは、深さ&amp;0; です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server では、入れ子構造をサポートしていませんし、常に&amp;0; を返します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The depth of nesting for the current row.</source>
          <target state="translated">現在の行の入れ子の深さ。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the number of columns in the current row.</source>
          <target state="translated">現在の行に列の数を取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Executing a query that, by its nature, does not return rows (such as a DELETE query), sets FieldCount to 0.</source>
          <target state="translated">クエリを実行する、その性質上は行を返しません (削除クエリ) など、FieldCount を 0 に設定します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>However.</source>
          <target state="translated">ただしです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>this should not be confused with a query that returns 0 rows (such as SELECT <ph id="ph1">\*</ph> FROM <bpt id="p1">*</bpt>table<ept id="p1">*</ept> WHERE 1 = 2) in which case FieldCount returns the number of columns in the table, including hidden fields.</source>
          <target state="translated">この混同しないように 0 行を返すクエリを使用して (SELECT など<ph id="ph1">\*</ph>FROM<bpt id="p1">*</bpt>テーブル<ept id="p1">*</ept>場所 1 = FieldCount が非表示フィールドを含む、テーブルで列の数を返します 2) いる場合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A&gt; to exclude hidden fields.</source>
          <target state="translated">使用して&lt;xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A&gt;を非表示フィールドを除外します&lt;/xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</source>
          <target state="translated">0 を有効なレコード セットに配置されない場合それ以外の場合、現在の行の列の数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is -1.</source>
          <target state="translated">既定値は-1 です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There is no current connection to an instance of SQL Server.</source>
          <target state="translated">SQL Server のインスタンスに現在接続されていません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a Boolean.</source>
          <target state="translated">ブール値として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータには、ブール値が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value of the column.</source>
          <target state="translated">列の値です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a byte.</source>
          <target state="translated">指定された列の値をバイトとして取得します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a byte.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、バイトが既にあります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a byte.</source>
          <target state="translated">バイトとして指定された列の値です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</source>
          <target state="translated">指定した列オフセットからバイトのストリームを配列として指定したバッファー オフセットからバッファーに読み取ります。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>GetBytes returns the number of available bytes in the field.</source>
          <target state="translated">GetBytes は、フィールドに使用できるバイト数を返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Most of the time this is the exact length of the field.</source>
          <target state="translated">ほとんどの場合これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetBytes`</ph>バイトを取得するフィールドからは既に使用されています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is reading a large data structure into a buffer.</source>
          <target state="translated">これは、場合がありますなどの場合、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;バッファーへの大規模なデータ構造体の読み込みが&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">詳細については、次を参照してください、 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;。&lt;/xref:System.Data.CommandBehavior&gt;の設定。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, GetBytes returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">バッファーを渡した場合<ph id="ph1">`null`</ph>、GetBytes バッファー オフセット パラメーターに基づく残りサイズではなくバイト単位で全体のフィールドの長さを返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a byte array.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、バイト配列が既にあります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The index within the field from which to begin the read operation.</source>
          <target state="translated">読み取り操作を開始位置を示すフィールド内のインデックス。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">バイトのストリームを読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The index within the <ph id="ph1">`buffer`</ph> where the write operation is to start.</source>
          <target state="translated">内のインデックス、<ph id="ph1">`buffer`</ph>の書き込み操作を開始することができます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大の長さ。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The actual number of bytes read.</source>
          <target state="translated">実際に読み取られたバイトの数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a single character.</source>
          <target state="translated">1 つの文字として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Not supported for &lt;xref:System.Data.SqlClient&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient&gt;。&lt;/xref:System.Data.SqlClient&gt;はサポートされていません</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</source>
          <target state="translated">指定したバッファー オフセットから始まる配列として、文字のストリームを指定した列オフセットからバッファーに読み取ります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>GetChars returns the number of available characters in the field.</source>
          <target state="translated">GetChars は、フィールドに使用できる文字数を返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Frequently this is the exact length of the field.</source>
          <target state="translated">多くの場合、これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetChars`</ph>フィールドから文字を取得するは既に使用されています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is reading a large data structure into a buffer.</source>
          <target state="translated">これは、場合がありますなどの場合、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;バッファーへの大規模なデータ構造体の読み込みが&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting for &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">詳細については、次を参照してください、 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;。&lt;/xref:System.Data.CommandBehavior&gt;の設定。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The actual number of characters read can be less than the requested length, if the end of the field is reached.</source>
          <target state="translated">実際に読み取られた文字数は、フィールドの末尾に達した場合、要求された長さよりも小さいできます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, GetChars returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</source>
          <target state="translated">バッファーを渡した場合<ph id="ph1">`null`</ph>GetChars が文字単位バッファー オフセット パラメーターに基づく残りサイズではなくフィールド全体の長さを返します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore.</source>
          <target state="translated">変換は実行されません。そこで。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>the data retrieved must already be a character array.</source>
          <target state="translated">取得されたデータでは、文字配列が既にあります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The GetChars method returns 0 when <ph id="ph2">`dataIndex`</ph> is negative.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; GetChars メソッドは場合は 0 を返します<ph id="ph2">`dataIndex`</ph>が負の値。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The index within the field from which to begin the read operation.</source>
          <target state="translated">読み取り操作を開始位置を示すフィールド内のインデックス。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">バイトのストリームを読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The index within the <ph id="ph1">`buffer`</ph> where the write operation is to start.</source>
          <target state="translated">内のインデックス、<ph id="ph1">`buffer`</ph>の書き込み操作を開始することができます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The maximum length to copy into the buffer.</source>
          <target state="translated">バッファーにコピーする最大の長さ。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The actual number of characters read.</source>
          <target state="translated">実際に読み取られた文字の数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets a string representing the data type of the specified column.</source>
          <target state="translated">指定された列のデータ型を表す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns the name of the back-end data type.</source>
          <target state="translated">バックエンド データ型の名前を返します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`numeric`</ph> is a synonym in SQL Server for the <ph id="ph2">`decimal`</ph> data type.</source>
          <target state="translated"><ph id="ph1">`numeric`</ph>用の SQL Server でシノニムは、<ph id="ph2">`decimal`</ph>データ型。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetDataTypeName`</ph> will return "decimal" for a column defined as either decimal or numeric.</source>
          <target state="translated"><ph id="ph1">`GetDataTypeName`</ph>10 進数または数値のいずれかとして定義されている列の"decimal"を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The zero-based ordinal position of the column to find.</source>
          <target state="translated">検索する列の&amp;0; から始まる序数位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The string representing the data type of the specified column.</source>
          <target state="translated">指定された列のデータ型を表す文字列。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a &lt;xref:System.DateTime&gt; object.</source>
          <target state="translated">指定した列の値を取得、&lt;xref:System.DateTime&gt;オブジェクト&lt;/xref:System.DateTime&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.DateTime&gt; object.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、&lt;xref:System.DateTime&gt;オブジェクト&lt;/xref:System.DateTime&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified column as a &lt;xref:System.DateTimeOffset&gt; object.</source>
          <target state="translated">指定した列の値を取得、&lt;xref:System.DateTimeOffset&gt;オブジェクト&lt;/xref:System.DateTimeOffset&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.DateTimeOffset&gt; object.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、&lt;xref:System.DateTimeOffset&gt;オブジェクト&lt;/xref:System.DateTimeOffset&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a &lt;xref:System.Decimal&gt; object.</source>
          <target state="translated">指定した列の値を取得、&lt;xref:System.Decimal&gt;オブジェクト&lt;/xref:System.Decimal&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.Decimal&gt; object.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、&lt;xref:System.Decimal&gt;オブジェクト&lt;/xref:System.Decimal&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a double-precision floating point number.</source>
          <target state="translated">倍精度浮動小数点数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>No conversions are performed.</source>
          <target state="translated">変換は実行されません。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Therefore, the data retrieved must already be a double-precision floating point number.</source>
          <target state="translated">そのため、取得されたデータでは、倍精度浮動小数点数が既にあります。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、&lt;xref:System.Collections.IEnumerator&gt;を反復処理する、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Collections.IEnumerator&gt; 。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Although you can use this method to retrieve an explicit enumerator, in languages that support a <ph id="ph1">`foreach`</ph> construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</source>
          <target state="translated">このメソッドを使用して、明示的な列挙子を取得することができます、言語をサポートする、<ph id="ph1">`foreach`</ph>構築、データ リーダー内の行を反復処理するために直接ループ構造を使用する方が簡単です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; that is the data type of the object.</source>
          <target state="translated">取得、&lt;xref:System.Type&gt;オブジェクトのデータ型です&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that is the data type of the object.</source>
          <target state="translated">&lt;xref:System.Type&gt;オブジェクトのデータ型です&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, <bpt id="p1">**</bpt>GetFieldType<ept id="p1">**</ept> returns null.</source>
          <target state="translated">クライアントでは、場合、ユーザー定義型 (UDT)、データベースから返された型が存在しない場合<bpt id="p1">**</bpt>GetFieldType<ept id="p1">**</ept>は null を返します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a single-precision floating point number.</source>
          <target state="translated">単精度浮動小数点数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>No conversions are performed.</source>
          <target state="translated">変換は実行されません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Therefore, the data retrieved must already be a single-precision floating point number.</source>
          <target state="translated">そのため、取得されたデータでは、単精度浮動小数点数が既にあります。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a globally unique identifier (GUID).</source>
          <target state="translated">グローバル一意識別子 (GUID) として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a GUID.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、GUID が既にあります。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 16-bit signed integer.</source>
          <target state="translated">16 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、16 ビット符号付き整数が既にあります。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 32-bit signed integer.</source>
          <target state="translated">32 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、32 ビット符号付き整数が既にあります。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 64-bit signed integer.</source>
          <target state="translated">64 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、64 ビット符号付き整数が既にあります。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified column.</source>
          <target state="translated">指定された列の名前を取得します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The name of the specified column.</source>
          <target state="translated">指定された列の名前です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets the column ordinal, given the name of the column.</source>
          <target state="translated">列の名前を指定して、列の序数を取得します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetOrdinal`</ph> performs a case-sensitive lookup first.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph>最初に区別する検索を実行します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</source>
          <target state="translated">大文字と小文字が発生したが失敗した場合、秒、(大文字と小文字の比較が行われデータベースの照合順序を使用して)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Unexpected results can occur when comparisons are affected by culture-specific casing rules.</source>
          <target state="translated">予期しない結果は、比較がカルチャに固有の大文字と小文字の規則によって影響を受けるときに発生します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</source>
          <target state="translated">たとえば、トルコ語では次の例間違った結果が生成トルコ語で、ファイル システムは、文字 'i' の言語の文字種の規則を使用しないので"file"にします。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The method throws an <ph id="ph1">`IndexOutOfRange`</ph> exception if the zero-based column ordinal is not found.</source>
          <target state="translated">メソッドをスロー、 <ph id="ph1">`IndexOutOfRange`</ph>&amp;0; から始まる列序数が見つからない場合に例外です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetOrdinal`</ph> is kana-width insensitive.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph>カタカナの全角区別されません。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id="ph1">`GetOrdinal`</ph> within a loop.</source>
          <target state="translated">呼び出す効率的ではありません序数に基づく参照は、名前による参照よりも効率的であるため<ph id="ph1">`GetOrdinal`</ph>ループ内で。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Save time by calling <ph id="ph1">`GetOrdinal`</ph> once and assigning the results to an integer variable for use within the loop.</source>
          <target state="translated">呼び出すことによって、時間を節約<ph id="ph1">`GetOrdinal`</ph>ループ内で使用する整数の変数に結果を割り当てるとします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The name specified is not a valid column name.</source>
          <target state="translated">指定された名前は、有効な列名ではありません。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider-specific field type.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基になるプロバイダー固有のフィールド型の表現されています。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; representing the column ordinal.</source>
          <target state="translated">&lt;xref:System.Int32&gt;列の序数を表すします&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Object&gt; that is a representation of the underlying provider-specific field type.</source>
          <target state="translated">取得、&lt;xref:System.Object&gt;基になるプロバイダー固有のフィールド型の表現されている&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider specific value.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基になるプロバイダー固有の値の表現されています。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; representing the column ordinal.</source>
          <target state="translated">&lt;xref:System.Int32&gt;列の序数を表すします&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is a representation of the underlying provider specific value.</source>
          <target state="translated">&lt;xref:System.Object&gt;基になるプロバイダー固有の値の表現されている&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Gets an array of objects that are a representation of the underlying provider specific values.</source>
          <target state="translated">基になるプロバイダー固有の値の表現であるオブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the column values.</source>
          <target state="translated">配列&lt;xref:System.Object&gt;列の値をコピー先&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The array of objects that are a representation of the underlying provider specific values.</source>
          <target state="translated">基になるプロバイダー固有の値の表現であるオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>の列メタデータを記述する、 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>For the GetSchemaTable method returns metadata about each column in the following order:      |DataReader column|Description|   |-----------------------|-----------------|   |AllowDBNull|Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</source>
          <target state="translated">GetSchemaTable のメソッドは、次の順序で各列に関するメタデータを返します |。DataReader 列 |説明 |  |-----------------------|-----------------|  |AllowDBNull |コンシューマーは、null 値に列を設定できる場合、またはプロバイダーでは、コンシューマーが列を null 値に設定できるかどうかを判断できない場合に設定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Otherwise, not set.</source>
          <target state="translated">それ以外の場合、設定されていません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A column may contain null values, even if it cannot be set to a null value.|   |BaseCatalogName|The name of the catalog in the data store that contains the column.</source>
          <target state="translated">列がある場合、null 値を null 値に設定できない場合でもです |。  |BaseCatalogName |列を含むデータ ストア内のカタログの名前。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>NULL if the base catalog name cannot be determined.</source>
          <target state="translated">ベースのカタログ名を特定できない場合は NULL です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseColumnName|The name of the column in the data store.</source>
          <target state="translated">この列の既定値は null 値です |。  |BaseColumnName |データ ストア内の列の名前。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This might be different than the column name returned in the ColumnName column if an alias was used.</source>
          <target state="translated">これは、エイリアスが使用されたかどうか、[ColumnName] 列で、列名が返されては異なる可能性があります。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</source>
          <target state="translated">ベースの列名を特定できない場合や行セットの列が派生したと一致しない、データの列ストアの場合は、null 値。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseSchemaName|The name of the schema in the data store that contains the column.</source>
          <target state="translated">この列の既定値は null 値です |。  |BaseSchemaName |列を含むデータ ストア内のスキーマの名前です。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A null value if the base schema name cannot be determined.</source>
          <target state="translated">ベース スキーマ名を特定できない場合は、null 値です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseServerName|The name of the instance of Microsoft SQL Server used by the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.|   |BaseTableName|The name of the table or view in the data store that contains the column.</source>
          <target state="translated">この列の既定値は null 値です |。  |BaseServerName |&lt;xref:System.Data.SqlClient.SqlDataReader&gt;によって使用される Microsoft SQL Server のインスタンスの名前です |。  |BaseTableName |テーブルまたは列を含むデータ ストア内のビューの名前&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A null value if the base table name cannot be determined.</source>
          <target state="translated">ベース テーブル名を特定できない場合は、null 値です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |ColumnName|The name of the column; this might not be unique.</source>
          <target state="translated">この列の既定値は null 値です |。  |ColumnName |列の名前これは一意でない可能性があります。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If this cannot be determined, a null value is returned.</source>
          <target state="translated">これを特定できない場合は、null 値が返されます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This name always reflects the most recent renaming of the column in the current view or command text.|   |ColumnOrdinal|The zero-based ordinal of the column.</source>
          <target state="translated">この名前が常に最新の現在のビューまたはコマンド テキスト内の列の名前を反映します |。  |ColumnOrdinal |列の&amp;0; から始まる序数です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>This column cannot contain a null value.|   |ColumnSize|The maximum possible length of a value in the column.</source>
          <target state="translated">この列は null 値を含めることはできません |。  |ColumnSize |列の値の可能な最大長。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For columns that use a fixed-length data type, this is the size of the data type.</source>
          <target state="translated">固定長データ型を使用する列でのデータ型のサイズです。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`nvarchar(MAX)`</ph>, <ph id="ph2">`varchar(MAX)`</ph>, and <ph id="ph3">`varbinary(MAX)`</ph> columns stored in a SQL Server database, the maximum size is 2GB.</source>
          <target state="translated"><ph id="ph1">`nvarchar(MAX)`</ph>、 <ph id="ph2">`varchar(MAX)`</ph>、および<ph id="ph3">`varbinary(MAX)`</ph>最大サイズ、SQL Server データベースに格納されている列が 2 GB です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</source>
          <target state="translated">これらの列では、格納され、ファイルとしてアクセスすることが場合、ファイル システムで最大サイズの制限が課せられます。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This value changes when using the <ph id="ph1">`Type System Version`</ph> keyword in the connection string.</source>
          <target state="translated">使用する場合、この値が変更された、<ph id="ph1">`Type System Version`</ph>接続文字列キーワードでします。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For new types they are represented as downlevel types.</source>
          <target state="translated">新しい種類の下位レベルの種類として表されます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The MAX data types return the normal 4k for <ph id="ph1">`nvarchar`</ph> and 8000 for <ph id="ph2">`varchar`</ph>.</source>
          <target state="translated">MAX データ型を返すための標準の 4 k<ph id="ph1">`nvarchar`</ph>につき 8,000<ph id="ph2">`varchar`</ph>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information, see the Transact-SQL reference in SQL Server Books Online.|   |DataTypeName|Returns a string representing the data type of the specified column.|   |IsAliased|<ph id="ph1">`true`</ph>: The column name is an alias.</source>
          <target state="translated">詳細については、SQL Server オンライン ブックで TRANSACT-SQL リファレンスを参照してください |。  |DataTypeName |指定された列のデータ型を表す文字列を返します |。  |IsAliased |<ph id="ph1">`true`</ph>: 列名は、エイリアスです。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column name is not an alias.|   |IsAutoIncrement|<ph id="ph2">`true`</ph>: The column assigns values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列名は、エイリアスではありません。 |  |IsAutoIncrement |<ph id="ph2">`true`</ph>: 列が固定された増分で新しい行に値を割り当てます。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not assign values to new rows in fixed increments.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列は、固定された増分で新しい行に値を割り当てられません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default of this column is <ph id="ph1">`false`</ph>.|   |IsColumnSet|<ph id="ph2">`true`</ph>: The column is a sparse column that is a member of a column set.|   |IsExpression|<ph id="ph3">`true`</ph>: The column is an expression.</source>
          <target state="translated">この列の既定値は<ph id="ph1">`false`</ph>|。  |IsColumnSet |<ph id="ph2">`true`</ph>: 列が列セットのメンバーであるスパース列です |。  |IsExpression |<ph id="ph3">`true`</ph>: 列が式。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not an expression.|   |IsHidden|<ph id="ph2">`true`</ph>: The column is hidden.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列が式ではありません。 |  |IsHidden |<ph id="ph2">`true`</ph>: 列を非表示にします。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not hidden.|   |IsIdentity|<ph id="ph2">`true`</ph>: The column is an identity column.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列は非表示にします。 |  |IsIdentity |<ph id="ph2">`true`</ph>: 列が id 列です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not an identity column.|   |IsKey|<ph id="ph2">`true`</ph>: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</source>
          <target state="translated"><ph id="ph1">`false`</ph>列は id 列ではありません |。  |IsKey |<ph id="ph2">`true`</ph>: 列が行セットの列のセットのいずれかをまとめると、行を一意に識別します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The set of columns with <ph id="ph1">`IsKey`</ph> set to <ph id="ph2">`true`</ph> must uniquely identify a row in the rowset.</source>
          <target state="translated">列のセット<ph id="ph1">`IsKey`</ph>'éý'<ph id="ph2">`true`</ph>行セット内の行を一意に識別する必要があります。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>There is no requirement that this set of columns is a minimal set of columns.</source>
          <target state="translated">この列のセットが列の最小セットである必要はありません。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</source>
          <target state="translated">この列のセットは、ベース テーブルの主キー、unique 制約または一意のインデックスから生成される可能性があります。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not required to uniquely identify the row.|   |IsLong|<ph id="ph2">`true`</ph>: The column contains a Binary Long Object (BLOB) that contains very long data.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列が行を一意に識別する必要はありません。 |  |IsLong |<ph id="ph2">`true`</ph>: 列には非常に長いデータを含むバイナリ長オブジェクト (BLOB) が含まれています。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The definition of very long data is provider-specific.</source>
          <target state="translated">非常に長いデータの定義は、プロバイダー固有です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not contain a Binary Long Object (BLOB) that contains very long data.|   |IsReadOnly|<ph id="ph2">`true`</ph>: The column cannot be modified.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列に非常に長いデータを含むバイナリ長オブジェクト (BLOB) が含まれていません。 |  |IsReadOnly |<ph id="ph2">`true`</ph>: 列を変更することはできません。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column can be modified.|   |IsRowVersion|<ph id="ph2">`true`</ph>: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列を変更することができます。 |  |IsRowVersion |<ph id="ph2">`true`</ph>: 列が、書き込むことができない永続的な行識別子を含むし、意味を持たない値以外の id に、行があります。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.|   |IsUnique|<ph id="ph2">`true`</ph>: Column is of type <ph id="ph3">`timestamp`</ph>.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列が、書き込むことができない永続的な行識別子が含まれず、意味を持たない値以外の id に、行がある。 |  |IsUnique |<ph id="ph2">`true`</ph>: 列は型<ph id="ph3">`timestamp`</ph>です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: Column is not of type <ph id="ph2">`timestamp`</ph>.|   |NonVersionedProviderType|The type of the column irrespective of the current <ph id="ph3">`Type System Version`</ph> specified in the connection string.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列の型ではありません<ph id="ph2">`timestamp`</ph>。 |  |NonVersionedProviderType |関係なく、現在の列の型<ph id="ph3">`Type System Version`</ph>接続文字列で指定します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The returned value is from the &lt;xref:System.Data.SqlDbType&gt; enumeration.|   |NumericPrecision|If <ph id="ph1">`ProviderType`</ph> is a numeric data type, this is the maximum precision of the column.</source>
          <target state="translated">&lt;xref:System.Data.SqlDbType&gt;列挙体からの戻り値です |。  |NumericPrecision |場合<ph id="ph1">`ProviderType`</ph>数値データ型は、これは、列の最大有効桁数&lt;/xref:System.Data.SqlDbType&gt;。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The precision depends on the definition of the column.</source>
          <target state="translated">有効桁数は、列の定義によって異なります。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`ProviderType`</ph> is not a numeric data type, this is 255.|   |NumericScale|If <ph id="ph2">`ProviderType`</ph> is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</source>
          <target state="translated">場合<ph id="ph1">`ProviderType`</ph>数値データ型ではない 255 です |。  |NumericScale |場合<ph id="ph2">`ProviderType`</ph>DBTYPE_DECIMAL または DBTYPE_NUMERIC、小数点の右側にある数字の数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Otherwise, this is 255.|   |ProviderSpecificDataType|Returns the provider-specific data type of the column based on the <ph id="ph1">`Type System Version`</ph> keyword in the connection string.|   |ProviderType|The indicator of the column's data type.</source>
          <target state="translated">それ以外の場合、これは 255 です |。  |ProviderSpecificDataType |に基づいて、列のプロバイダーに固有のデータ型を返します、<ph id="ph1">`Type System Version`</ph>接続文字列キーワードでします |。  |プロバイダーの種類 |列のデータ型のインジケーター。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>If the data type of the column varies from row to row, this must be Object.</source>
          <target state="translated">列のデータ型は、行ごとに変化する場合は、オブジェクトこのなければなりません。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>This column cannot contain a null value.|   |UdtAssemblyQualifiedName|If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per &lt;xref:System.Type.AssemblyQualifiedName%2A&gt;.</source>
          <target state="translated">この列は null 値を含めることはできません |。  |UdtAssemblyQualifiedName |これは、 &lt;xref:System.Type.AssemblyQualifiedName%2A&gt;。&lt;/xref:System.Type.AssemblyQualifiedName%2A&gt;に従って UDT のアセンブリの修飾名、列がユーザー定義型 (UDT) の場合は、します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>If the column is not a UDT, this is null.|   |XmlSchemaCollectionDatabase|The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</source>
          <target state="translated">列が UDT ではない場合は null です |。  |XmlSchemaCollectionDatabase |この XML インスタンスのスキーマ コレクションが置かれている行に XML 列についての情報が含まれている場合、データベースの名前。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.</source>
          <target state="translated">この値は<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph> Visual Basic で) コレクションが現在のデータベース内で定義されている場合。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>It is also null if there is no schema collection, in which case the <ph id="ph1">`XmlSchemaCollectionName`</ph> and <ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.|   |XmlSchemaCollectionName|The name of the schema collection for this XML instance, if the row contains information about an XML column.</source>
          <target state="translated">存在しない場合、スキーマ コレクションの場合は null も、<ph id="ph1">`XmlSchemaCollectionName`</ph>と<ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph>も null にします |。  |XmlSchemaCollectionName |行に XML 列についての情報が含まれている場合、この XML インスタンスのスキーマ コレクションの名前。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there is no associated schema collection.</source>
          <target state="translated">この値は<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph> Visual Basic で) 関連付けられているスキーマ コレクションが存在しない場合。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>If the value is null, the <ph id="ph1">`XmlSchemaCollectionDatabase`</ph> and <ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph> columns are also null.|   |XmlSchemaCollectionOwningSchema|The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</source>
          <target state="translated">値が null の場合、<ph id="ph1">`XmlSchemaCollectionDatabase`</ph>と<ph id="ph2">`XmlSchemaCollectionOwningSchema`</ph>も null にします |。  |XmlSchemaCollectionOwningSchema |この XML インスタンスのスキーマ コレクションが置かれている行に XML 列についての情報が含まれている場合、所有リレーショナル スキーマ。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the collection is defined within the current database.</source>
          <target state="translated">この値は<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph> Visual Basic で) コレクションが現在のデータベース内で定義されている場合。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>It is also null if there is no schema collection, in which case the <ph id="ph1">`XmlSchemaCollectionDatabase`</ph> and <ph id="ph2">`XmlSchemaCollectionName`</ph> columns are also null.|      &gt; <ph id="ph3">[!NOTE]</ph> &gt;  To make sure that metadata columns return the correct information, you must call &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt; with the <ph id="ph4">`behavior`</ph> parameter set to <ph id="ph5">`KeyInfo`</ph>.</source>
          <target state="translated">存在しない場合、スキーマ コレクションの場合は null も、<ph id="ph1">`XmlSchemaCollectionDatabase`</ph>と<ph id="ph2">`XmlSchemaCollectionName`</ph>も null にします |。     &gt; <ph id="ph3">[!NOTE]</ph> &gt; メタデータ列は、正しい情報を返すことは、呼び出す必要があるかどうかを確認する&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;で、<ph id="ph4">`behavior`</ph>パラメーターに設定<ph id="ph5">`KeyInfo`</ph>&lt;/xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</source>
          <target state="translated">それ以外の場合、既定値、null、または不適切なデータを返すスキーマ テーブル内の列のいくつかの可能性があります。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列メタデータを記述します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が閉じられます。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</source>
          <target state="translated">変換は実行されません。したがってバイナリ構造が既に取得したデータがあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBoolean"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータにはブール値が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The value of the column.</source>
          <target state="translated">列の値です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</source>
          <target state="translated">変換は実行されません。したがって取得されたデータおく必要があります、バイトか、例外が生成されます。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlByte"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得<bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlBytes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得<bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlChars"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータの日付/時刻値が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータの&amp;10; 進数の値が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDecimal"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータを倍精度浮動小数点数、おく必要があります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlDouble"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータを GUID、おく必要があります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a  <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlGuid"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータを 16 ビット符号付き整数の場合、おく必要があります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt16"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</source>
          <target state="translated">変換は実行されません。したがって取得されたデータには、32 ビット符号付き整数がある必要があります既にまたは例外が発生します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt32"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータは、64 ビットの符号付き整数をおく必要があります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlInt64"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータの&amp;10; 進数の値が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlMoney"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータを単精度浮動小数点数、おく必要があります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlSingle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータには、文字列が既にあります。 または例外が発生します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Returns the data value in the specified column as a SQL Server type.</source>
          <target state="translated">SQL Server 型として指定された列にデータ値を返します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>GetSqlValue returns data using the native SQL Server types.</source>
          <target state="translated">GetSqlValue では、SQL Server のネイティブ型を使用してデータを返します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>To retrieve data using the .NET Framework types, see &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;.</source>
          <target state="translated">.NET Framework の型を使用してデータを取得するには、 &lt;xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.GetValue%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The value of the column expressed as a <bpt id="p1">&lt;xref href="System.Data.SqlDbType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">として表現される列の値、 <bpt id="p1">&lt;xref href="System.Data.SqlDbType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Fills an array of &lt;xref:System.Object&gt; that contains the values for all the columns in the record, expressed as SQL Server types.</source>
          <target state="translated">配列&lt;xref:System.Object&gt;、レコード内のすべての列の値を含む SQL Server 型として表されます&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</source>
          <target state="translated">CLR 型システムではなく、SQL 型システムを使用して、1 回の呼び出しでレコードのすべての列の値を返します。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The length of the &lt;xref:System.Object&gt; array does not need to match the number of columns in the record.</source>
          <target state="translated">長さ、&lt;xref:System.Object&gt;配列は、レコード内の列の数と一致する必要はありません&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the record.</source>
          <target state="translated">渡すことができます、&lt;xref:System.Object&gt;レコードに含まれる列数より少ないを格納する配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array, starting at the column with ordinal 0.</source>
          <target state="translated">データの量のみ、&lt;xref:System.Object&gt;配列は、列序数に基づく、0 から始まる、配列にコピーを保持します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことも、&lt;xref:System.Object&gt;配列の長さが、結果の行に含まれる列の数を超える&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Any remaining columns are untouched.</source>
          <target state="translated">残りの列は、影響されません。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the values.</source>
          <target state="translated">配列&lt;xref:System.Object&gt;値をコピー先&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The column values are expressed as SQL Server types.</source>
          <target state="translated">列の値は、SQL Server 型として表されます。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of columns copied.</source>
          <target state="translated">コピーする列の数を示す整数。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph>null です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an XML value.</source>
          <target state="translated">XML 値として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be an XML value.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、XML 値が既にあります。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that contains the XML stored within the corresponding field.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>対応するフィールド内に格納された XML を含む値です。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 to &lt;xref:System.Data.DataTableReader.FieldCount*&gt; - 1</source>
          <target state="translated">渡されたインデックスは 0 &lt;xref:System.Data.DataTableReader.FieldCount*&gt;- 1&lt;/xref:System.Data.DataTableReader.FieldCount*&gt;の範囲外です。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>An attempt was made to read or access columns in a closed <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">読み取りまたはアクセス、閉じられた内の列を試みました<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The retrieved data is not compatible with the <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> type.</source>
          <target state="translated">取得したデータと互換性がない、 <bpt id="p1">&lt;xref href="System.Data.SqlTypes.SqlXml"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>型です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Retrieves binary, image, varbinary, UDT, and variant data types as a &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;。&lt;/xref:System.IO.Stream&gt;としてバイナリ、イメージ、varbinary、UDT、およびバリアント データ型を取得します。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream.ReadTimeout%2A&gt; defaults to the value of &lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;; but you can modify &lt;xref:System.IO.Stream.ReadTimeout%2A&gt; via GetStream.</source>
          <target state="translated">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;既定値は、値の&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;; を変更できますが、 &lt;xref:System.IO.Stream.ReadTimeout%2A&gt;GetStream を介して&lt;/xref:System.IO.Stream.ReadTimeout%2A&gt;&lt;/xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;。&lt;/xref:System.IO.Stream.ReadTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Null values will be returned as an empty (zero bytes) &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">Null 値は空 (0 バイト) として返されます&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetStream when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt;生成されます、 &lt;xref:System.InvalidOperationException&gt;GetStream によって返されるオブジェクトで使用すると、例外と&lt;xref:System.Data.CommandBehavior&gt;が有効になって&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.InvalidOperationException&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.IO.Stream&gt; are thrown as &lt;xref:System.IO.IOException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlException&gt;&lt;xref:System.IO.Stream&gt; &lt;xref:System.IO.IOException&gt; &lt;xref:System.Data.SqlClient.SqlException&gt;。&lt;/xref:System.Data.SqlClient.SqlException&gt;は、内部例外を確認します。 例外&lt;/xref:System.IO.IOException&gt;としてスローされる&lt;/xref:System.IO.Stream&gt;例外&lt;/xref:System.Data.SqlClient.SqlException&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The following &lt;xref:System.IO.Stream&gt; members are not available for objects returned by GetStream:      -   BeginWrite      -   EndWrite      -   Length      -   Position      -   Seek      -   SetLength      -   Write      -   WriteByte      -   WriteTimeout       When the connection property <ph id="ph1">`ContextConnection=true`</ph>, GetStream only supports synchronous data retrieval for both sequential (&lt;xref:System.Data.CommandBehavior&gt;) and non-sequential (&lt;xref:System.Data.CommandBehavior&gt;) access.</source>
          <target state="translated">次&lt;xref:System.IO.Stream&gt;メンバーが GetStream によって返されるオブジェクトでは使用されません: - BeginWrite - EndWrite 長の位置にシーク - SetLength - 書き込み - WriteByte - WriteTimeout される場合に、接続プロパティ<ph id="ph1">`ContextConnection=true`</ph>、GetStream では、シーケンシャルの両方の同期のデータの取得のみがサポートしています (&lt;xref:System.Data.CommandBehavior&gt;) と連続していない (&lt;xref:System.Data.CommandBehavior&gt;) アクセス&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>SqlClient ストリーミング サポート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>A stream object.</source>
          <target state="translated">ストリーム オブジェクト。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
          <target state="translated">接続が切断またはデータの取得中に閉じられました。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データの取得中に終了します。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
          <target state="translated">読み取ることができるデータがありません (たとえば、1 つ目&lt;&gt; <bpt id="p1">*</bpt>&gt; 呼び出されると、または false が返されたされていない)。     順次モード以前読み列を読み取るしようとしています。     実行中の非同期操作が発生しました。これはすべての Get に当てはまります<ept id="p1">*</ept>ストリームを読み取り中に呼び出すことができますが、順次モードで実行されているときに、方法です。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
          <target state="translated">存在しない列を読み取るしようとしています。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The returned type was not one of the types below:      -   binary      -   image      -   varbinary      -   udt</source>
          <target state="translated">戻り値の型が次の種類のいずれか: - バイナリの画像の varbinary - udt</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a string.</source>
          <target state="translated">文字列として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a string.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータでは、文字列が既にあります。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;。&lt;/xref:System.IO.TextReader&gt;として Char、NChar、NText、NVarChar、テキスト、varChar、および Variant データ型を取得します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.IO.TextReader&gt; are thrown as &lt;xref:System.IO.IOException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlException&gt;&lt;xref:System.IO.TextReader&gt; &lt;xref:System.IO.IOException&gt; &lt;xref:System.Data.SqlClient.SqlException&gt;。&lt;/xref:System.Data.SqlClient.SqlException&gt;は、内部例外を確認します。 例外&lt;/xref:System.IO.IOException&gt;としてスローされる&lt;/xref:System.IO.TextReader&gt;例外&lt;/xref:System.Data.SqlClient.SqlException&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Null values will be returned as an empty (zero bytes) &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">Null 値は空 (0 バイト) として返されます&lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetTextReader when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;生成されます、 &lt;xref:System.InvalidOperationException&gt;GetTextReader によって返されるオブジェクトで使用すると、例外と&lt;xref:System.Data.CommandBehavior&gt;が有効になって&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.InvalidOperationException&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>When the connection property <ph id="ph1">`ContextConnection=true`</ph>, GetTextReader only supports synchronous data retrieval for both sequential (&lt;xref:System.Data.CommandBehavior&gt;) and non-sequential (&lt;xref:System.Data.CommandBehavior&gt;) access.</source>
          <target state="translated">ときに、接続プロパティ<ph id="ph1">`ContextConnection=true`</ph>、GetTextReader では、シーケンシャルの両方の同期のデータの取得のみがサポートしています (&lt;xref:System.Data.CommandBehavior&gt;) と連続していない (&lt;xref:System.Data.CommandBehavior&gt;) アクセス&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.Data.CommandBehavior&gt;。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>SqlClient ストリーミング サポート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The column to be retrieved.</source>
          <target state="translated">取得する列。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The returned object.</source>
          <target state="translated">返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
          <target state="translated">接続が切断またはデータの取得中に閉じられました。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データの取得中に終了します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Tried to read a previously-read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
          <target state="translated">読み取ることができるデータがありません (たとえば、1 つ目&lt;&gt; <bpt id="p1">*</bpt>&gt; 呼び出されると、または false が返されたされていない)。     順次モード以前読み列を読み取るしようとしています。     実行中の非同期操作が発生しました。これはすべての Get に当てはまります<ept id="p1">*</ept>ストリームを読み取り中に呼び出すことができますが、順次モードで実行されているときに、方法です。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
          <target state="translated">存在しない列を読み取るしようとしています。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The returned type was not one of the types below:      -   char      -   nchar      -   ntext      -   nvarchar      -   text      -   varchar</source>
          <target state="translated">戻り値の型が次の種類のいずれか: - char、nchar、ntext、nvarchar、text - varchar</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified column as a &lt;xref:System.TimeSpan&gt; object.</source>
          <target state="translated">指定した列の値を取得、&lt;xref:System.TimeSpan&gt;オブジェクト&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>No conversions are performed; therefore, the data retrieved must already be a &lt;xref:System.TimeSpan&gt; object.</source>
          <target state="translated">変換は実行されません。そのため、取得されたデータおく必要があります、&lt;xref:System.TimeSpan&gt;オブジェクト&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format.</source>
          <target state="translated">ネイティブ形式で指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>GetValue returns data using the .NET Framework types.</source>
          <target state="translated">GetValue は、.NET Framework の型を使用してデータを返します。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This method returns <bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for null database columns.</source>
          <target state="translated">このメソッドが戻る<bpt id="p1">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> null データベース列にします。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Populates an array of objects with the column values of the current row.</source>
          <target state="translated">現在の行の列の値を持つオブジェクトの配列を追加します。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</source>
          <target state="translated">ほとんどのアプリケーションは、このメソッドは、各列を個別に取得する代わりに、すべての列を取得するための効率的な手段を提供します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことができます、&lt;xref:System.Object&gt;結果の行に含まれる列数より少ないを格納する配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
          <target state="translated">データの量のみ、&lt;xref:System.Object&gt;配列では、配列にコピーを保持します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことも、&lt;xref:System.Object&gt;配列の長さが、結果の行に含まれる列の数を超える&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; into which to copy the attribute columns.</source>
          <target state="translated">配列&lt;xref:System.Object&gt;属性列のコピー先&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
          <target state="translated">インスタンスの数&lt;xref:System.Object&gt;配列にします&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Retrieves data of type XML as an &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;。&lt;/xref:System.Xml.XmlReader&gt;として XML データ型を取得します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; object returned by GetXmlReader does not support asynchronous operations.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;GetXmlReader によって返されるオブジェクトは非同期操作をサポートしていません&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>If you require asynchronous operations on an &lt;xref:System.Xml.XmlReader&gt;, cast the XML column to an NVARCHAR(MAX) on the server and use &lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt; with &lt;xref:System.Xml.XmlReader.Create%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;キャスト、サーバーと使用&lt;xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt;&lt;xref:System.Xml.XmlReader.Create%2A&gt;。&lt;/xref:System.Xml.XmlReader.Create%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A&gt; nvarchar (max) に XML 列&lt;/xref:System.Xml.XmlReader&gt;で、非同期操作を必要とする場合</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlException&gt; exceptions raised from &lt;xref:System.Xml.XmlReader&gt; are thrown as &lt;xref:System.Xml.XmlException&gt; exceptions; check the inner exception for the &lt;xref:System.Data.SqlClient.SqlException&gt;.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlException&gt;&lt;xref:System.Xml.XmlReader&gt; &lt;xref:System.Xml.XmlException&gt; &lt;xref:System.Data.SqlClient.SqlException&gt;。&lt;/xref:System.Data.SqlClient.SqlException&gt;は、内部例外を確認します。 例外&lt;/xref:System.Xml.XmlException&gt;としてスローされる&lt;/xref:System.Xml.XmlReader&gt;例外&lt;/xref:System.Data.SqlClient.SqlException&gt;</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt; will raise an &lt;xref:System.InvalidOperationException&gt; exception when used on an object returned by GetXmlReader when &lt;xref:System.Data.CommandBehavior&gt; is in effect.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;生成されます、 &lt;xref:System.InvalidOperationException&gt;GetXmlReader によって返されるオブジェクトで使用すると、例外と&lt;xref:System.Data.CommandBehavior&gt;が有効になって&lt;/xref:System.Data.CommandBehavior&gt;&lt;/xref:System.InvalidOperationException&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.GetChars%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>SqlClient ストリーミング サポート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The value of the specified column.</source>
          <target state="translated">指定された列の値です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The returned object.</source>
          <target state="translated">返されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
          <target state="translated">接続が切断またはデータの取得中に閉じられました。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データの取得中に終了します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
          <target state="translated">読み取ることができるデータがありません (たとえば、1 つ目&lt;&gt; <bpt id="p1">*</bpt>&gt; 呼び出されると、または false が返されたされていない)。     連続モードで以前に読み取られた列を読み取るしようとしています。     実行中の非同期操作が発生しました。これはすべての Get に当てはまります<ept id="p1">*</ept>ストリームを読み取り中に呼び出すことができますが、順次モードで実行されているときに、方法です。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
          <target state="translated">存在しない列を読み取るしようとしています。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The returned type was not xml.</source>
          <target state="translated">返される種類は、xml ではありませんでした。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains one or more rows.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&amp;1; つまたは複数の行が含まれています。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains one or more rows; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&amp;1; つまたは複数の行が含まれます。 それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean value that indicates whether the specified <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance has been closed.</source>
          <target state="translated">示すブール値を取得するかどうか、指定した<bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンスが閉じられました。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>It is not possible to read from a &lt;xref:System.Data.SqlClient.SqlDataReader&gt; instance that is closed.</source>
          <target state="translated">読み取ることはできません、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;閉じられているインスタンス&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance is closed; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、指定した<bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>インスタンスが閉じている<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> matches that of the <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> .</source>
          <target state="translated">決定するかどうか、指定した<bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>のものと一致する、 <bpt id="p2">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメンバーは、.NET Framework インフラストラクチャをサポートしているをコードから直接使用するものではありません。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙します。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is true, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、指定した<bpt id="p2">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>が true の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>それ以外の場合。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the column contains non-existent or missing values.</source>
          <target state="translated">列に値が存在しないまたは欠損値が含まれるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Call this method to check for null column values before calling the typed get methods (for example, &lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;, and so on) to avoid raising an error.</source>
          <target state="translated">チェック、型指定されたを呼び出す前に null 列値は get メソッドには、このメソッドを呼び出す (たとえば、 &lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;、&lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;など) エラーの発生を防ぐ&lt;/xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;&lt;/xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SqlDataReader_IsDbNull#1<ept id="p2">](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>SqlDataReader_IsDbNull#1<ept id="p4">](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)</ept><ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>SqlDataReader_IsDbNull&amp;1;<ept id="p2">](~/add/codesnippet/visualbasic/m-system.data.sqlclient._29_1.vb)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>SqlDataReader_IsDbNull&amp;1;  <ept id="p4">](~/add/codesnippet/csharp/m-system.data.sqlclient._29_1.cs)</ept><ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定された列の値と等しい場合<bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;, which gets a value that indicates whether the column contains non-existent or missing values.</source>
          <target state="translated">非同期バージョンの&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;、列に値が存在しないまたは欠損値が含まれるかどうかを示す値を取得する&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用してをコマンド タイムアウトが経過する前に、操作を破棄することを要求できます。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>SqlClient ストリーミング サポート<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The zero-based column to be retrieved.</source>
          <target state="translated">取得する&amp;0; から始まる列です。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The cancellation instruction, which propagates a notification that operations should be canceled.</source>
          <target state="translated">取り消し命令、操作を取り消す必要がある通知を伝達します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>This does not guarantee the cancellation.</source>
          <target state="translated">これは、操作では、取り消しは保証されません。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>A setting of <bpt id="p1">&lt;xref uid="langword_csharp_CancellationToken.None" name="CancellationToken.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> makes this method equivalent to &lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;.</source>
          <target state="translated">設定<bpt id="p1">&lt;xref uid="langword_csharp_CancellationToken.None" name="CancellationToken.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>により、このメソッドが&lt;xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;.&lt;/xref:System.Data.SqlClient.SqlDataReader.IsDBNull*&gt;に相当</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The returned task must be marked as cancelled.</source>
          <target state="translated">取り消された、返されたタスクをマークする必要があります。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id="p2">&lt;xref uid="langword_csharp_DBNull" name="DBNull" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定された列の値と等しい場合<bpt id="p2">&lt;xref uid="langword_csharp_DBNull" name="DBNull" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The connection drops or is closed during the data retrieval.</source>
          <target state="translated">接続が切断またはデータの取得中に閉じられました。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed during the data retrieval.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データの取得中に終了します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>There is no data ready to be read (for example, the first &lt;xref:System.Data.SqlClient.SqlDataReader.Read<bpt id="p1">*</bpt>&gt; hasn't been called, or returned false).       Trying to read a previously read column in sequential mode.       There was an asynchronous operation in progress. This applies to all Get<ept id="p1">*</ept> methods when running in sequential mode, as they could be called while reading a stream.</source>
          <target state="translated">読み取ることができるデータがありません (たとえば、1 つ目&lt;&gt; <bpt id="p1">*</bpt>&gt; 呼び出されると、または false が返されたされていない)。     連続モードで以前に読み取られた列を読み取るしようとしています。     実行中の非同期操作が発生しました。これはすべての Get に当てはまります<ept id="p1">*</ept>ストリームを読み取り中に呼び出すことができますが、順次モードで実行されているときに、方法です。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Trying to read a column that does not exist.</source>
          <target state="translated">存在しない列を読み取るしようとしています。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column ordinal.</source>
          <target state="translated">序数の列を指定して、ネイティブ形式で指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">ネイティブ形式で指定された列の値です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">渡されたインデックス 0 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;。&lt;/xref:System.Data.IDataRecord.FieldCount*&gt;までの範囲外</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column name.</source>
          <target state="translated">列の名前を指定されたネイティブ形式で指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>A case-sensitive lookup is performed first.</source>
          <target state="translated">大文字小文字を区別ルックアップが最初に実行されます。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</source>
          <target state="translated">2 番目の検索が行われた、失敗した場合は (大文字と小文字の比較が行われデータベース照合順序を使用)。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Unexpected results can occur when comparisons are affected by culture-specific casing rules.</source>
          <target state="translated">予期しない結果は、比較がカルチャに固有の大文字と小文字の規則によって影響を受けるときに発生します。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</source>
          <target state="translated">たとえば、トルコ語では次の例間違った結果が生成トルコ語で、ファイル システムは、文字 'i' の言語の文字種の規則を使用しないので"file"にします。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>This method is kana-width insensitive.</source>
          <target state="translated">このメソッドは、カタカナの全角を区別します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The column name.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">ネイティブ形式で指定された列の値です。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>No column with the specified name was found.</source>
          <target state="translated">指定した名前の列は見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</source>
          <target state="translated">バッチ TRANSACT-SQL ステートメントの結果を読み込むときに、次の結果にデータ リーダーを進めます。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</source>
          <target state="translated">TRANSACT-SQL バッチのステートメントを実行することによって生成される複数の結果を処理するために使用します。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>By default, the data reader is positioned on the first result.</source>
          <target state="translated">既定では、データ リーダーは、最初の結果に位置付けられます。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more result sets; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>次の結果セットがある場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.NextResult*&gt;, which advances the data reader to the next result, when reading the results of batch <ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph> statements.</source>
          <target state="translated">非同期バージョンの&lt;xref:System.Data.SqlClient.SqlDataReader.NextResult*&gt;、バッチの結果を読み取っているときに、次の結果にデータ リーダーを進めますを<ph id="ph1">[!INCLUDE[tsql](~/add/includes/tsql-md.md)]</ph>ステートメント&lt;/xref:System.Data.SqlClient.SqlDataReader.NextResult*&gt;。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用してをコマンド タイムアウトが経過する前に、操作を破棄することを要求できます。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>For more information about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">非同期プログラミングの詳細については、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Calling NextResultAsync more than once for the same instance before task completion.</source>
          <target state="translated">タスクの完了前に、同じインスタンスに対して NextResultAsync を複数回呼び出しています。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>コマンド テキストの実行中にエラーが返されます。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Advances the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next record.</source>
          <target state="translated">進めます、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>次のレコードにします。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The default position of the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is before the first record.</source>
          <target state="translated">既定の位置、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;最初のレコードの前に、です&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Therefore, you must call Read to begin accessing any data.</source>
          <target state="translated">したがって、データへのアクセスを開始する読み取りを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Only one <ph id="ph1">`SqlDataReader`</ph> per associated &lt;xref:System.Data.SqlClient.SqlConnection&gt; may be open at a time, and any attempt to open another will fail until the first one is closed.</source>
          <target state="translated">1 つだけ<ph id="ph1">`SqlDataReader`</ph>ごとに関連付けられている&lt;xref:System.Data.SqlClient.SqlConnection&gt;、時に、開いている可能性があります最初の&amp;1; つが閉じられるまでを開くには別の試行は失敗します&lt;/xref:System.Data.SqlClient.SqlConnection&gt;。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Similarly, while the <ph id="ph1">`SqlDataReader`</ph> is being used, the associated <ph id="ph2">`SqlConnection`</ph> is busy serving it until you call &lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;.</source>
          <target state="translated">同様に、<ph id="ph1">`SqlDataReader`</ph>が使用されている、関連付けられた<ph id="ph2">`SqlConnection`</ph>呼び出し&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;.&lt;/xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;まで、処理中</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more rows; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>複数の行がある場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>コマンド テキストの実行中にエラーが返されます。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>An asynchronous version of &lt;xref:System.Data.SqlClient.SqlDataReader.Read*&gt;, which advances the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next record.</source>
          <target state="translated">非同期バージョンの&lt;xref:System.Data.SqlClient.SqlDataReader.Read*&gt;、どの進歩、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>次のレコードにします&lt;/xref:System.Data.SqlClient.SqlDataReader.Read*&gt;。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用してをコマンド タイムアウトが経過する前に、操作を破棄することを要求できます。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">例外は、返されたタスク オブジェクトによって報告されます。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`behavior`</ph> parameter of &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A&gt; is set to <ph id="ph2">`Default`</ph>, ReadAsync reads the entire row before returning the Task.</source>
          <target state="translated">場合、<ph id="ph1">`behavior`</ph>のパラメーター &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A&gt;éý ' è <ph id="ph2">`Default`</ph>ReadAsync は、タスクを返す前に行全体を読み取ります&lt;/xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>For more information, including code samples, about asynchronous programming in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、非同期プログラミングの方法のコード サンプルを含む、 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> Data Provider for<ph id="ph2">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>を参照してください<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Calling ReadAsync more than once for the same instance before task completion.</source>
          <target state="translated">タスクの完了前に、同じインスタンスに対して ReadAsync を複数回呼び出しています。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified in the connection string.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Context Connection=true" name="Context Connection=true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>接続文字列で指定されます。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]</ph>コマンド テキストの実行中にエラーが返されます。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</source>
          <target state="translated">変更、挿入、または TRANSACT-SQL ステートメントの実行によって削除された行の数を取得します。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The RecordsAffected property is not set until all rows are read and you close the &lt;xref:System.Data.SqlClient.SqlDataReader&gt;.</source>
          <target state="translated">RecordsAffected プロパティが設定されていないすべての行が読み取られ、 &lt;xref:System.Data.SqlClient.SqlDataReader&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The value of this property is cumulative.</source>
          <target state="translated">このプロパティの値は、累積的なです。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>For example, if two records are inserted in batch mode, the value of <ph id="ph1">`RecordsAffected`</ph> will be two.</source>
          <target state="translated">たとえば、バッチ モードの値で&amp;2; つのレコードが挿入された<ph id="ph1">`RecordsAffected`</ph>2 になります。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt; and RecordsAffected are the only properties that you can call after the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; is closed.</source>
          <target state="translated">&lt;xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;RecordsAffected が後に呼び出すことができる唯一のプロパティと、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;が閉じられた&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。&lt;/xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</source>
          <target state="translated">変更、挿入、または削除された行の数影響を受けた行がない場合は 0 またはステートメントが失敗しました。SELECT ステートメントの場合は-1。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified column ordinal.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された列の序数に対応します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; instance is cast to an &lt;xref:System.IDataRecord&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;にインスタンスをキャスト、&lt;xref:System.IDataRecord&gt;インターフェイス&lt;/xref:System.IDataRecord&gt;&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>A column ordinal.</source>
          <target state="translated">列の序数。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the specified column ordinal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された列の序数のインスタンス。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets the number of fields in the <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that are not hidden.</source>
          <target state="translated">内のフィールドの数を取得、 <bpt id="p1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>This value is used to determine how many fields in the &lt;xref:System.Data.SqlClient.SqlDataReader&gt; are visible.</source>
          <target state="translated">この値はでフィールドの数を決定するために使用、&lt;xref:System.Data.SqlClient.SqlDataReader&gt;表示されます&lt;/xref:System.Data.SqlClient.SqlDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</source>
          <target state="translated">たとえば、部分的な主キー上の SELECT は、非表示フィールドとして、キーの残りの部分を返します。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The hidden fields are always appended behind the visible fields.</source>
          <target state="translated">非表示フィールドは常に表示されるフィールドの後ろに追加されます。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The number of fields that are not hidden.</source>
          <target state="translated">非表示フィールドの数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>