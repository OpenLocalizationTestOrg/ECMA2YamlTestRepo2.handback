<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a45e468eeaeb75f01bcf5dfabcf58f4366cdeeb4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.VirtualPathUtility.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">914ffe5d8da5676064bdb0c4d4fa760b1cd62e47</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c47ccd9226cb8a652fadb0f92d4551389f3222e1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides utility methods for common virtual path operations.</source>
          <target state="translated">仮想パスの一般的な操作のためのユーティリティ メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Appends the literal slash mark (/) to the end of the virtual path, if one does not already exist.</source>
          <target state="translated">既に存在しない場合は、仮想パスの末尾にリテラルのスラッシュ記号 (/) を追加します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If the literal slash mark (/) exists at the end of the virtual path, the virtual path is not modified.</source>
          <target state="translated">仮想パスの末尾にリテラルのスラッシュ記号 (/) が存在する場合の仮想パスは変更されません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The virtual path to append the slash mark to.</source>
          <target state="translated">スラッシュを追加する仮想パス。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The modified virtual path.</source>
          <target state="translated">変更された仮想パス。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Combines a base path and a relative path.</source>
          <target state="translated">基本パスと相対パスを結合します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>TheCombine method returns the value of the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property if the relative path is exactly a tilde (~).</source>
          <target state="translated">TheCombine メソッドの値を返します、&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;プロパティの相対パスが正確にティルダ (~) である場合&lt;/xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The Combine method uses the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the Combine method uses the base path.</source>
          <target state="translated">結合メソッドを使用して、&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;プロパティ ベースのパスではなく値の相対パスがチルダとスラッシュ (/) で始まる場合 (~/)、それ以外の結合メソッドは基本のパスを使用して&lt;/xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The base path.</source>
          <target state="translated">基本パス。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The relative path.</source>
          <target state="translated">相対パス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The combined <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">basePath</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativePath</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">The combined <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">basePath</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativePath</ph><ept id="p2">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> is a physical path.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph>物理パスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> includes one or more colons.</source>
          <target state="translated">- または - <ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph>&amp;1; つまたは複数のコロンが含まれています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または空の文字列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;basePath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;basePath&lt;/code&gt;</ph>は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または空の文字列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns the directory portion of a virtual path.</source>
          <target state="translated">仮想パスのディレクトリの部分を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an &lt;xref:System.ArgumentException&gt; exception is thrown.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>ルートがありませんつまり、ルート演算子 (ティルダ [~]) と等しくない、パラメーターがチルダとスラッシュ (/) など、チルダ (~) で始まっていない (~/) またはチルダと二重の円記号 (~//)、スラッシュ (/) で始まっていないか、&lt;xref:System.ArgumentException&gt;例外がスローされます。&lt;/xref:System.ArgumentException&gt; 。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the virtual path that is passed into the GetDirectory method is <ph id="ph1">`"/images/image1.gif"`</ph>, the returned directory is <ph id="ph2">`"/images"`</ph>.</source>
          <target state="translated">かどうかは、GetDirectory メソッドに渡される仮想パスは<ph id="ph1">`"/images/image1.gif"`</ph>、返されたディレクトリは<ph id="ph2">`"/images"`</ph>します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
          <target state="translated">仮想パス。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The directory referenced in the virtual path.</source>
          <target state="translated">仮想パスで参照されているディレクトリです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves the extension of the file that is referenced in the virtual path.</source>
          <target state="translated">仮想パスで参照されているファイルの拡張子を取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the virtual path that is passed into the GetExtension method is <ph id="ph1">`"/images/image1.gif"`</ph>, the returned extension is <ph id="ph2">`".gif"`</ph>.</source>
          <target state="translated">かどうかは、GetExtension メソッドに渡される仮想パスは<ph id="ph1">`"/images/image1.gif"`</ph>、返される拡張は<ph id="ph2">`".gif"`</ph>します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
          <target state="translated">仮想パス。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The file name extension string literal, including the period (.), <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or an empty string ("").</source>
          <target state="translated">ファイル名拡張子の文字列リテラル、ピリオド (.) を含む<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、または空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>定義されている無効な文字が&amp;1; つまたは複数含まれています<ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Retrieves the file name of the file that is referenced in the virtual path.</source>
          <target state="translated">仮想パスで参照されているファイルのファイル名を取得します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the virtual path that is passed into the GetFileName method is <ph id="ph1">`"/images/image1.gif"`</ph>, the returned file name is <ph id="ph2">`"image1.gif"`</ph>.</source>
          <target state="translated">かどうかは、GetFileName メソッドに渡される仮想パスは<ph id="ph1">`"/images/image1.gif"`</ph>、返されたファイル名が<ph id="ph2">`"image1.gif"`</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
          <target state="translated">仮想パス。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The file name literal after the last directory character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, the last directory name if the last character of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">virtualPath</ph><ept id="p2">&lt;/code&gt;</ept> is a directory or volume separator character.</source>
          <target state="translated">ファイル名の最後のディレクトリ文字の後にリテラル<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph> <ept id="p1">&lt;/code&gt;</ept>、それ以外の場合は、最後のディレクトリ名の最後の文字<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">virtualPath</ph> <ept id="p2">&lt;/code&gt;</ept>ディレクトリまたはボリューム区切り文字します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>定義されている無効な文字が&amp;1; つまたは複数含まれています<ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value indicating whether the specified virtual path is absolute; that is, it starts with a literal slash mark (/).</source>
          <target state="translated">指定した仮想パスが絶対; するかどうかを示すブール値を返しますつまり、リテラルのスラッシュ記号 (/) で開始します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A virtual path is absolute if it begins with a literal slash mark (/).</source>
          <target state="translated">仮想パスは、リテラルのスラッシュ記号 (/) で始まる場合は、絶対です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Web.HttpRequest.Path%2A&gt; property returns an absolute virtual path.</source>
          <target state="translated">&lt;xref:System.Web.HttpRequest.Path%2A&gt;プロパティは、絶対仮想パスを返します。&lt;/xref:System.Web.HttpRequest.Path%2A&gt;たとえば、</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The virtual path to check.</source>
          <target state="translated">確認への仮想パス。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p2">&lt;/code&gt;</ept> is an absolute path and is not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or an empty string (""); otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph> <ept id="p2">&lt;/code&gt;</ept>絶対パスは、 <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>または空の文字列 ("") です。otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value indicating whether the specified virtual path is relative to the application.</source>
          <target state="translated">指定した仮想パスがアプリケーションを基準とするかどうかを示すブール値を返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The virtual path can be just the root operator (the tilde [~]), or it can begin with the root operator.</source>
          <target state="translated">仮想パスは、ルート演算子 (、チルダ [])、または演算子付きのルートを開始します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is <ph id="ph2">`null`</ph>, an &lt;xref:System.ArgumentNullException&gt; exception is raised.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>は<ph id="ph2">`null`</ph>、&lt;xref:System.ArgumentNullException&gt;例外がスローされます&lt;/xref:System.ArgumentNullException&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is an empty string (""), the IsAppRelative method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>空の文字列 ("")、IsAppRelative メソッドを返します<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`"~`</ph> <ph id="ph4">`filename`</ph> <ph id="ph5">`"`</ph> is not a valid virtual path and returns <ph id="ph6">`false`</ph> for the IsAppRelative method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> <ph id="ph2"> &gt;  </ph> <ph id="ph3">`"~`</ph> <ph id="ph4">`filename`</ph> <ph id="ph5">`"`</ph>は有効な仮想パスではありませんし、返します<ph id="ph6">`false`</ph>IsAppRelative メソッドです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The virtual path to check.</source>
          <target state="translated">確認への仮想パス。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p2">&lt;/code&gt;</ept> is relative to the application; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph> <ept id="p2">&lt;/code&gt;</ept> 、それ以外のアプリケーションに相対<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.</source>
          <target state="translated">別に、ルート演算子 (ティルダ [~]) を含む&amp;1; つの仮想パスからの相対仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`fromPath`</ph> and <ph id="ph2">`toPath`</ph> parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an &lt;xref:System.ArgumentException&gt; exception is thrown.</source>
          <target state="translated">場合、<ph id="ph1">`fromPath`</ph>と<ph id="ph2">`toPath`</ph>パラメーターはルートがないですつまり、ルート演算子 (ティルダ [~]) が等しくないが、パラメーターがチルダとスラッシュ (/) など、チルダ (~) で始まらない (~/) またはチルダと二重の円記号 (~//)、またはスラッシュ (/) で始まらない、&lt;xref:System.ArgumentException&gt;例外がスローされます。&lt;/xref:System.ArgumentException&gt; 。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Query string parameters and HTML anchors that are used in the URI are not used in determining the relative path.</source>
          <target state="translated">クエリ文字列パラメーターとは、URI で使用する HTML アンカーは、相対パスを決定するのには使用されません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`fromPath`</ph> is <ph id="ph2">`"/directory1/file1.aspx"`</ph> and <ph id="ph3">`toPath`</ph> is <ph id="ph4">`"/directory2/file2.aspx"`</ph>, the MakeRelative method returns <ph id="ph5">`"../directory2/file2.aspx"`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`fromPath`</ph>は<ph id="ph2">`"/directory1/file1.aspx"`</ph>と<ph id="ph3">`toPath`</ph>は<ph id="ph4">`"/directory2/file2.aspx"`</ph>、MakeRelative メソッドを返します<ph id="ph5">`"../directory2/file2.aspx"`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The starting virtual path to return the relative virtual path from.</source>
          <target state="translated">相対仮想パスを返すの開始となる仮想パス。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The ending virtual path to return the relative virtual path to.</source>
          <target state="translated">相対仮想パスを返すの終了となる仮想パス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The relative virtual path from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fromPath</ph><ept id="p1">&lt;/code&gt;</ept> to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">toPath</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">相対仮想パス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fromPath</ph> <ept id="p1">&lt;/code&gt;</ept>に<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">toPath</ph><ept id="p2">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Removes a trailing slash mark (/) from a virtual path.</source>
          <target state="translated">仮想パスから末尾のスラッシュ記号 (/) を削除します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The RemoveTrailingSlash method removes a slash mark (/) from the end of the virtual path.</source>
          <target state="translated">RemoveTrailingSlash メソッドは、スラッシュ (/) を仮想パスの末尾から削除します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the virtual path is already the root directory (<ph id="ph1">`"/"`</ph>), no action is taken.</source>
          <target state="translated">仮想パスがルート ディレクトリで既に場合 (<ph id="ph1">`"/"`</ph>)、アクションは実行されません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If the virtual path is <ph id="ph1">`null`</ph> or an empty string (""), the RemoveTrailingSlash method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">仮想パスが場合<ph id="ph1">`null`</ph>または空の文字列 ("")、RemoveTrailingSlash メソッドを返します<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The virtual path to remove any trailing slash mark from.</source>
          <target state="translated">末尾のスラッシュを削除する仮想パスからマークを付けます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A virtual path without a trailing slash mark, if the virtual path is not already the root directory ("/"); otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">仮想パスが末尾にスラッシュ記号、仮想パスがまだいない場合、ルート ディレクトリ (「/」) です。それ以外の場合、 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application absolute path.</source>
          <target state="translated">仮想パスをアプリケーション絶対パスに変換します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An application absolute path is one where the application path is used instead of the root operator (the tilde [~]).</source>
          <target state="translated">アプリケーション絶対パスは、ルート演算子 (ティルダ [~]) ではなく、アプリケーション パスが使用されているいずれかです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is:      -   Absolute, the ToAbsolute method returns the virtual path unchanged.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>: 絶対 - ToAbsolute メソッドが変更されていない仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-   Application relative, the ToAbsolute method appends the current application virtual directory path to the beginning of the <ph id="ph1">`virtualPath`</ph>.</source>
          <target state="translated">のアプリケーション相対パス、ToAbsolute メソッドの先頭に現在のアプリケーション仮想ディレクトリ パスを追加、<ph id="ph1">`virtualPath`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For example, the current application virtual directory path can be accessed from the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property.</source>
          <target state="translated">現在のアプリケーションの仮想ディレクトリ パスのアクセスなど、&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;プロパティ&lt;/xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   Not rooted, the ToAbsolute method raises an &lt;xref:System.ArgumentOutOfRangeException&gt; exception.</source>
          <target state="translated">-Root 化されている、ToAbsolute メソッド、&lt;xref:System.ArgumentOutOfRangeException&gt;例外です&lt;/xref:System.ArgumentOutOfRangeException&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
          <target state="translated">アプリケーションの相対パスに変換する仮想パス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The absolute path representation of the specified virtual path.</source>
          <target state="translated">指定した仮想パスの絶対パス形式です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not rooted.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>ルートがありません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A leading double period (..) is used to exit above the top directory.</source>
          <target state="translated">先頭に二重ピリオド (.) を使用すると、最上位ディレクトリを終了します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application absolute path using the specified application path.</source>
          <target state="translated">仮想パスを指定したアプリケーションのパスを使用してアプリケーション絶対パスに変換します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The ToAbsolute overload of the &lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt; method uses the supplied application path rather than the current application path.</source>
          <target state="translated">ToAbsolute のオーバー ロード&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;メソッドは現在のアプリケーションのパスではなく、指定されたアプリケーション パスを使用&lt;/xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;する</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is:      -   Absolute, the ToAbsolute method returns the virtual path with no changes.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>: 絶対 - ToAbsolute メソッドは、変更せずに仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-   Application relative, the ToAbsolute method adds <ph id="ph1">`applicationPath`</ph> to the beginning of the virtual path.</source>
          <target state="translated">のアプリケーション相対パス、ToAbsolute メソッドは、追加<ph id="ph1">`applicationPath`</ph>仮想パスの先頭にします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-   Not rooted, the ToAbsolute method raises an &lt;xref:System.ArgumentOutOfRangeException&gt; exception.</source>
          <target state="translated">-Root 化されている、ToAbsolute メソッド、&lt;xref:System.ArgumentOutOfRangeException&gt;例外です&lt;/xref:System.ArgumentOutOfRangeException&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
          <target state="translated">アプリケーションの相対パスに変換する仮想パス。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The application path to use to convert <ph id="ph1">`virtualPath`</ph> to a relative path.</source>
          <target state="translated">変換に使用するアプリケーション パス<ph id="ph1">`virtualPath`</ph>の相対パスにします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The absolute virtual path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">絶対仮想パスの形式を<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;applicationPath&lt;/code&gt;</ph> is not rooted.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;applicationPath&lt;/code&gt;</ph>ルートがありません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A leading double period (..) is used in the application path to exit above the top directory.</source>
          <target state="translated">先頭に二重ピリオド (.) は、最上位ディレクトリを終了するアプリケーションのパスで使用されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application-relative path using the application virtual path that is in the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*&gt; property.</source>
          <target state="translated">仮想パスでは、アプリケーションの仮想パスを使用してアプリケーションの相対パスに変換、&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*&gt;プロパティ&lt;/xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the virtual path for the application is <ph id="ph1">`"myapp"`</ph> and the virtual path <ph id="ph2">`"/myApp/sub/default.asp"`</ph> is passed into the ToAppRelative method, the resulting application-relative path is <ph id="ph3">`"~/sub/default.aspx"`</ph>.</source>
          <target state="translated">場合は、アプリケーションの仮想パス<ph id="ph1">`"myapp"`</ph>および仮想パス<ph id="ph2">`"/myApp/sub/default.asp"`</ph>渡される結果として得られるアプリケーションの相対パスは、ToAppRelative メソッドに<ph id="ph3">`"~/sub/default.aspx"`</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> does not start with the current application path, the ToAppRelative method returns the virtual path unchanged.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>と現在のアプリケーション パス、メソッドの仮想パスが変更せずに返します ToAppRelative が起動しません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> is the same as the application path, the root operator (the tilde [~]), is returned.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>はアプリケーションのパスと同じルート演算子 (、チルダ []) が返されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, the current application virtual directory path can be accessed from the &lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt; property.</source>
          <target state="translated">現在のアプリケーションの仮想ディレクトリ パスのアクセスなど、&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;プロパティ&lt;/xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
          <target state="translated">アプリケーションの相対パスに変換する仮想パス。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The application-relative path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">アプリケーションの相対パス形式を<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application-relative path using a specified application path.</source>
          <target state="translated">仮想パスを指定したアプリケーションのパスを使用してアプリケーションの相対パスに変換します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The ToAppRelative overload of the &lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt; method uses <ph id="ph1">`applicationPath`</ph> rather than the current application path.</source>
          <target state="translated">ToAppRelative オーバー ロード、&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;メソッドを使用<ph id="ph1">`applicationPath`</ph>現在のアプリケーションのパスではなく&lt;/xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`virtualPath`</ph> does not start with <ph id="ph2">`applicationPath`</ph>, the ToAppRelative method returns the virtual path unchanged.</source>
          <target state="translated">場合<ph id="ph1">`virtualPath`</ph>で始まっていない<ph id="ph2">`applicationPath`</ph>、ToAppRelative メソッドが変更されていない仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
          <target state="translated">アプリケーションの相対パスに変換する仮想パス。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The application path to use to convert <ph id="ph1">`virtualPath`</ph> to a relative path.</source>
          <target state="translated">変換に使用するアプリケーション パス<ph id="ph1">`virtualPath`</ph>の相対パスにします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The application-relative path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">アプリケーションの相対パス形式を<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>