<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b49067799498337a8293f869a6c7972fb34e4171</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Services.Protocols.MimeFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2d7bd8c990d6eb57b1bad925eac10fc3386136b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cffcc3b9ed78e5d1c6d268fc1ec25eec826c509a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</source>
          <target state="translated">すべてのリーダーとライターせずに SOAP Web サービスおよび HTTP を使用して実装されているクライアント用の抽象基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</source>
          <target state="translated">Web サービスのライター、リーダー シリアル化および逆、それぞれ、Web メソッドのパラメーターまたは戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The MimeFormatter class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</source>
          <target state="translated">MimeFormatter クラスは、クライアントとサービス側の両方で共通のインターフェイスおよびリーダーおよびライターのクラスの機能を確立します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The MimeFormatter class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</source>
          <target state="translated">MimeFormatter クラスでは、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装をサポートします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</source>
          <target state="translated">HTTP GET 操作で要求のパラメーターは、HTTP 要求の Uniform Resource Locator (URL) でエンコードされます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</source>
          <target state="translated">HTTP POST 操作では、要求パラメーターは、HTTP 要求本文で HTML フォームと同様にエンコードされます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</source>
          <target state="translated">両方の実装と共に、戻り値として表示されます、HTTP 応答本文で SOAP 以外の XML ドキュメント。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A developer typically does not need to directly use MimeFormatter or its descendant classes.</source>
          <target state="translated">開発者は通常、MimeFormatter またはその派生クラスを直接使用する必要はありません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt; to each Web method and sets the attribute's &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt; and &lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A&gt; properties to the appropriate type derived from the MimeFormatter class.</source>
          <target state="translated">代わりに、Wsdl.exe ツールは、HTTP GET または HTTP POST の実装に応じて、クライアント プロキシ コードを生成するときに適用されます、&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;各 Web メソッドに属性の&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;および&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A&gt;MimeFormatter クラスから派生した適切な型にプロパティ&lt;/xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A&gt;&lt;/xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;を設定および&lt;/xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</source>
          <target state="translated">サーバーで、適切な派生型は、ASP.NET 構成ファイル (Web.config) の設定に従って使用されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>On the client the appropriate derived types are determined from the WSDL.</source>
          <target state="translated">クライアントでは、適切な派生型は、WSDL から決定されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates and initializes an instance of a concrete class derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">作成してから派生した具象クラスのインスタンスを初期化<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The CreateInstance method creates an instance of the derived class and invokes the derived class's implementation of the abstract &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">CreateInstance メソッドは、派生クラスのインスタンスを作成し、抽象の派生クラスの実装を呼び出す&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CreateInstance method is invoked at the time a request or response is processed.</source>
          <target state="translated">CreateInstance メソッドは、要求または応答の処理時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">初期化子は、パラメーターとして渡されるオブジェクト、&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The initializer passed as a parameter to the CreateInstance method is obtained from another instance of the derived class, by invoking the &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt; method during client or service initialization.</source>
          <target state="translated">CreateInstance メソッドにパラメーターとして渡される初期化子が呼び出すことによって、派生クラスの別のインスタンスから取得、&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;クライアントまたはサービスの初期化中にメソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Type, derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, of which to create an instance.</source>
          <target state="translated">派生した型、 <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An object used to initialize the instance obtained earlier through the derived class's implementation of the &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*&gt; method.</source>
          <target state="translated">インスタンスを初期化するために使用するオブジェクトは、以前の派生クラスの実装を取得、&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an initializer for the specified method.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したメソッドの初期化子を返します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">初期化子は、パラメーターとして渡されるオブジェクト、&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A derived class's implementation of the GetInitializer instance method is invoked during client or service initialization.</source>
          <target state="translated">派生クラスのメソッドの実装、GetInitializer インスタンスがクライアントまたはサービスの初期化中に呼び出されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Later, at the time a request or response is processed, the initializer object is passed to the static &lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt; method, which creates an instance of another object of the derived class, and then to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method to initialize it.</source>
          <target state="translated">後で、要求または応答の処理時に、初期化子オブジェクトが渡される静的&lt;xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;メソッド、および&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;それを初期化&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;し、さらに、派生クラスの別のオブジェクトのインスタンスを作成します。&lt;/xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The other object performs the actual reading or writing.</source>
          <target state="translated">その他のオブジェクトは、実際に読み取りまたは書き込みを実行します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the Web method for which the initializer is obtained.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>初期化子を取得する Web メソッドを指定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that contains the initializer for the specified method.</source>
          <target state="translated">&lt;xref:System.Object&gt;、指定したメソッドの初期化子を格納している&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns an initializer for the specified method.</source>
          <target state="translated">指定したメソッドの初期化子を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">初期化子は、パラメーターとして渡されるオブジェクト、&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The static GetInitializer method invokes the derived class's &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt; method, implicitly creating an instance of the derived class.</source>
          <target state="translated">静的 GetInitializer メソッドを呼び出す、派生クラスの&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;メソッドを暗黙的に派生クラスのインスタンスを作成します。&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>At the time a request or response is processed, the initializer object is passed to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method of another instance of the derived class.</source>
          <target state="translated">要求または応答の処理時に初期化子オブジェクトは&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;、派生クラスの別のインスタンスのメソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;に渡す</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The latter object performs the actual reading or writing.</source>
          <target state="translated">後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The Type, derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>,- for which an initializer is obtained.</source>
          <target state="translated">派生した型、 <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、初期化子が取得されるのです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the Web method for which the initializer is obtained.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>初期化子を取得する Web メソッドを指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Object&gt; object that contains the initializer for the specified method.</source>
          <target state="translated">A&lt;xref:System.Object&gt;を指定したメソッドの初期化子を含むオブジェクト&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</source>
          <target state="translated">派生クラスでオーバーライドされるは、メソッド定義の入力を配列に対応するオブジェクト初期化子の配列を返します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">初期化子は、パラメーターとして渡されるオブジェクト、&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The GetInitializers instance method invokes the &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt; instance method for each input Web method.</source>
          <target state="translated">GetInitializers インスタンス メソッドを呼び出して、&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;ごとにインスタンス メソッドは、Web メソッドを入力します&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This means an instance of a class derived from &lt;xref:System.Web.Services.Protocols.MimeFormatter&gt; has already been created.</source>
          <target state="translated">派生したクラスのインスタンスをつまり&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;既に作成されています&lt;/xref:System.Web.Services.Protocols.MimeFormatter&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>At the time a request or response is processed, the initializer is passed to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method of another instance of the derived class.</source>
          <target state="translated">要求または応答の処理時に初期化子は&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;、派生クラスの別のインスタンスのメソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;に渡す</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The latter object performs the actual reading or writing.</source>
          <target state="translated">後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</source>
          <target state="translated">各メソッドで返された初期化子の配列に対応するインデックスのオブジェクトが取得される、Web メソッドの配列。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An array of initializer objects corresponding to the input array of method definitions.</source>
          <target state="translated">メソッド定義の入力配列に対応する初期化子オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したクラスから派生したメソッドの定義の入力を配列に対応するオブジェクト初期化子の配列を返します<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An initializer is an object passed as a parameter to the &lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt; method.</source>
          <target state="translated">初期化子は、パラメーターとして渡されるオブジェクト、&lt;xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The static GetInitializersmethod causes the invocation of the &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt; method belonging to the derived class specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">静的 GetInitializersmethod によりの呼び出し、&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;メソッドによって指定された派生クラスに属している、<ph id="ph1">`type`</ph>のパラメーターです&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The Type, derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, for which initializers are obtained.</source>
          <target state="translated">派生した型、 <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、どの初期化子を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the Web methods for which the initializers are obtained.</source>
          <target state="translated">型の配列<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.LogicalMethodInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>初期化子を取得する対象の Web メソッドを指定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定したクラスから派生したメソッド定義の入力配列に対応する初期化子オブジェクトの配列<bpt id="p1">&lt;xref href="System.Web.Services.Protocols.MimeFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, initializes an instance.</source>
          <target state="translated">派生クラスでオーバーライドされると、インスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The Initialize method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the &lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt; method on another instance during client or service initialization.</source>
          <target state="translated">Initialize メソッドが要求または応答の処理時に呼び出されますただし、初期化子が呼び出すことによって取得、&lt;xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;クライアントまたはサービスの初期化中に別のインスタンス上のメソッド&lt;/xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An object of a type appropriate to the particular class that is implementing the method.</source>
          <target state="translated">メソッドの実装が特定のクラスに適切な型のオブジェクト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>