<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8750490bc611dc59fa90f85012465006f36a32c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Activities.WorkflowInvoker.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a62611c418c845f32df01d87297a82d4fb3e7df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bf8a2f4785a09ff6c880528e2883d18ccc62a2e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a means for invoking a workflow as if it were a method call.</source>
          <target state="translated">メソッドの呼び出しの場合と同様に、ワークフローを呼び出すための手段を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>WorkflowInvoker contains both instance and static methods for invoking workflows synchronously, and instance methods for invoking workflows asynchronously.</source>
          <target state="translated">WorkflowInvoker には、インスタンスとワークフローを同期的に呼び出すための静的メソッドとワークフローを非同期的に呼び出すためのインスタンス メソッドの両方が含まれています。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>WorkflowInvoker does not allow instance control such as persisting, unloading, or resuming bookmarks.</source>
          <target state="translated">WorkflowInvoker では、インスタンス コントロールなどの永続化、アンロード、およびブックマークの再開は許可されません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If instance control is desired, use &lt;xref:System.Activities.WorkflowApplication&gt; instead.</source>
          <target state="translated">インスタンス コントロールを使用する場合を使用して&lt;xref:System.Activities.WorkflowApplication&gt;代わりにします&lt;/xref:System.Activities.WorkflowApplication&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To execute workflows synchronously with no instance control, call the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; method.</source>
          <target state="translated">実行するにはワークフロー インスタンス コントロールなしで同期的に呼び出して、&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;メソッド&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To execute a workflow asynchronously with no instance control, use the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; and &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; method pairs, or the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; method.</source>
          <target state="translated">インスタンス コントロールなしで非同期的にワークフローを実行するには、&lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;と&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;メソッドのペア、または&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;メソッド&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Activities.WorkflowInvoker&gt; contains both instance and static methods for invoking workflows synchronously, and instance methods for invoking workflows asynchronously.</source>
          <target state="translated">&lt;xref:System.Activities.WorkflowInvoker&gt;インスタンスとワークフローを同期的に呼び出すための静的メソッドとワークフローを非同期的に呼び出すためのインスタンス メソッドの両方が含まれています。&lt;/xref:System.Activities.WorkflowInvoker&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to be invoked by this instance of the <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">このインスタンスによって呼び出されるワークフローのワークフロー定義、 <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified &lt;xref:System.AsyncCallback&gt; and user-provided state.</source>
          <target state="translated">ワークフローを非同期的に指定して呼び出します&lt;xref:System.AsyncCallback&gt;およびユーザー指定の状態&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">ワークフローが完了するときに通知し、ワークフローの出力パラメーターを取得、&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;から、<ph id="ph1">`callback`</ph>メソッド&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">場合&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;は、ワークフローが完了する前に呼び出されると、ブロック、ワークフローが完了するまで&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト時間を構成するに&lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;&lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">このメソッドは非同期的に使用して、ワークフロー、&lt;xref:System.IAsyncResult&gt;非同期デザイン パターン&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>非同期プログラミングの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">ワークフローが完了したときに呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">非同期操作に関する情報を含む省略可能なアプリケーション固有オブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">非同期への参照は、操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">ワークフローを非同期的に指定して呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> 、入力パラメーターの&lt;xref:System.AsyncCallback&gt;、およびユーザー指定の状態&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">ワークフローが完了するときに通知し、ワークフローの出力パラメーターを取得、&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;から、<ph id="ph1">`callback`</ph>メソッド&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">場合&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;は、ワークフローが完了する前に呼び出されると、ブロック、ワークフローが完了するまで&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト時間を構成するに&lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;&lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">このメソッドは非同期的に使用して、ワークフロー、&lt;xref:System.IAsyncResult&gt;非同期デザイン パターン&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>非同期プログラミングの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">ワークフローが完了したときに呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">非同期操作に関する情報を含む省略可能なアプリケーション固有オブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">非同期への参照は、操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified time-out interval, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">非同期的に指定されたタイムアウト間隔を使用してワークフローを呼び出します&lt;xref:System.AsyncCallback&gt;、およびユーザー指定の状態&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">ワークフローが完了するときに通知し、ワークフローの出力パラメーターを取得、&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;から、<ph id="ph1">`callback`</ph>メソッド&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">場合&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;は、ワークフローが完了する前に呼び出されると、ブロック、ワークフローが完了するまで&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown when the &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; method is called.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト間隔内で、ワークフローが中止と&lt;xref:System.TimeoutException&gt;場合にスローされる、&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;メソッドが呼び出されます&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">このメソッドは非同期的に使用して、ワークフロー、&lt;xref:System.IAsyncResult&gt;非同期デザイン パターン&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>非同期プログラミングの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">ワークフローが完了したときに呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">非同期操作に関する情報を含む省略可能なアプリケーション固有オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">非同期への参照は、操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, time-out interval, &lt;xref:System.AsyncCallback&gt;, and user-provided state.</source>
          <target state="translated">ワークフローを非同期的に指定して呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>タイムアウト間隔、入力パラメーターの&lt;xref:System.AsyncCallback&gt;、およびユーザー指定の状態&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; from the <ph id="ph1">`callback`</ph> method.</source>
          <target state="translated">ワークフローが完了するときに通知し、ワークフローの出力パラメーターを取得、&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;から、<ph id="ph1">`callback`</ph>メソッド&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">場合&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;は、ワークフローが完了する前に呼び出されると、ブロック、ワークフローが完了するまで&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown when &lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt; is called.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;場合にスローされる&lt;xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;と呼びます&lt;/xref:System.Activities.WorkflowInvoker.EndInvoke%2A&gt;&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">このメソッドは非同期的に使用して、ワークフロー、&lt;xref:System.IAsyncResult&gt;非同期デザイン パターン&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>非同期プログラミングの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The method to be called when the workflow has completed.</source>
          <target state="translated">ワークフローが完了したときに呼び出されるメソッド。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">非同期操作に関する情報を含む省略可能なアプリケーション固有オブジェクト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A reference to the asynchronous invoke operation.</source>
          <target state="translated">非同期への参照は、操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attempts to cancel the workflow that was invoked with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">userState</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">呼び出されたワークフローをキャンセルしようとしています。 指定した<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">userState</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Only a workflow invoked by one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that takes a <ph id="ph1">`userState`</ph> parameter can be canceled.</source>
          <target state="translated">いずれかによって呼び出されるワークフローだけ、&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;を取るオーバー ロード、<ph id="ph1">`userState`</ph>パラメーターを取り消すことができます&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the cancellation succeeds, the &lt;xref:System.ComponentModel.Cancelled%2A&gt; property of the &lt;xref:System.Activities.InvokeCompletedEventArgs&gt; passed to the &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt; handler is set to <ph id="ph1">`true`</ph>; otherwise, it is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">キャンセルに成功した場合、&lt;xref:System.ComponentModel.Cancelled%2A&gt;のプロパティ、&lt;xref:System.Activities.InvokeCompletedEventArgs&gt;に渡される、&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;設定されているハンドラー <ph id="ph1">`true`</ph>、それ以外に設定されている<ph id="ph2">`false`</ph>&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;&lt;/xref:System.Activities.InvokeCompletedEventArgs&gt;&lt;/xref:System.ComponentModel.Cancelled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The token for the workflow to cancel.</source>
          <target state="translated">ワークフローを取り消すためのトークンです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the results of a workflow that was invoked using one of the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt; overloads.</source>
          <target state="translated">いずれかを使用して呼び出されたワークフローの結果を返す、&lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;オーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete and retrieve the output parameters of the workflow, call EndInvoke from the <ph id="ph1">`callback`</ph> method specified by &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;.</source>
          <target state="translated">ワークフローが完了するときに通知し、ワークフローの出力パラメーターを取得、電話でから EndInvoke、 <ph id="ph1">`callback`</ph> &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke%2A&gt;によって指定されたメソッド</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If EndInvoke is called before the workflow completes, it blocks until the workflow completes.</source>
          <target state="translated">EndInvoke は呼び出された場合、ワークフローが完了する前に、ワークフローが完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method returns the result of a workflow invoked asynchronously using the &lt;xref:System.IAsyncResult&gt; asynchronous design pattern.</source>
          <target state="translated">このメソッドを使用して非同期的に呼び出されるワークフローの結果を返します、&lt;xref:System.IAsyncResult&gt;非同期デザイン パターン&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>非同期プログラミングの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the &lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt; operation that started the workflow.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を参照する、&lt;xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;ワークフローを開始する操作&lt;/xref:System.Activities.WorkflowInvoker.BeginInvoke*&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of extensions that are available to workflows invoked by a <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">取得、 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>によって呼び出されるワークフローを利用できる拡張機能の<bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This property is used by workflow host authors to add extensions to the &lt;xref:System.Activities.WorkflowInvoker&gt; instance so they will be available to workflows invoked by it.</source>
          <target state="translated">このプロパティは、&lt;xref:System.Activities.WorkflowInvoker&gt;それによって呼び出されるワークフローで使用できるようにインスタンス&lt;/xref:System.Activities.WorkflowInvoker&gt;に拡張機能を追加するワークフロー ホスト作成者によって使用します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph> of extensions that are available to workflows invoked by a <bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Collections.ObjectModel.Collection%601<ph id="ph2">&amp;gt;</ph>によって呼び出されるワークフローを利用できる拡張機能の<bpt id="p1">&lt;xref href="System.Activities.WorkflowInvoker"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the workflow definition passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor.</source>
          <target state="translated">渡されたワークフロー定義を同期的に使用して、ワークフローを呼び出す、 <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; &lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition.</source>
          <target state="translated">ワークフローを同期的に指定されたワークフロー定義を使用して呼び出します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; &lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">呼び出すワークフローのワークフロー定義。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Invokes the activity passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor synchronously with the specified <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">渡されるアクティビティを呼び出す、 <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph>同期的に、指定したコンス トラクター <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph>入力パラメーターのです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; &lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously with the specified time-out interval.</source>
          <target state="translated">指定されたタイムアウト期間で同期的にワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition and <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">同期的に指定されたワークフロー定義を使用してワークフローを呼び出すと<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>の入力パラメーターです。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt; &lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">呼び出すワークフローのワークフロー定義。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition and time-out interval.</source>
          <target state="translated">指定されたワークフロー定義およびタイムアウト時間を同期的に使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">呼び出すワークフローのワークフロー定義。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Invokes the activity passed to the <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph> constructor synchronously with the specified <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph> of input parameters and the specified time-out interval.</source>
          <target state="translated">渡されるアクティビティを呼び出す、 <ph id="ph1">&amp;lt;</ph>xref:System.Activities.WorkflowInvoker.%23ctor%2A<ph id="ph2">&amp;gt;</ph>同期的に、指定したコンス トラクター <ph id="ph3">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph4">&amp;gt;</ph>の入力パラメーターと、指定されたタイムアウト期間。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Invokes a workflow synchronously using the specified workflow definition, <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, and time-out interval.</source>
          <target state="translated">同期的に、指定されたワークフロー定義を使用してワークフローを呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>入力パラメーターと、タイムアウト間隔のです。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This method blocks until the workflow has completed, including idle time.</source>
          <target state="translated">このメソッドはブロック、ワークフローが完了するまでには、アイドル時間も含まれます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>All workflow execution is guaranteed to execute on the invoking thread.</source>
          <target state="translated">呼び出し元のスレッドで実行するすべてのワークフローの実行が保証されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The workflow definition of the workflow to invoke.</source>
          <target state="translated">呼び出すワークフローのワークフロー定義。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A dictionary of the root activity’s <bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> values keyed by argument name that represent the outputs of the workflow.</source>
          <target state="translated">ルート アクティビティのディクショナリ<bpt id="p1">&lt;xref href="System.Activities.OutArgument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と<bpt id="p2">&lt;xref href="System.Activities.InOutArgument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>引数によってキー指定された値、ワークフローの出力の名前を表します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously.</source>
          <target state="translated">ワークフローを非同期的に呼び出します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters.</source>
          <target state="translated">ワークフローを非同期的に指定して呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>の入力パラメーターです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified unique identifier.</source>
          <target state="translated">ワークフローを非同期的に指定された一意識別子を使用して呼び出します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>パラメーターはすべて現在実行中で一意である必要があります&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;現在のアクティビティ操作&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`userState`</ph> parameter is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">場合、<ph id="ph1">`userState`</ph>パラメーターが一意でない、&lt;xref:System.ArgumentException&gt;スローされます&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>ワークフローを識別するために使用&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;、しを&lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;を使用してワークフローを取り消す&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">この特定の非同期を区別するために使用されるユーザー指定のオブジェクトを他の現在の非同期操作を呼び出す操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified time-out interval.</source>
          <target state="translated">指定されたタイムアウト期間に非同期でワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters and a unique identifier.</source>
          <target state="translated">ワークフローを非同期的に指定して呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>の入力パラメーターと一意の識別子。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>パラメーターはすべて現在実行中で一意である必要があります&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;現在のアクティビティ操作&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">場合<ph id="ph1">`userState`</ph>、一意ではありません、&lt;xref:System.ArgumentException&gt;スローされます&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>ワークフローを識別するために使用&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;、しを&lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;を使用してワークフローを取り消す&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To configure a time-out interval in which the workflow must complete, use one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads that take a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">ワークフローが完了しなければならないタイムアウト間隔を構成するには、 &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; &lt;xref:System.TimeSpan&gt;.&lt;/xref:System.TimeSpan&gt;を受け取るオーバー ロード&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;のいずれかを使用します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">この特定の非同期を区別するために使用されるユーザー指定のオブジェクトを他の現在の非同期操作を呼び出す操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters and the specified time-out interval.</source>
          <target state="translated">指定した非同期的にワークフローを呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>の入力パラメーターと、指定されたタイムアウト期間。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified time-out interval and a unique identifier.</source>
          <target state="translated">指定されたタイムアウト期間と一意の識別子に非同期でワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>パラメーターはすべて現在実行中で一意である必要があります&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;現在のアクティビティ操作&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">場合<ph id="ph1">`userState`</ph>、一意ではありません、&lt;xref:System.ArgumentException&gt;スローされます&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>ワークフローを識別するために使用&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;、しを&lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;を使用してワークフローを取り消す&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">この特定の非同期を区別するために使用されるユーザー指定のオブジェクトを他の現在の非同期操作を呼び出す操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Invokes a workflow asynchronously with the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph> of input parameters, the specified time-out interval, and a unique identifier.</source>
          <target state="translated">指定した非同期的にワークフローを呼び出します<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.IDictionary%602<ph id="ph2">&amp;gt;</ph>の入力パラメーター、指定されたタイムアウト期間、および一意の識別子。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userState`</ph> parameter must be unique across all currently running &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; operations for the current activity.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>パラメーターはすべて現在実行中で一意である必要があります&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;現在のアクティビティ操作&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`userState`</ph> is not unique, an &lt;xref:System.ArgumentException&gt; is thrown.</source>
          <target state="translated">場合<ph id="ph1">`userState`</ph>、一意ではありません、&lt;xref:System.ArgumentException&gt;スローされます&lt;/xref:System.ArgumentException&gt;。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`userState`</ph> is used to identify the workflow in &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;, and to cancel the workflow using &lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`userState`</ph>ワークフローを識別するために使用&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;、しを&lt;xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;.&lt;/xref:System.Activities.WorkflowInvoker.CancelAsync%2A&gt;を使用してワークフローを取り消す&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>To be notified when the workflow is complete, handle &lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;.</source>
          <target state="translated">ワークフローが完了したら通知処理&lt;xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;。&lt;/xref:System.Activities.WorkflowInvoker.InvokeCompleted&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>If the workflow does not complete within the specified time-out interval the workflow is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローが完了しない場合、指定されたタイムアウト期間内ワークフローは中止と&lt;xref:System.TimeoutException&gt;スローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The &lt;xref:System.TimeoutException&gt; is only thrown if the time-out interval elapses and the workflow becomes idle during execution.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.TimeoutException&gt;タイムアウト間隔が経過して、実行中に、ワークフローがアイドル状態になった場合にスローされるだけです&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A workflow that takes longer than the specified time-out interval to complete completes successfully if the workflow does not become idle.</source>
          <target state="translated">ワークフローはアイドル状態にならない場合、指定されたタイムアウト期間を完了するには、ワークフローは正常に完了します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This method invokes a workflow asynchronously using the event-based asynchronous design pattern.</source>
          <target state="translated">このメソッドは、非同期的に、イベント ベースの非同期デザイン パターンを使用して、ワークフローを呼び出します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph><bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141765)</ept>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The dictionary of input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">引数名によってキー指定された、ワークフローに渡す入力パラメーターのディクショナリ。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The interval in which the workflow must complete before it is aborted and a &lt;xref:System.TimeoutException&gt; is thrown.</source>
          <target state="translated">ワークフローを中止されるまでに完了しなければならない時間&lt;xref:System.TimeoutException&gt;がスローされます&lt;/xref:System.TimeoutException&gt;。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A user-provided object used to distinguish this particular asynchronous invoke operation from other current asynchronous invoke operations.</source>
          <target state="translated">この特定の非同期を区別するために使用されるユーザー指定のオブジェクトを他の現在の非同期操作を呼び出す操作を呼び出します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow invoked by one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt; overloads is completed or canceled.</source>
          <target state="translated">いずれかによって、ワークフローが呼び出されたときに発生、&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt;オーバー ロードが完了するか取り消されました&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync*&gt;。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Handle this to determine whether a workflow invoked with one of the &lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt; overloads completed successfully and to retrieve the output arguments of the completed workflow.</source>
          <target state="translated">処理のいずれかのワークフローが呼び出されるかどうかを指定するときに、&lt;xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;オーバー ロードを正常に完了し、完了したワークフローの出力引数を取得します&lt;/xref:System.Activities.WorkflowInvoker.InvokeAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>