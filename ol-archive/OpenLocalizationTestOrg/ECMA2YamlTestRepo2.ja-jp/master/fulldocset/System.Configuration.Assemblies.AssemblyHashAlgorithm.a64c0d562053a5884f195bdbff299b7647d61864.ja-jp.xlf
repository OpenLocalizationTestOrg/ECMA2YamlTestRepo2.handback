<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0dda0f45a38e977e0923dfbbb74c2c7c404d6a86</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Configuration.Assemblies.AssemblyHashAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">776a0286e137e1326ada0c0da1528f5660d3644e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1eabe0cbe8461f784f1ab3258aa8011eaa6f3702</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies all the hash algorithms used for hashing files and for generating the strong name.</source>
          <target state="translated">ファイルのハッシュ処理および厳密な名前を生成するために使用するすべてのハッシュ アルゴリズムを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`hash function``H`</ph> is a transformation that takes an input <ph id="ph2">`m`</ph> and returns a fixed-size string, which is called the hash value <ph id="ph3">`h`</ph> (that is, <ph id="ph4">`h`</ph><ph id="ph5"> = </ph><ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>)).</source>
          <target state="translated">A<ph id="ph1">`hash function``H`</ph>入力として取得する変換です<ph id="ph2">`m`</ph>ハッシュ値と呼ばれる固定サイズの文字列を返しますと<ph id="ph3">`h`</ph>(つまり、 <ph id="ph4">`h`</ph> <ph id="ph5"> = </ph> <ph id="ph6">`H`</ph> (<ph id="ph7">`m`</ph>))。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.</source>
          <target state="translated">このプロパティだけを使用してハッシュ関数は、さまざまな一般的な計算が広く、ハッシュ関数は通常、選択いくつかのプロパティがあります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The basic requirements for a cryptographic hash function are:      -   The input can be of any length.</source>
          <target state="translated">暗号ハッシュ関数の基本的な要件は、:-任意の長さの入力を指定できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   The output has a fixed length.</source>
          <target state="translated">出力は、固定長がします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph> is relatively easy to compute for any given x.</source>
          <target state="translated">- <ph id="ph1">`H`</ph> (<ph id="ph2">`x)`</ph>は比較的簡単に、指定された x を計算します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is one-way.</source>
          <target state="translated">-   <ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is one-way.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>-   <ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) is collision-free.</source>
          <target state="translated">- <ph id="ph1">`H`</ph> (<ph id="ph2">`x`</ph>) の競合がないです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.</source>
          <target state="translated">長いメッセージまたは元となることが計算された; ドキュメントに、ハッシュ値が簡潔に記述を表しますこの値には、メッセージ ダイジェストが呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can think of a message digest as a digital fingerprint of the larger document.</source>
          <target state="translated">サイズが大きいドキュメントのデジタル指紋として、メッセージ ダイジェストの考えることができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Examples of well-known hash functions are MD2 and and SHA.</source>
          <target state="translated">よく知られているハッシュ関数の例としては、MD2、および SHA です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Retrieves the MD5 message-digest algorithm.</source>
          <target state="translated">MD5 メッセージ ダイジェスト アルゴリズムを取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>MD5 was developed by Rivest in 1991.</source>
          <target state="translated">MD5 は、1991 Rivest によって開発されました。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.</source>
          <target state="translated">アプリは基本的に MD4 の安全と MD4 よりもわずかに遅くなりますが、これにより、セキュリティを強化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.</source>
          <target state="translated">アルゴリズムから成る&amp;4; つの個別のラウンドで MD4 の場合と若干異なるデザインを持つ。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Message-digest size, as well as padding requirements, remain the same.</source>
          <target state="translated">メッセージ ダイジェストのサイズと埋め込みの要件は変わりません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A mask indicating that there is no hash algorithm.</source>
          <target state="translated">ハッシュ アルゴリズムがないことを示すマスクです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you specify <bpt id="p1">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.</source>
          <target state="translated">指定した場合<bpt id="p1">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マルチ モジュール アセンブリの場合、共通言語ランタイムの既定値の SHA1 アルゴリズムにマルチ モジュール アセンブリは、ハッシュを生成する必要があるためです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.</source>
          <target state="translated">SHA にパブリッシュされていない問題を修正するセキュリティで保護されたハッシュ アルゴリズムのリビジョンを取得するために使用するマスクです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.</source>
          <target state="translated">ハッシュ サイズが 256 ビットのセキュア ハッシュ アルゴリズムのバージョンを取得するために使用するマスクです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.</source>
          <target state="translated">ハッシュ サイズが 384 ビットのセキュア ハッシュ アルゴリズムのバージョンを取得するために使用するマスクです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.</source>
          <target state="translated">512 ビットのハッシュのサイズにセキュア ハッシュ アルゴリズムのバージョンを取得するために使用するマスクです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>