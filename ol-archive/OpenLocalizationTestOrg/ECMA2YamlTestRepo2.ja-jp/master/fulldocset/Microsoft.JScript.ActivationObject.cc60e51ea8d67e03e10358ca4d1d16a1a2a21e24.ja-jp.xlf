<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b73aab7d40fe618e2afe5345c7828f2acd2e371</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.JScript.ActivationObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ee9a1fdf55a20750c6ced4f43380f8aaa64b1d4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2918fa2ae9792699cff9d50f26eab9ff7c30fa1b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that is taking part in a scope hierarchy.</source>
          <target state="translated">スコープの階層に参加しているオブジェクトを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class contains methods for resolving scope and for getting member information.</source>
          <target state="translated">このクラスには、スコープの解決とメンバー情報を取得するためのメソッドが含まれています。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>It belongs to the compilation and run-time state category.</source>
          <target state="translated">これは、コンパイルおよび実行時の状態のカテゴリに属しています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creates a new global variable, using the specified name, value, and attributes.</source>
          <target state="translated">指定された名前、値、および属性を使用して、新しいグローバル変数を作成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that describe the attributes of a field.</source>
          <target state="translated">フィールドの属性を記述する列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection.FieldAttributes&gt; is added automatically.</source>
          <target state="translated">&lt;xref:System.Reflection.FieldAttributes&gt;自動的に追加されます。&lt;/xref:System.Reflection.FieldAttributes&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The value of the field.</source>
          <target state="translated">フィールドの値です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A global variable that has the specified name, value, and attributes.</source>
          <target state="translated">指定された名前、値、および属性を持つグローバル変数です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Stores an array of variables that are in scope.</source>
          <target state="translated">スコープ内にある変数の配列を格納します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the current default scope, which is either the contained object of a <bpt id="p1">&lt;xref uid="langword_csharp_with" name="with" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> statement scope, or the global scope.</source>
          <target state="translated">現在の既定のスコープは、いずれかが含まれているオブジェクトを取得、 <bpt id="p1">&lt;xref uid="langword_csharp_with" name="with" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ステートメントのスコープまたはグローバル スコープ。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The current default scope.</source>
          <target state="translated">現在の既定のスコープです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns a field that has the specified name by searching the scope hierarchy.</source>
          <target state="translated">スコープの階層を検索することで、指定した名前を持つフィールドを返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method searches only the scope that is specified by the lexical level.</source>
          <target state="translated">このメソッドは、構文のレベルで指定されているスコープのみを検索します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This method applies to fields that cannot be resolved at compile time.</source>
          <target state="translated">このメソッドは、コンパイル時に解決できないフィールドに適用されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This occurs when an <ph id="ph1">`eval`</ph> expression refers to a field in the outer scope.</source>
          <target state="translated">これが発生したときに、<ph id="ph1">`eval`</ph>式は外側のスコープ内のフィールドを参照します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`eval`</ph> expression can declare a local field that has the same name as a field in the outer scope, the field cannot be early bound to the outer scope field.</source>
          <target state="translated"><ph id="ph1">`eval`</ph>式は、外側のスコープ内のフィールドと同じ名前を持つローカル フィールドを宣言できる、フィールドは、外側のスコープのフィールドに事前バインドをすることはできません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the field to search for.</source>
          <target state="translated">検索するフィールドの名前。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The lexical level to search.</source>
          <target state="translated">検索する構文レベル。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Reflection.FieldInfo&gt; object that has the specified name.</source>
          <target state="translated">A&lt;xref:System.Reflection.FieldInfo&gt;を指定した名前を持つオブジェクト&lt;/xref:System.Reflection.FieldInfo&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</source>
          <target state="translated">静的変数、たとえば、モジュール スコープを含むスコープが見つかるまで、スコープの階層を検索することにより、グローバル スコープを取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The global scope.</source>
          <target state="translated">グローバル スコープです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the local declaration of a field that has the specified name.</source>
          <target state="translated">指定した名前を持つフィールドのローカル宣言を取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is used at compile time for error checking.</source>
          <target state="translated">これは、コンパイル時エラー チェックのために使用されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="translated">フィールドの名前です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The local declaration of the field.</source>
          <target state="translated">フィールドのローカル宣言します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects that correspond to all members that match a specified name.</source>
          <target state="translated">配列を取得&lt;xref:System.Reflection.MemberInfo&gt;指定した名前に一致するすべてのメンバーに対応するオブジェクト&lt;/xref:System.Reflection.MemberInfo&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The name of the member to search for.</source>
          <target state="translated">検索するメンバーの名前。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</source>
          <target state="translated">リフレクションによるメンバーの検索を実行する方法を指定する列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An array of objects that match the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> argument.</source>
          <target state="translated">一致するオブジェクトの配列、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>引数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Retrieves an array of &lt;xref:System.Reflection.MemberInfo&gt; objects that corresponds to all members of the current object.</source>
          <target state="translated">配列を取得&lt;xref:System.Reflection.MemberInfo&gt;、現在のオブジェクトのすべてのメンバーに対応するオブジェクト&lt;/xref:System.Reflection.MemberInfo&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</source>
          <target state="translated">リフレクションによるメンバーの検索を実行する方法を指定する列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array of objects that contains all members of the current object.</source>
          <target state="translated">現在のオブジェクトのすべてのメンバーを含むオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified member by searching the scope hierarchy.</source>
          <target state="translated">スコープの階層を検索することで、指定されたメンバーの値を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method searches only the scope that is specified by the lexical level.</source>
          <target state="translated">このメソッドは、構文のレベルで指定されているスコープのみを検索します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method applies to members that cannot be resolved at compile time.</source>
          <target state="translated">このメソッドは、コンパイル時に解決できないメンバーに適用されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This occurs when an <ph id="ph1">`eval`</ph> expression refers to a member in the outer scope.</source>
          <target state="translated">これが発生したときに、<ph id="ph1">`eval`</ph>外側のスコープ内のメンバーを式で参照します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`eval`</ph> expression can declare a local member that has the same name as a member in the outer scope, the member cannot be early bound to the outer scope member.</source>
          <target state="translated"><ph id="ph1">`eval`</ph>式を外側のスコープのメンバーと同じ名前を持つローカル メンバーを宣言できます。、外側のスコープのメンバーに事前バインディングをメンバーにすることはできません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The name of the member to search for.</source>
          <target state="translated">検索するメンバーの名前。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The lexical level to search.</source>
          <target state="translated">検索する構文レベル。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value of the member <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">メンバーの値<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>