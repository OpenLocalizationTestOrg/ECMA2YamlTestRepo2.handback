<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3a95c5fa4f0f5e2501df7d83b7fc4db61be768f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.DelegatingXmlDictionaryWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47b0b502235f534974e45dc61508e89658218de8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d050743acac50e70a92679296cbfb46dc2ec1f2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A class that wraps a specified writer and delegates all &lt;xref:System.Xml.XmlDictionaryWriter&gt; calls to the wrapped writer.</source>
          <target state="translated">指定したライターをラップし、すべてのデリゲートをクラス&lt;xref:System.Xml.XmlDictionaryWriter&gt;ラップされたライターへの呼び出し&lt;/xref:System.Xml.XmlDictionaryWriter&gt;。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The writer that is wrapped can be accessed through the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt; property.</source>
          <target state="translated">ラップされるライター経由でアクセスできる、&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;プロパティ&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt; method to set the wrapped writer and initialize the property.</source>
          <target state="translated">呼び出す、&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;ラップされたライターを設定およびプロパティを初期化するメソッド&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can call the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt; method to set an &lt;xref:System.Xml.XmlWriter&gt; to which non-canonical XML will be echoed.</source>
          <target state="translated">呼び出すことができます、&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;を設定するメソッド、&lt;xref:System.Xml.XmlWriter&gt;非正規 XML には表示されます&lt;/xref:System.Xml.XmlWriter&gt;&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.DelegatingXmlDictionaryWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IdentityModel.DelegatingXmlDictionaryWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns a value indicating if the reader is capable of Canonicalization.</source>
          <target state="translated">リーダーが正規化できるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>true if the reader is capable of Canonicalization; otherwise, false.</source>
          <target state="translated">リーダーが正規化; できる場合は true。それ以外の場合は false です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Closes the underlying stream.</source>
          <target state="translated">基になるストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Stops the canonicalization started by the matching &lt;xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt; call.</source>
          <target state="translated">照合によって開始された正規化を停止する&lt;xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt;呼び出します&lt;/xref:System.Xml.XmlDictionaryWriter.StartCanonicalization*&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Flushes the underlying stream.</source>
          <target state="translated">基になるストリームをフラッシュします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes this instance with the specified inner writer.</source>
          <target state="translated">指定した内部ライターで、このインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets the &lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt; property to the writer specified by the <ph id="ph1">`innerWriter`</ph> parameter.</source>
          <target state="translated">セット、&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;プロパティで指定されたライターに、<ph id="ph1">`innerWriter`</ph>パラメーター&lt;/xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The writer that is to be wrapped by this instance.</source>
          <target state="translated">このインスタンスによってラップされるには、ライター。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes this instance with a writer to which all calls will be echoed and that will write non-canonical XML.</source>
          <target state="translated">初期化するすべての呼び出しをエコーするをライターにこのインスタンスには、非正規の XML を記述します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A writer to which all calls will be echoed.</source>
          <target state="translated">すべての呼び出しをエコーするライター。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, calls are not echoed.</source>
          <target state="translated">場合<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呼び出しがないがエコーされます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Get the wrapped writer.</source>
          <target state="translated">ラップされたライターを取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Xml.XmlDictionaryWriter&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDictionaryWriter&gt;。&lt;/xref:System.Xml.XmlDictionaryWriter&gt;を返します</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">名前空間 URI の現在の名前空間スコープで定義された最も近いプリフィックスを返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">名前空間 URI を検索するプレフィックスを持つのです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The matching prefix or null if no matching namespace URI is found in the current scope.</source>
          <target state="translated">一致のプレフィックスまたは null の場合、一致する名前空間 URI、現在のスコープに存在します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the start of canonicalization.</source>
          <target state="translated">標準化の開始を示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Any write operation following this will canonicalize the data          and will write it to the given stream.</source>
          <target state="translated">次の操作は、これは、データを標準化、指定したストリームに書き込むが、書き込み。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Stream to which the canonical stream should be written.</source>
          <target state="translated">標準化したストリームの書き込み先となるストリーム。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value indicates if comments written should be canonicalized as well.</source>
          <target state="translated">値を示すかどうかは、書き込まれるコメントをも標準化する必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Set of prefixes that needs to be included into the canonical stream.</source>
          <target state="translated">標準化したストリームに含まれる必要があるプレフィックスのセットです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The prefixes are defined at the first element that is written to the canonical stream.</source>
          <target state="translated">プレフィックスは、標準化したストリームに書き込まれた最初の要素で定義されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">指定したバイナリ バイトを Base64 としてエンコードし、結果として得られるテキストを書き込みます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Byte array to encode.</source>
          <target state="translated">エンコードするバイト配列。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">書き込むバイトの開始を示すバッファー内の位置。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of bytes to write.</source>
          <target state="translated">書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>writes out a CDATA block containing the specified text.</source>
          <target state="translated">指定したテキストを含む CDATA ブロックを書き込みます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">CDATA ブロック内に配置するテキストです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">指定した Unicode 文字値の文字エンティティの生成を強制します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">文字エンティティを生成する Unicode 文字。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">派生クラスでオーバーライドされると、一度に&amp;1; つのテキスト バッファーを書き込みます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Character array containing the text to write.</source>
          <target state="translated">書き込むテキストを含む文字配列。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">書き込むテキストの開始を示すバッファー内の位置。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">書き込む文字の数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Writes out a comment containing the specified text.</source>
          <target state="translated">指定したテキストを含むコメントを書き込みます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Text to place inside the comment.</source>
          <target state="translated">コメント内に配置するテキストです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">指定した名前および省略可能な属性を持つ DOCTYPE 宣言を書き込みます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE の名前。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This must be non-empty.</source>
          <target state="translated">これは、は、空でなければなりません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</source>
          <target state="translated">Null でない場合もはそのパブリック"pubid""sysid"が、指定した引数の値を持つ pubid と sysid を交換します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</source>
          <target state="translated">Pubid が null と sysid が null でない場合はそのシステム"sysid"sysid はこの引数の値を置き換えです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">[Null でない場合、subset] を書き込みます subset は、この引数の値に置き換えられます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.</source>
          <target state="translated">System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) の前の呼び出しを閉じます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">任意の開いている要素または属性およびライターを Start 状態に戻しますを閉じます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">1 つの要素を閉じ、対応する名前空間スコープをポップします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Writes out an entity reference as name.</source>
          <target state="translated">名前と、エンティティ参照を書き込みます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
          <target state="translated">エンティティ参照の名前です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">1 つの要素を閉じ、対応する名前空間スコープをポップします。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;.</source>
          <target state="translated">次のように、名とテキスト間の領域で、処理命令を書き込みます<ph id="ph1">&amp;amp;</ph>lt; しますか?。名前のテキストですか。<ph id="ph2">&amp;amp;</ph>gt;.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction.</source>
          <target state="translated">処理命令の名前です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">処理命令に含めるテキスト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Writes raw markup manually from a string.</source>
          <target state="translated">文字列から手動で生のマークアップを書き込みます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>String containing the text to write.</source>
          <target state="translated">書き込むテキストを含む文字列です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">派生クラスでオーバーライドされると、ときに、手動で文字バッファーから生のマークアップを書き込みます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Character array containing the text to write.</source>
          <target state="translated">書き込むテキストを含む文字配列。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">書き込むテキストの開始を示すバッファー内の位置。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The number of characters to write.</source>
          <target state="translated">書き込む文字の数。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">指定されたローカル名と名前空間 URI を持つ属性の開始を書き込みます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">属性の名前空間プレフィックス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">名前空間 URI の属性です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">派生クラスでオーバーライドされると、バージョン「1.0」で XML 宣言を書き込みます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">派生クラスでオーバーライドされると、バージョン「1.0」とスタントアロン属性を含む XML 宣言を書き込みます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If true, it writes "standalone=yes"; if false, it writes "standalone=no".</source>
          <target state="translated">True の場合、して書き込まれます"スタンドアロン = [はい]"です。false の場合、して書き込まれます"スタンドアロン = no"です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した開始タグを書き込みし、指定した名前空間とプレフィックスに関連付けます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The namespace prefix of the element.</source>
          <target state="translated">要素の名前空間プレフィックス。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The local name of the element.</source>
          <target state="translated">要素のローカル名。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">名前空間は、要素に関連付ける URI であります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">派生クラスでオーバーライドされると、ライターの状態を取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Xml.WriteState&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.WriteState&gt;。&lt;/xref:System.Xml.WriteState&gt;を返します</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Writes the given text content.</source>
          <target state="translated">指定したテキストの内容を書き込みます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The text to write.</source>
          <target state="translated">書き込むテキスト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">生成し、書き込みますサロゲート文字エンティティをサロゲート文字ペア。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The low surrogate.</source>
          <target state="translated">下位サロゲート。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">これには、0xdc00 から 0 xdfff の間の値があります。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The high surrogate.</source>
          <target state="translated">上位サロゲート。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">これには、0xD800 ~ 0 xdbff の値があります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Writes out the given white space.</source>
          <target state="translated">指定した空白を書き込みます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The string of white space characters.</source>
          <target state="translated">空白文字の文字列です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Writes an attribute as a xml attribute with the prefix 'xml:'.</source>
          <target state="translated">プレフィックスを持つ xml 属性として属性を書き込みます ' xml:' です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Localname of the attribute.</source>
          <target state="translated">属性の Localname。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Attribute value.</source>
          <target state="translated">属性の値。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Writes an xmlns namespace declaration.</source>
          <target state="translated">Xmlns 名前空間宣言を書き込みます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The prefix of the namespace declaration.</source>
          <target state="translated">名前空間の宣言のプレフィックス。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The namespace Uri itself.</source>
          <target state="translated">名前空間は Uri 自体であります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>