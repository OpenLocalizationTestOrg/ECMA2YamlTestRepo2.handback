<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f13e41ab3f4edcb12a33dea800ceae686804205</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.Compiler.CompilerParameters.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38212d559f7bdd09a5b86952ff29808d46e916db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89a61bbd1b9fdbd9bbb4be14d22f6cb6b92a969e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the parameters used to invoke a compiler.</source>
          <target state="translated">コンパイラを呼び出すために使用されるパラメーターを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A CompilerParameters object represents the settings and options for an &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; interface.</source>
          <target state="translated">CompilerParameters オブジェクトが、設定を表しのオプションを&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;インターフェイス&lt;/xref:System.CodeDom.Compiler.ICodeCompiler&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If you are compiling an executable program, you must set the &lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定する必要がある実行可能プログラムをコンパイルする場合、&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt; is set to <ph id="ph1">`false`</ph>, the compiler will generate a class library.</source>
          <target state="translated">ときに、&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;に設定されている<ph id="ph1">`false`</ph>コンパイラはクラス ライブラリを生成します&lt;/xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, a new CompilerParameters is initialized with its &lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt; property set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、新しい CompilerParameters はによる初期化を行うその&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;プロパティに設定<ph id="ph1">`false`</ph>&lt;/xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you are compiling an executable from a CodeDOM graph, a &lt;xref:System.CodeDom.CodeEntryPointMethod&gt; must be defined in the graph.</source>
          <target state="translated">CodeDOM グラフから実行可能ファイルをコンパイルする場合、&lt;xref:System.CodeDom.CodeEntryPointMethod&gt;グラフで定義する必要があります&lt;/xref:System.CodeDom.CodeEntryPointMethod&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If there are multiple code entry points, you can indicate the class that defines the entry point to use by setting the name of the class to the &lt;xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt; property.</source>
          <target state="translated">クラスの名前を設定して使用するエントリ ポイントを定義するクラスを指定するには、複数のコード エントリ ポイントがある場合、&lt;xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can specify a file name for the output assembly in the &lt;xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt; property.</source>
          <target state="translated">出力内のアセンブリ ファイル名を指定することができます、&lt;xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Otherwise, a default output file name will be used.</source>
          <target state="translated">それ以外の場合、既定の出力ファイル名が使用されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To include debug information in a generated assembly, set the &lt;xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">生成されたアセンブリのデバッグ情報は、設定、&lt;xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If your project references any assemblies, you must specify the assembly names as items in a &lt;xref:System.Collections.Specialized.StringCollection&gt; set to the &lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt; property of the CompilerParameters used when invoking compilation.</source>
          <target state="translated">内の項目としてアセンブリ名を指定する必要があります、プロジェクトは、すべてのアセンブリを参照する場合、&lt;xref:System.Collections.Specialized.StringCollection&gt;設定、&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt;コンパイルを呼び出すときに使用される CompilerParameters のプロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt;&lt;/xref:System.Collections.Specialized.StringCollection&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can compile an assembly that is written to memory rather than disk by setting the &lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定して、ディスクではなく、メモリに書き込まれるアセンブリをコンパイルすることができます、&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When an assembly is generated in memory, your code can obtain a reference to the generated assembly from the &lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt; property of a &lt;xref:System.CodeDom.Compiler.CompilerResults&gt;.</source>
          <target state="translated">メモリ内アセンブリが生成されると、コードが&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;。&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;から生成されたアセンブリへの参照を取得できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If an assembly is written to disk, you can obtain the path to the generated assembly from the &lt;xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt; property of a &lt;xref:System.CodeDom.Compiler.CompilerResults&gt;.</source>
          <target state="translated">アセンブリが記述されている場合、ディスクから取得できますパス生成されたアセンブリに&lt;xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt;&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;&lt;/xref:System.CodeDom.Compiler.CompilerResults&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To specify a warning level at which to halt compilation, set the &lt;xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt; property to an integer that represents the warning level at which to halt compilation.</source>
          <target state="translated">コンパイルを中止する位置を示す警告レベルを指定するには、設定、&lt;xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt;コンパイルを中止する位置を示す警告レベルを表す整数のプロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also configure the compiler to halt compilation if warnings are encountered by setting the &lt;xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">設定によって警告が発生した場合は、コンパイルを停止するようにコンパイラを構成することも、&lt;xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt;プロパティを<ph id="ph1">`true`</ph>&lt;/xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>To specify a custom command-line arguments string to use when invoking the compilation process, set the string in the &lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt; property.</source>
          <target state="translated">コンパイル処理の実行時に使用するカスタムのコマンドライン引数の文字列を指定する文字列を設定、&lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If a Win32 security token is required to invoke the compiler process, specify the token in the &lt;xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt; property.</source>
          <target state="translated">コンパイラ プロセスを開始するには、Win32 のセキュリティ トークンが必要された場合、でトークンを指定する、&lt;xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To include .NET Framework resource files in the compiled assembly, add the names of the resource files to the &lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt; property.</source>
          <target state="translated">.NET Framework リソース ファイル、コンパイルされたアセンブリで、追加するリソース ファイルの名前、&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To reference .NET Framework resources in another assembly, add the names of the resource files to the &lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt; property.</source>
          <target state="translated">別のアセンブリ内の .NET Framework のリソースを参照するに追加するリソース ファイルの名前、&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To include a Win32 resource file in the compiled assembly, specify the name of the Win32 resource file in the &lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt; property.</source>
          <target state="translated">コンパイルされたアセンブリで Win32 リソース ファイルを含めるで Win32 リソース ファイルの名前を指定、&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>継承確認要求<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したアセンブリ名を使用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified assembly names and output file name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したアセンブリ名と出力ファイル名を使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified assembly names, output name, and a value indicating whether to include debug information.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定したアセンブリ名、出力名、およびデバッグ情報を含めるかどうかを示す値を使用します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include debug information; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to exclude debug information.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デバッグ情報を含める<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>デバッグ情報を除外します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets optional command-line arguments to use when invoking the compiler.</source>
          <target state="translated">取得またはコンパイラを呼び出すときに使用する省略可能なコマンドライン引数を設定します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; typically includes this string on the command line when invoking a command-line compiler.</source>
          <target state="translated">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;通常コマンド ライン コンパイラを呼び出すときに、コマンドラインでは、この文字列が含まれています&lt;/xref:System.CodeDom.Compiler.ICodeCompiler&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>By default, this property contains an empty string.</source>
          <target state="translated">既定では、このプロパティには、空の文字列が含まれています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Any additional command-line arguments for the compiler.</source>
          <target state="translated">コンパイラのコマンド ライン追加引数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the core or standard assembly that contains basic types such as &lt;xref:System.Object&gt;, &lt;xref:System.String&gt;, or &lt;xref:System.Int32&gt;.</source>
          <target state="translated">コアまたは基本型を含む標準のアセンブリの名前を取得または&lt;xref:System.Object&gt;、 &lt;xref:System.String&gt;、または&lt;xref:System.Int32&gt;.&lt;/xref:System.Int32&gt; &lt;/xref:System.String&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the value of this property is an empty string or <ph id="ph1">`null`</ph>, the compiler uses the default core assembly.</source>
          <target state="translated">かどうか、このプロパティの値は空の文字列または<ph id="ph1">`null`</ph>コンパイラは、既定のコア アセンブリを使用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Depending on the compiler version, the default core assembly may be mscorlib.dll or System.Runtime.dll in a Framework directory or reference assembly directory.</source>
          <target state="translated">コンパイラのバージョンに応じて、既定のコア アセンブリがあります mscorlib.dll または System.Runtime.dll Framework ディレクトリまたは参照アセンブリのディレクトリにします。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the value of this property is not empty, the Code Document Object Model (CodeDOM) explicitly references the specified assembly and emits compiler options that cause the compiler to not reference any assemblies implicitly during compilation..</source>
          <target state="translated">このプロパティの値が空でない場合、Code Document Object Model (CodeDOM) は明示的に指定したアセンブリを参照し、出力をコンパイラがコンパイル時にアセンブリを暗黙的に参照しないコンパイラ オプション.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For compilers that reference the core or standard assembly only implicitly by default, this property can be used on its own.</source>
          <target state="translated">既定では、コアまたは標準のアセンブリをのみによって暗黙的に参照するコンパイラのこのプロパティは、独自に使用できます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For compilers that implicitly reference assemblies in addition to the core or standard assembly, using this option may require specifying additional entries in the &lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName&gt;property.</source>
          <target state="translated">コンパイラに暗黙的にアセンブリを参照するさらにコアまたは標準のアセンブリには、このオプションを使用することがあります指定する必要に追加エントリ、&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt; or &lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt; implementation may choose to ignore this property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;または&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;実装は、このプロパティを無視することができます&lt;/xref:System.CodeDom.Compiler.CodeDomProvider&gt;&lt;/xref:System.CodeDom.Compiler.ICodeCompiler&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the core assembly that contains basic types.</source>
          <target state="translated">基本型を含むコア アセンブリの名前。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the .NET Framework resource files to include when compiling the assembly output.</source>
          <target state="translated">アセンブリの出力をコンパイルするときに含まれる .NET Framework リソース ファイルを取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Embedded resources are built into the generated assembly output file.</source>
          <target state="translated">埋め込みリソースは、生成されたアセンブリの出力ファイルに組み込まれます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Including files through this property is similar to the <ph id="ph1">`/resource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
          <target state="translated">このプロパティを使用してファイルを含むに似ていますが、<ph id="ph1">`/resource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the &lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt; method with the flag &lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;.</source>
          <target state="translated">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;フラグ&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;。&lt;/xref:System.CodeDom.Compiler.GeneratorSupport&gt;でメソッド&lt;/xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;を呼び出すことによって、このサポートをテストする必要がありますいないすべてのコンパイラが .NET Framework リソース ファイルをサポートします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add one or more .NET Framework resource file paths to the returned &lt;xref:System.Collections.Specialized.StringCollection&gt; to embed the file resources in the compiled assembly.</source>
          <target state="translated">返された&amp;1; つまたは複数の .NET Framework リソース ファイル パスを追加する&lt;xref:System.Collections.Specialized.StringCollection&gt;、コンパイルされたアセンブリにファイルのリソースを埋め込む&lt;/xref:System.Collections.Specialized.StringCollection&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
          <target state="translated">コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use EmbeddedResources to include default or neutral culture .NET Framework resources for an assembly; use the &lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt; property to reference .NET Framework resources in satellite assemblies.</source>
          <target state="translated">EmbeddedResources を使用して、アセンブリの既定値またはニュートラル カルチャの .NET Framework のリソースをインクルードするには使用して、 &lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;.NET Framework のリソースをサテライト アセンブリを参照するプロパティ&lt;/xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A collection that contains the file paths of .NET Framework resources to include in the generated assembly.</source>
          <target state="translated">生成されたアセンブリに含めるように、.NET Framework リソースのファイル パスを含むコレクション。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</source>
          <target state="translated">証拠を表すオブジェクトをコンパイルされたアセンブリを付与するセキュリティ ポリシーのアクセス許可を指定します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An  object that represents the security policy permissions to grant the compiled assembly.</source>
          <target state="translated">コンパイル済みのアセンブリを付与するセキュリティ ポリシーのアクセス許可を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to generate an executable.</source>
          <target state="translated">取得または実行可能ファイルを生成するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the value of this property is <ph id="ph1">`false`</ph>, a DLL will be generated.</source>
          <target state="translated">このプロパティの値が場合<ph id="ph1">`false`</ph>DLL が生成されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>By default, the value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、このプロパティの値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an executable should be generated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>実行可能ファイルを生成する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to generate the output in memory.</source>
          <target state="translated">取得またはメモリ内で出力を生成するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the compiler should generate the output in memory; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンパイラは、メモリ内で出力を生成する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to include debug information in the compiled executable.</source>
          <target state="translated">取得またはコンパイル済みの実行可能ファイルにデバッグ情報を含めるかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if debug information should be generated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>デバッグ情報を生成する場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the .NET Framework resource files that are referenced in the current source.</source>
          <target state="translated">現在のソースで参照されている .NET Framework リソース ファイルを取得します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Linked resource files allow your assembly to reference .NET Framework resources without embedding the actual resources in the assembly.</source>
          <target state="translated">リンクされたリソース ファイルには、リソースを参照する .NET Framework アセンブリで実際のリソースを埋め込まなくても、アセンブリが許可されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Referencing files through this property is similar to the <ph id="ph1">`/linkresource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
          <target state="translated">に似ていますがこのプロパティを使用してファイルを参照する、<ph id="ph1">`/linkresource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the &lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt; method with the flag &lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;.</source>
          <target state="translated">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;フラグ&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;。&lt;/xref:System.CodeDom.Compiler.GeneratorSupport&gt;でメソッド&lt;/xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;を呼び出すことによって、このサポートをテストする必要がありますいないすべてのコンパイラが .NET Framework リソース ファイルをサポートします。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Add one or more .NET Framework resource file paths to the returned &lt;xref:System.Collections.Specialized.StringCollection&gt; to create links for the resources in the compiled assembly.</source>
          <target state="translated">返された&amp;1; つまたは複数の .NET Framework リソース ファイル パスを追加する&lt;xref:System.Collections.Specialized.StringCollection&gt;、コンパイルされたアセンブリでリソースへのリンクを作成する&lt;/xref:System.Collections.Specialized.StringCollection&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
          <target state="translated">コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use LinkedResources to reference .NET Framework resources in satellite assemblies, localized for a particular culture; use the &lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt; property to embed the resources into the compiled assembly.</source>
          <target state="translated">LinkedResources を使用して、特定のカルチャのローカライズされたサテライト アセンブリに .NET Framework のリソースを参照するには使用して、&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;プロパティをコンパイルされたアセンブリにリソースを埋め込む&lt;/xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A collection that contains the file paths of .NET Framework resources that are referenced by the source.</source>
          <target state="translated">ソースによって参照されている .NET Framework リソース ファイルのパスを含むコレクション。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the main class.</source>
          <target state="translated">取得またはメイン クラスの名前を設定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The main class contains the entry point for the program.</source>
          <target state="translated">メイン クラスには、プログラムのエントリ ポイントが含まれています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the main class.</source>
          <target state="translated">メインのクラスの名前。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the output assembly.</source>
          <target state="translated">取得または出力アセンブリの名前を設定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The name of the output assembly.</source>
          <target state="translated">出力アセンブリの名前。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the assemblies referenced by the current project.</source>
          <target state="translated">現在のプロジェクトによって参照されるアセンブリを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The string collection should consist of, or include, the assemblies referenced by the current project.</source>
          <target state="translated">文字列のコレクションに含まれるか、含めるには、現在のプロジェクトによって参照されるアセンブリください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Add assembly file names to the returned &lt;xref:System.Collections.Specialized.StringCollection&gt; to import the assembly manifest and reference the assembly type information in the current project.</source>
          <target state="translated">返されたアセンブリ ファイル名を追加&lt;xref:System.Collections.Specialized.StringCollection&gt;をアセンブリ マニフェストをインポートし、現在のプロジェクトでアセンブリの型情報を参照します&lt;/xref:System.Collections.Specialized.StringCollection&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A collection that contains the assembly names that are referenced by the source to compile.</source>
          <target state="translated">コンパイルするソースによって参照されているアセンブリ名を含むコレクション。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the collection that contains the temporary files.</source>
          <target state="translated">取得または一時ファイルを含んでいるコレクションを設定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; property in the collection.</source>
          <target state="translated">コレクション内の一時ファイルの保持またはの値に基づいてコンパイラ アクティビティの完了時に削除された、&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;コレクション内のプロパティ&lt;/xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt; property is set if the collection is created using the &lt;xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt; constructor with the <ph id="ph1">`keepFiles`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;プロパティを使用して、コレクションを作成する場合、&lt;xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt;を持つコンス トラクター、<ph id="ph1">`keepFiles`</ph>パラメーターに設定<ph id="ph2">`true`</ph>&lt;/xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt;&lt;/xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>継承確認要求<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A collection that contains the temporary files.</source>
          <target state="translated">一時ファイルを格納するコレクション。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to treat warnings as errors.</source>
          <target state="translated">取得または警告をエラーとして扱うかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if warnings should be treated as errors; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>警告をエラーとして扱う場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the user token to use when creating the compiler process.</source>
          <target state="translated">取得またはコンパイラ プロセスを作成するときに使用するユーザーのトークンを設定します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The user token to use.</source>
          <target state="translated">使用するユーザー トークンです。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the warning level at which the compiler aborts compilation.</source>
          <target state="translated">取得またはコンパイラがコンパイルを中止する警告レベルを設定します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The warning level at which the compiler aborts compilation.</source>
          <target state="translated">警告レベル コンパイラがコンパイルを中止します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</source>
          <target state="translated">取得またはコンパイルされたアセンブリにリンクする Win32 リソース ファイルのファイル名を設定します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Linking files through this property is similar to the <ph id="ph1">`/winres`</ph> and <ph id="ph2">`/winresource`</ph> command-line arguments supported by many of the .NET Framework compilers.</source>
          <target state="translated">このプロパティを使用してファイルをリンクすることと似ています、<ph id="ph1">`/winres`</ph>と<ph id="ph2">`/winresource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Use Win32Resource to compile a Win32 resource file into the assembly.</source>
          <target state="translated">Win32Resource を使用して、アセンブリに Win32 リソース ファイルをコンパイルします。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt; or &lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt; to compile with .NET Framework resource files.</source>
          <target state="translated">使用して&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;または&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;.NET Framework リソース ファイルをコンパイルする&lt;/xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;&lt;/xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Not all compilers support Win32 resource files, so you should test a code generator for this support before linking a resource file by calling the &lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt; method with the flag &lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;.</source>
          <target state="translated">すべてのコンパイラは、Win32 リソース ファイルをサポートするため、&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;フラグを&lt;xref:System.CodeDom.Compiler.GeneratorSupport&gt;。&lt;/xref:System.CodeDom.Compiler.GeneratorSupport&gt;メソッド&lt;/xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;を呼び出すことによって、リソース ファイルをリンクする前にこのサポートのコード ジェネレーターをテストする必要があります。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A Win32 resource file that will be linked into the compiled assembly.</source>
          <target state="translated">コンパイルされたアセンブリにリンクする Win32 リソース ファイル。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>