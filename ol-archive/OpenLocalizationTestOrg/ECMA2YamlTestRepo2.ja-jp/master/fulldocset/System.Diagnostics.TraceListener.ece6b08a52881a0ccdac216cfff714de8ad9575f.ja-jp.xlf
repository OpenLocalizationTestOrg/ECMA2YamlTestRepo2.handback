<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31cd92e3a66dd65e8f574a5810d836d283ded34c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.TraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">579e7cdd50b66d1b1182deb739be96410926cc60</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5fbd710325c648913712da4748970a5dae2d430</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">提供、 <bpt id="p1">&lt;xref uid="langword_csharp_abstract" name="abstract" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを監視およびデバッグ出力をリスナーの基本クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Diagnostics.TraceListener&gt;.</source>
          <target state="translated">次の表は、 &lt;xref:System.Diagnostics.TraceListener&gt;。&lt;/xref:System.Diagnostics.TraceListener&gt;のインスタンスの初期プロパティ値を示しています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>|Property|Default Value|   |--------------|-------------------|   |Name|The empty string ("").|   |Indent|Zero.|   |IndentSize|Four spaces.|</source>
          <target state="translated">|プロパティ |既定値 |  |--------------|-------------------|  |名 |空の文字列 (""). | |インデント |ゼロ |。  |IndentSize |4 つのスペースです |。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified name as the listener.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス リスナーとして指定した名前を使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名前、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイルで定義されているカスタム トレース リスナーの属性を取得します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the &lt;xref:System.Diagnostics.TraceListener&gt; class can add custom attributes by overriding the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method and returning a string array of custom attribute names.</source>
          <target state="translated">継承するクラス、&lt;xref:System.Diagnostics.TraceListener&gt;クラスがオーバーライドすることでカスタム属性を追加できる、&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;メソッドをカスタム属性の名前の文字列配列を返します&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Attributes property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated">属性のプロパティは、アプリケーションの構成ファイルで参照されているカスタム属性を識別します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, in the following configuration file excerpt the &lt;xref:System.Diagnostics.DelimitedListTraceListener&gt; custom attribute "delimiter" is referenced.</source>
          <target state="translated">たとえば、次の構成ファイルの抜粋で、&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;カスタム属性「区切り記号」が参照されている&lt;/xref:System.Diagnostics.DelimitedListTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, the Attributes property returns a &lt;xref:System.Collections.Specialized.StringDictionary&gt; containing the string "delimiter".</source>
          <target state="translated">この場合、属性プロパティを返します、&lt;xref:System.Collections.Specialized.StringDictionary&gt;文字列「区切り記号」を含むします&lt;/xref:System.Collections.Specialized.StringDictionary&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>       Unreferenced custom attributes are not enumerated.</source>
          <target state="translated"><ph id="ph1">```   &lt;listeners&gt;     &lt;add name="delimitedListener"        type="System.Diagnostics.DelimitedListTraceListener"        delimiter=":"        initializeData="delimitedOutput.txt"        traceOutputOptions="ProcessId, DateTime" /&gt;     &lt;remove name="Default" /&gt;   &lt;/listeners&gt;   ```</ph>参照されていないカスタム属性は列挙されません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; method.</source>
          <target state="translated">詳細については、次を参照してください、&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;メソッド。&lt;/xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the custom attributes for the trace listener.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.Specialized.StringDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレース リスナーのカスタム属性を格納します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">派生クラスでオーバーライドされると、トレース出力またはデバッグ出力を受信しないように、出力ストリームを閉じます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use this method when the output is going to a file, such as to the &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;.</source>
          <target state="translated">このメソッドを使用して、出力するとき、ファイルなど、 &lt;xref:System.Diagnostics.TextWriterTraceListener&gt;。&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">このメソッドを呼び出し、オブジェクトを再初期化する必要があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Calling Dispose allows the resources used by the &lt;xref:System.Diagnostics.TraceListener&gt; to be reallocated for other purposes.</source>
          <target state="translated">Dispose を呼び出すことによりで使用されるリソース、&lt;xref:System.Diagnostics.TraceListener&gt;を他の目的に再割り当てされます&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose の詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected &lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt; method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>プロテクト呼び出します&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;メソッドを<ph id="ph2">`disposing`</ph>パラメーターに設定<ph id="ph3">`true`</ph>&lt;/xref:System.Diagnostics.TraceListener.Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Diagnostics.TraceListener&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Diagnostics.TraceListener&gt;参照。&lt;/xref:System.Diagnostics.TraceListener&gt; 。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Emits an error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">エラー メッセージを出力するリスナーを作成を実装する場合、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">既定の動作がモードでは、ユーザー インターフェイス、およびアプリケーションが実行されているときに、メッセージ ボックスに、指定したメッセージを表示するには、&lt;xref:System.Diagnostics.TraceListener&gt;のインスタンスにある、&lt;xref:System.Diagnostics.TraceListenerCollection&gt;コレクションです&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">既定&lt;xref:System.Diagnostics.TraceListenerCollection&gt;コレクションには&lt;xref:System.Diagnostics.DefaultTraceListener&gt;。&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;のインスタンス&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、&lt;xref:System.Diagnostics.TraceListener&gt;にまたは、コレクションから削除します&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">出力するメッセージ。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">エラー出力を実装するときに作成するメッセージと詳細なエラー メッセージ、リスナーを<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the &lt;xref:System.Diagnostics.TraceListener&gt; instances in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">既定の動作がモードでは、ユーザー インターフェイス、およびアプリケーションが実行されているときに、メッセージ ボックスに、メッセージと詳細なメッセージを表示するには、&lt;xref:System.Diagnostics.TraceListener&gt;のインスタンスにある、&lt;xref:System.Diagnostics.TraceListenerCollection&gt;コレクションです&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>By default, the &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection has an instance of a &lt;xref:System.Diagnostics.DefaultTraceListener&gt;.</source>
          <target state="translated">既定&lt;xref:System.Diagnostics.TraceListenerCollection&gt;コレクションには&lt;xref:System.Diagnostics.DefaultTraceListener&gt;。&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;のインスタンス&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can customize this behavior by adding a &lt;xref:System.Diagnostics.TraceListener&gt; to or removing one from the collection.</source>
          <target state="translated">追加することでこの動作をカスタマイズすることができます、&lt;xref:System.Diagnostics.TraceListener&gt;にまたは、コレクションから削除します&lt;/xref:System.Diagnostics.TraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
          <target state="translated">出力するメッセージ。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A detailed message to emit.</source>
          <target state="translated">出力する詳細なメッセージ。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">取得し、トレース リスナーのトレース フィルターを設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">トレース リスナーをトレース ソース スイッチで提供される範囲を超えてスクリーン処理のレイヤーを提供するには、トレース フィルターを追加できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Diagnostics.EventTypeFilter&gt; can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">たとえば、&lt;xref:System.Diagnostics.EventTypeFilter&gt;リスナーによって出力されるイベントの種類を制御するトレース リスナーに追加することができます&lt;/xref:System.Diagnostics.EventTypeFilter&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">トレースが出力に送信するかを判断、存在する場合、スイッチの条件が満たされるために呼び出されたリスナーは、フィルターをクエリできます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object derived from the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> base class.</source>
          <target state="translated">派生したオブジェクト、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceFilter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基本クラスです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">派生クラスでオーバーライドされると、出力バッファーをフラッシュします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">トレース リスナーによってサポートされるカスタム属性を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default implementation for GetSupportedAttributes returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">GetSupportedAttributes の既定の実装を返します<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A string array naming the custom attributes supported by the trace listener, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are no custom attributes.</source>
          <target state="translated">トレース リスナーによってサポートされるカスタム属性の名前を付ける文字列配列または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>カスタム属性がない場合。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the indent level.</source>
          <target state="translated">取得またはインデント レベルを設定します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The IndentLevel property represents the number of times that the indent specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">IndentLevel プロパティがインデントがで指定された回数を表す、&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;プロパティを適用します&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">このプロパティは、スレッド/あたりの要求ごとに格納されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The indent level.</source>
          <target state="translated">インデント レベル。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
          <target state="translated">既定値は&amp;0; です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">取得または空白の数を&amp;1; つのインデントに設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">プロパティは、スレッド/あたりの要求ごとに格納されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The number of spaces in an indent.</source>
          <target state="translated">1 つのインデントに含まれるスペースの数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is four spaces.</source>
          <target state="translated">既定値は&amp;4; スペースです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">設定操作では、値が&amp;0; より小さいために失敗しました。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">安全なトレース リスナーがスレッドであるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of IsThreadSafe is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">IsThreadSafe の値を使用してをリスナーに書き込む際に、グローバル ロックを使用するかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the value of IsThreadSafe is <ph id="ph1">`false`</ph>, the global lock is used regardless of the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.</source>
          <target state="translated">IsThreadSafe の値が場合<ph id="ph1">`false`</ph>、 &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;.&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;の値に関係なくグローバル ロックを使用</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The global lock is not used only if the value of IsThreadSafe is <ph id="ph1">`true`</ph> and the value of &lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt; is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">IsThreadSafe の値が場合にのみ、グローバルのロックは使用されません<ph id="ph1">`true`</ph>の値と&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;は<ph id="ph2">`false`</ph>&lt;/xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">既定の動作がグローバルを使用するには、リスナーに書き込むときにロックします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the trace listener is thread safe; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>トレース リスナーがスレッド セーフである場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この名前を取得または<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name can be used to organize and access listeners in a &lt;xref:System.Diagnostics.TraceListenerCollection&gt; collection.</source>
          <target state="translated">名前を整理し、内のリスナーのアクセスを使用できます、&lt;xref:System.Diagnostics.TraceListenerCollection&gt;コレクションです&lt;/xref:System.Diagnostics.TraceListenerCollection&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A name for this <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">この名前<bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">既定値は空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">取得または出力にインデントを設定するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The &lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt; method, called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes, sets the NeedIndent property value to <ph id="ph1">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>注<ept id="p1">**</ept>、&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;によって呼び出されたメソッド、&lt;xref:System.Diagnostics.DefaultTraceListener&gt;と&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;クラス、NeedIndent プロパティ値を設定<ph id="ph1">`false`</ph>を後で、不要なインデントを防ぐためです&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;&lt;/xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You must set the NeedIndent property to <ph id="ph1">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">NeedIndent プロパティを設定する必要があります<ph id="ph1">`true`</ph>たびにトレース出力をインデントする場合します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the output should be indented; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>出力することはできません。 インデント場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">書き込むトレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">既定の実装の書き込み、 <ph id="ph1">`eventCache`</ph>、 <ph id="ph2">`source`</ph>、<ph id="ph3">`eventType`</ph>と<ph id="ph4">`id`</ph>ヘッダーとトレースのフッター内のパラメーターです。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated"><ph id="ph1">`data`</ph>パラメーターは、トレース メッセージの本文として書き込まれます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a &lt;xref:System.String&gt;.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> &lt;xref:System.String&gt;&lt;/xref:System.String&gt;オブジェクトに変換するデータ オブジェクトのメソッドを使用。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを発生させたイベントの種類を指定する値。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The trace data to emit.</source>
          <target state="translated">出力するトレース データ。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">トレース情報、データ オブジェクトおよびイベント情報をリスナー固有の出力の配列に書き込みます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">既定の実装がの値を書き込みます、 <ph id="ph1">`source`</ph>、<ph id="ph2">`eventType`</ph>と<ph id="ph3">`id`</ph>ヘッダーとして使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">データ オブジェクトを使用して文字列に変換されます、<ph id="ph1">`ToString`</ph>各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>フッターの値に依存している出力データの性質としてデータが書き込まれる、&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを発生させたイベントの種類を指定する値。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of objects to emit as data.</source>
          <target state="translated">データとして出力するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">書き込みトレース情報およびイベント情報をリスナー固有の出力。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">既定の実装がの値を書き込みます、 <ph id="ph1">`source`</ph>、<ph id="ph2">`eventType`</ph>と<ph id="ph3">`id`</ph>ヘッダーとして使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>フッターの値に依存している出力データの性質としてデータが書き込まれる、&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを発生させたイベントの種類を指定する値。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">トレース情報、メッセージ、およびイベント情報をリスナー固有の出力に書き込みます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">既定の実装がの値を書き込みます、 <ph id="ph1">`source`</ph>、<ph id="ph2">`eventType`</ph>と<ph id="ph3">`id`</ph>、ヘッダーとして使用されるパラメーターが続く、<ph id="ph4">`message`</ph>データ。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>フッターの値に依存している出力データの性質としてデータが書き込まれる、&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを発生させたイベントの種類を指定する値。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">トレース情報、オブジェクトおよびイベント情報をリスナー固有の出力の書式付き配列に書き込みます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">既定の実装がの値を書き込みます、 <ph id="ph1">`source`</ph>、<ph id="ph2">`eventType`</ph>と<ph id="ph3">`id`</ph>ヘッダーとして使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the &lt;xref:System.String.Format%2A&gt; method, passing the <ph id="ph2">`format`</ph> string and <ph id="ph3">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated"><ph id="ph1">`args`</ph>オブジェクトの配列を使用して文字列に変換、&lt;xref:System.String.Format%2A&gt;渡して、メソッド、<ph id="ph2">`format`</ph>文字列と<ph id="ph3">`args`</ph>トレースのメッセージ部分として文字列を書式設定する配列&lt;/xref:System.String.Format%2A&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>フッターの値に依存している出力データの性質としてデータが書き込まれる、&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values specifying the type of event that has caused the trace.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トレースを発生させたイベントの種類を指定する値。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">書式指定文字列内のオブジェクトに対応する、0 個以上の書式項目を含む、<ph id="ph1">`args`</ph>配列。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_object" name="object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>書式指定する&amp;0; 個以上のオブジェクトを含む配列。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">取得またはトレース出力オプションを設定します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The TraceOutputOptions property determines the optional content of trace output.</source>
          <target state="translated">TraceOutputOptions プロパティでは、トレース出力の省略可能な内容を判断します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">プロパティは、コードのセクションを具体的には追加のデータを含む構成ファイルまたはプログラムで実行中に設定できます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For example, you can set the TraceOutputOptions property for the console trace listener to &lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt; to add call stack information to the trace output.</source>
          <target state="translated">たとえば、コンソール トレース リスナーの TraceOutputOptions プロパティを設定できます&lt;xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;トレース出力にコール スタック情報を追加する&lt;/xref:System.Diagnostics.TraceOptions?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.TraceOptions&gt; enumeration is not used by the following classes and methods:      -   The &lt;xref:System.Diagnostics.EventLogTraceListener&gt; class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceOptions&gt;列挙体は、次のクラスやメソッドでは使用されません-&lt;xref:System.Diagnostics.EventLogTraceListener&gt;大量のログに書き込まれるデータを引き起こす可能性があるため、クラス&lt;/xref:System.Diagnostics.EventLogTraceListener&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;, &lt;xref:System.Diagnostics.DefaultTraceListener&gt;, and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">-<ph id="ph1">`Write`</ph>と<ph id="ph2">`WriteLine`</ph>のメソッド、 &lt;xref:System.Diagnostics.ConsoleTraceListener&gt;、 &lt;xref:System.Diagnostics.DefaultTraceListener&gt;、および&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;クラス&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;&lt;/xref:System.Diagnostics.ConsoleTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods of the &lt;xref:System.Diagnostics.TraceListener&gt; class when they are not overridden in a derived class.</source>
          <target state="translated">-&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;と&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;&lt;xref:System.Diagnostics.TraceListener&gt;派生クラスでオーバーライドされないときにクラス&lt;/xref:System.Diagnostics.TraceListener&gt;のメソッド&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Diagnostics.TraceOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">設定操作では、値が有効ではないために失敗しました。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">トレース情報、メッセージ、関連するアクティビティ id、およびイベント情報をリスナー固有の出力に書き込みます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  This method is not intended to be called directly by application code but by members of the &lt;xref:System.Diagnostics.Debug&gt;, &lt;xref:System.Diagnostics.Trace&gt;, and &lt;xref:System.Diagnostics.TraceSource&gt; classes to write trace data to output.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; このメソッドは、アプリケーション コードで直接のメンバーによっても呼び出されるものではありません、 &lt;xref:System.Diagnostics.Debug&gt;、 &lt;xref:System.Diagnostics.Trace&gt;、および&lt;xref:System.Diagnostics.TraceSource&gt;を出力するトレース データを書き込む&lt;/xref:System.Diagnostics.TraceSource&gt;&lt;/xref:System.Diagnostics.Trace&gt;&lt;/xref:System.Diagnostics.Debug&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt; method is used for the correlation of related traces.</source>
          <target state="translated">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;メソッドは、関連するトレースの相関関係を使用します&lt;/xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The TraceTransfer method calls the &lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt; method to process the call, with the eventType level set to &lt;xref:System.Diagnostics.TraceEventType&gt; and the <ph id="ph1">`relatedActivityId`</ph>&lt;xref:System.Guid&gt; as a string appended to the message.</source>
          <target state="translated">TraceTransfer メソッドの呼び出し、 &lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;eventType レベル設定されている呼び出しを処理するメソッド&lt;xref:System.Diagnostics.TraceEventType&gt;と<ph id="ph1">`relatedActivityId`</ph>&lt;xref:System.Guid&gt;としてメッセージに追加される文字列&lt;/xref:System.Guid&gt;&lt;/xref:System.Diagnostics.TraceEventType&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Guid&gt; object identifying a related activity.</source>
          <target state="translated">A&lt;xref:System.Guid&gt;関連アクティビティを識別するオブジェクト&lt;/xref:System.Guid&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">オブジェクトの値を書き込みます&lt;xref:System.Object.ToString*&gt;を実装する場合、作成したリスナーにメソッド、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;を記述する完全修飾クラス名をもつ&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したメッセージを書き込み、派生クラスで作成したリスナーにします。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">カテゴリ名とオブジェクトの値を書き込みます&lt;xref:System.Object.ToString*&gt;を実装する場合、作成したリスナーにメソッド、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;を記述する完全修飾クラス名をもつ&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">カテゴリ名とメッセージを書き込みます、リスナーを実装するときに作成する、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Writes the indent to the listener you create when you implement this class, and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt; property to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このクラスを実装するときに作成するリスナーにインデントを書き込み、リセット、&lt;xref:System.Diagnostics.TraceListener.NeedIndent*&gt;プロパティを<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.Diagnostics.TraceListener.NeedIndent*&gt; 。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This method writes the indent and resets the &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このメソッドを選択し、インデントを書き込み、リセット、&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;プロパティを<ph id="ph1">`false`</ph>&lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Call this method if &lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt; is <ph id="ph1">`true`</ph> when you are overriding the &lt;xref:System.Diagnostics.TraceListener.Write%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt; methods.</source>
          <target state="translated">場合、このメソッドを呼び出す&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;は<ph id="ph1">`true`</ph>オーバーライドして、&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;と&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;メソッド&lt;/xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.Write%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">既定は、このメソッドは、インデントに含まれている空白を使用します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The size of the indent is determined by the values of the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; and &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; properties.</source>
          <target state="translated">インデントのサイズの値によって決まります、&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;と&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt; property represents the number of times the indent of the size specified by the &lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt; property is applied.</source>
          <target state="translated">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;プロパティを表す回数が指定したサイズのインデント、&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;プロパティを適用します&lt;/xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;&lt;/xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;xref:System.Diagnostics.DefaultTraceListener&gt; and &lt;xref:System.Diagnostics.TextWriterTraceListener&gt; classes.</source>
          <target state="translated">このメソッドは、&lt;xref:System.Diagnostics.DefaultTraceListener&gt;と&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;クラス&lt;/xref:System.Diagnostics.TextWriterTraceListener&gt;&lt;/xref:System.Diagnostics.DefaultTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">オブジェクトの値を書き込みます&lt;xref:System.Object.ToString*&gt;を実装する場合、作成したリスナーにメソッド、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、続けて行終端記号&lt;/xref:System.Object.ToString*&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r) です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;を記述する完全修飾クラス名をもつ&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">派生クラスでオーバーライドされると、リスナーにメッセージの書き込みする、派生クラスで作成、続けて行終端記号です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r) です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's &lt;xref:System.Object.ToString*&gt; method to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">カテゴリ名とオブジェクトの値を書き込みます&lt;xref:System.Object.ToString*&gt;を実装する場合、作成したリスナーにメソッド、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、続けて行終端記号&lt;/xref:System.Object.ToString*&gt;。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r) です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; whose fully qualified class name you want to write.</source>
          <target state="translated">&lt;xref:System.Object&gt;を記述する完全修飾クラス名をもつ&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the listener you create when you implement the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, followed by a line terminator.</source>
          <target state="translated">カテゴリ名とメッセージを書き込みます、リスナーを実装するときに作成する、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス、続けて行終端記号です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r ).</source>
          <target state="translated">実装することが通常の行終端記号は、キャリッジ リターンとライン フィード (\r) です。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
          <target state="translated">出力を編成するために使用するカテゴリ名。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>