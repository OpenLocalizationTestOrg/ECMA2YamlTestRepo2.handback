<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e1b8c933c88737a5e36345613dd989b2325d7f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.Hosting.HostingEnvironment.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04d55160cd40f681153a291b35310c17747e0f4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc11f92538ca1d48ba4ed91ab7bc4ee674c5793c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides application-management functions and application services to a managed application within its application domain.</source>
          <target state="translated">アプリケーション管理機能およびそのアプリケーション ドメイン内でマネージ アプリケーションにアプリケーション サービスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Each managed application domain contains a static instance of the HostingEnvironment class, which provides access to application-management functions and application services.</source>
          <target state="translated">各管理対象のアプリケーション ドメインには、アプリケーション管理機能およびアプリケーション サービスへのアクセスを提供する HostingEnvironment クラスの静的なインスタンスが含まれています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The HostingEnvironment constructor initializes the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object.</source>
          <target state="translated">HostingEnvironment コンス トラクターは、&lt;xref:System.Web.Hosting.HostingEnvironment&gt;オブジェクト&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The HostingEnvironment constructor is called only once by the application's &lt;xref:System.Web.Hosting.ApplicationManager&gt; object.</source>
          <target state="translated">HostingEnvironment コンス トラクターをアプリケーションの&amp;1; 回だけ呼び出す&lt;xref:System.Web.Hosting.ApplicationManager&gt;オブジェクト&lt;/xref:System.Web.Hosting.ApplicationManager&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Calling the HostingEnvironment constructor more than once will cause an &lt;xref:System.InvalidOperationException&gt; exception to be thrown.</source>
          <target state="translated">HostingEnvironment コンス トラクターを複数回呼び出すことにより、&lt;xref:System.InvalidOperationException&gt;例外がスローされます&lt;/xref:System.InvalidOperationException&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The HostingEnvironment constructor is called more than once.</source>
          <target state="translated">HostingEnvironment コンス トラクターが複数回呼び出されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このプロパティをサポートしている、<ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph>インフラストラクチャ コードから直接使用するものではありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An object that contains information about the application host.</source>
          <target state="translated">アプリケーション ホストについての情報を格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the unique identifier of the application.</source>
          <target state="translated">アプリケーションの一意の識別子を取得します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The application must be running with &lt;xref:System.Web.AspNetHostingPermissionLevel&gt; set to high trust to access the ApplicationID property.</source>
          <target state="translated">アプリケーションを実行する必要があります&lt;xref:System.Web.AspNetHostingPermissionLevel&gt;ApplicationID プロパティにアクセスする高信頼に設定します&lt;/xref:System.Web.AspNetHostingPermissionLevel&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The unique identifier of the application.</source>
          <target state="translated">アプリケーションの一意の識別子。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the physical path on disk to the application's directory.</source>
          <target state="translated">アプリケーションのディレクトリへのディスク上の物理パスを取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The physical path on disk to the application's directory.</source>
          <target state="translated">アプリケーションのディレクトリへのディスク上の物理パス。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the root virtual path of the application.</source>
          <target state="translated">アプリケーションのルートの仮想パスを取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The ApplicationVirtualPath property always returns "<ph id="ph1">`/"`</ph> as the first character of the returned value.</source>
          <target state="translated">ApplicationVirtualPath プロパティは常に返します"<ph id="ph1">`/"`</ph>戻り値の最初の文字として。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the application is located in the root of the website, the return value is just "<ph id="ph1">`/"`</ph>.</source>
          <target state="translated">アプリケーションが、web サイトのルートに配置されている場合、戻り値は"<ph id="ph1">`/"`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The root virtual path of the application with no trailing slash (/).</source>
          <target state="translated">末尾にスラッシュ (/) を使用してアプリケーションのルート仮想パス。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for the current application.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のアプリケーションのインスタンス。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The current <bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">現在<bpt id="p1">&lt;xref href="System.Web.Caching.Cache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インスタンス。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Reduces the count of busy objects in the hosted environment by one.</source>
          <target state="translated">ホスト環境のビジー オブジェクトの数が&amp;1; ずつ減少します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When a busy registered object finishes its work, it calls the DecrementBusyCount method to signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it has completed processing and to reduce the count of busy objects by one.</source>
          <target state="translated">シグナル DecrementBusyCount メソッドを呼び出して、ビジー状態である登録済みのオブジェクトには、その作業が完了すると、&lt;xref:System.Web.Hosting.HostingEnvironment&gt;オブジェクトの処理が完了したこととして、いずれかのビジー オブジェクトの数を削減する&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">ビジー状態の数が&amp;0; より大きい場合は、ホスト アプリケーションとは保留中の要求がない場合でもタイムアウトしません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>There must be a call to the DecrementBusyCount method for each call to the &lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt; method.</source>
          <target state="translated">呼び出しごとに DecrementBusyCount メソッドを呼び出す必要があります、&lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;メソッド&lt;/xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the application identity.</source>
          <target state="translated">アプリケーション id によって表されるユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;偽装前の Windows ユーザーを表すオブジェクト; このオブジェクトを使用して元のユーザーのコンテキストに戻す&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスを偽装できません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Impersonates the user represented by the specified user token.</source>
          <target state="translated">指定したユーザー トークンによって表されるユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows アカウント トークンのハンドル。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;偽装前の Windows ユーザーを表すオブジェクト; このオブジェクトを使用して元のユーザーのコンテキストに戻す&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスを偽装できません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</source>
          <target state="translated">指定した仮想パスまたは指定したユーザー トークンについて構成設定で指定されたユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The Impersonate method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</source>
          <target state="translated">Impersonate メソッドは、すべての要素で指定された仮想パスに影響する構成設定の適用後、その結果、ユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`identity`</ph> element is not specified for the virtual path, the Impersonate method impersonates the specified Windows account.</source>
          <target state="translated">場合、<ph id="ph1">`identity`</ph>要素が指定されていない仮想パスが、Impersonate メソッドは、指定された Windows アカウントを偽装します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows アカウント トークンのハンドル。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The path to the requested resource.</source>
          <target state="translated">要求されたリソースへのパス。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;偽装前の Windows ユーザーを表すオブジェクト; このオブジェクトを使用して元のユーザーのコンテキストに戻す&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスを偽装できません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</source>
          <target state="translated">ホスティング環境がシステムを構築、ASP.NET へのアクセスを持つかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is the ASP.NET hosted application domain used in <bpt id="p2">&lt;xref uid="langword_csharp_ClientBuildManager" name="ClientBuildManager" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> scenarios; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>かどうか、アプリケーション ドメインは、ASP.NET ホストされているアプリケーション ドメインで使用される<bpt id="p2">&lt;xref uid="langword_csharp_ClientBuildManager" name="ClientBuildManager" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>シナリオ、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Increases the count of busy objects in the hosted environment by one.</source>
          <target state="translated">ホスト環境のビジー オブジェクトの数を&amp;1; つずつ増加します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Registered objects signal the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object that it is running and to increase the count of busy objects by one.</source>
          <target state="translated">登録されているオブジェクトのシグナル、 &lt;xref:System.Web.Hosting.HostingEnvironment&gt;、実行されているオブジェクトと&amp;1; つのビジー オブジェクトの数を増やすにします&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">ビジー状態の数が&amp;0; より大きい場合は、ホスト アプリケーションとは保留中の要求がない場合でもタイムアウトしません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There must be a call to the &lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt; method for each call to the IncrementBusyCount method.</source>
          <target state="translated">呼び出す必要があります、 &lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;IncrementBusyCount メソッドに対する各呼び出しのメソッド&lt;/xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets any exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初期化中にスローされる例外を取得、 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The exception thrown during initialization of the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初期化中にスローされた例外、 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If no exception was thrown, returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">例外がスローされなかった場合を返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gives the <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">により、 <bpt id="p1">&lt;xref href="System.Web.Hosting.HostingEnvironment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リースが作成されるようにすることによって、無期限の有効期間のオブジェクトします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This method overrides the &lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt; method in its base class.</source>
          <target state="translated">このメソッドは、&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;その基本クラスのメソッド&lt;/xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It always returns <ph id="ph1">`null`</ph> and prevents a lease from being created that would limit the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object's lifetime.</source>
          <target state="translated">常に返します<ph id="ph1">`null`</ph>作成されないリースで、制限されることになり、&lt;xref:System.Web.Hosting.HostingEnvironment&gt;オブジェクトの有効期間&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Starts shutting down the web application associated with this host and removes registered objects from the system.</source>
          <target state="translated">このホストに関連付けられている web アプリケーションをシャット ダウンを開始し、登録されているオブジェクトをシステムから削除します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Use the InitiateShutdown method to stop a web application domain and remove any objects registered with the &lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt; method.</source>
          <target state="translated">InitiateShutdown メソッドを使用して web アプリケーションのドメインを停止しに登録されているすべてのオブジェクトを削除、&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;メソッド&lt;/xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This method returns immediately, before the shutdown is complete.</source>
          <target state="translated">このメソッドは、シャット ダウンが完了する前に、すぐに返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called on each registered object with the passed parameter set to <ph id="ph1">`false`</ph> to allow each registered object to shut down asynchronously.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;、渡されたパラメーターのセットを登録済みの各オブジェクトのメソッドが呼び出された<ph id="ph1">`false`</ph>各登録済みのオブジェクトを非同期的にシャット ダウンを許可する&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>After waiting for the amount of time specified in the <ph id="ph1">`shutdownTimeout`</ph> attribute of the  configuration element, the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt; method is called again with the passed parameter set to <ph id="ph2">`true`</ph> for each registered object remaining.</source>
          <target state="translated">指定された時間待機した後、<ph id="ph1">`shutdownTimeout`</ph>構成要素の属性、&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;渡されたパラメーター設定したメソッドが再度呼び出さ<ph id="ph2">`true`</ph>残り登録されている各オブジェクトについて&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once all registered objects have finished shutting down, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; objects shuts down the application domain.</source>
          <target state="translated">登録済みのすべてのオブジェクトでは、シャット ダウンが完了したら後、&lt;xref:System.Web.Hosting.HostingEnvironment&gt;オブジェクトが、アプリケーション ドメインを終了します&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a value that indicats whether the current application is in a development environment.</source>
          <target state="translated">現在のアプリケーションが開発環境であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application is in a development environment; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アプリケーションが開発環境以外の場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current application domain is being hosted by an <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在のアプリケーション ドメインがによってホストされているかどうかを示す値を取得、 <bpt id="p1">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the application domain is hosted by an <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>アプリケーション ドメインがによってホストされている場合、 <bpt id="p2">&lt;xref href="System.Web.Hosting.ApplicationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>オブジェクト。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Maps a virtual path to a physical path on the server.</source>
          <target state="translated">仮想パスをサーバー上の物理パスに割り当てます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The virtual path (absolute or relative).</source>
          <target state="translated">(絶対または相対) 仮想パス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The physical path on the server specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">指定されたサーバー上の物理パス<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent requests per CPU.</source>
          <target state="translated">取得または CPU あたりの同時要求の最大数を設定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The maximum concurrent requests per CPU.</source>
          <target state="translated">CPU あたりの同時要求の最大数。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum concurrent threads per CPU.</source>
          <target state="translated">取得または CPU ごとの同時実行スレッドの最大数を設定します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The maximum concurrent threads per CPU.</source>
          <target state="translated">CPU あたりの同時実行スレッドの最大数。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method supports the <ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメソッドは、サポート、<ph id="ph1">[!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)]</ph>インフラストラクチャ コードから直接使用するものではありません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでサポート]      すべての要求の独立したバック グラウンドで実行できるタスクをスケジュールします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">異なり、通常のスレッド プールの作業項目 ASP.NET を追跡できます作業この API を通して登録されている項目が現在実行されている、され、ASP.NET ランタイムが遅延 AppDomain のシャット ダウンされるまで、これらの作業項目の実行が完了に試行します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">この API は、ASP.NET で管理された AppDomain の外部で呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">アプリケーションのシャット ダウンするときは、指定の CancellationToken が通知されます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the callback returns.</source>
          <target state="translated">QueueBackgroundWorkItem がタスクを返すコールバックを受け取るコールバックが戻るときに完了したら、作業項目を考慮します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
          <target state="translated">実行の単位。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]       Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでサポート]      すべての要求の独立したバック グラウンドで実行できるタスクをスケジュールします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">異なり、通常のスレッド プールの作業項目 ASP.NET を追跡できます作業この API を通して登録されている項目が現在実行されている、され、ASP.NET ランタイムが遅延 AppDomain のシャット ダウンされるまで、これらの作業項目の実行が完了に試行します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">この API は、ASP.NET で管理された AppDomain の外部で呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">アプリケーションのシャット ダウンするときは、指定の CancellationToken が通知されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>QueueBackgroundWorkItem takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</source>
          <target state="translated">QueueBackgroundWorkItem がタスクを返すコールバックを受け取る作業項目と完了、返されるタスクが終了状態に遷移すると見なされます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A unit of execution.</source>
          <target state="translated">実行の単位。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Places an object in the list of registered objects for the application.</source>
          <target state="translated">アプリケーションの登録済みのオブジェクトの一覧で、オブジェクトを配置します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager&gt;クラスを作成、管理、および現在のアプリケーション ドメイン内のオブジェクトを破棄するのには、現在のアプリケーション ドメイン外のメソッドを有効にします&lt;/xref:System.Web.Hosting.ApplicationManager&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The RegisterObject method is used to register previously created objects with the hosting environment.</source>
          <target state="translated">RegisterObject メソッドを使用して、ホスティング環境を以前に作成したオブジェクトに登録します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Objects registered with the RegisterObject method must implement the &lt;xref:System.Web.Hosting.IRegisteredObject&gt; interface.</source>
          <target state="translated">RegisterObject メソッドに登録されているオブジェクトを実装する必要があります、&lt;xref:System.Web.Hosting.IRegisteredObject&gt;インターフェイス&lt;/xref:System.Web.Hosting.IRegisteredObject&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To use a registered object, follow these steps:      1.</source>
          <target state="translated">登録済みのオブジェクトを使用するには、次の手順: 1。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Create a new instance of your registered object by calling the &lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">呼び出すことによって、登録済みのオブジェクトの新しいインスタンスを作成、&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Call a type-specific method to initialize your new object.</source>
          <target state="translated">新しいオブジェクトを初期化するために、型固有メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>In the initialization method, call the RegisterObject method to add the object to the list of registered objects.</source>
          <target state="translated">初期化メソッドでは、登録されているオブジェクトのリストにオブジェクトを追加する RegisterObject メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt; method to return the registered object when required.</source>
          <target state="translated">呼び出す、&lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt;必要な場合に、登録されているオブジェクトを返すメソッド&lt;/xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When you wish to stop your object, call the &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">オブジェクトを停止するときに呼び出す、&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt; method in turn calls the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;メソッドを呼び出して、&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;&lt;/xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In the &lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt; method, have your object call the &lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;メソッド、オブジェクトの呼び出しがある、&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;メソッド&lt;/xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;&lt;/xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Registers a new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the ASP.NET compilation system.</source>
          <target state="translated">新しい登録<bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ASP.NET コンパイル システムを持つインスタンス。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The RegisterVirtualPathProvider method adds the specified &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance to the application's list of virtual-path providers.</source>
          <target state="translated">RegisterVirtualPathProvider メソッドを指定した追加&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;アプリケーションの一覧に仮想パス プロバイダーのインスタンス&lt;/xref:System.Web.Hosting.VirtualPathProvider&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; class overview.</source>
          <target state="translated">詳細については、次を参照してください、&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;クラスの概要。&lt;/xref:System.Web.Hosting.VirtualPathProvider&gt; 。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance to add to the compilation system.</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>コンパイル システムに追加するインスタンス。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture specified in the application configuration file.</source>
          <target state="translated">現在のスレッドをアプリケーション構成ファイルで指定したカルチャに設定します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The SetCultures method sets the current thread to the culture specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> element in the application's configuration file.</source>
          <target state="translated">SetCultures メソッドで指定されたカルチャの現在のスレッドの設定、<bpt id="p1">[</bpt>グローバリゼーション要素 (ASP.NET 設定スキーマ)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept>アプリケーションの構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;を変更する前に、カルチャを表すオブジェクト; このオブジェクトを使用して元のカルチャに戻す&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Sets the current thread to the culture of the specified virtual path.</source>
          <target state="translated">指定した仮想パスのカルチャを現在のスレッドを設定します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The SetCultures method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</source>
          <target state="translated">SetCultures メソッドは、現在のスレッドを指定した仮想パスに影響する構成ファイル内のすべての要素を適用後、その結果、カルチャに設定します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The path that contains the culture information.</source>
          <target state="translated">カルチャ情報を含むパスです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IDisposable&gt; object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">&lt;xref:System.IDisposable&gt;を変更する前に、カルチャを表すオブジェクト; このオブジェクトを使用して元のカルチャに戻す&lt;/xref:System.IDisposable&gt;。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns an enumerated value that indicates why the application terminated.</source>
          <target state="translated">アプリケーションが終了した理由を示す列挙値を返します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Web.ApplicationShutdownReason"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Web.ApplicationShutdownReason"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the name of the site.</source>
          <target state="translated">サイトの名前を取得します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the site.</source>
          <target state="translated">サイトの名前。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.1 only]       Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</source>
          <target state="translated">[.NET Framework 4.5.1 をのみでサポート]      発生したときに、ワーカー プロセスまたはこのホストに関連付けられているアプリケーション プールが新しい要求し、最終的にシャット ダウンのリッスンを停止します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</source>
          <target state="translated">アプリケーション プールと関連付けられているワーカー プロセスは、IIS によって停止されることは、たとえばアプリケーション プールが、定期的なリサイクル間隔、IIS に達したときに通知 ASP.NET ランタイム、アプリケーションがシャット ダウンしていることと、アプリケーション プールのワーカー プロセスは、新しい要求のリッスンを停止します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Applications that use long-running requests, for example <bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> applications, can listen for the StopListening event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</source>
          <target state="translated">たとえば、実行時間の長い要求を使用するアプリケーション<bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept>アプリケーション、したり StopListening イベントのリッスンを正常にシャット ダウン、長時間実行処理 IIS がアプリケーション プールと関連付けられているワーカー プロセスのシャット ダウンを開始するとします。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!WARNING]</ph> &gt;  There are several design considerations that a developer must consider when implementing the StopListening event:   &gt;    &gt;  1.</source>
          <target state="translated">&gt; <ph id="ph1">[!WARNING]</ph> &gt; StopListening イベントを実装するときに、開発者は考慮する必要がありますをいくつかの設計の考慮事項があります: &gt;&gt; 1 です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The StopListening event is only available for applications that are configured to use the IIS integrated pipeline.</source>
          <target state="translated">StopListening イベントは、IIS 統合パイプラインを使用するように構成されているアプリケーションをできるだけです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>&gt; 2.</source>
          <target state="translated">&gt; 2.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Developers must not throw errors from their StopListening implementations; throwing errors will have unpredictable results.</source>
          <target state="translated">開発者は、その StopListening 実装; からエラーをスローしない必要があります。エラーをスローすると、予期しない結果があります。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&gt; 3.</source>
          <target state="translated">&gt; 3.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a StopListening event once it has been implemented by a developer.</source>
          <target state="translated">ASP.NET 内の操作の同時実行の性質により、ASP.NET が、開発者が実装された後、StopListening イベントを呼び出すことの保証はありません。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>&gt; 4.</source>
          <target state="translated">&gt; 4.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The StopListening event can execute concurrently with other &lt;xref:System.Web.Hosting.IRegisteredObject&gt; notifications.</source>
          <target state="translated">その他のと同時に実行できる StopListening イベント&lt;xref:System.Web.Hosting.IRegisteredObject&gt;通知&lt;/xref:System.Web.Hosting.IRegisteredObject&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&gt; 5.</source>
          <target state="translated">&gt; 5.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Developers need to be aware that ASP.NET may shut down the application domain while their StopListening event is executing and design their implementations to handle that possibility.</source>
          <target state="translated">開発者は、ASP.NET がその StopListening イベントが実行中に、アプリケーション ドメインをシャット ダウンし、設計、実装する可能性を処理する可能性がありますに注意する必要があります。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>&gt; 6.</source>
          <target state="translated">&gt; 6.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>StopListening event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</source>
          <target state="translated">StopListening イベント ハンドラーをブロックする必要があります。実装をブロックして、デッドロックが発生して、ラピッド フェール保護間隔に達したときに、IIS のワーカー プロセスが終了します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Removes an object from the list of registered objects for the application.</source>
          <target state="translated">アプリケーションの登録済みのオブジェクトの一覧からオブジェクトを削除します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.Hosting.ApplicationManager&gt; class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated">&lt;xref:System.Web.Hosting.ApplicationManager&gt;クラスを作成、管理、および現在のアプリケーション ドメイン内のオブジェクトを破棄するのには、現在のアプリケーション ドメイン外のメソッドを有効にします&lt;/xref:System.Web.Hosting.ApplicationManager&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The UnregisterObject method is used to remove previously registered objects from the hosting environment.</source>
          <target state="translated">UnregisterObject メソッドを使用して、ホスト環境から以前に登録されているオブジェクトを削除します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The object to remove.</source>
          <target state="translated">削除するオブジェクト。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets the virtual path provider for this application.</source>
          <target state="translated">このアプリケーションの仮想パス プロバイダーを取得します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>When more than one &lt;xref:System.Web.Hosting.VirtualPathProvider&gt; instance is registered, the &lt;xref:System.Web.Hosting.HostingEnvironment&gt; object manages the call chain.</source>
          <target state="translated">ときに&amp;1; つ以上&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;インスタンスが登録されると、&lt;xref:System.Web.Hosting.HostingEnvironment&gt;オブジェクトは、呼び出しチェーンを管理します&lt;/xref:System.Web.Hosting.HostingEnvironment&gt;&lt;/xref:System.Web.Hosting.VirtualPathProvider&gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You cannot control the order in which virtual path providers are called.</source>
          <target state="translated">仮想パス プロバイダーが呼び出される順序を制御できません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance for this application.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.Hosting.VirtualPathProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>このアプリケーションのインスタンス。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>