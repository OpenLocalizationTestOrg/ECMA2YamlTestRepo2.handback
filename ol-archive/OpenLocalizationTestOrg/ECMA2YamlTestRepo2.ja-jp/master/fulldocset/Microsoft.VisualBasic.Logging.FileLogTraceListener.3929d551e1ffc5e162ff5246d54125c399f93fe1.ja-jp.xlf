<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39a12a0be31ddb2a245f9bee1eedb0f7d1bc68d7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Logging.FileLogTraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bb580627f346bc10a438fd67c53797e60663b0f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55f4a00e9af3ca035a94b0be2aab8efde96d17b4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple listener that directs logging output to file.</source>
          <target state="translated">ログ出力をファイルに指示する単純なリスナーを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The FileLogTraceListener class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</source>
          <target state="translated">FileLogTraceListener クラスでは、必要に応じて、毎日ごとまたはアプリケーションごとに、ログ ファイルをアーカイブする自動メンテナンス機能を提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</source>
          <target state="translated">この自動アーカイブ機能により、開発者および管理者の保守作業の負担を軽減できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An instance of FileLogTraceListener can be added to the &lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt; or &lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt; collections to redirect output from logging to a text file.</source>
          <target state="translated">FileLogTraceListener のインスタンスを追加することができます、&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt;または&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;をテキスト ファイルにログ記録からの出力にリダイレクトするコレクション&lt;/xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;&lt;/xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Instances of this class can also be added to <ph id="ph1">`My.Application.Log`</ph> or <ph id="ph2">`My.Log`</ph> (for Web applications) in <ph id="ph3">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> applications.</source>
          <target state="translated">このクラスのインスタンスを追加することも<ph id="ph1">`My.Application.Log`</ph>または<ph id="ph2">`My.Log`</ph>(用 Web アプリケーション) で<ph id="ph3">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>アプリケーションです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">`.`</ph>       The main features of this class are:      1.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: 変更場所 My.Application.Log 書き込みます情報<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">`.`</ph>このクラスの主な機能: 1。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Archival functionality<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>アーカイブ機能<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</source>
          <target state="translated">このクラスで生成されるログ ファイルは、基本名と、ログの連続するバージョンのログ ファイルを区別するための番号と共に、日付に従ってという名前です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">新しいログ ファイルは、必要に応じてごとに作成されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The explicit form of the file name is <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>][-<ph id="ph3">`version`</ph>].log, where:          -   The <ph id="ph4">`baseName`</ph> part is the fundamental log name, specified by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt; property.</source>
          <target state="translated">ファイル名の明示的な形式は<ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>] [-<ph id="ph3">`version`</ph>] .log、場所: -<ph id="ph4">`baseName`</ph>要素は、基本的なログ名で指定された、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt; is &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt; or &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;.</source>
          <target state="translated">-<ph id="ph1">`dateStamp`</ph>ときに表示され、一部が、形式"YYYY MM DD"、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;または&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;.&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt; &lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt; &lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`version`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">-同じ&amp;2; つ以上のログ ファイルが必要な場合<ph id="ph1">`baseName`</ph>と<ph id="ph2">`dateStamp`</ph>、<ph id="ph3">`version`</ph>パート、正<ph id="ph4">`Integer`</ph>ファイル名に追加されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Multiple class instances<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>複数のクラス インスタンス<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If an instance of the FileLogTraceListener class writes to a file that is in use:          -   The class shares the file if it is being used by another instance of the FileLogTraceListener class in the same process.</source>
          <target state="translated">FileLogTraceListener クラスのインスタンスが使用されているファイルに書き込む場合:-クラスは、同じプロセスで FileLogTraceListener クラスの別のインスタンスによって使用されている場合にファイルを共有します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-   The class creates a new log file using the next available name if the file is being used by another process.</source>
          <target state="translated">-クラスは、ファイルが別のプロセスによって使用されている場合は、[次へ] の使用可能な名前を使用して、新しいログ ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Thread safety<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>スレッド セーフ<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The FileLogTraceListener class is thread safe.</source>
          <target state="translated">FileLogTraceListener クラスは、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This allows you to safely write messages to the log from multiple threads without using locks.</source>
          <target state="translated">これにより、安全なメッセージ ログに書き込む、複数のスレッドからロックを使用せずにできます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log-File Location<ept id="p1">**</ept>      -   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt; property takes a &lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt; enumeration to specify one of the typical directories to write the log file to.</source>
          <target state="translated"><bpt id="p1">**</bpt>ログ ファイルの場所<ept id="p1">**</ept>-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;プロパティが受け取る、&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;にログ ファイルを書き込むための一般的なディレクトリのいずれかを指定する列挙体です&lt;/xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-   To write the log to another location, set the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt; property to that location.</source>
          <target state="translated">-ログに書き込まれる別の場所に、設定、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;プロパティをその場所&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log-File Name<ept id="p1">**</ept>      -   The base name for the log file is specified by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt; property.</source>
          <target state="translated"><bpt id="p1">**</bpt>ログ ファイル名<ept id="p1">**</ept>-でログ ファイルの基本名が指定された、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-   The current log file name can be read from the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt; property.</source>
          <target state="translated">-現在のログ ファイル名を読み取ることができます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It is derived from several other properties and the current state of the logs in the file system.</source>
          <target state="translated">これについては、ファイル システムにその他のいくつかのプロパティと、ログの現在の状態から派生します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log Maintenance<ept id="p1">**</ept>      -   The minimum frequency for creating new log files is determined by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt; property.</source>
          <target state="translated"><bpt id="p1">**</bpt>ログのメンテナンス<ept id="p1">**</ept>-新しいログ ファイルを作成するための最低限の頻度によって決まります、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the value is &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt; or &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;, a new log file is created at least once every day or week, and a date stamp is incorporated into the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt; name.</source>
          <target state="translated">値が&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;または&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;、日または週ごとに少なくとも&amp;1; 回、新しいログ ファイルが作成され、日付スタンプに組み込まれます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;名&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-   The maximum size (in bytes) of the log file is determined by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt; property.</source>
          <target state="translated">-の最大サイズ (バイト単位)、ログ ファイルがによって決まりますが、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt; property, an exception is thrown.</source>
          <target state="translated">ログに書き込まれた追加のメッセージは破棄され、に応じてログ ファイルのサイズがこのサイズを超える場合、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;プロパティ、例外がスローされます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt; property determines how much free space (in bytes) must be available.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;プロパティは、どの程度空き容量 (バイト単位) を使用する必要がありますを決定します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This helps ensure that the FileLogTraceListener class will not consume all available disk space.</source>
          <target state="translated">これにより、FileLogTraceListener クラスはすべての利用可能なディスク領域を使用しないことを確認してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt; property to specify the behavior of log writes when there are less than &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt; bytes free.</source>
          <target state="translated">使用して、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;があるときにログの動作を指定するプロパティに書き込むより小さい&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;バイトの空き領域&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log-File Output Settings<ept id="p1">**</ept>      -   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt; property specifies whether the underlying stream should be flushed automatically after each write to the log file.</source>
          <target state="translated"><bpt id="p1">**</bpt>ログ ファイルの出力設定<ept id="p1">**</ept>-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;かどうか、基になるストリームをフラッシュする自動的にそれぞれの書き込み後に、ログ ファイルにプロパティを指定します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt; property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;プロパティでは、許可された場合、メッセージを現在のログ ファイルに追加したり、新しいログ ファイルに書き込むかどうかを指定します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt; property specifies the string to use for delimiting the fields within a log message.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;プロパティ ログ メッセージ内のフィールドの区切り記号として使用する文字列を指定します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt; property specifies the encoding to use when creating a new log file.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;プロパティは、新しいログ ファイルを作成するときに使用するエンコーディングを指定します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Log-File Output<ept id="p1">**</ept>      -   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt; and &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt; methods write messages to the log file.</source>
          <target state="translated"><bpt id="p1">**</bpt>ログ ファイルの出力<ept id="p1">**</ept>-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;と&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;メソッドは、ログ ファイルにメッセージを書き込みます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>These methods check the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt; property, along with any existing logs with the same base name to determine if a new log should be created.</source>
          <target state="translated">これらのメソッドを確認して、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;と共に、新しいログを作成するかどうかを判断する同じ基本名を持つ既存のログのプロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt; method flushes any messages currently in the output buffer to the log file.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;メソッドは、ログ ファイルに出力バッファーに現在あるメッセージをフラッシュします&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt; method closes the log file so that it can be used by other processes.</source>
          <target state="translated">-&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;メソッドは、他のプロセスで使用できるように、ログ ファイルを閉じます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Enabling Output<ept id="p1">**</ept>       You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated"><bpt id="p1">**</bpt>出力を有効にする<ept id="p1">**</ept>トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">次の構文は、コンパイラに固有です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you use compilers other than C# or <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>, refer to the documentation for your compiler.</source>
          <target state="translated">C# 以外のコンパイラを使用する場合または<ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>コンパイラのドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-   To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">-C# でのデバッグを有効にするには、<ph id="ph1">`/d:DEBUG`</ph>するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ<ph id="ph2">`#define DEBUG`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>、追加、<ph id="ph2">`/d:DEBUG=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">-C# でのトレースを有効にするには、<ph id="ph1">`/d:TRACE`</ph>フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン<ph id="ph2">`#define TRACE`</ph>ファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>、追加、<ph id="ph2">`/d:TRACE=True`</ph>フラグをコンパイラ コマンドライン。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>To set the level of your listener, edit the configuration file for your application.</source>
          <target state="translated">リスナーのレベルを設定するには、アプリケーションの構成ファイルを編集します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">構成ファイルは、次の例のようにフォーマットされている必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For this example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">この例を実行するには、完全修飾アセンブリ名を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">アセンブリの完全修飾名を取得する方法については、次を参照してください。<bpt id="p1">[</bpt>アセンブリ名<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the default name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>既定の名前を持つクラス。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method sets the instance name of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class to FileLogTraceListener.</source>
          <target state="translated">このメソッドのインスタンス名を設定、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;FileLogTraceListener するクラス&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can access the instance name through the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property.</source>
          <target state="translated">使って、インスタンス名にアクセスすることができます、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the supplied name.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された名前を持つクラス。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method sets the instance name of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class to <ph id="ph1">`name`</ph>.</source>
          <target state="translated">このメソッドのインスタンス名を設定、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;クラスを<ph id="ph1">`name`</ph>&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can access the instance name thought the &lt;xref:System.Diagnostics.TraceListener.Name%2A&gt; property.</source>
          <target state="translated">考えるインスタンス名にアクセスすることができます、&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;プロパティ&lt;/xref:System.Diagnostics.TraceListener.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the instance object.</source>
          <target state="translated">インスタンスのオブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Determines whether to append the output to the current file or write it to a new file.</source>
          <target state="translated">現在のファイルに出力を追加または新しいファイルに書き込むかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>When the Append property is <ph id="ph1">`False`</ph>, the output is written to a new file.</source>
          <target state="translated">追加プロパティが<ph id="ph1">`False`</ph>、新しいファイルに出力が書き込まれます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When the property is <ph id="ph1">`True`</ph>, the output is appended to the current file, unless:      -   The output file is locked by another process.</source>
          <target state="translated">このプロパティが<ph id="ph1">`True`</ph>、しない限り、現在のファイルに出力が追加されます:-出力ファイルが別のプロセスによってロックされています。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In this situation, a new log file is created with a version number that is incorporated into the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt; name.</source>
          <target state="translated">このような状況に組み込まれているバージョン番号を持つ、新しいログ ファイルを作成、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;名&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-   The current file size is greater than what the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt; property allows.</source>
          <target state="translated">-現在のファイル サイズがどのようなより大きい、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;プロパティを使用します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In this situation, additional messages are discarded and, depending on the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt; property, an exception is thrown.</source>
          <target state="translated">この場合、追加のメッセージは破棄され、に応じて、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;プロパティ、例外がスローされます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>-   The existing file name is out of date according to the log-creation schedule specified by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt; property.</source>
          <target state="translated">-既存のファイル名がで指定されたログの作成のスケジュールに従って期限切れ、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In this situation, a new log file is created and the date stamp is incorporated into the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt; name.</source>
          <target state="translated">このような状況で、新しいログ ファイルが作成され、日付スタンプに組み込まれます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;名&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, with <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> indicating that the output is appended to the current file, and <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> indicating that output is written to a new file.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、で<bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 、出力が、現在のファイルに追加されることを示すと<bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>新しいファイルに出力を書き込むことを示すです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default setting for this property is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティは、の既定の設定<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the writing to the log file stream flushes the buffer.</source>
          <target state="translated">ログ ファイルのストリームへの書き込みが、バッファーをフラッシュするかどうかを示します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`False`</ph> setting for the AutoFlush property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</source>
          <target state="translated"><ph id="ph1">`False`</ph> AutoFlush プロパティを提供、ほとんどのアプリケーションのパフォーマンスが最適に設定すると、ログ ファイルに同時に複数のメッセージを記述する方が効率的になっているためです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt; method to flush any messages currently in the log file's output buffer.</source>
          <target state="translated">使用することができます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;ログ ファイルに現在あるメッセージをフラッシュするメソッドのバッファーを出力します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt; method, which implicitly flushes the stream before closing the log file.</source>
          <target state="translated">使用することも、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;メソッドで、暗黙的に、ログ ファイルを閉じる前に、ストリームをフラッシュします&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, with <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、で<bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> ; すべての書き込み後にストリームがフラッシュされることを示すそれ以外の場合、ログ エントリがバッファーされより効率的に書き込まれます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default setting for this property is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティは、の既定の設定<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets the base name for the log files, which is used to create the full log-file name.</source>
          <target state="translated">取得またはログ ファイルの完全名の作成に使用されるログ ファイルのベース名を設定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The base name for the log files.</source>
          <target state="translated">ログ ファイルの基本名です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default is the application's product name.</source>
          <target state="translated">既定では、アプリケーションの製品名です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</source>
          <target state="translated">現在のログ ファイルの基になるストリームを閉じ、現在のストリームに関連付けられているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You do not need to call the Close method explicitly, because the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class manages the underlying steam.</source>
          <target state="translated">Close メソッドを明示的に呼び出す必要はありません、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;クラスは、基になるストリームを管理します&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets the log file directory when the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*&gt; property is set to <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得またはログ ファイルのディレクトリを設定するときに、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*&gt;プロパティに設定されている<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*&gt; 。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When the CustomLocation property is set, it also sets the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt; property to &lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;.</source>
          <target state="translated">また、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt; &lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;を設定 CustomLocation プロパティが設定されている場合</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The CustomLocation property will throw an exception if the directory cannot be resolved.</source>
          <target state="translated">ディレクトリを解決できない場合、CustomLocation プロパティは例外をスローします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is the name of the log-file directory.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、これは、ログ ファイル ディレクトリの名前。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default setting for this property is the user's directory for application data.</source>
          <target state="translated">このプロパティの既定の設定は、アプリケーション データ用のユーザーのディレクトリです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the delimiter used to delimit fields within a log message.</source>
          <target state="translated">取得またはログ メッセージ内のフィールドを区切るために使用する区切り記号を設定します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The Delimiter property allows you to change the default delimiter.</source>
          <target state="translated">区切り記号プロパティでは、既定の区切り記号を変更することができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is the delimiter used for fields within a log message.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、これは、ログ メッセージのフィールドの区切り記号。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default setting for this property is the TAB character.</source>
          <target state="translated">このプロパティの既定の設定は、タブ文字です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Determines what to do when writing to the log file and there is less free disk space available than specified by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*&gt; property.</source>
          <target state="translated">ログ ファイルに書き込むときの対処方法を決定し、小さいディスクの空き領域が使用可能なで指定されて、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When the DiskSpaceExhaustedBehavior property is set to &lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;, the log messages are silently discarded if there is not enough reserved disk space.</source>
          <target state="translated">DiskSpaceExhaustedBehavior プロパティに設定するときに&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;、十分な予約済みのディスク領域がない場合、サイレント モードで、ログ メッセージは破棄されます&lt;/xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</source>
          <target state="translated">これは、既定の動作であり、ディスクが十分な空き領域を取得する場合に失敗したことによる単純なアプリケーションが妨げられるため。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>More robust applications can set the DiskSpaceExhaustedBehavior property to &lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;, and add <ph id="ph1">`Try...Catch`</ph> blocks around all code that writes to the log.</source>
          <target state="translated">堅牢なアプリケーションでは、DiskSpaceExhaustedBehavior プロパティに設定できます&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;、し、追加<ph id="ph1">`Try...Catch`</ph>ログに書き込みを行うすべてのコード ブロック&lt;/xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace<bpt id="p1">*</bpt>&gt; property, or if the log file size is greater than what the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize<ept id="p1">*</ept>&gt; property allows.</source>
          <target state="translated">ファイルし、小さいディスクの空き領域が使用可能なで指定されて、ログに書き込むしようとするときの対処方法を決定、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティ、またはログ ファイルのサイズがどのようなより大きい場合、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Closes the underlying stream and optionally releases the managed resources.</source>
          <target state="translated">基になるストリームを閉じ、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`True`</ph>, this method releases all resources held by any managed objects that this &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`True`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;参照。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; 。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> releases both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージの両方のリソースを解放します。<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets the encoding to use when creating a new log file.</source>
          <target state="translated">取得または新しいログ ファイルを作成するときに使用するエンコーディングを設定します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the Encoding property.</source>
          <target state="translated">既存のログ ファイルにテキストを追加するときに Encoding プロパティで指定するエンコードの代わりにそのファイルのエンコーディングを使用します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;, which is the encoding to use when creating a new log file.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;、新しいログ ファイル作成するときに使用するエンコードされます。&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default value of this property is &lt;xref:System.Text.UTF8Encoding&gt;.</source>
          <target state="translated">このプロパティの既定値は&lt;xref:System.Text.UTF8Encoding&gt;。&lt;/xref:System.Text.UTF8Encoding&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Flushes the underlying stream that writes to the current log file.</source>
          <target state="translated">現在のログ ファイルに書き込む基になるストリームをフラッシュします。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Use the Flush method to write all buffered data to the current log file.</source>
          <target state="translated">現在のログ ファイルにバッファリングされているすべてのデータを書き込むには Flush メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets the current full log-file name.</source>
          <target state="translated">現在のログ ファイルの完全名を取得します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is the current full log-file name.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、名前は、現在のログ ファイルの完全名。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets the custom XML configuration attributes supported by the trace listener.</source>
          <target state="translated">トレース リスナーによってサポートされるカスタムの XML 構成属性を取得します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The custom attributes for the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; can be used in the XML configuration file for controlling the behavior of an instance of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;クラス&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;のインスタンスの動作を制御するための XML 構成ファイルで使用できます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;のカスタム属性</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">他の属性を使用して、構成例外が発生します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing the XML configuration attributes recognized by this listener.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このリスナーによって認識される XML 構成属性を含む配列です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the host name of the logging machine should be included in the output.</source>
          <target state="translated">出力のログ記録のマシンのホスト名を含める必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Use the property to configure the behavior of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt; and &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt; methods.</source>
          <target state="translated">動作を構成するプロパティを使用して、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;と&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;メソッド&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the host identifier should be included; otherwise use <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">使用して<bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ホストの識別子が含まれる場合はそれ以外の場合使用<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets or sets location for the log files.</source>
          <target state="translated">取得またはログ ファイルの場所を設定します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, which is the location for the log file.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>、これは、ログ ファイルの場所。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileLocation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Determines which date to include in the names of the log files.</source>
          <target state="translated">ログ ファイルの名前に含める日付を決定します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Assign one of the &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt; enumeration values to the LogFileCreationSchedule property to specify which date to include in the names of the log files.</source>
          <target state="translated">1 つの割り当て、 &lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;LogFileCreationSchedule プロパティの ログ ファイルの名前を含める日付を指定する列挙値&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The format of the date is YYYY-MM-DD.</source>
          <target state="translated">日付の形式は、YYYY-MM-DD です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For more information on the format of the log file name, see &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;.</source>
          <target state="translated">ログ ファイル名の形式の詳細については、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>|<bpt id="p1">**</bpt>LogFileCreationSchedule value<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>Date in the log file name<ept id="p2">**</ept>|   |---------------------------------------|-----------------------------------|   |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|Include the current date in the log file name.|   |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|Do not include the date in the log file name.|   |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|Include the first day of the current week in the log file name.</source>
          <target state="translated">|<bpt id="p1">**</bpt>LogFileCreationSchedule 値<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>、ログ ファイル名に日付<ept id="p2">**</ept>|  |---------------------------------------|-----------------------------------|  |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|ログ ファイル名に、現在の日付を含めます |。  |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|ログ ファイル名に日付を含めないでください |。  |&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;|ログ ファイル名に、現在の週の最初の日を含めます&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;&lt;/xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The week starts on Saturday.|</source>
          <target state="translated">週開始日は土曜日です |。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This indicates which date to include in the log-file names.</source>
          <target state="translated">これは、ログ ファイル名に追加する日付を示します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum allowed size of the log file, in bytes.</source>
          <target state="translated">取得またはログ ファイルの最大許容サイズをバイト単位で設定します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Use this property to make sure that the log files do not grow too large.</source>
          <target state="translated">あるログ ファイルは大きくなりすぎないかどうかを確認するには、このプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If the log file size (in bytes) is greater than the value of this property, then when the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt; property.</source>
          <target state="translated">場合は、ログ ファイルのサイズ (バイト単位) が、このプロパティの値よりも大きい場合、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;の値に応じて、メッセージは破棄され、障害がサイレント モードまたは例外をログにメッセージを書き込むクラス試行がスローされます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;.</source>
          <target state="translated">それ以外の場合、メッセージを記述、ログに空きディスク領域 (バイト単位) の量が&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;より小さい場合</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This is the maximum allowed log-file size, in bytes.</source>
          <target state="translated">これは、ログのファイルの最大許容サイズ、(バイト単位) です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The default value is 5000000.</source>
          <target state="translated">既定値は、5000000 です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When this property is set to a value less than 1000.</source>
          <target state="translated">このプロパティに設定すると、値 1000 より小さい。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</source>
          <target state="translated">取得または設定、空きディスク領域の量 (バイト単位) で必要なメッセージをログ ファイルに書き込む前にします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Use this property to make sure that the log files do not completely fill the disk.</source>
          <target state="translated">あるログ ファイルに完全に収まらないディスクかどうかを確認するには、このプロパティを使用します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If the amount of free disk space (in bytes) is less than the value of this property, then when the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt; class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt; property.</source>
          <target state="translated">空きディスク容量 (バイト単位) の領域の場合は、このプロパティの値よりも小さい、ときに、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;の値に応じて、メッセージは破棄され、障害がサイレント モードまたは例外をログにメッセージを書き込むクラス試行がスローされます、&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;プロパティ&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Otherwise, the message is written to the log, if the log file size (in bytes) is greater than &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;.</source>
          <target state="translated">それ以外の場合、メッセージがログに書き込まれます、ログ ファイル サイズ (バイト単位) が&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;より大きい場合</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This is the amount of free disk space necessary.</source>
          <target state="translated">これは、必要な空きディスク領域の量です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default value is 10000000.</source>
          <target state="translated">既定値は 10000000 です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>When this property is set to a value less than 0.</source>
          <target state="translated">このプロパティを 0 より小さい値に設定するとします。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Writes trace information, a data object, and event information to the output file or stream.</source>
          <target state="translated">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This method:      1.</source>
          <target state="translated">このメソッド: 1。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Formats the data and context information for output.</source>
          <target state="translated">出力のデータとコンテキスト情報を書式設定します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">必要な場合は、新しいログ ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Writes the information to the log file.</source>
          <target state="translated">ログ ファイルに情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>For more information on creating new log files, see &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;.</source>
          <target state="translated">新しいログ ファイルを作成する方法の詳細については、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The following table lists the output fields in the order they appear.</source>
          <target state="translated">次の表では、出力フィールドを出現順に一覧表示します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The fields are delimited by the string that the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt; property specifies, and are followed by a line terminator.</source>
          <target state="translated">フィールドは文字列で区切られますを&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;プロパティを指定すると、および行終端記号が続きます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>|<bpt id="p1">**</bpt>Field<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>Output condition<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>Description<ept id="p3">**</ept>|   |---------------|--------------------------|---------------------|   |<ph id="ph3">`source`</ph>|Always|The value of <ph id="ph4">`name`</ph>.|   |<ph id="ph5">`severity`</ph>|Always|The enumeration-value name of <ph id="ph6">`eventType`</ph>.|   |<ph id="ph7">`id`</ph>|Always|The string representation of <ph id="ph8">`id`</ph>.|   |<ph id="ph9">`message`</ph>|Always|The string representation of <ph id="ph10">`data`</ph>.|   |<ph id="ph11">`callStack`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt; property of <ph id="ph12">`eventCache`</ph>.|   |<ph id="ph13">`CorrelationID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph14">`eventCache`</ph>.|   |<ph id="ph15">`DateTime`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt; property of <ph id="ph16">`eventCache`</ph>.</source>
          <target state="translated">|<bpt id="p1">**</bpt>フィールド<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>条件を出力<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>説明<ept id="p3">**</ept>|  |---------------|--------------------------|---------------------|  |<ph id="ph3">`source`</ph>|常に |値<ph id="ph4">`name`</ph>|。  |<ph id="ph5">`severity`</ph>|常に |列挙値の名前<ph id="ph6">`eventType`</ph>|。  |<ph id="ph7">`id`</ph>|常に |文字列形式を<ph id="ph8">`id`</ph>|。  |<ph id="ph9">`message`</ph>|常に |文字列形式を<ph id="ph10">`data`</ph>|。  |<ph id="ph11">`callStack`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;プロパティ<ph id="ph12">`eventCache`</ph>|。  |<ph id="ph13">`CorrelationID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph14">`eventCache`</ph>|。  |<ph id="ph15">`DateTime`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;プロパティ<ph id="ph16">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ProcessID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ProcessID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ThreadID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.|   |<ph id="ph3">`Timestamp`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt; property of <ph id="ph4">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ThreadID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>|。  |<ph id="ph3">`Timestamp`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;プロパティ<ph id="ph4">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`HostName`</ph>|When the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; property is <ph id="ph2">`True`</ph>.|The name of the computer.|</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`HostName`</ph>|&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;プロパティが<ph id="ph2">`True`</ph>|。コンピューターの名前です |&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">このメソッドを呼び出したトレース ソースの名前です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙値。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The trace data to emit.</source>
          <target state="translated">出力するトレース データ。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Writes trace information, an array of data objects, and event information to the output file or stream.</source>
          <target state="translated">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームの配列に書き込みます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This method:      1.</source>
          <target state="translated">このメソッド: 1。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Formats the data and context information for output,      2.</source>
          <target state="translated">2 の出力のデータとコンテキスト情報を書式設定します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Creates a new log file, if necessary,      3.</source>
          <target state="translated">新しいログ ファイルを必要に応じて、3。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Writes the information to the log file.</source>
          <target state="translated">ログ ファイルに情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>For more information on creating new log files, see &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;.</source>
          <target state="translated">新しいログ ファイルを作成する方法の詳細については、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This table lists the output fields in the order they appear.</source>
          <target state="translated">次の表では、出力フィールドを出現順に一覧表示します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The fields are delimited by the string that the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt; property specifies, and are followed by a line terminator.</source>
          <target state="translated">フィールドは文字列で区切られますを&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;プロパティを指定すると、および行終端記号が続きます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>|<bpt id="p1">**</bpt>Field<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>Output condition<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>Description<ept id="p3">**</ept>|   |---------------|--------------------------|---------------------|   |<ph id="ph3">`source`</ph>|Always|The value of <ph id="ph4">`name`</ph>.|   |<ph id="ph5">`severity`</ph>|Always|The enumeration-value name of <ph id="ph6">`eventType`</ph>.|   |<ph id="ph7">`id`</ph>|Always|The string representation of <ph id="ph8">`id`</ph>.|   |<ph id="ph9">`message`</ph>|Always|The string consisting of the string representation of each element in <ph id="ph10">`data`</ph>, each separated by &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;.|   |<ph id="ph11">`callStack`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt; property of <ph id="ph12">`eventCache`</ph>.|   |<ph id="ph13">`CorrelationID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph14">`eventCache`</ph>.|   |<ph id="ph15">`DateTime`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt; property of <ph id="ph16">`eventCache`</ph>.</source>
          <target state="translated">|<bpt id="p1">**</bpt>フィールド<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>条件を出力<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>説明<ept id="p3">**</ept>|  |---------------|--------------------------|---------------------|  |<ph id="ph3">`source`</ph>|常に |値<ph id="ph4">`name`</ph>|。  |<ph id="ph5">`severity`</ph>|常に |列挙値の名前<ph id="ph6">`eventType`</ph>|。  |<ph id="ph7">`id`</ph>|常に |文字列形式を<ph id="ph8">`id`</ph>|。  |<ph id="ph9">`message`</ph>|常に |内の各要素の文字列形式から成る文字列<ph id="ph10">`data`</ph>&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;区切って各 |。  |<ph id="ph11">`callStack`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;プロパティ<ph id="ph12">`eventCache`</ph>|。  |<ph id="ph13">`CorrelationID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph14">`eventCache`</ph>|。  |<ph id="ph15">`DateTime`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;プロパティ<ph id="ph16">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ProcessID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ProcessID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ThreadID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.|   |<ph id="ph3">`Timestamp`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt; property of <ph id="ph4">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ThreadID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>|。  |<ph id="ph3">`Timestamp`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;プロパティ<ph id="ph4">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`HostName`</ph>|When the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; property is <ph id="ph2">`True`</ph>.|The name of the computer.|</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`HostName`</ph>|&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;プロパティが<ph id="ph2">`True`</ph>|。コンピューターの名前です |&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The name of the trace source that invoked this method.</source>
          <target state="translated">このメソッドを呼び出したトレース ソースの名前。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙値。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An array of objects to emit as data.</source>
          <target state="translated">データとして出力するオブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message and event information to the output file or stream.</source>
          <target state="translated">トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This method:      1.</source>
          <target state="translated">このメソッド: 1。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Formats the data and context information for output.</source>
          <target state="translated">出力のデータとコンテキスト情報を書式設定します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">必要な場合は、新しいログ ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Writes the information to the log file.</source>
          <target state="translated">ログ ファイルに情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For more information on creating new log files, see &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;.</source>
          <target state="translated">新しいログ ファイルを作成する方法の詳細については、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">次の表は、表示される順序で出力フィールドを一覧表示します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The fields are delimited by the string that the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt; property specifies, and are followed by a line terminator.</source>
          <target state="translated">フィールドは文字列で区切られますを&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;プロパティを指定すると、および行終端記号が続きます&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>|<bpt id="p1">**</bpt>Field<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>Output condition<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>Description<ept id="p3">**</ept>|   |---------------|--------------------------|---------------------|   |<ph id="ph3">`source`</ph>|Always.|The value of <ph id="ph4">`name`</ph>.|   |<ph id="ph5">`severity`</ph>|Always.|The enumeration-value name of <ph id="ph6">`eventType`</ph>.|   |<ph id="ph7">`id`</ph>|Always.|The string representation of <ph id="ph8">`id`</ph>.|   |<ph id="ph9">`message`</ph>|Always.|The value of <ph id="ph10">`message`</ph>.|   |<ph id="ph11">`callStack`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt; property of <ph id="ph12">`eventCache`</ph>.|   |<ph id="ph13">`CorrelationID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph14">`eventCache`</ph>.|   |<ph id="ph15">`DateTime`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt; property of <ph id="ph16">`eventCache`</ph>.</source>
          <target state="translated">|<bpt id="p1">**</bpt>フィールド<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>条件を出力<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>説明<ept id="p3">**</ept>|  |---------------|--------------------------|---------------------|  |<ph id="ph3">`source`</ph>|常にします |。値<ph id="ph4">`name`</ph>|。  |<ph id="ph5">`severity`</ph>|常にします |。列挙値の名前<ph id="ph6">`eventType`</ph>|。  |<ph id="ph7">`id`</ph>|常にします |。文字列形式を<ph id="ph8">`id`</ph>|。  |<ph id="ph9">`message`</ph>|常にします |。値<ph id="ph10">`message`</ph>|。  |<ph id="ph11">`callStack`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;プロパティ<ph id="ph12">`eventCache`</ph>|。  |<ph id="ph13">`CorrelationID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph14">`eventCache`</ph>|。  |<ph id="ph15">`DateTime`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;プロパティ<ph id="ph16">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ProcessID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ProcessID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ThreadID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.|   |<ph id="ph3">`Timestamp`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt; property of <ph id="ph4">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ThreadID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>|。  |<ph id="ph3">`Timestamp`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;プロパティ<ph id="ph4">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`HostName`</ph>|When the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; property is <ph id="ph2">`True`</ph>.|The name of the computer.|</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`HostName`</ph>|&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;プロパティが<ph id="ph2">`True`</ph>|。コンピューターの名前です |&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">このメソッドを呼び出したトレース ソースの名前です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙値。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
          <target state="translated">書き込むメッセージ。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted array of objects, and event information to the output file or stream.</source>
          <target state="translated">トレース情報、書式付き配列、オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This method:      1.</source>
          <target state="translated">このメソッド: 1。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Formats the data and context information for output.</source>
          <target state="translated">出力のデータとコンテキスト情報を書式設定します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Creates a new a new log file, if necessary.</source>
          <target state="translated">新しい新しいログ ファイルでは、必要に応じて作成します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Writes the information to the log file.</source>
          <target state="translated">ログ ファイルに情報を書き込みます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>For more information on creating new log file, see &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;.</source>
          <target state="translated">新しいログ ファイルを作成する方法の詳細については、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;。&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">次の表は、表示される順序で出力フィールドを一覧表示します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The fields are delimited by the string that the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt; property specifies, and followed by a line terminator.</source>
          <target state="translated">フィールドは文字列で区切られますを&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;プロパティを指定し、続けて行終端記号&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>|<bpt id="p1">**</bpt>Field<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>Output condition<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>Description<ept id="p3">**</ept>|   |---------------|--------------------------|---------------------|   |<ph id="ph3">`source`</ph>|Always|The value of <ph id="ph4">`name`</ph>.|   |<ph id="ph5">`severity`</ph>|Always|The enumeration-value name of <ph id="ph6">`eventType`</ph>.|   |<ph id="ph7">`id`</ph>|Always|The string representation of <ph id="ph8">`id`</ph>.|   |<ph id="ph9">`message`</ph>|Always|The data in <ph id="ph10">`args`</ph> formatted with the <ph id="ph11">`format`</ph> string and using the invariant culture for string conversions.|   |<ph id="ph12">`callStack`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt; property of <ph id="ph13">`eventCache`</ph>.|   |<ph id="ph14">`CorrelationID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph15">`eventCache`</ph>.|   |<ph id="ph16">`DateTime`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt; property of <ph id="ph17">`eventCache`</ph>.</source>
          <target state="translated">|<bpt id="p1">**</bpt>フィールド<ept id="p1">**</ept><ph id="ph1">|</ph><bpt id="p2">**</bpt>条件を出力<ept id="p2">**</ept><ph id="ph2">|</ph><bpt id="p3">**</bpt>説明<ept id="p3">**</ept>|  |---------------|--------------------------|---------------------|  |<ph id="ph3">`source`</ph>|常に |値<ph id="ph4">`name`</ph>|。  |<ph id="ph5">`severity`</ph>|常に |列挙値の名前<ph id="ph6">`eventType`</ph>|。  |<ph id="ph7">`id`</ph>|常に |文字列形式を<ph id="ph8">`id`</ph>|。  |<ph id="ph9">`message`</ph>|常に |内のデータ<ph id="ph10">`args`</ph>でフォーマットされている、<ph id="ph11">`format`</ph>文字列および文字列変換にインバリアント カルチャを使用します |。  |<ph id="ph12">`callStack`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;プロパティ<ph id="ph13">`eventCache`</ph>|。  |<ph id="ph14">`CorrelationID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph15">`eventCache`</ph>|。  |<ph id="ph16">`DateTime`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;プロパティ<ph id="ph17">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ProcessID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ProcessID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`ThreadID`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The &lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt; property of <ph id="ph2">`eventCache`</ph>.|   |<ph id="ph3">`Timestamp`</ph>|When the &lt;xref:System.Diagnostics.TraceOptions&gt; flag is set in the &lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt; property.|The string representation of the &lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt; property of <ph id="ph4">`eventCache`</ph>.</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`ThreadID`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;プロパティ<ph id="ph2">`eventCache`</ph>|。  |<ph id="ph3">`Timestamp`</ph>|&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;プロパティで&lt;xref:System.Diagnostics.TraceOptions&gt;フラグを設定するとします |。文字列形式を、&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;プロパティ<ph id="ph4">`eventCache`</ph>&lt;/xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;&lt;/xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;&lt;/xref:System.Diagnostics.TraceOptions&gt;&lt;/xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The invariant culture is used for the string conversion.|   |<ph id="ph1">`HostName`</ph>|When the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; property is <ph id="ph2">`True`</ph>.|The name of the computer.|</source>
          <target state="translated">インバリアント カルチャが文字列の変換を使用します |。  |<ph id="ph1">`HostName`</ph>|&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;プロパティが<ph id="ph2">`True`</ph>|。コンピューターの名前です |&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">このメソッドを呼び出したトレース ソースの名前です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values.</source>
          <target state="translated">1 つ、 <bpt id="p1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列挙値。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
          <target state="translated">イベントの数値識別子。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <ph id="ph1">`args`</ph> array.</source>
          <target state="translated">書式指定文字列内のオブジェクトに対応する、0 個以上の書式項目を含む、<ph id="ph1">`args`</ph>配列。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> array containing zero or more objects to format.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>書式指定する&amp;0; 個以上のオブジェクトを含む配列。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Writes a verbatim message to disk, without any additional context information.</source>
          <target state="translated">追加のコンテキスト情報がないまま、ディスクにもそのままメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The Write method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">Write メソッドは、ログ ファイルは、追加のコンテキスト情報なしに、特定のメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Use the one of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt; methods to include the context information in the log output.</source>
          <target state="translated">いずれかを使用して、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;、ログの出力にコンテキスト情報を含める方法です&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The custom message to write.</source>
          <target state="translated">記述するカスタム メッセージです。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</source>
          <target state="translated">現在の行終端記号、追加のコンテキスト情報なしの後に、ディスクにもそのままメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The WriteLine method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">WriteLine メソッドでは、ログ ファイルは、追加のコンテキスト情報なしに、特定のメッセージを書き込みます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Use the one of the &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt; methods to include the context information in the log output.</source>
          <target state="translated">いずれかを使用して、 &lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;、ログの出力にコンテキスト情報を含める方法です&lt;/xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The custom message to write.</source>
          <target state="translated">記述するカスタム メッセージです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>