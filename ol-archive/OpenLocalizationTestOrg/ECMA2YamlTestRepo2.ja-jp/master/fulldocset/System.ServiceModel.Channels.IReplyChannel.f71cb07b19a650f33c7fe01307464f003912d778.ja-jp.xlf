<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3fff38db79070ec98d24b9e25500764313bb8b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Channels.IReplyChannel.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0ad7ba9be838b0ca44643c6f398e673a93fa8e6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3498a4f16cf1f679f8e10ca2a89443b060c8781</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface that a channel must implement to be on the receiving side of a request-reply communication between messaging endpoints.</source>
          <target state="translated">チャネルがメッセージング エンドポイント間の要求/応答通信の受信側になるために実装する必要があります、インターフェイスを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The IReplyChannel interface includes synchronous and asynchronous variants of a &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; method return an &lt;xref:System.ServiceModel.Channels.RequestContext&gt; that can be used to construct replies to received requests.</source>
          <target state="translated">IReplyChannel インターフェイスには、同期および非同期のバリエーションが含まれています、&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;メソッドの戻り値、&lt;xref:System.ServiceModel.Channels.RequestContext&gt;受信した要求に対する応答を構築するために使用できる&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</source>
          <target state="translated">コントラクトには、受信、受信 try およびメッセージ用の待機の機能の同期および非同期のバリエーションが含まれています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An IReplyChannel is not necessarily bound to a single sender.</source>
          <target state="translated">必ずしも、IReplyChannel は、単一の送信者にはバインドされません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Other channels and channel interfaces provide correlation between the sender and the reply channel, but the base contract makes no such restriction.</source>
          <target state="translated">その他のチャネルおよびチャネル インターフェイスは、送信側と応答チャネル間の相関関係を提供しますが、基本コントラクトにはこのような制限はありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The pull model is used with an IReplyChannel to receive messages.</source>
          <target state="translated">プル モデルは、メッセージを受信する、IReplyChannel で使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This model consists of calling &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; (or one of its variants) and then waiting for a message to arrive.</source>
          <target state="translated">このモデルは、呼び出し元の&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;(またはそのバリエーションの&amp;1; つ)、メッセージが到着するを待機しています&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive an available request with a default timeout.</source>
          <target state="translated">既定のタイムアウトで使用可能な要求を受信する非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The BeginReceiveRequest method implements the standard pattern for invoking &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt; asynchronously.</source>
          <target state="translated">BeginReceiveRequest メソッドを呼び出すための標準パターンを実装する&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;非同期的にします&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The default timeout is 1 minute.</source>
          <target state="translated">既定のタイムアウトは、1 分です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If a receive timeout is set on the binding used to configure the connection, then that value is used.</source>
          <target state="translated">接続を構成するために使用するバインディングで受信タイムアウトを設定すると、その値が使用されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; if you want to specify an explicit timeout with the call that overrides these other values.</source>
          <target state="translated">使用して&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;これら他の値をオーバーライドする呼び出しで明示的なタイムアウトを指定するかどうか&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">受信要求メッセージ、最大メッセージ サイズが使用されるバインドで許可されているを超える場合は、&lt;xref:System.ServiceModel.QuotaExceededException&gt;がスローされます&lt;/xref:System.ServiceModel.QuotaExceededException&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">メッセージの最大サイズを設定、&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">既定値は 65536 バイトです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;非同期の通知を受信するデリゲートは、要求操作が完了したことを受信します&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">要求操作の非同期受信に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous reception of the request.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;要求の非同期受信を参照する&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive an available request with a specified timeout.</source>
          <target state="translated">タイムアウトを指定して使用可能な要求を受信する非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The BeginReceiveRequest method implements the standard pattern for invoking &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;asynchronously.</source>
          <target state="translated">BeginReceiveRequest メソッドを呼び出すための標準パターンを実装する&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;非同期的にします&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%28System.TimeSpan%29&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The timeout set on this method overrides a receive timeout set on the binding that is used to configure the connection.</source>
          <target state="translated">このメソッドで設定するタイムアウトは、受信タイムアウトの接続を構成するために使用されるバインディングの設定を上書きします。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">受信要求メッセージ、最大メッセージ サイズが使用されるバインドで許可されているを超える場合は、&lt;xref:System.ServiceModel.QuotaExceededException&gt;がスローされます&lt;/xref:System.ServiceModel.QuotaExceededException&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">メッセージの最大サイズを設定、&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">既定値は 65536 バイトです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;使用可能な要求の受信を待機する時間の間隔を指定します&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;非同期の通知を受信するデリゲートは、要求操作が完了したことを受信します&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">要求操作の非同期受信に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous reception of the request.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;要求の非同期受信を参照する&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it.</source>
          <target state="translated">指定したタイムアウトと状態オブジェクトが関連付けられている要求メッセージを受信する非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the asynchronous BeginTryReceiveRequest method when you need the application processing to continue without waiting.</source>
          <target state="translated">アプリケーションの処理を待機せずに続行する必要がある場合は、非同期の BeginTryReceiveRequest メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Use one of the synchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt; methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</source>
          <target state="translated">1 つの同期を使用して&lt;xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;メソッドが、現在のスレッドが要求メッセージに、またはタイムアウト間隔が経過するまでに応答している間にブロックされてもかまわない場合&lt;/xref:System.ServiceModel.Channels.IReplyChannel.TryReceiveRequest%28System.TimeSpan%2CSystem.ServiceModel.Channels.RequestContext%40%29&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">このメソッドは、通知をコールバックを通じて操作のイベント ハンドラーの id を受け取ります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a message becomes available in the channel or the time out occurs.</source>
          <target state="translated">操作は、メッセージがチャネルで使用できるようになるか、タイムアウトが発生するまでは完了しません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;がタイムアウトして返す前に完了する要求の受信操作の時間を指定する<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.TimeSpan&gt; 。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;非同期の通知を受信するデリゲートは、要求操作が完了したことを受信します&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">要求操作の非同期受信に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous receive request operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;要求の非同期受信操作を参照する&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous request operation that has a specified time out and state object associated with it.</source>
          <target state="translated">指定したタイムアウトと状態オブジェクトが関連付けられている要求の非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Use the synchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt; method when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">同期を使用して&lt;xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;メソッドが、現在のスレッドがキューに到着する要求メッセージを待機している間にブロックされてもかまわない場合&lt;/xref:System.ServiceModel.Channels.IReplyChannel.WaitForRequest%28System.TimeSpan%29&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">指定したスレッドがブロックを<ph id="ph1">`timeout`</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">このメソッドは、通知をコールバックを通じて操作のイベント ハンドラーの id を受け取ります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The operation is not complete until either a request message becomes available in the channel or the time out occurs.</source>
          <target state="translated">要求メッセージがチャネルで使用できるようになるとしているか、タイムアウトが発生するまで、操作は完了しません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies the interval of time to wait for the reception of an available request.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;使用可能な要求の受信を待機する時間の間隔を指定します&lt;/xref:System.TimeSpan&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that receives the notification of the asynchronous receive that a request operation completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;非同期の通知を受信するデリゲートは、要求操作が完了したことを受信します&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</source>
          <target state="translated">要求操作の非同期受信に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that references the asynchronous operation to wait for a request message to arrive.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;要求メッセージが到着するまで待機する非同期操作を参照する&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to receive an available request.</source>
          <target state="translated">使用可能な要求を受信する非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">受信要求メッセージ、最大メッセージ サイズが使用されるバインドで許可されているを超える場合は、&lt;xref:System.ServiceModel.QuotaExceededException&gt;がスローされます&lt;/xref:System.ServiceModel.QuotaExceededException&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">メッセージの最大サイズを設定、&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">既定値は 65536 バイトです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned by a call to the &lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt; method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;への呼び出しによって返される、&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt;メソッド&lt;/xref:System.ServiceModel.Channels.IInputChannel.BeginReceive*&gt;&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct a reply to the request.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;要求に対する応答を構築するために使用します&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous operation to receive a request message.</source>
          <target state="translated">要求メッセージを受信する指定した非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; returned by a call to the <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;への呼び出しによって返される、 <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph>メソッド&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; received.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;受け取りました&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request message is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した期間が経過; の前に要求メッセージを受信する場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Completes the specified asynchronous wait-for-a-request message operation.</source>
          <target state="translated">指定した非同期の要求用の待機メッセージの処理を完了します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that identifies the <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph> operation to finish, and from which to retrieve an end result.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;を識別する、 <ph id="ph1">&amp;lt;</ph>xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29<ph id="ph2">&amp;gt;</ph>操作が終了して、最終的な結果を取得する&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した期間が経過; の前に、要求を受け取った場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the address on which this reply channel receives messages.</source>
          <target state="translated">この応答チャネルがメッセージを受信するアドレスを取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.EndpointAddress&gt; on which this reply channel receives messages.</source>
          <target state="translated">&lt;xref:System.ServiceModel.EndpointAddress&gt;この応答チャネルがメッセージを受信する&lt;/xref:System.ServiceModel.EndpointAddress&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">1 つが利用可能な場合は、受信した要求のコンテキストを返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">コンテキストが使用できない場合ができるまで待機します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Channels.RequestContext&gt; encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;要求メッセージとそのメッセージに返信するためのメカニズムをカプセル化します。&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ReceiveRequest can be called multiple times or concurrently.</source>
          <target state="translated">ReceiveRequest を呼び出すことが複数回または同時に行います。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Only one ReceiveRequest call completes per request received.</source>
          <target state="translated">受信した要求ごとに&amp;1; つだけの ReceiveRequest 呼び出しが完了しました。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">受信要求メッセージ、最大メッセージ サイズが使用されるバインドで許可されているを超える場合は、&lt;xref:System.ServiceModel.QuotaExceededException&gt;がスローされます&lt;/xref:System.ServiceModel.QuotaExceededException&gt;。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">メッセージの最大サイズを設定、&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">既定値は 65536 バイトです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct replies.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;応答の作成に使用します&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns the context of the request received, if one is available.</source>
          <target state="translated">1 つが利用可能な場合は、受信した要求のコンテキストを返します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a context is not available, waits until there is one available.</source>
          <target state="translated">コンテキストが使用できない場合ができるまで待機します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Channels.RequestContext&gt; encapsulates the request message and a mechanism for replying to that message.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;要求メッセージとそのメッセージに返信するためのメカニズムをカプセル化します。&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; can be called multiple times or concurrently.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;複数回呼び出すことができます、または同時にします。&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Only one &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; call completes per request received.</source>
          <target state="translated">1 つだけ&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;受信した要求ごとに呼び出しが完了する&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If the request message received is larger that the maximum message size allowed by the binding being used, a &lt;xref:System.ServiceModel.QuotaExceededException&gt; is thrown.</source>
          <target state="translated">受信要求メッセージ、最大メッセージ サイズが使用されるバインドで許可されているを超える場合は、&lt;xref:System.ServiceModel.QuotaExceededException&gt;がスローされます&lt;/xref:System.ServiceModel.QuotaExceededException&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The maximum message size is set by the &lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt; property.</source>
          <target state="translated">メッセージの最大サイズを設定、&lt;xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;プロパティ&lt;/xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default value is 65536 bytes.</source>
          <target state="translated">既定値は 65536 バイトです。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive of a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;要求操作の受信がタイムアウトして返す前に完了する必要がある期間を指定する<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.TimeSpan&gt; 。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; used to construct replies.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;応答の作成に使用します&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether a request is received before a specified interval of time elapses.</source>
          <target state="translated">指定した期間が経過する前に、要求を受け取ったかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Use TryReceiveRequest when it is acceptable for the current thread to be blocked while it waits for a request message to arrive in the queue.</source>
          <target state="translated">現在のスレッドがキューに到着する要求メッセージを待機している間にブロックされてもかまわない場合は、TryReceiveRequest を使用します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">指定したスレッドがブロックを<ph id="ph1">`timeout`</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you need the application processing to continue without waiting, use the asynchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.</source>
          <target state="translated">アプリケーションの処理を待機せずに続行する場合を使用して、非同期&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッド&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginTryReceiveRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long the receive of a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;要求操作の受信がタイムアウトして返す前に完了する必要がある期間を指定する<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.TimeSpan&gt; 。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.RequestContext&gt; received.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;受け取りました&lt;/xref:System.ServiceModel.Channels.RequestContext&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request message is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した期間が経過; の前に要求メッセージを受信する場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether a request message is received before a specified interval of time elapses.</source>
          <target state="translated">指定した期間が経過する前に要求メッセージを受信するかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Calling WaitForRequest does not result in a request message being received or processed in any way.</source>
          <target state="translated">WaitForRequest を呼び出していない結果が受信または任意の方法で処理される要求メッセージ。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッドは、主に、トランザクション処理のシナリオでユーザーがトランザクションを使用してメッセージを受信するが存在しています&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When using just &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; normally for this, the user must create the transaction, and then call &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; and hope the message arrives before the transaction times out, which may not be possible.</source>
          <target state="translated">だけを使用する場合&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;これには、通常のユーザー必要があります、トランザクションを作成して、呼び出す&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;し、トランザクションがタイムアウトするまで、できない可能性がありますメッセージが到着することを期待します&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Instead, the user can call WaitForRequest and specify the time out (even infinite), then when a message arrives they can open the transaction, call &lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt; and be confident that they can get the message back before the transaction expires.</source>
          <target state="translated">代わりに、ユーザーことができます WaitForRequest を呼び出してタイムアウト (無限も可能) を指定し、トランザクションを開くことができます、メッセージが到着したときに呼び出す&lt;xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;し、トランザクションの有効期限が切れる前に、メッセージを入手できることが保証されます&lt;/xref:System.ServiceModel.Channels.IReplyChannel.ReceiveRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use WaitForRequest when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">現在のスレッドがキューに到着するメッセージを待機している間にブロックされてもかまわない場合は、WaitForRequest を使用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">指定したスレッドがブロックを<ph id="ph1">`timeout`</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If you need the application processing to continue without waiting, use the asynchronous &lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; method.</source>
          <target state="translated">アプリケーションの処理を待機せずに続行する場合を使用して、非同期&lt;xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッド&lt;/xref:System.ServiceModel.Channels.IReplyChannel.BeginWaitForRequest%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.TimeSpan&gt; that specifies how long a request operation has to complete before timing out and returning <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;要求時間を指定する操作がタイムアウトして返す前に完了する必要がある<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&lt;/xref:System.TimeSpan&gt; 。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a request is received before the specified interval of time elapses; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定した期間が経過; の前に、要求を受け取った場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>