<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad434fb317836af2a2219fa028a354de2456f3c6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SymmetricSecurityKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bb510d10fbf56da369cc07caedacc9249ddf364</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f58af0ea9e3a1e42810333083d39802683686dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class for all keys that are generated using symmetric algorithms.</source>
          <target state="translated">対称アルゴリズムを使用して生成されたすべてのキーの抽象基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Typically, this class is used by the infrastructure to transform XML using a symmetric key.</source>
          <target state="translated">通常、このクラスは、対称キーを使用して XML を変換するインフラストラクチャによって使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SymmetricSecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SymmetricSecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</source>
          <target state="translated">派生クラスでオーバーライドされると、現在のキーの指定した暗号アルゴリズムとパラメーターを使用して派生キーが生成されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To specify P-SHA1 as the cryptographic algorithm, use the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt; field.</source>
          <target state="translated">P-sha1 を暗号アルゴリズムとして指定するには、使用、&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;フィールド&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A URI that represents the cryptographic algorithm to use to generate the derived key.</source>
          <target state="translated">派生キーの生成に使用する暗号アルゴリズムを表す URI。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the label parameter for the cryptographic algorithm.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;暗号アルゴリズムのラベル パラメーターを格納している&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the nonce that is used to create a derived key.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;派生キーの作成に使用される nonce を格納している&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
          <target state="translated">派生キーのサイズ。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The position at which the derived key is located in the byte array that is returned from this method.</source>
          <target state="translated">派生キーが現在このメソッドから返されるバイト配列内にある場合は、位置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the derived key.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;派生キーを格納している&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した暗号アルゴリズムを使用してテキストが暗号を復号化する変換を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Use the fields that represent decryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">内の復号化アルゴリズムを表すフィールドを使用して、&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;アルゴリズムを指定するクラス&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</source>
          <target state="translated">暗号の暗号化された XML などのテキストを復号化する暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;初期化ベクターを格納している (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 指定したアルゴリズムの&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the decryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>復号化変換を表すです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した暗号アルゴリズムを使用して XML を暗号化する変換を取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use the fields that represent decryption algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">内の復号化アルゴリズムを表すフィールドを使用して、&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;アルゴリズムを指定するクラス&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A cryptographic algorithm that encrypts XML.</source>
          <target state="translated">XML を暗号化する暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) for the specified algorithm.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;初期化ベクターを格納している (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 指定したアルゴリズムの&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the encryption transform.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.ICryptoTransform"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>暗号化変換を表すです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the specified cryptographic algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、初期化ベクトルのビット単位のサイズを取得 (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 指定した暗号アルゴリズムに必要なです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cryptographic algorithm to get the size of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">初期化ベクターのサイズを取得する暗号アルゴリズム (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the initialization vector (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that is required for the cryptographic algorithm specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">初期化ベクトルのビット単位のサイズ (<bpt id="p1">&lt;xref uid="langword_csharp_IV" name="IV" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) で指定した暗号アルゴリズムに必要な<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">algorithm</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したキー付きハッシュ アルゴリズムのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Use the fields that represent keyed hash algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">内のキー付きハッシュ アルゴリズムを表すフィールドを使用して、&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;アルゴリズムを指定するクラス&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The keyed hash algorithm to get an instance of.</source>
          <target state="translated">インスタンスを取得するキー付きハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the keyed hash algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.KeyedHashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>キー付きハッシュ アルゴリズムを表すです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets an instance of the specified symmetric algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した対称アルゴリズムのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Use the fields that represent symmetric algorithms in the &lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt; class to specify the algorithm.</source>
          <target state="translated">内の対称アルゴリズムを表すフィールドを使用して、&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;アルゴリズムを指定するクラス&lt;/xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm to get an instance of.</source>
          <target state="translated">インスタンスを取得する対称アルゴリズム。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the symmetric algorithm.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>対称アルゴリズムを表すです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the bytes that represent the symmetric key.</source>
          <target state="translated">派生クラスでオーバーライドされると、対称キーを表すバイトを取得します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Byte&gt; that contains the symmetric key.</source>
          <target state="translated">配列&lt;xref:System.Byte&gt;対称キーを格納している&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>