<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4097cf050aef4bc35af748b62f1fd6045f6034e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf8d3d55db6929f736ccf14e8fc03b2d648fc536</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b0ec3e936713c1ecd4a36e6320d3bd0838d0f16</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Marshals the COM <bpt id="p1">&lt;xref uid="langword_csharp_IDispatch" name="IDispatch" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface to the .NET Framework &lt;xref:System.Collections.IEnumerable&gt; interface, and vice versa.</source>
          <target state="translated">COM マーシャ リング<bpt id="p1">&lt;xref uid="langword_csharp_IDispatch" name="IDispatch" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>インターフェイス、.NET Framework を&lt;xref:System.Collections.IEnumerable&gt;インターフェイス、およびその逆&lt;/xref:System.Collections.IEnumerable&gt;。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This custom marshaler marshals <ph id="ph1">`IDispatch`</ph> to &lt;xref:System.Collections.IEnumerable&gt; and marshals &lt;xref:System.Collections.IEnumerable&gt; to <ph id="ph2">`IDispatch`</ph> when a member with a DISPID of -4 exists.</source>
          <target state="translated">このカスタム マーシャラーをマーシャ リング<ph id="ph1">`IDispatch`</ph>に&lt;xref:System.Collections.IEnumerable&gt;とマーシャ リング&lt;xref:System.Collections.IEnumerable&gt;に<ph id="ph2">`IDispatch`</ph>-4 の DISPID を持つメンバーが存在する場合&lt;/xref:System.Collections.IEnumerable&gt;&lt;/xref:System.Collections.IEnumerable&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you use the Type Library Importer (Tlbimp.exe) to create a class that implements &lt;xref:System.Collections.IEnumerable&gt; , the CLR uses this custom marshaler automatically to bridge COM enumerators and .NET enumerators.</source>
          <target state="translated">実装するクラスを作成するタイプ ライブラリ インポーター (Tlbimp.exe) を使用すると&lt;xref:System.Collections.IEnumerable&gt;、CLR がブリッジ COM 列挙子、および .NET の列挙子に自動的にこのカスタム マーシャラーを使用します&lt;/xref:System.Collections.IEnumerable&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; results in <ph id="ph1">`IDispatch.Invoke`</ph> being called with a DISPID of -4, and vice versa.</source>
          <target state="translated">呼び出す&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;結果<ph id="ph1">`IDispatch.Invoke`</ph>-4 の DISPID を持つ呼び出されると、その逆&lt;/xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">不要になったときに、管理対象のデータの必要なクリーンアップを実行します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The CLR calls this method to clean up managed data allocated in the &lt;xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged%2A&gt; method.</source>
          <target state="translated">CLR で割り当てられた管理対象のデータをクリーンアップするのには、このメソッドを呼び出し、&lt;xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged%2A&gt;メソッド&lt;/xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalNativeToManaged%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The managed object to be destroyed.</source>
          <target state="translated">マネージ オブジェクトを破棄します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">不要になったときに、アンマネージ データの必要なクリーンアップを実行します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The CLR calls this method to clean up the unmanaged data allocated in the &lt;xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative%2A&gt; method.</source>
          <target state="translated">CLR で割り当てられたアンマネージ データをクリーンアップするのには、このメソッドを呼び出し、&lt;xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative%2A&gt;メソッド&lt;/xref:System.Runtime.InteropServices.CustomMarshalers.EnumerableToDispatchMarshaler.MarshalManagedToNative%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">破棄するアンマネージ データへのポインター。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an instance of the custom marshaler.</source>
          <target state="translated">カスタム マーシャラーのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All custom marshalers must implement this method, although it is not part of the &lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt; interface definition.</source>
          <target state="translated">ありませんが、すべてのカスタム マーシャラーは、このメソッドを実装する必要がありますの一部、&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;インターフェイス定義です&lt;/xref:System.Runtime.InteropServices.ICustomMarshaler&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>String "cookie" parameter that can be used by the custom marshaler.</source>
          <target state="translated">カスタム マーシャラーで使用できる文字列"cookie"パラメーター。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An instance of the custom marshaler.</source>
          <target state="translated">カスタム マーシャラーのインスタンス。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes of the unmanaged data to be marshaled.</source>
          <target state="translated">マーシャ リングされるアンマネージ データのバイト単位のサイズを返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</source>
          <target state="translated">値の型のカスタム マーシャ リングは、.NET Framework ではサポートされていません、このメソッドは常に-1 を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-1 to indicate the type this marshaler handles is not a value type.</source>
          <target state="translated">マーシャラーはこの処理の種類を示す-1 は、値型ではありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Marshals an object from managed code to unmanaged code.</source>
          <target state="translated">マネージ コードからアンマネージ コードにオブジェクトをマーシャ リングします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</source>
          <target state="translated">CLR はそのオブジェクトをマネージ コードからアンマネージ コードに変換するマネージ オブジェクトのインスタンスを指定してこのメソッドであり、適切なアンマネージ オブジェクトに、そのオブジェクトの COM のビューを表すへのポインターを返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The managed object to be converted.</source>
          <target state="translated">変換するマネージ オブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A pointer to the unmanaged object.</source>
          <target state="translated">アンマネージ オブジェクトへのポインター。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pManagedObj&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pManagedObj&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Marshals an object from unmanaged code to managed code.</source>
          <target state="translated">アンマネージ コードからマネージ コードにオブジェクトをマーシャ リングします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</source>
          <target state="translated">CLR では、アンマネージ コードからマネージ コードにそのオブジェクトを変換するアンマネージ オブジェクトを指すポインターを指定してこのメソッドを呼び出しし、アンマネージ データのマネージ ビューを表すマネージ オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A pointer to the unmanaged object to be converted.</source>
          <target state="translated">変換するアンマネージ オブジェクトへのポインター。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A managed object.</source>
          <target state="translated">マネージ オブジェクトです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pNativeData&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;pNativeData&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>