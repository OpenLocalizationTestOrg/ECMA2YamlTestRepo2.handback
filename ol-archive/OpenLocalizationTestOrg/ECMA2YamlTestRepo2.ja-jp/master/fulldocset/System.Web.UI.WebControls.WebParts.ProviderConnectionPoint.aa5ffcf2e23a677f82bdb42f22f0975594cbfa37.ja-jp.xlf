<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb8f9739e674c5062a08210f1e8f16b2798f50ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18d4c85a6ed3e01f39beec0a884c2a08ef6b77cd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07d6684782aa957af7231de75350efc1a406fb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</source>
          <target state="translated">コンシューマーとの接続を作成するプロバイダーとして機能するサーバー コントロールを有効にする接続ポイント オブジェクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">すべての Web パーツには、2 つのサーバー コントロールの間の接続が、各コントロールは、その他のコントロールへの接続および指定するか、コントロールがプロバイダーまたは接続のコンシューマーとして指定されているかどうかに応じて、データを使用することを有効にするに関連付けられた接続ポイント オブジェクト (その他の要件) が必要です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;オブジェクトには一般に、コントロールが別のコントロールおよびと共有できるデータの種類に接続できる方法の詳細が含まれています&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a control acting as the provider in a connection, its connection point must be a ProviderConnectionPoint object.</source>
          <target state="translated">接続のプロバイダーとして機能するコントロール、その接続ポイントは ProviderConnectionPoint オブジェクトである必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</source>
          <target state="translated">Web パーツの接続および接続ポイントの詳細については、「参照」セクションのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a ProviderConnectionPoint object, several steps are required:      1.</source>
          <target state="translated">ProviderConnectionPoint オブジェクトを作成するにはいくつかの手順が必要: 1。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create an interface.</source>
          <target state="translated">インターフェイスを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</source>
          <target state="translated">ときにコンシューマーとプロバイダーの共有データ、それは、インターフェイスのインスタンスを取得し、コンシューマーにそのインスタンスを返すことで。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implement the interface in a provider.</source>
          <target state="translated">プロバイダーのインターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; or other server control (any type of server control in a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone can be used) that will be the provider must implement the interface created in the first step.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;またはその他のサーバー コントロール (任意の型でのサーバー コントロールの&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;ゾーンを使用できます)、プロバイダーは、最初の手順で作成したインターフェイスを実装する必要がありますになります&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.WebPart&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Identify a callback method.</source>
          <target state="translated">コールバック メソッドを識別します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A method in the provider must be identified as the callback method to establish a connection.</source>
          <target state="translated">プロバイダーのメソッドは、接続を確立するために、コールバック メソッドとして識別される必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method returns an instance of the implemented interface to a consumer.</source>
          <target state="translated">このメソッドは、コンシューマーに実装されたインターフェイスのインスタンスを返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Web Parts approach for identifying a callback method in the provider is to add a <ph id="ph1">`ConnectionProvider`</ph> metadata attribute (defined by the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt; class) to the method that returns the interface instance.</source>
          <target state="translated">プロバイダーのコールバック メソッドを識別するための Web パーツ方法は、追加する、<ph id="ph1">`ConnectionProvider`</ph>メタデータの属性 (によって定義された、&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;クラス) インターフェイスのインスタンスを返すメソッド&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the attribute is added, the only required parameter is a display name to use for the provider connection point.</source>
          <target state="translated">属性が追加されると、唯一必須のパラメーターは、プロバイダー接続ポイントを使用する表示名です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional parameters can also be added, such as an ID for the connection point.</source>
          <target state="translated">省略可能なパラメーター追加することも、接続ポイントの ID などです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</source>
          <target state="translated">プロバイダーとして機能するコントロールを備えたされましたが、コントロール (装備され使用可能なコンシューマーのコントロールが同様があると仮定) 接続に参加できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">Web ページのマークアップで、宣言型の静的な接続を作成する開発者が使用して、<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`ConnectionProvider`</ph> attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ProviderConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">場合、<ph id="ph1">`ConnectionProvider`</ph>コールバック メソッドを識別するプロバイダーのソース コード内の属性は、接続ポイントの ID を指定し、その値を割り当てる必要があります、<ph id="ph2">`ProviderConnectionPointID`</ph>属性、<ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph>ページの要素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</source>
          <target state="translated">開発者がプロバイダー接続ポイントの ID を指定する&amp;1; つの理由は、プロバイダーのコントロールに複数の接続ポイントがあるかどうかです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the <ph id="ph1">`ProviderConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt; field.</source>
          <target state="translated">割り当てられる値がない場合は、ID プロバイダーのコントロールでのプロバイダー接続ポイントが指定されていない、<ph id="ph1">`ProviderConnectionPointID`</ph>から取得した既定値を使用して、接続が作成するため、ページで、属性、&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;フィールド&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a connection in code, developers must create a new ProviderConnectionPoint object by calling the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method and passing to it the ID of the provider control, along with the ID or index of the defined ProviderConnectionPoint object in the provider control.</source>
          <target state="translated">コードで接続を作成する開発者は、呼び出すことによって新しい ProviderConnectionPoint オブジェクトを作成する必要があります、&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;メソッドの ID またはインデックス プロバイダー コントロールに ProviderConnectionPoint オブジェクトの定義と共に、プロバイダー コントロールの ID を渡すします&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The returned ProviderConnectionPoint object, along with a reference to the provider control, a reference to the consumer control, and a corresponding &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; object, are all passed to the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; method to create a new &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; object.</source>
          <target state="translated">ProviderConnectionPoint の返されたオブジェクトで、プロバイダー コントロールへの参照を対応するコンシューマー コントロールへの参照と共に&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;オブジェクトでは、すべてに渡される、&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;メソッドを作成、新しい&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;オブジェクト&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</source>
          <target state="translated">開発者は、宣言またはプログラムによって、接続を確立するための一部として、プロバイダー接続ポイントを使用できますが、ユーザーも、ユーザー インターフェイス (UI) 経由の接続を確立するためにプロバイダー接続ポイントと対話できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If developers declare a &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt; control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">開発者は、宣言する場合、&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;コントロール、Web ページ上ユーザー接続を作成するためのランタイムの UI を提供します&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</source>
          <target state="translated">ユーザーをクリックして接続を確立するための出発点として、コンシューマーのコントロールを選択する場合、connect 動詞 (プロバイダーを選択することも以外の場合は、結果として得られる接続に違いはありません)、使用可能なプロバイダー接続ポイント (またはポイントが複数の場合) の表示名のドロップダウン リスト コントロールが UI に表示されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Users must select a provider connection point to create a connection.</source>
          <target state="translated">ユーザーは、接続を作成するプロバイダー接続ポイントを選択する必要があります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A ProviderConnectionPoint object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint オブジェクトは、特定のプロバイダーのコントロールを直接関連付けます、基本&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;クラス&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;から継承プロパティでは、接続の詳細を格納</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, in the inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property, a provider connection point keeps the type of interface returned by the provider.</source>
          <target state="translated">たとえばでは、継承された&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;プロパティ、プロバイダー接続ポイントは、プロバイダーによって返されるインターフェイスの型を保持します&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">場合は、プロバイダーとの接続を同じ作業両方のコンシューマー インターフェイスの型をコントロールは互換性のあるおよび直接接続を形成することです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object to translate the provider connection point's &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; value into a type that the consumer can work with.</source>
          <target state="translated">互換性がありませんし、使用する必要があります、プロバイダーとコンシューマーは、同じインターフェイス型を扱うことはできない場合、&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;プロバイダー接続ポイントの翻訳をオブジェクト&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;、コンシューマーが使用できる型に値&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Another important inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt; property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</source>
          <target state="translated">他の重要な継承されたプロパティは、&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;をユーザーが、プロバイダー接続を選択するための UI に表示するフレンドリ名を提供するプロパティが接続を作成するときにポイントします&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionProvider`</ph> attribute to the callback method in a provider control.</source>
          <target state="translated">開発者を追加するときに、表示名は必須のパラメーター、<ph id="ph1">`ConnectionProvider`</ph>属性をプロバイダーのコントロールのコールバック メソッド。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt; property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</source>
          <target state="translated">継承された&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;プロパティは上に示されて、プロバイダーが複数の接続ポイントを持つことのプロバイダー接続ポイントの一意識別子を提供するために便利です&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A provider can have multiple ProviderConnectionPoint objects defined in it, and in this case, when developers add the <ph id="ph1">`ConnectionProvider`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">プロバイダーとに定義された、この場合は、開発者は、追加時に複数の ProviderConnectionPoint オブジェクトを持つことができます、<ph id="ph1">`ConnectionProvider`</ph>属性、メソッドに各接続ポイントを区別するために ID 値を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>One other notable inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt; property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</source>
          <target state="translated">その他の注目すべき継承されたプロパティは&amp;1; つは、&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;プロパティで、プロバイダー接続ポイントが複数のコンシューマーに同時に接続できるかどうかを示します&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property value is <ph id="ph1">`true`</ph> by default for provider connection points (whereas it defaults to <ph id="ph2">`false`</ph> for consumer connection points).</source>
          <target state="translated">このプロパティの値が<ph id="ph1">`true`</ph>既定では、プロバイダー接続ポイント (既定値は一方<ph id="ph2">`false`</ph>コンシューマー接続ポイントの)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint class adds several unique methods to the members it inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint クラス固有のいくつかのメソッドを追加する&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;クラス&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;から継承してメンバーに</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method retrieves an instance of the interface that the callback method will return to consumers.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;メソッドは、コールバック メソッドをコンシューマーに返すインターフェイスのインスタンスを取得します&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt; method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;メソッドを既存の接続の一部である追加の消費者のインターフェイスを取得しますが、インターフェイスではない接続を確立するために使用します&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint constructor for the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;クラスは、基底コンス トラクター、さまざまなパラメーターを渡すと、基本クラスの初期化を呼び出すだけ&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;の ProviderConnectionPoint コンス トラクター</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">基本クラス コンス トラクターでは、接続ポイントのパラメーターの数を確認し、いくつかの例外をスローすることができます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">可能性のある例外の一覧は、例外を参照してください。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can call the ProviderConnectionPoint constructor to create your own instance of the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;クラス&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;のインスタンスを作成する、ProviderConnectionPoint コンス トラクターを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method to return an existing connection point object from a provider.</source>
          <target state="translated">ただし、しているだけで接続を確立して、クラスを拡張しない場合を呼び出す必要があります、&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;プロバイダーから既存の接続ポイント オブジェクトを返すメソッド&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The method in the provider control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">インターフェイス インスタンスが接続を確立するコンシューマーに返されますプロバイダー コントロールのメソッドです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the interface that the provider serves to consumers.</source>
          <target state="translated">&lt;xref:System.Type&gt;のプロバイダーがコンシューマーに提供するインターフェイス&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the provider control with which the provider connection point is associated.</source>
          <target state="translated">&lt;xref:System.Type&gt;プロバイダー接続ポイントが関連付けられているプロバイダーのコントロールの&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">接続のユーザー インターフェイス (UI) のユーザーに表示されるプロバイダー接続ポイントの表示名。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A unique identifier for the provider connection point.</source>
          <target state="translated">プロバイダー接続ポイントの一意の識別子。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</source>
          <target state="translated">プロバイダー接続ポイントに同時に複数のコンシューマーに接続できるかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>is not the same type as the provider control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>プロバイダーのコントロールと同じ型ではありません (または、有効なクラスがそこから派生)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Invokes the callback method in a provider control that gets an interface instance to return to consumers.</source>
          <target state="translated">コンシューマーに返すインターフェイス インスタンスを取得するプロバイダー コントロールのコールバック メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method returns an object from the provider control that is an instance of the interface used to establish a connection.</source>
          <target state="translated">このメソッドは、接続を確立するために使用されるインターフェイスのインスタンスは、プロバイダー管理からオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type of the object will be the type of the implemented interface.</source>
          <target state="translated">オブジェクトの型は、実装されたインターフェイスの型になります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, two interfaces that are implemented for connections in the Web Parts control set are &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt; and &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.</source>
          <target state="translated">たとえば、2 つのインターフェイス、Web パーツ コントロール セット内の接続&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;と&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;。&lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;に実装されています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the GetObject method is called on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</source>
          <target state="translated">GetObject メソッドが呼び出されたとき、&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;オブジェクト、同じ型、返されたオブジェクトである場合は、関連付けられているプロバイダーでは、これらのインターフェイスの&amp;1; つを実装して、.&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The GetObject method is called by &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; objects when a connection is being activated.</source>
          <target state="translated">GetObject メソッドによって呼び出されます&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;オブジェクトの接続をアクティブ化時にします&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</source>
          <target state="translated">これは、実際には、接続を開始し、2 つのコントロールでデータを共有できるようにするプロセスを開始する重要な手順です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">接続のコンシューマー コントロールは、プロバイダーと同じ型のインターフェイスを使用できる必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If it does not, the controls are incompatible and a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object must be used to establish a connection.</source>
          <target state="translated">コントロールとの互換性がない場合は、および&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;オブジェクトは、接続を確立するために使用する必要があります&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">Web パーツ接続においてプロバイダーとして機能するコントロール。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is an instance of the interface a provider returns to consumers to establish a connection.</source>
          <target state="translated">&lt;xref:System.Object&gt;は接続を確立するコンシューマーにインターフェイスをプロバイダーのインスタンスを返します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</source>
          <target state="translated">プロバイダー接続ポイントでサポートできるセカンダリ インターフェイスの省略可能なコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A provider connection point object always has a default interface that is used to establish a connection with consumers.</source>
          <target state="translated">プロバイダー接続ポイント オブジェクトは、常にコンシューマーとの接続を確立するために使用される既定のインターフェイスを持ちます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An instance of the default interface is retrieved by calling the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object.</source>
          <target state="translated">既定のインターフェイスのインスタンスを呼び出すことによって取得、&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;メソッドを&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;オブジェクト&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</source>
          <target state="translated">ただし、一部のプロバイダー コントロールは、接続の一環として、コンシューマーに提供する複数のインターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</source>
          <target state="translated">これらのインターフェイスでは、既定の接続を確立するために使用するものではないは、セカンダリ インターフェイスと呼ばれます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The GetSecondaryInterfaces method provides a way to return a collection of references to the secondary interfaces, just as the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method returns a reference to the default interface.</source>
          <target state="translated">GetSecondaryInterfaces メソッドと同様に、セカンダリ インターフェイスへの参照のコレクションを取得する方法を提供する、&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;メソッドは、既定のインターフェイスへの参照を返します&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">Web パーツ接続においてプロバイダーとして機能するコントロール。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of additional interfaces provided by the control acting as a provider.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>プロバイダーとして機能するコントロールによって提供される追加のインターフェイスです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>