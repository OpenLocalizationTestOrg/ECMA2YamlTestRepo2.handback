<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d197f7daee6eaac3331d7d89f31e82b9297eabd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Security.SslStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dcf4f2f23ba228daa5a04a5efcd14b678209c26</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03b7833a6c42684587ff0aa7086c527f74b1d6aa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</source>
          <target state="translated">Secure Socket Layer (SSL) セキュリティ プロトコルを使用して、サーバーと、必要に応じて、クライアントの認証にクライアント サーバー通信のために使用されるストリームを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an SslStream.</source>
          <target state="translated">SSL プロトコルは、機密性と整合性チェック、SslStream を使用して送信されるメッセージを提供するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An SSL connection, such as that provided by SslStream, should be used when communicating sensitive information between a client and a server.</source>
          <target state="translated">クライアントとサーバー間で機密情報を通信するときに、SslStream、によって提供される、SSL 接続を使用してください。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using an SslStream helps to prevent anyone from reading and tampering with information while it is in transit on the network.</source>
          <target state="translated">SslStream を使用して読み取りや、ネットワーク上を転送中にある間に情報が改ざんされるはだれに役立ちます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An SslStream instance transmits data using a stream that you supply when creating the SslStream.</source>
          <target state="translated">SslStream インスタンスは、SslStream を作成するときに指定するストリームを使用してデータを送信します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>When you supply this underlying stream, you have the option to specify whether closing the SslStream also closes the underlying stream.</source>
          <target state="translated">この基になるストリームを指定するときに、SslStream を終了すると、基になるストリームも閉じるかどうかを指定するオプションがあります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Typically, the SslStream class is used with the &lt;xref:System.Net.Sockets.TcpClient&gt; and &lt;xref:System.Net.Sockets.TcpListener&gt; classes.</source>
          <target state="translated">通常、SslStream クラスが使用されて、&lt;xref:System.Net.Sockets.TcpClient&gt;と&lt;xref:System.Net.Sockets.TcpListener&gt;クラス&lt;/xref:System.Net.Sockets.TcpListener&gt;&lt;/xref:System.Net.Sockets.TcpClient&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt; method provides a &lt;xref:System.Net.Sockets.NetworkStream&gt; suitable for use with the SslStream class.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;メソッドは、 &lt;xref:System.Net.Sockets.NetworkStream&gt;SslStream クラスで使用するのに適した&lt;/xref:System.Net.Sockets.NetworkStream&gt;を提供&lt;/xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;する</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>After creating an SslStream, the server and optionally, the client must be authenticated.</source>
          <target state="translated">SslStream を作成した後、サーバーと、必要に応じて、クライアントを認証する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</source>
          <target state="translated">X509 を提供する必要があります、サーバー証明書をその id を確立しするクライアントもように要求できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Authentication must be performed before transmitting information using an SslStream.</source>
          <target state="translated">認証は、SslStream を使用して情報を送信する前に実行する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Clients initiate authentication using the synchronous &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; methods, which block until the authentication completes, or the asynchronous &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt; methods, which do not block waiting for the authentication to complete.</source>
          <target state="translated">クライアントは、同期を使用して認証を開始&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;メソッドで、認証が完了するまでブロック、または非同期&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;メソッドで、認証が完了するための待機をブロックしません&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Servers initiate authentication using the synchronous &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; or asynchronous &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">サーバーは、同期を使用して認証を開始&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;または非同期&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Both client and server must initiate the authentication.</source>
          <target state="translated">クライアントとサーバーの両方が認証を行う必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The authentication is handled by the Security Support Provider (SSPI) channel provider.</source>
          <target state="translated">認証は、セキュリティ サポート プロバイダー (SSPI) チャネル プロバイダーによって処理されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The client is given an opportunity to control validation of the server's certificate by specifying a &lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt; delegate when creating an SslStream.</source>
          <target state="translated">クライアントを指定することで、サーバーの証明書の検証を制御する機会が与えられます、 &lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;、SslStream を作成するときに委任します&lt;/xref:System.Net.Security.RemoteCertificateValidationCallback&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The server can also control validation by supplying a &lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt; delegate.</source>
          <target state="translated">サーバーでは検証を指定することによっても制御できます、&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;委任します&lt;/xref:System.Net.Security.RemoteCertificateValidationCallback&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</source>
          <target state="translated">デリゲートによって参照されるメソッドには、リモート パーティの証明書および証明書の検証中に発生した SSPI エラーが含まれます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</source>
          <target state="translated">サーバーは、デリゲートを指定した場合、デリゲートのメソッドが呼び出されること、サーバーがクライアント認証を要求するかどうかに関係なくに注意してください。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</source>
          <target state="translated">サーバーがクライアント認証を要求していない場合、サーバーのデリゲート メソッドは、null の証明書と証明書のエラーの空の配列を受け取ります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the server requires client authentication, the client must specify one or more certificates for authentication.</source>
          <target state="translated">サーバーは、クライアント認証を必要とする場合、クライアントは認証用の&amp;1; つまたは複数の証明書を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the client has more than one certificate, the client can provide a &lt;xref:System.Net.Security.LocalCertificateSelectionCallback&gt; delegate to select the correct certificate for the server.</source>
          <target state="translated">クライアントが提供できるクライアントに複数の証明書がある場合、&lt;xref:System.Net.Security.LocalCertificateSelectionCallback&gt;デリゲートをサーバーの正しい証明書を選択します&lt;/xref:System.Net.Security.LocalCertificateSelectionCallback&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The client's certificates must be located in the current user's "My" certificate store.</source>
          <target state="translated">クライアントの証明書は、現在のユーザーの"My"証明書ストアにある必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Client authentication via certificates is not supported for the &lt;xref:System.Security.Authentication.SslProtocols&gt; (SSL version 2) protocol.</source>
          <target state="translated">証明書を使用してクライアント認証はサポートされていません、 &lt;xref:System.Security.Authentication.SslProtocols&gt;SSL バージョン 2 プロトコル&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and the SslStream is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、SslStream が使用可能になりました&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the SslStream can be used by the client and server to exchange messages.</source>
          <target state="translated">SSL ハンドシェイクとも呼ばれる、認証プロセスが成功した場合、サーバー (および必要に応じて、クライアント) の id を確立し、SslStream は、メッセージを交換するクライアントとサーバーで使用できます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Before sending or receiving information, the client and server should check the security services and levels provided by the SslStream to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</source>
          <target state="translated">情報を送受信する前に、クライアントとサーバーくださいセキュリティ サービスとプロトコル、アルゴリズム、およびオン長所が整合性および機密性が実現するための要件を満たしているかどうかを判断する SslStream によって提供されるレベル。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the current settings are not sufficient, the stream should be closed.</source>
          <target state="translated">現在の設定が十分なされていない場合は、ストリームが閉じている必要があります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can check the security services provided by the SslStream using the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties.</source>
          <target state="translated">SslStream を使用して、によって提供されるセキュリティ サービスを確認することができます、&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;と&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</source>
          <target state="translated">次の表は、認証、暗号化、およびデータの署名に使用される暗号化の設定を報告する要素を示しています。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>|Element|Members|   |-------------|-------------|   |The security protocol used to authenticate the server and, optionally, the client.|The &lt;xref:System.Net.Security.SslStream.SslProtocol%2A&gt; property and the associated &lt;xref:System.Security.Authentication.SslProtocols&gt; enumeration.|   |The key exchange algorithm.|The &lt;xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt; property and the associated &lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt; enumeration.|   |The message integrity algorithm.|The &lt;xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt; property and the associated &lt;xref:System.Security.Authentication.HashAlgorithmType&gt; enumeration.|   |The message confidentiality algorithm.|The &lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt; property and the associated &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; enumeration.|   |The strengths of the selected algorithms.|The &lt;xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt;, &lt;xref:System.Net.Security.SslStream.HashStrength%2A&gt;, and &lt;xref:System.Net.Security.SslStream.CipherStrength%2A&gt; properties.|       After a successful authentication, you can send data using the synchronous &lt;xref:System.Net.Security.SslStream.Write%2A&gt; or asynchronous &lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt; methods.</source>
          <target state="translated">|要素 |メンバー |  |-------------|-------------|  |サーバーと、必要に応じて、クライアントの認証に使用されるセキュリティ プロトコルです |。&lt;xref:System.Net.Security.SslStream.SslProtocol%2A&gt;プロパティと関連付けられている&lt;xref:System.Security.Authentication.SslProtocols&gt;列挙します |。  |キー交換アルゴリズムです |。&lt;xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt;プロパティと関連付けられている&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;列挙します |。  |メッセージの整合性アルゴリズムです |。&lt;xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt;プロパティと関連付けられている&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;列挙します |。  |メッセージの機密性アルゴリズムです |。&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;プロパティと関連付けられている&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;列挙します |。  |選択したアルゴリズムの強さ |。&lt;xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt; &lt;xref:System.Net.Security.SslStream.HashStrength%2A&gt;、および&lt;xref:System.Net.Security.SslStream.CipherStrength%2A&gt;プロパティです |。      認証が成功した後、同期を使用してデータを送信することができます&lt;xref:System.Net.Security.SslStream.Write%2A&gt;または非同期&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginWrite%2A&gt;&lt;/xref:System.Net.Security.SslStream.Write%2A&gt;&lt;/xref:System.Net.Security.SslStream.CipherStrength%2A&gt;&lt;/xref:System.Net.Security.SslStream.HashStrength%2A&gt;&lt;/xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt;&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;&lt;/xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;&lt;/xref:System.Security.Authentication.HashAlgorithmType&gt;&lt;/xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt;&lt;/xref:System.Security.Authentication.ExchangeAlgorithmType&gt;&lt;/xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt;&lt;/xref:System.Security.Authentication.SslProtocols&gt;&lt;/xref:System.Net.Security.SslStream.SslProtocol%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can receive data using the synchronous &lt;xref:System.Net.Security.SslStream.Read%2A&gt; or asynchronous &lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt; methods.</source>
          <target state="translated">同期を使用してデータを受信できる&lt;xref:System.Net.Security.SslStream.Read%2A&gt;または非同期&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginRead%2A&gt;&lt;/xref:System.Net.Security.SslStream.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you specified to the &lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt; that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</source>
          <target state="translated">指定した場合、&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;基になるストリームを開いたままにするが完了したら、そのストリームを終了する必要がある使用&lt;/xref:System.Net.Security.SslStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the application that creates the SslStream object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SslStream オブジェクトを作成するアプリケーションは、通常のユーザーの資格情報で実行している場合、アプリケーションはアクセス許可が明示的に指定されてユーザーにこれを行う場合を除き、ローカル コンピューター ストアにインストールされている証明書にアクセスできません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>SslStream assumes that a timeout along with any other &lt;xref:System.IO.IOException&gt; when one is thrown from the inner stream will be treated as fatal by its caller.</source>
          <target state="translated">SslStream が想定すると共に、他のタイムアウト&lt;xref:System.IO.IOException&gt;内部ストリームからスローされた&amp;1; つは処理されます、致命的な呼び出し元によって&lt;/xref:System.IO.IOException&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Reusing a SslStream instance after a timeout will return garbage.</source>
          <target state="translated">タイムアウトはガベージを返します後 SslStream インスタンスを再利用されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An application should &lt;xref:System.IO.Stream.Close%2A&gt; the SslStream and throw an exception in these cases.</source>
          <target state="translated">アプリケーションにする必要があります&lt;xref:System.IO.Stream.Close%2A&gt;SslStream とこのような場合は例外をスローします&lt;/xref:System.IO.Stream.Close%2A&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</source>
          <target state="translated">.NET Framework 4.6 には、安全性の低い暗号およびハッシュ アルゴリズムの接続をブロックする新しいセキュリティ機能が含まれています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</source>
          <target state="translated">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの Api を介した TLS と SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションでは、既定では、セキュリティが強化された動作を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</source>
          <target state="translated">開発者は、既存 SSL3 サービスまたは TLS で RC4 サービスと相互運用性を維持するために、この動作を除外する必要あります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>This article<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.</source>
          <target state="translated"><bpt id="p1">[</bpt>この記事<ept id="p1">](https://support.microsoft.com/kb/3069494)</ept>新しい動作を無効にするように、コードを変更する方法について説明します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The .NET Framework 4.6.3 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in <bpt id="p1">[</bpt>SCHANNEL<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)</ept>.</source>
          <target state="translated">.NET Framework 4.6.3 SslStreams、TLS バージョンを指定しないが、代わりにシステムの既定値として定義されている TLS バージョンを使用する認証のあるメソッドに対して新しいオーバー ロードを追加する<bpt id="p1">[</bpt>SCHANNEL<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</source>
          <target state="translated">後で、長期にわたって TLS バージョンのベスト プラクティスの変更として、既定の設定を変更できる手段として、アプリでこれらのメソッドを使用リビルドして、アプリを再配置する必要はありません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;を使用してクラス</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the &lt;xref:System.Net.Security.EncryptionPolicy&gt; defaults to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt; for the &lt;xref:System.Net.Security.SslStream&gt; instance that is constructed.</source>
          <target state="translated">暗号化ポリシーですの構成ファイルで値が指定されていない場合、&lt;xref:System.Net.Security.EncryptionPolicy&gt;の既定値は&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;の&lt;xref:System.Net.Security.SslStream&gt;を構築するインスタンス&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;&lt;/xref:System.Net.Security.EncryptionPolicy&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The use of the Null cipher is required when the encryption policy is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;。&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;暗号化ポリシーが設定されている場合は、Null 暗号の使用が必要</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>読み取りができません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>書き込み禁止になっています。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>と等しい<ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.IO.Stream&gt; and stream closure behavior.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの指定して&lt;xref:System.IO.Stream&gt;およびクロージャの動作をストリーミングします&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the &lt;xref:System.Net.Security.SslStream&gt; has no effect on the <ph id="ph3">`innerStream`</ph> stream; you must explicitly close <ph id="ph4">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">指定すると<ph id="ph1">`true`</ph>の<ph id="ph2">`leaveStreamOpen`</ph>パラメーター、閉じる、&lt;xref:System.Net.Security.SslStream&gt;に影響を与えません、<ph id="ph3">`innerStream`</ph>ストリーム; 明示的に閉じる必要があります<ph id="ph4">`innerStream`</ph>とそれが不要になった&lt;/xref:System.Net.Security.SslStream&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the &lt;xref:System.Net.Security.EncryptionPolicy&gt; defaults to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt; for the &lt;xref:System.Net.Security.SslStream&gt; instance that is constructed.</source>
          <target state="translated">暗号化ポリシーですの構成ファイルで値が指定されていない場合、&lt;xref:System.Net.Security.EncryptionPolicy&gt;の既定値は&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;の&lt;xref:System.Net.Security.SslStream&gt;を構築するインスタンス&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;&lt;/xref:System.Net.Security.EncryptionPolicy&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The use of the Null cipher is required when the encryption policy is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;。&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;暗号化ポリシーが設定されている場合は、Null 暗号の使用が必要</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates the closure behavior of the &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">クロージャ動作を示すブール値、&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">このパラメーターは、内部ストリームが開いたままかどうかを示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>読み取りができません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>書き込み禁止になっています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>と等しい<ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.IO.Stream&gt;, stream closure behavior and certificate validation delegate.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.IO.Stream&gt;クロージャの動作をストリーム配信、および証明書の検証のデリゲート&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the &lt;xref:System.Net.Security.SslStream&gt; has no effect on the <ph id="ph3">`innerStream`</ph> stream; you must explicitly close <ph id="ph4">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">指定すると<ph id="ph1">`true`</ph>の<ph id="ph2">`leaveStreamOpen`</ph>パラメーター、閉じる、&lt;xref:System.Net.Security.SslStream&gt;に影響を与えません、<ph id="ph3">`innerStream`</ph>ストリーム; 明示的に閉じる必要があります<ph id="ph4">`innerStream`</ph>とそれが不要になった&lt;/xref:System.Net.Security.SslStream&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's <ph id="ph2">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</source>
          <target state="translated"><ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートの<ph id="ph2">`certificateErrors`</ph>引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返される Windows エラー コードが含まれています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The return value of the method invoked by the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.</source>
          <target state="translated">によって呼び出されるメソッドの戻り値、<ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートは、認証が成功したかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The security protocol and cryptographic algorithms are already selected when the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's method is invoked.</source>
          <target state="translated">セキュリティ プロトコルおよび暗号アルゴリズムが既に選択されているときに、<ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートのメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</source>
          <target state="translated">メソッドを使用すると、選択した暗号アルゴリズムと長所がアプリケーションのための十分なのかを判断します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If not, the method should return <ph id="ph1">`false`</ph> to prevent the &lt;xref:System.Net.Security.SslStream&gt; from being created.</source>
          <target state="translated">場合は、メソッドが返す必要があります、<ph id="ph1">`false`</ph>を防ぐために、&lt;xref:System.Net.Security.SslStream&gt;作成されない&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the &lt;xref:System.Net.Security.EncryptionPolicy&gt; defaults to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt; for the &lt;xref:System.Net.Security.SslStream&gt; instance that is constructed.</source>
          <target state="translated">暗号化ポリシーですの構成ファイルで値が指定されていない場合、&lt;xref:System.Net.Security.EncryptionPolicy&gt;の既定値は&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;の&lt;xref:System.Net.Security.SslStream&gt;を構築するインスタンス&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;&lt;/xref:System.Net.Security.EncryptionPolicy&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The use of the Null cipher is required when the encryption policy is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;。&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;暗号化ポリシーが設定されている場合は、Null 暗号の使用が必要</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The Framework SSL セッションが作成されるキャッシュし、新しい要求のキャッシュされているセッションを再利用可能であればしようとしています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of &lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt; (if there is one), or tries to reuse an anonymous sessions if &lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt; is empty.</source>
          <target state="translated">フレームワークでの最初の要素を使用するときに、SSL セッションを再利用する、 &lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;(かどうかがある&amp;1; つ)、匿名のセッションを再利用を試みる&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;が空です&lt;/xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;&lt;/xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates the closure behavior of the &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">クロージャ動作を示すブール値、&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">このパラメーターは、内部ストリームが開いたままかどうかを示します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リモート パーティによって提供された証明書を検証します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>読み取りができません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>書き込み禁止になっています。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>と等しい<ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.IO.Stream&gt;, stream closure behavior, certificate validation delegate and certificate selection delegate.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.IO.Stream&gt;、クロージャの動作、ストリーム、証明書検証デリゲート証明書の選択のデリゲート&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`leaveStreamOpen`</ph> parameter, closing the &lt;xref:System.Net.Security.SslStream&gt; has no effect on the <ph id="ph3">`innerStream`</ph> stream; you must explicitly close <ph id="ph4">`innerStream`</ph> when you no longer need it.</source>
          <target state="translated">指定すると<ph id="ph1">`true`</ph>の<ph id="ph2">`leaveStreamOpen`</ph>パラメーター、閉じる、&lt;xref:System.Net.Security.SslStream&gt;に影響を与えません、<ph id="ph3">`innerStream`</ph>ストリーム; 明示的に閉じる必要があります<ph id="ph4">`innerStream`</ph>とそれが不要になった&lt;/xref:System.Net.Security.SslStream&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's <ph id="ph2">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</source>
          <target state="translated"><ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートの<ph id="ph2">`certificateErrors`</ph>引数には、チャネルのセキュリティ サポート プロバイダー インターフェイス (SSPI) によって返される Windows エラー コードが含まれています。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The return value of the method invoked by the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.</source>
          <target state="translated">によって呼び出されるメソッドの戻り値、<ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートは、認証が成功したかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The security protocol and cryptographic algorithms are already selected when the <ph id="ph1">`userCertificateValidationCallback`</ph> delegate's method is invoked.</source>
          <target state="translated">セキュリティ プロトコルおよび暗号アルゴリズムが既に選択されているときに、<ph id="ph1">`userCertificateValidationCallback`</ph>デリゲートのメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</source>
          <target state="translated">メソッドを使用すると、選択した暗号アルゴリズムと長所がアプリケーションのための十分なのかを判断します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If not, the method should return <ph id="ph1">`false`</ph> to prevent the &lt;xref:System.Net.Security.SslStream&gt; from being created.</source>
          <target state="translated">場合は、メソッドが返す必要があります、<ph id="ph1">`false`</ph>を防ぐために、&lt;xref:System.Net.Security.SslStream&gt;作成されない&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`userCertificateSelectionCallback`</ph> delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</source>
          <target state="translated"><ph id="ph1">`userCertificateSelectionCallback`</ph>デリゲートは、アプリケーションが複数の証明書と証明書を動的に選択する必要がある場合に便利です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Certificates in the "MY" store are passed to the method invoked by the delegate.</source>
          <target state="translated">"MY"ストアに証明書は、デリゲートが呼び出されるメソッドに渡されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If a value is not specified in the configuration file for encryptionpolicy, the &lt;xref:System.Net.Security.EncryptionPolicy&gt; defaults to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt; for the &lt;xref:System.Net.Security.SslStream&gt; instance that is constructed.</source>
          <target state="translated">暗号化ポリシーですの構成ファイルで値が指定されていない場合、&lt;xref:System.Net.Security.EncryptionPolicy&gt;の既定値は&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;の&lt;xref:System.Net.Security.SslStream&gt;を構築するインスタンス&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;&lt;/xref:System.Net.Security.EncryptionPolicy&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The use of the Null cipher is required when the encryption policy is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;。&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;暗号化ポリシーが設定されている場合は、Null 暗号の使用が必要</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The Framework SSL セッションが作成されるキャッシュし、新しい要求のキャッシュされているセッションを再利用可能であればしようとしています。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</source>
          <target state="translated">フレームワークが P:System.Net.HttpWebRequest.ClientCertificates (存在する場合) の最初の要素を使用するときに、SSL セッションを再利用する、または P:System.Net.HttpWebRequest.ClientCertificates がある場合は、匿名のセッションを再利用する試行が空です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates the closure behavior of the &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">クロージャ動作を示すブール値、&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">このパラメーターは、内部ストリームが開いたままかどうかを示します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リモート パーティによって提供された証明書を検証します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.Security.LocalCertificateSelectionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate responsible for selecting the certificate used for authentication.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Net.Security.LocalCertificateSelectionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>書を認証に使用する証明書を選択します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>読み取りができません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>書き込み禁止になっています。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>と等しい<ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified &lt;xref:System.IO.Stream&gt;</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス&lt;xref:System.IO.Stream&gt;&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The use of the Null cipher is required when the <ph id="ph1">`encryptionPolicy`</ph> parameter is set to &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;.</source>
          <target state="translated">Null 暗号の使用が必要なときに、 <ph id="ph1">`encryptionPolicy`</ph> &lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;&lt;/xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;パラメーターが設定されている。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates the closure behavior of the &lt;xref:System.IO.Stream&gt; object used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for sending and receiving data.</source>
          <target state="translated">クロージャ動作を示すブール値、&lt;xref:System.IO.Stream&gt;によって使用されるオブジェクト、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>データを送受信するためです&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This parameter indicates if the inner stream is left open.</source>
          <target state="translated">このパラメーターは、内部ストリームが開いたままかどうかを示します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate responsible for validating the certificate supplied by the remote party.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Net.Security.RemoteCertificateValidationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>リモート パーティによって提供された証明書を検証します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Net.Security.LocalCertificateSelectionCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate responsible for selecting the certificate used for authentication.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Net.Security.LocalCertificateSelectionCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>書を認証に使用する証明書を選択します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Security.EncryptionPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Net.Security.EncryptionPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>読み取りができません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>書き込み禁止になっています。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;encryptionPolicy&lt;/code&gt;</ph> is not valid.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;encryptionPolicy&lt;/code&gt;</ph>が無効です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;innerStream&lt;/code&gt;</ph>と等しい<ph id="ph2">&lt;xref:System.IO.Stream.Null&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">サーバーの認証にクライアントと、必要に応じて、クライアント サーバー接続でクライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>No client certificates are used in the authentication.</source>
          <target state="translated">認証では、クライアント証明書は使用されません。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">指定された値<ph id="ph1">`targetHost`</ph>サーバーの証明書の名前が一致する必要があります。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;および&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;をチェックする必要があります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The name of the server that shares this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有しているサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       Server authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用するサーバー認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection.</source>
          <target state="translated">サーバーの認証にクライアントと、必要に応じて、クライアント サーバー接続でクライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The authentication process uses the specified certificate collection and SSL protocol.</source>
          <target state="translated">認証プロセスでは、指定された証明書のコレクションと SSL プロトコルを使用します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>When authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;および&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;をチェックする必要があります。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The name of the server that will share this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有するサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains client certificates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント証明書を格納しています。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">サーバーの認証にクライアントと、必要に応じて、非同期操作としてクライアント サーバー接続でクライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>No client certificates are used in the authentication.</source>
          <target state="translated">認証では、クライアント証明書は使用されません。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">指定された値<ph id="ph1">`targetHost`</ph>サーバーの証明書の名前が一致する必要があります。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>When authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;および&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;をチェックする必要があります。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The name of the server that shares this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有しているサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Threading.Tasks.Task&gt;       The task object representing the asynchronous operation.</source>
          <target state="translated">返します&lt;xref:System.Threading.Tasks.Task&gt;非同期操作を表すタスク オブジェクト&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>-or-       Server authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用するサーバー認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</source>
          <target state="translated">サーバーの認証にクライアントと、必要に応じて、非同期操作としてクライアント サーバー接続でクライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The authentication process uses the specified certificate collection and SSL protocol.</source>
          <target state="translated">認証プロセスでは、指定された証明書のコレクションと SSL プロトコルを使用します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>When authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;および&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;をチェックする必要があります。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The name of the server that will share this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有するサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains client certificates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント証明書を格納しています。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Threading.Tasks.Task&gt;       The task object representing the asynchronous operation.</source>
          <target state="translated">返します&lt;xref:System.Threading.Tasks.Task&gt;非同期操作を表すタスク オブジェクト&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</source>
          <target state="translated">サーバーと、必要に応じて指定された証明書を使用するクライアントとサーバー接続でクライアントを認証するサーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">クライアントは、認証用証明書を提供する必要はありません。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>To prevent blocking until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックを防ぐためには、いずれかの操作を使用して、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The certificate used to authenticate the server.</source>
          <target state="translated">サーバーの認証に使用される証明書。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>-or-       Client authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用してクライアント認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt;メソッドは、Windows 95、Windows 98 または Windows Millennium でサポートされていません&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt;。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</source>
          <target state="translated">サーバーと、必要に応じて、指定された証明書の要件、セキュリティ プロトコルを使用するクライアントとサーバー接続でクライアントを認証するサーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This method blocks until the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>To prevent blocking until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックを防ぐためには、いずれかの操作を使用して、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">X509certificate からサーバーを認証するために使用します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;クライアントが認証用証明書を要求するかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">証明書が提供されない場合、サーバーがまだ接続要求を受け入れる--要求だけであるに注意してください。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph>有効ではありません<ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-or-       Client authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用してクライアント認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt;メソッドは、Windows 95、Windows 98 または Windows Millennium でサポートされていません&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer*&gt;。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</source>
          <target state="translated">サーバーと、必要に応じて、非同期操作として指定された証明書を使用するクライアントとサーバー接続でクライアントを認証するサーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">クライアントは、認証用証明書を提供する必要はありません。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The certificate used to authenticate the server.</source>
          <target state="translated">サーバーの認証に使用される証明書。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Threading.Tasks.Task&gt;       The task object representing the asynchronous operation.</source>
          <target state="translated">返します&lt;xref:System.Threading.Tasks.Task&gt;非同期操作を表すタスク オブジェクト&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-       Client authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用してクライアント認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*&gt;メソッドは、Windows 95、Windows 98 または Windows Millennium でサポートされていません&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*&gt;。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</source>
          <target state="translated">サーバーと、必要に応じて、非同期操作として、指定された証明書の要件、セキュリティ プロトコルを使用するクライアントとサーバー接続でクライアントを認証するサーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">X509certificate からサーバーを認証するために使用します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;クライアントが認証用証明書を要求するかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">証明書が提供されない場合、サーバーがまだ接続要求を受け入れる--要求だけであるに注意してください。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Threading.Tasks.Task&gt;       The task object representing the asynchronous operation.</source>
          <target state="translated">返します&lt;xref:System.Threading.Tasks.Task&gt;非同期操作を表すタスク オブジェクト&lt;/xref:System.Threading.Tasks.Task&gt;。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</source>
          <target state="translated">クライアントがサーバーを認証する非同期操作を開始して、必要に応じて、クライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>No client certificates are used in the authentication.</source>
          <target state="translated">認証では、クライアント証明書は使用されません。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">指定された値<ph id="ph1">`targetHost`</ph>サーバーの証明書の名前が一致する必要があります。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The asynchronous authentication operation must be completed by calling the &lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt; method.</source>
          <target state="translated">呼び出しで、認証の非同期操作を完了する必要があります、&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`asyncCallback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>To block until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックするには、いずれかを使用、&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>       If you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>を受け取った場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします。&lt;/xref:System.Net.Security.SslStream&gt; &lt;/xref:System.Security.Authentication.AuthenticationException&gt; 。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The name of the server that shares this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有しているサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;、認証が完了したときに呼び出されるメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that indicates the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>-or-       Server authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用するサーバー認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</source>
          <target state="translated">クライアントがサーバーを認証する非同期操作を開始して、必要に応じて、指定された証明書およびセキュリティ プロトコルを使用して、クライアントによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">`targetHost`</ph> must match the name on the server's certificate.</source>
          <target state="translated">指定された値<ph id="ph1">`targetHost`</ph>サーバーの証明書の名前が一致する必要があります。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The asynchronous authentication operation must be completed by calling the &lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt; method.</source>
          <target state="translated">呼び出しで、認証の非同期操作を完了する必要があります、&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`asyncCallback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>To block until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックするには、いずれかを使用、&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>       If you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>を受け取った場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします。&lt;/xref:System.Net.Security.SslStream&gt; &lt;/xref:System.Security.Authentication.AuthenticationException&gt; 。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Client certificates are not supported in the SSL version 2 protocol.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; SSL バージョン 2 プロトコルでは、クライアント証明書はサポートされていません。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The name of the server that shares this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これを共有しているサーバーの名前<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing client certificates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クライアント証明書を格納します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;、認証が完了したときに呼び出されるメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that indicates the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;targetHost&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph>有効ではありません<ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>-or-       Server authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用するサーバー認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</source>
          <target state="translated">クライアントを認証する非同期操作を開始するサーバーと必要に応じてクライアント サーバー接続で、サーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>This method authenticates using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">このメソッドが&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して認証します。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The certificate revocation list is not checked during authentication.</source>
          <target state="translated">証明書失効リストは、認証時にチェックされません。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The client is not required to provide a certificate for authentication.</source>
          <target state="translated">クライアントは、認証用証明書を提供する必要はありません。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The asynchronous authentication operation must be completed by calling the &lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt; method.</source>
          <target state="translated">呼び出しで、認証の非同期操作を完了する必要があります、&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`asyncCallback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>To block until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックするには、いずれかを使用、&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>       If you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>を受け取った場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします。&lt;/xref:System.Net.Security.SslStream&gt; &lt;/xref:System.Security.Authentication.AuthenticationException&gt; 。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">X509certificate からサーバーを認証するために使用します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;、認証が完了したときに呼び出されるメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object indicating the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>-or-       Client authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用してクライアント認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;メソッドは、Windows 95、Windows 98 または Windows Millennium でサポートされていません&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</source>
          <target state="translated">サーバーと、必要に応じて、指定された証明書の要件、セキュリティ プロトコルを使用してクライアントを認証する非同期操作を開始するサーバーによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The asynchronous authentication operation must be completed by calling the &lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt; method.</source>
          <target state="translated">呼び出しで、認証の非同期操作を完了する必要があります、&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`asyncCallback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>To block until the operation completes, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; method overloads.</source>
          <target state="translated">操作が完了するまでブロックするには、いずれかを使用、&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;メソッドのオーバー ロード&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>       If you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>を受け取った場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします。&lt;/xref:System.Net.Security.SslStream&gt; &lt;/xref:System.Security.Authentication.AuthenticationException&gt; 。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The X509Certificate used to authenticate the server.</source>
          <target state="translated">X509certificate からサーバーを認証するために使用します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the client is asked for a certificate for authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;クライアントが認証用証明書を要求するかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</source>
          <target state="translated">証明書が提供されない場合、サーバーがまだ接続要求を受け入れる--要求だけであるに注意してください。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Boolean&gt; value that specifies whether the certificate revocation list is checked during authentication.</source>
          <target state="translated">A&lt;xref:System.Boolean&gt;認証時に証明書失効リストをチェックするかどうかを指定する値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the authentication is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;、認証が完了したときに呼び出されるメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that indicates the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serverCertificate&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph>有効ではありません<ph id="ph2">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Authentication has already occurred.</source>
          <target state="translated">認証が既に発生しました。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       Server authentication using this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was tried previously.</source>
          <target state="translated">- または - これを使用するサーバー認証<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が以前に試行します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>-or-       Authentication is already in progress.</source>
          <target state="translated">- または - 認証が既に進行中です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt; method is not supported on Windows 95, Windows 98, or Windows Millennium.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;メソッドは、Windows 95、Windows 98 または Windows Millennium でサポートされていません&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</source>
          <target state="translated">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</source>
          <target state="translated">暗号化や署名が有効になっている場合、読み取り操作が基になるストリームからデータを読み取り、データの整合性をチェックおよび復号化できます。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The asynchronous read operation must be completed by calling the &lt;xref:System.Net.Security.SslStream.EndRead%2A&gt; method.</source>
          <target state="translated">非同期の読み取り操作を呼び出すことによって完了する必要があります、&lt;xref:System.Net.Security.SslStream.EndRead%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.EndRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">通常、このメソッドはによって、<ph id="ph1">`asyncCallback`</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するにはブロックされません。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>To block until the operation completes, use the &lt;xref:System.Net.Security.SslStream.Read%2A&gt; method.</source>
          <target state="translated">使用して、操作が完了するまで、禁止する、&lt;xref:System.Net.Security.SslStream.Read%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>       The &lt;xref:System.Net.Security.SslStream&gt; class does not support multiple simultaneous read operations.</source>
          <target state="translated">詳細については、非同期プログラミング モデルを使用して、次を参照してください<bpt id="p1">[</bpt>同期のメソッドを非同期に呼び出す<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>、&lt;xref:System.Net.Security.SslStream&gt;クラスが複数の同時読み取り操作をサポートしていません。&lt;/xref:System.Net.Security.SslStream&gt; 。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>To authenticate call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">いずれかの呼び出しを認証するために、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array that receives the bytes read from the stream.</source>
          <target state="translated">A&lt;xref:System.Byte&gt;ストリームから読み取ったバイトを受け取る配列&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The zero-based location in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from this stream.</source>
          <target state="translated">内の&amp;0; から始まる場所<ph id="ph1">`buffer`</ph>このストリームから読み取ったデータの格納を開始する位置。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read from the stream.</source>
          <target state="translated">ストリームから読み取るバイトの最大数。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the read operation is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;読み取り操作の完了時に呼び出すメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the read operation.</source>
          <target state="translated">読み取り操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object that indicates the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph3">&amp;gt;</ph>の長さ<ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The read operation failed.</source>
          <target state="translated">読み取り操作が失敗しました。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>-or-       Encryption is in use, but the data could not be decrypted.</source>
          <target state="translated">- または - 暗号化を使用していますが、データの暗号化を解除できませんでした。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>There is already a read operation in progress.</source>
          <target state="translated">実行中の読み取り操作が既に存在します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation that writes &lt;xref:System.Byte&gt;s from the specified buffer to the stream.</source>
          <target state="translated">書き込む非同期の書き込み操作を開始&lt;xref:System.Byte&gt;ストリームに指定されたバッファーから s&lt;/xref:System.Byte&gt; 。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array that supplies the bytes to be written to the stream.</source>
          <target state="translated">A&lt;xref:System.Byte&gt;をストリームに書き込まれるバイト数を提供します&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The zero-based location in <ph id="ph1">`buffer`</ph> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">内の&amp;0; から始まる場所<ph id="ph1">`buffer`</ph>ストリームに書き込まれるバイトの読み取りを開始する位置。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the number of bytes to read from <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">&lt;xref:System.Int32&gt;から読み取るバイト数を指定する値<ph id="ph1">`buffer`</ph>&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.AsyncCallback&gt; delegate that references the method to invoke when the write operation is complete.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;書き込み操作の完了時に呼び出すメソッドを参照するデリゲート&lt;/xref:System.AsyncCallback&gt;。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A user-defined object that contains information about the write operation.</source>
          <target state="translated">書き込み操作に関する情報を含むユーザー定義のオブジェクト。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This object is passed to the <ph id="ph1">`asyncCallback`</ph> delegate when the operation completes.</source>
          <target state="translated">このオブジェクトは、<ph id="ph1">`asyncCallback`</ph>操作の完了時に委任します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; object indicating the status of the asynchronous operation.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;非同期操作の状態を示すオブジェクト&lt;/xref:System.IAsyncResult&gt;。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph3">&amp;gt;</ph>の長さ<ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The write operation failed.</source>
          <target state="translated">書き込み操作に失敗しました。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>There is already a write operation in progress.</source>
          <target state="translated">実行中の書き込み操作が既に存在します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the underlying stream is readable.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;を基になるストリームが読み取り可能かどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>If successful authentication has occurred, this property returns the value returned by invoking &lt;xref:System.IO.Stream.CanRead%2A&gt; on the underlying stream.</source>
          <target state="translated">成功した認証が発生した場合、このプロパティは呼び出しによって返される値を返します&lt;xref:System.IO.Stream.CanRead%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.CanRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The underlying stream is specified when you create an instance of the &lt;xref:System.Net.Security.SslStream&gt; class.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラス&lt;/xref:System.Net.Security.SslStream&gt;のインスタンスを作成するときに、基になるストリームが指定されています。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if authentication has occurred and the underlying stream is readable; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>認証が行われ、基になるストリームが読み取り可能な場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the underlying stream is seekable.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;を基になるストリームがシーク可能かどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Do not attempt to set the position of the &lt;xref:System.Net.Security.SslStream&gt; object or its underlying stream.</source>
          <target state="translated">位置を設定しないでください、&lt;xref:System.Net.Security.SslStream&gt;オブジェクトまたはその基になるストリーム&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The underlying stream is specified when you create an instance of the &lt;xref:System.Net.Security.SslStream&gt; class.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラス&lt;/xref:System.Net.Security.SslStream&gt;のインスタンスを作成するときに、基になるストリームが指定されています。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティは常に返します<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the underlying stream supports time-outs.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;基になるストリームがタイムアウトをサポートするかどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>This property returns the value returned by invoking &lt;xref:System.IO.Stream.CanTimeout%2A&gt; on the underlying stream.</source>
          <target state="translated">このプロパティを呼び出すことによって返される値を返します&lt;xref:System.IO.Stream.CanTimeout%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.CanTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The underlying stream is specified when you create an instance of the &lt;xref:System.Net.Security.SslStream&gt; class.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラス&lt;/xref:System.Net.Security.SslStream&gt;のインスタンスを作成するときに、基になるストリームが指定されています。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the underlying stream supports time-outs; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>基になるストリームがタイムアウトをサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the underlying stream is writable.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;を基になるストリームが書き込み可能かどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If successful authentication has occurred, this property returns the value returned by invoking &lt;xref:System.IO.Stream.CanWrite%2A&gt; on the underlying stream.</source>
          <target state="translated">成功した認証が発生した場合、このプロパティは呼び出しによって返される値を返します&lt;xref:System.IO.Stream.CanWrite%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.CanWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The underlying stream is specified when you create an instance of the &lt;xref:System.Net.Security.SslStream&gt; class.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラス&lt;/xref:System.Net.Security.SslStream&gt;のインスタンスを作成するときに、基になるストリームが指定されています。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if authentication has occurred and the underlying stream is writable; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>認証が行われ、基になるストリームが書き込み可能な場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the certificate revocation list is checked during the certificate validation process.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;証明書の検証プロセス中に証明書失効リストを確認するかどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The certificate revocation list contains certificates that have been revoked by the issuer.</source>
          <target state="translated">証明書失効リストには、発行元によって失効した証明書が含まれています。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Checking the list negatively impacts performance but improves application security.</source>
          <target state="translated">悪影響を及ぼす一覧を確認すると、パフォーマンスに影響を与えますが、アプリケーションのセキュリティが向上します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the certificate revocation list is checked; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>証明書失効リストがチェックされている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Gets a value that identifies the bulk encryption algorithm used by this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これによって使用される一括暗号化アルゴリズムを識別する値を取得<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>A value of &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; is required for the CipherAlgorithm property when the &lt;xref:System.Net.Security.EncryptionPolicy&gt; enumeration value is used to construct a &lt;xref:System.Net.Security.SslStream&gt; instance.</source>
          <target state="translated">値&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;CipherAlgorithm プロパティに必要なときに、&lt;xref:System.Net.Security.EncryptionPolicy&gt;列挙値が構築するために使用される、&lt;xref:System.Net.Security.SslStream&gt;インスタンス&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Net.Security.EncryptionPolicy&gt;&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]</ph> and <ph id="ph2">[!INCLUDE[winxp](~/add/includes/winxp-md.md)]</ph> do not support the &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; value.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]</ph>および<ph id="ph2">[!INCLUDE[winxp](~/add/includes/winxp-md.md)]</ph>サポートしていない、&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;値&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>So even if the &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; value is used to construct the &lt;xref:System.Net.Security.SslStream&gt; instance, the &lt;xref:System.Net.Security.EncryptionPolicy&gt; property will be &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;.</source>
          <target state="translated">場合でも、&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;値がこの&lt;xref:System.Net.Security.SslStream&gt;インスタンスの&lt;xref:System.Net.Security.EncryptionPolicy&gt;プロパティに&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;.&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;なる&lt;/xref:System.Net.Security.EncryptionPolicy&gt;&lt;/xref:System.Net.Security.SslStream&gt;を構築するために使用&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;する</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; value is only returned on Windows Vista and later.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;Windows Vista 以降でのみ値が返されます&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.Authentication.CipherAlgorithmType&gt; value.</source>
          <target state="translated">A&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;値&lt;/xref:System.Security.Authentication.CipherAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The CipherAlgorithm property was accessed before the completion of the authentication process or the authentication process failed.</source>
          <target state="translated">認証プロセスや、認証プロセスの完了前に、CipherAlgorithm プロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets a value that identifies the strength of the cipher algorithm used by this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これで使用される暗号アルゴリズムの強度を識別する値を取得<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">認証が行われるまで、このプロパティの値は&amp;0; です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This property returns one of the following values:      -   0      -   40      -   56      -   80      -   128      -   168      -   192      -   256</source>
          <target state="translated">このプロパティは、次の値のいずれかを返します: - 0 - 40-56-80 128-168 192 - 256</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the strength of the algorithm, in bits.</source>
          <target state="translated">&lt;xref:System.Int32&gt;、アルゴリズムの強度をビット単位で指定する値&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび&lt;xref:System.Object.Finalize%2A&gt;メソッド&lt;/xref:System.Object.Finalize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;呼び出す<ph id="ph1">`Dispose`</ph>で<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Security.SslStream&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Net.Security.SslStream&gt;参照。&lt;/xref:System.Net.Security.SslStream&gt; 。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Ends a pending asynchronous server authentication operation started with a previous call to &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;を前回呼び出したときに開始された保留中の非同期サーバー認証操作を終了します。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">操作が完了していない場合、このメソッドはそれまでブロックします。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>When the authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合、必要がありますをチェックする&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;&lt;xref:System.Net.Security.SslStream&gt;。&lt;/xref:System.Net.Security.SslStream&gt;が使用されるセキュリティ サービスの種類を決定して&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>To perform this operation synchronously, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">この操作を同期的に実行するには、いずれかの操作を使用して、&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; instance returned by a call to &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;.</source>
          <target state="translated">の&lt;xref:System.IAsyncResult&gt;インスタンスは&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;への呼び出しによって返されます。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>呼び出しによって作成されていない<ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>There is no pending server authentication to complete.</source>
          <target state="translated">保留中のサーバー認証が完了することはありません。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Ends a pending asynchronous client authentication operation started with a previous call to &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;を前回呼び出したときに開始された保留中の非同期クライアントの認証操作を終了します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">操作が完了していない場合、このメソッドはそれまでブロックします。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>When the authentication succeeds, you must check the &lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt; and &lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt; properties to determine what security services are used by the &lt;xref:System.Net.Security.SslStream&gt;.</source>
          <target state="translated">認証に成功した場合、必要がありますをチェックする&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;&lt;xref:System.Net.Security.SslStream&gt;。&lt;/xref:System.Net.Security.SslStream&gt;が使用されるセキュリティ サービスの種類を決定して&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;プロパティ&lt;/xref:System.Net.Security.SslStream.IsSigned%2A&gt;&lt;/xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Check the &lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt; property to determine whether mutual authentication occurred.</source>
          <target state="translated">チェック、&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;相互認証が行われたかどうかを決定するプロパティ&lt;/xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>If the authentication fails, you receive a &lt;xref:System.Security.Authentication.AuthenticationException&gt;, and this &lt;xref:System.Net.Security.SslStream&gt; is no longer useable.</source>
          <target state="translated">受信した認証に失敗した場合、 &lt;xref:System.Security.Authentication.AuthenticationException&gt;、され、この&lt;xref:System.Net.Security.SslStream&gt;、使用できなくします&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.Security.Authentication.AuthenticationException&gt;。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>You should close this object and remove all references to it so that it can be collected by the garbage collector.</source>
          <target state="translated">このオブジェクトを閉じるし、ガベージ コレクターによって収集できるように、すべての参照を削除する必要があります。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>To perform this operation synchronously, use one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; method.</source>
          <target state="translated">この操作を同期的に実行するには、いずれかの操作を使用して、&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; instance returned by a call to &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;.</source>
          <target state="translated">の&lt;xref:System.IAsyncResult&gt;インスタンスは&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;への呼び出しによって返されます。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>呼び出しによって作成されていない<ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The authentication failed and left this object in an unusable state.</source>
          <target state="translated">認証が失敗し、このオブジェクトを使用できない状態のままです。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>There is no pending client authentication to complete.</source>
          <target state="translated">保留中のクライアント認証が完了することはありません。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous read operation started with a previous call to &lt;xref:System.Net.Security.SslStream.BeginRead*&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginRead*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginRead*&gt;を前回呼び出したときの使用を開始して、非同期読み取り操作を終了します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">操作が完了していない場合、このメソッドはそれまでブロックします。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>To perform this operation synchronously, use the &lt;xref:System.Net.Security.SslStream.Read%2A&gt; method.</source>
          <target state="translated">この操作を同期的に実行するを使用して、&lt;xref:System.Net.Security.SslStream.Read%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.Read%2A&gt;。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>To authenticate call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">いずれかの呼び出しを認証するために、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; instance returned by a call to &lt;xref:System.Net.Security.SslStream.BeginRead*&gt;</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;への呼び出しによって返されるインスタンス&lt;xref:System.Net.Security.SslStream.BeginRead*&gt;&lt;/xref:System.Net.Security.SslStream.BeginRead*&gt;&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; value that specifies the number of bytes read from the underlying stream.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;基になるストリームから読み取ったバイト数を指定する値&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginRead*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>呼び出しによって作成されていない<ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginRead*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The read operation failed.</source>
          <target state="translated">読み取り操作が失敗しました。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation started with a previous call to &lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;。&lt;/xref:System.Net.Security.SslStream.BeginWrite*&gt;を前回呼び出したときに開始された非同期の書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">操作が完了していない場合、このメソッドはそれまでブロックします。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>An application cannot call this method until you have successfully authenticated.</source>
          <target state="translated">アプリケーションは、正常に認証が完了するまで、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>To authenticate, call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">を認証するには、のいずれかを呼び出して、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド。&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; &lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; &lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt; &lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>To perform this operation synchronously, use the &lt;xref:System.Net.Security.SslStream.Write%2A&gt; method.</source>
          <target state="translated">この操作を同期的に実行するを使用して、&lt;xref:System.Net.Security.SslStream.Write%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.Write%2A&gt;。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; instance returned by a call to &lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;への呼び出しによって返されるインスタンス&lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;&lt;/xref:System.Net.Security.SslStream.BeginWrite*&gt;&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>呼び出しによって作成されていない<ph id="ph2">&lt;xref:System.Net.Security.SslStream.BeginWrite*&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The write operation failed.</source>
          <target state="translated">書き込み操作に失敗しました。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Causes any buffered data to be written to the underlying device.</source>
          <target state="translated">基になるデバイスに書き込まれるバッファー内のデータが発生します。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>This method invokes &lt;xref:System.IO.Stream.Flush%2A&gt; on the underlying stream.</source>
          <target state="translated">このメソッドを呼び出して&lt;xref:System.IO.Stream.Flush%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.Flush%2A&gt;。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Gets the algorithm used for generating message authentication codes (MACs).</source>
          <target state="translated">メッセージ認証コード (Mac) を生成するために使用されるアルゴリズムを取得します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</source>
          <target state="translated">メッセージ認証アルゴリズムは、メッセージのハッシュと改ざんとフォージェリを検出するために使用する署名を生成します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.Authentication.HashAlgorithmType&gt; value.</source>
          <target state="translated">A&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;値&lt;/xref:System.Security.Authentication.HashAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The HashAlgorithm property was accessed before the completion of the authentication process or the authentication process failed.</source>
          <target state="translated">認証プロセスや、認証プロセスの完了前に、ハッシュ アルゴリズム プロパティがアクセスされました。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Gets a value that identifies the strength of the hash algorithm used by this instance.</source>
          <target state="translated">このインスタンスで使用されるハッシュ アルゴリズムの強度を識別する値を取得します。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">認証が行われるまで、このプロパティの値は&amp;0; です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the strength of the &lt;xref:System.Security.Authentication.HashAlgorithmType&gt; algorithm, in bits.</source>
          <target state="translated">&lt;xref:System.Int32&gt;の強さを示す値、&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;ビット単位のアルゴリズム&lt;/xref:System.Security.Authentication.HashAlgorithmType&gt;&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Valid values are 128 or 160.</source>
          <target state="translated">有効な値は 128 160 です。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether authentication was successful.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;認証が成功したかどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Clients authenticate by calling the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt; or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt; methods.</source>
          <target state="translated">クライアントの認証を呼び出して、&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Servers authenticate by calling the &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">呼び出してサーバーに認証、&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if successful authentication occurred; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>認証成功した場合です。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses data encryption.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;を示す値かどうかこの<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データの暗号化を使用します&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</source>
          <target state="translated">暗号化は、データのプライバシーを保護すること、つまり役に立つことデータは、転送中は、サード パーティが解読できないことを確認してください。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>データがネットワーク経由で送信される前に暗号化および復号化する場合に着いたときに、リモート エンドポイントです。それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether both server and client have been authenticated.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;サーバーとクライアントの両方が認証されているかどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</source>
          <target state="translated">相互認証は、サーバーが、クライアント認証証明書を提供するときに、サーバーによって指定されます。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the server has been authenticated; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>サーバーが認証されている場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the local side of the connection used by this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was authenticated as the server.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;この接続のローカル側が使用するかどうかを示す値<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>サーバーとして認証されました&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>If authentication failed or did not occur, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">認証失敗または発生しなかった、このプロパティを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To authenticate as the server, call the &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt; or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">サーバーで、認証に呼び出して、&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、ローカル エンドポイントは、認証された接続のサーバー側として正常に認証されましたそれ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Gets a &lt;xref:System.Boolean&gt; value that indicates whether the data sent using this stream is signed.</source>
          <target state="translated">取得、&lt;xref:System.Boolean&gt;をこのストリームを使用して送信されるデータが署名されているかどうかを示す値&lt;/xref:System.Boolean&gt;。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</source>
          <target state="translated">署名によって、データの整合性を保護するデータ、つまりなります、受信者、データが転送中に改ざんされているかどうかを特定します。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data is signed before being transmitted; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>送信する前に、データが署名されている場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Gets the key exchange algorithm used by this <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これによって使用されるキー交換アルゴリズムを取得<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The value of this property is &lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt; until the authentication occurs.</source>
          <target state="translated">このプロパティの値が&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;認証が行われるまで&lt;/xref:System.Security.Authentication.ExchangeAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The key exchange algorithm protects information used to generate shared keys.</source>
          <target state="translated">キー交換アルゴリズムは、共有キーを生成するための情報を保護します。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt; value.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;値&lt;/xref:System.Security.Authentication.ExchangeAlgorithmType&gt;。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</source>
          <target state="translated">このインスタンスで使用されるキー交換アルゴリズムの強度を識別する値を取得します。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The value of this property is zero until the authentication occurs.</source>
          <target state="translated">認証が行われるまで、このプロパティの値は&amp;0; です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>In common scenarios, the value of this property is one of the following:      -   512      -   768      -   1024      -   2048</source>
          <target state="translated">このプロパティの値では、一般的なシナリオでは、次のいずれかの: - 512 768-1024 2048</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt; value that specifies the strength of the &lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt; algorithm, in bits.</source>
          <target state="translated">&lt;xref:System.Int32&gt;の強さを示す値、&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;ビット単位のアルゴリズム&lt;/xref:System.Security.Authentication.ExchangeAlgorithmType&gt;&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets the length of the underlying stream.</source>
          <target state="translated">基になるストリームの長さを取得します。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>This property returns the value returned by invoking &lt;xref:System.IO.Stream.Length%2A&gt; on the underlying stream.</source>
          <target state="translated">このプロパティを呼び出すことによって返される値を返します&lt;xref:System.IO.Stream.Length%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.Length%2A&gt;。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>If the underlying stream is not seekable, this method typically throws an exception.</source>
          <target state="translated">基になるストリームがシーク可能でない場合は、このメソッドは通常、例外をスローします。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">基になるストリームの実行時の型では、スローされる例外の実行時の型を決定します。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int64&gt;.</source>
          <target state="translated">A &lt;xref:System.Int64&gt;.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The length of the underlying stream.</source>
          <target state="translated">基になるストリームの長さ。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Getting the value of this property is not supported when the underlying stream is a <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">このプロパティの値を取得することはできません基になるストリームが、 <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Gets the certificate used to authenticate the local endpoint.</source>
          <target state="translated">ローカル エンドポイントの認証に使用する証明書を取得します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>An X509Certificate object that represents the certificate supplied for authentication or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no certificate was supplied.</source>
          <target state="translated">認証に指定された証明書を表す X509Certificate オブジェクトまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>証明書が指定されていない場合。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">認証が失敗したかが発生していません。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position in the underlying stream.</source>
          <target state="translated">取得または基になるストリーム内の現在位置を設定します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>This property returns the value returned by invoking &lt;xref:System.IO.Stream.Position%2A&gt; on the underlying stream.</source>
          <target state="translated">このプロパティを呼び出すことによって返される値を返します&lt;xref:System.IO.Stream.Position%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.Position%2A&gt;。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>If the underlying stream is not seekable, this method typically throws an exception.</source>
          <target state="translated">基になるストリームがシーク可能でない場合は、このメソッドは通常、例外をスローします。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</source>
          <target state="translated">基になるストリームの実行時の型では、スローされる例外の実行時の型を決定します。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int64&gt;.</source>
          <target state="translated">A &lt;xref:System.Int64&gt;.&lt;/xref:System.Int64&gt;</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The current position in the underlying stream.</source>
          <target state="translated">基になるストリームの現在の位置。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Setting this property is not supported.</source>
          <target state="translated">このプロパティを設定することはできません。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>-or-       Getting the value of this property is not supported when the underlying stream is a <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">または、このプロパティの値を取得することはできません基になるストリームが、 <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Reads data from this stream and stores it in the specified array.</source>
          <target state="translated">このストリームからデータを読み取り、指定した配列に格納します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The method reads a maximum of <ph id="ph1">`count`</ph> bytes from the stream and stores them in <ph id="ph2">`buffer`</ph> beginning at <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">メソッドは、最大数を読み取ります<ph id="ph1">`count`</ph>ストリームからバイトに格納<ph id="ph2">`buffer`</ph>始点<ph id="ph3">`offset`</ph>です。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>You cannot perform multiple simultaneous read operations.</source>
          <target state="translated">複数の同時読み取り操作を行うことはできません。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>To authenticate call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">いずれかの呼び出しを認証するために、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>To perform this operation asynchronously, use the &lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt; method.</source>
          <target state="translated">この操作を非同期的に実行するを使用して、&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginRead%2A&gt;。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array that receives the bytes read from this stream.</source>
          <target state="translated">A&lt;xref:System.Byte&gt;このストリームから読み取ったバイトを受け取る配列&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that contains the zero-based location in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from this stream.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;内の&amp;0; から始まる位置を表す<ph id="ph1">`buffer`</ph>このストリームから読み取ったデータの格納を開始する位置&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that contains the maximum number of bytes to read from this stream.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;を現在のストリームから読み取るバイト数の最大数を格納している&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; value that specifies the number of bytes read.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;読み取られたバイト数を指定する値&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>When there is no more data to be read, returns 0.</source>
          <target state="translated">読み取られるデータがある場合は、0 を返します。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph3">&amp;gt;</ph>の長さ<ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The read operation failed.</source>
          <target state="translated">読み取り操作が失敗しました。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Check the inner exception, if present to determine the cause of the failure.</source>
          <target state="translated">エラーの原因を特定するのには存在する場合は、内部例外を確認します。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>There is already a read operation in progress.</source>
          <target state="translated">実行中の読み取り操作が既に存在します。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time a read operation blocks waiting for data.</source>
          <target state="translated">取得または読み取り操作がブロックのデータ待機時間を設定します。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>This property returns the value returned by invoking &lt;xref:System.IO.Stream.ReadTimeout%2A&gt; on the underlying stream.</source>
          <target state="translated">このプロパティを呼び出すことによって返される値を返します&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.ReadTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>When you set this property, the &lt;xref:System.IO.Stream.ReadTimeout%2A&gt; value on the underlying stream is set to the specified value.</source>
          <target state="translated">このプロパティを設定すると、&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;基になるストリームの値が指定した値に設定します&lt;/xref:System.IO.Stream.ReadTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>If the underlying stream is a &lt;xref:System.Net.Sockets.NetworkStream&gt;, ReadTimeout is in milliseconds and is set to &lt;xref:System.Threading.Timeout.Infinite&gt; by default so that read operations do not timeout.</source>
          <target state="translated">基になるストリームがある場合、 &lt;xref:System.Net.Sockets.NetworkStream&gt;、ReadTimeout (ミリ秒単位) に設定されている&lt;xref:System.Threading.Timeout.Infinite&gt;既定では読み取ることの操作はタイムアウトにならないようにします&lt;/xref:System.Threading.Timeout.Infinite&gt;&lt;/xref:System.Net.Sockets.NetworkStream&gt;。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that specifies the amount of time that elapses before a synchronous read operation fails.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;同期読み取り操作が失敗する前に経過した時間の大きさを指定します&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Gets the certificate used to authenticate the remote endpoint.</source>
          <target state="translated">リモート エンドポイントの認証に使用する証明書を取得します。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>An X509Certificate object that represents the certificate supplied for authentication or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no certificate was supplied.</source>
          <target state="translated">認証に指定された証明書を表す X509Certificate オブジェクトまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>証明書が指定されていない場合。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Authentication failed or has not occurred.</source>
          <target state="translated">認証が失敗したかが発生していません。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt;がスローされます。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Do not call this method.</source>
          <target state="translated">このメソッドを呼び出さないでください。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>It is inherited, but is not supported by the &lt;xref:System.Net.Security.SslStream&gt; class.</source>
          <target state="translated">関数は、継承されますが、&lt;xref:System.Net.Security.SslStream&gt;クラス&lt;/xref:System.Net.Security.SslStream&gt;でサポートされていません</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>This value is ignored.</source>
          <target state="translated">この値は無視されます。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>This value is ignored.</source>
          <target state="translated">この値は無視されます。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Always throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;。&lt;/xref:System.NotSupportedException&gt;は常にスローします。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Seeking is not supported by <bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">シークはサポートされていない<bpt id="p1">&lt;xref href="System.Net.Security.SslStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Sets the length of the underlying stream.</source>
          <target state="translated">基になるストリームの長さを設定します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>This method invokes &lt;xref:System.IO.Stream.SetLength%2A?displayProperty=fullName&gt; on the underlying stream specified when this &lt;xref:System.Net.Security.SslStream&gt; was created.</source>
          <target state="translated">このメソッドを呼び出して&lt;xref:System.IO.Stream.SetLength%2A?displayProperty=fullName&gt;ときに指定した基になるストリームこの&lt;xref:System.Net.Security.SslStream&gt;作成されました&lt;/xref:System.Net.Security.SslStream&gt;&lt;/xref:System.IO.Stream.SetLength%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int64&gt; value that specifies the length of the stream.</source>
          <target state="translated">&lt;xref:System.Int64&gt;ストリームの長さを指定する値&lt;/xref:System.Int64&gt;。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the security protocol used to authenticate this connection.</source>
          <target state="translated">この接続の認証に使用されるセキュリティ プロトコルを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The supported security protocols are specified when the &lt;xref:System.Net.Security.SslStream&gt; is created.</source>
          <target state="translated">サポートされているセキュリティ プロトコルが指定されたときに、&lt;xref:System.Net.Security.SslStream&gt;を作成します&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>If no security protocol was passed to the constructor, the instance is created using &lt;xref:System.Security.Authentication.SslProtocols&gt;.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;。&lt;/xref:System.Security.Authentication.SslProtocols&gt;を使用して、インスタンスを作成する場合は、コンス トラクターに渡されたセキュリティ プロトコルはありません、</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>The actual protocol used for authentication is selected based on the protocols supported by the client and server.</source>
          <target state="translated">クライアントとサーバーでサポートされるプロトコルに基づく認証に使用される実際のプロトコルが選択されます。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Authentication.SslProtocols&gt; value that represents the protocol used for authentication.</source>
          <target state="translated">&lt;xref:System.Security.Authentication.SslProtocols&gt;認証に使用されるプロトコルを表す値&lt;/xref:System.Security.Authentication.SslProtocols&gt;。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Net.TransportContext&gt; used for authentication using extended protection.</source>
          <target state="translated">取得、&lt;xref:System.Net.TransportContext&gt;拡張保護を使用する認証のために使用します&lt;/xref:System.Net.TransportContext&gt;。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.TransportContext&gt; object that contains the channel binding token (CBT) used for extended protection.</source>
          <target state="translated">&lt;xref:System.Net.TransportContext&gt;拡張保護のために使用するチャネル バインディング トークン (CBT) を含むオブジェクトです&lt;/xref:System.Net.TransportContext&gt;。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Writes the specified data to this stream.</source>
          <target state="translated">このストリームに指定されたデータを書き込みます。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>This method blocks while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>To prevent blocking while the operation completes, use the &lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt; method.</source>
          <target state="translated">操作が完了するまでブロックを回避するには&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>To authenticate call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">いずれかの呼び出しを認証するために、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream&gt; class does not support multiple simultaneous write operations.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラスが複数の同時書き込み操作をサポートしていません&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array that supplies the bytes written to the stream.</source>
          <target state="translated">A&lt;xref:System.Byte&gt;をストリームに書き込まれたバイトを提供します&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The write operation failed.</source>
          <target state="translated">書き込み操作に失敗しました。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>There is already a write operation in progress.</source>
          <target state="translated">実行中の書き込み操作が既に存在します。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Write the specified number of &lt;xref:System.Byte&gt;s to the underlying stream using the specified buffer and offset.</source>
          <target state="translated">指定した数を書き込む&lt;xref:System.Byte&gt;、指定されたバッファーとオフセットを使用して、基になるストリームにします&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>This method blocks while the operation completes.</source>
          <target state="translated">このメソッドは、操作が完了するまでブロックします。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>To prevent blocking while the operation completes the operation completes, use the &lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt; method.</source>
          <target state="translated">操作は、操作を完了するまでブロックされないように、完了すると、使用して、&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginWrite%2A&gt;。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>You cannot call this method until you have successfully authenticated.</source>
          <target state="translated">正常に認証が完了するまでは、このメソッドを呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>To authenticate call one of the &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;, or &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;, &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;, &lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt; methods.</source>
          <target state="translated">いずれかの呼び出しを認証するために、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;、または&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;、 &lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;、&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;メソッド&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;&lt;/xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;&lt;/xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Security.SslStream&gt; class does not support multiple simultaneous write operations.</source>
          <target state="translated">&lt;xref:System.Net.Security.SslStream&gt;クラスが複数の同時書き込み操作をサポートしていません&lt;/xref:System.Net.Security.SslStream&gt;。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Byte&gt; array that supplies the bytes written to the stream.</source>
          <target state="translated">A&lt;xref:System.Byte&gt;をストリームに書き込まれたバイトを提供します&lt;/xref:System.Byte&gt;。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that contains the zero-based location in <ph id="ph1">`buffer`</ph> at which to begin reading bytes to be written to the stream.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;内の&amp;0; から始まる位置を表す<ph id="ph1">`buffer`</ph>ストリームに書き込まれるバイトの読み取りを開始する位置&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that contains the number of bytes to read from <ph id="ph1">`buffer`</ph>.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;から読み取るバイト数が含まれる<ph id="ph1">`buffer`</ph>&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2">     &lt;code&gt;&amp;lt;&lt;/code&gt;</ph><ph id="ph3">     &lt;code&gt;0&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph3">&amp;gt;</ph>の長さ<ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> +</ph> count <ph id="ph3">&amp;gt;</ph> the length of <ph id="ph4">&lt;code&gt;buffer&lt;/code&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The write operation failed.</source>
          <target state="translated">書き込み操作に失敗しました。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>There is already a write operation in progress.</source>
          <target state="translated">実行中の書き込み操作が既に存在します。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>This object has been closed.</source>
          <target state="translated">このオブジェクトが閉じられました。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Authentication has not occurred.</source>
          <target state="translated">認証が行われていません。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time a write operation blocks waiting for data.</source>
          <target state="translated">取得または書き込み操作がブロックのデータ待機時間を設定します。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>This property returns the value returned by invoking &lt;xref:System.IO.Stream.WriteTimeout%2A&gt; on the underlying stream.</source>
          <target state="translated">このプロパティを呼び出すことによって返される値を返します&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;基になるストリーム&lt;/xref:System.IO.Stream.WriteTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>For set operations, the specified value sets the &lt;xref:System.IO.Stream.WriteTimeout%2A&gt; value on the underlying stream.</source>
          <target state="translated">指定された値の設定、集合演算、&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;基になるストリームの値&lt;/xref:System.IO.Stream.WriteTimeout%2A&gt;。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If the underlying stream is a &lt;xref:System.Net.Sockets.NetworkStream&gt;, WriteTimeout is in milliseconds and is set to &lt;xref:System.Threading.Timeout.Infinite&gt; by default so that write operations do not timeout.</source>
          <target state="translated">基になるストリームがある場合、 &lt;xref:System.Net.Sockets.NetworkStream&gt;、WriteTimeout (ミリ秒単位) に設定されている&lt;xref:System.Threading.Timeout.Infinite&gt;既定では書き込み操作はタイムアウトにならないようにします&lt;/xref:System.Threading.Timeout.Infinite&gt;&lt;/xref:System.Net.Sockets.NetworkStream&gt;。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that specifies the amount of time that elapses before a synchronous write operation fails.</source>
          <target state="translated">A&lt;xref:System.Int32&gt;同期書き込み操作が失敗する前に経過した時間の大きさを指定します&lt;/xref:System.Int32&gt;。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>