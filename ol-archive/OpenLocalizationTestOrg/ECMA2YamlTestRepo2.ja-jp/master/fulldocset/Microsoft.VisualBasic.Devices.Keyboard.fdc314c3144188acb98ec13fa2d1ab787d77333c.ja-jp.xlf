<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72658bf2c16c545341dc3ab447e5f77f12a9ef75</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Devices.Keyboard.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d324d555e53c7dc0a3ec00ab83993915227eef1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c6ef3847ea33e1a04011b3a899ccecc9ec0b18a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.</source>
          <target state="translated">キーが現在、押されているし、キーストロークをアクティブなウィンドウに送信するためのメソッドを提供する新機能など、キーボードの現在の状態にアクセスするためには、プロパティを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard`</ph> object provides an interface to the computer's keyboard.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard`</ph>オブジェクトは、コンピューターのキーボード インターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The properties of the <ph id="ph1">`My.Computer.Keyboard`</ph> provide information about the state of several special keys.</source>
          <target state="translated">プロパティ、<ph id="ph1">`My.Computer.Keyboard`</ph>いくつかの特殊なキーの状態に関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method lets you send keys to the active window as if they have been typed at the keyboard.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph>メソッドにより、キーボードで型指定されているかのようにキーをアクティブなウィンドウに送信できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Tasks    The following table lists an example of a task involving the <ph id="ph1">`My.Computer.Keyboard`</ph> object.</source>
          <target state="translated">関連するタスクの例を次の表のタスク、<ph id="ph1">`My.Computer.Keyboard`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |To|See|   |Send keystrokes to an application|<bpt id="p1">[</bpt>How to: Start an Application and Send it Keystrokes (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Class Library|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Console Application|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Windows Control Library|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p6">**</bpt>Yes<ept id="p6">**</ept>|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  ||参照してください |  |アプリケーションにキーストロークを送信 |<bpt id="p1">[</bpt>する方法: アプリケーションを起動してキーストロークを送る (Visual Basic)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|     ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |クラス ライブラリ |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |コンソール アプリケーション |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p6">**</bpt>Yes<ept id="p6">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Devices.Keyboard"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Devices.Keyboard"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if the ALT key is down.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ALT キーが押されてかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.AltKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.AltKeyDown`</ph>プロパティと同様の機能を提供する、&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;プロパティ&lt;/xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the ALT key is down; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 、ALT キーがダウンして、それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if CAPS LOCK is turned on.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CAPS LOCK がオンになっているかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only the state of CAPS LOCK is returned.</source>
          <target state="translated">CAPS LOCK の状態のみが返されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if CAPS LOCK is turned on; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値: <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> CAPS LOCK がオンです。 それ以外の場合になっている場合<bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if a CTRL key is down.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> CTRL キーが押されてかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.CtrlKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.CtrlKeyDown`</ph>プロパティと同様の機能を提供する、&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;プロパティ&lt;/xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a CTRL key is down; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>CTRL キーが; ダウンした場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if the NUM LOCK key is on.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> NUM LOCK キーがかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Only the state of the NUM LOCK key is returned.</source>
          <target state="translated">NUM LOCK キーの状態のみが返されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if NUM LOCK is on; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>NUMLOCK が; にある場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating whether the SCROLL LOCK key is on.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SCROLL LOCK キーがオンかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Only the state of the SCROLL LOCK key is returned.</source>
          <target state="translated">SCROLL LOCK キーの状態のみが返されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if SCROLL LOCK is on; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>スクロール ロックが; にある場合それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Sends one or more keystrokes to the active window, as if typed on the keyboard.</source>
          <target state="translated">キーボードで入力する&amp;1; つまたは複数のキーストロークをアクティブなウィンドウに送信します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph>メソッドと同様の機能を提供する、&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;と&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;メソッド&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wait`</ph> argument is useful if the other application must finish before your application can continue.</source>
          <target state="translated"><ph id="ph1">`wait`</ph>引数は、アプリケーションを続行する前に、他のアプリケーションが終了した場合に便利です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用して、手動で、キーを送信するウィンドウを選択かなど、Windows API のメソッドを使用して<ph id="ph2">`FindWindow`</ph>と<ph id="ph3">`SetForegroundWindow`</ph>、他のアプリケーションにフォーカスを設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Calling Windows APIs<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: Windows Api の呼び出し<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</source>
          <target state="translated"><ph id="ph1">`keys`</ph>引数は、いずれか&amp;1; つのキーまたは alt キーを押し、CTRL、shift キーを押し (またはそれらのキーの任意の組み合わせ) と組み合わせて使用する任意のキーを指定できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters, such as <ph id="ph1">`a`</ph> for the character "a", or <ph id="ph2">`{ENTER}`</ph> for the ENTER key.</source>
          <target state="translated">各キーがなどの&amp;1; つ以上の文字で表される<ph id="ph1">`a`</ph>の文字"a"、または<ph id="ph2">`{ENTER}`</ph>ENTER キーをします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To combine a key with SHIFT, precede the key code with <ph id="ph1">`+`</ph> (plus sign).</source>
          <target state="translated">SHIFT キーを組み合わせて、コードで<ph id="ph1">`+`</ph>(プラス記号) です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To combine a key with CTRL, precede the key code with <ph id="ph1">`^`</ph> (caret).</source>
          <target state="translated">CTRL キーを組み合わせて、コードで<ph id="ph1">`^`</ph>(キャレット)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To combine a key with ALT, precede the key code with <ph id="ph1">`%`</ph> (percent sign).</source>
          <target state="translated">ALT キーを組み合わせて、コードで<ph id="ph1">`%`</ph>(パーセント)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>key number<ept id="p1">*</ept><ph id="ph2">`}`</ph>.</source>
          <target state="translated">繰り返しのキーを指定するには、フォームを使用して<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>キー数<ept id="p1">*</ept><ph id="ph2">`}`</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You must put a space between <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>number<ept id="p2">*</ept>.</source>
          <target state="translated">間にスペースを配置する必要があります<bpt id="p1">*</bpt>キー<ept id="p1">*</ept>と<bpt id="p2">*</bpt>数<ept id="p2">*</ept>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`{LEFT 42}`</ph> means "press the LEFT ARROW key 42 times"; <ph id="ph2">`{h 10}`</ph> means "press 'h' 10 times."</source>
          <target state="translated">たとえば、<ph id="ph1">`{LEFT 42}`</ph>意味"左方向キーを押して 42 時間"です。<ph id="ph2">`{h 10}`</ph>手段"'h' 10 回押します"。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</source>
          <target state="translated">次の表は、(ENTER キーまたは TAB) などの対応するキーを押したときに表示されていない文字を指定するために使用するコードを示します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  |キー |コード |  |BACKSPACE |{BACKSPACE} または {BS} |  |中断 |{中断} |  |CAPS LOCK |{CAPSLOCK} |  |オフ |{オフ} |  |削除 |{削除} または {DEL} |  |下向きの矢印 |{ダウン} |  |終了 |{終了} |  |入力 (テンキー) |{に入力} |  |入力してください | ~ |  |ESC |{エスケープ} または {ESC} |  |ヘルプ |{ヘルプ} |  |ホーム |{ホーム} |  |INS |{挿入} |  |左矢印 |{LEFT} が |  |NUM LOCK |{NUMLOCK} |  |1 ページ下 |{した} |  |ページ上に |{PGUP} |  |返す |{返す} |  |右矢印 |{右} |  |SCROLL LOCK |{SCROLLLOCK} |  |タブ |{タブ} |  |上向き矢印 |{最大} |  |F1 ~ F15 |{F1} {F15} を通じて |     ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the keys to send.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>送信するキーを定義します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A partial-trust situation exists in which the user lacks necessary permissions.</source>
          <target state="translated">部分的に信頼された状況では、ユーザーが必要なアクセス許可を持っていない存在しています。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sends one or more keystrokes to the active window, as if typed on the keyboard.</source>
          <target state="translated">キーボードで入力する&amp;1; つまたは複数のキーストロークをアクティブなウィンドウに送信します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the &lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt; and &lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt; methods.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.SendKeys`</ph>メソッドと同様の機能を提供する、&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;と&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;メソッド&lt;/xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;&lt;/xref:System.Windows.Forms.SendKeys.Send%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`wait`</ph> argument is useful if the other application must finish before your application can continue.</source>
          <target state="translated"><ph id="ph1">`wait`</ph>引数は、アプリケーションを続行する前に、他のアプリケーションが終了した場合に便利です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id="ph2">`FindWindow`</ph> and <ph id="ph3">`SetForegroundWindow`</ph>, to force focus on other applications.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 別のアプリケーションをアクティブ化するマネージ メソッドがないため、現在のアプリケーション内でこのクラスを使用して、手動で、キーを送信するウィンドウを選択かなど、Windows API のメソッドを使用して<ph id="ph2">`FindWindow`</ph>と<ph id="ph3">`SetForegroundWindow`</ph>、他のアプリケーションにフォーカスを設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Calling Windows APIs<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: Windows Api の呼び出し<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).</source>
          <target state="translated"><ph id="ph1">`keys`</ph>引数は、いずれか&amp;1; つのキーまたは alt キーを押し、CTRL、shift キーを押し (またはそれらのキーの任意の組み合わせ) と組み合わせて使用する任意のキーを指定できます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each key is represented by one or more characters, such as <ph id="ph1">`a`</ph> for the character "a", or <ph id="ph2">`{ENTER}`</ph> for the ENTER key.</source>
          <target state="translated">各キーがなどの&amp;1; つ以上の文字で表される<ph id="ph1">`a`</ph>の文字"a"、または<ph id="ph2">`{ENTER}`</ph>ENTER キーをします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To combine a key with SHIFT, precede the key code with <ph id="ph1">`+`</ph> (plus sign).</source>
          <target state="translated">SHIFT キーを組み合わせて、コードで<ph id="ph1">`+`</ph>(プラス記号) です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To combine a key with CTRL, precede the key code with <ph id="ph1">`^`</ph> (caret).</source>
          <target state="translated">CTRL キーを組み合わせて、コードで<ph id="ph1">`^`</ph>(キャレット)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>To combine a key with ALT, precede the key code with <ph id="ph1">`%`</ph> (percent sign).</source>
          <target state="translated">ALT キーを組み合わせて、コードで<ph id="ph1">`%`</ph>(パーセント)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To specify repeating keys, use the form <ph id="ph1">`{`</ph><bpt id="p1">*</bpt>key number<ept id="p1">*</ept><ph id="ph2">`}`</ph>.</source>
          <target state="translated">繰り返しのキーを指定するには、フォームを使用して<ph id="ph1">`{`</ph><bpt id="p1">*</bpt>キー数<ept id="p1">*</ept><ph id="ph2">`}`</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You must put a space between <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>number<ept id="p2">*</ept>.</source>
          <target state="translated">間にスペースを配置する必要があります<bpt id="p1">*</bpt>キー<ept id="p1">*</ept>と<bpt id="p2">*</bpt>数<ept id="p2">*</ept>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`{LEFT 42}`</ph> means "press the LEFT ARROW key 42 times"; <ph id="ph2">`{h 10}`</ph> means "press 'h' 10 times."</source>
          <target state="translated">たとえば、<ph id="ph1">`{LEFT 42}`</ph>意味"左方向キーを押して 42 時間"です。<ph id="ph2">`{h 10}`</ph>手段"'h' 10 回押します"。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).</source>
          <target state="translated">次の表は、(ENTER キーまたは TAB) などの対応するキーを押したときに表示されていない文字を指定するために使用するコードを示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>|||   |-|-|   |Key|Code|   |BACKSPACE|{BACKSPACE} or {BS}|   |BREAK|{BREAK}|   |CAPS LOCK|{CAPSLOCK}|   |CLEAR|{CLEAR}|   |DELETE|{DELETE} or {DEL}|   |DOWN ARROW|{DOWN}|   |END|{END}|   |ENTER (numeric keypad)|{ENTER}|   |ENTER|~|   |ESC|{ESCAPE} or {ESC}|   |HELP|{HELP}|   |HOME|{HOME}|   |INS|{INSERT}|   |LEFT ARROW|{LEFT}|   |NUM LOCK|{NUMLOCK}|   |PAGE DOWN|{PGDN}|   |PAGE UP|{PGUP}|   |RETURN|{RETURN}|   |RIGHT ARROW|{RIGHT}|   |SCROLL LOCK|{SCROLLLOCK}|   |TAB|{TAB}|   |UP ARROW|{UP}|   |F1 through F15|{F1} through {F15}|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">|||  |-|-|  |キー |コード |  |BACKSPACE |{BACKSPACE} または {BS} |  |中断 |{中断} |  |CAPS LOCK |{CAPSLOCK} |  |オフ |{オフ} |  |削除 |{削除} または {DEL} |  |下向きの矢印 |{ダウン} |  |終了 |{終了} |  |入力 (テンキー) |{に入力} |  |入力してください | ~ |  |ESC |{エスケープ} または {ESC} |  |ヘルプ |{ヘルプ} |  |ホーム |{ホーム} |  |INS |{挿入} |  |左矢印 |{LEFT} が |  |NUM LOCK |{NUMLOCK} |  |1 ページ下 |{した} |  |ページ上に |{PGUP} |  |返す |{返す} |  |右矢印 |{右} |  |SCROLL LOCK |{SCROLLLOCK} |  |タブ |{タブ} |  |上向き矢印 |{最大} |  |F1 ~ F15 |{F1} {F15} を通じて |     ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the keys to send.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>送信するキーを定義します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">任意。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies whether or not to wait for keystrokes to get processed before the application continues.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>キーボード操作を行って、アプリケーションを続行する前に処理されるまで待機するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by default.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>既定では。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A partial-trust situation exists in which the user lacks necessary permissions.</source>
          <target state="translated">部分的に信頼された状況では、ユーザーが必要なアクセス許可を持っていない存在しています。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating if a SHIFT key is down.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SHIFT キーが押されてかどうかを示すです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Computer.Keyboard.ShiftKeyDown`</ph> property provides functionality similar to the &lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt; property.</source>
          <target state="translated"><ph id="ph1">`My.Computer.Keyboard.ShiftKeyDown`</ph>プロパティと同様の機能を提供する、&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;プロパティ&lt;/xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|   |Class Library|<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|   |Console Application|<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|   |Windows Control Library|<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|   |Web Control Library|No|   |Windows Service|<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|   |Web Site|No|</source>
          <target state="translated">プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |<bpt id="p1">**</bpt>Yes<ept id="p1">**</ept>|  |クラス ライブラリ |<bpt id="p2">**</bpt>Yes<ept id="p2">**</ept>|  |コンソール アプリケーション |<bpt id="p3">**</bpt>Yes<ept id="p3">**</ept>|  |Windows コントロール ライブラリ |<bpt id="p4">**</bpt>Yes<ept id="p4">**</ept>|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |<bpt id="p5">**</bpt>Yes<ept id="p5">**</ept>|  |Web サイト |いいえ |</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a SHIFT key is down; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、SHIFT キーを押したです。それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>