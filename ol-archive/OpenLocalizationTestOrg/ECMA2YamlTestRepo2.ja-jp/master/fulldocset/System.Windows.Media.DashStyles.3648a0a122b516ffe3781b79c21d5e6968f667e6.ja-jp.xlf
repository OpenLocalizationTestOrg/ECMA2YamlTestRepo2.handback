<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d3ec889716d58713278beeb91e76c5a731b00f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Media.DashStyles.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ffa129fb81102f51f2b4c6b1dbd644cd328a668</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eac714e6c46b189c7ad1c0feefb4aee61672505</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a set of predefined <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">実装して、一連の定義済み<bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_DashStyles"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage    You cannot declare this managed class in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>, but you can use its static properties to assign values in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_DashStyles"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法は宣言できませんこのマネージ クラスで<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>、内の値を割り当てるな静的プロパティを使用することができますが、<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で、&lt;xref:System.Windows.Media.DashStyle.Dashes*&gt;プロパティを等しく<ph id="ph1">`2`</ph>、<ph id="ph2">`2`</ph>&lt;/xref:System.Windows.Media.DashStyle.Dashes*&gt; 。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Dash"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept> ="{ <ph id="ph1">`DashStyles.Dash`</ph>}"/&gt;</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Dash"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<bpt id="p2">*</bpt>オブジェクト<ept id="p2">*</ept><bpt id="p3">*</bpt>プロパティ<ept id="p3">*</ept>="{ <ph id="ph1">`DashStyles.Dash`</ph>}"/&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A dash sequence of 2,2, which describes a sequence composed of a dash that is twice as long as the pen &lt;xref:System.Windows.Media.Pen.Thickness<bpt id="p1">*</bpt>&gt; followed by a space that is twice as long as the &lt;xref:System.Windows.Media.Pen.Thickness<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">2 回、ペンと同じくらいある dash から成るシーケンスが記述 2, 2 の破線&lt;&gt; <bpt id="p1">*</bpt>&gt; 限りは、2 回、スペースを続けて、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>.</source>
          <target state="translated">Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>.&lt;/xref:System.Windows.Media.DashStyle.Dashes*&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DashDot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept> ="{ <ph id="ph1">`DashStyles.DashDot`</ph>}"/&gt;</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DashDot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<bpt id="p2">*</bpt>オブジェクト<ept id="p2">*</ept><bpt id="p3">*</bpt>プロパティ<ept id="p3">*</ept>="{ <ph id="ph1">`DashStyles.DashDot`</ph>}"/&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A dash sequence of <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>.</source>
          <target state="translated">A dash sequence of <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>,<ph id="ph5">`0`</ph>,<ph id="ph6">`2`</ph>.</source>
          <target state="translated">Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>,<ph id="ph5">`0`</ph>,<ph id="ph6">`2`</ph>.&lt;/xref:System.Windows.Media.DashStyle.Dashes*&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_DashDotDot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept> ="{ <ph id="ph1">`DashStyles.DashDotDot`</ph>}"/&gt;</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_DashDotDot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<bpt id="p2">*</bpt>オブジェクト<ept id="p2">*</ept><bpt id="p3">*</bpt>プロパティ<ept id="p3">*</ept>="{ <ph id="ph1">`DashStyles.DashDotDot`</ph>}"/&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A dash sequence of <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>,<ph id="ph5">`0`</ph>,<ph id="ph6">`2`</ph>.</source>
          <target state="translated">A dash sequence of <ph id="ph1">`2`</ph>,<ph id="ph2">`2`</ph>,<ph id="ph3">`0`</ph>,<ph id="ph4">`2`</ph>,<ph id="ph5">`0`</ph>,<ph id="ph6">`2`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with a &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property equal to <ph id="ph1">`0`</ph>,<ph id="ph2">`2`</ph>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>で、&lt;xref:System.Windows.Media.DashStyle.Dashes*&gt;プロパティを等しく<ph id="ph1">`0`</ph>、<ph id="ph2">`2`</ph>&lt;/xref:System.Windows.Media.DashStyle.Dashes*&gt; 。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Dot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept> ="{ <ph id="ph1">`DashStyles.Dot`</ph>}"/&gt;</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Dot"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<bpt id="p2">*</bpt>オブジェクト<ept id="p2">*</ept><bpt id="p3">*</bpt>プロパティ<ept id="p3">*</ept>="{ <ph id="ph1">`DashStyles.Dot`</ph>}"/&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A dash sequence of <ph id="ph1">`0`</ph>,<ph id="ph2">`2`</ph>.</source>
          <target state="translated">破線<ph id="ph1">`0`</ph>、<ph id="ph2">`2`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with an empty &lt;xref:System.Windows.Media.DashStyle.Dashes*&gt; property.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Media.DashStyle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>空の&lt;xref:System.Windows.Media.DashStyle.Dashes*&gt;プロパティ&lt;/xref:System.Windows.Media.DashStyle.Dashes*&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This property produces a solid line and is equivalent to not defining a dash sequence.</source>
          <target state="translated">このプロパティは、実線を生成し、dash シーケンスを定義しないと同じです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following illustration shows examples of different dash styles applied to an underline.</source>
          <target state="translated">次の図は、下線に適用される異なるダッシュ スタイルの例を示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Shows several different dash styles.<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>Shows several different dash styles.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>いくつかの異なるダッシュ スタイルを示します。<ept id="p1">]</ept><bpt id="p2">(~/add/media/graphicsdashstyles.gif "</bpt>複数の異なるダッシュ スタイルを表示します。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_Solid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept> ="{ <ph id="ph1">`DashStyles.Solid`</ph>}"/&gt;</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_Solid"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML 属性の使用<bpt id="p2">*</bpt>オブジェクト<ept id="p2">*</ept><bpt id="p3">*</bpt>プロパティ<ept id="p3">*</ept>="{ <ph id="ph1">`DashStyles.Solid`</ph>}"/&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A dash sequence with no dashes.</source>
          <target state="translated">含まない破線の破線。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>