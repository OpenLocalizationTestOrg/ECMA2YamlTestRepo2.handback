<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e98a86b5926b1894daeeb1ee864b927008abfede</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.HttpTaskAsyncHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6cecbda7a7951517151491a5f1451544981e7ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b162bba16a7b1b997e8e3da6b68a8c93de1f6ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that a derived task handler class can implement in order to process an asynchronous task.</source>
          <target state="translated">非同期タスクを処理するために派生タスク ハンドラー クラスで実装できるメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>TheHttpTaskAsyncHandler class provides a simplified way to handle asynchronous tasks without having to implement the &lt;xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A&gt; and &lt;xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A&gt; methods.</source>
          <target state="translated">TheHttpTaskAsyncHandler クラスに実装しなくても、非同期タスクを処理する簡単な方法が用意されています、&lt;xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A&gt;と&lt;xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A&gt;メソッド&lt;/xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A&gt;&lt;/xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To create a handler for an asynchronous task, you can override the &lt;xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A&gt; method and implement custom task handling code.</source>
          <target state="translated">非同期タスクのハンドラーを作成するには、オーバーライド、&lt;xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A&gt;メソッドおよび実装のカスタム タスクを使用して、コードを処理します&lt;/xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes to initialize the <bpt id="p1">&lt;xref href="System.Web.HttpTaskAsyncHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初期化するために派生クラスのコンス トラクターから呼び出される、 <bpt id="p1">&lt;xref href="System.Web.HttpTaskAsyncHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.</source>
          <target state="translated">派生クラスでオーバーライドされると、別の非同期タスクのタスク ハンドラー クラスのインスタンスを再利用できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handler can be reused; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、ハンドラーを再利用できます。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides code that handles a synchronous task.</source>
          <target state="translated">派生クラスでオーバーライドされると、同期タスクを処理するコードを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The HTTP context.</source>
          <target state="translated">HTTP コンテキスト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The method is implemented but does not provide any default handling for synchronous tasks.</source>
          <target state="translated">メソッドは実装されて、すべて既定の同期タスクの処理は提供されません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides code that handles an asynchronous task.</source>
          <target state="translated">派生クラスでオーバーライドされると、非同期タスクを処理するコードを提供します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To create a custom handler for an asynchronous task, override the ProcessRequestAsync method.</source>
          <target state="translated">非同期タスクのカスタム ハンドラーを作成するには、ProcessRequestAsync メソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The HTTP context.</source>
          <target state="translated">HTTP コンテキスト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The asynchronous task.</source>
          <target state="translated">非同期タスク。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initiates asynchronous processing of a task in an HTTP task handler.</source>
          <target state="translated">タスク ハンドラーの非同期 HTTP でタスクの処理を開始します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Web.HttpTaskAsyncHandler&gt; instance is cast to an &lt;xref:System.Web.IHttpAsyncHandler&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Web.HttpTaskAsyncHandler&gt;にインスタンスをキャスト、&lt;xref:System.Web.IHttpAsyncHandler&gt;インターフェイス&lt;/xref:System.Web.IHttpAsyncHandler&gt;&lt;/xref:System.Web.HttpTaskAsyncHandler&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The HTTP context.</source>
          <target state="translated">HTTP コンテキスト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The callback method to invoke when the method returns.</source>
          <target state="translated">メソッドが戻るときに呼び出すコールバック メソッド。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Additional data for processing the task.</source>
          <target state="translated">タスクを処理するための追加のデータ。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object that contains status data about the asynchronous operation.</source>
          <target state="translated">非同期操作に関する状態データを含むオブジェクトです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Ends asynchronous processing of a task in an HTTP task handler.</source>
          <target state="translated">非同期 HTTP でタスクの処理が終了には、ハンドラーがタスクです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Web.HttpTaskAsyncHandler&gt; instance is cast to an &lt;xref:System.Web.IHttpAsyncHandler&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Web.HttpTaskAsyncHandler&gt;にインスタンスをキャスト、&lt;xref:System.Web.IHttpAsyncHandler&gt;インターフェイス&lt;/xref:System.Web.IHttpAsyncHandler&gt;&lt;/xref:System.Web.HttpTaskAsyncHandler&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The status of the asynchronous operation.</source>
          <target state="translated">非同期操作の状態です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>