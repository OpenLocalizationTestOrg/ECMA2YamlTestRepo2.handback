<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d903f938c89963412efb236e62b42d749720777</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Transactions.IEnlistmentNotification.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90535e0cf0463c1932722d303563e62a59ebfeea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5e5d536ae2ecf7b9e7654fe123129a98e57fafa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">リソース マネージャーが参加の登録時にトランザクション マネージャーに対して&amp;2; フェーズ コミットの通知コールバックを提供するために実装する必要がありますインターフェイスについて説明します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</source>
          <target state="translated">リソース マネージャーをトランザクションに参加するためには、トランザクション マネージャーを通じてトランザクションに参加にする必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Transactions.Transaction&gt; class defines a set of methods whose names begin with <ph id="ph1">`Enlist`</ph> that provide this functionality.</source>
          <target state="translated">&lt;xref:System.Transactions.Transaction&gt;クラスを定義する一連のメソッドの名前が始まる<ph id="ph1">`Enlist`</ph>この機能を提供します&lt;/xref:System.Transactions.Transaction&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The different <ph id="ph1">`Enlist`</ph> methods correspond to the different types of enlistment that a resource maanger may have.</source>
          <target state="translated">さまざまな<ph id="ph1">`Enlist`</ph>メソッドは、さまざまな種類のリソース マネージャーが持つされた参加リストに対応します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</source>
          <target state="translated">このクラスでは、リソース マネージャーが参加の登録時にトランザクション マネージャーに対して&amp;2; フェーズ コミットの通知コールバックを提供するために実装する必要がありますインターフェイスについて説明します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For each resource manager's implementation of the IEnlistmentNotification interface, you should enlist it using the &lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt; method or the &lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt; method of the &lt;xref:System.Transactions.Transaction&gt; class, depending on whether your resource is volatile or durable.</source>
          <target state="translated">IEnlistmentNotification インターフェイスの各リソース マネージャーの実装を使用して登録する必要があります、&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;メソッドまたは&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;のメソッド、&lt;xref:System.Transactions.Transaction&gt;クラス、リソースは、揮発性または持続性のあるかどうかによって異なります&lt;/xref:System.Transactions.Transaction&gt;&lt;/xref:System.Transactions.Transaction.EnlistDurable%2A&gt;&lt;/xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information on enlistment and 2PC, see <bpt id="p1">[</bpt>Enlisting Resources as Participants in a Transaction<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Committing a Transaction in Single-Phase and Multi-Phase<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept> respectively.</source>
          <target state="translated">参加し、2 pc の詳細については、次を参照してください。<bpt id="p1">[</bpt>リソースをトランザクションの参加者として参加<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>単一フェーズと複数のフェーズでトランザクションをコミットする<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>それぞれします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</source>
          <target state="translated">トランザクション マネージャーは、次の方法で、2 フェーズ コミット プロトコルのさまざまな段階に参加しているオブジェクトを通知します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>|Method|Description|   |------------|-----------------|   |&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.|   |&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.|   |&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).|   |&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;|This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.|      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  You should be aware that notifications might not be sent sequentially, or in a particular order.</source>
          <target state="translated">|メソッド |説明 |  |------------|-----------------|  |&lt;xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;|参加しているオブジェクトのこのメソッドがコールバックとして使用、トランザクション マネージャーによって、トランザクションの最初のフェーズ中に、トランザクション マネージャーは、トランザクションをコミットできるかどうかの参加者を問い合わせるときにします |。  |&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;|参加しているオブジェクトのこのメソッドがコールバックとして使用、トランザクション マネージャーによってトランザクションの&amp;2; 番目のフェーズ中に、トランザクションがコミットされた場合です |。  |&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;|参加しているオブジェクトのこのメソッドがコールバックとして使用、トランザクション マネージャーによってトランザクションの&amp;2; 番目のフェーズ中に (つまり、ロールバックされます)、トランザクションが中止された場合です |。  |&lt;xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;|参加しているオブジェクトのこのメソッドがコールバックとして使用、トランザクション マネージャーによってトランザクションの&amp;2; 番目のフェーズ中に、トランザクションが不明の場合です |。     &gt; <ph id="ph1">[!NOTE]</ph> &gt; 順番、または特定の順序では通知を送信されない可能性がありますに注意してください&lt;/xref:System.Transactions.IEnlistmentNotification.InDoubt%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Prepare%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being committed.</source>
          <target state="translated">参加していることを通知オブジェクトのトランザクションがコミットされていること。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</source>
          <target state="translated">トランザクション マネージャーでは、トランザクションをコミットするすべての参加者を指示するときに、中、コミットの&amp;2; 番目のフェーズに参加しているオブジェクトのこのメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the <ph id="ph1">`enlistment`</ph> parameter.</source>
          <target state="translated">リソース マネージャーがトランザクションを終了し、TM を呼び出すことによって完了したことを通知するために必要な作業を実行する必要があります、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドを<ph id="ph1">`enlistment`</ph>パラメーター&lt;/xref:System.Transactions.Enlistment.Done%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the Commit call.</source>
          <target state="translated">リソース マネージャーが永続的に、参加しているが、呼び出すことによって応答しないかどうかは&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッド、トランザクション マネージャーは、リソース マネージャーが、コミットの呼び出しを受信したことを確認します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">そのため、トランザクション マネージャーでは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">場合&lt;xref:System.Transactions.Enlistment.Done%2A&gt;は決して呼び出されると、この特定の情報はの周囲は無期限に保持メモリやシステム全体のリソースにします&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">これは、結果、リソースの再利用することはできません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">分散トランザクションの場合このでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">によって管理されるトランザクションの場合&lt;xref:System.Transactions&gt;、この結果、リソース マネージャーのプロセスのメモリの消費量が段階的なと継続的な増加します&lt;/xref:System.Transactions&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">したがって、非常に重要に呼び出すことは、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドで、リソース マネージャーが完了したら、作業を準備します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トランザクション マネージャーへの応答を送信するために使用します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that the status of a transaction is in doubt.</source>
          <target state="translated">トランザクションの状態は不明に参加しているオブジェクトに通知します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</source>
          <target state="translated">トランザクション マネージャーが&amp;1; つの持続性のあるリソースを&amp;1; つのフェーズのコミット操作を呼び出すし、持続性のあるリソースへの接続がトランザクションの結果を取得する前に失われたときに、変動の多いリソースこのメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>At that point, the transaction outcome cannot be safely determined.</source>
          <target state="translated">その時点では、トランザクションの結果に安全に特定できません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>As InDoubt is considered to be a final state for a transaction, you should not call &lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt; or &lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt; after calling InDoubt.</source>
          <target state="translated">イン ダウト トランザクションの最終的な状態と見なされます、として呼び出す必要はありません&lt;xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;または&lt;xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;イン ダウトを呼び出した後&lt;/xref:System.Transactions.IEnlistmentNotification.Rollback%2A&gt;&lt;/xref:System.Transactions.IEnlistmentNotification.Commit%2A&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 揮発性リソースに対して、このメソッドの実装は、影響を受けるデータに対するを認識するどのような復旧または包含操作を実行する必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It must also call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the on the <ph id="ph1">`enlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">呼び出す必要があります、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドを上、<ph id="ph1">`enlistment`</ph>パラメーターの処理が完了します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the InDoubt call.</source>
          <target state="translated">リソース マネージャーが永続的に、参加しているが、呼び出すことによって応答しないかどうかは&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッド、トランザクション マネージャーは、リソース マネージャーが、イン ダウト呼び出しを受信したことを確認します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">そのため、トランザクション マネージャーでは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">場合&lt;xref:System.Transactions.Enlistment.Done%2A&gt;は決して呼び出されると、この特定の情報はの周囲は無期限に保持メモリやシステム全体のリソースにします&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">これは、結果、リソースの再利用することはできません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">分散トランザクションの場合このでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">によって管理されるトランザクションの場合&lt;xref:System.Transactions&gt;、この結果、リソース マネージャーのプロセスのメモリの消費量が段階的なと継続的な増加します&lt;/xref:System.Transactions&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">したがって、非常に重要に呼び出すことは、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドで、リソース マネージャーが完了したら、作業を準備します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トランザクション マネージャーへの応答を送信するために使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being prepared for commitment.</source>
          <target state="translated">参加しているトランザクションがコミットの準備しているオブジェクトに通知します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</source>
          <target state="translated">トランザクション マネージャーこのメソッドを呼び出します参加しているリソースのマネージャー、コミットのフェーズ 1 の間、トランザクションをコミットできるかどうかの参加者に問い合わせる際します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When you are implementing a durable resource manager, you should log your prepare record during this phase.</source>
          <target state="translated">ログインする必要があります、持続性のあるリソース マネージャーを実装しているときに、このフェーズ中にレコードを準備します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The record should contain all the necessary information to perform recovery.</source>
          <target state="translated">レコードは、回復を実行するために必要なすべての情報を含める必要があります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This includes the &lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt; property, which is passed to the transaction manager in the &lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt; method during recovery.</source>
          <target state="translated">これが含まれています、&lt;xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;プロパティは、トランザクション マネージャーに渡される、&lt;xref:System.Transactions.TransactionManager.Reenlist%2A&gt;復旧中にメソッド&lt;/xref:System.Transactions.TransactionManager.Reenlist%2A&gt;&lt;/xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information on recovery, see <bpt id="p1">[</bpt>Performing Recovery<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>.</source>
          <target state="translated">回復の詳細については、次を参照してください。<bpt id="p1">[</bpt>を実行する回復<ept id="p1">](http://msdn.microsoft.com/en-us/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)</ept>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Your resource manager should complete all work that must be finished before calling the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; method of the <ph id="ph1">`preparingEnlistment`</ph> parameter to indicate its vote for commitment.</source>
          <target state="translated">リソース マネージャーは、呼び出す前に完了する必要のあるすべての作業を完了する必要があります、&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;のメソッド、<ph id="ph1">`preparingEnlistment`</ph>コミットメントにその投票を表すためのパラメーターです&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</source>
          <target state="translated">コミット、ロールバック、または状態が不明で、このようなフェーズ 2 通知を受信する前にこれを行うことを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is because phase 2 notifications can happen inline on the same thread that called the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; method in phase 1.</source>
          <target state="translated">これは、フェーズ 2 の通知を呼び出した同じスレッドでのインラインを実行できないため、&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;フェーズ 1 のメソッド&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>As such, you should not do any work after the &lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt; call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</source>
          <target state="translated">後のすべての作業を実行するよう、必要があります、&lt;xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;フェーズ 2 の通知を受信する前に完了しているが期待する呼び出し (たとえば、ロックの解除) します&lt;/xref:System.Transactions.PreparingEnlistment.Prepared%2A&gt;。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You can also call the method of the <ph id="ph1">`preparingEnlistment`</ph> parameter to indicate a vote for rollback.</source>
          <target state="translated">メソッドを呼び出すこともできます、<ph id="ph1">`preparingEnlistment`</ph>ロールバックの投票を表すためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method of the <ph id="ph1">`preparingEnlistment`</ph> parameter when it has finished its work.</source>
          <target state="translated">場合は、オブジェクトだけを確認し、トランザクションの進行状況に対応するために呼び出す必要がありますが、このメソッドの実装に参加することがなく、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;のメソッド、<ph id="ph1">`preparingEnlistment`</ph>パラメーターの処理が完了します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>By doing so, your resource manager would not receive any phase 2 notification.</source>
          <target state="translated">これにより、リソース マネージャーではフェーズ 2 の通知は表示されません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.PreparingEnlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.PreparingEnlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トランザクション マネージャーへの応答を送信するために使用します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Notifies an enlisted object that a transaction is being rolled back (aborted).</source>
          <target state="translated">参加しているオブジェクトに、トランザクションのロールバック通知 (中断)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</source>
          <target state="translated">トランザクション マネージャーは、トランザクションはロールバック対象の機能を利用できない&amp;1; つまたは複数のトランザクション参加要素のトランザクションをコミットするためには、(中断) ときに、参加しているオブジェクトのこのメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method on the <ph id="ph1">`enlistment`</ph> parameter.</source>
          <target state="translated">リソース マネージャーがトランザクションを終了し、TM を呼び出すことによって完了したことを通知するために必要な作業を実行する必要があります、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドを<ph id="ph1">`enlistment`</ph>パラメーター&lt;/xref:System.Transactions.Enlistment.Done%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the resource manager has enlisted durably, but does not respond by calling &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method, the transaction manager is unsure that the resource manager has received the Rollback call.</source>
          <target state="translated">リソース マネージャーが永続的に、参加しているが、呼び出すことによって応答しないかどうかは&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッド、トランザクション マネージャーは、リソース マネージャーが、ロールバックの呼び出しを受信したことを確認します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</source>
          <target state="translated">そのため、トランザクション マネージャーでは、応答を待機中は保持し、このトランザクションに関連する情報を保持します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Transactions.Enlistment.Done%2A&gt; is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</source>
          <target state="translated">場合&lt;xref:System.Transactions.Enlistment.Done%2A&gt;は決して呼び出されると、この特定の情報はの周囲は無期限に保持メモリやシステム全体のリソースにします&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This results in resources not being able to be reclaimed.</source>
          <target state="translated">これは、結果、リソースの再利用することはできません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</source>
          <target state="translated">分散トランザクションの場合このでした MSDTC プロセスが中断される MSDTC のログをいっぱいになってしまいます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the case of a transaction managed by &lt;xref:System.Transactions&gt;, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</source>
          <target state="translated">によって管理されるトランザクションの場合&lt;xref:System.Transactions&gt;、この結果、リソース マネージャーのプロセスのメモリの消費量が段階的なと継続的な増加します&lt;/xref:System.Transactions&gt;。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Therefore, it is crucial that you call the &lt;xref:System.Transactions.Enlistment.Done%2A&gt; method once your resource manager is done with your prepare work.</source>
          <target state="translated">したがって、非常に重要に呼び出すことは、&lt;xref:System.Transactions.Enlistment.Done%2A&gt;メソッドで、リソース マネージャーが完了したら、作業を準備します&lt;/xref:System.Transactions.Enlistment.Done%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to send a response to the transaction manager.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Transactions.Enlistment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>トランザクション マネージャーへの応答を送信するために使用します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>