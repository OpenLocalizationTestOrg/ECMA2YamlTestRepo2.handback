<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">893d6eea6ed798ce6777d83ebd7055ac54a2a3c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Activities.ExecutionProperties.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e5eeaf774b9ebf17de8babd540aa09388d759e4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85322df919adc316883a119b3802918135ddd943</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the collection of properties at a particular scope.</source>
          <target state="translated">特定のスコープでのプロパティのコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Through thread local storage (TLS), the CLR maintains an execution context for each thread.</source>
          <target state="translated">CLR は、スレッド ローカル ストレージ (TLS) を介して各スレッドの実行コンテキストを保持します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This execution context governs well-known thread properties such as the thread identity, the ambient transaction, and the current permission set as well as user-defined thread properties like named slots.</source>
          <target state="translated">この実行コンテキストは、スレッド id、アンビエント トランザクションなどの既知のスレッド プロパティを制御し、名前付きスロットの現在のアクセス許可のようなユーザー定義のスレッド プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unlike programs directly targeting the CLR, workflow programs are hierarchically-scoped trees that execute in a thread-agnostic environment.</source>
          <target state="translated">CLR を直接対象とするプログラムとは異なりは、ワークフロー プログラムは、スレッド非依存環境で実行されるツリーの階層的にスコープ設定をします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This implies that the standard TLS mechanisms cannot directly be used to determine what context is in scope for a given work item.</source>
          <target state="translated">これは標準の TLS 機構直接は使用できないことが指定された作業項目のスコープ内にどのようなコンテキストを決定するを意味します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, two parallel branches of execution might use different identities yet the scheduler might interleave their execution on the same CLR thread.</source>
          <target state="translated">たとえば、異なる id を使用して&amp;2; つの並列実行の分岐、スケジューラ インターリーブ可能性がありますは同じ CLR スレッド上でそれらの実行。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Execution properties allow an activity to declare which properties are in scope for its sub-tree as well as provide hooks for setting up and tearing down TLS to properly interoperate with CLR objects.</source>
          <target state="translated">実行プロパティをアクティビティで宣言するプロパティは、サブツリーのスコープ内だけでなくのセットアップおよび CLR オブジェクトと適切に相互運用する TLS 設定解除を行うフックを実現できるようにします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Registers a new property using the specified name.</source>
          <target state="translated">指定した名前を使用して新しいプロパティを登録します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">プロパティの名前です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The object that represents the property.</source>
          <target state="translated">プロパティを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Registers a property using the specified name and child visibility.</source>
          <target state="translated">指定した名前および子可視性を使用してプロパティを登録します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">プロパティの名前です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The object that represents the property.</source>
          <target state="translated">プロパティを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A value that determines whether this property is visible to the children of the owning activity.</source>
          <target state="translated">このプロパティが所有アクティビティの子から見えるかどうかを決定する値。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the nearest property of the given name.</source>
          <target state="translated">指定された名前の最も近いプロパティを返します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Find finds the nearest visible property using hierarchical scoping.</source>
          <target state="translated">検索を最も近い visible プロパティを使用して、検索スコープの階層です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If two properties have the same name, the closest property at the parent scope is returned.</source>
          <target state="translated">2 つのプロパティが同じ名前である場合は、親スコープで最も近いプロパティが返されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">プロパティの名前です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The nearest property of the given name.</source>
          <target state="translated">指定された名前の最も近いプロパティ。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of properties.</source>
          <target state="translated">プロパティのコレクションを反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An enumerator that iterates through the collection of properties.</source>
          <target state="translated">プロパティのコレクションを反復処理する列挙子。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there are properties registered at the current scope.</source>
          <target state="translated">現在のスコープで登録されているプロパティがあるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are properties registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>登録されているプロパティがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Unregisters the property with the specified name.</source>
          <target state="translated">指定した名前のプロパティを登録解除します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Properties are automatically unregistered when the activity completes.</source>
          <target state="translated">アクティビティの完了時に、プロパティは自動的に登録できません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This method can be used to unregister a property before the activity completes.</source>
          <target state="translated">このメソッドは、アクティビティが完了する前に、プロパティを登録解除に使用できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the property to unregister.</source>
          <target state="translated">登録を解除するプロパティの名前。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property was unregistered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>プロパティを登録できなかった場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection of properties.</source>
          <target state="translated">プロパティのコレクションを反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An enumerator that iterates through the collection of properties.</source>
          <target state="translated">プロパティのコレクションを反復処理する列挙子。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>