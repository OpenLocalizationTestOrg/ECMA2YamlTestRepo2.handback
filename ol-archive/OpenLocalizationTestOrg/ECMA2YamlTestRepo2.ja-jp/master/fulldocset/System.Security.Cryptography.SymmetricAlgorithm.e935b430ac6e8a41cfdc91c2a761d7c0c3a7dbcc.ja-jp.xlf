<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edbc819852a42e86317105bd6b7f0045ad221773</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.SymmetricAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0483b9ee92b8104fd288340ef42ba4c3f17f0ffa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">886cf58a7dae08b56bb78e52d0f15560b061cad7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class from which all implementations of symmetric algorithms must inherit.</source>
          <target state="translated">対称アルゴリズムのすべての実装が継承する必要があります元となる抽象基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The classes that derive from the SymmetricAlgorithm class use a chaining mode called cipher block chaining (CBC), which requires a key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;) and an initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;) to perform cryptographic transformations on data.</source>
          <target state="translated">対称アルゴリズム クラスから派生したクラスは、暗号ブロック チェーン (CBC) と呼ばれるチェーン モードを使用するキーが必要です (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;) と初期化ベクトル (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;) データに対して暗号変換を実行します&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To decrypt data that was encrypted using one of the SymmetricAlgorithm classes, you must set the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt; property and the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt; property to the same values that were used for encryption.</source>
          <target state="translated">対称アルゴリズム クラスの&amp;1; つを使用して暗号化されたデータの暗号化を解除する設定する必要があります、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;プロパティおよび&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;暗号化に使用されたものと同じ値をプロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a symmetric algorithm to be useful, the secret key must be known only to the sender and the receiver.</source>
          <target state="translated">対称アルゴリズムを使用するためには、送信側と受信側にのみ、秘密キーを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;, &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider&gt;, &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;, and &lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt; are implementations of symmetric algorithms.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;、 &lt;xref:System.Security.Cryptography.DESCryptoServiceProvider&gt;、 &lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;、および&lt;xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt;は対称アルゴリズムの実装です。&lt;/xref:System.Security.Cryptography.TripleDESCryptoServiceProvider&gt; &lt;/xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt; &lt;/xref:System.Security.Cryptography.DESCryptoServiceProvider&gt;&lt;/xref:System.Security.Cryptography.RijndaelManaged&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</source>
          <target state="translated">クラスの派生を使用して、ある十分にないため、セキュリティの観点から、単にオブジェクトを使用して完了した後、ガベージ コレクションを強制的に注意してください。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You must explicitly call the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A&gt; method on the object to zero out any sensitive data within the object before it is released.</source>
          <target state="translated">明示的に呼び出す必要があります、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A&gt;リリースされる前に、オブジェクト内で機密データをゼロにするオブジェクトのメソッド&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</source>
          <target state="translated">ガベージ コレクションは、収集されたオブジェクトの内容は&amp;0; 以外は、メモリ割り当ての変更に使用可能としてマークするだけに注意してください。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</source>
          <target state="translated">したがってガベージ コレクション オブジェクト内に含まれるデータはまだメモリ ヒープ内に存在未割り当てのメモリにします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</source>
          <target state="translated">暗号オブジェクトの場合、このデータにキーのデータまたはプレーン テキストのブロックなどの機密情報が含まれます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All cryptographic classes in the .NET Framework that hold sensitive data implement a <ph id="ph1">`Clear`</ph> method.</source>
          <target state="translated">すべての暗号化を実装の重要なデータを保持する .NET Framework クラス、<ph id="ph1">`Clear`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When called, the <ph id="ph1">`Clear`</ph> method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</source>
          <target state="translated">呼び出されると、<ph id="ph1">`Clear`</ph>メソッドがオブジェクト内のすべての機密データをゼロに上書きしができるように、安全にガベージ コレクション オブジェクトを解放します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When the object has been zeroed and released, you should then call the <ph id="ph1">`Dispose`</ph> method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`True`</ph> to dispose of all managed and unmanaged resources associated with the object.</source>
          <target state="translated">オブジェクトを&amp;0; に設定され、解放を呼び出す必要がありますし、<ph id="ph1">`Dispose`</ph>メソッドを<ph id="ph2">`disposing`</ph>パラメーターに設定<ph id="ph3">`True`</ph>を破棄するすべてマネージ リソースとアンマネージ オブジェクトに関連付けられているリソース。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">抽象クラスのインスタンスを作成することはできません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">アプリケーション コードでは、派生クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The implementation of the class derived from the symmetric algorithm is not valid.</source>
          <target state="translated">対称アルゴリズムから派生したクラスの実装が正しくありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the block size, in bits, of the cryptographic operation.</source>
          <target state="translated">取得または暗号化操作のビット単位のブロック サイズを設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The block size is the basic unit of data that can be encrypted or decrypted in one operation.</source>
          <target state="translated">ブロック サイズは、暗号化または&amp;1; つの操作で復号化できるデータの基本単位です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</source>
          <target state="translated">ブロック サイズよりも長いメッセージが連続するブロックと見なされますブロック サイズよりも短いメッセージは、ブロックのサイズに達するために余分なビットが埋め込まれている必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Valid block sizes are determined by the symmetric algorithm used.</source>
          <target state="translated">有効なブロック サイズは、使用する対称アルゴリズムによって決定されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The block size, in bits.</source>
          <target state="translated">ブロック サイズをビット単位で。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The block size is invalid.</source>
          <target state="translated">ブロック サイズが正しくありません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Represents the block size, in bits, of the cryptographic operation.</source>
          <target state="translated">ブロック サイズをビット単位の暗号操作を表します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The block size is the basic unit of data that can be encrypted or decrypted in one operation.</source>
          <target state="translated">ブロック サイズは、暗号化または&amp;1; つの操作で復号化できるデータの基本単位です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</source>
          <target state="translated">ブロック サイズよりも長いメッセージが連続するブロックと見なされますブロック サイズよりも短いメッセージは、ブロックのサイズに達するために余分なビットが埋め込まれている必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Valid block sizes are determined by the symmetric algorithm used.</source>
          <target state="translated">有効なブロック サイズは、使用する対称アルゴリズムによって決定されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</source>
          <target state="translated">クラスの派生を使用して、ある十分にないため、セキュリティの観点から、単にオブジェクトを使用して完了した後、ガベージ コレクションを強制的に注意してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You must explicitly call the Clear method on the object to zero out any sensitive data within the object before it is released.</source>
          <target state="translated">Clear メソッドは、リリースされる前に、オブジェクト内の機微なデータ領域を解放するオブジェクトで明示的に呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</source>
          <target state="translated">ガベージ コレクションは、収集されたオブジェクトの内容は&amp;0; 以外は、メモリ割り当ての変更に使用可能としてマークするだけに注意してください。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</source>
          <target state="translated">したがってガベージ コレクション オブジェクト内に含まれるデータはまだメモリ ヒープ内に存在未割り当てのメモリにします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</source>
          <target state="translated">暗号オブジェクトの場合、このデータにキーのデータまたはプレーン テキストのブロックなどの機密情報が含まれます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>All cryptographic classes in the .NET Framework that hold sensitive data implement a <ph id="ph1">`Clear`</ph> method.</source>
          <target state="translated">すべての暗号化を実装の重要なデータを保持する .NET Framework クラス、<ph id="ph1">`Clear`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When called, the <ph id="ph1">`Clear`</ph> method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</source>
          <target state="translated">呼び出されると、<ph id="ph1">`Clear`</ph>メソッドがオブジェクト内のすべての機密データをゼロに上書きしができるように、安全にガベージ コレクション オブジェクトを解放します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the object has been zeroed and released, you should then call the <ph id="ph1">`Dispose`</ph> method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`True`</ph> to dispose of all managed and unmanaged resources associated with the object.</source>
          <target state="translated">オブジェクトを&amp;0; に設定され、解放を呼び出す必要がありますし、<ph id="ph1">`Dispose`</ph>メソッドを<ph id="ph2">`disposing`</ph>パラメーターに設定<ph id="ph3">`True`</ph>を破棄するすべてマネージ リソースとアンマネージ オブジェクトに関連付けられているリソース。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates a default cryptographic object used to perform the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを実行するために使用する既定の暗号オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A default cryptographic object used to perform the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを実行するために使用、既定の暗号オブジェクト。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates the specified cryptographic object used to perform the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを実行するために使用する指定された暗号オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of the specific implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class to use.</source>
          <target state="translated">特定の実装の名前、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを使用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A cryptographic object used to perform the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを実行するために使用する暗号オブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creates a symmetric decryptor object with the current &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id="p1">*</bpt>&gt; property and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id="p1">*</ept>&gt;).</source>
          <target state="translated">現在の対称復号化オブジェクトを作成&lt;&gt; <bpt id="p1">*</bpt>&gt; プロパティおよび初期化ベクター (&lt;&gt;<ept id="p1">*</ept>&gt;)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This method decrypts an encrypted message created using the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt; overload with the same signature.</source>
          <target state="translated">このメソッドを使用して作成された、暗号化されたメッセージを復号化、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt;同じシグネチャを持つオーバー ロードします&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A symmetric decryptor object.</source>
          <target state="translated">対称復号化オブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a symmetric decryptor object with the specified &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id="p1">*</bpt>&gt; property and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id="p1">*</ept>&gt;).</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した対称復号化オブジェクトを作成&lt;&gt; <bpt id="p1">*</bpt>&gt; プロパティおよび初期化ベクター (&lt;&gt;<ept id="p1">*</ept>&gt;)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This method decrypts an encrypted message created using the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt; overload with the same parameters.</source>
          <target state="translated">このメソッドを使用して作成された、暗号化されたメッセージを復号化、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt;同じパラメーターを持つオーバー ロードします&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The secret key to use for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用する秘密キー。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The initialization vector to use for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを使用する初期化ベクター。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A symmetric decryptor object.</source>
          <target state="translated">対称復号化オブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creates a symmetric encryptor object with the current &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id="p1">*</bpt>&gt; property and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id="p1">*</ept>&gt;).</source>
          <target state="translated">現在の対称暗号化オブジェクトを作成&lt;&gt; <bpt id="p1">*</bpt>&gt; プロパティおよび初期化ベクター (&lt;&gt;<ept id="p1">*</ept>&gt;)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If the current &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt; property is <ph id="ph1">`null`</ph>, the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt; method is called to create a new random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;.</source>
          <target state="translated">場合、現在&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;プロパティは<ph id="ph1">`null`</ph>、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;メソッドは、新しいランダムな&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;.&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;を作成する&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the current &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt; property is <ph id="ph1">`null`</ph>, the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt; method is called to create a new random &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;.</source>
          <target state="translated">場合、現在&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;プロパティは<ph id="ph1">`null`</ph>、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt;メソッドは、新しいランダムな&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;.&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;を作成する&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt; overload with the same signature to decrypt the result of this method.</source>
          <target state="translated">使用して、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt;このメソッドの結果を復号化に同じシグネチャを持つオーバー ロードします&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A symmetric encryptor object.</source>
          <target state="translated">対称暗号化オブジェクト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a symmetric encryptor object with the specified &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key<bpt id="p1">*</bpt>&gt; property and initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV<ept id="p1">*</ept>&gt;).</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した対称暗号化オブジェクトを作成&lt;&gt; <bpt id="p1">*</bpt>&gt; プロパティおよび初期化ベクター (&lt;&gt;<ept id="p1">*</ept>&gt;)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt; overload with the same parameters to decrypt the result of this method.</source>
          <target state="translated">使用して、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt;このメソッドの結果を復号化に同じパラメーターを持つオーバー ロードします&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The secret key to use for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用する秘密キー。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The initialization vector to use for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムを使用する初期化ベクター。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A symmetric encryptor object.</source>
          <target state="translated">対称暗号化オブジェクト。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">現在のインスタンスによって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;.</source>
          <target state="translated">呼び出す<ph id="ph1">`Dispose`</ph> &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;の使用が終了したときに</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>メソッドによって、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;使用不可の状態&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">`Dispose`</ph>へのすべての参照を解放する必要があります、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;ガベージ コレクターがメモリを再利用できるようにする、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;占有されていた&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 常に呼び出し<ph id="ph2">`Dispose`</ph>&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;の最後の参照を解放する前に。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;オブジェクトの<ph id="ph1">`Finalize`</ph>メソッド&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.SymmetricAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">`Finalize`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;参照。&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt; 。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose()`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the feedback size, in bits, of the cryptographic operation.</source>
          <target state="translated">取得または暗号化操作のビット単位のフィードバック サイズを設定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</source>
          <target state="translated">フィードバック サイズは、一連の暗号化または復号化操作にフィードバック データの量を決定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The feedback size cannot be greater than the block size.</source>
          <target state="translated">フィードバック サイズは、ブロック サイズを超えることはできません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The feedback size in bits.</source>
          <target state="translated">フィードバック サイズをビット単位で。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The feedback size is larger than the block size.</source>
          <target state="translated">フィードバック サイズは、ブロック サイズを超えています。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Represents the feedback size, in bits, of the cryptographic operation.</source>
          <target state="translated">フィードバック サイズをビット単位の暗号操作を表します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</source>
          <target state="translated">フィードバック サイズは、一連の暗号化または復号化操作にフィードバック データの量を決定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The feedback size cannot be greater than the block size.</source>
          <target state="translated">フィードバック サイズは、ブロック サイズを超えることはできません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, generates a random initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) to use for the algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、ランダムな初期化ベクトルが生成されます (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) アルゴリズムを使用する&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>In general, there is no reason to use this method, because <ph id="ph1">`CreateEncryptor()`</ph> or <ph id="ph2">`CreateEncryptor(null, null)`</ph> automatically generates both an initialization vector and a key.</source>
          <target state="translated">一般に、理由はありません、このメソッドを使用するため<ph id="ph1">`CreateEncryptor()`</ph>または<ph id="ph2">`CreateEncryptor(null, null)`</ph>初期化ベクターとキーの両方が自動的に生成されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>However, you may want to use the GenerateIV method to reuse a symmetric algorithm instance with a different initialization vector.</source>
          <target state="translated">ただし、異なる初期化ベクターと対称アルゴリズムのインスタンスを再利用する GenerateIV メソッドを使用することがあります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, generates a random key (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt;) to use for the algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、ランダムなキーが生成されます (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt;) アルゴリズムを使用する&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key*&gt;。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In general, there is no reason to use this method, because <ph id="ph1">`CreateEncryptor()`</ph> or <ph id="ph2">`CreateEncryptor(null, null)`</ph> automatically generates both an initialization vector and a key.</source>
          <target state="translated">一般に、理由はありません、このメソッドを使用するため<ph id="ph1">`CreateEncryptor()`</ph>または<ph id="ph2">`CreateEncryptor(null, null)`</ph>初期化ベクターとキーの両方が自動的に生成されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>However, you may want to use the GenerateKey method to reuse a symmetric algorithm instance with a different key.</source>
          <target state="translated">ただし、異なるキーを使用して、対称アルゴリズムのインスタンスを再利用する GenerateKey メソッドを使用することがあります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the initialization vector (IV) for the symmetric algorithm.</source>
          <target state="translated">取得または対称アルゴリズムの初期化ベクター (IV) を設定します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The IV property is automatically set to a new random value whenever you create a new instance of one of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; classes or when you manually call the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt; method.</source>
          <target state="translated">IV プロパティはのいずれかの新しいインスタンスを作成するたびに、自動的に新しい値をランダムに設定、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;クラスまたは手動で呼び出すと、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt;メソッド&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The size of the IV property must be the same as the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt; property divided by 8.</source>
          <target state="translated">IV のプロパティのサイズは同じである必要があります、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt;プロパティが 8 で割った値します&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The classes that derive from the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; class use a chaining mode called cipher block chaining (CBC), which requires a key and an initialization vector to perform cryptographic transformations on data.</source>
          <target state="translated">派生したクラス、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;クラスは、暗号ブロック チェーン (CBC) と呼ばれるチェーン モードを使用する、キーと初期化ベクトル データを暗号変換を実行する必要があります&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To decrypt data that was encrypted using one of the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt; classes, you must set the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt; property and IV property to the same values that were used for encryption.</source>
          <target state="translated">いずれかを使用して暗号化されたデータを復号化する、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;設定する必要があります、クラス、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;プロパティと暗号化に使用されたものと同じ値に IV プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For a given secret key <bpt id="p1">*</bpt>k<ept id="p1">*</ept>, a simple block cipher that does not use an initialization vector will encrypt the same input block of plain text into the same output block of cipher text.</source>
          <target state="translated">指定された秘密キーの<bpt id="p1">*</bpt>k<ept id="p1">*</ept>、初期化ベクターを使用しない単純なブロック暗号を使用して、プレーン テキストの入力ブロックは同じを同じ暗号文の出力ブロックに暗号化されます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If you have duplicate blocks within your plain text stream, you will have duplicate blocks within your cipher text stream.</source>
          <target state="translated">をプレーン テキストには、ストリーム内で重複するブロックがある場合は、暗号文ストリーム内で重複するブロックがあります。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If unauthorized users know anything about the structure of a block of your plain text, they can use that information to decipher the known cipher text block and possibly recover your key.</source>
          <target state="translated">承認されていないユーザーに関する知識は、プレーン テキストのブロックの構造場合、は、その情報を使用して、既知の暗号文ブロックを解読して、キーを復元することができます、します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To combat this problem, information from the previous block is mixed into the process of encrypting the next block.</source>
          <target state="translated">この問題を解決するに、前のブロックからの情報は、次のブロックを暗号化するためのプロセスに mixed です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Thus, the output of two identical plain text blocks is different.</source>
          <target state="translated">したがって、2 つの同一のプレーン テキスト ブロックの出力は別です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Because this technique uses the previous block to encrypt the next block, an initialization vector is needed to encrypt the first block of data.</source>
          <target state="translated">この手法は、次のブロックを暗号化する、前のブロックを使用するため、初期化ベクターがデータの最初のブロックの暗号化に必要です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The initialization vector.</source>
          <target state="translated">初期化ベクター。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the initialization vector to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">初期化ベクトルに設定しようとしましたが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the initialization vector to an invalid size.</source>
          <target state="translated">初期化ベクターを無効なサイズに設定しようとしました。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Represents the initialization vector (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) for the symmetric algorithm.</source>
          <target state="translated">初期化ベクターを表します (&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;) 対称アルゴリズム&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV*&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the secret key for the symmetric algorithm.</source>
          <target state="translated">取得または対称アルゴリズムの秘密キーを設定します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The secret key is used both for encryption and for decryption.</source>
          <target state="translated">秘密キーは、暗号化と復号化の両方が使用されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</source>
          <target state="translated">正常に行う、対称アルゴリズムでは、送信者と受信者にのみ、秘密キーを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有効なキー サイズは、特定の対称アルゴリズムの実装によって指定されに記載されて、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If this property is <ph id="ph1">`null`</ph> when it is used, the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt; method is called to create a new random value.</source>
          <target state="translated">場合は、このプロパティは<ph id="ph1">`null`</ph>を使用するときに、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;新しいランダムな値を作成するメソッドが呼び出されます&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The secret key to use for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用する秘密キー。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the key to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">キーを設定しようとしましたが<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The key size is invalid.</source>
          <target state="translated">キーのサイズが正しくありません。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the size, in bits, of the secret key used by the symmetric algorithm.</source>
          <target state="translated">取得または対称アルゴリズムで使用される秘密キーのビット単位のサイズを設定します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有効なキー サイズは、特定の対称アルゴリズムの実装によって指定されに記載されて、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the secret key used by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用される秘密キーのビット単位のサイズ。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The key size is not valid.</source>
          <target state="translated">キーのサイズが正しくありません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Represents the size, in bits, of the secret key used by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用される秘密キーのビット単位のサイズを表します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有効なキー サイズは、特定の対称アルゴリズムの実装によって指定されに記載されて、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A&gt;。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Represents the secret key for the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムの秘密キーを表します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The secret key is used both for encryption and for decryption.</source>
          <target state="translated">秘密キーは、暗号化と復号化の両方が使用されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</source>
          <target state="translated">正常に行う、対称アルゴリズムでは、送信者と受信者にのみ、秘密キーを確認する必要があります。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">有効なキー サイズは、特定の対称アルゴリズムの実装によって指定されに記載されて、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the block sizes, in bits, that are supported by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムでサポートされているビット単位でブロック サイズを取得します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm supports only block sizes that match an entry in this array.</source>
          <target state="translated">対称アルゴリズムでは、この配列内のエントリに一致するブロック サイズのみがサポートされます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An array that contains the block sizes supported by the algorithm.</source>
          <target state="translated">アルゴリズムによってサポートされているブロック サイズを格納する配列。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Specifies the block sizes, in bits, that are supported by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムでサポートされているビットでブロック サイズを指定します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm supports only block sizes that match an entry in this array.</source>
          <target state="translated">対称アルゴリズムでは、この配列内のエントリに一致するブロック サイズのみがサポートされます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets the key sizes, in bits, that are supported by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムでサポートされているビットのキーのサイズを取得します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm supports only key sizes that match an entry in this array.</source>
          <target state="translated">対称アルゴリズムには、この配列内のエントリに一致するキーのサイズのみがサポートされています。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An array that contains the key sizes supported by the algorithm.</source>
          <target state="translated">アルゴリズムでサポートされるキーのサイズを格納する配列。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Specifies the key sizes, in bits, that are supported by the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムでサポートされているビットのキーのサイズを指定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The symmetric algorithm supports only key sizes that match an entry in this array.</source>
          <target state="translated">対称アルゴリズムには、この配列内のエントリに一致するキーのサイズのみがサポートされています。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the mode for operation of the symmetric algorithm.</source>
          <target state="translated">取得または対称アルゴリズムの操作モードを設定します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Cryptography.CipherMode&gt; enumeration for a description of specific modes.</source>
          <target state="translated">参照してください&lt;xref:System.Security.Cryptography.CipherMode&gt;特定のモードの詳細については、列挙体です&lt;/xref:System.Security.Cryptography.CipherMode&gt;。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The mode for operation of the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムの操作モード。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Security.Cryptography.CipherMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Security.Cryptography.CipherMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The cipher mode is not one of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.CipherMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">Cipher モードは、のいずれかではありません、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.CipherMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Represents the cipher mode used in the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用する暗号モードを表します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Security.Cryptography.CipherMode&gt; enumeration for a description of specific modes.</source>
          <target state="translated">参照してください&lt;xref:System.Security.Cryptography.CipherMode&gt;特定のモードの詳細については、列挙体です&lt;/xref:System.Security.Cryptography.CipherMode&gt;。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets or sets the padding mode used in the symmetric algorithm.</source>
          <target state="translated">取得または対称アルゴリズムで使用されるパディング モードを設定します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Most plain text messages do not consist of a number of bytes that completely fill blocks.</source>
          <target state="translated">ほとんどのプレーン テキスト メッセージは、ブロックが完全に入力するバイト数ので構成されていません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Often, there are not enough bytes to fill the last block.</source>
          <target state="translated">多くの場合、最後のブロックを格納するための十分なバイトがありません。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When this happens, a padding string is added to the text.</source>
          <target state="translated">この場合、テキストに埋め込み文字列が追加されます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</source>
          <target state="translated">たとえば、ブロックの長さは 64 ビット、最後のブロックには、40 ビットだけが含まれている場合は、24 ビットのパディングが追加されます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>See the &lt;xref:System.Security.Cryptography.PaddingMode&gt; enumeration for a description of specific modes.</source>
          <target state="translated">参照してください、&lt;xref:System.Security.Cryptography.PaddingMode&gt;特定のモードの詳細については、列挙体です&lt;/xref:System.Security.Cryptography.PaddingMode&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The padding mode used in the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用されるパディング モード。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The padding mode is not one of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">パディング モードは、のいずれかではない、 <bpt id="p1">&lt;xref href="System.Security.Cryptography.PaddingMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>値。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Represents the padding mode used in the symmetric algorithm.</source>
          <target state="translated">対称アルゴリズムで使用されるパディング モードを表します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Most plain text messages do not consist of a number of bytes that completely fill blocks.</source>
          <target state="translated">ほとんどのプレーン テキスト メッセージは、ブロックが完全に入力するバイト数ので構成されていません。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Often, there are not enough bytes to fill the last block.</source>
          <target state="translated">多くの場合、最後のブロックを格納するための十分なバイトがありません。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>When this happens, a padding string is added to the text.</source>
          <target state="translated">この場合、テキストに埋め込み文字列が追加されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</source>
          <target state="translated">たとえば、ブロックの長さは 64 ビット、最後のブロックには、40 ビットだけが含まれている場合は、24 ビットのパディングが追加されます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>See the &lt;xref:System.Security.Cryptography.PaddingMode&gt; enumeration for a description of specific modes.</source>
          <target state="translated">参照してください、&lt;xref:System.Security.Cryptography.PaddingMode&gt;特定のモードの詳細については、列挙体です&lt;/xref:System.Security.Cryptography.PaddingMode&gt;。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt; property.</source>
          <target state="translated">このフィールドには、&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt;プロパティ&lt;/xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key size is valid for the current algorithm.</source>
          <target state="translated">指定されたキー サイズが現在のアルゴリズムに対して有効かどうかを判断します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The length, in bits, to check for a valid key size.</source>
          <target state="translated">有効なキー サイズを確認するビット単位の長さ。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified key size is valid for the current algorithm; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定されたキー サイズが現在のアルゴリズムに対して有効な場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>