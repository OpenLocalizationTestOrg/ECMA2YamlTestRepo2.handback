<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03c3c35c88c66ccc0c1a0034f3081412991f9cb5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OracleClient.OracleDataReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51513e58a8f7c9c038687f8b7b33b4a3ea76a7b3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">082decf7ab0288ca674880beb900073552bda67b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way of reading a forward-only stream of data rows from a data source.</source>
          <target state="translated">データ ソースからデータ行の前方参照専用のストリームを読み取る手段を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To create an OracleDataReader, you must call the &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; method of the &lt;xref:System.Data.OracleClient.OracleCommand&gt; object, rather than directly using a constructor.</source>
          <target state="translated">OracleDataReader を作成するを呼び出す必要があります、&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;のメソッド、&lt;xref:System.Data.OracleClient.OracleCommand&gt;コンス トラクターを直接使用するのではなく、オブジェクトです&lt;/xref:System.Data.OracleClient.OracleCommand&gt;&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Changes made to a resultset by another process or thread while data is being read may be visible to the user of the OracleDataReader.</source>
          <target state="translated">データの読み取り中に、別のプロセスまたはスレッドによって結果セットに加えられた変更を OracleDataReader のユーザーに表示されることがあります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt; and &lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the OracleDataReader is closed.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt;および&lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;呼び出すことのできる唯一のプロパティは、OracleDataReader を閉じた後&lt;/xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;。&lt;/xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In some cases, you must call &lt;xref:System.Data.OracleClient.OracleDataReader.Close%2A&gt; before you can call &lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;.</source>
          <target state="translated">場合によっては、&lt;xref:System.Data.OracleClient.OracleDataReader.Close%2A&gt;前に&lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;。&lt;/xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;を呼び出すことができます&lt;/xref:System.Data.OracleClient.OracleDataReader.Close%2A&gt;を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>More than one OracleDataReader can be open at any given time.</source>
          <target state="translated">1 つ以上の OracleDataReader は、特定の時点で開くことができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following two Visual Basic examples demonstrate how to use an OracleDataReader to retrieve an Oracle <ph id="ph1">`REF CURSOR`</ph>.</source>
          <target state="translated">次のような Visual Basic の&amp;2; つの例は、OracleDataReader を使用して、Oracle を取得する方法を示す<ph id="ph1">`REF CURSOR`</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</source>
          <target state="translated">これらの例では、Oracle Scott/tiger スキーマで定義され、次の PL/SQL パッケージとパッケージ本体を必要とされるテーブルを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You must create these on your server to use the examples.</source>
          <target state="translated">これらの例を使用するようにサーバーで作成する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create the following Oracle package on the Oracle server.</source>
          <target state="translated">Oracle サーバーで次の Oracle パッケージを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR IN OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>       Create the following Oracle package body on the Oracle server.</source>
          <target state="translated"><ph id="ph1">```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR IN OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```</ph>Oracle サーバーで、次の Oracle パッケージ本体を作成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```      CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;   /   ```</ph>       This Visual Basic example executes a PL/SQL stored procedure that returns a <ph id="ph2">`REF CURSOR`</ph> parameter, and reads the value as an OracleDataReader.</source>
          <target state="translated"><ph id="ph1">```      CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO &lt;&gt; 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;   /   ```</ph>この Visual Basic の例を返す PL/SQL ストアド プロシージャの実行、<ph id="ph2">`REF CURSOR`</ph>パラメーター、OracleDataReader として値を読み取ります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369      command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader()      While (reader.Read())         ' Do something with the values.      End While      reader.Close()      connection.Close()   End Sub   ```</ph>       This Visual Basic example executes a PL/SQL stored procedure that returns two <ph id="ph2">`REF CURSOR`</ph> parameters, and reads the values using an OracleDataReader.</source>
          <target state="translated"><ph id="ph1">```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = "CURSPKG.OPEN_ONE_CURSOR"      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter("N_EMPNO", OracleType.Number)).Value = 7369      command.Parameters.Add(New OracleParameter("IO_CURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader()      While (reader.Read())         ' Do something with the values.      End While      reader.Close()      connection.Close()   End Sub   ```</ph>この Visual Basic の例を 2 つを返す PL/SQL ストアド プロシージャを実行する<ph id="ph2">`REF CURSOR`</ph>パラメーター、および読み取り OracleDataReader を使用した値です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim dataSet As New DataSet()      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output      command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader(CommandBehavior.CloseConnection)      While (reader.Read())         ' Do something with the values.      End While      reader.NextResult()      While (reader.Read())           ' Do something with the values.      End While      reader.Close()      connection.Close()    End Sub   ```</ph>       This C# example creates an Oracle table and loads it with data.</source>
          <target state="translated"><ph id="ph1">```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim dataSet As New DataSet()      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = "CURSPKG.OPEN_TWO_CURSORS"      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter("EMPCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output      command.Parameters.Add(New OracleParameter("DEPTCURSOR", OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader(CommandBehavior.CloseConnection)      While (reader.Read())         ' Do something with the values.      End While      reader.NextResult()      While (reader.Read())           ' Do something with the values.      End While      reader.Close()      connection.Close()    End Sub   ```</ph>C# の例では、Oracle のテーブルを作成し、データを読み込みます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You must run this example prior to running the subsequent example, which demonstrates using an OracleDataReader to access the data using OracleType structures.</source>
          <target state="translated">以降の例では、OracleDataReader を使用して、OracleType 構造を使用するデータにアクセスする方法を実行する前に、この例を実行する必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```c#   public void Setup(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      try      {         connection.Open();         OracleCommand command = connection.CreateCommand();         command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";         command.ExecuteNonQuery();         command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";         command.ExecuteNonQuery();         command.CommandText="SELECT * FROM OracleTypesTable";      }      catch(Exception)      {      }      finally      {         connection.Close();      }   }   ```</ph>       This C# example uses an OracleDataReader to access data, and uses several &lt;xref:System.Data.OracleClient.OracleType&gt; structures to display the data.</source>
          <target state="translated"><ph id="ph1">```c#   public void Setup(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      try      {         connection.Open();         OracleCommand command = connection.CreateCommand();         command.CommandText ="CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))";         command.ExecuteNonQuery();         command.CommandText ="INSERT INTO OracleTypesTable VALUES ('test', 2, to_date('2000-01-11 12:54:01','yyyy-mm-dd hh24:mi:ss'), '0001020304')";         command.ExecuteNonQuery();         command.CommandText="SELECT * FROM OracleTypesTable";      }      catch(Exception)      {      }      finally      {         connection.Close();      }   }   ```</ph>この c# 例は、データにアクセスする、OracleDataReader を使用して、いくつかを使用して&lt;xref:System.Data.OracleClient.OracleType&gt;データを表示する構造体&lt;/xref:System.Data.OracleClient.OracleType&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Closes the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">閉じる、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>More than one &lt;xref:System.Data.OracleClient.OracleDataReader&gt; can be open at any given time.</source>
          <target state="translated">1 つ以上&lt;xref:System.Data.OracleClient.OracleDataReader&gt;特定の時点で開くことができる&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Do not call <ph id="ph2">`Close`</ph> or <ph id="ph3">`Dispose`</ph> on a connection, a <ph id="ph4">`DataReader`</ph>, or any other managed object in the <ph id="ph5">`Finalize`</ph> method of your class.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 呼び出さないでください<ph id="ph2">`Close`</ph>または<ph id="ph3">`Dispose`</ph>、接続で、 <ph id="ph4">`DataReader`</ph>、またはその他のマネージ オブジェクトで、<ph id="ph5">`Finalize`</ph>クラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
          <target state="translated">ファイナライザーで、クラスが直接所有されているアンマネージ リソースだけを解放する必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
          <target state="translated">クラスがアンマネージ リソースを所有していない場合は含まれません、<ph id="ph1">`Finalize`</ph>メソッド、クラス定義にします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ガベージ コレクション<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets a value indicating the depth of nesting for the current row.</source>
          <target state="translated">現在の行の入れ子の深さを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The outermost table has a depth of zero.</source>
          <target state="translated">最も外側のテーブルは深さ&amp;0; です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The depth of nesting for the current row.</source>
          <target state="translated">現在の行の入れ子の深さ。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the number of columns in the current row.</source>
          <target state="translated">現在の行に列の数を取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Includes hidden fields.</source>
          <target state="translated">非表示フィールドが含まれます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A&gt; to exclude hidden fields.</source>
          <target state="translated">使用して&lt;xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A&gt;隠しフィールドを除外する&lt;/xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>After executing a query that does not return rows, FieldCount returns 0.</source>
          <target state="translated">行を返さないクエリを実行すると、FieldCount は 0 を返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</source>
          <target state="translated">有効なレコード セット、0 以外に配置されない場合それ以外の場合、現在のレコード内の列の数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default is -1.</source>
          <target state="translated">既定値は-1 です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>There is no current connection to a data source.</source>
          <target state="translated">データ ソースに現在接続されていません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a Boolean.</source>
          <target state="translated">ブール値として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A Boolean that is the value of the column.</source>
          <target state="translated">列の値を示すブール値。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a byte.</source>
          <target state="translated">指定された列の値をバイトとして取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a byte.</source>
          <target state="translated">バイトとして指定された列の値です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</source>
          <target state="translated">指定したバッファー オフセットを開始位置として、配列として指定した列オフセットからバイトのストリームをバッファーに読み込みます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>GetBytes returns the number of available bytes in the field.</source>
          <target state="translated">GetBytes は、フィールドに使用できるバイト数を返します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In most cases this is the exact length of the field.</source>
          <target state="translated">ほとんどの場合これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetBytes`</ph>バイトを取得するフィールドからは既に使用されています。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; is reading a large data structure into a buffer.</source>
          <target state="translated">これは、場合がありますなどの場合、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;バッファーへの大規模なデータ構造体の読み込みが&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting of &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">詳細については、次を参照してください、 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;。&lt;/xref:System.Data.CommandBehavior&gt;の設定。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is a null value, GetBytes returns the length of the field in bytes.</source>
          <target state="translated">Null 値であるバッファーを渡した場合 GetBytes は、フィールドの長さをバイトで返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The index within the field where the read operation is to begin.</source>
          <target state="translated">読み取り操作の開始 フィールド内のインデックス。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">バイトのストリームを読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The index where <ph id="ph1">`buffer`</ph> is to begin the write operation.</source>
          <target state="translated">インデックス位置<ph id="ph1">`buffer`</ph>の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The number of bytes to read.</source>
          <target state="translated">読み取るバイト数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The actual number of bytes read.</source>
          <target state="translated">実際に読み取られたバイトの数。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a character.</source>
          <target state="translated">文字として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a character.</source>
          <target state="translated">文字として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</source>
          <target state="translated">指定したバッファー オフセットを開始位置として、配列として、文字のストリームを指定した列オフセットからバッファーに読み取ります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>GetChars returns the number of available characters in the field.</source>
          <target state="translated">GetChars は、フィールドに使用できる文字数を返します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In most cases this is the exact length of the field.</source>
          <target state="translated">ほとんどの場合これは、フィールドの正確な長さです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
          <target state="translated">ただし、返される数値フィールドの実際の長さよりも小さい場合あります<ph id="ph1">`GetChars`</ph>フィールドから文字を取得するは既に使用されています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This may be the case, for example, if the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; is reading a large data structure into a buffer.</source>
          <target state="translated">これは、場合がありますなどの場合、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;バッファーへの大規模なデータ構造体の読み込みが&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see the <ph id="ph1">`SequentialAccess`</ph> setting of &lt;xref:System.Data.CommandBehavior&gt;.</source>
          <target state="translated">詳細については、次を参照してください、 <ph id="ph1">`SequentialAccess`</ph> &lt;xref:System.Data.CommandBehavior&gt;。&lt;/xref:System.Data.CommandBehavior&gt;の設定。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If you pass a buffer that is a null value.</source>
          <target state="translated">場合は null 値であるバッファーを渡します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>GetChars returns the length of the field in characters.</source>
          <target state="translated">GetChars では、文字のフィールドの長さを返します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The index within the row where the read operation is to begin.</source>
          <target state="translated">読み取り操作の開始行内のインデックス。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The buffer into which to copy data.</source>
          <target state="translated">データのコピー先のバッファー。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The index where <ph id="ph1">`buffer`</ph> is to begin the write operation.</source>
          <target state="translated">インデックス位置<ph id="ph1">`buffer`</ph>の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The number of characters to read.</source>
          <target state="translated">読み取る文字の数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual number of characters read.</source>
          <target state="translated">実際に読み取られた文字の数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the name of the source data type.</source>
          <target state="translated">ソースのデータ型の名前を取得します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The name of the source data type.</source>
          <target state="translated">ソースのデータ型の名前。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref uid="langword_csharp_DateTime" name="DateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得する<bpt id="p1">&lt;xref uid="langword_csharp_DateTime" name="DateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a <bpt id="p1">&lt;xref uid="langword_csharp_DateTime" name="DateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref uid="langword_csharp_DateTime" name="DateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得する<bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a <bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a double-precision floating point number.</source>
          <target state="translated">倍精度浮動小数点数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a double-precision floating point number.</source>
          <target state="translated">倍精度浮動小数点数として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the rows in the data reader.</source>
          <target state="translated">返します、&lt;xref:System.Collections.IEnumerator&gt;データ リーダー内の行を反復処理に使用できる&lt;/xref:System.Collections.IEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although you can use this method to retrieve an explicit enumerator, in languages that support a foreach construct, it's simpler to use the looping construct directly in order to iterate through the rows in the data reader.</source>
          <target state="translated">このメソッドを使用すると、明示的な列挙子を取得、foreach をサポートする言語では、構造、データ リーダー内の行を反復処理するために直接ループ構造を使用する方が簡単です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the rows in the data reader.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;データ リーダー内の行を反復処理に使用できる&lt;/xref:System.Collections.IEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; that is the data type of the object.</source>
          <target state="translated">取得、&lt;xref:System.Type&gt;オブジェクトのデータ型です&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that is the data type of the object.</source>
          <target state="translated">&lt;xref:System.Type&gt;オブジェクトのデータ型です&lt;/xref:System.Type&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a globally-unique identifier (GUID).</source>
          <target state="translated">グローバル一意識別子 (GUID) として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a GUID.</source>
          <target state="translated">GUID として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 16-bit signed integer.</source>
          <target state="translated">16 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a 16-bit signed integer.</source>
          <target state="translated">16 ビット符号付き整数として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 32-bit signed integer.</source>
          <target state="translated">32 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a 32-bit signed integer.</source>
          <target state="translated">32 ビット符号付き整数として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a 64-bit signed integer.</source>
          <target state="translated">64 ビット符号付き整数として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a 64-bit signed integer.</source>
          <target state="translated">64 ビット符号付き整数として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the name of the specified column.</source>
          <target state="translated">指定された列の名前を取得します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A string that is the name of the specified column.</source>
          <target state="translated">指定された列の名前を表す文字列。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBFile"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBFile"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBFile"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBFile"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleBinary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDateTime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDateTime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDateTime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleLob"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleMonthSpan"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleMonthSpan"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleMonthSpan"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleMonthSpan"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleNumber"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleNumber"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleString"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleString"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTimeSpan"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTimeSpan"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The value of the specified column as an <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTimeSpan"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定した列の値、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleTimeSpan"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets the value of the column at the specified ordinal in its Oracle format.</source>
          <target state="translated">Oracle 形式で指定された序数の列の値を取得します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The Oracle value to return.</source>
          <target state="translated">返される Oracle 値。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets all the attribute columns in the current row in Oracle format.</source>
          <target state="translated">Oracle の形式で現在の行には、すべての属性列を取得します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For most applications, the GetOracleValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</source>
          <target state="translated">ほとんどのアプリケーションは、GetOracleValues メソッドは、各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことができます、&lt;xref:System.Object&gt;結果の行に含まれる列数より少ないを格納する配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
          <target state="translated">データの量のみ、&lt;xref:System.Object&gt;配列では、配列にコピーを保持します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことも、&lt;xref:System.Object&gt;配列の長さが、結果の行に含まれる列の数を超える&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; into which to copy the attribute columns.</source>
          <target state="translated">型の配列&lt;xref:System.Object&gt;属性列のコピー先&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
          <target state="translated">インスタンスの数&lt;xref:System.Object&gt;配列にします&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Gets the column ordinal, given the name of the column.</source>
          <target state="translated">列の名前を指定して、列の序数を取得します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>GetOrdinal performs a case-sensitive lookup first.</source>
          <target state="translated">GetOrdinal では、最初は大文字小文字を区別の参照を実行します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">失敗した場合、2 番目の検索が行われます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The method throws an <ph id="ph1">`IndexOutOfRange`</ph> exception if the zero-based column ordinal is not found.</source>
          <target state="translated">メソッドをスロー、 <ph id="ph1">`IndexOutOfRange`</ph>&amp;0; から始まる列序数が見つからない場合に例外です。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>GetOrdinal is kana-width insensitive.</source>
          <target state="translated">GetOrdinal は、カタカナの全角区別です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call GetOrdinal within a loop.</source>
          <target state="translated">序数に基づく参照は、名前による参照よりも効率的であるために、ループ内ではありません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Instead, call GetOrdinal once and then assign the results to an integer variable for use within the loop.</source>
          <target state="translated">代わりに、GetOrdinal を&amp;1; 回呼び出すし、ループ内で使用する整数変数に結果を代入します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The name of the column.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider specific field type.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基になるプロバイダーの特定のフィールドの型の表現されています。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt;.</source>
          <target state="translated">An &lt;xref:System.Int32&gt;.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Object&gt; that is a representation of the underlying provider specific field type.</source>
          <target state="translated">取得、 &lt;xref:System.Object&gt;、基になるプロバイダーの特定のフィールドの型の表現されている&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a representation of the underlying provider specific field type.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>基になるプロバイダーの特定のフィールドの型の表現されています。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Int32&gt;.</source>
          <target state="translated">An &lt;xref:System.Int32&gt;.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Object&gt; that is a representation of the underlying provider specific field type.</source>
          <target state="translated">取得、 &lt;xref:System.Object&gt;、基になるプロバイダーの特定のフィールドの型の表現されている&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets an array of objects that are a representation of the underlying provider specific values.</source>
          <target state="translated">基になるプロバイダー固有の値の表現であるオブジェクトの配列を取得します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For most applications, the GetProviderSpecificValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</source>
          <target state="translated">ほとんどのアプリケーションは、GetProviderSpecificValues メソッドは、各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことができます、&lt;xref:System.Object&gt;結果の行に含まれる列数より少ないを格納する配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
          <target state="translated">データの量のみ、&lt;xref:System.Object&gt;配列では、配列にコピーを保持します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことも、&lt;xref:System.Object&gt;配列の長さが、結果の行に含まれる列の数を超える&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;。&lt;/xref:System.Object&gt;の配列</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
          <target state="translated">インスタンスの数&lt;xref:System.Object&gt;配列にします&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata of the OracleDataReader.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> OracleDataReader の列メタデータを記述します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The GetSchemaTable method returns metadata about each column in the following order:      |DataReader Column|Description|   |-----------------------|-----------------|   |ColumnName|The name of the column; this might not be unique.</source>
          <target state="translated">GetSchemaTable メソッドは、次の順序で各列に関するメタデータを返します |。DataReader 列 |説明 |  |-----------------------|-----------------|  |ColumnName |列の名前これは一意でない可能性があります。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If the column name cannot be determined, a null value is returned.</source>
          <target state="translated">列名を特定できない場合は、null 値が返されます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>This name always reflects the most recent naming of the column in the current view or command text.|   |ColumnOrdinal|The zero-based ordinal of the column.</source>
          <target state="translated">この名前が常に現在のビューまたはコマンド テキスト内の列の最新の名前を反映します |。  |ColumnOrdinal |列の&amp;0; から始まる序数です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This column cannot contain a null value.|   |ColumnSize|The maximum possible length of a value in the column.</source>
          <target state="translated">この列は null 値を含めることはできません |。  |ColumnSize |列の値の可能な最大長。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>For columns that use a fixed-length data type, this is the size of the data type.|   |NumericPrecision|If &lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt; is a numeric data type, this is the maximum precision of the column.</source>
          <target state="translated">固定長データ型を使用する列でのデータ型のサイズです |。  |NumericPrecision |場合&lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;、数値データ型は、これは、列の最大有効桁数&lt;/xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The precision depends on the definition of the column.</source>
          <target state="translated">精度は、列の定義に依存します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Float`</ph> and <ph id="ph2">`Double`</ph> data types in Oracle are binary precision.|   |NumericScale|If &lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt; is a numeric data type, the number of digits to the right of the decimal point.</source>
          <target state="translated"><ph id="ph1">`Float`</ph>および<ph id="ph2">`Double`</ph>Oracle のデータ型はバイナリ有効桁数です |。  |NumericScale |場合&lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;は数値データ型、小数点の右側にある数字の数です&lt;/xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Float`</ph> and <ph id="ph2">`Double`</ph> data types in Oracle are binary scale.|   |DataType|Maps to the common language runtime type of &lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;.|   |IsLong|<ph id="ph3">`true`</ph> if the column contains a Binary Long Object (BLOB) that contains very long data.|   |AllowDBNull|<ph id="ph4">`true`</ph> if the consumer can set the column to a null value; otherwise, <ph id="ph5">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Float`</ph>および<ph id="ph2">`Double`</ph>Oracle のデータ型はバイナリの小数点以下桁数です |。  |データ型 |&lt;xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt;の共通言語ランタイムの型にマップします |。  |IsLong |<ph id="ph3">`true`</ph>列には、非常に長いデータを含むバイナリ長オブジェクト (BLOB) が含まれている場合です |。  |AllowDBNull |<ph id="ph4">`true`</ph>コンシューマーは、null 値以外に、列を設定できる場合は、それ以外の場合、 <ph id="ph5">`false`</ph>&lt;/xref:System.Data.OracleClient.OracleParameter.DbType%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A column may contain null values, even if it cannot be set to a null value.|   |IsUnique|<ph id="ph1">`true`</ph>: No two rows in the base table-the table returned in &lt;xref:System.Data.Common.SchemaTableColumn.BaseTableName&gt; -can have the same value in this column.</source>
          <target state="translated">列がある場合、null 値を null 値に設定できない場合でもです |。  |IsUnique |<ph id="ph1">`true`</ph>:&amp;2; つの行で返されるベース テーブルのテーブルに&lt;xref:System.Data.Common.SchemaTableColumn.BaseTableName&gt;-この列の値が同じであることができます&lt;/xref:System.Data.Common.SchemaTableColumn.BaseTableName&gt;。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>IsUnique<ept id="p1">**</ept> is guaranteed to be <ph id="ph1">`true`</ph> if the column constitutes a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</source>
          <target state="translated"><bpt id="p1">**</bpt>IsUnique<ept id="p1">**</ept>が保証される<ph id="ph1">`true`</ph>列自体のキーの構成の場合、またはこの列にのみ適用される UNIQUE 型の制約がある場合。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column can contain duplicate values in the base table.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列は、ベース テーブルに重複する値を含めることができます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The default for this column is false.|   |IsKey|<ph id="ph1">`true`</ph>: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</source>
          <target state="translated">この列の既定値は false です |。  |IsKey |<ph id="ph1">`true`</ph>: 列が行セットの列のセットのいずれかをまとめると、行を一意に識別します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The set of columns with <bpt id="p1">**</bpt>IsKey<ept id="p1">**</ept> set to true must uniquely identify a row in the rowset.</source>
          <target state="translated">列のセット<bpt id="p1">**</bpt>IsKey<ept id="p1">**</ept> true に設定するが、行セット内の行を一意に識別する必要があります。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>There is no requirement that this set of columns is a minimal set of columns.</source>
          <target state="translated">この列のセットが列の最小セットである必要はありません。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</source>
          <target state="translated">この列のセットは、ベース テーブルの主キー、unique 制約または一意のインデックスから生成される可能性があります。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>: The column is not required to uniquely identify the row.|   |BaseTableName|The name of the table or view in the data store that contains the column.</source>
          <target state="translated"><ph id="ph1">`false`</ph>: 列が行を一意に識別する必要はありません。 |  |BaseTableName |テーブルまたは列を含むデータ ストア内のビューの名前。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A null value if the base table name cannot be determined.</source>
          <target state="translated">ベース テーブル名を特定できない場合は、null 値です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The default of this column is a null value.|   |BaseColumnName|The name of the column in the data store.</source>
          <target state="translated">この列の既定値は null 値です |。  |BaseColumnName |データ ストア内の列の名前。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This might be different than the column name returned in the <bpt id="p1">**</bpt>ColumnName<ept id="p1">**</ept> column if an alias was used.</source>
          <target state="translated">返される列名とは異なる可能性があります、 <bpt id="p1">**</bpt>ColumnName<ept id="p1">**</ept>列エイリアスが使用された場合。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</source>
          <target state="translated">ベースの列名を特定できない場合や行セットの列が派生したと一致しない、データの列ストアの場合は、null 値。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The default for this column is a null value.|   |BaseSchemaName|The name of the schema in the data store that contains the column.</source>
          <target state="translated">この列の既定値は null 値です |。  |BaseSchemaName |列を含むデータ ストア内のスキーマの名前です。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A null value if the base schema name cannot be determined.</source>
          <target state="translated">ベース スキーマ名を特定できない場合は、null 値です。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The default for this column is a null value.|       A row is returned for every column in the results set.</source>
          <target state="translated">この列の既定値は null 値です |。      結果セット内のすべての列の行が返されます。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  To ensure that metadata columns return the correct information, you must call &lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt; with the <ph id="ph2">`behavior`</ph> parameter set to <ph id="ph3">`KeyInfo`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; メタデータ列は、正しい情報を返すように、呼び出す必要があります&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;で、<ph id="ph2">`behavior`</ph>パラメーターに設定<ph id="ph3">`KeyInfo`</ph>&lt;/xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</source>
          <target state="translated">それ以外の場合、既定値、null、または不適切なデータを返すスキーマ テーブルの列のいくつか可能性があります。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that describes the column metadata.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列メタデータを記述します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a string.</source>
          <target state="translated">文字列として指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a string.</source>
          <target state="translated">文字列として指定された列の値です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a <bpt id="p1">&lt;xref uid="langword_csharp_System.TimeSpan" name="System.TimeSpan" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した列の値を取得、 <bpt id="p1">&lt;xref uid="langword_csharp_System.TimeSpan" name="System.TimeSpan" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt; to check for null values before calling this method.</source>
          <target state="translated">呼び出す&lt;xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;このメソッドを呼び出す前に null 値をチェックする&lt;/xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A&gt;。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The value of the specified column as a &lt;xref:System.TimeSpan&gt;.</source>
          <target state="translated">&lt;xref:System.TimeSpan&gt;。&lt;/xref:System.TimeSpan&gt;として指定された列の値</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The specified cast is not valid.</source>
          <target state="translated">指定されたキャストは有効ではありません。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets the value of the column at the specified ordinal in its native format.</source>
          <target state="translated">ネイティブ形式で指定された序数の列の値を取得します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The value returned by this method might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</source>
          <target state="translated">このメソッドによって返される値には、.NET&amp;10; 進数型には、Oracle の Number 型からの変換の結果の可能性があります。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>If the value is too large to be stored in the .NET Decimal, this method throws an &lt;xref:System.Data.OracleClient.OracleException&gt; that is an overflow exception.</source>
          <target state="translated">このメソッドはスロー、値が大きすぎて .NET Decimal に格納する場合は、&lt;xref:System.Data.OracleClient.OracleException&gt;オーバーフロー例外が&lt;/xref:System.Data.OracleClient.OracleException&gt;。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The value to return.</source>
          <target state="translated">返される値。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The value is too large to be stored in the .NET Decimal.</source>
          <target state="translated">.NET Decimal に格納される値が大きすぎます。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Populates an array of objects with the column values of the current row.</source>
          <target state="translated">現在の行の列の値を持つオブジェクトの配列を追加します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For most applications, the GetValues method provides an efficient means for retrieving all columns, rather than retrieving each column individually.</source>
          <target state="translated">ほとんどのアプリケーションは、GetValues メソッドは、各列を個別に取得するのではなく、すべての列を取得するための効率的な手段を提供します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことができます、&lt;xref:System.Object&gt;結果の行に含まれる列数より少ないを格納する配列&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
          <target state="translated">データの量のみ、&lt;xref:System.Object&gt;配列では、配列にコピーを保持します&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns contained in the resulting row.</source>
          <target state="translated">渡すことも、&lt;xref:System.Object&gt;配列の長さが、結果の行に含まれる列の数を超える&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This method returns &lt;xref:System.DBNull&gt; for null database columns.</source>
          <target state="translated">このメソッドが戻る&lt;xref:System.DBNull&gt;null データベース列にします&lt;/xref:System.DBNull&gt;。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The value returned in the &lt;xref:System.Object&gt; array might be the result of the conversion from Oracle's Number data type to .NET Decimal type.</source>
          <target state="translated">戻り値、&lt;xref:System.Object&gt;配列は Oracle の Number 型から .NET&amp;10; 進数型への変換の結果である可能性があります&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>If the value is too large to be stored in the .NET Decimal, this method throws an &lt;xref:System.Data.OracleClient.OracleException&gt; that is an overflow exception.</source>
          <target state="translated">このメソッドはスロー、値が大きすぎて .NET Decimal に格納する場合は、&lt;xref:System.Data.OracleClient.OracleException&gt;オーバーフロー例外が&lt;/xref:System.Data.OracleClient.OracleException&gt;。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Object&gt; into which to copy the attribute columns.</source>
          <target state="translated">型の配列&lt;xref:System.Object&gt;属性列のコピー先&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
          <target state="translated">インスタンスの数&lt;xref:System.Object&gt;配列にします&lt;/xref:System.Object&gt;。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The value is too large to be stored in the .NET Decimal.</source>
          <target state="translated">.NET Decimal に格納される値が大きすぎます。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains one or more rows.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>&amp;1; つまたは複数の行が含まれています。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains one or more rows; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&amp;1; つまたは複数の行が含まれます。 それ以外の場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Indicates whether the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated">示すかどうか、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が閉じられます。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>IsClosed and &lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt; are the only properties that you can call after the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; is closed.</source>
          <target state="translated">IsClosed と&lt;xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;後に呼び出すことができる唯一のプロパティは、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;が閉じられた&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;&lt;/xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A&gt;。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is closed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>が閉じられた場合<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the column contains non-existent or missing values.</source>
          <target state="translated">列に値が存在しないまたは欠損値が含まれるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>To avoid raising an error, call this method to check for null column values before calling the typed Get methods (for example, &lt;xref:System.Data.OracleClient.OracleDataReader.GetByte%2A&gt;, &lt;xref:System.Data.OracleClient.OracleDataReader.GetChar%2A&gt;, and so on).</source>
          <target state="translated">エラーの発生を避けるため、このメソッドを呼び出して、型指定されたを呼び出す前に null 列値は Get メソッドのチェック (たとえば、 &lt;xref:System.Data.OracleClient.OracleDataReader.GetByte%2A&gt;、&lt;xref:System.Data.OracleClient.OracleDataReader.GetChar%2A&gt;など).&lt;/xref:System.Data.OracleClient.OracleDataReader.GetChar%2A&gt; &lt;/xref:System.Data.OracleClient.OracleDataReader.GetByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">0 から始まる列序数です。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified column value is equivalent to <bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定された列の値と等しい場合<bpt id="p2">&lt;xref href="System.DBNull"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、それ以外の<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column ordinal.</source>
          <target state="translated">序数の列を指定して、ネイティブ形式で指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The column ordinal.</source>
          <target state="translated">列の序数。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">ネイティブ形式で指定された列の値です。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">渡されたインデックス 0 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;。&lt;/xref:System.Data.IDataRecord.FieldCount*&gt;までの範囲外</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column in its native format given the column name.</source>
          <target state="translated">列の名前を指定されたネイティブ形式で指定された列の値を取得します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The column name.</source>
          <target state="translated">列の名前。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The value of the specified column in its native format.</source>
          <target state="translated">ネイティブ形式で指定された列の値です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>No column with the specified name was found.</source>
          <target state="translated">指定した名前の列は見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Advances the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next result</source>
          <target state="translated">進めます、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>次の結果</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>You must use a <ph id="ph1">`REF CURSOR`</ph> when calling this method.</source>
          <target state="translated">使用する必要があります、<ph id="ph1">`REF CURSOR`</ph>このメソッドを呼び出すときにします。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more result sets; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>次の結果セットがある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Advances the <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the next record.</source>
          <target state="translated">進めます、 <bpt id="p1">&lt;xref href="System.Data.OracleClient.OracleDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>次のレコードにします。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The default position of the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; is prior to the first record.</source>
          <target state="translated">既定の位置、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;が最初のレコードより前です&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Therefore, you must call Read to begin accessing any data.</source>
          <target state="translated">したがって、データへのアクセスを開始する読み取りを呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>More than one &lt;xref:System.Data.OracleClient.OracleDataReader&gt; can be open at any given time.</source>
          <target state="translated">1 つ以上&lt;xref:System.Data.OracleClient.OracleDataReader&gt;特定の時点で開くことができる&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more rows; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>複数の行がある場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</source>
          <target state="translated">変更、挿入、または SQL ステートメントの実行によって削除された行の数を取得します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The RecordsAffected property is not set until all rows are read and you close the &lt;xref:System.Data.OracleClient.OracleDataReader&gt;.</source>
          <target state="translated">RecordsAffected プロパティが設定されていないすべての行が読み取られ、 &lt;xref:System.Data.OracleClient.OracleDataReader&gt;。&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt; and RecordsAffected are the only properties that you can call after the &lt;xref:System.Data.OracleClient.OracleDataReader&gt; is closed.</source>
          <target state="translated">&lt;xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt;RecordsAffected が後に呼び出すことができる唯一のプロパティと、&lt;xref:System.Data.OracleClient.OracleDataReader&gt;が閉じられた&lt;/xref:System.Data.OracleClient.OracleDataReader&gt;。&lt;/xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The number of rows changed, inserted, or deleted.</source>
          <target state="translated">行の数は、変更、挿入、または削除します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</source>
          <target state="translated">SELECT ステートメントに達すると-1影響を受けた行がないか、ステートメントが失敗した場合は 0 を返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>