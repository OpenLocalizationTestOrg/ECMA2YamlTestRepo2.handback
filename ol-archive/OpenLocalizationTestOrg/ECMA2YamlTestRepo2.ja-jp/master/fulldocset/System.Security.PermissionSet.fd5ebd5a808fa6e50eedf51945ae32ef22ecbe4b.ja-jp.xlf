<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17e0f07de0dbe61d72b6a52eb9880d885a825d58</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.PermissionSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18634e72439059a14c96a29130fce6502d7fcc75</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5006bc484177a2945e4d9a8033dadf416489e8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection that can contain many different types of permissions.</source>
          <target state="translated">さまざまな種類のアクセス許可を含めることができるコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use PermissionSet to perform operations on several different permissions as a group.</source>
          <target state="translated">PermissionSet を使用して、グループとしていくつかの異なるアクセス許可での操作を実行することができます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定したクラス<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Unrestricted`</ph> state allows all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface, while <ph id="ph2">`None`</ph> allows no permissions.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph>状態により、実装するすべてのアクセス許可、&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;インターフェイス、中に<ph id="ph2">`None`</ph>アクセス許可は許可されません&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; on an empty &lt;xref:System.Security.PermissionSet&gt; to define the set in greater detail.</source>
          <target state="translated">使用して&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;、空で&lt;xref:System.Security.PermissionSet&gt;セットを定義する、さらに詳しく&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the permission set's access to resources.</source>
          <target state="translated">リソースへのアクセス許可セットのアクセスを指定する列挙値の&amp;1; つ。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">state</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid <bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">state</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが有効ではありません<bpt id="p2">&lt;xref href="System.Security.Permissions.PermissionState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with initial values taken from the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">permSet</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から取得した最初の値を持つクラス、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">permSet</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Security.PermissionSet&gt; contains copies of the permissions contained in the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;指定した&lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;に格納されているアクセス許可のコピーを含む&lt;/xref:System.Security.PermissionSet&gt;新しい</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This is equivalent to &lt;xref:System.Security.PermissionSet.Copy%2A&gt; when the <ph id="ph2">`permSet`</ph> parameter is not <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; これに相当&lt;xref:System.Security.PermissionSet.Copy%2A&gt;ときに、<ph id="ph2">`permSet`</ph>パラメーターではありません<ph id="ph3">`null`</ph>&lt;/xref:System.Security.PermissionSet.Copy%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The set from which to take the value of the new <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to create an empty <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しい値を取得するセット<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、または<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 、空を作成する<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した権限への追加、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">既に追加されたアクセス許可と同じ型のアクセス許可が存在するかどうか、 &lt;xref:System.Security.PermissionSet&gt;、新しいアクセス許可は、既存のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">たとえば、アクセス許可を実装する&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;に追加、 &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;、結果の和集合は、元の<ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">追加する権限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">追加のアクセス許可と同じ型に既に存在するすべてのアクセス権の和集合、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a specified permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定した権限への追加、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The AddPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.AddPermission%2A&gt; method.</source>
          <target state="translated">AddPermissionImpl メソッドは、実装では、&lt;xref:System.Security.PermissionSet.AddPermission%2A&gt;メソッド&lt;/xref:System.Security.PermissionSet.AddPermission%2A&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If a permission of the same type as the added permission already exists in the &lt;xref:System.Security.PermissionSet&gt;, the new permission is the union of the existing permission object and the specified permission object.</source>
          <target state="translated">既に追加されたアクセス許可と同じ型のアクセス許可が存在するかどうか、 &lt;xref:System.Security.PermissionSet&gt;、新しいアクセス許可は、既存のアクセス許可オブジェクトと指定したアクセス許可オブジェクトの和集合&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For example, if a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is added to an &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;, the resulting union is the original <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">たとえば、アクセス許可を実装する&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;に追加、 &lt;xref:System.Security.Permissions.PermissionState&gt;&lt;xref:System.Security.PermissionSet&gt;、結果の和集合は、元の<ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt; &lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt; &lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The permission to add.</source>
          <target state="translated">追加する権限。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The union of the permission added and any permission of the same type that already exists in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">perm</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">追加のアクセス許可と同じ型に既に存在するすべてのアクセス権の和集合、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、または<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>場合<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">perm</ph> <ept id="p3">&lt;/code&gt;</ept>は<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource.</source>
          <target state="translated">呼び出し元のコードがスタック内の上位の呼び出し元がリソースにアクセスする権限が許可されていない場合でも、このメソッドを呼び出すコードを通じてアクセス許可要求によって保護されているリソースにアクセスできることを宣言します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Using Assert can create security vulnerabilities.</source>
          <target state="translated">Assert を使用すると、セキュリティの脆弱性を作成できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is the only way to assert multiple permissions at the same time within a frame because only one Assert can be active on a frame.</source>
          <target state="translated">これは、1 つだけのアサートはフレームをアクティブにできるため、フレーム内で同時に複数のアクセス許可をアサートする唯一の方法です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Assert is only effective for granted permissions.</source>
          <target state="translated">唯一の有効なアクセス許可が付与をアサートします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt; or &lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt; method to cancel an active Assert.</source>
          <target state="translated">呼び出す、&lt;xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;または&lt;xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt;active Assert をキャンセルするメソッド&lt;/xref:System.Security.CodeAccessPermission.RevertAll%2A?displayProperty=fullName&gt;&lt;/xref:System.Security.CodeAccessPermission.RevertAssert%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Because calling the Assert method removes the requirement that all code in the call chain must be granted permission to access the specified resource, it can open up security vulnerabilities if used incorrectly or inappropriately.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Assert メソッドの呼び出しには、呼び出しチェーン内のすべてのコードに対して、指定されたリソースにアクセスする権限を付与する必要がある要件が解除されます、ために開くことができるセキュリティの脆弱性を誤ってまたは不適切に使用する場合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Therefore, it should be used with great caution.</source>
          <target state="translated">そのため、注意深く使用してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance asserted has not been granted to the asserting code.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>アサートされるインスタンスがアサート側コードに付与されていません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-       There is already an active Assert for the current frame.</source>
          <target state="translated">または、現在のフレームのアクティブなアサートが既に存在します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から派生していないアクセス許可を含む<bpt id="p2">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains permissions that are not derived from <bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>から派生していないアクセス許可を含む<bpt id="p3">&lt;xref href="System.Security.CodeAccessPermission"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converts an encoded <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from one XML encoding format to another XML encoding format.</source>
          <target state="translated">変換、エンコードされた<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>別の XML エンコード形式を&amp;1; つの XML エンコード形式からです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Do not use this method.</source>
          <target state="translated">このメソッドを使用しないでください。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">エンコード形式のいずれかを表す文字列: ASCII、Unicode、または Binary です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">使用可能な値は、"XMLASCII"または"XML"、"XMLUNICODE"、および"BINARY"です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An XML-encoded permission set.</source>
          <target state="translated">XML でエンコードされたアクセス権を設定します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A string representing one of the following encoding formats: ASCII, Unicode, or Binary.</source>
          <target state="translated">エンコード形式のいずれかを表す文字列: ASCII、Unicode、または Binary です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Possible values are "XMLASCII" or "XML", "XMLUNICODE", and "BINARY".</source>
          <target state="translated">使用可能な値は、"XMLASCII"または"XML"、"XMLUNICODE"、および"BINARY"です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An encrypted permission set with the specified output format.</source>
          <target state="translated">指定した出力形式で設定された、暗号化された権限です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">コピーを作成、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A copy of a &lt;xref:System.Security.PermissionSet&gt; represents the same access to resources as the original object.</source>
          <target state="translated">コピー、&lt;xref:System.Security.PermissionSet&gt;リソースに対して、元のオブジェクトと同じアクセス権を表します&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Changes made to the copy do not affect the original permission set.</source>
          <target state="translated">コピーに加えられた変更は、元の権限セットには影響しません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A copy of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">コピー、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Copies the permission objects of the set to the indicated location in an &lt;xref:System.Array&gt;.</source>
          <target state="translated">セットのアクセス許可オブジェクト&lt;xref:System.Array&gt;.&lt;/xref:System.Array&gt;で指定された場所にコピーします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The target array to which to copy.</source>
          <target state="translated">コピー先ターゲット配列。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The starting position in the array to begin copying (zero based).</source>
          <target state="translated">(0 ベース) のコピーを開始する配列内の開始位置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> parameter has more than one dimension.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが&amp;1; つ以上のディメンションです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> parameter is out of the range of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが範囲外、 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">array</ph> <ept id="p2">&lt;/code&gt;</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the number of permission objects contained in the permission set.</source>
          <target state="translated">権限セットに含まれるアクセス許可オブジェクトの数を取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`None`</ph> or <ph id="ph2">`Unrestricted`</ph> state this returns zero, because no actual permission object instances are used.</source>
          <target state="translated"><ph id="ph1">`None`</ph>または<ph id="ph2">`Unrestricted`</ph>状態の&amp;0; が返されます。 実際のアクセス許可オブジェクトのインスタンスが使用されていないためです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The number of permission objects contained in the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">含まれるアクセス許可オブジェクトの数、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Forces a &lt;xref:System.Security.SecurityException&gt; at run time if all callers higher in the call stack have not been granted the permissions specified by the current instance.</source>
          <target state="translated">強制的な&lt;xref:System.Security.SecurityException&gt;実行時に現在のインスタンスによって指定されたアクセス許可が呼び出し履歴内の上位にあるすべての呼び出し元に与えられていない場合&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Use Demand on a &lt;xref:System.Security.PermissionSet&gt; to ensure that all callers have all permissions in the set with one operation.</source>
          <target state="translated">要求を使用して、&lt;xref:System.Security.PermissionSet&gt;を&amp;1; つの操作のセットのすべての呼び出し元のすべての権限があることを確認します&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</source>
          <target state="translated">このメソッドを呼び出すコードのアクセス許可はチェックされません。チェックは、そのコードの直前の呼び出し元から開始され、スタックの上位に進みます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">通常、呼び出し履歴はコール スタックに呼び出し履歴の上位にあるメソッドが下にあるメソッドを呼び出すようにダウン、成長として表されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Demand succeeds only if no &lt;xref:System.Security.SecurityException&gt; is thrown.</source>
          <target state="translated">しかない場合、要求が成功した&lt;xref:System.Security.SecurityException&gt;がスローされます&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Security.PermissionSet&gt; contains permissions that do not inherit from &lt;xref:System.Security.CodeAccessPermission&gt;, the <ph id="ph1">`Demand`</ph> methods of those permissions are called as well.</source>
          <target state="translated">場合、&lt;xref:System.Security.PermissionSet&gt;から継承しないそのアクセス許可を含む&lt;xref:System.Security.CodeAccessPermission&gt;、<ph id="ph1">`Demand`</ph>これらのアクセス許可のメソッドとも呼びます&lt;/xref:System.Security.CodeAccessPermission&gt;&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A caller in the call chain does not have the permission demanded.</source>
          <target state="translated">呼び出しチェーン内の呼び出し元には、要求されたアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for a permission that has an intersection with a permission of a type contained in the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet.Demand*&gt;現在に含まれる型の権限との交差部分のあるアクセス許可の呼び出し元のコードをパススルーする<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が失敗します&lt;/xref:System.Security.PermissionSet.Demand*&gt;。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>This method prevents callers higher in the call stack from accessing the protected resource through the code that calls this method, even if those callers have been granted permission to access it.</source>
          <target state="translated">このメソッドは、コール スタックの上位の呼び出し元がそれらの呼び出し元にはそれにアクセスする権限が付与されている場合でもこのメソッドを呼び出すコードを保護されたリソースにアクセスすることを防ぎます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">通常、呼び出し履歴はコール スタックに呼び出し履歴の上位にあるメソッドが下にあるメソッドを呼び出すようにダウン、成長として表されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Deny can limit the liability of the programmer or help prevent accidental security vulnerabilities because it helps prevent the method that calls Deny from being used to access the resource protected by the denied permission.</source>
          <target state="translated">Deny は、プログラマの責任の制限または拒否を拒否されたアクセス許可によって保護されているリソースにアクセスするために使用されているから呼び出されるメソッドを防ぐのに役立つので、偶発的なセキュリティの脆弱性を防ぐためです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If a method calls Deny on a permission, and if a &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission is invoked by a caller lower in the call stack, that security check fails when it reaches the Deny.</source>
          <target state="translated">メソッドでアクセス許可、拒否を呼び出す場合と場合、 &lt;xref:System.Security.PermissionSet.Demand%2A&gt;Deny になったときにそのアクセス許可は、呼び出し履歴内の下位にある呼び出し元によって呼び出されるのセキュリティ チェックが失敗した&lt;/xref:System.Security.PermissionSet.Demand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Deny is ignored for a permission that is not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">拒否するため、そのアクセス許可の確認要求が正常に完了できませんが許可されていないアクセス許可は無視されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A previous call to Deny has already restricted the permissions for the current stack frame.</source>
          <target state="translated">前の呼び出しを拒否には既に現在のスタック フレームのアクセス許可を制限しています。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is equal to the current <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定するかどうか、指定した<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクトが現在<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Equality is determined by the permissions contained in the permission set specified by <ph id="ph1">`obj`</ph>.</source>
          <target state="translated">等しいかどうかは、アクセス許可で指定したセットに含まれているアクセス許可によって決まります<ph id="ph1">`obj`</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`obj`</ph> can be either a &lt;xref:System.Security.PermissionSet&gt; object or a &lt;xref:System.Security.NamedPermissionSet&gt; object.</source>
          <target state="translated"><ph id="ph1">`obj`</ph>いずれかになります、&lt;xref:System.Security.PermissionSet&gt;オブジェクトまたは&lt;xref:System.Security.NamedPermissionSet&gt;オブジェクト&lt;/xref:System.Security.NamedPermissionSet&gt;&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`obj`</ph> is a &lt;xref:System.Security.NamedPermissionSet&gt;, the name and description are ignored.</source>
          <target state="translated">場合<ph id="ph1">`obj`</ph>は、 &lt;xref:System.Security.NamedPermissionSet&gt;、名前と説明は無視されます&lt;/xref:System.Security.NamedPermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在と比較するオブジェクト<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定したオブジェクトが現在に等しい場合<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>オブジェクト。 それ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Reconstructs a security object with a specified state from an XML encoding.</source>
          <target state="translated">XML エンコードから指定された状態で、セキュリティ オブジェクトを再構築します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">XML は、セキュリティ オブジェクトを再構築に使用するエンコーディングします。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid permission element.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターが有効なアクセス許可要素ではありません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">et</ph><ept id="p1">&lt;/code&gt;</ept> parameter's version number is not supported.</source>
          <target state="translated">- または -、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">et</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターのバージョン番号はサポートされていません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">セットのアクセス許可の列挙子を返します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Use the enumerator as an index to access individual permission objects in the set.</source>
          <target state="translated">インデックスとして列挙子を使用して、セット内の個々 のアクセス許可オブジェクトにアクセスします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">セットのアクセス許可の列挙子オブジェクト。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the permissions of the set.</source>
          <target state="translated">セットのアクセス許可の列挙子を返します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The GetEnumeratorImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt; method.</source>
          <target state="translated">GetEnumeratorImpl メソッドは、実装では、&lt;xref:System.Security.PermissionSet.GetEnumerator%2A&gt;メソッド&lt;/xref:System.Security.PermissionSet.GetEnumerator%2A&gt;。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An enumerator object for the permissions of the set.</source>
          <target state="translated">セットのアクセス許可の列挙子オブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a hash code for the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is suitable for use in hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">ハッシュ コードを取得、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ハッシュ ハッシュ テーブルなどのアルゴリズムとデータ構造で使用するために適切なオブジェクトです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The hash code for two instances of the same permission set might be different, so a hash code should not be used to compare two &lt;xref:System.Security.PermissionSet&gt; objects.</source>
          <target state="translated">ハッシュ コードは、2 つの比較には使用できませんので、同じアクセス許可セットの&amp;2; つのインスタンスのハッシュ コードが異なる、可能性があります&lt;xref:System.Security.PermissionSet&gt;オブジェクト&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A hash code for the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在のハッシュ コード<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">セット内に存在する場合は、指定した型のアクセス許可オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">このメソッドを返します<ph id="ph1">`null`</ph>の<ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;実質的にすべてのアクセス許可を含む、実際のインスタンスを返す必要はありません&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The type of the desired permission object.</source>
          <target state="translated">必要なアクセス許可オブジェクトの型。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A copy of the permission object of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">指定された型のアクセス許可オブジェクトのコピー、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターに含まれている、 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、または<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>が存在しない場合。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets a permission object of the specified type, if it exists in the set.</source>
          <target state="translated">セット内に存在する場合は、指定した型のアクセス許可オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The GetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.GetPermission%2A&gt; method.</source>
          <target state="translated">GetPermissionImpl メソッドは、実装では、&lt;xref:System.Security.PermissionSet.GetPermission%2A&gt;メソッド&lt;/xref:System.Security.PermissionSet.GetPermission%2A&gt;。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> for an <ph id="ph2">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">このメソッドを返します<ph id="ph1">`null`</ph>の<ph id="ph2">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;.&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Although an <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions, it does not have any actual instances to return.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;実質的にすべてのアクセス許可を含む、実際のインスタンスを返す必要はありません&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The type of the permission object.</source>
          <target state="translated">アクセス許可オブジェクトの型。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A copy of the permission object, of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">permClass</ph><ept id="p1">&lt;/code&gt;</ept> parameter, contained in the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if none exists.</source>
          <target state="translated">指定された型のアクセス許可オブジェクトのコピー、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">permClass</ph> <ept id="p1">&lt;/code&gt;</ept>パラメーターに含まれている、 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、または<bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>が存在しない場合。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission set that is the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">作成してアクセス許可が現在の交差部分で設定されている返します<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と、指定した<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The intersection of two permission sets is a permission set that describes the set of operations they both describe in common.</source>
          <target state="translated">2 つのアクセス許可セットの積集合は、一連の両方に共通する操作を説明するアクセス許可セットです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifically, it represents the minimum permissions such that any demand that passes both permission sets also passes their intersection.</source>
          <target state="translated">具体的には、アクセス許可の両方に適合する要求設定もパスの交差する、最小限のアクセス許可を表します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For each type of permission that is present in both sets, the two instances of those permissions are intersected using the permission's <ph id="ph1">`Intersect`</ph> method; the resulting permission is included in the resulting &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">両方のセットに存在するためのアクセス許可の種類ごとに、これらのアクセス許可の&amp;2; つのインスタンスと交差する、アクセス許可を使用して<ph id="ph1">`Intersect`</ph>メソッドです結果として得られる&lt;xref:System.Security.PermissionSet&gt;。&lt;/xref:System.Security.PermissionSet&gt;最終的なアクセス許可が含まれている。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Permission types that exist in only one of the two sets are excluded from the resulting set.</source>
          <target state="translated">2 つのセットの&amp;1; つのみに存在するアクセス許可の種類は、結果セットから除外されます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A permission set to intersect with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">アクセス許可セットの現在の交差する<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the intersection of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified target.</source>
          <target state="translated">現在の積集合を表す新しいアクセス許可セット<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と指定したオブジェクト。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>This object is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the intersection is empty.</source>
          <target state="translated">このオブジェクトは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>積集合が空の場合。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is empty.</source>
          <target state="translated">示す値を取得するかどうか、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>が空です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; can be empty and yet contain instances of permissions if those permissions are in the fully-restricted state.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;を空にしてこれらのアクセス許可が完全に制限される状態にある場合、まだアクセス許可のインスタンスを含めることができます&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Permissions are in a fully restricted state if their <ph id="ph1">`IsSubsetOf`</ph> methods return <ph id="ph2">`true`</ph> when <ph id="ph3">`null`</ph> is passed as a parameter.</source>
          <target state="translated">アクセス許可が完全に制限された状態では場合、<ph id="ph1">`IsSubsetOf`</ph>メソッドを返します<ph id="ph2">`true`</ph>とき<ph id="ph3">`null`</ph>をパラメーターとして渡されるです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is empty; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、 <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>が空であるそれ以外の場合、 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">コレクションは読み取り専用であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; cannot be read-only, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;ため、このプロパティは常に、読み取り専用であることはできません<ph id="ph1">`false`</ph>&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Determines whether the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is a subset of the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定するかどうか、現在<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>の指定されたサブセットです<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.PermissionSet&gt; is a subset of the target &lt;xref:System.Security.PermissionSet&gt; if all demands that succeed for the &lt;xref:System.Security.PermissionSet&gt; also succeed for the target.</source>
          <target state="translated">A&lt;xref:System.Security.PermissionSet&gt;ターゲットのサブセットである&lt;xref:System.Security.PermissionSet&gt;のかどうかは成功するすべての要求、&lt;xref:System.Security.PermissionSet&gt;ターゲットに対しても成功します&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>That is, the target contains at least the permissions contained in the subset.</source>
          <target state="translated">つまり、ターゲット サブセットに含まれているアクセス許可を含む少なくともです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The permission set to test for the subset relationship.</source>
          <target state="translated">権限セットをサブセットの関係をテストします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This must be either a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a <bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">これはどちらかにする必要があります、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref href="System.Security.NamedPermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a subset of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">target</ph><ept id="p3">&lt;/code&gt;</ept> parameter; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合、現在<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>のサブセットである、 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">target</ph> <ept id="p3">&lt;/code&gt;</ept>パラメーター、それ以外の<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is guaranteed to be thread safe.</source>
          <target state="translated">セーフのコレクションが確実にスレッドであるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.PermissionSet&gt; does not automatically handle thread safety, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet&gt;自動的に処理しないスレッド セーフでは、このプロパティは常に<ph id="ph1">`false`</ph>です。&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;をサポートするために必要</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定するかどうか、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>は<bpt id="p2">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Unrestricted`</ph>&lt;xref:System.Security.PermissionSet&gt; effectively contains all permissions that implement the &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; interface.</source>
          <target state="translated"><ph id="ph1">`Unrestricted`</ph> &lt;xref:System.Security.PermissionSet&gt;効果的に実装するすべてのアクセス許可を含む、&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;インターフェイス&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;&lt;/xref:System.Security.PermissionSet&gt;。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Unrestricted" name="Unrestricted" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Causes any &lt;xref:System.Security.PermissionSet.Demand*&gt; that passes through the calling code for any <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is not a subset of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to fail.</source>
          <target state="translated">&lt;xref:System.Security.PermissionSet.Demand*&gt;任意の呼び出し元のコードをパススルーする<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>が一部ではなく、現在の<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>が失敗します&lt;/xref:System.Security.PermissionSet.Demand*&gt;。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PermitOnly is similar to &lt;xref:System.Security.PermissionSet.Deny%2A&gt;, in that both cause stack walks to fail when they would otherwise succeed.</source>
          <target state="translated">PermitOnly と似ています&lt;xref:System.Security.PermissionSet.Deny%2A&gt;、それ以外の場合操作が成功すると失敗するスタック ウォークが発生する両方でその&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;xref:System.Security.PermissionSet.Deny%2A&gt; specifies permissions that will cause the stack walk to fail, but PermitOnly specifies the only permissions that do not cause the stack walk to fail.</source>
          <target state="translated">その違いは&lt;xref:System.Security.PermissionSet.Deny%2A&gt;を指定するスタックを原因となるアクセス許可が失敗するため、説明は PermitOnly は失敗するスタック ウォークが発生しないのみのアクセス許可を指定します&lt;/xref:System.Security.PermissionSet.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Call this method to ensure that your code can be used to access only the specified resources.</source>
          <target state="translated">このメソッドを呼び出して、指定されたリソースのみにアクセスするコードを使用できることを確認してください。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>PermitOnly is ignored for a permission not granted because a demand for that permission cannot succeed.</source>
          <target state="translated">そのアクセス許可の確認要求が成功することはできませんので許可されていなかった権限 PermitOnly は無視されます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>However, if code lower on the call stack later calls &lt;xref:System.Security.PermissionSet.Demand%2A&gt; for that permission, a &lt;xref:System.Security.SecurityException&gt; is thrown when the stack walk reaches the code that tried to call PermitOnly.</source>
          <target state="translated">ただし、コードのコール スタックを後で場合呼び出し&lt;xref:System.Security.PermissionSet.Demand%2A&gt;そのアクセス許可、&lt;xref:System.Security.SecurityException&gt;スタック ウォークが PermitOnly を呼び出すしようとしたコードに達した場合にスローされます&lt;/xref:System.Security.SecurityException&gt;&lt;/xref:System.Security.PermissionSet.Demand%2A&gt;。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This is because the code that called PermitOnly has not been granted the permission, even though it called PermitOnly for that permission.</source>
          <target state="translated">これは、そのアクセス許可に対して PermitOnly が呼び出されていなくても、PermitOnly を呼び出したコードに、アクセス許可が与えられていないためです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</source>
          <target state="translated">通常、呼び出し履歴はコール スタックに呼び出し履歴の上位にあるメソッドが下にあるメソッドを呼び出すようにダウン、成長として表されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">セットから特定の種類のアクセス許可を削除します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 無制限のアクセス許可セットからのアクセス許可を削除できません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">アクセス許可の設定は無制限のアクセス許可を削除しようとすると、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The following C# code attempts to remove the &lt;xref:System.Security.Permissions.FileIOPermission&gt; from the <ph id="ph1">`FullTrust`</ph> permission set, but the permission is not removed.</source>
          <target state="translated">次の c# コードが削除しようとした場合、&lt;xref:System.Security.Permissions.FileIOPermission&gt;から、<ph id="ph1">`FullTrust`</ph>アクセス許可設定しますが、アクセス許可は削除されません&lt;/xref:System.Security.Permissions.FileIOPermission&gt;。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The type of permission to delete.</source>
          <target state="translated">削除するアクセス許可の種類。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">アクセス許可は、セットから削除します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Removes a permission of a certain type from the set.</source>
          <target state="translated">セットから特定の種類のアクセス許可を削除します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The RemovePermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt; method.</source>
          <target state="translated">RemovePermissionImpl メソッドは、実装では、&lt;xref:System.Security.PermissionSet.RemovePermission%2A&gt;メソッド&lt;/xref:System.Security.PermissionSet.RemovePermission%2A&gt;。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  You cannot remove permissions from an unrestricted permission set.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 無制限のアクセス許可セットからアクセス許可を削除することはできません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The permission set remains unrestricted after you attempt to remove the permission, and an exception is not thrown.</source>
          <target state="translated">アクセス許可の設定は無制限のアクセス許可を削除しようとすると、例外はスローされません。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The type of the permission to remove.</source>
          <target state="translated">削除するアクセス許可の種類。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The permission removed from the set.</source>
          <target state="translated">アクセス許可は、セットから削除します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Causes any previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame to be removed and no longer be in effect.</source>
          <target state="translated">以前のど&lt;xref:System.Security.CodeAccessPermission.Assert*&gt;、現在のフレームの削除して、有効で使用できなくします&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If there is no &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt; for the current frame, an &lt;xref:System.ExecutionEngineException&gt; is thrown.</source>
          <target state="translated">ある場合ありません&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;現在のフレーム、&lt;xref:System.ExecutionEngineException&gt;がスローされます&lt;/xref:System.ExecutionEngineException&gt;&lt;/xref:System.Security.CodeAccessPermission.Assert%2A&gt;。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>There is no previous &lt;xref:System.Security.CodeAccessPermission.Assert*&gt; for the current frame.</source>
          <target state="translated">ない&lt;xref:System.Security.CodeAccessPermission.Assert*&gt;現在のフレーム&lt;/xref:System.Security.CodeAccessPermission.Assert*&gt;。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">アクセス許可を設定、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、同じ型の既存のアクセス許可を置換します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">このメソッドから同じ型の既存のアクセス許可オブジェクトを削除、&lt;xref:System.Security.PermissionSet&gt;で置き換えて、<ph id="ph1">`perm`</ph>パラメーター&lt;/xref:System.Security.PermissionSet&gt; 。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">アクセス許可を実装する場合&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;に設定されている、&lt;xref:System.Security.PermissionSet&gt;つまり&lt;xref:System.Security.Permissions.PermissionState&gt;、結果として得られる&lt;xref:System.Security.PermissionSet&gt;が不要になった<ph id="ph1">`Unrestricted`</ph>&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt;&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">設定する権限です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">セットのアクセス許可。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Sets a permission to the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, replacing any existing permission of the same type.</source>
          <target state="translated">アクセス許可を設定、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、同じ型の既存のアクセス許可を置換します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The SetPermissionImpl method is the implementation for the &lt;xref:System.Security.PermissionSet.SetPermission%2A&gt; method.</source>
          <target state="translated">SetPermissionImpl メソッドは、実装では、&lt;xref:System.Security.PermissionSet.SetPermission%2A&gt;メソッド&lt;/xref:System.Security.PermissionSet.SetPermission%2A&gt;。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>This method removes any existing permission object of the same type from the &lt;xref:System.Security.PermissionSet&gt; and replaces it with the <ph id="ph1">`perm`</ph> parameter.</source>
          <target state="translated">このメソッドから同じ型の既存のアクセス許可オブジェクトを削除、&lt;xref:System.Security.PermissionSet&gt;で置き換えて、<ph id="ph1">`perm`</ph>パラメーター&lt;/xref:System.Security.PermissionSet&gt; 。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If a permission that implements &lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt; is set on a &lt;xref:System.Security.PermissionSet&gt; that is &lt;xref:System.Security.Permissions.PermissionState&gt;, the resulting &lt;xref:System.Security.PermissionSet&gt; is no longer <ph id="ph1">`Unrestricted`</ph>.</source>
          <target state="translated">アクセス許可を実装する場合&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;に設定されている、&lt;xref:System.Security.PermissionSet&gt;つまり&lt;xref:System.Security.Permissions.PermissionState&gt;、結果として得られる&lt;xref:System.Security.PermissionSet&gt;が不要になった<ph id="ph1">`Unrestricted`</ph>&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.PermissionState&gt;&lt;/xref:System.Security.PermissionSet&gt;&lt;/xref:System.Security.Permissions.IUnrestrictedPermission&gt;。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The permission to set.</source>
          <target state="translated">設定する権限です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The set permission.</source>
          <target state="translated">セットのアクセス許可。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The method is called from a <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">メソッドを呼び出した、 <bpt id="p1">&lt;xref href="System.Security.ReadOnlyPermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets the root object of the current collection.</source>
          <target state="translated">現在のコレクションのルート オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method is required to support &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">このメソッドは&lt;xref:System.Collections.ICollection&gt;。&lt;/xref:System.Collections.ICollection&gt;をサポートするために必要</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The root object of the current collection.</source>
          <target state="translated">現在のコレクションのルート オブジェクト。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Runs when the entire object graph has been deserialized.</source>
          <target state="translated">オブジェクト グラフ全体が逆シリアル化されたときに実行されます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
          <target state="translated">コールバックを開始したオブジェクト。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The functionality for this parameter is not currently implemented.</source>
          <target state="translated">このパラメーターの機能は現在実装されていません。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">文字列表現を返します、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The string representation is useful in debugging to see the state of a &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">文字列表記が&lt;xref:System.Security.PermissionSet&gt;。&lt;/xref:System.Security.PermissionSet&gt;の状態を表示するデバッグに役立ちます</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A representation of the <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">形式、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">セキュリティ オブジェクトと現在の状態の XML エンコードを作成します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">状態情報を含む、セキュリティ オブジェクトの XML エンコード。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the union of the current <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and the specified <bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、現在の和集合である<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>と、指定した<bpt id="p3">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The result of a call to Union is a &lt;xref:System.Security.PermissionSet&gt; that represents all the operations represented by the current &lt;xref:System.Security.PermissionSet&gt; as well as all the operations represented by the specified &lt;xref:System.Security.PermissionSet&gt;.</source>
          <target state="translated">共用体への呼び出しの結果は&lt;xref:System.Security.PermissionSet&gt;、現在&lt;xref:System.Security.PermissionSet&gt;、指定した&lt;xref:System.Security.PermissionSet&gt;。&lt;/xref:System.Security.PermissionSet&gt;によって表されるすべての操作だけでなく&lt;/xref:System.Security.PermissionSet&gt;によって表されるすべての操作を表す&lt;/xref:System.Security.PermissionSet&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If either set is <ph id="ph1">`Unrestricted`</ph>, the union is <ph id="ph2">`Unrestricted`</ph> as well.</source>
          <target state="translated">場合設定するか、 <ph id="ph1">`Unrestricted`</ph>、共用体が<ph id="ph2">`Unrestricted`</ph>もします。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The permission set to form the union with the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在の和集合を形成するアクセス許可セット<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A new permission set that represents the union of the current <bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the specified <bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">現在の和集合を表す新しいアクセス許可セット<bpt id="p1">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>と、指定した<bpt id="p2">&lt;xref href="System.Security.PermissionSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>