<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da606a29a4467e72153d05a9c78e2c37306a9290</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXResourceReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d5a2c530a80c50224bebbac99a3f0105f7acc10</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">534901f3b60bc42e555caf5fb8d4c3817e738bdc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
          <target state="translated">XML リソース (.resx) ファイルおよびストリームを列挙し、連続したリソースの名前と値のペアを読み取ります。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ResXResourceReader class provides a default implementation of the &lt;xref:System.Resources.IResourceReader&gt; interface that reads resource information in an XML format.</source>
          <target state="translated">ResXResourceReader クラスの既定の実装を提供する、&lt;xref:System.Resources.IResourceReader&gt;を XML 形式でリソース情報を読み取るインターフェイス&lt;/xref:System.Resources.IResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To read resource information from a binary resource format, use the &lt;xref:System.Resources.ResourceReader&gt; class.</source>
          <target state="translated">バイナリ リソース形式からリソース情報を読み取るには、&lt;xref:System.Resources.ResourceReader&gt;クラス&lt;/xref:System.Resources.ResourceReader&gt;を使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) that is returned by the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method.</source>
          <target state="translated">ResXResourceReader クラスを使用して、ディクショナリ列挙子を走査して .resx ファイル内のリソースを列挙する (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) によって返される、&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;メソッド&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;&lt;/xref:System.Collections.IDictionaryEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You call the methods provided by &lt;xref:System.Collections.IDictionaryEnumerator&gt; to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
          <target state="translated">によって提供されるメソッドを呼び出す&lt;xref:System.Collections.IDictionaryEnumerator&gt;次のリソースに進めると、名前と、.resx ファイル内の各リソースの値を読み取れません&lt;/xref:System.Collections.IDictionaryEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class provides two enumerators.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、ResXResourceReader クラスには、次の&amp;2; つの列挙子が用意されています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object; we recommend that you use this method to enumerate resources.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;メソッドを返します、&lt;xref:System.Collections.IDictionaryEnumerator&gt;オブジェクトですこのメソッドを使用して、リソースを列挙することをお勧めします。&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; 。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt; method is an explicit interface implementation that returns an &lt;xref:System.Collections.IEnumerator&gt; object; we do not recommend its use.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;メソッドは、明示的なインターフェイス実装を返す、 &lt;xref:System.Collections.IEnumerator&gt;; オブジェクトの使用はお勧めしません&lt;/xref:System.Collections.IEnumerator&gt;&lt;/xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method to obtain an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">次の例では、&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;を取得するメソッド、 &lt;xref:System.Collections.IDictionaryEnumerator&gt;.resx ファイル内のリソースを列挙するために使用できるオブジェクト&lt;/xref:System.Collections.IDictionaryEnumerator&gt;&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">この例では、<ph id="ph1">`CreateResourceFile`</ph>必要なリソース ファイルを作成するルーチンです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property is a &lt;xref:System.Resources.ResXDataNode&gt; object rather than the resource value.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept> <ept id="p3">]</ept>場合、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;プロパティは<ph id="ph1">`true`</ph>の値、&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;プロパティは、&lt;xref:System.Resources.ResXDataNode&gt;リソース値ではなくオブジェクトします&lt;/xref:System.Resources.ResXDataNode&gt;&lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;。  </target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This makes a resource item's comment available from the &lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">これにより、リソース アイテムのコメントから使用可能な&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example sets the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property to <ph id="ph1">`true`</ph> and enumerates the resources in a .resx file,       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept><ept id="p3">]</ept>       If &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; is <ph id="ph2">`true`</ph>, the &lt;xref:System.Resources.ResXDataNode&gt; items in the enumeration can be either:      -   Named resources along with their data.</source>
          <target state="translated">次の例のセット、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;プロパティを<ph id="ph1">`true`</ph>.resx ファイル内のリソースを列挙します<bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept> <ept id="p3">]</ept>場合&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;は<ph id="ph2">`true`</ph>、&lt;xref:System.Resources.ResXDataNode&gt;列挙内の項目には、いずれかを指定できます:-リソース、データと共にという名前です&lt;/xref:System.Resources.ResXDataNode&gt;&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;  &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">ここで、&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;プロパティは<ph id="ph1">`null`</ph>&lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   Named resources along with the name of the file that contains the resource data.</source>
          <target state="translated">名前付きリソースとリソース データを格納しているファイルの名前。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property returns a &lt;xref:System.Resources.ResXFileRef&gt; object that provides information about the resource, including its filename.</source>
          <target state="translated">ここで、&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;プロパティから返される、&lt;xref:System.Resources.ResXFileRef&gt;をそのファイル名を含む、リソースに関する情報を提供するオブジェクト&lt;/xref:System.Resources.ResXFileRef&gt;&lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If relative file names are used, you should always set the &lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt; property to provide a reference point for the relative file path.</source>
          <target state="translated">相対ファイル名を使用している場合は、&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;相対ファイル パスの参照ポイントを提供するプロパティ&lt;/xref:System.Resources.ResXResourceReader.BasePath%2A&gt;を常に設定する必要があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a &lt;xref:System.Resources.ResXResourceSet&gt; object and call its <ph id="ph1">`GetString`</ph> and <ph id="ph2">`GetObject`</ph> methods.</source>
          <target state="translated">そのリソースを列挙するには、インスタンスを作成できるのではなく、.resx ファイルから名前付きリソースを取得する場合、&lt;xref:System.Resources.ResXResourceSet&gt;オブジェクト呼び出しとその<ph id="ph1">`GetString`</ph>と<ph id="ph2">`GetObject`</ph>メソッド&lt;/xref:System.Resources.ResXResourceSet&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;、ResXResourceReader クラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Security.SecurityException&gt; exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A&lt;xref:System.Security.SecurityException&gt;直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可があるない場合に例外がスローされます&lt;/xref:System.Security.SecurityException&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified stream.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したストリーム用のクラスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースが含まれている入力ストリーム。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.IO.TextReader&gt;&lt;/xref:System.IO.TextReader&gt;クラス。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A text input stream that contains resources.</source>
          <target state="translated">リソースが含まれているテキスト入力ストリーム。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified resource file.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定したリソース ファイルのクラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The path of the resource file to read.</source>
          <target state="translated">読み取るリソース ファイルのパス。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an input stream and a type resolution service.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス入力ストリームと型解決サービスを使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースが含まれている入力ストリーム。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解決がリソースで指定された名前を入力するオブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a stream and an array of assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスのストリームとアセンブリ名の配列を使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースが含まれている入力ストリーム。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">配列&lt;xref:System.Reflection.AssemblyName&gt;1 つまたは複数のアセンブリを指定するオブジェクト&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">実際の型に、リソースの型名を解決するのには、アセンブリが使用されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a text stream reader and a type resolution service.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス テキスト ストリーム リーダーと型解決サービスを使用します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A text stream reader that contains resources.</source>
          <target state="translated">リソースを含むテキスト ストリーム リーダー。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解決がリソースで指定された名前を入力するオブジェクト。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a &lt;xref:System.IO.TextReader&gt; object and an array of assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスを使用して、&lt;xref:System.IO.TextReader&gt;オブジェクトとアセンブリ名の配列&lt;/xref:System.IO.TextReader&gt;。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An object used to read resources from a stream of text.</source>
          <target state="translated">テキストのストリームからリソースを読み取るためのオブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">配列&lt;xref:System.Reflection.AssemblyName&gt;1 つまたは複数のアセンブリを指定するオブジェクト&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">実際の型に、リソースの型名を解決するのには、アセンブリが使用されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a file name and a type resolution service.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラス ファイル名と型解決サービスを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">リソースが含まれている XML リソース ファイルの名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解決がリソースで指定された名前を入力するオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an XML resource file name and an array of assembly names.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスの XML リソース ファイル名とアセンブリ名の配列を使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">リソースが含まれている XML リソース ファイルの名前。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">配列&lt;xref:System.Reflection.AssemblyName&gt;1 つまたは複数のアセンブリを指定するオブジェクト&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">実際の型に、リソースの型名を解決するのには、アセンブリが使用されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得または設定で指定された相対ファイル パスのベース パス、 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The BasePath property is used to resolve relative file path references that are assigned to the &lt;xref:System.Resources.ResXFileRef.FileName%2A&gt; property of &lt;xref:System.Resources.ResXFileRef&gt; objects.</source>
          <target state="translated">割り当てられている相対ファイル パス参照を解決するのには、BasePath プロパティが使用される、&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;プロパティ&lt;xref:System.Resources.ResXFileRef&gt;オブジェクト&lt;/xref:System.Resources.ResXFileRef&gt;&lt;/xref:System.Resources.ResXFileRef.FileName%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>By default, its value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;, and relative file path references are resolved in relationship to the current directory returned by the &lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">既定では、その値は&lt;xref:System.String.Empty?displayProperty=fullName&gt;、によって返される現在のディレクトリへのリレーションシップで相対ファイル パス参照を解決し、&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt;&lt;/xref:System.String.Empty?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You should set this property before you begin enumerating resources.</source>
          <target state="translated">リソースの列挙を開始する前に、このプロパティを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, yields an absolute path to a resource file.</source>
          <target state="translated">パス、先頭に追加する場合、相対ファイル パスで指定、 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト、リソース ファイルへの絶対パスを生成します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
          <target state="translated">設定操作では、XML リソース ファイルがまだアクセスされていて、使用されているために値を指定することはできません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">によって使用されるすべてのリソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling Close enables the resources used by the &lt;xref:System.Resources.ResXResourceReader&gt; to be reallocated for other purposes.</source>
          <target state="translated">閉じる有効で使用したリソースを呼び出して、&lt;xref:System.Resources.ResXResourceReader&gt;を他の目的に再割り当てされます&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information about Close, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">終了の詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method can be called by either the &lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; method or the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">このメソッドは、いずれかを呼び出すことができます、&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;メソッドまたは&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;メソッド&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;&lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; invokes this method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;このメソッドを呼び出して、<ph id="ph1">`disposing`</ph>パラメーターに設定<ph id="ph2">`true`</ph>です。&lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes this method with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;このメソッドを呼び出して<ph id="ph1">`disposing`</ph>'éý'<ph id="ph2">`false`</ph>です。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceReader&gt; references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターは<ph id="ph2">`true`</ph>、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの&lt;xref:System.Resources.ResXResourceReader&gt;参照。&lt;/xref:System.Resources.ResXResourceReader&gt; 。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドを呼び出して、<ph id="ph1">`Dispose`</ph>参照される各オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>マネージ コードとアンマネージ リソースを解放するには<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>アンマネージ リソースだけを解放します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This member overrides the &lt;xref:System.Object.Finalize*&gt; method.</source>
          <target state="translated">このメンバーは、&lt;xref:System.Object.Finalize*&gt;メソッド&lt;/xref:System.Object.Finalize*&gt;。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">新たに作成<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトし、その内容は、XML リソース ファイルの形式では文字列を読み取ることを初期化します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML リソース書式付き情報を含む文字列。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">オブジェクトからリソースを読み込む、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>文字列。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to resolve type names specified in a resource.</source>
          <target state="translated">新たに作成<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトを初期化し、使用する文字列を読み込み、その内容は、XML リソース ファイルの形式では、、 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>リソースで指定された型名を解決するオブジェクト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML リソース書式付き情報を含む文字列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">解決がリソースで指定された名前を入力するオブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">オブジェクトからリソースを読み込む、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>文字列。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of &lt;xref:System.Reflection.AssemblyName&gt; objects to resolve type names specified in a resource.</source>
          <target state="translated">新たに作成<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトおよび初期化の配列を使用してその内容は、XML リソース ファイルの形式では文字列を読み取る&lt;xref:System.Reflection.AssemblyName&gt;リソースで指定された型名を解決するオブジェクト&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A string whose contents are in the form of an XML resource file.</source>
          <target state="translated">その内容は、XML リソース ファイルの形式では文字列です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">配列&lt;xref:System.Reflection.AssemblyName&gt;1 つまたは複数のアセンブリを指定するオブジェクト&lt;/xref:System.Reflection.AssemblyName&gt;。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">実際の型に、リソースの型名を解決するのには、アセンブリが使用されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">オブジェクトからリソースを読み込む、 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept>文字列。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在の列挙子を返します<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">GetEnumerator メソッドが、XML リソース (.resx) ストリームに現在関連付けられている文字列の名前/値ペアを取得&lt;xref:System.Resources.ResXResourceReader&gt;オブジェクト&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetEnumerator, the resource items are retrieved as &lt;xref:System.Resources.ResXDataNode&gt; objects.</source>
          <target state="translated">ただし場合、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;プロパティに設定されている<ph id="ph1">`true`</ph>として、リソース アイテムの取得 GetEnumerator を呼び出す前に&lt;xref:System.Resources.ResXDataNode&gt;オブジェクト&lt;/xref:System.Resources.ResXDataNode&gt;&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In this case, all resource nodes are returned regardless of type.</source>
          <target state="translated">この場合、リソースのすべてのノードが型に関係なく返されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在の列挙子<bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
          <target state="translated">現在の XML リソース ファイルまたはストリームからデザイン時のプロパティを取得できる、ディクショナリ列挙子を提供します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
          <target state="translated">リソースは、リソース ファイルまたはストリームの名前/値のペアとして格納されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
          <target state="translated">メタデータと呼ばれる、デザイン時のプロパティは、リソース ファイルまたは実行時データのリソースと一緒にストリームに格納されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The GetMetadataEnumerator method provides an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that can retrieve the metadata from the resource file or stream associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">GetMetadataEnumerator メソッドには、&lt;xref:System.Collections.IDictionaryEnumerator&gt;オブジェクトからリソース ファイルまたはストリームに現在関連付けられているメタデータを取得できる&lt;xref:System.Resources.ResXResourceReader&gt;オブジェクト&lt;/xref:System.Resources.ResXResourceReader&gt;&lt;/xref:System.Collections.IDictionaryEnumerator&gt;。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetMetadataEnumerator, no resource nodes are retrieved.</source>
          <target state="translated">ただし場合、&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;プロパティに設定されている<ph id="ph1">`true`</ph>GetMetadataEnumerator を呼び出す前にリソース ノードは取得できません&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An enumerator for the metadata in a resource.</source>
          <target state="translated">リソース内のメタデータの列挙子。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">現在の列挙子を返します<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">このメンバーの説明は、次を参照してください。、 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Resources.ResXResourceReader&gt;にインスタンスをキャスト、&lt;xref:System.Collections.IEnumerable&gt;インターフェイス&lt;/xref:System.Collections.IEnumerable&gt;&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To enumerate the resources in a .resx file, we recommend that you call the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method, and then call the <ph id="ph1">`MoveNext`</ph> method on the returned &lt;xref:System.Collections.IDictionaryEnumerator&gt; object.</source>
          <target state="translated">.Resx ファイル内のリソースを列挙することをお勧めを呼び出すこと、&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;メソッド、および、呼び出し、<ph id="ph1">`MoveNext`</ph>メソッドで返された&lt;xref:System.Collections.IDictionaryEnumerator&gt;オブジェクト&lt;/xref:System.Collections.IDictionaryEnumerator&gt;&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">XML リソース (.resx) ストリームまたは文字列に現在関連付けられている名前/値ペアを反復処理できる列挙子<bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">によって使用されるアンマネージ リソースを解放、 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>し、必要に応じてマネージ リソースを解放します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">このメンバーの説明は、次を参照してください。、 <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">使用する場合にのみ、&lt;xref:System.Resources.ResXResourceReader&gt;にインスタンスをキャスト、&lt;xref:System.IDisposable&gt;インターフェイス&lt;/xref:System.IDisposable&gt;&lt;/xref:System.Resources.ResXResourceReader&gt;。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are returned when reading the current XML resource file or stream.</source>
          <target state="translated">取得または設定を示す値かどうか<bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクトが現在の XML リソース ファイルまたはストリームを読み取るときに返されます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You can set the UseResXDataNodes property before you begin enumerating resources.</source>
          <target state="translated">リソースの列挙を開始する前に、UseResXDataNodes プロパティを設定することができます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、その値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if resource data nodes are retrieved; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if resource data nodes are ignored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>リソース データ ノードが取得される場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>とリソース データ ノードは無視されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
          <target state="translated">設定操作でリソース ファイルまたはストリームの列挙子が開いています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>