<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d21ada5b35943a2fa934c826d5298b8bfc6d82d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Threading.DispatcherTimer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c09a3a84ec6ad203ff0c117bca689f8e7f3abcf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">019a22c0922ee46c7b5ea8239861ec5d9aaa500e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A timer that is integrated into the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> queue which is processed at a specified interval of time and at a specified priority.</source>
          <target state="translated">タイマーに統合されている、 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>時間の指定された間隔で、指定された優先順位では処理キュー。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DispatcherTimer is reevaluated at the top of every &lt;xref:System.Windows.Threading.Dispatcher&gt; loop.</source>
          <target state="translated">上部にある、DispatcherTimer は再評価すべて&lt;xref:System.Windows.Threading.Dispatcher&gt;ループ&lt;/xref:System.Windows.Threading.Dispatcher&gt;。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">タイマーが時間間隔が発生しても、時間間隔で発生する前に実行されないことが保証されるときにだけ実行する保証はありません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is because DispatcherTimer operations are placed on the &lt;xref:System.Windows.Threading.Dispatcher&gt; queue like other operations.</source>
          <target state="translated">これは、DispatcherTimer 操作を配置しているため、&lt;xref:System.Windows.Threading.Dispatcher&gt;他の操作と同様にキュー&lt;/xref:System.Windows.Threading.Dispatcher&gt; 。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When the DispatcherTimer operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">DispatcherTimer 操作が実行される場合は、他のジョブ キューとその優先度に依存します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; is used in a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application, it is worth noting that the &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; runs on a different thread then the <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">場合、&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;で使用される、<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>点に注意は、アプリケーション、&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;別のスレッドで実行されて、<ph id="ph2">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>スレッド&lt;/xref:System.Timers.Timer?displayProperty=fullName&gt;&lt;/xref:System.Timers.Timer?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In order to access objects on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread using &lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt; or &lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;.</source>
          <target state="translated">オブジェクトにアクセスするために、<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>に操作を行う必要がある、スレッド、&lt;xref:System.Windows.Threading.Dispatcher&gt;の<ph id="ph2">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;または&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;.&lt;/xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;&lt;/xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;を使用してスレッド&lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Reasons for using a DispatcherTimer opposed to a &lt;xref:System.Timers.Timer?displayProperty=fullName&gt; are that the DispatcherTimer runs on the same thread as the &lt;xref:System.Windows.Threading.Dispatcher&gt; and a &lt;xref:System.Windows.Threading.DispatcherPriority&gt; can be set on the DispatcherTimer.</source>
          <target state="translated">はなく DispatcherTimer を使用する理由、 &lt;xref:System.Timers.Timer?displayProperty=fullName&gt;、DispatcherTimer と同じスレッドで実行されているが、&lt;xref:System.Windows.Threading.Dispatcher&gt;と&lt;xref:System.Windows.Threading.DispatcherPriority&gt;、DispatcherTimer に設定することができます&lt;/xref:System.Windows.Threading.DispatcherPriority&gt;&lt;/xref:System.Windows.Threading.Dispatcher&gt;&lt;/xref:System.Timers.Timer?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A DispatcherTimer will keep an object alive whenever the object's methods are bound to the timer.</source>
          <target state="translated">オブジェクトのメソッドは、このタイマーへバインドされるたびに、DispatcherTimer には、オブジェクトがアライブは保持します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Threading.DispatcherTimer&gt; runs on the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the current thread at &lt;xref:System.Windows.Threading.DispatcherPriority&gt; priority.</source>
          <target state="translated">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;実行されて、&lt;xref:System.Windows.Threading.Dispatcher&gt;で現在のスレッドの&lt;xref:System.Windows.Threading.DispatcherPriority&gt;優先度&lt;/xref:System.Windows.Threading.DispatcherPriority&gt;&lt;/xref:System.Windows.Threading.Dispatcher&gt;。&lt;/xref:System.Windows.Threading.DispatcherTimer&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To specify a different &lt;xref:System.Windows.Threading.Dispatcher&gt;, use the following constructor: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt;.</source>
          <target state="translated">異なる&lt;xref:System.Windows.Threading.Dispatcher&gt;、次のコンス トラクターを使用して: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class which processes timer events at the specified priority.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスは、指定された優先順位でタイマー イベントを処理します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Threading.DispatcherTimer&gt; runs on the &lt;xref:System.Windows.Threading.Dispatcher&gt; of the current thread.</source>
          <target state="translated">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;実行されて、 &lt;xref:System.Windows.Threading.Dispatcher&gt;、現在のスレッド&lt;/xref:System.Windows.Threading.Dispatcher&gt;。&lt;/xref:System.Windows.Threading.DispatcherTimer&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To specify a different &lt;xref:System.Windows.Threading.Dispatcher&gt;, use the following constructor: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;.</source>
          <target state="translated">異なる&lt;xref:System.Windows.Threading.Dispatcher&gt;、次のコンス トラクターを使用して: &lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;.&lt;/xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">タイマーを起動する優先順位。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class which runs on the specified <bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> at the specified priority.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定した上で実行されるクラス<bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>指定された優先順位でします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">タイマーを起動する優先順位。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">ディスパッチャー タイマーが関連付けられています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dispatcher&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;dispatcher&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class which uses the specified time interval, priority, event handler, and <bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定時間間隔、優先度、イベント ハンドラーを使用するクラスと<bpt id="p2">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The period of time between ticks.</source>
          <target state="translated">ティック間の時間の期間。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The priority at which to invoke the timer.</source>
          <target state="translated">タイマーを起動する優先順位。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The event handler to call when the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer.Tick"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event occurs.</source>
          <target state="translated">ときに呼び出すイベント ハンドラー、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer.Tick"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The dispatcher the timer is associated with.</source>
          <target state="translated">ディスパッチャー タイマーが関連付けられています。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;callback&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph>0 未満かより大きい<ph id="ph2">&lt;xref:System.Int32.MaxValue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with this <bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>これに関連付けられている<bpt id="p2">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The Dispatcher property is determined at the creation of the &lt;xref:System.Windows.Threading.DispatcherTimer&gt; object.</source>
          <target state="translated">ディスパッチャーのプロパティは、の作成時に決定、&lt;xref:System.Windows.Threading.DispatcherTimer&gt;オブジェクト&lt;/xref:System.Windows.Threading.DispatcherTimer&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Threading.Dispatcher&gt; property is set to the current &lt;xref:System.Windows.Threading.Dispatcher&gt; at the time of creation unless a different &lt;xref:System.Windows.Threading.Dispatcher&gt; is specified.</source>
          <target state="translated">&lt;xref:System.Windows.Threading.Dispatcher&gt;プロパティが現在&lt;xref:System.Windows.Threading.Dispatcher&gt;は作成時にしない限り、異なる&lt;xref:System.Windows.Threading.Dispatcher&gt;が指定されている&lt;/xref:System.Windows.Threading.Dispatcher&gt;&lt;/xref:System.Windows.Threading.Dispatcher&gt;&lt;/xref:System.Windows.Threading.Dispatcher&gt;。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
          <target state="translated">ディスパッチャー。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the period of time between timer ticks.</source>
          <target state="translated">取得またはタイマー ティック間の時間の期間を設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</source>
          <target state="translated">タイマーが時間間隔が発生しても、時間間隔で発生する前に実行されないことが保証されるときにだけ実行する保証はありません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This is because &lt;xref:System.Windows.Threading.DispatcherTimer&gt; operations are placed on the &lt;xref:System.Windows.Threading.Dispatcher&gt; queue like other operations.</source>
          <target state="translated">これは、ため&lt;xref:System.Windows.Threading.DispatcherTimer&gt;操作は、&lt;xref:System.Windows.Threading.Dispatcher&gt;他の操作と同様にキュー&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.DispatcherTimer&gt; 。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Windows.Threading.DispatcherTimer&gt; operation executes is dependent on the other jobs in the queue and their priorities.</source>
          <target state="translated">ときに、&lt;xref:System.Windows.Threading.DispatcherTimer&gt;操作の実行は、他のジョブ キューとその優先度に依存します&lt;/xref:System.Windows.Threading.DispatcherTimer&gt;。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="XAMLTextUsage_Interval"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="XAMLTextUsage_Interval"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The period of time between ticks.</source>
          <target state="translated">ティック間の時間の期間。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is 00:00:00.</source>
          <target state="translated">既定値は、00時 00分: 00 です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id="ph2">&lt;xref:System.Int32.MaxValue&gt;</ph> milliseconds.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;interval&lt;/code&gt;</ph>0 未満かより大きい<ph id="ph2">&lt;xref:System.Int32.MaxValue&gt;</ph>(ミリ秒)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the timer is running.</source>
          <target state="translated">取得またはタイマーが実行されているかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>IsEnabled must be set to <ph id="ph1">`true`</ph> for the &lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt; event to be raised.</source>
          <target state="translated">IsEnabled に設定する必要があります<ph id="ph1">`true`</ph>の&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;イベントが発生する&lt;/xref:System.Windows.Threading.DispatcherTimer.Tick&gt;。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt; sets IsEnabled to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">呼び出す&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;設定 IsEnabled <ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt; sets IsEnabled to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">呼び出す&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;設定 IsEnabled <ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="XAMLTextUsage_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="XAMLTextUsage_IsEnabled"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the timer is enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>タイマーが有効である場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Starts the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">開始、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">設定&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`false`</ph>タイマーが開始されたときにタイマーを停止します&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">設定&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`true`</ph>タイマーを開始、タイマーが停止した場合&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Start sets &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">セットを開始&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`true`</ph>&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Start resets the timer &lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;.</source>
          <target state="translated">開始&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;。&lt;/xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;タイマーをリセットします。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Stops the <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">停止、 <bpt id="p1">&lt;xref href="System.Windows.Threading.DispatcherTimer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`false`</ph> when the timer is started stops the timer.</source>
          <target state="translated">設定&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`false`</ph>タイマーが開始されたときにタイマーを停止します&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Setting &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`true`</ph> when the timer is stopped starts the timer.</source>
          <target state="translated">設定&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`true`</ph>タイマーを開始、タイマーが停止した場合&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Calling Stop sets &lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt; to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">停止のセットを呼び出す&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;に<ph id="ph1">`false`</ph>&lt;/xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a user-defined data object.</source>
          <target state="translated">取得またはユーザー定義のデータ オブジェクトを設定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="XAMLTextUsage_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="XAMLTextUsage_Tag"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The user-defined data.</source>
          <target state="translated">ユーザー定義データ。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs when the timer interval has elapsed.</source>
          <target state="translated">タイマーの間隔が経過したときに発生します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_Tick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_Tick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>## XAML テキストの使用方法</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>