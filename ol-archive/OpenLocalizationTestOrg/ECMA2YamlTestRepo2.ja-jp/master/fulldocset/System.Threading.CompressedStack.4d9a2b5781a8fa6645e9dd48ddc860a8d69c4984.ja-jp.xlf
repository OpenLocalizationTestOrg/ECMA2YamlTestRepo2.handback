<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f01fb3b9fecff4c00cf5461905d1f78e693840d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.CompressedStack.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9814e2e9c8d17ab5c12204cadf93ec3d07420249</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e67de13fed7a3139c8a9fc0bee5348c8f25d0c4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods for setting and capturing the compressed stack on the current thread.</source>
          <target state="translated">設定し、現在のスレッドで圧縮スタックのメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The compressed stack is a compact representation of all the code access security information on the call stack, such as &lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt; and &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt; actions.</source>
          <target state="translated">圧縮は、スタックはすべてのコード アクセス セキュリティ情報、呼び出し履歴上の圧縮表現など&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;と&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;アクション&lt;/xref:System.Security.CodeAccessPermission.Assert%2A&gt;&lt;/xref:System.Security.CodeAccessPermission.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt; action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.</source>
          <target state="translated">たとえば場合、&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;操作が&amp;2; つのスタック フレーム現在のフレームからされず、その他のコード アクセス セキュリティの注釈が間には、現在のフレームでは、圧縮のスタックのみその情報を記録、呼び出し履歴全体をシリアル化することがなく、します&lt;/xref:System.Security.CodeAccessPermission.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The CompressedStackclass is used internally by the &lt;xref:System.Security.SecurityContext&gt; class.</source>
          <target state="translated">&lt;xref:System.Security.SecurityContext&gt;クラス&lt;/xref:System.Security.SecurityContext&gt;によって、CompressedStackclass が内部的に使用されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName&gt; method captures the compressed stack for the current call stack, along with impersonation and culture information.</source>
          <target state="translated">たとえば、&lt;xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName&gt;メソッドは、権限借用とカルチャ情報と共に、現在の呼び出し履歴の圧縮のスタックをキャプチャします&lt;/xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.SecurityContext&gt; class is used in turn by the &lt;xref:System.Threading.ExecutionContext&gt; class to flow context across threads, for example when scheduling thread pool tasks.</source>
          <target state="translated">&lt;xref:System.Security.SecurityContext&gt;クラスは、さらに、使用、&lt;xref:System.Threading.ExecutionContext&gt;スレッド プールのタスクをスケジュールするときの例については、スレッド間でコンテキストをフローするクラス&lt;/xref:System.Threading.ExecutionContext&gt;&lt;/xref:System.Security.SecurityContext&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This class is not used in ordinary application programming.</source>
          <target state="translated">このクラスは、通常のアプリケーション プログラミングでは使用されません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Captures the compressed stack from the current thread.</source>
          <target state="translated">現在のスレッドからの圧縮のスタックをキャプチャします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Captures all the code access security information on the call stack, such as &lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt; and &lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt; actions, in a compressed format.</source>
          <target state="translated">すべてのコード アクセス セキュリティ情報をキャプチャ、呼び出し履歴上など&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;と&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;圧縮形式でのアクション&lt;/xref:System.Security.CodeAccessPermission.Assert%2A&gt;&lt;/xref:System.Security.CodeAccessPermission.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt; action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.</source>
          <target state="translated">たとえば場合、&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;操作が&amp;2; つのスタック フレーム現在のフレームからされず、その他のコード アクセス セキュリティの注釈が間には、現在のフレームでは、圧縮のスタックのみその情報を記録、呼び出し履歴全体をシリアル化することがなく、します&lt;/xref:System.Security.CodeAccessPermission.Deny%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The captured compressed stack can be applied to another thread.</source>
          <target state="translated">キャプチャした圧縮スタックは、別のスレッドに適用できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current compressed stack.</source>
          <target state="translated">現在の圧縮のスタックのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method is useful for creating a copy of the current compressed stack to apply to another thread.</source>
          <target state="translated">このメソッドは、別のスレッドに適用する圧縮された現在のスタックのコピーを作成するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the current compressed stack.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を現在の圧縮のスタックを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the compressed stack for the current thread.</source>
          <target state="translated">現在のスレッドの圧縮のスタックを取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If security is enabled, the current compressed stack is returned.</source>
          <target state="translated">セキュリティが有効になっている場合は、現在の圧縮のスタックが返されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If security is disabled, GetCompressedStack returns an empty &lt;xref:System.Threading.CompressedStack&gt; object.</source>
          <target state="translated">セキュリティが無効になっている場合 GetCompressedStack は空白を返します&lt;xref:System.Threading.CompressedStack&gt;オブジェクト&lt;/xref:System.Threading.CompressedStack&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method uses &lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt; to prevent it from being called from untrusted code; only the immediate caller is required to have &lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName&gt; permission.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このメソッドを使用して&lt;xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;されないようにする、信頼されていないコードから呼び出す以外の直前の呼び出し元のみする必要がある&lt;xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName&gt;権限&lt;/xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName&gt;&lt;/xref:System.Security.Permissions.SecurityAction?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For important limitations on using the <ph id="ph1">`LinkDemand`</ph> member, see <bpt id="p1">[</bpt>Demand vs. LinkDemand<ept id="p1">](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>.</source>
          <target state="translated">使用してに関する重要な制限事項、 <ph id="ph1">`LinkDemand`</ph> 、メンバーを参照してください<bpt id="p1">[</bpt>Demand とします。LinkDemand<ept id="p1">](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This member also makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このメンバーがリンク確認要求ではなく、有効な暗号化キー、擬似キー ECMA 公開キーになります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key.</source>
          <target state="translated">.NET Framework 内では、Microsoft 公開キーのリンク確認要求に ECMA 擬似キーのリンク確認要求が自動的に変換します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The security exception is based on the Microsoft public key, not the ECMA pseudo key.</source>
          <target state="translated">セキュリティの例外は、ECMA 擬似キーではなく Microsoft 公開キーに基づいています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current thread.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のスレッド。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A caller in the call chain does not have permission to access unmanaged code.</source>
          <target state="translated">呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-       The request for <bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> failed.</source>
          <target state="translated">- または - 要求<bpt id="p1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>できませんでした。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the logical context information needed to recreate an instance of this execution context.</source>
          <target state="translated">セット、 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>をこの実行コンテキストのインスタンスを再作成するために必要な論理コンテキスト情報を持つオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>GetObjectData sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; with the logical call context information.</source>
          <target state="translated">GetObjectData セット、&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;論理呼び出しコンテキスト情報&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>During deserialization, the execution context object is reconstituted from the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; transmitted over the stream.</source>
          <target state="translated">逆シリアル化実行コンテキストのオブジェクトはから再構成、 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;、ストリームで転送します&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;.</source>
          <target state="translated">詳細については、 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;。&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to be populated with serialization information.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>シリアル化情報が設定されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; structure representing the destination context of the serialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;シリアル化の対象コンテキストを表す構造体&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Runs a method in the specified compressed stack on the current thread.</source>
          <target state="translated">現在のスレッドで、指定された圧縮スタックでメソッドを実行します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The compressed stack is returned to its previous state when the method completes.</source>
          <target state="translated">メソッドが終了したときに、以前の状態を圧縮スタックが返されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to set.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Threading.CompressedStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to set.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Threading.ContextCallback&gt; that represents the method to be run in the specified security context.</source>
          <target state="translated">A&lt;xref:System.Threading.ContextCallback&gt;指定されたセキュリティ コンテキストで実行するメソッドを表す&lt;/xref:System.Threading.ContextCallback&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The object to be passed to the callback method.</source>
          <target state="translated">コールバック メソッドに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;compressedStack&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;compressedStack&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>