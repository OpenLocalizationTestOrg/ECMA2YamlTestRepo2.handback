<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4282a1786171be636279dc19a00364a89a02eaa3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb7f714a76a401c2ab07b4d6d018c819b6cc3639</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034a61e55be4bd76db29d050e084a504734049e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the parameters for an RSA security token.</source>
          <target state="translated">RSA セキュリティ トークンのパラメーターを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is a collection of token properties and methods, and is used in creating security binding elements and tokens that use RSA encryption.</source>
          <target state="translated">このクラスは、トークン用プロパティとメソッドのコレクションは、およびセキュリティ バインド要素の作成に使用され、トークンの RSA 暗号化を使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The new instance property values are set to their defaults:      -   &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt; is set to &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;.</source>
          <target state="translated">新しいインスタンス プロパティ値が既定値に設定されます- &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt; &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;。&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;に設定されている&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A&gt; is set to &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle&gt;.</source>
          <target state="translated">- &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A&gt; &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle&gt;.&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle&gt;に設定されています。&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A&gt; is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-   &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A&gt; is set to <ph id="ph1">`true`</ph>.&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.ServiceModel.Security.Tokens.RsaSecurityTokenParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The new instance property values are set to the corresponding values in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">新しいインスタンス プロパティの値が対応する値に設定されます<ph id="ph1">`other`</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt; is set to &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt;&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;。&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode&gt;に設定されています。&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The other instance of this class.</source>
          <target state="translated">このクラスの他のインスタンス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;other&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;other&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Clones another instance of this instance of the class.</source>
          <target state="translated">クラスのこのインスタンスの別のインスタンスを複製します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A&gt; and &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt; methods follow the Core design pattern.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A&gt;と&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt;メソッドが、コア デザイン パターンに従います&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt;&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt; is an <ph id="ph1">`abstract`</ph> class that is overridden by CloneCore.</source>
          <target state="translated">&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt;<ph id="ph1">`abstract`</ph> CloneCore によってオーバーライドされるクラスです。&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CloneCore method calls the &lt;xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.%23ctor%2A&gt; constructor.</source>
          <target state="translated">CloneCore メソッドの呼び出し、&lt;xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.%23ctor%2A&gt;コンス トラクター&lt;/xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.%23ctor%2A&gt; 。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt; instance that represents the copy.</source>
          <target state="translated">A&lt;xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt;コピーを表すインスタンス&lt;/xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a key identifier clause for a token.</source>
          <target state="translated">トークンのキー識別子句を作成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The token.</source>
          <target state="translated">トークンです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The reference style of the security token.</source>
          <target state="translated">セキュリティ トークンの参照スタイルです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The key identifier clause for a token.</source>
          <target state="translated">トークンのキー識別句。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the token has an asymmetric key.</source>
          <target state="translated">トークンが非対称キーを持っているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">このプロパティは常に返します<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Asymmetric keys are used in public-key cryptography, which uses two keys, a public key and a private key, which are related mathematically.</source>
          <target state="translated">非対称キーは、2 つのキー、公開キーと秘密キーでは、数学的に関連するを使用する公開キー暗号化で使用されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The public key is distributed widely, but the private key is kept secret.</source>
          <target state="translated">公開キーは広く、されますが、秘密キーは秘匿されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In public-key cryptography, there is no need to exchange a common key.</source>
          <target state="translated">公開キー暗号化では、共通のキーを交換する必要はありません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the token has an asymmetric key; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、トークンがある非対称キーです。それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a security token requirement.</source>
          <target state="translated">セキュリティ トークン要件を初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following properties of the &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt; are initialized:      -   &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A&gt; = &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa%2A&gt;.</source>
          <target state="translated">次のプロパティ、&lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt;初期化されます- &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A&gt;= &lt;xref:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa%2A&gt;。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenRequirement&gt; 。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken%2A&gt; = <ph id="ph1">`true`</ph>.</source>
          <target state="translated">-   &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken%2A&gt; = <ph id="ph1">`true`</ph>.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt; = &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;.</source>
          <target state="translated">-   &lt;xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt; = &lt;xref:System.IdentityModel.Tokens.SecurityKeyType&gt;.&lt;/xref:System.IdentityModel.Tokens.SecurityKeyType&gt;&lt;/xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The requirement of the security token.</source>
          <target state="translated">セキュリティ トークンの要件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When implemented, gets a value that indicates whether the token supports client authentication.</source>
          <target state="translated">実装された場合、トークンがクライアント認証をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">このプロパティは常に返します<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the token supports client authentication; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>トークンがクライアント認証をサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When implemented, gets a value that indicates whether the token supports a Windows identity for authentication.</source>
          <target state="translated">実装された場合、トークンが認証用の Windows id をサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This property always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このプロパティは常に返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the token supports a Windows identity for authentication; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>トークンが認証; の Windows id をサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When implemented, gets a value that indicates whether the token supports server authentication.</source>
          <target state="translated">実装された場合、トークンがサーバー認証をサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">このプロパティは常に返します<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the token supports server authentication; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>トークンがサーバー認証をサポートしている場合それ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>