<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99e3205909a86d3373834e4218e1574a771645c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlDocument.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e564834e49cccb442e714e409a5387f58d2667</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">033eae78e53edddee2ff7dea8e662f039e8feee8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an XML document.</source>
          <target state="translated">XML ドキュメントを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>You can use this class to load, validate, edit, add, and position XML in a document.</source>
          <target state="translated">このクラスは、読み込み、検証、編集、追加、およびドキュメントの XML の位置を使用できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Xml.XmlImplementation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定したクラス<bpt id="p2">&lt;xref href="System.Xml.XmlImplementation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlImplementation" name="XmlImplementation" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</source>
          <target state="translated">The <bpt id="p1">&lt;xref uid="langword_csharp_XmlImplementation" name="XmlImplementation" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified &lt;xref:System.Xml.XmlNameTable&gt;.</source>
          <target state="translated">新しいインスタンスを初期化、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に指定された&lt;xref:System.Xml.XmlNameTable&gt;&lt;/xref:System.Xml.XmlNameTable&gt;クラス</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</source>
          <target state="translated">The <bpt id="p1">&lt;xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the base URI of the current node.</source>
          <target state="translated">現在のノードのベース URI を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">ネットワークに接続された XML ドキュメントでは、さまざまな W3C 標準の包含の機構を使用して集計データのチャンクで構成され、したがって各所に由来するノードが含まれます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
          <target state="translated"><ph id="ph1">`BaseURI`</ph>でこれらのノードの出所がわかります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For Document nodes, <ph id="ph1">`BaseURI`</ph> returns the location of the XML document.</source>
          <target state="translated">ドキュメント ノードの<ph id="ph1">`BaseURI`</ph>XML ドキュメントの場所を返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, if the <ph id="ph1">`XmlDocument`</ph> was loaded using the following call doc.Load("http://server/mydata.xml"), the <ph id="ph2">`BaseURI`</ph> for the document node is http://server/mydata.xml.</source>
          <target state="translated">たとえば場合、<ph id="ph1">`XmlDocument`</ph>が次の呼び出しのドキュメントを使用して読み込まれました。読み込み ("http://server/mydata.xml")、<ph id="ph2">`BaseURI`</ph>ドキュメント ノードは http://server/mydata.xml します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Xml.XmlDocument.Load%2A&gt; method is redirected by server to a different URI, <ph id="ph1">`BaseURI`</ph> returns the original URI passed to the <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">ただし場合、&lt;xref:System.Xml.XmlDocument.Load%2A&gt;メソッドはサーバーによって別の URI にリダイレクト<ph id="ph1">`BaseURI`</ph>に渡された元の URI を返します、<ph id="ph2">`Load`</ph>メソッド&lt;/xref:System.Xml.XmlDocument.Load%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For additional information on <ph id="ph1">`BaseURI`</ph> and how it behaves with other node types, see &lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">詳細については<ph id="ph1">`BaseURI`</ph>し、他のノード型で動作する方法は&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The location from which the node was loaded.</source>
          <target state="translated">ノードの読み込み元の場所です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of this node.</source>
          <target state="translated">このノードの複製を作成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method serves as a copy constructor for nodes.</source>
          <target state="translated">このメソッドは、ノードのコピー コンス トラクターとして機能します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The cloned node has no parent (&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt; returns <ph id="ph1">`null`</ph>).</source>
          <target state="translated">複製されたノードが親を持たない (&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;返します<ph id="ph1">`null`</ph>).&lt;/xref:System.Xml.XmlNode.ParentNode%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`deep`</ph> is <ph id="ph2">`true`</ph>, the cloned node includes all the child nodes, otherwise only the <ph id="ph3">`XmlDocument`</ph> node is cloned.</source>
          <target state="translated">場合<ph id="ph1">`deep`</ph>は<ph id="ph2">`true`</ph>、複製されたノードのみを含むすべての子ノードでは、それ以外の場合、<ph id="ph3">`XmlDocument`</ph>ノードを複製します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See the &lt;xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName&gt; method to see how this method behaves on other node types.</source>
          <target state="translated">参照してください、&lt;xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName&gt;他のノード型でこのメソッドの動作を確認するメソッド&lt;/xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to recursively clone the subtree under the specified node; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to clone only the node itself.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>再帰的に指定されたノードの下のサブツリーのクローンを作成します。<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>したノードだけのクローンを作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cloned <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">複製された<bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ノード。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified &lt;xref:System.Xml.XmlDocument.Name*&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に指定された&lt;xref:System.Xml.XmlDocument.Name*&gt;&lt;/xref:System.Xml.XmlDocument.Name*&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an &lt;xref:System.Xml.XmlElement&gt; using the &lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">`XmlAttribute`</ph>に追加することができます、&lt;xref:System.Xml.XmlElement&gt;を使用して、&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;メソッド&lt;/xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;&lt;/xref:System.Xml.XmlElement&gt;。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute.</source>
          <target state="translated">属性の修飾名。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the name contains a colon, the &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; property reflects the part of the name preceding the first colon and the &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; property reflects the part of the name following the first colon.</source>
          <target state="translated">名前にコロンが含まれている場合、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティは、最初のコロンの前の部分を反映し、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティは最初のコロンの後ろの部分を反映します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt; remains empty unless the prefix is a recognized built-in prefix such as xmlns.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;プレフィックスが xmlns などの認識された組み込みプリフィックスでない限りは空のままです&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this case <bpt id="p1">&lt;xref uid="langword_csharp_NamespaceURI" name="NamespaceURI" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a value of http://www.w3.org/2000/xmlns/.</source>
          <target state="translated">ここでは<bpt id="p1">&lt;xref uid="langword_csharp_NamespaceURI" name="NamespaceURI" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> http://www.w3.org/2000/xmlns/ の値を持ちます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified qualified name and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定した修飾名と&lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an &lt;xref:System.Xml.XmlElement&gt; using the &lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">`XmlAttribute`</ph>に追加することができます、&lt;xref:System.Xml.XmlElement&gt;を使用して、&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;メソッド&lt;/xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;&lt;/xref:System.Xml.XmlElement&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute.</source>
          <target state="translated">属性の修飾名。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; property will reflect the part of the name preceding the colon and the &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; property will reflect the part of the name after the colon.</source>
          <target state="translated">名前にコロンが含まれている場合、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティは、コロンの前の部分を反映し、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティ名の一部にコロンの後に反映されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The namespaceURI of the attribute.</source>
          <target state="translated">属性の namespaceURI。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the qualified name includes a prefix of xmlns, then this parameter must be http://www.w3.org/2000/xmlns/.</source>
          <target state="translated">修飾名に xmlns というプリフィックスが含まれている場合、このパラメーターは http://www.w3.org/2000/xmlns/ を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p2">*</ept>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定した&lt;&gt; <bpt id="p2">*</bpt>&gt;、 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;、 &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt; 。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlAttribute`</ph> can be added to an &lt;xref:System.Xml.XmlElement&gt; using the &lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">`XmlAttribute`</ph>に追加することができます、&lt;xref:System.Xml.XmlElement&gt;を使用して、&lt;xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;メソッド&lt;/xref:System.Xml.XmlElement.SetAttributeNode%2A&gt;&lt;/xref:System.Xml.XmlElement&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The prefix of the attribute (if any).</source>
          <target state="translated">(存在する場合)、属性のプリフィックス。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>String.Empty and <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are equivalent.</source>
          <target state="translated">String.Empty と<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は同等です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute (if any).</source>
          <target state="translated">名前空間 URI (存在する場合) の属性です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>String.Empty and <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are equivalent.</source>
          <target state="translated">String.Empty と<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は同等です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`prefix`</ph> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</source>
          <target state="translated">場合<ph id="ph1">`prefix`</ph>xmlns は、このパラメーターは http://www.w3.org/2000/xmlns/それ以外の場合は、例外がスローされますである必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlAttribute" name="XmlAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlCDataSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the specified data.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlCDataSection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたデータを格納します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), CDataSection nodes are allowed within Element nodes and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210)、に従って CDataSection ノードは使用 EntityReference ノードと要素ノード内 EntityReference ノードが属性ノードの子ではない場合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The content of the new <bpt id="p1">&lt;xref uid="langword_csharp_XmlCDataSection" name="XmlCDataSection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいコンテンツ<bpt id="p1">&lt;xref uid="langword_csharp_XmlCDataSection" name="XmlCDataSection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlCDataSection" name="XmlCDataSection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlCDataSection" name="XmlCDataSection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlComment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the specified data.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlComment"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたデータを格納します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Comment nodes are only allowed within Document, Element and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 勧告 (www.w3.org/TR/1998/REC-xml-19980210) に沿ってコメント ノードは、ドキュメント、要素および EntityReference ノード内で場合にだけ許可 EntityReference ノードが属性ノードの子ではありません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The content of the new <bpt id="p1">&lt;xref uid="langword_csharp_XmlComment" name="XmlComment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新しいコンテンツ<bpt id="p1">&lt;xref uid="langword_csharp_XmlComment" name="XmlComment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlComment" name="XmlComment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlComment" name="XmlComment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Creates a default attribute with the specified prefix, local name and namespace URI.</source>
          <target state="translated">指定したプリフィックス、ローカル名および名前空間 URI を既定の属性を作成します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The prefix of the attribute (if any).</source>
          <target state="translated">(存在する場合)、属性のプリフィックス。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
          <target state="translated">属性のローカル名。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute (if any).</source>
          <target state="translated">名前空間 URI (存在する場合) の属性です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref href="System.Xml.XmlAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlDocumentFragment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlDocumentFragment"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>DocumentFragment nodes cannot be inserted into a document.</source>
          <target state="translated">DocumentFragment ノードは、ドキュメントに挿入されることはできません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, you can insert children of the DocumentFragment node into a document.</source>
          <target state="translated">ただし、ドキュメントに documentfragment, ノードの子ノードを挿入できます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocumentFragment" name="XmlDocumentFragment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocumentFragment" name="XmlDocumentFragment" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns a new <bpt id="p1">&lt;xref href="System.Xml.XmlDocumentType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">新しいを返します<bpt id="p1">&lt;xref href="System.Xml.XmlDocumentType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The returned node will have parsed &lt;xref:System.Xml.XmlDocumentType.Entities%2A&gt; and &lt;xref:System.Xml.XmlDocumentType.Notations%2A&gt; collections.</source>
          <target state="translated">返されたノードが解析が&lt;xref:System.Xml.XmlDocumentType.Entities%2A&gt;と&lt;xref:System.Xml.XmlDocumentType.Notations%2A&gt;コレクションです&lt;/xref:System.Xml.XmlDocumentType.Notations%2A&gt;&lt;/xref:System.Xml.XmlDocumentType.Entities%2A&gt;。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), DocumentType nodes are only allowed within Document nodes.</source>
          <target state="translated">W3C Extensible Markup Language (XML) 1.0 勧告 (www.w3.org/TR/1998/REC-xml-19980210) に沿って DocumentType ノードはドキュメント ノード内でのみできます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Xml.XmlDocument&gt; can have only one DocumentType node.</source>
          <target state="translated">各&lt;xref:System.Xml.XmlDocument&gt;DocumentType ノードを&amp;1; つだけ保持できます&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The DocumentType node must also be inserted before the root element of the <ph id="ph1">`XmlDocument`</ph> (if the document already has a root element, you cannot add a DocumentType node).</source>
          <target state="translated">DocumentType ノードは、のルート要素の前に挿入することも必要があります、 <ph id="ph1">`XmlDocument`</ph> (場合、ドキュメントには、既にルート要素が、追加できません DocumentType ノード)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the passed parameters do not combine to build a valid <ph id="ph1">`XmlDocumentType`</ph>, an exception is thrown.</source>
          <target state="translated">渡されたパラメーターを組み合わせて、有効なビルドを使用しない場合<ph id="ph1">`XmlDocumentType`</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Name of the document type.</source>
          <target state="translated">ドキュメントの種類の名前です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The public identifier of the document type or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ドキュメントの種類のパブリック id または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</source>
          <target state="translated">パブリック URI およびシステム id、外部の DTD サブセットの場所を識別するを指定することができます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The system identifier of the document type or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ドキュメントの種類のシステム識別子または<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies the URL of the file location for the external DTD subset.</source>
          <target state="translated">外部 DTD サブセットのファイルの場所の URL を指定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The DTD internal subset of the document type or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">ドキュメントの種類の DTD 内部サブセットまたは<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocumentType" name="XmlDocumentType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocumentType" name="XmlDocumentType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates an element with the specified name.</source>
          <target state="translated">指定した名前の要素を作成します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Note that the instance returned implements the <ph id="ph1">`XmlElement`</ph> interface, so default attributes would be created directly on the returned object.</source>
          <target state="translated">インスタンスに実装が返されることに注意してください、<ph id="ph1">`XmlElement`</ph>インターフェイスの既定の属性が返されるオブジェクトで直接作成されるようにします。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 勧告 』 (www.w3.org/TR/1998/REC-xml-19980210) で、要素ノードは許可 EntityReference ノード内およびドキュメントおよび要素のノード内で EntityReference ノードが属性ノードの子ではない場合。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
          <target state="translated">要素の修飾名。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; property reflects the part of the name preceding the colon and the &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; property reflects the part of the name after the colon.</source>
          <target state="translated">名前にコロンが含まれている場合、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティは、コロンの前の部分を反映し、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティは、コロンの後ろの名前の一部を反映します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The qualified name cannot include a prefix of'xmlns'.</source>
          <target state="translated">修飾名には、プレフィックス ' xmlns というを含めることはできません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the qualified name and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt;と修飾名で</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The following C# code      <ph id="ph1">```   XmlElement elem;   elem=doc.CreateElement("xy:item", "urn:abc");   ```</ph>       results in an element that is equivalent to the following XML text.</source>
          <target state="translated">次の c# コード<ph id="ph1">```   XmlElement elem;   elem=doc.CreateElement("xy:item", "urn:abc");   ```</ph>結果は次の XML テキストに相当する要素。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xy:item          xmlns:xy="urn:abc"/&gt;   ```</ph>       Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated"><ph id="ph1">```   &lt;xy:item          xmlns:xy="urn:abc"/&gt;   ```</ph>このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference node is not a child of an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 勧告 』 (www.w3.org/TR/1998/REC-xml-19980210) で、要素ノードは許可 EntityReference ノード内およびドキュメントおよび要素のノード内で EntityReference ノードが属性ノードの子ではない場合。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
          <target state="translated">要素の修飾名。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then the &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; property will reflect the part of the name preceding the colon and the &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; property will reflect the part of the name after the colon.</source>
          <target state="translated">名前にコロンが含まれている場合、 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; プロパティは、コロンの前の部分を反映し、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; プロパティ名の一部にコロンの後に反映されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The qualified name cannot include a prefix of'xmlns'.</source>
          <target state="translated">修飾名には、プレフィックス ' xmlns というを含めることはできません。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element.</source>
          <target state="translated">名前空間は要素の URI であります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates an element with the specified &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt;, &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">指定した要素を作成する&lt;&gt; <bpt id="p1">*</bpt>&gt;、 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;、 &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt; 。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The following C# code      <ph id="ph1">```   XmlElement elem;   elem=doc.CreateElement("xy", "item", "urn:abc");   ```</ph>       creates an element equivalent to the following XML text:      <ph id="ph2">```   &lt;xy:item xmlns:xy="urn:abc"/&gt;   ```</ph>       Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">次の c# コード<ph id="ph1">```   XmlElement elem;   elem=doc.CreateElement("xy", "item", "urn:abc");   ```</ph>要素を作成する次の XML テキストに相当:<ph id="ph2">```   &lt;xy:item xmlns:xy="urn:abc"/&gt;   ```</ph>が、このメソッドでは、新しいオブジェクトを作成し、ドキュメントのコンテキストは自動的に追加されません新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Element nodes are allowed within Document and Element nodes, and in EntityReference nodes when the EntityReference is outside an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 勧告 』 (www.w3.org/TR/1998/REC-xml-19980210) で、要素ノード場合は許可 EntityReference ノード内およびドキュメントおよび要素のノード内で EntityReference が属性ノードの範囲外です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The prefix of the new element (if any).</source>
          <target state="translated">(存在する場合)、新しい要素のプリフィックス。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>String.Empty and <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are equivalent.</source>
          <target state="translated">String.Empty と<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は同等です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The local name of the new element.</source>
          <target state="translated">新しい要素のローカル名。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new element (if any).</source>
          <target state="translated">名前空間は、新しい要素 (存在する場合) の URI であります。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>String.Empty and <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are equivalent.</source>
          <target state="translated">String.Empty と<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>は同等です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified name.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した名前です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If the referenced entity is known, the child list of the <ph id="ph1">`XmlEntityReference`</ph> node is made the same as that of the corresponding &lt;xref:System.Xml.XmlEntity&gt; node.</source>
          <target state="translated">かどうか、参照先エンティティがわかっている場合の子リスト、 <ph id="ph1">`XmlEntityReference`</ph> 、対応するのと同じノードが行われる&lt;xref:System.Xml.XmlEntity&gt;ノード&lt;/xref:System.Xml.XmlEntity&gt;。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The namespaces used in the replacement text for the entity reference are bound at the time the parent of the entity reference node is first set (for example, when the entity reference node is inserted into the document).</source>
          <target state="translated">エンティティ参照の置換テキストで使用される名前空間は、(たとえば、挿入時に、エンティティ参照ノードがドキュメントに)、エンティティ参照ノードの親がまず設定時にバインドされます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For example, given the following entity:      <ph id="ph1">```   &lt;!ENTITY a "&lt;b&gt;test&lt;/b&gt;"&gt;   ```</ph>       If you call <ph id="ph2">`CreateEntityReference("a")`</ph> you get back a single node of type EntityReference with no children.</source>
          <target state="translated">たとえば、次のエンティティを指定:<ph id="ph1">```   &lt;!ENTITY a "&lt;b&gt;test&lt;/b&gt;"&gt;   ```</ph>を呼び出す場合<ph id="ph2">`CreateEntityReference("a")`</ph>戻る型 EntityReference の&amp;1; つのノードと子はありません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>If you append this node as a child of the following node,      <ph id="ph1">```   &lt;item xmlns="urn:1"/&gt;   ```</ph>       then, at the time of calling &lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;, the parent of the newly created entity reference node is set and the children are expanded in this namespace context.</source>
          <target state="translated">次のノードの子としてこのノードを追加する場合は<ph id="ph1">```   &lt;item xmlns="urn:1"/&gt;   ```</ph>呼び出し時にその後、 &lt;xref:System.Xml.XmlNode.AppendChild%2A&gt;、新しく作成されたエンティティ参照ノードの親が設定され、子はこの名前空間コンテキストでは展開します&lt;/xref:System.Xml.XmlNode.AppendChild%2A&gt;。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The child element node <ph id="ph1">`b`</ph> will have NamespaceURI equal to <ph id="ph2">`urn:1`</ph>.</source>
          <target state="translated">子要素ノード<ph id="ph1">`b`</ph>と等しい名前空間 Uri を持つ<ph id="ph2">`urn:1`</ph>します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The child nodes of the entity reference remain the same even if you move the entity reference to a place in the document that has a different default namespace context.</source>
          <target state="translated">エンティティ参照の子ノードでは、別の既定の名前空間コンテキストを持つドキュメント内の場所にエンティティ参照を移動する場合でも、同じままです。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This does not happen for existing entity reference nodes when you remove and insert them or for entity references that you clone with &lt;xref:System.Xml.XmlDocument.CloneNode%2A&gt;.</source>
          <target state="translated">削除および挿入するときに、既存のエンティティ参照ノードまたは&lt;xref:System.Xml.XmlDocument.CloneNode%2A&gt;。&lt;/xref:System.Xml.XmlDocument.CloneNode%2A&gt;を複製するエンティティ参照は実行されません。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>It only happens for newly created entity references.</source>
          <target state="translated">新しく作成されたエンティティ参照にのみ行われます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If the corresponding entity is not defined in the DocumentType when the entity reference node is added, because the entity reference is not defined, its only child node will be an empty text node.</source>
          <target state="translated">対応するエンティティで定義されていない DocumentType、エンティティ参照ノードが追加されると、エンティティ参照が定義されていないため、唯一の子ノードが空のテキスト ノードになります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The built-in entities amp, lt, gt, apos, and quot are also allowed, and they will have a child text node with the appropriate expanded character value.</source>
          <target state="translated">組み込みエンティティ amp、lt、gt、画像、および quot も許可され、適切な拡張文字の値を持つ子テキスト ノードがあります。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), EntityReference nodes are only allowed within Element, Attribute and EntityReference nodes.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210)、に従って、のみ要素、属性、および EntityReference ノード内に EntityReference ノードが許可されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
          <target state="translated">エンティティ参照の名前です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlEntityReference" name="XmlEntityReference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlEntityReference" name="XmlEntityReference" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The name is invalid (for example, names starting with'#' are invalid.)</source>
          <target state="translated">名前が正しくありません (たとえば、'#' で始まる名前は有効です)。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for navigating this document.</source>
          <target state="translated">新たに作成<bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>このドキュメントを移動するためのオブジェクト。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for navigating this document positioned on the <bpt id="p2">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> specified.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に配置されているこのドキュメントを移動するためのオブジェクト、 <bpt id="p2">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>指定します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> you want the navigator initially positioned on.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ナビゲーターを最初に配置します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified node type, &lt;xref:System.Xml.XmlDocument.Name<bpt id="p2">*</bpt>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI<ept id="p2">*</ept>&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定したノードの種類と&lt;&gt; <bpt id="p2">*</bpt>&gt;、および&lt;&gt; <ept id="p2">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>String version of the &lt;xref:System.Xml.XmlNodeType&gt; of the new node.</source>
          <target state="translated">文字列バージョン、&lt;xref:System.Xml.XmlNodeType&gt;新しいノードの&lt;/xref:System.Xml.XmlNodeType&gt;。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This parameter must be one of the values listed in the table below.</source>
          <target state="translated">このパラメーターは、次の表に示された値のいずれかでなければなりません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The qualified name of the new node.</source>
          <target state="translated">新しいノードの限定名。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If the name contains a colon, it is parsed into &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; components.</source>
          <target state="translated">名前にコロンが含まれている場合は、解析&lt;&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コンポーネントです。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
          <target state="translated">名前空間の新しいノードの URI。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> requires a name; or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">nodeTypeString</ph><ept id="p2">&lt;/code&gt;</ept> is not one of the strings listed below.</source>
          <target state="translated">名前が指定されていません、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ; 名前が必要ですまたは<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">nodeTypeString</ph> <ept id="p2">&lt;/code&gt;</ept>以下に示す文字列ではありません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified &lt;xref:System.Xml.XmlNodeType&gt;, &lt;xref:System.Xml.XmlDocument.Name<bpt id="p2">*</bpt>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI<ept id="p2">*</ept>&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定した&lt;xref:System.Xml.XmlNodeType&gt;、 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt;、および&lt;&gt; <ept id="p2">*</ept>&gt;.&lt;/xref:System.Xml.XmlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the new node.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>新しいノードのです。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The qualified name of the new node.</source>
          <target state="translated">新しいノードの限定名。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the name contains a colon then it is parsed into &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; components.</source>
          <target state="translated">名前にコロンが含まれるかどうかは、解析&lt;&gt; <bpt id="p1">*</bpt>&gt; と&lt;&gt; <ept id="p1">*</ept>&gt; コンポーネントです。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
          <target state="translated">名前空間の新しいノードの URI。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> requires a name.</source>
          <target state="translated">名前が指定されていません、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>名が必要です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified &lt;xref:System.Xml.XmlNodeType&gt;, &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p2">*</bpt>&gt;, &lt;xref:System.Xml.XmlDocument.Name<ept id="p2">*</ept>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">Creates a <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified &lt;xref:System.Xml.XmlNodeType&gt;, &lt;&gt;<bpt id="p2">*</bpt>&gt;, &lt;&gt;<ept id="p2">*</ept>&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt;&lt;/xref:System.Xml.XmlNodeType&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the new node.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>新しいノードのです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The prefix of the new node.</source>
          <target state="translated">新しいノードのプリフィックス。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The local name of the new node.</source>
          <target state="translated">新しいノードのローカル名。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The namespace URI of the new node.</source>
          <target state="translated">名前空間の新しいノードの URI。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The name was not provided and the <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> requires a name.</source>
          <target state="translated">名前が指定されていません、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlNodeType" name="XmlNodeType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>名が必要です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlProcessingInstruction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified name and data.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlProcessingInstruction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した名前とデータを使用します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), ProcessingInstruction nodes are only allowed within Document, Element, and EntityReference nodes, when the EntityReference node is not a child of an Attribute node.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 勧告 (www.w3.org/TR/1998/REC-xml-19980210) に沿って ProcessingInstruction ノードは、ドキュメント、要素、および EntityReference ノード内で場合にだけ許可 EntityReference ノードが属性ノードの子ではありません。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction.</source>
          <target state="translated">処理命令の名前です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The data for the processing instruction.</source>
          <target state="translated">処理命令のデータ。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlProcessingInstruction" name="XmlProcessingInstruction" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlProcessingInstruction" name="XmlProcessingInstruction" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlSignificantWhitespace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlSignificantWhitespace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>It is used when you want to manually format your document.</source>
          <target state="translated">ドキュメントを手動で書式設定する場合に使用されます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The string must contain only the following characters <ph id="ph1">&amp;amp;</ph>#20; <ph id="ph2">&amp;amp;</ph>#10; <ph id="ph3">&amp;amp;</ph>#13; and <ph id="ph4">&amp;amp;</ph>#9;</source>
          <target state="translated">文字列は、次の文字のみを含める必要があります<ph id="ph1">&amp;amp;</ph>#20 です。<ph id="ph2">&amp;amp;</ph>#10;<ph id="ph3">&amp;amp;</ph>#13; and <ph id="ph4">&amp;amp;</ph>#9;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref uid="langword_csharp_XmlSignificantWhitespace" name="XmlSignificantWhitespace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref uid="langword_csharp_XmlSignificantWhitespace" name="XmlSignificantWhitespace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlText"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified text.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlText"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定されたテキストでします。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), Text nodes are only allowed within Element, Attribute and EntityReference nodes.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210)、に従って、のみ要素、属性、および EntityReference ノード内にテキスト ノードが許可されます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The text for the Text node.</source>
          <target state="translated">テキスト ノードのテキスト。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlText" name="XmlText" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref uid="langword_csharp_XmlText" name="XmlText" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ノード。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlWhitespace"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlWhitespace"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>It is used when you want to manually format your document.</source>
          <target state="translated">ドキュメントを手動で書式設定する場合に使用されます。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The string must contain only the following characters <ph id="ph1">&amp;amp;</ph>#20; <ph id="ph2">&amp;amp;</ph>#10; <ph id="ph3">&amp;amp;</ph>#13; and <ph id="ph4">&amp;amp;</ph>#9;</source>
          <target state="translated">文字列は、次の文字のみを含める必要があります<ph id="ph1">&amp;amp;</ph>#20 です。<ph id="ph2">&amp;amp;</ph>#10;<ph id="ph3">&amp;amp;</ph>#13; and <ph id="ph4">&amp;amp;</ph>#9;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref uid="langword_csharp_XmlWhitespace" name="XmlWhitespace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref uid="langword_csharp_XmlWhitespace" name="XmlWhitespace" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlDeclaration"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node with the specified values.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlDeclaration"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定された値を持つノード。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The attributes are exposed as special properties on the <ph id="ph1">`XmlDeclaration`</ph> node, and not as &lt;xref:System.Xml.XmlAttribute&gt; nodes.</source>
          <target state="translated">属性は、特殊なプロパティとして公開される、 <ph id="ph1">`XmlDeclaration`</ph>  ノードではなく&lt;xref:System.Xml.XmlAttribute&gt;ノード&lt;/xref:System.Xml.XmlAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Although this method creates the new object in the context of the document, it does not automatically add the new object to the document tree.</source>
          <target state="translated">このメソッドは、ドキュメントのコンテキストで、新しいオブジェクトを作成し、その自動的に追加しません、新しいオブジェクト、ドキュメント ツリーにします。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>To add the new object, you must explicitly call one of the node insert methods.</source>
          <target state="translated">新しいオブジェクトを追加するには、明示的に呼び出す必要がありますノード挿入メソッドのいずれか。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>According to the W3C Extensible Markup Language (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210), the <ph id="ph1">`XmlDeclaration`</ph> node must be the first node in the document.</source>
          <target state="translated">W3C 拡張マークアップ言語 (XML) 1.0 recommendation (www.w3.org/TR/1998/REC-xml-19980210) に従って、<ph id="ph1">`XmlDeclaration`</ph>ノードは、ドキュメントの最初のノードである必要があります。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The version must be "1.0".</source>
          <target state="translated">バージョンは「1.0」である必要があります。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The value of the encoding attribute.</source>
          <target state="translated">エンコーディング属性の値です。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This is the encoding that is used when you save the <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to a file or a stream; therefore, it must be set to a string supported by the &lt;xref:System.Text.Encoding&gt; class, otherwise &lt;xref:System.Xml.XmlDocument.Save*&gt; fails.</source>
          <target state="translated">これは、保存するときに使用されるエンコーディング、 <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ファイルまたはストリームですそのため、設定しなければなりませんでサポートされている文字列を、&lt;xref:System.Text.Encoding&gt;クラス、それ以外の場合&lt;xref:System.Xml.XmlDocument.Save*&gt;が失敗した。&lt;/xref:System.Xml.XmlDocument.Save*&gt; &lt;/xref:System.Text.Encoding&gt; 。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or String.Empty, the <bpt id="p2">&lt;xref uid="langword_csharp_Save" name="Save" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.</source>
          <target state="translated">これは、する場合<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または String.Empty の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_Save" name="Save" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>メソッドは、XML 宣言にエンコーディング属性を 、そのため、既定のエンコーディング utf-8 が使用されます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Note: If the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is saved to either a &lt;xref:System.IO.TextWriter&gt; or an &lt;xref:System.Xml.XmlTextWriter&gt;, this encoding value is discarded.</source>
          <target state="translated">メモ: 場合、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に保存される、&lt;xref:System.IO.TextWriter&gt;または&lt;xref:System.Xml.XmlTextWriter&gt;、このエンコーディング値は破棄されます&lt;/xref:System.Xml.XmlTextWriter&gt;&lt;/xref:System.IO.TextWriter&gt;。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Instead, the encoding of the <bpt id="p1">&lt;xref uid="langword_csharp_TextWriter" name="TextWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or the <bpt id="p2">&lt;xref uid="langword_csharp_XmlTextWriter" name="XmlTextWriter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">代わりのエンコード、 <bpt id="p1">&lt;xref uid="langword_csharp_TextWriter" name="TextWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref uid="langword_csharp_XmlTextWriter" name="XmlTextWriter" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>を使用します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This ensures that the XML written out can be read back using the correct encoding.</source>
          <target state="translated">これにより、正しいエンコーディングを使用して、書き込まれた XML を読みすることができます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The value must be either "yes" or "no".</source>
          <target state="translated">値がある必要がありますか、"yes"または"no"です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or String.Empty, the <bpt id="p2">&lt;xref uid="langword_csharp_Save" name="Save" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> method does not write a standalone attribute on the XML declaration.</source>
          <target state="translated">これは、する場合<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または String.Empty の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_Save" name="Save" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>メソッドは、XML 宣言にスタンドアロン属性を書き込みません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlDeclaration" name="XmlDeclaration" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node.</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref uid="langword_csharp_XmlDeclaration" name="XmlDeclaration" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ノード。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The values of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">version</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">standalone</ph><ept id="p2">&lt;/code&gt;</ept> are something other than the ones specified above.</source>
          <target state="translated">値<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">version</ph> <ept id="p1">&lt;/code&gt;</ept>または<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">standalone</ph> <ept id="p2">&lt;/code&gt;</ept>は上記で指定したもの以外のものです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets the root <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the document.</source>
          <target state="translated">ルートを取得します<bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ドキュメントにします。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the root of the XML document tree.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を表す XML ドキュメント ツリーのルートです。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If no root exists, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned.</source>
          <target state="translated">ルートが存在しない場合<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>返されます。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets the node containing the DOCTYPE declaration.</source>
          <target state="translated">DOCTYPE 宣言を含むノードを取得します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`XmlDocument`</ph> can have one and only one child with &lt;xref:System.Xml.XmlNodeType&gt; equal to DocumentType.</source>
          <target state="translated"><ph id="ph1">`XmlDocument`</ph>を持つ&amp;1; つだけの子を持つことができます&lt;xref:System.Xml.XmlNodeType&gt;DocumentType に等しい&lt;/xref:System.Xml.XmlNodeType&gt;。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property is read-only.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; このプロパティは読み取り専用です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To change the DocumentType node, delete the existing node, create a new one using the &lt;xref:System.Xml.XmlDocument.CreateDocumentType%2A&gt; method, and add the new node to the document.</source>
          <target state="translated">DocumentType ノードを変更する既存のノードを削除、新しい&amp;1; つを使用して、作成、&lt;xref:System.Xml.XmlDocument.CreateDocumentType%2A&gt;メソッド、ドキュメントに新しいノードを追加します&lt;/xref:System.Xml.XmlDocument.CreateDocumentType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the DocumentType (DOCTYPE declaration).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> DocumentType (DOCTYPE 宣言) を格納します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified ID.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定した ID に置き換えます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If the document has multiple elements with the matching ID, this method returns the first matching element in the document.</source>
          <target state="translated">文書に一致する ID を持つ複数の要素がある場合は、このメソッドは、文書の最初の一致する要素を返します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The DOM implementation must have information which defines which attributes are of type ID.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; DOM の実装には、どの属性が ID 型の属性を定義する情報が必要</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Although attributes of type ID can be defined in either XSD schemas or DTDs, this version of the product only supports those defined in DTDs.</source>
          <target state="translated">ID 型の属性は、XSD スキーマまたは Dtd のいずれかで定義することができますがこのバージョンの製品のみ Dtd 内で定義されているものをサポートします。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Attributes with the name "ID" are not of type ID unless so defined in the DTD.</source>
          <target state="translated">"ID"ではない名前を持つ属性は、DTD 内で定義している場合を除き、ID を入力します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Implementations where it is unknown whether the attributes are of type ID are expected to return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">返すことが既知かどうかは、属性、ID 型の実装が許可される<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The attribute ID to match.</source>
          <target state="translated">一致する属性 ID。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the matching ID or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no matching element is found.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一致する ID を持つまたは<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>一致する要素が見つからない場合。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all descendant elements that match the specified &lt;xref:System.Xml.XmlDocument.Name*&gt;.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Xml.XmlDocument.Name*&gt;.&lt;/xref:System.Xml.XmlDocument.Name*&gt;に一致するすべての子孫要素の一覧を含む</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The nodes are placed in the order in which they would be encountered in the document.</source>
          <target state="translated">ノードは、ドキュメントで検出される順序で配置します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  It is recommended that you use the &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; or &lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt; method instead of the GetElementsByTagName method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を使用することをお勧め、&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;または&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;GetElementsByTagName メソッドではなくメソッド&lt;/xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The qualified name to match.</source>
          <target state="translated">一致する限定名。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>It is matched against the <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property of the matching node.</source>
          <target state="translated">一致、 <bpt id="p1">&lt;xref uid="langword_csharp_Name" name="Name" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一致するノードのプロパティです。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">特殊な値"*"すべてのタグに一致します。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all matching nodes.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>すべて一致するノードの一覧を格納します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If no nodes match <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, the returned collection will be empty.</source>
          <target state="translated">ノードと一致しない場合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">name</ph> <ept id="p1">&lt;/code&gt;</ept>、返されるコレクションは空になります。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all descendant elements that match the specified &lt;xref:System.Xml.XmlDocument.LocalName<bpt id="p2">*</bpt>&gt; and &lt;xref:System.Xml.XmlNode.NamespaceURI<ept id="p2">*</ept>&gt;.</source>
          <target state="translated">返します、 <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 、指定された一致するすべての子孫要素の一覧を含む&lt;&gt; <bpt id="p2">*</bpt>&gt; と&lt;&gt; <ept id="p2">*</ept>&gt; です。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The nodes are placed in the order in which they would be encountered in the document tree.</source>
          <target state="translated">ノードは、ドキュメント ツリーにおいて発生する順序で配置します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  It is recommended that you use the &lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt; or &lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt; method instead of the GetElementsByTagName method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; を使用することをお勧め、&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;または&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;GetElementsByTagName メソッドではなくメソッド&lt;/xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The LocalName to match.</source>
          <target state="translated">一致する LocalName。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">特殊な値"*"すべてのタグに一致します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>NamespaceURI to match.</source>
          <target state="translated">一致する NamespaceURI。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all matching nodes.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>すべて一致するノードの一覧を格納します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>If no nodes match the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">localName</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">namespaceURI</ph><ept id="p2">&lt;/code&gt;</ept>, the returned collection will be empty.</source>
          <target state="translated">ノードと、指定した一致しない場合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">localName</ph> <ept id="p1">&lt;/code&gt;</ept>と<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">namespaceURI</ph> <ept id="p2">&lt;/code&gt;</ept>、返されるコレクションは空になります。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xml.XmlImplementation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current document.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Xml.XmlImplementation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のドキュメントのオブジェクト。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`XmlDocument`</ph> objects created from the same <ph id="ph2">`XmlImplementation`</ph> share the same &lt;xref:System.Xml.XmlNameTable&gt;.</source>
          <target state="translated"><ph id="ph1">`XmlDocument`</ph>同じから作成されたオブジェクト<ph id="ph2">`XmlImplementation`</ph>同じ&lt;xref:System.Xml.XmlNameTable&gt;.&lt;/xref:System.Xml.XmlNameTable&gt;共有</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This allows users to compare attribute and element names as objects rather than strings.</source>
          <target state="translated">これにより、ユーザーは文字列ではなく、オブジェクトとして属性と要素の名前を比較できます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Although the <ph id="ph1">`XmlDocument`</ph> objects share the same implementation, to move nodes from one document to another you must use the &lt;xref:System.Xml.XmlDocument.ImportNode%2A&gt; method.</source>
          <target state="translated">ただし、<ph id="ph1">`XmlDocument`</ph>オブジェクトは、同じ実装を共有、1 つのドキュメントからノードを移動する必要がありますを使用する、&lt;xref:System.Xml.XmlDocument.ImportNode%2A&gt;メソッド&lt;/xref:System.Xml.XmlDocument.ImportNode%2A&gt;。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlImplementation" name="XmlImplementation" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlImplementation" name="XmlImplementation" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のドキュメントのオブジェクト。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Imports a node from another document to the current document.</source>
          <target state="translated">現在のドキュメントに別のドキュメントからノードをインポートします。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The returned node has no parent.</source>
          <target state="translated">返されるノードには、親がありません。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The source node is not altered or removed from the original document; <ph id="ph1">`ImportNode`</ph> creates a copy of the source node.</source>
          <target state="translated">ソース ノードの変更または、元のドキュメントから削除されていません。<ph id="ph1">`ImportNode`</ph>ソース ノードのコピーを作成します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Importing a node creates an <ph id="ph1">`XmlNode`</ph> object owned by the importing document, with &lt;xref:System.Xml.XmlNode.Name%2A&gt; and &lt;xref:System.Xml.XmlNode.NodeType%2A&gt; identical to the source node.</source>
          <target state="translated">ノードをインポート、<ph id="ph1">`XmlNode`</ph>オブジェクトのドキュメントのインポートによって所有されて&lt;xref:System.Xml.XmlNode.Name%2A&gt;と&lt;xref:System.Xml.XmlNode.NodeType%2A&gt;ソース ノードと同じです&lt;/xref:System.Xml.XmlNode.NodeType%2A&gt;&lt;/xref:System.Xml.XmlNode.Name%2A&gt;。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The new object also has the attributes related to namespaces (&lt;xref:System.Xml.XmlNode.Prefix%2A&gt;, &lt;xref:System.Xml.XmlNode.LocalName%2A&gt;, and &lt;xref:System.Xml.XmlNode.NamespaceURI%2A&gt;).</source>
          <target state="translated">新しいオブジェクトに名前空間に関連する属性は (&lt;xref:System.Xml.XmlNode.Prefix%2A&gt;、 &lt;xref:System.Xml.XmlNode.LocalName%2A&gt;、および&lt;xref:System.Xml.XmlNode.NamespaceURI%2A&gt;).&lt;/xref:System.Xml.XmlNode.NamespaceURI%2A&gt; &lt;/xref:System.Xml.XmlNode.LocalName%2A&gt; &lt;/xref:System.Xml.XmlNode.Prefix%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Depending on the node type of the imported node and the value of the <ph id="ph1">`deep`</ph> parameter, additional information is copied as appropriate.</source>
          <target state="translated">インポートされたノード、および値のノードの種類によって、<ph id="ph1">`deep`</ph>パラメーター、追加情報を適切にコピーされます。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>This method attempts to mirror the behavior expected if a fragment of XML or HTML source was copied from one document to another (recognizing that, in the XML case, the two documents could have different DTDs).</source>
          <target state="translated">このメソッドは動作をミラー化かどうかでも、XML または HTML ソースのフラグメントは別に&amp;1; つのドキュメントからコピーされたを試みます (、XML の場合、2 つのドキュメントでしたがあるさまざまな Dtd を認識すること)。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The following table describes the specific behavior for each &lt;xref:System.Xml.XmlNodeType&gt;.</source>
          <target state="translated">次の表に、各&lt;xref:System.Xml.XmlNodeType&gt;。&lt;/xref:System.Xml.XmlNodeType&gt;に固有の動作</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>|XmlNodeType|ImportNode(true)|ImportNode(false)|   |-----------------|------------------------|-------------------------|   |Attribute|The &lt;xref:System.Xml.XmlAttribute.Specified%2A&gt; property is set to <ph id="ph1">`true`</ph> on the generated &lt;xref:System.Xml.XmlAttribute&gt;.</source>
          <target state="translated">|XmlNodeType |ImportNode(true) |ImportNode(false) |  |-----------------|------------------------|-------------------------|  |属性 |&lt;xref:System.Xml.XmlAttribute.Specified%2A&gt;プロパティに設定されている<ph id="ph1">`true`</ph>、生成された&lt;xref:System.Xml.XmlAttribute&gt;&lt;/xref:System.Xml.XmlAttribute&gt;&lt;/xref:System.Xml.XmlAttribute.Specified%2A&gt;。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The descendants of the source <ph id="ph1">`XmlAttribute`</ph> are recursively imported and the resulting nodes reassembled to form the corresponding subtree.|The <ph id="ph2">`deep`</ph> parameter does not apply to <ph id="ph3">`XmlAttribute`</ph> nodes; they always carry their children with them when imported.|   |CData|Copies the node, including its data.|Copies the node, including its data.|   |Comment|Copies the node, including its data.|Copies the node, including its data.|   |DocumentFragment|The descendants of the source node are recursively imported and the resulting nodes reassembled to form the corresponding subtree.|An empty &lt;xref:System.Xml.XmlDocumentFragment&gt; is generated.|   |DocumentType|Copies the node, including its data.<bpt id="p1">*</bpt>|Copies the node, including its data.<ept id="p1">*</ept>|   |Element|The descendants of the source element and its specified attribute nodes are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
          <target state="translated">ソースの子孫の<ph id="ph1">`XmlAttribute`</ph>は再帰的にインポートし、結果として得られるノード再アセンブルされ、対応するサブツリーが形成されます |。<ph id="ph2">`deep`</ph>パラメーターには適用されません<ph id="ph3">`XmlAttribute`</ph>ノード以外の場合は、インポート時に子を常に保持します |。  |CData |ノードをそのデータと共にコピーします |。ノードをそのデータと共にコピーします |。  |コメント |ノードをそのデータと共にコピーします |。ノードをそのデータと共にコピーします |。  |Documentfragment |ソース ノードの子孫が再帰的にインポートし、結果として得られるノードは、対応するサブツリーが形成再アセンブルします |。空&lt;xref:System.Xml.XmlDocumentFragment&gt;を生成します |。  |DocumentType |そのデータを含め、ノードをコピーします。<bpt id="p1">*</bpt>|そのデータを含め、ノードをコピーします。<ept id="p1">*</ept>|  |要素 |ソース要素とその指定された属性ノードの子孫が再帰的にインポートし、結果として得られるノードは、対応するサブツリーが形成再アセンブルします&lt;/xref:System.Xml.XmlDocumentFragment&gt;。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Note: Default attributes are not copied.</source>
          <target state="translated">注: 既定の属性はコピーされません。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>If the document being imported into defines default attributes for this element name, those are assigned.|Specified attribute nodes of the source element are imported, and the generated <ph id="ph1">`XmlAttribute`</ph> nodes are attached to the generated &lt;xref:System.Xml.XmlElement&gt;.</source>
          <target state="translated">インポートされるドキュメントには、この要素名に対する既定の属性が定義されている場合それらが割り当てられます |。ソース要素のノードをインポートすると、指定した属性と、生成された<ph id="ph1">`XmlAttribute`</ph>ノードは、生成された&lt;xref:System.Xml.XmlElement&gt;.&lt;/xref:System.Xml.XmlElement&gt;にアタッチ</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Note: Default attributes are not copied.</source>
          <target state="translated">注: 既定の属性はコピーされません。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If the document being imported into defines default attributes for this element name, those are assigned.|   |EntityReference|Because the source and destination documents could have the entities defined differently, this method only copies the &lt;xref:System.Xml.XmlEntityReference&gt; node.</source>
          <target state="translated">インポートされるドキュメントには、この要素名に対する既定の属性が定義されている場合それらが割り当てられます |。  |EntityReference |このメソッドはのみコピー元とコピー先のドキュメントには、エンティティの定義が異なる可能性がある、ため、&lt;xref:System.Xml.XmlEntityReference&gt;ノード&lt;/xref:System.Xml.XmlEntityReference&gt;。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The replacement text is not included.</source>
          <target state="translated">置換テキストは含まれません。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>If the destination document has the entity defined, its value is assigned.|Because the source and destination documents could have the entities defined differently, this method only copies the &lt;xref:System.Xml.XmlEntityReference&gt; node.</source>
          <target state="translated">その値が割り当てられているインポート先のドキュメントにエンティティが定義されている場合は、します |。このメソッドはのみコピー元とコピー先のドキュメントには、エンティティの定義が異なる可能性がある、ため、&lt;xref:System.Xml.XmlEntityReference&gt;ノード&lt;/xref:System.Xml.XmlEntityReference&gt;。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The replacement text is not included.</source>
          <target state="translated">置換テキストは含まれません。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>If the destination document has the entity defined, its value is assigned.|   |ProcessingInstruction|Copies the target and data value from the imported node.|Copies the target and data value from the imported node.|   |Text|Copies the node, including its data.|Copies the node, including its data.|   |SignificantWhitespace|Copies the node, including its data.|Copies the node, including its data.|   |Whitespace|Copies the node, including its data.|Copies the node, including its data.|   |XmlDeclaration|Copies the target and data value from the imported node.|Copies the target and data value from the imported node.|   |All other node types.|These node types cannot be imported.|These node types cannot be imported.|       *Although DocumentType nodes can be imported, a document can only have one DocumentType.</source>
          <target state="translated">インポート先のドキュメントにエンティティが定義されている場合は、その値が割り当てられている |。  |ProcessingInstruction |インポートされたノードから、ターゲットおよびデータ値をコピーします |。インポートされたノードから、ターゲットおよびデータ値をコピーします |。  |テキスト |ノードをそのデータと共にコピーします |。ノードをそのデータと共にコピーします |。  |SignificantWhitespace |ノードをそのデータと共にコピーします |。ノードをそのデータと共にコピーします |。  |空白文字 |ノードをそのデータと共にコピーします |。ノードをそのデータと共にコピーします |。  |XmlDeclaration |インポートされたノードから、ターゲットおよびデータ値をコピーします |。インポートされたノードから、ターゲットおよびデータ値をコピーします |。  |その他のすべてのノード型です |。これらのノード型をインポートすることはできません |。これらのノード型をインポートすることはできません |。      * DocumentType ノードをインポートすることができますが、ドキュメントは 1 つの DocumentType だけを配置できます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>If the document currently has a DocumenType node, it must be removed before adding a new one.</source>
          <target state="translated">現在、ドキュメント DocumenType ノードの場合は、新しいものを追加する前に削除してください。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The node being imported.</source>
          <target state="translated">インポートしているノードです。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to perform a deep clone; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ディープ クローン; を実行するにはそれ以外の場合、 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The imported <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">インポートされた<bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Calling this method on a node type which cannot be imported.</source>
          <target state="translated">インポートできないノード型でこのメソッドを呼び出しています。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Throws an &lt;xref:System.InvalidOperationException&gt; in all cases.</source>
          <target state="translated">スロー、&lt;xref:System.InvalidOperationException&gt;常にします&lt;/xref:System.InvalidOperationException&gt;。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>This property is not implemented.</source>
          <target state="translated">このプロパティは実装されていません。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The values of the node and all its child nodes.</source>
          <target state="translated">ノードとそのすべての子ノードの値です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Gets or sets the markup representing the children of the current node.</source>
          <target state="translated">取得または現在のノードの子を表すマークアップを設定します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Setting this property replaces the children of the node with the parsed contents of the given string.</source>
          <target state="translated">このプロパティを設定すると、ノードの子を指定した文字列の解析済みの内容に置き換えます。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The parsing is done in the current namespace context.</source>
          <target state="translated">文字列の解析は、現在の名前空間コンテキストで実行します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`InnerXml`</ph> removes redundant namespace declarations.</source>
          <target state="translated"><ph id="ph1">`InnerXml`</ph>冗長な名前空間宣言を削除します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>As a result, numerous cut and paste operations do not increase the size of your document with redundant namespace declarations.</source>
          <target state="translated">結果では、多数の切り取り、貼り付けとして操作は冗長な名前空間宣言によってドキュメントのサイズを増やさないでください。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Consider the following XSL document:      <ph id="ph1">```   &lt;xsl:stylesheet version="1.0"          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;        &lt;xsl:template match="stock"&gt;            ...        &lt;/xsl:template&gt;       &lt;/xsl:stylesheet&gt;   ```</ph>       The <ph id="ph2">`InnerXml`</ph> property on the stylesheet node returns the following string:      <ph id="ph3">```   &lt;xsl:template match="stock"          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;        ...       &lt;/xsl:template&gt;   ```</ph>       Notice the additional xmlns:xsl namespace declaration which is used to preserve the node identity.</source>
          <target state="translated">次の XSL ドキュメントを検討してください: <ph id="ph1">```   &lt;xsl:stylesheet version="1.0"          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;        &lt;xsl:template match="stock"&gt;            ...        &lt;/xsl:template&gt;       &lt;/xsl:stylesheet&gt;   ```</ph> 、<ph id="ph2">`InnerXml`</ph>スタイル シートのノードのプロパティは、次の文字列を返します:<ph id="ph3">```   &lt;xsl:template match="stock"          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;        ...       &lt;/xsl:template&gt;   ```</ph>ノード id を保持するために使用される追加 xmlns:xsl 名前空間の宣言に注意してください。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>If you re-insert this inner XML string, you will get back your original document.</source>
          <target state="translated">この内部の XML 文字列を再挿入した場合は戻る、元のドキュメントです。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>In other words, <ph id="ph1">`InnerXml`</ph> recognizes that the xmlns:xsl namespace declaration is redundant, given that the parent xsl:stylesheet element already has the xmlns:xsl namespace delcaration, and therefore removes it.</source>
          <target state="translated">つまり、<ph id="ph1">`InnerXml`</ph>ある親 xsl:stylesheet 要素既に xmlns:xsl 名前空間 delcaration 持ちされ、削除、xmlns:xsl 名前空間宣言が重複していることを認識します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>If you move <ph id="ph1">`InnerXml`</ph> from a document with no default namespace to a document with a default namespace, the behavior is a little different.</source>
          <target state="translated">移動する場合<ph id="ph1">`InnerXml`</ph>から既定の名前空間を持つドキュメントに既定の名前空間を持つドキュメント、動作は少し異なります。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Consider the following XML string:      <ph id="ph1">```   &lt;test&gt;         &lt;item&gt;123&lt;/item&gt;       &lt;/test&gt;   ```</ph>       <ph id="ph2">`InnerXml`</ph> returns a plain XML string with no namespace declarations:      <ph id="ph3">```   &lt;item&gt;123&lt;/item&gt;   ```</ph>       If you then insert this string into a document that does have a default namespace, such as the following:      <ph id="ph4">```   &lt;test2 xmlns="urn:1"&gt;       &lt;/test&gt;   ```</ph>       <ph id="ph5">`InnerXml`</ph> parses the string in context, and the new nodes pick up the urn:1 namespace.</source>
          <target state="translated">次の XML 文字列を検討してください: <ph id="ph1">```   &lt;test&gt;         &lt;item&gt;123&lt;/item&gt;       &lt;/test&gt;   ```</ph> <ph id="ph2">`InnerXml`</ph>ない名前空間宣言によってプレーン XML 文字列を返します:<ph id="ph3">```   &lt;item&gt;123&lt;/item&gt;   ```</ph>し、この文字列を次のよう、既定の名前空間には、ドキュメントに挿入する場合: <ph id="ph4">```   &lt;test2 xmlns="urn:1"&gt;       &lt;/test&gt;   ```</ph> <ph id="ph5">`InnerXml`</ph>解析のコンテキストでは、文字列と新しいノードが urn:&amp;1; の名前空間を取得します。              </target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The result looks like this:      <ph id="ph1">```   &lt;test2 xmlns="urn:1"&gt;         &lt;item&gt;123&lt;/item&gt;       &lt;/test&gt;   ```</ph>       Now when you ask for the <ph id="ph2">`InnerXml`</ph> you get back the following:      <ph id="ph3">```   &lt;item xmlns="urn:1"&gt;123&lt;/item&gt;   ```</ph>       If you explicitly want the inserted item to preserve the fact that it came from a document that had no namespace then you need to manually add an xmlns= "" declaration and insert the resulting string:      <ph id="ph4">```   &lt;item xmlns=""&gt;123&lt;/item&gt;   ```</ph>       The net effect of all this is as follows:      1.</source>
          <target state="translated">結果は次のようになります:<ph id="ph1">```   &lt;test2 xmlns="urn:1"&gt;         &lt;item&gt;123&lt;/item&gt;       &lt;/test&gt;   ```</ph>を要求するときに今すぐ、<ph id="ph2">`InnerXml`</ph>次が返されます: <ph id="ph3">```   &lt;item xmlns="urn:1"&gt;123&lt;/item&gt;   ```</ph> xmlns を手動で追加する必要があります。 名前空間がないドキュメントかられたファクトを保持するために挿入されたアイテムを明示的にする場合 =""宣言し、結果の文字列を挿入:<ph id="ph4">```   &lt;item xmlns=""&gt;123&lt;/item&gt;   ```</ph>これは、次のようにすべての実際の影響: 1。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Cutting and pasting <ph id="ph1">`InnerXml`</ph> among documents that do not use namespaces is clean and simple and does not create "xmlns" redundancy in your strings.</source>
          <target state="translated">切り取りと貼り付け<ph id="ph1">`InnerXml`</ph>使用しないでドキュメント間で名前空間は、クリーンでシンプルなと文字列の"xmlns"冗長性は作成されません。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`InnerXml`</ph> can also be used to cut and paste between documents which have more than one namespace (that is XSL stylesheets).</source>
          <target state="translated"><ph id="ph1">`InnerXml`</ph>切り取って貼り付ける (つまり XSL スタイル シート)&amp;1; つ以上の名前空間を含むドキュメントを間にも使用できます。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>xmlns:xsl declarations automatically appear in your strings and disappear in your node hierarchies.</source>
          <target state="translated">xmlns:xsl 宣言が自動的に、文字列に表示され、ノードの階層に表示されなくなります。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>In the case where you are moving <ph id="ph1">`InnerXml`</ph> from a document that has no default namespace to a document that does have a default namespace, the new nodes will pick up the new default namespace.</source>
          <target state="translated">移行する場合は、の<ph id="ph1">`InnerXml`</ph>を既定の名前空間がドキュメントに既定の名前空間を持たないドキュメントからの新しいノードは新しい既定の名前空間を取得します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`InnerXml`</ph> is set with text containing entity references that are not currently defined in the document, the resulting tree will contain empty EntityReference nodes.</source>
          <target state="translated">場合<ph id="ph1">`InnerXml`</ph>設定されているテキストがドキュメントで現在定義されていないエンティティ参照を含む、結果として得られるツリーは、空の EntityReference ノードを含みます。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The markup of the children of the current node.</source>
          <target state="translated">現在のノードの子のマークアップ。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The XML specified when setting this property is not well-formed.</source>
          <target state="translated">XML 指定されたときにこのプロパティの設定は整形式です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current node is read-only.</source>
          <target state="translated">現在のノードは読み取り専用であるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>A read-only node is one whose properties, attributes, or children cannot be changed.</source>
          <target state="translated">読み取り専用ノードは、1 つのプロパティ、属性、または子を変更することはできません。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>You can remove a read-only node from the tree and insert it somewhere else.</source>
          <target state="translated">読み取り専用のノード ツリーから削除し、それを別の場所に挿入できます。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current node is read-only; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>場合は、現在のノードは読み取り専用です。それ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nodes always return <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>ノードが常に返す<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified stream.</source>
          <target state="translated">指定したストリームから XML ドキュメントを読み込みます。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The <ph id="ph2">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;、<ph id="ph2">`Load`</ph>メソッドは、有意の空白を常に保存します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;プロパティは、要素のコンテンツで空白である、有意の空白文字は保持されているかどうかを決定します&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
          <target state="translated">既定値は<ph id="ph1">`false`</ph>; 要素のコンテンツ内の空白は保持されません。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If you want validation to occur, you can create a validating &lt;xref:System.Xml.XmlReader&gt; instance by using the &lt;xref:System.Xml.XmlReaderSettings&gt; class and the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">検証型を作成するには検証を実行する場合は、&lt;xref:System.Xml.XmlReader&gt;インスタンスを使用して、&lt;xref:System.Xml.XmlReaderSettings&gt;クラスおよび&lt;xref:System.Xml.XmlReader.Create%2A&gt;メソッド&lt;/xref:System.Xml.XmlReader.Create%2A&gt;&lt;/xref:System.Xml.XmlReaderSettings&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Xml.XmlReader&gt; reference page.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Xml.XmlReader&gt;リファレンス ページ。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This method automatically detects the string format of the input XML (for example, UTF-8, ANSI, and so on).</source>
          <target state="translated">このメソッドは、入力 XML (たとえば、utf-8、ANSI など) の文字列形式を自動的に検出します。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If your application needs to know which encoding is used to read the stream, consider using an &lt;xref:System.Xml.XmlTextReader&gt; object to read the stream, and then use the &lt;xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName&gt; property to determine the encoding.</source>
          <target state="translated">アプリケーションは、ストリームの読み取りに使用されるエンコーディングを知る必要があるを場合は、使用を検討して、 &lt;xref:System.Xml.XmlTextReader&gt;、ストリームの読み取りにオブジェクトを使用して、&lt;xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName&gt;のエンコーディングを決定するプロパティです&lt;/xref:System.Xml.XmlTextReader.Encoding%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.XmlTextReader&gt;。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>If you need to use a &lt;xref:System.Xml.XmlDocument&gt; object to work with XML, you can use the &lt;xref:System.Xml.XmlTextReader&gt; object to create one.</source>
          <target state="translated">使用する必要がある場合、 &lt;xref:System.Xml.XmlDocument&gt;XML を処理するオブジェクトを使用することができます、&lt;xref:System.Xml.XmlTextReader&gt;いずれかを作成するオブジェクト&lt;/xref:System.Xml.XmlTextReader&gt;&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Reading XML Data using XPathDocument and XmlDocument<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XPathDocument および XmlDocument を使用して XML データの読み取り<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントを含むストリーム。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
          <target state="translated">XML で読み込みまたは解析エラーがあります。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>In this case, a &lt;xref:System.IO.FileNotFoundException&gt; is raised.</source>
          <target state="translated">ここで、&lt;xref:System.IO.FileNotFoundException&gt;が発生します&lt;/xref:System.IO.FileNotFoundException&gt;。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">指定した&lt;xref:System.IO.TextReader&gt;。&lt;/xref:System.IO.TextReader&gt;から XML ドキュメントを読み込みます</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The <ph id="ph2">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;、<ph id="ph2">`Load`</ph>メソッドは、有意の空白を常に保存します。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;プロパティは、要素のコンテンツで空白である、有意の空白文字は保持されているかどうかを決定します&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
          <target state="translated">既定値は<ph id="ph1">`false`</ph>; 要素のコンテンツ内の空白は保持されません。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>If you want validation to occur, you can create a validating &lt;xref:System.Xml.XmlReader&gt; instance by using the &lt;xref:System.Xml.XmlReaderSettings&gt; class and the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">検証型を作成するには検証を実行する場合は、&lt;xref:System.Xml.XmlReader&gt;インスタンスを使用して、&lt;xref:System.Xml.XmlReaderSettings&gt;クラスおよび&lt;xref:System.Xml.XmlReader.Create%2A&gt;メソッド&lt;/xref:System.Xml.XmlReader.Create%2A&gt;&lt;/xref:System.Xml.XmlReaderSettings&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Xml.XmlReader&gt; reference page.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Xml.XmlReader&gt;リファレンス ページ。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to feed the XML data into the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ドキュメントに XML データをフィードするために使用します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
          <target state="translated">XML で読み込みまたは解析エラーがあります。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
          <target state="translated">この例では、ドキュメントは空のままです。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified URL.</source>
          <target state="translated">指定された URL から XML ドキュメントを読み込みます。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The <ph id="ph2">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;、<ph id="ph2">`Load`</ph>メソッドは、有意の空白を常に保存します。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;プロパティは、要素のコンテンツで空白である、有意の空白文字は保持されているかどうかを決定します&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
          <target state="translated">既定値は<ph id="ph1">`false`</ph>; 要素のコンテンツ内の空白は保持されません。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>If you want validation to occur, you can create a validating &lt;xref:System.Xml.XmlReader&gt; instance by using the &lt;xref:System.Xml.XmlReaderSettings&gt; class and the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">検証型を作成するには検証を実行する場合は、&lt;xref:System.Xml.XmlReader&gt;インスタンスを使用して、&lt;xref:System.Xml.XmlReaderSettings&gt;クラスおよび&lt;xref:System.Xml.XmlReader.Create%2A&gt;メソッド&lt;/xref:System.Xml.XmlReader.Create%2A&gt;&lt;/xref:System.Xml.XmlReaderSettings&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Xml.XmlReader&gt; reference page.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Xml.XmlReader&gt;リファレンス ページ。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>URL for the file containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントを含むファイルの URL です。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The URL can be either a local file or an HTTP URL (a Web address).</source>
          <target state="translated">URL には、ローカル ファイルまたは HTTP URL (Web アドレス) のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
          <target state="translated">XML で読み込みまたは解析エラーがあります。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>In this case, a &lt;xref:System.IO.FileNotFoundException&gt; is raised.</source>
          <target state="translated">ここで、&lt;xref:System.IO.FileNotFoundException&gt;が発生します&lt;/xref:System.IO.FileNotFoundException&gt;。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph>長さ&amp;0; の文字列は、空白しか含んでいないかで定義されている&amp;1; つまたは複数の無効な文字が含まれています<ph id="ph2">&lt;xref:System.IO.Path.InvalidPathChars&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">指定したパス、ファイル名、またはその両方に、システム定義の最大長を超えています。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満である必要があり、ファイル名は 260 文字未満にする必要があります。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The specified path is invalid (for example, it is on an unmapped drive).</source>
          <target state="translated">指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">ファイルを開くときに I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> specified a file that is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph>読み取り専用であるファイルを指定します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>-or-       This operation is not supported on the current platform.</source>
          <target state="translated">または、この操作は現在のプラットフォームでサポートされていません。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> specified a directory.</source>
          <target state="translated">- または -<ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph>はディレクトリを指定します。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>-or-       The caller does not have the required permission.</source>
          <target state="translated">または、呼び出し元に必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The file specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> was not found.</source>
          <target state="translated">指定されたファイル<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">filename</ph> <ept id="p1">&lt;/code&gt;</ept>でが見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is in an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph>無効な形式です。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元には、必要なアクセス許可はありません。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">指定した&lt;xref:System.Xml.XmlReader&gt;。&lt;/xref:System.Xml.XmlReader&gt;から XML ドキュメントを読み込みます</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  The <ph id="ph2">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;、<ph id="ph2">`Load`</ph>メソッドは、有意の空白を常に保存します。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; property determines whether or not insignificant white space, that is white space in element content, is preserved.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;プロパティは、要素のコンテンツで空白である、有意の空白文字は保持されているかどうかを決定します&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>; white space in element content is not preserved.</source>
          <target state="translated">既定値は<ph id="ph1">`false`</ph>; 要素のコンテンツ内の空白は保持されません。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If the reader is in the initial state (&lt;xref:System.Xml.XmlReader.ReadState%2A&gt; =ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">リーダーが初期状態である場合 (&lt;xref:System.Xml.XmlReader.ReadState%2A&gt; ReadState.Initial =)、<ph id="ph1">`Load`</ph>リーダーの内容全体を使用して、検出した内容からの DOM をビルドします&lt;/xref:System.Xml.XmlReader.ReadState%2A&gt;。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>If the reader is already positioned on some node at depth "n", this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">リーダーの位置は、"n"の深さのあるノード上では既に場合、このメソッドは、そのノードと"n"の深さを閉じる終了タグまでのすべての後続の兄弟を読み込みます。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>This has the following results.</source>
          <target state="translated">これは、次の結果です。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If the current node and its siblings look like the following:      <ph id="ph1">```   &lt;!--comment--&gt;&lt;element1&gt;one&lt;/element1&gt;&lt;element2&gt;two&lt;/element2&gt;   ```</ph>       <ph id="ph2">`Load`</ph> throws an exception because a document cannot have two root level elements.</source>
          <target state="translated">場合は、現在のノードとその兄弟は、次のようになります: <ph id="ph1">```   &lt;!--comment--&gt;&lt;element1&gt;one&lt;/element1&gt;&lt;element2&gt;two&lt;/element2&gt;   ```</ph> <ph id="ph2">`Load`</ph>ドキュメントは&amp;2; つのルート レベル要素ではできないために、例外をスローします。       </target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>If the current node and its siblings look like the following:      <ph id="ph1">```   &lt;!--comment--&gt;&lt;?process instruction?&gt;&lt;!--comment--&gt;&lt;/endtag&gt;   ```</ph>       <ph id="ph2">`Load`</ph> succeeds, but you have an incomplete DOM tree because there is no root level element.</source>
          <target state="translated">次のようになります、現在のノードとその兄弟: <ph id="ph1">```   &lt;!--comment--&gt;&lt;?process instruction?&gt;&lt;!--comment--&gt;&lt;/endtag&gt;   ```</ph> <ph id="ph2">`Load`</ph>成功すると、ルート レベルの要素がないため、DOM ツリーに不完全ながあるがします。       </target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Before you save the document, you must add a root level element, otherwise &lt;xref:System.Xml.XmlDocument.Save%2A&gt; will throw an exception.</source>
          <target state="translated">ドキュメントを保存する前に追加する必要ありますルート レベルの要素では、それ以外の場合&lt;xref:System.Xml.XmlDocument.Save%2A&gt;例外がスローされます&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document, for example a white space or attribute node, the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">リーダーが配置されているまで読み取りを続行が空白または属性ノード、たとえば、ドキュメントのルート レベルとして無効なリーフ ノードにリーダーが配置されている場合、ルートとして使用することができますをノード上。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The document begins loading at this point.</source>
          <target state="translated">ドキュメントでは、この時点での読み込みを開始します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>If you want validation to occur, you can create a validating &lt;xref:System.Xml.XmlReader&gt; instance by using the &lt;xref:System.Xml.XmlReaderSettings&gt; class and the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">検証型を作成するには検証を実行する場合は、&lt;xref:System.Xml.XmlReader&gt;インスタンスを使用して、&lt;xref:System.Xml.XmlReaderSettings&gt;クラスおよび&lt;xref:System.Xml.XmlReader.Create%2A&gt;メソッド&lt;/xref:System.Xml.XmlReader.Create%2A&gt;&lt;/xref:System.Xml.XmlReaderSettings&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Xml.XmlReader&gt; reference page.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Xml.XmlReader&gt;リファレンス ページ。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReader" name="XmlReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to feed the XML data into the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReader" name="XmlReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ドキュメントに XML データをフィードするために使用します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
          <target state="translated">XML で読み込みまたは解析エラーがあります。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
          <target state="translated">この例では、ドキュメントは空のままです。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Loads the XML document from the specified string.</source>
          <target state="translated">指定した文字列から XML ドキュメントを読み込みます。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>By default the <ph id="ph1">`LoadXml`</ph> method does not preserve white space or significant white space.</source>
          <target state="translated">既定では、<ph id="ph1">`LoadXml`</ph>メソッドでは、空白文字や有意の空白は保持されません。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>This method parses DTDs, but does not do DTD or Schema validation.</source>
          <target state="translated">このメソッドは、Dtd を解析してですが DTD またはスキーマの検証を実行しません。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If you want validation to occur, you can create a validating &lt;xref:System.Xml.XmlReader&gt; instance by using the &lt;xref:System.Xml.XmlReaderSettings&gt; class and the &lt;xref:System.Xml.XmlReader.Create%2A&gt; method.</source>
          <target state="translated">検証型を作成するには検証を実行する場合は、&lt;xref:System.Xml.XmlReader&gt;インスタンスを使用して、&lt;xref:System.Xml.XmlReaderSettings&gt;クラスおよび&lt;xref:System.Xml.XmlReader.Create%2A&gt;メソッド&lt;/xref:System.Xml.XmlReader.Create%2A&gt;&lt;/xref:System.Xml.XmlReaderSettings&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section of the &lt;xref:System.Xml.XmlReader&gt; reference page.</source>
          <target state="translated">詳細については、の「解説」セクションを参照してください、&lt;xref:System.Xml.XmlReader&gt;リファレンス ページ。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If you want to load from a &lt;xref:System.IO.Stream&gt;, &lt;xref:System.String&gt;, &lt;xref:System.IO.TextReader&gt;, or &lt;xref:System.Xml.XmlReader&gt;, use the Load method instead of this method.</source>
          <target state="translated">読み込みをする場合、 &lt;xref:System.IO.Stream&gt;、 &lt;xref:System.String&gt;、 &lt;xref:System.IO.TextReader&gt;、または&lt;xref:System.Xml.XmlReader&gt;、このメソッドではなく、Load メソッドを使用します&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.IO.TextReader&gt;&lt;/xref:System.String&gt;&lt;/xref:System.IO.Stream&gt;。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>String containing the XML document to load.</source>
          <target state="translated">読み込む XML ドキュメントを含む文字列です。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>There is a load or parse error in the XML.</source>
          <target state="translated">XML で読み込みまたは解析エラーがあります。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>In this case, the document remains empty.</source>
          <target state="translated">この例では、ドキュメントは空のままです。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Gets the local name of the node.</source>
          <target state="translated">ノードのローカル名を取得します。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The local name returned depends on the &lt;xref:System.Xml.XmlDocument.NodeType%2A&gt; of the node.</source>
          <target state="translated">返されるローカルの名前は、&lt;xref:System.Xml.XmlDocument.NodeType%2A&gt;ノードの&lt;/xref:System.Xml.XmlDocument.NodeType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>To see a table describing the local name returned for each of the node types, see the &lt;xref:System.Xml.XmlNode.LocalName%2A&gt; property in the &lt;xref:System.Xml.XmlNode&gt; class.</source>
          <target state="translated">それぞれのノード型に対応するローカル名を説明した表を表示するには、&lt;xref:System.Xml.XmlNode.LocalName%2A&gt;&lt;xref:System.Xml.XmlNode&gt;クラス&lt;/xref:System.Xml.XmlNode&gt;のプロパティ&lt;/xref:System.Xml.XmlNode.LocalName%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nodes, the local name is #document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード、ローカル名は #document です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Gets the qualified name of the node.</source>
          <target state="translated">ノードの修飾名を取得します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The name returned depends on the &lt;xref:System.Xml.XmlDocument.NodeType%2A&gt; of the node.</source>
          <target state="translated">返される名前は、&lt;xref:System.Xml.XmlDocument.NodeType%2A&gt;ノードの&lt;/xref:System.Xml.XmlDocument.NodeType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>To see a table describing the name returned for each of the node types, see the &lt;xref:System.Xml.XmlNode.Name%2A&gt; property in the &lt;xref:System.Xml.XmlNode&gt; class.</source>
          <target state="translated">返されるノード型の名前を説明した表を表示するには、&lt;xref:System.Xml.XmlNode.Name%2A&gt;&lt;xref:System.Xml.XmlNode&gt;クラス&lt;/xref:System.Xml.XmlNode&gt;のプロパティ&lt;/xref:System.Xml.XmlNode.Name%2A&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nodes, the name is #document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード、名前は #document です。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Xml.XmlNameTable&gt; associated with this implementation.</source>
          <target state="translated">取得、&lt;xref:System.Xml.XmlNameTable&gt;この実装に関連付けられている&lt;/xref:System.Xml.XmlNameTable&gt;。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`XmlDocument`</ph> object has a &lt;xref:System.Xml.NameTable&gt; object.</source>
          <target state="translated">各<ph id="ph1">`XmlDocument`</ph>オブジェクトには、&lt;xref:System.Xml.NameTable&gt;オブジェクト&lt;/xref:System.Xml.NameTable&gt;。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Element and attribute names are stored in the <ph id="ph1">`NameTable`</ph> as atomized strings.</source>
          <target state="translated">要素と属性名が格納されている、<ph id="ph1">`NameTable`</ph>アトム化された文字列として。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This means that even if a name is referenced in the document multiple times it is stored only once in the <ph id="ph1">`NameTable`</ph>.</source>
          <target state="translated">つまり、名前がドキュメントで参照されている場合でも複数回これは、格納&amp;1; 回だけで、<ph id="ph1">`NameTable`</ph>です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>For example, if the document had multiple elements with the name "Customer", <ph id="ph1">`NameTable`</ph> returns the same object whenever it receives a request for that name.</source>
          <target state="translated">たとえば、"Customer"という名前の複数の要素がドキュメントに含まれていた<ph id="ph1">`NameTable`</ph>名に対応する要求を受信するたびに、同じオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>As a result, users can write code using object comparisons on these strings rather than the more expensive string comparisons.</source>
          <target state="translated">その結果、ユーザーは、高価な文字列比較ではなく、これらの文字列でオブジェクト比較を使用してコードを記述できます。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>For more information on atomized strings, see &lt;xref:System.Xml.XmlNameTable&gt;.</source>
          <target state="translated">アトミック化された文字列の詳細については、 &lt;xref:System.Xml.XmlNameTable&gt;。&lt;/xref:System.Xml.XmlNameTable&gt;を参照してください。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enabling you to get the atomized version of a string within the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlNameTable" name="XmlNameTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ドキュメント内の文字列のアトミック化されたバージョンを取得できるようにします。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Xml.XmlNode.Value*&gt; of a node belonging to this document has been changed.</source>
          <target state="translated">発生したときに、&lt;xref:System.Xml.XmlNode.Value*&gt;このドキュメントに属するノードの変更されました&lt;/xref:System.Xml.XmlNode.Value*&gt;。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>This event only applies to nodes that have a value.</source>
          <target state="translated">このイベントは、値を持つノードにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Xml.XmlNode.Value*&gt; of a node belonging to this document is about to be changed.</source>
          <target state="translated">発生したときに、&lt;xref:System.Xml.XmlNode.Value*&gt;変更される直前には、このドキュメントに属するノードの&lt;/xref:System.Xml.XmlNode.Value*&gt;。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
          <target state="translated">このイベントは、余分なチェックを実行し、必要に応じて、操作を停止する例外をスローできます。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
          <target state="translated">例外がスローされた場合、<ph id="ph1">`XmlDocument`</ph>元の状態を返します。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This event only applies to nodes that have a value.</source>
          <target state="translated">このイベントは、値を持つノードにのみ適用されます。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document has been inserted into another node.</source>
          <target state="translated">このドキュメントに属するノードが別のノードに挿入されたときに発生します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document is about to be inserted into another node.</source>
          <target state="translated">このドキュメントに属するノードが別のノードに挿入されるときに発生します。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
          <target state="translated">このイベントは、余分なチェックを実行し、必要に応じて、操作を停止する例外をスローできます。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
          <target state="translated">例外がスローされた場合、<ph id="ph1">`XmlDocument`</ph>元の状態を返します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document has been removed from its parent.</source>
          <target state="translated">このドキュメントに属するノードが親から削除されたときに発生します。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Occurs when a node belonging to this document is about to be removed from the document.</source>
          <target state="translated">このドキュメントに属するノードをドキュメントから削除するときに発生します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>This event allows the user to do extra checking and, if necessary, throw an exception to stop the operation.</source>
          <target state="translated">このイベントは、余分なチェックを実行し、必要に応じて、操作を停止する例外をスローできます。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>If an exception is thrown the <ph id="ph1">`XmlDocument`</ph> returns to its original state.</source>
          <target state="translated">例外がスローされた場合、<ph id="ph1">`XmlDocument`</ph>元の状態を返します。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>All nodes created by this document, whether or not they have been inserted into the document, are included in this event.</source>
          <target state="translated">このイベントでは、ドキュメントに挿入されたかどうか、このドキュメントでは、によって作成されたすべてのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">追加します。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Gets the type of the current node.</source>
          <target state="translated">現在のノードの種類を取得します。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The node type.</source>
          <target state="translated">ノードの種類。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nodes, this value is XmlNodeType.Document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード、この値は XmlNodeType.Document です。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which the current node belongs.</source>
          <target state="translated">取得、 <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>現在のノードが属しています。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>For <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nodes (&lt;xref:System.Xml.XmlDocument.NodeType*&gt; equals XmlNodeType.Document), this property always returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノード (&lt;xref:System.Xml.XmlDocument.NodeType*&gt; XmlNodeType.Document に等しい)、このプロパティは常に返します<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>&lt;/xref:System.Xml.XmlDocument.NodeType*&gt; 。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Gets the parent node of this node (for nodes that can have parents).</source>
          <target state="translated">(親を持つノード) の場合は、このノードの親ノードを取得します。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Always returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">常に返します<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to preserve white space in element content.</source>
          <target state="translated">取得または要素のコンテンツで空白を保持するかどうかを示す値を設定します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>This property determines how white space is handled during the load and save process.</source>
          <target state="translated">このプロパティは、空白文字を読み込み中に処理する方法を決定し、プロセスを保存します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`PreserveWhitespace`</ph> is <ph id="ph2">`true`</ph> before &lt;xref:System.Xml.XmlDocument.Load%2A&gt; or &lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt; is called, white space nodes are preserved; otherwise, if this property is <ph id="ph3">`false`</ph>, significant white space is preserved, white space is not.</source>
          <target state="translated">場合<ph id="ph1">`PreserveWhitespace`</ph>は<ph id="ph2">`true`</ph>する前に&lt;xref:System.Xml.XmlDocument.Load%2A&gt;または&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;は呼び出されると、空白ノードは保持されている、それ以外の場合は、このプロパティは<ph id="ph3">`false`</ph>、有意の空白は保持されます、空白文字はありません&lt;/xref:System.Xml.XmlDocument.LoadXml%2A&gt;&lt;/xref:System.Xml.XmlDocument.Load%2A&gt;。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`PreserveWhitespace`</ph> is <ph id="ph2">`true`</ph> before &lt;xref:System.Xml.XmlDocument.Save%2A&gt; is called, white space in the document is preserved in the output; otherwise, if this property is <ph id="ph3">`false`</ph>, <ph id="ph4">`XmlDocument`</ph> auto-indents the output.</source>
          <target state="translated">場合<ph id="ph1">`PreserveWhitespace`</ph>は<ph id="ph2">`true`</ph>する前に&lt;xref:System.Xml.XmlDocument.Save%2A&gt;が呼び出されると、ドキュメント内の空白は、出力で保持されている、それ以外の場合は、このプロパティは<ph id="ph3">`false`</ph>、<ph id="ph4">`XmlDocument`</ph>自動インデント出力&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve white space; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>空白; を保存するにはそれ以外の場合<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">既定値は<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object based on the information in the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">作成、 <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlReader&gt;情報に基づいて、オブジェクト。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The reader must be positioned on a node or attribute.</source>
          <target state="translated">リーダーは、ノードまたは属性に配置されている必要があります。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Reads one <ph id="ph1">`XmlNode`</ph> from the given reader and positions the reader on the next node.</source>
          <target state="translated">1 つを読み取ります<ph id="ph1">`XmlNode`</ph>指定したリーダーから次のノードにリーダーを配置するとします。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>This method creates the type of <ph id="ph1">`XmlNode`</ph> matching the &lt;xref:System.Xml.XmlNode.NodeType%2A&gt; on which the reader is currently positioned.</source>
          <target state="translated">このメソッドの型を作成する<ph id="ph1">`XmlNode`</ph>に一致する、&lt;xref:System.Xml.XmlNode.NodeType%2A&gt;にリーダーが現在配置されている&lt;/xref:System.Xml.XmlNode.NodeType%2A&gt;。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>(If the reader is in the initial state, <ph id="ph1">`ReadNode`</ph> advances the reader to the first node and then operates on that node.)       If the reader is positioned on the start of an element, <ph id="ph2">`ReadNode`</ph> reads all the attributes and any child nodes, up to and including the end tag of the current node.</source>
          <target state="translated">(場合は、リーダーが初期の状態に<ph id="ph1">`ReadNode`</ph>最初のノードにリーダーを進めます、し、そのノードで動作します)。     要素の開始時に、リーダーが配置されている場合<ph id="ph2">`ReadNode`</ph>読み取りすべての属性および子ノード、まで、現在のノードの終了タグを含むです。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> returned contains the sub-tree representing everything read.</source>
          <target state="translated"><ph id="ph1">`XmlNode`</ph>返されるサブに読み取ったすべての内容を表すツリーが含まれています。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The reader is positioned immediately after the end tag.</source>
          <target state="translated">リーダーは、終了タグの直後に配置されます。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ReadNode`</ph> can also read attributes, but in this case it does not advance the reader to the next attribute.</source>
          <target state="translated"><ph id="ph1">`ReadNode`</ph>属性を読み取ることもできますが、ここには進みませんリーダー [次へ] の属性です。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>This allows you to write the following C# code:      <ph id="ph1">```   XmlDocument doc = new XmlDocument();   while (reader.MoveToNextAttribute())   {     XmlNode a = doc.ReadNode(reader);     // Do some more processing.   }   ```</ph>       <ph id="ph2">`ReadNode`</ph> does consume the attribute value though, which means after calling <ph id="ph3">`ReadNode`</ph> on an attribute, &lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName&gt; returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">これにより、次の c# コードを記述する: <ph id="ph1">```   XmlDocument doc = new XmlDocument();   while (reader.MoveToNextAttribute())   {     XmlNode a = doc.ReadNode(reader);     // Do some more processing.   }   ```</ph> <ph id="ph2">`ReadNode`</ph>消費属性の値は、呼び出した後は<ph id="ph3">`ReadNode`</ph>属性上&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName&gt;を返します<ph id="ph4">`false`</ph>&lt;/xref:System.Xml.XmlReader.ReadAttributeValue%2A?displayProperty=fullName&gt;。       </target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The XML source</source>
          <target state="translated">XML ソース</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no more nodes exist.</source>
          <target state="translated">新しい<bpt id="p1">&lt;xref uid="langword_csharp_XmlNode" name="XmlNode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>または<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>ない複数のノードが存在しない場合。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The reader is positioned on a node type that does not translate to a valid DOM node (for example, EndElement or EndEntity).</source>
          <target state="translated">リーダーは有効な DOM ノード (たとえば、EndElement や EndEntity など) に変換されないノード型に位置付けられます。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified stream.</source>
          <target state="translated">指定したストリームに XML ドキュメントを保存します。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>White space is preserved only if &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">場合にのみ、空白文字は保持&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;に設定されている<ph id="ph1">`true`</ph>&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The XmlDeclaration of the current <ph id="ph1">`XmlDocument`</ph> object determines the encoding attribute in the saved document.</source>
          <target state="translated">現在の XmlDeclaration<ph id="ph1">`XmlDocument`</ph>オブジェクトは保存されたドキュメントのエンコーディング属性を決定します。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The value of the encoding attribute is taken from the &lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">エンコーディング属性の値がから取得、&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`XmlDocument`</ph> does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</source>
          <target state="translated">場合、<ph id="ph1">`XmlDocument`</ph>は XmlDeclaration がないか、XmlDeclaration にエンコーディング属性、保存されたドキュメントはありませんいずれかのいずれか。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</source>
          <target state="translated">ドキュメントを保存すると、ノードの id (ローカル名と名前空間 URI) を正しく維持する xmlns 属性が生成されます。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>For example, the following C# code      <ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>       generates this xmls attribute <ph id="ph2">`&lt;item xmls="urn:1"/&gt;`</ph>.</source>
          <target state="translated">たとえば、次 c# コード<ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>この xml 属性を生成<ph id="ph2">`&lt;item xmls="urn:1"/&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Note that only the &lt;xref:System.Xml.XmlDocument.Save%2A&gt; method enforces a well-formed XML document.</source>
          <target state="translated">のみです、&lt;xref:System.Xml.XmlDocument.Save%2A&gt;メソッドは、整形式 XML ドキュメントを強制します&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
          <target state="translated">他のすべての<ph id="ph1">`Save`</ph>オーバー ロードは、整形式のフラグメントをのみ保証されます。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The stream to which you want to save.</source>
          <target state="translated">保存するストリーム。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
          <target state="translated">操作の結果、整形式 XML ドキュメント (たとえば、ありませんドキュメント要素 XML 宣言が重複して) にありません。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">指定した&lt;xref:System.IO.TextWriter&gt;。&lt;/xref:System.IO.TextWriter&gt;に XML ドキュメントを保存します。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The encoding on the <ph id="ph1">`TextWriter`</ph> determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the <ph id="ph2">`TextWriter`</ph>).</source>
          <target state="translated">エンコード、<ph id="ph1">`TextWriter`</ph>書き込まれるエンコーディングが決定 (XmlDeclaration ノードのエンコードが置き換えのエンコード、 <ph id="ph2">`TextWriter`</ph>)。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>If there was no encoding specified on the <ph id="ph1">`TextWriter`</ph>, the <ph id="ph2">`XmlDocument`</ph> is saved without an encoding attribute.</source>
          <target state="translated">ないかどうかに指定されたエンコーディング、<ph id="ph1">`TextWriter`</ph>では、<ph id="ph2">`XmlDocument`</ph>エンコーディング属性なしで保存されます。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Note that only the &lt;xref:System.Xml.XmlDocument.Save%2A&gt; method enforces a well-formed XML document.</source>
          <target state="translated">のみです、&lt;xref:System.Xml.XmlDocument.Save%2A&gt;メソッドは、整形式 XML ドキュメントを強制します&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
          <target state="translated">他のすべての<ph id="ph1">`Save`</ph>オーバー ロードは、整形式のフラグメントをのみ保証されます。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextWriter" name="TextWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you want to save.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextWriter" name="TextWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を保存します。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
          <target state="translated">操作の結果、整形式 XML ドキュメント (たとえば、ありませんドキュメント要素 XML 宣言が重複して) にありません。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified file.</source>
          <target state="translated">指定したファイルに XML ドキュメントを保存します。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>If the specified file exists, this method overwrites it.</source>
          <target state="translated">指定したファイルが存在する場合、このメソッドが上書きされます。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>White space is preserved in the output file only if &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">出力ファイルが場合のみに空白文字は保持&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;に設定されている<ph id="ph1">`true`</ph>&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The XmlDeclaration of the current <ph id="ph1">`XmlDocument`</ph> object determines the encoding attribute in the saved document.</source>
          <target state="translated">現在の XmlDeclaration<ph id="ph1">`XmlDocument`</ph>オブジェクトは保存されたドキュメントのエンコーディング属性を決定します。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The value of the encoding attribute is taken from the &lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">エンコーディング属性の値がから取得、&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;プロパティ&lt;/xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`XmlDocument`</ph> does not have an XmlDeclaration, or if the XmlDeclaration does not have an encoding attribute, the saved document will not have one either.</source>
          <target state="translated">場合、<ph id="ph1">`XmlDocument`</ph>は XmlDeclaration がないか、XmlDeclaration にエンコーディング属性、保存されたドキュメントはありませんいずれかのいずれか。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (local name + namespace URI) correctly.</source>
          <target state="translated">ドキュメントを保存すると、ノードの id (ローカル名と名前空間 URI) を正しく維持する xmlns 属性が生成されます。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>For example, the following C# code      <ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>       generates this xmls attribute <ph id="ph2">`&lt;item xmls="urn:1"/&gt;`</ph>.</source>
          <target state="translated">たとえば、次 c# コード<ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>この xml 属性を生成<ph id="ph2">`&lt;item xmls="urn:1"/&gt;`</ph>です。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Note that only the Save method enforces a well-formed XML document.</source>
          <target state="translated">Save メソッドのみが整形式 XML ドキュメントによって適用されるに注意してください。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
          <target state="translated">他のすべての<ph id="ph1">`Save`</ph>オーバー ロードは、整形式のフラグメントをのみ保証されます。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The location of the file where you want to save the document.</source>
          <target state="translated">ドキュメントを保存するファイルの場所。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
          <target state="translated">操作の結果、整形式 XML ドキュメント (たとえば、ありませんドキュメント要素 XML 宣言が重複して) にありません。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Saves the XML document to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">指定した&lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;に XML ドキュメントを保存します。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>White space is preserved only if &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; is set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">場合にのみ、空白文字は保持&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;に設定されている<ph id="ph1">`true`</ph>&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The encoding on the <ph id="ph1">`XmlWriter`</ph> determines the encoding that is written out (The encoding of the XmlDeclaration node is replaced by the encoding of the <ph id="ph2">`XmlWriter`</ph>).</source>
          <target state="translated">エンコード、<ph id="ph1">`XmlWriter`</ph>書き込まれるエンコーディングが決定 (XmlDeclaration ノードのエンコードが置き換えのエンコード、 <ph id="ph2">`XmlWriter`</ph>)。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>If there was no encoding specified on the <ph id="ph1">`XmlWriter`</ph>, the <ph id="ph2">`XmlDocument`</ph> is saved without an encoding attribute.</source>
          <target state="translated">ないかどうかに指定されたエンコーディング、<ph id="ph1">`XmlWriter`</ph>では、<ph id="ph2">`XmlDocument`</ph>エンコーディング属性なしで保存されます。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>When the document is saved, xmlns attributes are generated to persist the node identity (LocalName + NamespaceURI) correctly.</source>
          <target state="translated">ドキュメントの保存を正しく (LocalName + NamespaceURI) のノード id を保持する xmlns 属性が生成されます。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>For example, the following C# code      <ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>       generates this xmls attribute:      <ph id="ph2">```   &lt;item       xmls="urn:1"/&gt;   ```</ph>       This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">たとえば、次 c# コード<ph id="ph1">```   XmlDocument doc = new XmlDocument();   doc.AppendChild(doc.CreateElement("item","urn:1"));   doc.Save(Console.Out);   ```</ph>この xml 属性が生成されます:<ph id="ph2">```   &lt;item       xmls="urn:1"/&gt;   ```</ph>このメソッドは、Microsoft 拡張機能ドキュメント オブジェクト モデル (DOM) にします。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Note that only the &lt;xref:System.Xml.XmlDocument.Save%2A&gt; method enforces a well-formed XML document.</source>
          <target state="translated">のみです、&lt;xref:System.Xml.XmlDocument.Save%2A&gt;メソッドは、整形式 XML ドキュメントを強制します&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>All other <ph id="ph1">`Save`</ph> overloads only guarantee a well-formed fragment.</source>
          <target state="translated">他のすべての<ph id="ph1">`Save`</ph>オーバー ロードは、整形式のフラグメントをのみ保証されます。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you want to save.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を保存します。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The operation would not result in a well formed XML document (for example, no document element or duplicate XML declarations).</source>
          <target state="translated">操作の結果、整形式 XML ドキュメント (たとえば、ありませんドキュメント要素 XML 宣言が重複して) にありません。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Returns the Post-Schema-Validation-Infoset (PSVI) of the node.</source>
          <target state="translated">ポスト-スキーマの検証情報セット (PSVI) ノードを返します。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The PSVI contents of this property are set after the node has been validated.</source>
          <target state="translated">このプロパティの PSVI の内容は、ノードの検証後に設定されます。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object representing the PSVI of the node.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>ノードの PSVI を表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with this <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得または設定、 <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトに関連付けられた<bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The schemas contained in an &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object associated with an &lt;xref:System.Xml.XmlDocument&gt; object are used for validation when the &lt;xref:System.Xml.XmlDocument.Validate%2A&gt; method of an &lt;xref:System.Xml.XmlDocument&gt; is executed.</source>
          <target state="translated">含まれているスキーマ、&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;オブジェクトに関連付けられている、&lt;xref:System.Xml.XmlDocument&gt;オブジェクトの検証に使用時に、&lt;xref:System.Xml.XmlDocument.Validate%2A&gt;のメソッド、&lt;xref:System.Xml.XmlDocument&gt;を実行します&lt;/xref:System.Xml.XmlDocument&gt;&lt;/xref:System.Xml.XmlDocument.Validate%2A&gt;&lt;/xref:System.Xml.XmlDocument&gt;&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>When an &lt;xref:System.Xml.XmlDocument&gt; object is initialized with XML data from an &lt;xref:System.Xml.XmlReader&gt; object, the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object is loaded from the &lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt; property of the &lt;xref:System.Xml.XmlReader&gt; object.</source>
          <target state="translated">ときに、&lt;xref:System.Xml.XmlDocument&gt;から XML データをオブジェクトが初期化されて、&lt;xref:System.Xml.XmlReader&gt;オブジェクト、&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;からオブジェクトが読み込まれて、&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;のプロパティ、&lt;xref:System.Xml.XmlReader&gt;オブジェクト&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the XML Schema Definition Language (XSD) schemas associated with this <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, an empty <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトに関連付けられた XML スキーマ定義言語 (XSD) スキーマを含んでいる<bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。 それ以外の場合、空<bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Validates the <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> against the XML Schema Definition Language (XSD) schemas contained in the &lt;xref:System.Xml.XmlDocument.Schemas*&gt; property.</source>
          <target state="translated">検証、 <bpt id="p1">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>に含まれている XML スキーマ定義言語 (XSD) スキーマに対して、&lt;xref:System.Xml.XmlDocument.Schemas*&gt;プロパティ&lt;/xref:System.Xml.XmlDocument.Schemas*&gt;。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>The Validate method validates the XML data in the &lt;xref:System.Xml.XmlDocument&gt; against the schemas contained in the &lt;xref:System.Xml.XmlDocument.Schemas%2A&gt; property.</source>
          <target state="translated">タスクの Validate メソッド内の XML データの検証、&lt;xref:System.Xml.XmlDocument&gt;に含まれているスキーマに対して、&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;プロパティ&lt;/xref:System.Xml.XmlDocument.Schemas%2A&gt;&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The Validate method performs infoset augmentation.</source>
          <target state="translated">タスクの Validate メソッドでは、情報セットの拡大を実行します。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</source>
          <target state="translated">具体的には、検証が成功した後にスキーマの既定値が適用される、テキスト値が必要に応じて、アトミック値に変換および型情報が検証済みの情報項目に関連付けられます。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>The result is a previously un-typed XML sub-tree in the &lt;xref:System.Xml.XmlDocument&gt; replaced with a typed sub-tree.</source>
          <target state="translated">結果は、以前型指定されていない XML サブツリーで、&lt;xref:System.Xml.XmlDocument&gt;に型指定されたサブツリーに置き換えられます&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the Validate method.</source>
          <target state="translated">タスクの Validate メソッドを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>-   Schema location hints like <ph id="ph1">`xsi:schemaLocation`</ph> or <ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph> are ignored.</source>
          <target state="translated">スキーマの場所のヒントと同様に<ph id="ph1">`xsi:schemaLocation`</ph>または<ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph>は無視されます。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>-   Inline schemas are ignored.</source>
          <target state="translated">インライン スキーマは無視されます。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>-   If schema validation errors occur during validation the &lt;xref:System.Xml.XmlDocument&gt; becomes partially validated with some nodes with correct type information and some without.</source>
          <target state="translated">検証中にスキーマ検証エラーが発生する場合、&lt;xref:System.Xml.XmlDocument&gt;と適切な型情報を含むいくつかのノードで部分的に有効になる&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>-   The validation process includes checking for uniqueness and reference constraints (<ph id="ph1">`xs:ID`</ph>, <ph id="ph2">`xs:IDREF`</ph>, <ph id="ph3">`xs:key`</ph>, <ph id="ph4">`xs:keyref`</ph>, and <ph id="ph5">`xs:unique`</ph>).</source>
          <target state="translated">-検証プロセスには、一意性と参照の制約のチェックが含まれています (<ph id="ph1">`xs:ID`</ph>、 <ph id="ph2">`xs:IDREF`</ph>、 <ph id="ph3">`xs:key`</ph>、 <ph id="ph4">`xs:keyref`</ph>、および<ph id="ph5">`xs:unique`</ph>)。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that receives information about schema validation warnings and errors.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマ検証警告とエラーに関する情報を受け取るオブジェクト。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A schema validation event occurred and no <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was specified.</source>
          <target state="translated">スキーマ検証イベントが発生したおよび no <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが指定されました。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Validates the <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specified against the XML Schema Definition Language (XSD) schemas in the &lt;xref:System.Xml.XmlDocument.Schemas*&gt; property.</source>
          <target state="translated">検証、 <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XML スキーマ定義言語 (XSD) スキーマで指定されたオブジェクト、&lt;xref:System.Xml.XmlDocument.Schemas*&gt;プロパティ&lt;/xref:System.Xml.XmlDocument.Schemas*&gt;。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The Validate method validates the XML data in the &lt;xref:System.Xml.XmlNode&gt; object against the schemas contained in the &lt;xref:System.Xml.XmlDocument.Schemas%2A&gt; property.</source>
          <target state="translated">タスクの Validate メソッド内の XML データの検証、&lt;xref:System.Xml.XmlNode&gt;オブジェクトに含まれているスキーマに対して、&lt;xref:System.Xml.XmlDocument.Schemas%2A&gt;プロパティ&lt;/xref:System.Xml.XmlDocument.Schemas%2A&gt;&lt;/xref:System.Xml.XmlNode&gt;。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The Validate method performs infoset augmentation.</source>
          <target state="translated">タスクの Validate メソッドでは、情報セットの拡大を実行します。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Specifically, after successful validation, schema defaults are applied, text values are converted to atomic values as necessary, and type information is associated with validated information items.</source>
          <target state="translated">具体的には、検証が成功した後にスキーマの既定値が適用される、テキスト値が必要に応じて、アトミック値に変換および型情報が検証済みの情報項目に関連付けられます。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The result is a previously un-typed XML sub-tree in the &lt;xref:System.Xml.XmlDocument&gt; replaced with a typed sub-tree.</source>
          <target state="translated">結果は、以前型指定されていない XML サブツリーで、&lt;xref:System.Xml.XmlDocument&gt;に型指定されたサブツリーに置き換えられます&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the Validate method.</source>
          <target state="translated">タスクの Validate メソッドを使用する際に考慮する重要な注意事項を次に示します。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>-   Schema location hints like <ph id="ph1">`xsi:schemaLocation`</ph> or <ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph> are ignored.</source>
          <target state="translated">スキーマの場所のヒントと同様に<ph id="ph1">`xsi:schemaLocation`</ph>または<ph id="ph2">`xsi:noNamespaceSchemaLocation`</ph>は無視されます。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>-   Inline schemas are ignored.</source>
          <target state="translated">インライン スキーマは無視されます。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>-   If schema validation errors occur during validation the &lt;xref:System.Xml.XmlDocument&gt; becomes partially validated with some nodes with correct type information and some without.</source>
          <target state="translated">検証中にスキーマ検証エラーが発生する場合、&lt;xref:System.Xml.XmlDocument&gt;と適切な型情報を含むいくつかのノードで部分的に有効になる&lt;/xref:System.Xml.XmlDocument&gt;。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>If the node to validate is the root node, the validation process includes checking for uniqueness and reference constraints (<ph id="ph1">`xs:ID`</ph>, <ph id="ph2">`xs:IDREF`</ph>, <ph id="ph3">`xs:key`</ph>, <ph id="ph4">`xs:keyref`</ph>, and <ph id="ph5">`xs:unique`</ph>); otherwise, uniqueness and reference constraints are omitted.</source>
          <target state="translated">検証するノードが、ルート ノードの場合は、検証プロセスでは、一意性と参照の制約をチェック (<ph id="ph1">`xs:ID`</ph>、 <ph id="ph2">`xs:IDREF`</ph>、 <ph id="ph3">`xs:key`</ph>、<ph id="ph4">`xs:keyref`</ph>と<ph id="ph5">`xs:unique`</ph>)、それ以外の一意性と参照の制約を省略しています。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that receives information about schema validation warnings and errors.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>スキーマ検証警告とエラーに関する情報を受け取るオブジェクト。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object created from an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to validate.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>から作成されたオブジェクト、 <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>を検証します。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object parameter was not created from an <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>からオブジェクトのパラメーターが作成されませんでした、 <bpt id="p2">&lt;xref href="System.Xml.XmlDocument"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object parameter is not an element, attribute, document fragment, or the root node.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクト パラメーターは、要素、属性、ドキュメント フラグメント、またはルート ノードではありません。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>A schema validation event occurred and no <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object was specified.</source>
          <target state="translated">スキーマ検証イベントが発生したおよび no <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>オブジェクトが指定されました。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Saves all the children of the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">すべての子を保存、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Xml.XmlWriter&gt;&lt;/xref:System.Xml.XmlWriter&gt;ノード。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to the &lt;xref:System.Xml.XmlDocument.InnerXml%2A&gt; property.</source>
          <target state="translated">これは機能的に等価、&lt;xref:System.Xml.XmlDocument.InnerXml%2A&gt;プロパティ&lt;/xref:System.Xml.XmlDocument.InnerXml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt; property determines the encoding that is written out.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;プロパティは、書き込まれるエンコードを判断します&lt;/xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Encoding`</ph> property does not have a value, the <ph id="ph2">`XmlDocument`</ph> is written out without an encoding attribute.</source>
          <target state="translated">場合、<ph id="ph1">`Encoding`</ph>プロパティに値がありません、<ph id="ph2">`XmlDocument`</ph>エンコーディング属性がない場合は書き出さです。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you want to save.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を保存します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Saves the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> node to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">保存、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDocument" name="XmlDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Xml.XmlWriter&gt;&lt;/xref:System.Xml.XmlWriter&gt;ノード。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>It is functionally equivalent to the &lt;xref:System.Xml.XmlNode.OuterXml%2A&gt; property.</source>
          <target state="translated">これは機能的に等価、&lt;xref:System.Xml.XmlNode.OuterXml%2A&gt;プロパティ&lt;/xref:System.Xml.XmlNode.OuterXml%2A&gt;。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt; property determines the encoding that is written out.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;プロパティは、書き込まれるエンコードを判断します&lt;/xref:System.Xml.XmlDeclaration.Encoding%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Encoding`</ph> property does not have a value, the <ph id="ph2">`XmlDocument`</ph> is written out without an encoding attribute.</source>
          <target state="translated">場合、<ph id="ph1">`Encoding`</ph>プロパティに値がありません、<ph id="ph2">`XmlDocument`</ph>エンコーディング属性がない場合は書き出さです。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to which you want to save.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>を保存します。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use for resolving external resources.</source>
          <target state="translated">セット、 <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>外部のリソースを解決するのに使用します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlResolver`</ph> can be used to load DTDs or expand entity references.</source>
          <target state="translated"><ph id="ph1">`XmlResolver`</ph> Dtd の読み込みまたはエンティティ参照の展開に使用できます。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt; property, you can set credentials on the <ph id="ph1">`XmlResolver`</ph> to access resources stored on a secure network resource.</source>
          <target state="translated">使用して、&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;プロパティ、資格情報を設定することができます、<ph id="ph1">`XmlResolver`</ph>セキュリティで保護されたネットワーク リソースに格納されているリソースにアクセスします&lt;/xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>-   If the document was not loaded using an &lt;xref:System.Xml.XmlReader&gt; (that is, if it was loaded using a stream, file, and so on) the <ph id="ph1">`XmlResolver`</ph> on the <ph id="ph2">`XmlDocument`</ph> is always used.</source>
          <target state="translated">-ドキュメントが読み込まれていない場合を使用して、 &lt;xref:System.Xml.XmlReader&gt;(つまり、ストリームを使用して読み込まれて、ファイル、しなど)、<ph id="ph1">`XmlResolver`</ph>上、<ph id="ph2">`XmlDocument`</ph>は常に使用します&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>-   If the document was loaded with an &lt;xref:System.Xml.XmlTextReader&gt;, the resolver on the <ph id="ph1">`XmlTextReader`</ph> is used to resolve any DTD references in the DocumentType node.</source>
          <target state="translated">場合は、ドキュメントを搭載した、&lt;xref:System.Xml.XmlTextReader&gt;で競合回避モジュール、 <ph id="ph1">`XmlTextReader`</ph> DocumentType ノードで DTD 参照の解決に使用します&lt;/xref:System.Xml.XmlTextReader&gt;。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The resolver on the <ph id="ph1">`XmlDocument`</ph> is used to expand any entity references.</source>
          <target state="translated">競合回避モジュール、<ph id="ph1">`XmlDocument`</ph>は任意のエンティティ参照の展開に使用します。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>-   If the document was loaded with an &lt;xref:System.Xml.XmlValidatingReader&gt;, the resolver on the <ph id="ph1">`XmlDocument`</ph> is never used.</source>
          <target state="translated">-でドキュメントが読み込まれた場合、&lt;xref:System.Xml.XmlValidatingReader&gt;で競合回避モジュール、<ph id="ph1">`XmlDocument`</ph>が使用されていません&lt;/xref:System.Xml.XmlValidatingReader&gt;。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>-   If the document was loaded with a class that extends <ph id="ph1">`XmlReader`</ph> and the <ph id="ph2">`XmlReader`</ph> cannot resolve entities (&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A&gt; returns <ph id="ph3">`false`</ph>), the <ph id="ph4">`XmlResolver`</ph> on the <ph id="ph5">`XmlDocument`</ph> is used to resolve any references in the DocumentType node and to expand any entity references.</source>
          <target state="translated">-を拡張するクラスとドキュメントが読み込まれた場合<ph id="ph1">`XmlReader`</ph>と<ph id="ph2">`XmlReader`</ph>エンティティを解決できません (&lt;xref:System.Xml.XmlReader.CanResolveEntity%2A&gt;を返します<ph id="ph3">`false`</ph>) では、<ph id="ph4">`XmlResolver`</ph>上、 <ph id="ph5">`XmlDocument`</ph> DocumentType ノードのすべての参照を解決するのには、任意のエンティティ参照を展開するために使用します&lt;/xref:System.Xml.XmlReader.CanResolveEntity%2A&gt;。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the <ph id="ph2">`XmlDocument`</ph> is loaded using an &lt;xref:System.Xml.XmlReader&gt; which had an <ph id="ph3">`XmlResolver`</ph> set to it, the <ph id="ph4">`XmlResolver`</ph> on the <ph id="ph5">`XmlReader`</ph> is not cached by the <ph id="ph6">`XmlDocument`</ph> after &lt;xref:System.Xml.XmlDocument.Load%2A&gt; completes.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 場合、<ph id="ph2">`XmlDocument`</ph>を使用して読み込まれる、&lt;xref:System.Xml.XmlReader&gt;上げた、<ph id="ph3">`XmlResolver`</ph>設定するには、<ph id="ph4">`XmlResolver`</ph>上、<ph id="ph5">`XmlReader`</ph>によってキャッシュされていない、<ph id="ph6">`XmlDocument`</ph>後&lt;xref:System.Xml.XmlDocument.Load%2A&gt;が完了する&lt;/xref:System.Xml.XmlDocument.Load%2A&gt;&lt;/xref:System.Xml.XmlReader&gt;。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the.NET Framework, if this property is not set, the trust level of the application determines the default behavior.</source>
          <target state="translated">.Net Framework のバージョン 1.1 でこのプロパティが設定されていない場合、アプリケーションの信頼レベルは、既定の動作を決定します。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Fully trusted code:`</ph> The document uses a default &lt;xref:System.Xml.XmlUrlResolver&gt; with no user credentials.</source>
          <target state="translated"><ph id="ph1">`Fully trusted code:`</ph>ドキュメントは、既定値を使用して&lt;xref:System.Xml.XmlUrlResolver&gt;ユーザー資格情報を持たない&lt;/xref:System.Xml.XmlUrlResolver&gt;。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>If authentication is required to access a network resource, use the <ph id="ph1">`XmlResolver`</ph> property to specify an <ph id="ph2">`XmlResolver`</ph> with the necessary credentials.</source>
          <target state="translated">ネットワーク リソースへのアクセスを認証が必要な場合を使用して、<ph id="ph1">`XmlResolver`</ph>プロパティを指定する、<ph id="ph2">`XmlResolver`</ph>必要な資格情報を使用します。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Semi-trusted code:`</ph> The <ph id="ph2">`XmlResolver`</ph> property is set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`Semi-trusted code:`</ph><ph id="ph2">`XmlResolver`</ph>プロパティに設定されている<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>External resources are not resolved.</source>
          <target state="translated">外部リソースは解決されません。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>For more information on security and the <ph id="ph1">`XmlResolver`</ph> property, see <bpt id="p1">[</bpt>Resolving External Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">セキュリティの詳細については、<ph id="ph1">`XmlResolver`</ph>プロパティを参照してください<bpt id="p1">[</bpt>外部リソースの解決<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
          <target state="translated">このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</source>
          <target state="translated">The <bpt id="p1">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>In version 1.1 of the.NET Framework, the caller must be fully trusted in order to specify an <bpt id="p1">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">.Net Framework のバージョン 1.1 では、呼び出し元を指定するために完全に信頼にする必要があります、 <bpt id="p1">&lt;xref uid="langword_csharp_XmlResolver" name="XmlResolver" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>This property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an external DTD or entity is encountered.</source>
          <target state="translated">このプロパティに設定<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>外部の DTD またはエンティティが発生したとします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>