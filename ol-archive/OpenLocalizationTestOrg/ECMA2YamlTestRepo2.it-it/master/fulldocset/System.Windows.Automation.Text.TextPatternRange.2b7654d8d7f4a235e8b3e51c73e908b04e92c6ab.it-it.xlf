<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ce462ec6d08f53e85ba17f2d1c8385fd5c72f20</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Text.TextPatternRange.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bc2543dafa7e3aeecb308c621e5fa929041bbf8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d4e5212b60b890f55de14778ddcb2b8d31f2f0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a span of continuous text in a <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> container.</source>
          <target state="translated">Rappresenta un intervallo di testo continuo in un <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> contenitore.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A TextPatternRange can represent an insertion point, a subset, or all of the text in a &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">Un TextPatternRange può rappresentare un punto di inserimento, un subset o tutto il testo in un &lt;xref:System.Windows.Automation.TextPattern&gt;contenitore.&lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A TextPatternRange will become invalid if one of the following occurs: the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container changes because of some user activity, or the &lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; method of &lt;xref:System.Windows.Automation.ValuePattern&gt; is used to programmatically change the value of the text in the &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">Un TextPatternRange non sarà più valide se si verifica una delle operazioni seguenti: il testo nel &lt;xref:System.Windows.Automation.TextPattern&gt;modifiche contenitore a causa di alcune attività dell'utente, o &lt;xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt;metodo &lt;xref:System.Windows.Automation.ValuePattern&gt;consente di modificare a livello di codice il valore del testo nel &lt;xref:System.Windows.Automation.TextPattern&gt;contenitore.&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern&gt; &lt;/xref:System.Windows.Automation.ValuePattern.SetValue%2A&gt; &lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Aggiunge alla raccolta di testo evidenziato in un contenitore di testo che supporta più, selezioni non contigue.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">Consente di spostare il punto di inserimento nell'area della nuova selezione.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">Fornisce un intervallo di testo degenerato sposta il punto di inserimento.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Se il provider di testo non supporta più selezioni non contigue (ad esempio, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;deve avere un valore di <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Retrieves a new <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identical to the original <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and inheriting all properties of the original.</source>
          <target state="translated">Recupera un nuovo <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> identica all'originale <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRange"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> e che eredita tutte le proprietà dell'originale.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, create a new &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; from the &lt;xref:System.Windows.Automation.TextPattern&gt; and move the two endpoints to correspond with the endpoints of the original text range.</source>
          <target state="translated">In alternativa, creare un nuovo &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;dal &lt;xref:System.Windows.Automation.TextPattern&gt;e spostare i due endpoint in modo che corrispondano con gli endpoint dell'intervallo di testo originale.&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">Il nuovo intervallo può essere modificato in modo indipendente dall'originale.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The new text range.</source>
          <target state="translated">Nuovo intervallo di testo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) is never returned.</source>
          <target state="translated">Un riferimento null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) non viene mai restituito.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Boolean&gt; value indicating whether the span (the <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> endpoint to the <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">Restituisce un &lt;xref:System.Boolean&gt;valore che indica se l'intervallo (il <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> endpoint per il <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> endpoint) di un testo intervallo corrisponde a un altro intervallo di testo.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A text range to compare.</source>
          <target state="translated">Un intervallo di testo da confrontare.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the span of both text ranges is identical; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se l'ampiezza di entrambi gli intervalli di testo è identica. in caso contrario <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">Se l'intervallo da confrontare non proviene dallo stesso provider di testo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Int32&gt; indicating whether two text ranges have identical endpoints.</source>
          <target state="translated">Restituisce un &lt;xref:System.Int32&gt;che indica se due intervalli di testo presentano endpoint identici.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>By comparing the starting and ending endpoints of the same text range you can identify if a text range is degenerate or if the endpoints are in the order of logical text flow.</source>
          <target state="translated">Confrontando gli endpoint iniziale e finale dell'intervallo di testo stesso è possibile identificare se un intervallo di testo degenerato o se gli endpoint sono in ordine di flusso di testo logico.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the caller.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> o <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> endpoint del chiamante.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The target range for comparison.</source>
          <target state="translated">L'intervallo di destinazione per il confronto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the target.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> o <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> endpoint di destinazione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">Restituisce un valore negativo se l'endpoint del chiamante si verifica nel testo prima dell'endpoint di destinazione.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">Restituisce zero se l'endpoint del chiamante è nella stessa posizione dell'endpoint di destinazione.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">Restituisce un valore positivo se l'endpoint del chiamante si trova nel testo dell'endpoint di destinazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If range is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Se l'intervallo è un riferimento null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If range is from another container.</source>
          <target state="translated">Se l'intervallo è da un altro contenitore.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Expands the text range to the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Espande l'intervallo di testo specificata <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">Se l'intervallo è già una quantità esatta delle unità di misura specificata e rimane invariato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for the ExpandToEnclosingUnit method to execute successfully, a sequence of actions is performed behind the scenes.</source>
          <target state="translated">Affinché il metodo ExpandToEnclosingUnit venga eseguito correttamente, viene eseguita una sequenza di azioni in background.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, making the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">L'intervallo di testo viene normalizzato; l'intervallo di testo viene compresso in un intervallo degenerato il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint, rendendo il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint superfluo.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui si estende un intervallo di testo <ph id="ph1">`unit`</ph> limiti, ad esempio "{l'U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> è incorporato nel testo" dove "{" e "}" rappresentano il testo di endpoint dell'intervallo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo risultante viene spostato indietro &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;all'inizio dell'oggetto richiesto <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">L'intervallo viene spostato avanti o indietro nel &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;per il numero richiesto di <ph id="ph1">`unit`</ph> limiti.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint da una richiesta <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated"><bpt id="p1">![</bpt>Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p2">")</ept> esempi di regolazione di un intervallo di testo per Move ed ExpandToEnclosingUnit () &gt; <ph id="ph1">[!NOTE]</ph> &gt; questi passaggi sono necessari poiché è comune per la lettura del contenuto lette una completa parola, frase o un paragrafo intero al punto di inserimento o da qualsiasi posizione del cursore virtuale.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>ExpandToEnclosingUnit respects both hidden and visible text.</source>
          <target state="translated">ExpandToEnclosingUnit rispetta il testo nascosto sia visibile.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">Il client di automazione interfaccia utente può controllare il &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>ExpandToEnclosingUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">ExpandToEnclosingUnit rinvia al successivo più grande &lt;xref:System.Windows.Automation.Text.TextUnit&gt;supportato se il dato &lt;xref:System.Windows.Automation.Text.TextUnit&gt;non è supportata dal controllo.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The textual unit.</source>
          <target state="translated">Unità testuale.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">Restituisce un sottoinsieme di intervallo di testo con il valore di attributo specificato.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Non vi è alcuna differenza tra il testo nascosto e visibile.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">I client di automazione interfaccia utente possono utilizzare &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;per controllare la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Utilizzare &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;per cercare l'intero documento.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The attribute to search for.</source>
          <target state="translated">L'attributo da cercare.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The attribute value to search for.</source>
          <target state="translated">Il valore dell'attributo da cercare.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">Questo valore deve corrispondere al tipo specificato per l'attributo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A text range having a matching attribute and attribute value; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Un intervallo di testo che presenta un attributo corrispondente e il valore di attributo. in caso contrario null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">Restituisce un sottoinsieme di intervallo di testo che contiene il testo specificato.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Non vi è alcuna differenza tra il testo nascosto e visibile.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">I client di automazione interfaccia utente possono utilizzare &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;per controllare la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to search the entire document.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Utilizzare &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;per cercare l'intero documento.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The text string to search for.</source>
          <target state="translated">La stringa di testo da cercare.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se deve essere restituito l'ultimo intervallo di testo invece del primo; in caso contrario <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if case should be ignored; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se il case deve essere ignorato; in caso contrario <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A text range matching the specified text; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">Un intervallo di testo corrispondente al testo specificato; in caso contrario null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute across the entire text range.</source>
          <target state="translated">Restituisce il valore dell'attributo specificato nell'intervallo di testo completo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Non vi è alcuna differenza tra il testo nascosto e visibile.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>UI Automation clients can use &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; to check text visibility.</source>
          <target state="translated">I client di automazione interfaccia utente possono utilizzare &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;per controllare la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The text attribute.</source>
          <target state="translated">Attributo di testo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified attribute.</source>
          <target state="translated">Restituisce il valore dell'attributo specificato.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, GetAttributeValue(TextPattern.FontNameAttribute) would return a string that represents the font name, if unique, of the text range while GetAttributeValue(TextPattern.IsItalicAttribute) would return a boolean.</source>
          <target state="translated">Ad esempio, GetAttributeValue restituirebbe una stringa che rappresenta il nome del carattere, se univoco, dell'intervallo di testo mentre GetAttributeValue restituirebbe un valore booleano.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">Restituisce <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se il valore dell'attributo specificato varia nell'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">Restituisce <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se l'attributo specificato non è supportata dal provider o il controllo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">Se l'attributo specificato non è valido.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">Recupera una raccolta di rettangoli di delimitazione per ogni riga di testo in un intervallo di testo completamente o parzialmente visibile.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">Matrice di rettangoli di delimitazione per ogni riga di testo in un intervallo di testo completo o parziale.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An empty array for a degenerate text range.</source>
          <target state="translated">Matrice vuota per un intervallo di testo degenerato.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">Matrice vuota per un intervallo di testo che presenta coordinate di schermo che lo collocano completamente, di fuori della visualizzazione o nascosto da una finestra sovrapposta.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">Recupera una raccolta di tutti gli oggetti incorporati che rientrano nell'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A collection of all child objects that fall within the range.</source>
          <target state="translated">Raccolta di tutti gli oggetti figlio che rientrano nell'intervallo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Children that overlap with the range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">Gli oggetti figlio che si sovrappongono all'intervallo ma non sono inclusi completamente da essa verranno inclusi anche nella raccolta.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">Restituisce una raccolta vuota se non sono presenti oggetti figlio.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns the innermost <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that encloses the text range.</source>
          <target state="translated">Restituisce il più interno <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che racchiude l'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enclosing &lt;xref:System.Windows.Automation.AutomationElement&gt;, typically the text provider that supplies the text range.</source>
          <target state="translated">Il tipo di inclusione &lt;xref:System.Windows.Automation.AutomationElement&gt;, in genere il provider di testo che fornisce l'intervallo di testo.&lt;/xref:System.Windows.Automation.AutomationElement&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">Tuttavia, se il provider di testo supporta elementi figlio, quali tabelle o collegamenti ipertestuali, l'elemento contenitore potrebbe essere un discendente del provider di testo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The innermost element enclosing the caller.</source>
          <target state="translated">L'elemento più interno che racchiude il chiamante.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns the plain text of the text range.</source>
          <target state="translated">Restituisce il testo normale dell'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetText respects both hidden and visible text.</source>
          <target state="translated">GetText rispetta il testo nascosto sia visibile.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">Il client di automazione interfaccia utente può controllare il &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">Se <ph id="ph1">`maxLength`</ph> è maggiore della lunghezza dell'intervallo di testo del chiamante, la stringa restituita sarà il testo normale dell'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetText will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated">GetText non verranno influenzati dall'ordine degli endpoint nel flusso di testo. Restituisce sempre il testo tra gli endpoint di inizio e di fine dell'intervallo di testo nell'ordine di flusso di testo logico.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The maximum length of the string to return.</source>
          <target state="translated">La lunghezza massima della stringa da restituire.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`-1`</ph> if no limit is required.</source>
          <target state="translated">Utilizzare <ph id="ph1">`-1`</ph> se è richiesto alcun limite.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The plain text of the text range, possibly truncated at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">Il testo normale dell'intervallo di testo, probabilmente troncato all'oggetto specificato <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1.</source>
          <target state="translated">Se <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept> è minore di -1.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">Sposta l'intervallo di testo, il numero specificato di unità di testo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the Move method to execute successfully.</source>
          <target state="translated">Quando è necessario scorrere il contenuto di un intervallo di testo, una serie di passaggi coinvolti in background in ordine per il metodo Move venga eseguito correttamente.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">L'intervallo di testo viene normalizzato; l'intervallo di testo viene compresso in un intervallo degenerato il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint, che rende il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint superfluo.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui si estende un intervallo di testo <ph id="ph1">`unit`</ph> limiti, ad esempio "{l'U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> è incorporato nel testo" dove "{" e "}" rappresentano il testo di endpoint dell'intervallo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo risultante viene spostato indietro &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;all'inizio dell'oggetto richiesto <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">L'intervallo viene spostato avanti o indietro nel &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;per il numero richiesto di <ph id="ph1">`unit`</ph> limiti.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint da una richiesta <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p2">")</ept> esempi di regolazione di un intervallo di testo per Move ed ExpandToEnclosingUnit () del contenuto testuale (o testo interno) di un contenitore di testo e un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia la visualizzazione controlli e la visualizzazione contenuto del <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> albero; vengono ignorati i limiti dell'oggetto.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">Se un client di automazione interfaccia utente sta recuperando il testo allo scopo di esposizione, interpretazione o analisi in qualche modo, l'intervallo di testo deve essere archiviato per casi speciali, ad esempio una tabella con contenuto testuale o altri incorporati oggetti.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">Questa operazione può essere eseguita chiamando &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;per ottenere un &lt;xref:System.Windows.Automation.AutomationElement&gt;per ogni oggetto incorporato e chiamando quindi &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;per ottenere un intervallo di testo per ogni elemento; questa operazione viene eseguita in modo ricorsivo fino a quando non è stato recuperato l'intero contenuto testuale.&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Intervalli di testo estesi da oggetti incorporati. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Gli intervalli di testo estesi da oggetti incorporati.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example of a text stream with embedded objects and their range spans       Move respects both hidden and visible text.</source>
          <target state="translated">Esempio di un flusso di testo con oggetti incorporati e il relativo intervallo si estende su Move equivalenti sia nascosti e il testo visibile.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">Il client di automazione interfaccia utente può controllare il &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Move defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">Spostamento rinvia al successivo più grande &lt;xref:System.Windows.Automation.Text.TextUnit&gt;supportato se il dato &lt;xref:System.Windows.Automation.Text.TextUnit&gt;non è supportata dal controllo.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  The text is not altered in any way as the text range just spans a different part of the text.</source>
          <target state="translated">- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il testo non viene modificato in alcun modo come l'intervallo di testo occupa solo una parte diversa del testo.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The text unit boundary.</source>
          <target state="translated">Il limite di unità di testo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The number of text units to move.</source>
          <target state="translated">Il numero di unità di testo da spostare.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">Un valore positivo sposta in avanti l'intervallo di testo, un valore negativo consente di spostare l'intervallo di testo indietro e 0 non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The number of units actually moved.</source>
          <target state="translated">Il numero di unità effettivamente spostate.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt; endpoints.</source>
          <target state="translated">Può essere inferiore al numero richiesto se uno dei nuovi endpoint di intervallo di testo è maggiore o minore rispetto al &lt;xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;endpoint.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange*&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">Sposta un endpoint di un intervallo di testo all'endpoint specificato di un secondo intervallo di testo.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; is always less than or equal to &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).</source>
          <target state="translated">Se l'endpoint spostato interseca l'altro endpoint dell'intervallo di testo stesso, l'altro endpoint viene spostato, inoltre, risultante in un intervallo degenerato e assicurando l'ordinamento corretto degli endpoint (vale a dire &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;è sempre minore o uguale a &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">Endpoint da spostare.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Another range from the same text provider.</source>
          <target state="translated">Un altro intervallo dallo stesso provider di testo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An endpoint on the other range.</source>
          <target state="translated">Un endpoint in altro intervallo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of the text range the specified number of <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>s within the document range.</source>
          <target state="translated">Sposta un endpoint del testo intervallo il numero specificato di <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextUnit"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>nell'intervallo del documento.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the &lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt; method to execute successfully.</source>
          <target state="translated">Quando è necessario scorrere il contenuto di un intervallo di testo, è prevista una serie di passaggi dietro le quinte per il &lt;xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;metodo venga eseguito correttamente.&lt;/xref:System.Windows.Automation.Text.TextPatternRange.Move%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">L'intervallo di testo viene normalizzato; l'intervallo di testo viene compresso in un intervallo degenerato il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint, che rende il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint superfluo.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Questo passaggio è necessario rimuovere l'ambiguità nei casi in cui si estende un intervallo di testo <ph id="ph1">`unit`</ph> limiti, ad esempio "{l'U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> è incorporato nel testo" dove "{" e "}" rappresentano il testo di endpoint dell'intervallo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo risultante viene spostato indietro &lt;xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;all'inizio dell'oggetto richiesto <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.TextPattern.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">L'intervallo viene quindi espanso dallo stato di intervallo degenerato spostando il &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint da una richiesta <ph id="ph1">`unit`</ph> limite.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>Regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>regolazioni di intervallo mediante Move / ExpandToEnclosingUnit<ept id="p2">")</ept> esempi di regolazione di un intervallo di testo per Move ed ExpandToEnclosingUnit () del contenuto testuale (o testo interno) di un contenitore di testo e un oggetto incorporato, ad esempio una cella di tabella o un collegamento ipertestuale, viene esposto come un flusso di testo continuo sia la visualizzazione controlli e la visualizzazione contenuto del <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> albero; vengono ignorati i limiti dell'oggetto.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects.</source>
          <target state="translated">Se un client di automazione interfaccia utente sta recuperando il testo allo scopo di esposizione, interpretazione o analisi in qualche modo, l'intervallo di testo deve essere archiviato per casi speciali, ad esempio una tabella con contenuto testuale o altri incorporati oggetti.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be accomplished by calling &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt; to obtain an &lt;xref:System.Windows.Automation.AutomationElement&gt; for each embedded object and then calling &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; to obtain a text range for each element; this is done recursively until all textual content has been retrieved.</source>
          <target state="translated">Questa operazione può essere eseguita chiamando &lt;xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;per ottenere un &lt;xref:System.Windows.Automation.AutomationElement&gt;per ogni oggetto incorporato e chiamando quindi &lt;xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt;per ottenere un intervallo di testo per ogni elemento; questa operazione viene eseguita in modo ricorsivo fino a quando non è stato recuperato l'intero contenuto testuale.&lt;/xref:System.Windows.Automation.TextPattern.RangeFromChild%2A&gt; &lt;/xref:System.Windows.Automation.AutomationElement&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Intervalli di testo estesi da oggetti incorporati. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Gli intervalli di testo estesi da oggetti incorporati.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example of a text stream with embedded objects and their range spans       MoveEndpointByUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">Esempio di un flusso di testo con oggetti incorporati e le estensioni degli intervalli corrispondenti MoveEndpointByUnit rinvia al successivo più grande &lt;xref:System.Windows.Automation.Text.TextUnit&gt;supportato se il dato &lt;xref:System.Windows.Automation.Text.TextUnit&gt;non è supportata dal controllo.&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">L'ordine, da unità più piccolo al più grande, è elencato di seguito.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">Endpoint da spostare.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The textual unit for moving.</source>
          <target state="translated">Unità testuale per lo spostamento.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The number of units to move.</source>
          <target state="translated">Il numero di unità da spostare.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A positive count moves the endpoint forward.</source>
          <target state="translated">Un numero positivo sposta in avanti dell'endpoint.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A negative count moves backward.</source>
          <target state="translated">Un numero negativo comporta lo spostamento all'indietro.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A count of 0 has no effect.</source>
          <target state="translated">Un conteggio pari a 0 non ha alcun effetto.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">Il numero di unità effettivamente spostate, che può essere inferiore al numero richiesto se lo spostamento degli che endpoint si raggiunge l'inizio o alla fine del documento.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Removes a highlighted section of text, corresponding to the calling text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints, from an existing collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Rimuove una sezione evidenziata del testo, corrispondente all'intervallo di testo chiamante <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> endpoint, da una raccolta esistente di testo evidenziato in un contenitore di testo che supporta più selezioni non contigue.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">Il punto di inserimento passerà all'area dell'evidenziazione rimossa.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">Fornisce un intervallo di testo degenerato sposterà il punto di inserimento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Se il provider di testo non supporta più selezioni non contigue (ad esempio, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;deve avere un valore di <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">Determina il controllo di testo per lo scorrimento verticale fino a quando l'intervallo di testo è visibile nel riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>ScrollIntoView respects both hidden and visible text.</source>
          <target state="translated">ScrollIntoView rispetta il testo nascosto sia visibile.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI Automation client can check the &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt; for text visibility.</source>
          <target state="translated">Il client di automazione interfaccia utente può controllare il &lt;xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;la visibilità del testo.&lt;/xref:System.Windows.Automation.TextPattern.IsHiddenAttribute&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">Se l'intervallo di testo è nascosta, il controllo testo scorre solo se il testo nascosto presenta un ancoraggio nel riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the text control should be scrolled so the text range is flush with the top of the viewport; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it should be flush with the bottom of the viewport.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se il controllo di testo deve essere spostato in modo che l'intervallo di testo è allineato al margine superiore del riquadro di visualizzazione; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> se deve essere allineato al margine inferiore del riquadro di visualizzazione.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If scrolling is not supported by the control.</source>
          <target state="translated">Se lo scorrimento non è supportato dal controllo.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Highlights text in the text control corresponding to the text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints.</source>
          <target state="translated">Evidenzia il testo nel controllo di testo corrispondente all'intervallo di testo <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> endpoint.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a degenerate text range is provided, the text insertion point will move to the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint of the text range.</source>
          <target state="translated">Se viene specificato un intervallo di testo degenerato, il punto di inserimento passerà al &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;endpoint dell'intervallo di testo.&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">Si verifica quando la selezione di testo non è supportata dal controllo di testo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the text range.</source>
          <target state="translated">Ottiene il <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> associato all'intervallo di testo.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The text provider.</source>
          <target state="translated">Il provider di testo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>