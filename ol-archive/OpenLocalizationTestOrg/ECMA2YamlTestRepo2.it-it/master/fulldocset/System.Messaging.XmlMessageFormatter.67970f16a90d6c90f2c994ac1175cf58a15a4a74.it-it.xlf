<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01a29ba8b6be0cb3371461a78f5e89c26bfe42e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Messaging.XmlMessageFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58ae862bc0b961377f4edc4bc96254dbb3bee309</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c058aa03a560826c952d30e6184c250444ae9e2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</source>
          <target state="translated">Serializza e deserializza oggetti da o verso il corpo di un messaggio, utilizzando il formato XML in base alla definizione di schema XSD.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlMessageFormatter is the default formatter that an instance of &lt;xref:System.Messaging.MessageQueue&gt; uses to serialize messages written to the queue.</source>
          <target state="translated">L'oggetto XmlMessageFormatter è il formattatore predefinito che un'istanza di &lt;xref:System.Messaging.MessageQueue&gt;viene utilizzato per serializzare i messaggi scritti nella coda.&lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Messaging.MessageQueue&gt;, an instance of XmlMessageFormatter is created for you and associated with the &lt;xref:System.Messaging.MessageQueue&gt;.</source>
          <target state="translated">Quando si crea un'istanza di &lt;xref:System.Messaging.MessageQueue&gt;, un'istanza di XmlMessageFormatter viene creata e associata a &lt;xref:System.Messaging.MessageQueue&gt;.&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a different formatter by creating it in your code and assigning it to the &lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt; property of your &lt;xref:System.Messaging.MessageQueue&gt;.</source>
          <target state="translated">È possibile specificare un formattatore differente creandolo nel codice e assegnarlo alla &lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;proprietà del &lt;xref:System.Messaging.MessageQueue&gt;.&lt;/xref:System.Messaging.MessageQueue&gt; &lt;/xref:System.Messaging.MessageQueue.Formatter%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queue's default XmlMessageFormatter instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; property on the formatter.</source>
          <target state="translated">Istanza di una coda predefinita XmlMessageFormatter consente di scrivere nella coda, ma non può essere utilizzato per leggere dalla coda fino a quando non si imposta la &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;o &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;proprietà sul formattatore.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor.</source>
          <target state="translated">È possibile impostare uno o entrambi i valori nell'istanza del formattatore predefinito oppure è possibile creare una nuova istanza del formattatore e impostare i valori automaticamente tramite il passaggio come argomenti in appropriata &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;costruttore.&lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Quando si specifica &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;anziché &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;richiede che ogni voce sia completa, specificando il nome dell'assembly.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">In questo modo il formattatore interpretare il corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Il set di tipi è il set combinato delle due proprietà.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XmlMessageFormatter is a crucial component of loosely coupled XML-based messaging.</source>
          <target state="translated">L'oggetto XmlMessageFormatter è un componente fondamentale della messaggistica accoppiamento basato su XML.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</source>
          <target state="translated">Utilizza l'utilità XSD.exe che viene utilizzato il formato XML per generare schemi XML, ad esempio quando si utilizza l'utilità per serializzare una classe utilizzata dall'applicazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class must have a default constructor.</source>
          <target state="translated">La classe deve avere un costruttore predefinito.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</source>
          <target state="translated">Viene utilizzato il formato nuovamente il processo inverso quando l'utilità genera una classe in base allo schema distribuito per descrivere i dati della classe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</source>
          <target state="translated">L'utilizzo dell'utilità e dello schema XML generato consente di evitare ridistribuire i file ogni volta che una classe viene ricompilata dopo che è stata modificata l'implementazione della classe.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</source>
          <target state="translated">Fino a quando lo schema non viene modificato sul client o server, le altre modifiche su entrambi i lati non influisce sugli altri.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, without target types set.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> set di tipi di classe, senza destinazione.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</source>
          <target state="translated">Questo overload del costruttore viene utilizzato più frequentemente durante la scrittura in coda, come tipi di destinazione non sono necessari durante la scrittura.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read a message from a queue using an instance of &lt;xref:System.Messaging.XmlMessageFormatter&gt; created using this constructor, you must set the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties so the formatter knows what types to attempt to deserialize.</source>
          <target state="translated">Per leggere un messaggio da una coda utilizzando un'istanza di &lt;xref:System.Messaging.XmlMessageFormatter&gt;creato utilizzando il costruttore, è necessario impostare il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;o &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;proprietà affinché il formattatore sappia quali tipi deserializzare.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new &lt;xref:System.Messaging.MessageQueue&gt;, a default &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance is created, without the target types set.</source>
          <target state="translated">Quando si crea un nuovo &lt;xref:System.Messaging.MessageQueue&gt;, valore predefinito è &lt;xref:System.Messaging.XmlMessageFormatter&gt;istanza viene creata, senza il set di tipi di destinazione.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</source>
          <target state="translated">Come con un formattatore creato utilizzando il costruttore, è necessario impostare i tipi di destinazione per l'istanza del formattatore se si desidera leggere dalla coda.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, setting target types passed in as an array of (fully qualified) string values.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (classe), l'impostazione di tipi di destinazione passati come matrice di valori stringa (completo).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">I costruttori con parametri di tipo di destinazione vengono utilizzati più frequentemente durante la lettura dalla coda.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">Durante la scrittura, non è necessario specificare i tipi di destinazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor sets the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; property to the array values passed in through the <ph id="ph1">`targetTypeNames`</ph> parameter.</source>
          <target state="translated">Questo overload del metodo di &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;costruttore imposta la &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;proprietà per i valori della matrice passato tramite il <ph id="ph1">`targetTypeNames`</ph> parametro.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property enables a &lt;xref:System.Messaging.MessageQueue&gt; using this &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance to read messages containing objects of given types.</source>
          <target state="translated">L'impostazione di questa proprietà consente un &lt;xref:System.Messaging.MessageQueue&gt;usando questa &lt;xref:System.Messaging.XmlMessageFormatter&gt;istanza per leggere i messaggi contenenti oggetti di determinati tipi.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Sia il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">In questo modo il formattatore interpretare il corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Il set di tipi è il set combinato delle due proprietà.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">La scelta di quale utilizzare è specifico dell'applicazione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Matrice di tipo &lt;xref:System.String&gt;che specifica il set dei tipi possibili che verranno deserializzati dal formattatore dal messaggio fornito.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</source>
          <target state="translated">Questi valori devono essere completi, ad esempio, "MyOrders, MyOrdersAssemblyName".</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypeNames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypeNames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, setting target types passed in as an array of object types.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> (classe), l'impostazione di tipi di destinazione passati come matrice di tipi di oggetto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors with target type parameters are most frequently used when reading from the queue.</source>
          <target state="translated">I costruttori con parametri di tipo di destinazione vengono utilizzati più frequentemente durante la lettura dalla coda.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>When writing, it is not necessary to specify target types.</source>
          <target state="translated">Durante la scrittura, non è necessario specificare i tipi di destinazione.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt; constructor sets the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property to the array values passed in through the <ph id="ph1">`targetTypes`</ph> parameter.</source>
          <target state="translated">Questo overload del metodo di &lt;xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;costruttore imposta la &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;proprietà per i valori della matrice passato tramite il <ph id="ph1">`targetTypes`</ph> parametro.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property enables a &lt;xref:System.Messaging.MessageQueue&gt; using this &lt;xref:System.Messaging.XmlMessageFormatter&gt; instance to read messages containing objects of the given types.</source>
          <target state="translated">L'impostazione di questa proprietà consente un &lt;xref:System.Messaging.MessageQueue&gt;usando questa &lt;xref:System.Messaging.XmlMessageFormatter&gt;istanza per leggere i messaggi contenenti oggetti di tipi specificati.&lt;/xref:System.Messaging.XmlMessageFormatter&gt; &lt;/xref:System.Messaging.MessageQueue&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Sia il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">In questo modo il formattatore interpretare il corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Il set di tipi è il set combinato delle due proprietà.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which one to use is specific to your application.</source>
          <target state="translated">La scelta di quale utilizzare è specifico dell'applicazione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</source>
          <target state="translated">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione in fase di lettura.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Quando si specifica &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;anziché &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">&lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;richiede che ogni voce sia completa, specificando il nome dell'assembly.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;, you can add each object (for example, <ph id="ph1">`MyClass`</ph>) to the list in a way demonstrated by the following C# code.</source>
          <target state="translated">Quando si utilizza &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;, è possibile aggiungere ogni oggetto (ad esempio, <ph id="ph1">`MyClass`</ph>) all'elenco nel modo descritto dal codice c# seguente.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Type&gt; that specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Matrice di tipo &lt;xref:System.Type&gt;che specifica il set dei tipi possibili che verranno deserializzati dal formattatore dal messaggio fornito.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypes</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetTypes</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Determines whether the formatter can deserialize the message.</source>
          <target state="translated">Determina se il formattatore può deserializzare il messaggio.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When CanRead is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</source>
          <target state="translated">Quando viene chiamato CanRead, il formattatore tenta di determinare se che è possibile deserializzare il contenuto del messaggio.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties.</source>
          <target state="translated">Il formattatore può deserializzare il messaggio solo se il tipo nel corpo del messaggio ha lo stesso schema di uno dei tipi nella matrice rappresentata dal &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;proprietà.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>CanRead returns <ph id="ph1">`false`</ph> under the following two circumstances:      -   The message was not formatted using the &lt;xref:System.Messaging.XmlMessageFormatter&gt;.</source>
          <target state="translated">Proprietà CanRead restituisce <ph id="ph1">`false`</ph> nei due casi seguenti:-il messaggio non è stato formattato utilizzando &lt;xref:System.Messaging.XmlMessageFormatter&gt;.&lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The schema of the message body is not among those listed in either the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property.</source>
          <target state="translated">-Lo schema del corpo del messaggio non è compreso tra quelli elencati nella &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;o &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;proprietà.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what types of objects it must be able to deserialize.</source>
          <target state="translated">Il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano al formattatore i tipi di oggetti deve essere in grado di deserializzare.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any type is missing from the list, yet is found within the message, CanRead returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Se qualsiasi tipo mancante nell'elenco, ma è stato trovato all'interno del messaggio, proprietà CanRead restituisce <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to inspect.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> da controllare.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the XML formatter can deserialize the message; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se il formattatore XML può deserializzare il messaggio. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; nor &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; property has been set.</source>
          <target state="translated">Né il &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; né &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; proprietà è stata impostata.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class whose read/write properties (the sets of target types) are the same as the current <bpt id="p2">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">Crea un'istanza di <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe il cui lettura/scrittura proprietà (il set di tipi di destinazione) sono le stesse corrente <bpt id="p2">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> istanza.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a copy of the formatter and initializes all its properties to the values of this &lt;xref:System.Messaging.XmlMessageFormatter&gt; object.</source>
          <target state="translated">Questo metodo crea una copia del formattatore e inizializza tutte le proprietà con valori di questo &lt;xref:System.Messaging.XmlMessageFormatter&gt;oggetto.&lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An object whose properties are identical to those of this <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, but whose metadata does not specify it to be a formatter class instance.</source>
          <target state="translated">Oggetto le cui proprietà sono identiche a quelle del <bpt id="p1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> istanza, ma i cui metadati non specificano deve essere un'istanza della classe del formattatore.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">Legge il contenuto del messaggio indicato e crea un oggetto che contiene il messaggio deserializzato.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Sia il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these properties must be set before the message can be deserialized.</source>
          <target state="translated">Una di queste proprietà deve essere impostata prima che il messaggio può essere deserializzato.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types do not have to be specified in order to write to the queue.</source>
          <target state="translated">I tipi di destinazione non è necessario specificare per scrivere nella coda.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, in XML format, to deserialize.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, in formato XML da deserializzare.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The deserialized message.</source>
          <target state="translated">Il messaggio deserializzato.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Neither the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; nor &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; property has been set.</source>
          <target state="translated">Né il &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; né &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; proprietà è stata impostata.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-       The instance serialized in the message body does not comply with any of the schemas represented by the types in the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames<bpt id="p1">*</bpt>&gt; and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes<ept id="p1">*</ept>&gt; properties.</source>
          <target state="translated">- oppure - istanza serializzata nel corpo del messaggio non è conforme ad alcuno degli schemi rappresentati dai tipi di &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; e &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; proprietà.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Specifica il set dei tipi possibili che verranno deserializzati dal formattatore dal messaggio fornito.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the TargetTypeNames and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Entrambi i TargetTypeNames e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">In questo modo il formattatore interpretare il corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Il set di tipi è il set combinato delle due proprietà.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>TargetTypeNames requires every entry to be fully qualified, specifying its assembly name.</source>
          <target state="translated">TargetTypeNames richiede che ogni voce sia completo, che specifica il nome dell'assembly.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</source>
          <target state="translated">Inoltre, quando si utilizzano più versioni simultanee, il numero di versione deve essere inoltre aggiunto al nome del tipo di destinazione nonché.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">I tipi di destinazione sono necessari durante la lettura dalla coda.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The TargetTypeNames and &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; properties do not need to be set to write to the queue.</source>
          <target state="translated">Il TargetTypeNames e &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;proprietà non è necessario impostare la scrittura nella coda.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Matrice di tipo &lt;xref:System.String&gt;che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The TargetTypeNames property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">La proprietà TargetTypeNames <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specifies the set of possible types that will be deserialized by the formatter from the message provided.</source>
          <target state="translated">Specifica il set dei tipi possibili che verranno deserializzati dal formattatore dal messaggio fornito.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and TargetTypes properties tell the formatter what schemas to attempt to match when deserializing a message.</source>
          <target state="translated">Sia il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e TargetTypes indicano il formattatore quali gli schemi per tentare di corrispondenza durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the formatter to interpret the message body.</source>
          <target state="translated">In questo modo il formattatore interpretare il corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance serialized in the message body must comply with one of the schemas represented in the type array.</source>
          <target state="translated">L'istanza serializzata nel corpo del messaggio deve essere conforme con uno degli schemi rappresentati nella matrice del tipo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you read the message using the &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt; method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</source>
          <target state="translated">Quando si legge il messaggio utilizzando il &lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;metodo, il metodo crea un oggetto del tipo che corrisponde allo schema indicato e legge il corpo del messaggio al suo interno.&lt;/xref:System.Messaging.MessageQueue.Receive%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one of the two properties needs to be set when reading from the queue, but you can set both.</source>
          <target state="translated">Solo una delle due proprietà deve essere impostata durante la lettura dalla coda, ma è possibile impostare entrambi.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of types is the combined set from the two properties.</source>
          <target state="translated">Il set di tipi è il set combinato delle due proprietà.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decision of which property to use is specific to your application.</source>
          <target state="translated">La decisione di quale proprietà utilizzare è specifica dell'applicazione.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</source>
          <target state="translated">Se il corpo del messaggio contiene un tipo il cui schema non corrisponde a nessuno dei tipi nella matrice per delle proprietà, verrà generata un'eccezione quando viene letto il messaggio.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types are only required when reading from the queue.</source>
          <target state="translated">I tipi di destinazione sono necessari durante la lettura dalla coda.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; and TargetTypes properties do not need to be set to write to the queue.</source>
          <target state="translated">Il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;e TargetTypes proprietà non è necessario impostare per scrivere nella coda.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When specifying TargetTypes rather than &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, type existence is checked at compile time rather than read time, reducing possibility for error.</source>
          <target state="translated">Quando si specifica TargetTypes anziché &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;, esistenza di tipo viene verificata in fase di compilazione anziché in fase di lettura, riducendo la probabilità di errore.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using TargetTypes, you can add each object (for example, <ph id="ph1">`MyClass`</ph>) to the list in a way demonstrated by the C# code <ph id="ph2">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</source>
          <target state="translated">Quando si utilizza TargetTypes, è possibile aggiungere ogni oggetto (ad esempio, <ph id="ph1">`MyClass`</ph>) per l'elenco nel modo illustrato nel codice c# <ph id="ph2">`TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Type&gt; that specifies the types of objects to deserialize from the message body when reading the message.</source>
          <target state="translated">Matrice di tipo &lt;xref:System.Type&gt;che specifica i tipi di oggetti da deserializzare dal corpo del messaggio durante la lettura del messaggio.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The TargetTypes property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">La proprietà TargetTypes <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">Serializza un oggetto nel corpo del messaggio.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target types need not be specified to write to the queue as they must be when reading.</source>
          <target state="translated">Non è necessario specificare i tipi di destinazione devono essere durante la lettura di scrivere nella coda.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt; or &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; property is used by the formatter only when deserializing a message.</source>
          <target state="translated">Il &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;o &lt;xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt;è utilizzata dal formattatore solo durante la deserializzazione di un messaggio.&lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A&gt; &lt;/xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Messaging.XmlMessageFormatter&gt; makes use of the &lt;xref:System.Xml.Serialization.XmlSerializer&gt; class, which defines what can be serialized.</source>
          <target state="translated">Il &lt;xref:System.Messaging.XmlMessageFormatter&gt;utilizza il &lt;xref:System.Xml.Serialization.XmlSerializer&gt;(classe), che definisce ciò che può essere serializzato.&lt;/xref:System.Xml.Serialization.XmlSerializer&gt; &lt;/xref:System.Messaging.XmlMessageFormatter&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only public fields and public properties can be serialized.</source>
          <target state="translated">Solo le proprietà pubbliche e i campi pubblici possono essere serializzate.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</source>
          <target state="translated">Strutture, le strutture con matrici e le matrici di strutture sono tutte serializzabili, purché non utilizzano lo stile codificato con il protocollo SOAP.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose &lt;xref:System.Messaging.Message.Body*&gt; property will contain the serialized object.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Messaging.Message"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> cui &lt;xref:System.Messaging.Message.Body*&gt;proprietà conterrà l'oggetto serializzato.&lt;/xref:System.Messaging.Message.Body*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to be serialized into the message body.</source>
          <target state="translated">Il &lt;xref:System.Object&gt;da serializzare nel corpo del messaggio.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>