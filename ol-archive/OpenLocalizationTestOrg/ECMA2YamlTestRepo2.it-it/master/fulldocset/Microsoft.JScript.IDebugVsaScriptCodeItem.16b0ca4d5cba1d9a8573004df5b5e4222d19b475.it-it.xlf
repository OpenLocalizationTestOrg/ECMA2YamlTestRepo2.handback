<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca5c39cdb67a23924d2922659bbaeaaf56c0aeb7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.JScript.IDebugVsaScriptCodeItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54cc59618805a57090469855efd2c1acfa6aa924</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b43c012dabcca3d89d7bc38983d1f43a4ebda3c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods that evaluate expressions and parse strings.</source>
          <target state="translated">Definisce i metodi che valutano le espressioni e analizzare le stringhe.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</source>
          <target state="translated">Questa interfaccia viene implementata in genere da un oggetto che rappresenta un blocco di codice, e viene in genere chiamato da un debugger.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This interface provides extra functionality that is needed by an IActiveScript host.</source>
          <target state="translated">Questa interfaccia fornisce funzionalità aggiuntive che è necessario un host IActiveScript.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</source>
          <target state="translated">Quando viene implementato in una classe, valuta il blocco, espressione o istruzione rappresentata dall'elemento di codice e restituisce il valore.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</source>
          <target state="translated">In genere viene chiamato da un debugger che è necessario valutare un'espressione (nella finestra Espressioni di controllo, ad esempio).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For expressions, the value is the result of the expression.</source>
          <target state="translated">Per le espressioni, il valore è il risultato dell'espressione.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</source>
          <target state="translated">Per istruzioni e blocchi, l'espressione risulta è l'ultima espressione calcolata per il blocco o l'istruzione.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the Evaluate method is functionally identical to the &lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt; method.</source>
          <target state="translated">Si noti che il metodo Evaluate è funzionalmente identico al &lt;xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;metodo.&lt;/xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the marshaling attributes differ.</source>
          <target state="translated">Solo gli attributi di marshalling diversi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the interface allows an unmanaged debugger to obtain the return value as an <ph id="ph1">`IUnknown`</ph> pointer rather than a <ph id="ph2">`VARIANT`</ph>.</source>
          <target state="translated">Questa versione dell'interfaccia consente a un debugger gestito ottenere il valore restituito come un <ph id="ph1">`IUnknown`</ph> puntatore anziché <ph id="ph2">`VARIANT`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns a value that represents the evaluation of the statement, expression, or block.</source>
          <target state="translated">Restituisce un valore che rappresenta la valutazione dell'istruzione, l'espressione o blocco.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When implemented in a class, parses strings and returns the parsed-out information.</source>
          <target state="translated">Quando viene implementato in una classe, analizza le stringhe e restituisce le informazioni analizzato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Questo metodo viene chiamato in genere da un debugger che è necessario analizzare le informazioni su un punto di interruzione è rappresentato come un <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The debugger might have a breakpoint typed in by the user in the form <bpt id="p1">*</bpt>functionname-arguments-ILoffset<ept id="p1">*</ept>.</source>
          <target state="translated">Il debugger potrebbe avere un punto di interruzione digitato dall'utente nel formato <bpt id="p1">*</bpt>nomefunzione-argomenti-ILoffset<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A named breakpoint string can have a complex format, for example, <ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph> The parameter list is optional, as is the IL offset.</source>
          <target state="translated">Nome di un punto di interruzione denominato può avere un formato complesso, ad esempio, <ph id="ph1">`F.B(C.D[], int, arg : double ) : C.Abc + 123.`</ph> l'elenco di parametri è facoltativo, come l'offset IL.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</source>
          <target state="translated">Una stringa di punto di interruzione denominato ben formato fornendo una funzione, elenco di argomenti facoltativi e l'offset IL parametro facoltativo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</source>
          <target state="translated">Parametro out che restituisce il nome della funzione analizzato dalla stringa di input o una stringa vuota se la stringa di input non è corretto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Out parameter returning the number of arguments in the optional argument list.</source>
          <target state="translated">Parametro out che restituisce il numero di argomenti nell'elenco di argomenti facoltativi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns zero if there is no arguments list or if the string is not well formed.</source>
          <target state="translated">Restituisce zero se è presente alcun elenco di argomenti o se la stringa non è corretto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</source>
          <target state="translated">Parametro out che restituisce un elenco separato da spazi dei nomi dei tipi di tutti gli argomenti nell'elenco di argomenti, o una stringa vuota se l'elenco di argomenti è manca o la stringa di input non è corretto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</source>
          <target state="translated">Parametro out che restituisce una stringa contenente il tipo restituito della funzione denominata nell'input, o una stringa vuota se il tipo restituito è mancano oppure la stringa di input non è corretto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</source>
          <target state="translated">Intero lungo senza segno fornisce l'offset IL dalla stringa di input oppure zero se non esiste alcun offset IL o la stringa non è corretto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the named breakpoint is successfully parsed, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated">Restituisce <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se il punto di interruzione denominato viene riconvertito correttamente, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> in caso contrario.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>