<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f400be304e155c524c9a909ab36261e230b6edb1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Timers.Timer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">826bcf8f328900e7727a603f770bc7592d80259f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f360dddbd4c33f6cfd312fc2e496d00a0ca07d8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Generates an event after a set interval, with an option to generate recurring events.</source>
          <target state="translated">Genera un evento dopo un intervallo specificato, con un'opzione per generare eventi ricorrenti.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated">Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere il <bpt id="p1">[</bpt>origine riferimento<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; Per visualizzare il codice sorgente di .NET Framework per questo tipo, vedere il <bpt id="p1">[</bpt>origine riferimento<ept id="p1">](http://referencesource.microsoft.com/#System/services/timers/system/timers/Timer.cs#897683f27faba082)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">È possibile esplorare il codice sorgente online, scaricare i riferimenti per la visualizzazione offline e scorrere le origini (inclusi aggiornamenti e patch) durante l'esecuzione del debug. vedere <bpt id="p1">[</bpt>istruzioni<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component is a server-based timer that raises an &lt;xref:System.Timers.Timer.Elapsed&gt; event in your application after the number of milliseconds in the &lt;xref:System.Timers.Timer.Interval%2A&gt; property has elapsed.</source>
          <target state="translated">Il componente Timer è un timer basate su server che genera un &lt;xref:System.Timers.Timer.Elapsed&gt;eventi dell'applicazione dopo il numero di millisecondi di &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà trascorsa.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure the Timer object to raise the event just once or repeatedly using the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property.</source>
          <target state="translated">È possibile configurare l'oggetto Timer per generare l'evento solo una o più volte utilizzando la &lt;xref:System.Timers.Timer.AutoReset%2A&gt;proprietà.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a Timer object is declared at the class level so that it stays in scope as long as it is needed.</source>
          <target state="translated">In genere, viene dichiarato un oggetto Timer a livello di classe in modo che rimanga nell'ambito fino a quando necessario.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then handle its &lt;xref:System.Timers.Timer.Elapsed&gt; event to provide regular processing.</source>
          <target state="translated">È quindi possibile gestire il &lt;xref:System.Timers.Timer.Elapsed&gt;evento per fornire l'elaborazione normale.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</source>
          <target state="translated">Ad esempio, si supponga un server critico che deve rimanere in esecuzione 24 ore su 24, 7 giorni a settimana.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could create a service that uses a Timer object to periodically check the server and ensure that the system is up and running.</source>
          <target state="translated">È possibile creare un servizio che utilizza un oggetto Timer per verificare periodicamente il server e verificare che il sistema sia in esecuzione.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system is not responding, the service could attempt to restart the server or notify an administrator.</source>
          <target state="translated">Se il sistema non risponde, il servizio tenterà di riavviare il server o un amministratore di notifica.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The Timer class is available in the .NET Framework only.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; Il Timer (classe) è disponibile in .NET Framework solo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not included in the .NET Standard Library and is not available on other platforms, such as .NET Core or the Universal Windows Platform.</source>
          <target state="translated">Non è incluso nella libreria Standard di .NET e non è disponibile su altre piattaforme, ad esempio .NET Core o la piattaforma Windows universale.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>On these platforms, as well as for portability across all .NET platforms, you should use the &lt;xref:System.Threading.Timer?displayProperty=fullName&gt; class instead.</source>
          <target state="translated">Su queste piattaforme, nonché per la portabilità in tutte le piattaforme .NET, è consigliabile utilizzare la &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;classe invece.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">Questo tipo implementa il &lt;xref:System.IDisposable&gt;interfaccia.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">Per eliminare direttamente il tipo, chiamare il relativo &lt;xref:System.IDisposable.Dispose%2A&gt;metodo in un <ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph> blocco.&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio <ph id="ph1">`using`</ph> (in c#) o <ph id="ph2">`Using`</ph> (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">Per ulteriori informazioni, vedere la sezione "Utilizzo di oggetti che implementano IDisposable" nel &lt;xref:System.IDisposable&gt;argomento relativo all'interfaccia.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server-based Timer class is designed for use with worker threads in a multithreaded environment.</source>
          <target state="translated">La classe di Timer basate su server è progettata per l'utilizzo con thread di lavoro in un ambiente con multithreading.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server timers can move among threads to handle the raised &lt;xref:System.Timers.Timer.Elapsed&gt; event, resulting in more accuracy than Windows timers in raising the event on time.</source>
          <target state="translated">Timer server possono spostarsi tra i thread per gestire l'eccezione generata &lt;xref:System.Timers.Timer.Elapsed&gt;evento, precisione maggiore dei timer di Windows nella generazione dell'evento nel tempo.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event, based on the value (in milliseconds) of the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Il componente Timer genera il &lt;xref:System.Timers.Timer.Elapsed&gt;evento, in base al valore (in millisecondi) del &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event to perform the processing you need.</source>
          <target state="translated">È possibile gestire questo evento per eseguire l'elaborazione che è necessario.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that you have an online sales application that continuously posts sales orders to a database.</source>
          <target state="translated">Ad esempio, si supponga di disporre di un'applicazione di vendita online che inserisce continuamente ordini di vendita in un database.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</source>
          <target state="translated">Il servizio che compila le istruzioni per la spedizione opera su un batch di ordini anziché elaborare individualmente ogni ordine.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could use a Timer to start the batch processing every 30 minutes.</source>
          <target state="translated">È possibile utilizzare un Timer per avviare l'elaborazione di ogni 30 minuti del batch.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The System.Timers.Timer class has the same resolution as the system clock.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; System.Timers.Timer la classe è la stessa risoluzione l'orologio di sistema.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the &lt;xref:System.Timers.Timer.Interval%2A&gt; property is less than the resolution of the system clock.</source>
          <target state="translated">Ciò significa che il &lt;xref:System.Timers.Timer.Elapsed&gt;viene generato l'evento a un intervallo definito per la risoluzione del clock di sistema se la &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà è minore rispetto alla risoluzione del clock di sistema.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Timers.Timer.Interval%2A&gt; property.</source>
          <target state="translated">Per ulteriori informazioni, vedere il &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, a Timer object raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, after the first &lt;xref:System.Timers.Timer.Interval%2A&gt; has elapsed.</source>
          <target state="translated">Quando &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è impostato su <ph id="ph1">`false`</ph>, genera un oggetto Timer il &lt;xref:System.Timers.Timer.Elapsed&gt;evento una sola volta, dopo il primo &lt;xref:System.Timers.Timer.Interval%2A&gt;trascorsa.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To keep raising the &lt;xref:System.Timers.Timer.Elapsed&gt; event regularly at the interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt;, set &lt;xref:System.Timers.Timer.AutoReset%2A&gt; to <ph id="ph1">`true`</ph>, which is the default value.</source>
          <target state="translated">Per continuare a generare il &lt;xref:System.Timers.Timer.Elapsed&gt;eventi regolarmente in base all'intervallo definito dal &lt;xref:System.Timers.Timer.Interval%2A&gt;, impostare &lt;xref:System.Timers.Timer.AutoReset%2A&gt;per <ph id="ph1">`true`</ph>, ovvero il valore predefinito.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Timer component catches and suppresses all exceptions thrown by event handlers for the &lt;xref:System.Timers.Timer.Elapsed&gt; event.</source>
          <target state="translated">Il componente Timer intercetta ed Elimina tutte le eccezioni generate dai gestori eventi per il &lt;xref:System.Timers.Timer.Elapsed&gt;evento.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Questo comportamento è soggetto a modifiche nelle versioni future di .NET Framework.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note, however, that this is not true of event handlers that execute asynchronously and include the <ph id="ph1">`await`</ph> operator (in C#)  or the <ph id="ph2">`Await`</ph> operator (in Visual Basic).</source>
          <target state="translated">Si noti tuttavia che ciò non vale per i gestori di eventi che eseguire in modo asincrono e includono il <ph id="ph1">`await`</ph> (operatore) (in c#) o <ph id="ph2">`Await`</ph> (operatore) (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</source>
          <target state="translated">Le eccezioni generate in questi gestori eventi vengono propagate nel thread chiamante, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on exceptions thrown in asynchronous methods, see   <bpt id="p1">[</bpt>Exception Handling<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sulle eccezioni generate nei metodi asincroni, vedere <bpt id="p1">[</bpt>eccezioni<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer#3<ept id="p2">](~/add/codesnippet/csharp/t-system.timers.timer_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer#3<ept id="p4">](~/add/codesnippet/visualbasic/t-system.timers.timer_1.vb)</ept> <ept id="p3">]</ept> se il &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;proprietà <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;evento viene generato in un &lt;xref:System.Threading.ThreadPool&gt;thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;  </target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If processing of the &lt;xref:System.Timers.Timer.Elapsed&gt; event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Se l'elaborazione dei &lt;xref:System.Timers.Timer.Elapsed&gt;evento ha una durata superiore &lt;xref:System.Timers.Timer.Interval%2A&gt;, l'evento potrebbe essere generato nuovamente in un altro &lt;xref:System.Threading.ThreadPool&gt;thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">In questo caso, il gestore dell'evento deve essere rientrante.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il metodo di gestione degli eventi può essere eseguito su un singolo thread allo stesso tempo che un altro thread chiama il &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo o imposta il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the timer is stopped.</source>
          <target state="translated">Ciò potrebbe comportare il &lt;xref:System.Timers.Timer.Elapsed&gt;dell'evento dopo l'arresto del timer.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Nell'esempio di codice per il &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo illustrato un modo per evitare la race condition.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Anche se &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;non <ph id="ph1">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;gli eventi possono verificarsi dopo il &lt;xref:System.Timers.Timer.Dispose%2A&gt;o &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo è stato chiamato o dopo il &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata su <ph id="ph2">`false`</ph>, poiché il segnale per generare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento è sempre in coda per l'esecuzione in un pool di thread.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Un modo per risolvere questa condizione di competizione consiste nell'impostare un flag che indica il gestore eventi per il &lt;xref:System.Timers.Timer.Elapsed&gt;evento ignori gli eventi successivi.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the Timer class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the Timer to the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property, so that the event is marshaled to the user interface thread.</source>
          <target state="translated">Se si usa la classe Timer con un elemento dell'interfaccia utente, ad esempio un form o controllo, senza inserire il timer su tale elemento dell'interfaccia utente, assegnare il form o controllo che contiene il Timer per il &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;proprietà, in modo che l'evento viene sottoposto a marshalling al thread dell'interfaccia utente.&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of default property values for an instance of Timer, see the &lt;xref:System.Timers.Timer.%23ctor%2A&gt; constructor.</source>
          <target state="translated">Per un elenco di valori predefiniti delle proprietà per un'istanza di Timer, vedere il &lt;xref:System.Timers.Timer.%23ctor%2A&gt;costruttore.&lt;/xref:System.Timers.Timer.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!TIP]</ph> &gt;  Be aware that the .NET Framework Class Library includes four classes named <ph id="ph2">`Timer`</ph>, each of which offers different functionality:   &gt;    &gt;  -   Timer (this topic): fires an event at regular intervals.</source>
          <target state="translated">&gt; <ph id="ph1">[!TIP]</ph> &gt; Tenere presente che la libreria di classi .NET Framework include quattro classi denominate <ph id="ph2">`Timer`</ph>, ognuna di che offre funzionalità diverse: &gt;&gt;-Timer (in questo argomento): viene generato un evento a intervalli regolari.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">La classe è destinata all'utilizzo come basato su server o il componente del servizio in un ambiente con multithreading non dispone di alcuna interfaccia utente e non è visibile in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: executes a single callback method on a thread pool thread at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Threading.Timer?displayProperty=fullName&gt;: esegue un metodo di callback singolo in un pool di thread a intervalli regolari.&lt;/xref:System.Threading.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method is defined when the timer is instantiated and cannot be changed.</source>
          <target state="translated">Il metodo di callback viene definito quando il timer viene creata un'istanza e non può essere modificato.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like the Timer class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</source>
          <target state="translated">Analogamente alla classe Timer, questa classe è destinata come basato su server o un componente di servizio in un ambiente con multithreading non dispone di alcuna interfaccia utente e non è visibile in fase di esecuzione.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: a Windows Forms component that fires an event at regular intervals.</source>
          <target state="translated">&gt;- &lt;xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;: un componente di Windows Form che genera un evento a intervalli regolari.&lt;/xref:System.Windows.Forms.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The component has no user interface and is designed for use in a single-threaded environment.</source>
          <target state="translated">Il componente non dispone di alcuna interfaccia utente e viene progettato per l'uso in un ambiente a thread singolo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; -   &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</source>
          <target state="translated">&gt;- &lt;xref:System.Web.UI.Timer?displayProperty=fullName&gt;: un componente ASP.NET che esegue i postback asincroni o sincroni di pagina web a intervalli regolari.&lt;/xref:System.Web.UI.Timer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets all the properties to their initial values.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe e imposta tutte le proprietà sui rispettivi valori iniziali.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">La tabella seguente illustra i valori di proprietà iniziali per un'istanza di &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial value|   |--------------|-------------------|   |&lt;xref:System.Timers.Timer.AutoReset%2A&gt;|<ph id="ph1">`true`</ph>|   |&lt;xref:System.Timers.Timer.Enabled%2A&gt;|<ph id="ph2">`false`</ph>|   |&lt;xref:System.Timers.Timer.Interval%2A&gt;|100 milliseconds|   |&lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;|A null reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).|</source>
          <target state="translated">| Proprietà | Il valore iniziale |   |--------------|-------------------|   | &lt;xref:System.Timers.Timer.AutoReset%2A&gt;| <ph id="ph1">`true`</ph>|   | &lt;xref:System.Timers.Timer.Enabled%2A&gt;| <ph id="ph2">`false`</ph>|   | &lt;xref:System.Timers.Timer.Interval%2A&gt;|&amp;100; millisecondi |   | &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;| Un riferimento null (<ph id="ph3">`Nothing`</ph> in Visual Basic). |&lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, and sets the &lt;xref:System.Timers.Timer.Interval*&gt; property to the specified number of milliseconds.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe e imposta il &lt;xref:System.Timers.Timer.Interval*&gt;proprietà al numero specificato di millisecondi.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the &lt;xref:System.Timers.Timer.Interval%2A&gt; property of the new timer instance, but does not enable the timer.</source>
          <target state="translated">Questo costruttore imposta la &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà della nuova istanza di timer, ma non abilita il timer.&lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between events.</source>
          <target state="translated">Tempo, in millisecondi, tra gli eventi.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Il valore deve essere maggiore di zero e minore o uguale a <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">interval</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than or equal to zero, or greater than <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">Il valore di <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">interval</ph> <ept id="p1">&lt;/code&gt;</ept> parametro è minore o uguale a zero oppure maggiore di <ph id="ph2">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event only once (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) or repeatedly (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</source>
          <target state="translated">Ottiene o imposta un valore booleano che indica se il <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> deve generare il <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> evento una sola volta (<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>) o più volte (<bpt id="p4">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is already enabled when the &lt;xref:System.Timers.Timer.Start%2A&gt; method is called, the interval is reset.</source>
          <target state="translated">Se il &lt;xref:System.Timers.Timer&gt;è già abilitata quando il &lt;xref:System.Timers.Timer.Start%2A&gt;metodo viene chiamato, l'intervallo viene reimpostato.&lt;/xref:System.Timers.Timer.Start%2A&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AutoReset is <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer.Start%2A&gt; method must be called in order to start the count again.</source>
          <target state="translated">Se è AutoReset <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer.Start%2A&gt;metodo deve essere chiamato per riavviare il conteggio.&lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the interval affects when the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised.</source>
          <target state="translated">Reimpostare l'intervallo interessa quando il &lt;xref:System.Timers.Timer.Elapsed&gt;viene generato l'evento.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph1">`true`</ph>, il conteggio inizia al momento &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when the count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se l'intervallo viene reimpostato su 10 secondi quando il conteggio è 3 secondi, il &lt;xref:System.Timers.Timer.Elapsed&gt;evento viene generato per la prima volta 13 secondi dopo il &lt;xref:System.Timers.Timer.Enabled%2A&gt;è stata impostata su <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event each time the interval elapses; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> if it should raise the <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> event only once, after the first time the interval elapses.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se il <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> deve generare il <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> evento ogni volta che l'intervallo scade; <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> se deve generare il <bpt id="p5">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> evento solo una volta, dopo la prima volta l'intervallo scade.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore predefinito è <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Begins the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Avvia l'inizializzazione in fase di esecuzione di un <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> utilizzato in un form o da un altro componente.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to start the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Il <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> ambiente di progettazione questo metodo per avviare l'inizializzazione di un componente che viene utilizzato in un form o da un altro componente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">Il &lt;xref:System.Timers.Timer.EndInit%2A&gt;metodo termina l'inizializzazione.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the BeginInit and &lt;xref:System.Timers.Timer.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Utilizzo di BeginInit e &lt;xref:System.Timers.Timer.EndInit%2A&gt;metodi impedisce il controllo venga utilizzato prima che il completamento dell'inizializzazione.&lt;/xref:System.Timers.Timer.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rilascia le risorse usate dal <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Close method in turn calls the <ph id="ph1">`Dispose`</ph> method.</source>
          <target state="translated">Il metodo Close chiama a sua volta il <ph id="ph1">`Dispose`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'oggetto corrente <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per rilasciare le risorse gestite e non gestite. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Occurs when the interval elapses.</source>
          <target state="translated">Si verifica quando l'intervallo scade.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Elapsed event is raised if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property is <ph id="ph1">`true`</ph> and the time interval (in milliseconds) defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property elapses.</source>
          <target state="translated">Se viene generato l'evento Elapsed il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph1">`true`</ph> e l'intervallo di tempo (in millisecondi) definito dal &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà trascorre.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.AutoReset%2A&gt; property is <ph id="ph1">`true`</ph>, the event is raised repeatedly at an interval defined by the &lt;xref:System.Timers.Timer.Interval%2A&gt; property; otherwise, the event is raised only once, the first time the &lt;xref:System.Timers.Timer.Interval%2A&gt; value elapses.</source>
          <target state="translated">Se il &lt;xref:System.Timers.Timer.AutoReset%2A&gt;proprietà <ph id="ph1">`true`</ph>, l'evento viene generato ripetutamente in un intervallo definito dal &lt;xref:System.Timers.Timer.Interval%2A&gt;proprietà; in caso contrario, l'evento viene generato una sola volta, la prima volta il &lt;xref:System.Timers.Timer.Interval%2A&gt;valore allo scadere dell'intervallo.&lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Interval%2A&gt; is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Se &lt;xref:System.Timers.Timer.Interval%2A&gt;viene impostato dopo la &lt;xref:System.Timers.Timer&gt;è avviato, il conteggio viene reimpostato.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare &lt;xref:System.Timers.Timer.Enabled%2A&gt;a <ph id="ph1">`true`</ph>, il conteggio inizia al momento &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the Elapsed event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se l'intervallo viene reimpostato su 10 secondi quando il conteggio è 3 secondi, l'evento Elapsed viene generato per la prima volta 13 secondi dopo che &lt;xref:System.Timers.Timer.Enabled%2A&gt;è stato impostato su <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; property is <ph id="ph1">`null`</ph>,the Elapsed event is raised on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Se il &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;proprietà <ph id="ph1">`null`</ph>, viene generato l'evento Elapsed su un &lt;xref:System.Threading.ThreadPool&gt;thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the processing of the Elapsed event lasts longer than &lt;xref:System.Timers.Timer.Interval%2A&gt;, the event might be raised again on another &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">Se l'elaborazione dell'evento trascorso dura più a lungo rispetto a &lt;xref:System.Timers.Timer.Interval%2A&gt;, l'evento potrebbe essere generato nuovamente in un altro &lt;xref:System.Threading.ThreadPool&gt;thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Interval%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this situation, the event handler should be reentrant.</source>
          <target state="translated">In questo caso, il gestore dell'evento deve essere rientrante.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The event-handling method might run on one thread at the same time that another thread calls the &lt;xref:System.Timers.Timer.Stop%2A&gt; method or sets the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il metodo di gestione degli eventi può essere eseguito su un singolo thread allo stesso tempo che un altro thread chiama il &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo o imposta il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the Elapsed event being raised after the timer is stopped.</source>
          <target state="translated">Ciò potrebbe comportare la generazione dell'evento trascorso dopo l'arresto del timer.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example code for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to avoid this race condition.</source>
          <target state="translated">Nell'esempio di codice per il &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo illustrato un modo per evitare la race condition.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt; is not <ph id="ph1">`null`</ph>, Elapsed events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph2">`false`</ph>, because the signal to raise the Elapsed event is always queued for execution on a thread pool thread.</source>
          <target state="translated">Anche se &lt;xref:System.Timers.Timer.SynchronizingObject%2A&gt;non <ph id="ph1">`null`</ph>, eventi Elapsed possono verificarsi dopo il &lt;xref:System.Timers.Timer.Dispose%2A&gt;o &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo è stato chiamato o dopo il &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata su <ph id="ph2">`false`</ph>, poiché il segnale per generare l'evento Elapsed è sempre in coda per l'esecuzione in un pool di thread.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.SynchronizingObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the Elapsed event to ignore subsequent events.</source>
          <target state="translated">Un modo per risolvere questa race condition è impostare un flag che indica il gestore eventi per l'evento Elapsed ignori gli eventi successivi.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer&gt; component catches and suppresses all exceptions thrown by event handlers for the Elapsed event.</source>
          <target state="translated">Il &lt;xref:System.Timers.Timer&gt;componente intercetta ed Elimina tutte le eccezioni generate dai gestori eventi per l'evento Elapsed.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is subject to change in future releases of the .NET Framework.</source>
          <target state="translated">Questo comportamento è soggetto a modifiche nelle versioni future di .NET Framework.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should raise the <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Ottiene o imposta un valore che indica se il <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> deve generare il <bpt id="p2">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting Enabled to <ph id="ph1">`true`</ph> is the same as calling &lt;xref:System.Timers.Timer.Start%2A&gt;, while setting Enabled to <ph id="ph2">`false`</ph> is the same as calling &lt;xref:System.Timers.Timer.Stop%2A&gt;.</source>
          <target state="translated">Impostare Enabled su <ph id="ph1">`true`</ph> equivale a chiamare il metodo &lt;xref:System.Timers.Timer.Start%2A&gt;, mentre l'impostazione è abilitata per <ph id="ph2">`false`</ph> è equivalente alla chiamata &lt;xref:System.Timers.Timer.Stop%2A&gt;.&lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il segnale per generare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento sempre in coda per l'esecuzione in un &lt;xref:System.Threading.ThreadPool&gt;thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Enabled property is set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Ciò potrebbe comportare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento generato dopo che la proprietà Enabled è impostata su <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example for the &lt;xref:System.Timers.Timer.Stop%2A&gt; method shows one way to work around this race condition.</source>
          <target state="translated">L'esempio di codice per il &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo illustrato un modo per aggirare questa race condition.&lt;/xref:System.Timers.Timer.Stop%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Enabled is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Se Enabled è impostato su <ph id="ph1">`true`</ph> e &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è impostato su <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;Genera il &lt;xref:System.Timers.Timer.Elapsed&gt;evento solo una volta, la prima volta l'intervallo scade.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Se l'intervallo viene impostato dopo la &lt;xref:System.Timers.Timer&gt;è avviato, il conteggio viene reimpostato.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the Enabled property to <ph id="ph1">`true`</ph>, the count starts at the time Enabled is set.</source>
          <target state="translated">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi imposta la proprietà Enabled <ph id="ph1">`true`</ph>, il conteggio inizia al momento abilitato è impostata.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after Enabled was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se l'intervallo viene reimpostato su 10 secondi quando count è 3 secondi, il &lt;xref:System.Timers.Timer.Elapsed&gt;evento viene generato per la prima volta 13 secondi dopo che è stato impostato su abilitato <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some visual designers, such as those in Microsoft Visual Studio, set the Enabled property to <ph id="ph2">`true`</ph> when inserting a new &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Alcune finestre di progettazione, ad esempio quelle in Microsoft Visual Studio, impostare la proprietà Enabled <ph id="ph2">`true`</ph> durante l'inserimento di un nuovo &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should raise the <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> event; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se il <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> deve generare il <bpt id="p3">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> evento; in caso contrario, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore predefinito è <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the timer has been disposed.</source>
          <target state="translated">Non impostare questa proprietà perché il timer è stato eliminato.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Timers.Timer.Interval*&gt; property was set to a value greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> before the timer was enabled.</source>
          <target state="translated">Il &lt;xref:System.Timers.Timer.Interval*&gt;è stata impostata su un valore maggiore di <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> prima che il timer è stato abilitato.&lt;/xref:System.Timers.Timer.Interval*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Ends the run-time initialization of a <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or by another component.</source>
          <target state="translated">Termina l'inizializzazione in fase di esecuzione di un <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> utilizzato in un form o da un altro componente.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> design environment uses this method to end the initialization of a component that is used on a form or by another component.</source>
          <target state="translated">Il <ph id="ph1">[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]</ph> ambiente di progettazione questo metodo per terminare l'inizializzazione di un componente che viene utilizzato in un form o da un altro componente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Timers.Timer.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">Il &lt;xref:System.Timers.Timer.BeginInit%2A&gt;metodo avvia l'inizializzazione.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the &lt;xref:System.Timers.Timer.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Utilizzo di &lt;xref:System.Timers.Timer.BeginInit%2A&gt;EndInit metodi e impedisce il controllo venga utilizzato prima che il completamento dell'inizializzazione.&lt;/xref:System.Timers.Timer.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval, expressed in milliseconds, at which to raise the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Ottiene o imposta l'intervallo, espresso in millisecondi, in cui generare il <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the Interval property to determine the frequency at which the &lt;xref:System.Timers.Timer.Elapsed&gt; event is fired.</source>
          <target state="translated">Utilizzare la proprietà di intervallo per determinare la frequenza con cui il &lt;xref:System.Timers.Timer.Elapsed&gt;viene generato l'evento.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the &lt;xref:System.Timers.Timer&gt; class depends on the system clock, it has the same resolution as the system clock.</source>
          <target state="translated">Poiché la &lt;xref:System.Timers.Timer&gt;classe dipende dall'orologio di sistema, ha la stessa risoluzione l'orologio di sistema.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the &lt;xref:System.Timers.Timer.Elapsed&gt; event will fire at an interval defined by the resolution of the system clock if the Interval property is less than the resolution of the system clock.</source>
          <target state="translated">Ciò significa che il &lt;xref:System.Timers.Timer.Elapsed&gt;a un intervallo definito per la risoluzione del clock di sistema se la proprietà Interval è inferiore rispetto alla risoluzione del clock di sistema viene generato l'evento.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the Interval property to 5 milliseconds.</source>
          <target state="translated">Nell'esempio seguente imposta la proprietà dell'intervallo di 5 millisecondi.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When run on a <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</source>
          <target state="translated">Quando viene eseguito un <ph id="ph1">[!INCLUDE[win7](~/add/includes/win7-md.md)]</ph> sistema il cui orologio di sistema con una risoluzione di circa 15 millisecondi, viene generato l'evento circa ogni 15 millisecondi anziché ogni 5 millisecondi.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept><ept id="p3">]</ept>       You can use the following code to determine the resolution of the system clock on the current system:       <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept>  <bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept><ept id="p7">]</ept>       If your app requires greater resolution than that offered by the &lt;xref:System.Timers.Timer&gt; class or the system clock, use the high-resolution multimedia timers; see <bpt id="p9">[</bpt>How to: Use the High-Resolution Timer<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Timers.Timer.Interval#1<ept id="p2">](~/add/codesnippet/csharp/p-system.timers.timer.in_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Timers.Timer.Interval#1<ept id="p4">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_1.vb)</ept> <ept id="p3">]</ept> è possibile utilizzare il codice seguente per determinare la risoluzione del clock di sistema nel sistema corrente: <bpt id="p5">[!code-cs</bpt> <bpt id="p6">[</bpt>System.Timers.Timer.Interval#2<ept id="p6">](~/add/codesnippet/csharp/p-system.timers.timer.in_2.cs)</ept><ept id="p5">]</ept><bpt id="p7">[!code-vb</bpt><bpt id="p8">[</bpt>System.Timers.Timer.Interval#2<ept id="p8">](~/add/codesnippet/visualbasic/p-system.timers.timer.in_2.vb)</ept> <ept id="p7">]</ept> se l'applicazione richiede la risoluzione maggiore rispetto a quello offerto dalla &lt;xref:System.Timers.Timer&gt;classe o l'orologio di sistema, utilizzare i timer multimediali ad alta risoluzione, vedere <bpt id="p9">[</bpt>procedura: utilizzare il Timer ad alta risoluzione<ept id="p9">](http://msdn.microsoft.com/library/aa964692.aspx)</ept>.&lt;/xref:System.Timers.Timer&gt;    </target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval is set after the &lt;xref:System.Timers.Timer&gt; has started, the count is reset.</source>
          <target state="translated">Se l'intervallo viene impostato dopo la &lt;xref:System.Timers.Timer&gt;è avviato, il conteggio viene reimpostato.&lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the interval to 5 seconds and then set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, the count starts at the time &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set.</source>
          <target state="translated">Ad esempio, se si imposta l'intervallo di 5 secondi e quindi impostare il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph1">`true`</ph>, il conteggio inizia al momento &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you reset the interval to 10 seconds when count is 3 seconds, the &lt;xref:System.Timers.Timer.Elapsed&gt; event is raised for the first time 13 seconds after &lt;xref:System.Timers.Timer.Enabled%2A&gt; was set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Se l'intervallo viene reimpostato su 10 secondi quando count è 3 secondi, il &lt;xref:System.Timers.Timer.Elapsed&gt;evento viene generato per la prima volta 13 secondi dopo che &lt;xref:System.Timers.Timer.Enabled%2A&gt;è stato impostato su <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Timers.Timer.Enabled%2A&gt; is set to <ph id="ph1">`true`</ph> and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph2">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Se &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostato su <ph id="ph1">`true`</ph> e &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è impostato su <ph id="ph2">`false`</ph>, &lt;xref:System.Timers.Timer&gt;Genera il &lt;xref:System.Timers.Timer.Elapsed&gt;evento solo una volta, la prima volta l'intervallo scade.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Timers.Timer.Enabled%2A&gt; is then set to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Timers.Timer.Enabled%2A&gt;viene quindi impostato su <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.Enabled%2A&gt; and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; are both set to <ph id="ph2">`false`</ph>, and the timer has previously been enabled, setting the Interval property causes the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be raised once, as if the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property had been set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se &lt;xref:System.Timers.Timer.Enabled%2A&gt;e &lt;xref:System.Timers.Timer.AutoReset%2A&gt;sono impostati entrambi su <ph id="ph2">`false`</ph>, e il timer in precedenza abilitato, l'impostazione della proprietà di intervallo causa il &lt;xref:System.Timers.Timer.Elapsed&gt;dell'evento una volta, come se il &lt;xref:System.Timers.Timer.Enabled%2A&gt;era impostata su <ph id="ph3">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the interval without raising the event, you can temporarily set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property to <ph id="ph1">`true`</ph>, set the Interval property to the desired time interval, and then immediately set the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property back to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Per impostare l'intervallo senza la generazione dell'evento, è possibile impostare temporaneamente il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà <ph id="ph1">`true`</ph>, impostare la proprietà Interval all'intervallo di tempo desiderato e quindi impostare immediatamente il &lt;xref:System.Timers.Timer.Enabled%2A&gt;proprietà nuovamente a <ph id="ph2">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The time, in milliseconds, between <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> events.</source>
          <target state="translated">Il tempo, in millisecondi, tra <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> eventi.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The value must be greater than zero, and less than or equal to <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">Il valore deve essere maggiore di zero e minore o uguale a <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default is 100 milliseconds.</source>
          <target state="translated">Il valore predefinito è 100 millisecondi.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The interval is less than or equal to zero.</source>
          <target state="translated">L'intervallo è minore o uguale a zero.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-       The interval is greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, and the timer is currently enabled.</source>
          <target state="translated">L'intervallo è maggiore di - oppure - <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>, e il timer è attualmente abilitato.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</source>
          <target state="translated">(Se il timer non è attualmente abilitato, viene generata alcuna eccezione fino a quando non sarà abilitata.)</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the site that binds the <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its container in design mode.</source>
          <target state="translated">Ottiene o imposta il sito che associa il <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> al contenitore in modalità progettazione.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as providing a way for the container to manage its components.</source>
          <target state="translated">Siti associano un &lt;xref:System.ComponentModel.Component&gt;per un &lt;xref:System.ComponentModel.Container&gt;e abilitare la comunicazione tra di essi, nonché fornendo un modo per il contenitore gestire i relativi componenti.&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface representing the site that binds the <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to its container.</source>
          <target state="translated">Un <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> interfaccia che rappresenta il sito che associa il <bpt id="p2">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> oggetto al contenitore.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Starts raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Avvia la generazione di <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento impostando &lt;xref:System.Timers.Timer.Enabled*&gt;a <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is set to <ph id="ph1">`false`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event only once, the first time the interval elapses.</source>
          <target state="translated">Se viene chiamato l'inizio e &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è impostato su <ph id="ph1">`false`</ph>, &lt;xref:System.Timers.Timer&gt;Genera il &lt;xref:System.Timers.Timer.Elapsed&gt;evento solo una volta, la prima volta l'intervallo scade.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start is called and &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph1">`true`</ph>, the &lt;xref:System.Timers.Timer&gt; raises the &lt;xref:System.Timers.Timer.Elapsed&gt; event the first time the interval elapses and continues to raise the event on the specified interval.</source>
          <target state="translated">Se viene chiamata iniziale e &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è <ph id="ph1">`true`</ph>, &lt;xref:System.Timers.Timer&gt;Genera il &lt;xref:System.Timers.Timer.Elapsed&gt;ora il primo evento, l'intervallo scade e continua a generare l'evento nell'intervallo specificato.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also start timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">È inoltre possibile avviare intervallo impostando &lt;xref:System.Timers.Timer.Enabled%2A&gt;a <ph id="ph1">`true`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If &lt;xref:System.Timers.Timer.AutoReset%2A&gt; is <ph id="ph2">`false`</ph>, the Start method must be called in order to start the count again.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Se &lt;xref:System.Timers.Timer.AutoReset%2A&gt;è <ph id="ph2">`false`</ph>, deve essere chiamato il metodo Start per avviare nuovamente il conteggio.&lt;/xref:System.Timers.Timer.AutoReset%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the Start method when the timer is enabled has no effect.</source>
          <target state="translated">Una chiamata al metodo di avvio quando è abilitato il timer non ha effetto.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is created with an interval equal to or greater than <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1, or set to an interval less than zero.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.Timers.Timer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> viene creato con un intervallo maggiore o uguale a <ph id="ph1">&amp;lt;</ph>xref:System.Int32.MaxValue?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> + 1 oppure impostarlo su un intervallo minore di zero.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Stops raising the <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event by setting &lt;xref:System.Timers.Timer.Enabled*&gt; to <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Arresta la generazione di <bpt id="p1">&lt;xref href="System.Timers.Timer.Elapsed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento impostando &lt;xref:System.Timers.Timer.Enabled*&gt;a <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Timers.Timer.Enabled*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also stop timing by setting &lt;xref:System.Timers.Timer.Enabled%2A&gt; to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">È anche possibile terminare la temporizzazione impostando &lt;xref:System.Timers.Timer.Enabled%2A&gt;a <ph id="ph1">`false`</ph>.&lt;/xref:System.Timers.Timer.Enabled%2A&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a &lt;xref:System.Threading.ThreadPool&gt; thread, so the event-handling method might run on one thread at the same time that a call to the Stop method runs on another thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Il segnale per generare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento sempre in coda per l'esecuzione in un &lt;xref:System.Threading.ThreadPool&gt;thread, pertanto il metodo di gestione degli eventi può essere eseguito su un singolo thread allo stesso tempo che una chiamata al metodo di arresto viene eseguito in un altro thread.&lt;/xref:System.Threading.ThreadPool&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might result in the &lt;xref:System.Timers.Timer.Elapsed&gt; event being raised after the Stop method is called.</source>
          <target state="translated">Ciò potrebbe comportare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento generato dopo che viene chiamato il metodo di arresto.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code example in the next section shows one way to work around this race condition.</source>
          <target state="translated">Nell'esempio di codice nella sezione successiva viene illustrato un modo per aggirare questa race condition.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Ottiene o imposta l'oggetto usato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza è trascorso un intervallo.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SynchronizingObject is <ph id="ph1">`null`</ph>, the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event is called on a thread from the system-thread pool.</source>
          <target state="translated">Quando SynchronizingObject è <ph id="ph1">`null`</ph>, il metodo che gestisce il &lt;xref:System.Timers.Timer.Elapsed&gt;eventi viene chiamato su un thread dal pool di thread del sistema.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on system-thread pools, see &lt;xref:System.Threading.ThreadPool&gt;.</source>
          <target state="translated">Per ulteriori informazioni sui pool di thread di sistema, vedere &lt;xref:System.Threading.ThreadPool&gt;.&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Timers.Timer.Elapsed&gt; event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</source>
          <target state="translated">Quando il &lt;xref:System.Timers.Timer.Elapsed&gt;evento è gestito da un componente di Windows Form visivo, ad esempio un pulsante, l'accesso al componente tramite il pool di thread del sistema potrebbe essere il risultato di un'eccezione o semplicemente potrebbero non funzionare.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid this effect by setting SynchronizingObject to a Windows Forms component, which causes the method that handles the &lt;xref:System.Timers.Timer.Elapsed&gt; event to be called on the same thread that the component was created on.</source>
          <target state="translated">Per evitare questo effetto impostando SynchronizingObject su un componente di Windows Form, che determina il metodo che gestisce il &lt;xref:System.Timers.Timer.Elapsed&gt;sullo stesso thread che il componente è stato creato l'evento.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Even if the SynchronizingObject property is not <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt; events can occur after the &lt;xref:System.Timers.Timer.Dispose%2A&gt; or &lt;xref:System.Timers.Timer.Stop%2A&gt; method has been called or after the &lt;xref:System.Timers.Timer.Enabled%2A&gt; property has been set to <ph id="ph3">`false`</ph>, because the signal to raise the &lt;xref:System.Timers.Timer.Elapsed&gt; event is always queued for execution on a thread pool thread.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Anche se la proprietà SynchronizingObject non è <ph id="ph2">`null`</ph>, &lt;xref:System.Timers.Timer.Elapsed&gt;gli eventi possono verificarsi dopo il &lt;xref:System.Timers.Timer.Dispose%2A&gt;o &lt;xref:System.Timers.Timer.Stop%2A&gt;metodo è stato chiamato o dopo il &lt;xref:System.Timers.Timer.Enabled%2A&gt;è impostata su <ph id="ph3">`false`</ph>, poiché il segnale per generare il &lt;xref:System.Timers.Timer.Elapsed&gt;evento è sempre in coda per l'esecuzione in un pool di thread.&lt;/xref:System.Timers.Timer.Elapsed&gt; &lt;/xref:System.Timers.Timer.Enabled%2A&gt; &lt;/xref:System.Timers.Timer.Stop%2A&gt; &lt;/xref:System.Timers.Timer.Dispose%2A&gt; &lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way to resolve this race condition is to set a flag that tells the event handler for the &lt;xref:System.Timers.Timer.Elapsed&gt; event to ignore subsequent events.</source>
          <target state="translated">Un modo per risolvere questa condizione di competizione consiste nell'impostare un flag che indica il gestore eventi per il &lt;xref:System.Timers.Timer.Elapsed&gt;evento ignori gli eventi successivi.&lt;/xref:System.Timers.Timer.Elapsed&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Timers.Timer&gt; is used inside Visual Studio in a Windows Forms designer, SynchronizingObject is automatically set to the control that contains the &lt;xref:System.Timers.Timer&gt;.</source>
          <target state="translated">Se il &lt;xref:System.Timers.Timer&gt;viene utilizzato all'interno di Visual Studio in una finestra di progettazione Windows Form, SynchronizingObject viene impostata automaticamente al controllo che contiene il &lt;xref:System.Timers.Timer&gt;.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you place a &lt;xref:System.Timers.Timer&gt; on a designer for <ph id="ph1">`Form1`</ph> (which inherits from &lt;xref:System.Windows.Forms.Form&gt;), the SynchronizingObject property of &lt;xref:System.Timers.Timer&gt; is set to the instance of <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Ad esempio, se si inserisce un &lt;xref:System.Timers.Timer&gt;in una finestra di progettazione per <ph id="ph1">`Form1`</ph> (che eredita da &lt;xref:System.Windows.Forms.Form&gt;), la proprietà SynchronizingObject di &lt;xref:System.Timers.Timer&gt;è impostato per l'istanza di <ph id="ph2">`Form1`</ph>.&lt;/xref:System.Timers.Timer&gt; &lt;/xref:System.Windows.Forms.Form&gt; &lt;/xref:System.Timers.Timer&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</source>
          <target state="translated">Il <bpt id="p1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> che rappresenta l'oggetto utilizzato per effettuare il marshalling delle chiamate del gestore eventi generate alla scadenza di un intervallo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Il valore predefinito è <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>