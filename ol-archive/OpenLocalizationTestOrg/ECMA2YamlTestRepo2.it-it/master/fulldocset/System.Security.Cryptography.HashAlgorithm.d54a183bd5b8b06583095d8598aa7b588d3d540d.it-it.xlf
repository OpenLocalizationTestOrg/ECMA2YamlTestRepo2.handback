<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1aca81d546fa968073c23d96d32ed689154095b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HashAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">756cb6a779bb19d48a97ba94fffa421d550c0259</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ea5afdede90d5f935aeed91b67e1b27bcf7bf29</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class from which all implementations of cryptographic hash algorithms must derive.</source>
          <target state="translated">Rappresenta la classe base dalla quale tutte le implementazioni di hash di crittografia devono derivare algoritmi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hash functions are fundamental to modern cryptography.</source>
          <target state="translated">Le funzioni hash sono essenziali per la crittografia moderna.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</source>
          <target state="translated">Queste funzioni eseguire il mapping di stringhe binarie di lunghezza arbitraria a piccole stringhe binarie di lunghezza fissa, noti come valori hash.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</source>
          <target state="translated">Una funzione hash di crittografia ha la proprietà che è impossibile da trovare due input distinti con hash sullo stesso valore.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">Le funzioni hash vengono comunemente utilizzate con le firme digitali e l'integrità dei dati.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">L'hash viene utilizzato come un valore univoco che rappresenta una grande quantità di dati di dimensione fissa.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">Gli hash di due set di dati devono corrispondere se corrispondano anche i dati corrispondenti.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">Piccole modifiche per il risultato di dati in grandi modifiche imprevisti nell'hash.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">È possibile creare un'istanza di una classe astratta.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">Il codice dell'applicazione crea una nuova istanza di una classe derivata.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, ottiene un valore che indica se è possano trasformare più blocchi.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if multiple blocks can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se è possono trasformare più blocchi; in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dal <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a simple call to the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Questo metodo è una semplice chiamata al &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;metodo.&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; class to be reallocated for other purposes.</source>
          <target state="translated">La chiamata <ph id="ph1">`Dispose`</ph> le risorse utilizzate dalla &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;classe riallocazione per altri scopi.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`Dispose`</ph>, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified byte array.</source>
          <target state="translated">Calcola il valore hash per la matrice di byte specificata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">Il codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified &lt;xref:System.IO.Stream&gt; object.</source>
          <target state="translated">Calcola il valore hash per l'oggetto specificato &lt;xref:System.IO.Stream&gt;oggetto.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">Il codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">Calcola il valore hash per l'area specificata della matrice di byte specificato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte da cui iniziare a utilizzare i dati.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">Il numero di byte nella matrice da utilizzare come dati.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">Il codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>è un valore non valido.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length is invalid.</source>
          <target state="translated">- oppure - <ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> lunghezza non valida.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>non compreso nell'intervallo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Questo parametro è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates an instance of the default implementation of a hash algorithm.</source>
          <target state="translated">Crea un'istanza dell'implementazione predefinita di un algoritmo hash.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this overload uses the &lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt; implementation of a hash algorithm.</source>
          <target state="translated">Per impostazione predefinita, questo overload viene utilizzato il &lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;implementazione di un algoritmo hash.&lt;/xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to specify a different implementation, use the &lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt; overload, which lets you specify an algorithm name, instead.</source>
          <target state="translated">Se si desidera specificare un'implementazione diversa, utilizzare il &lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;overload, che consente di specificare un nome di algoritmo, ma.&lt;/xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cryptography configuration system defines the default implementation of &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">Il sistema di configurazione di crittografia definisce l'implementazione predefinita di &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, unless the default settings have been changed using the .</source>
          <target state="translated">Un nuovo <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> istanza, a meno che le impostazioni predefinite sono state modificate tramite il.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified implementation of a hash algorithm.</source>
          <target state="translated">Crea un'istanza dell'implementazione specificata di un algoritmo hash.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The hash algorithm implementation to use.</source>
          <target state="translated">L'implementazione dell'algoritmo hash da utilizzare.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following table shows the valid values for the <ph id="ph1">`hashName`</ph> parameter and the algorithms they map to.</source>
          <target state="translated">Nella tabella seguente illustra i valori validi per il <ph id="ph1">`hashName`</ph> parametro e gli algoritmi a cui sono mappati.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameter value</source>
          <target state="translated">Valore del parametro</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">Implementa</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>SHA</source>
          <target state="translated">SHA</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>SHA1</source>
          <target state="translated">SHA1</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA1</source>
          <target state="translated">System.Security.Cryptography.SHA1</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.HashAlgorithm</source>
          <target state="translated">HashAlgorithm</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.MD5</source>
          <target state="translated">MD5</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>SHA256</source>
          <target state="translated">SHA256</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SHA-256</source>
          <target state="translated">SHA-256</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA256</source>
          <target state="translated">System.Security.Cryptography.SHA256</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>SHA384</source>
          <target state="translated">SHA384</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SHA-384</source>
          <target state="translated">SHA-384.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA384</source>
          <target state="translated">System.Security.Cryptography.SHA384</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>SHA512</source>
          <target state="translated">SHA512</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>SHA-512</source>
          <target state="translated">SHA-512.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA512</source>
          <target state="translated">System.Security.Cryptography.SHA512</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A new instance of the specified hash algorithm, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">hashName</ph><ept id="p2">&lt;/code&gt;</ept> is not a valid hash algorithm.</source>
          <target state="translated">Una nuova istanza dell'algoritmo hash specificato, o <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> se <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">hashName</ph> <ept id="p2">&lt;/code&gt;</ept> non è un algoritmo hash valido.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Rilascia tutte le risorse usate dall'istanza corrente del <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">Chiamare <ph id="ph1">`Dispose`</ph> quando si è terminato di utilizzare &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; in an unusable state.</source>
          <target state="translated">Il <ph id="ph1">`Dispose`</ph> metodo lascia la &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;in uno stato inutilizzabile.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; was occupying.</source>
          <target state="translated">Dopo la chiamata <ph id="ph1">`Dispose`</ph>, è necessario rilasciare tutti i riferimenti al &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;in modo che il garbage collector può recuperare la memoria che di &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;occupata.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt; &lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la pulizia di risorse non gestite<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> e <bpt id="p2">[</bpt>implementazione di un metodo Dispose<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Chiamare sempre <ph id="ph2">`Dispose`</ph> prima di rilasciare l'ultimo riferimento a &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;dell'oggetto <ph id="ph1">`Finalize`</ph> metodo.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dal <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e facoltativamente rilascia le risorse gestite.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e <ph id="ph2">`Finalize`</ph> metodo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>richiama <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> impostato su <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;riferimenti.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Questo metodo richiama il <ph id="ph1">`Dispose()`</ph> metodo di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per rilasciare le risorse gestite e non gestite. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the value of the computed hash code.</source>
          <target state="translated">Ottiene il valore del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Hash property is a byte array; the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property is a value that represent bits.</source>
          <target state="translated">La proprietà di Hash è una matrice di byte. il &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;proprietà è un valore che rappresentano bits.&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the number of elements in Hash is one-eighth the size of &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;.</source>
          <target state="translated">Pertanto, il numero di elementi hash è un ottavo le dimensioni di &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The current value of the computed hash code.</source>
          <target state="translated">Il valore corrente del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, indirizza i dati scritti nell'oggetto verso l'algoritmo hash per il calcolo dell'hash.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not called by application code.</source>
          <target state="translated">Questo metodo non viene chiamato dal codice dell'applicazione.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">Questo metodo astratto esegue il calcolo dell'hash.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">Ogni operazione di scrittura per l'oggetto flusso crittografato passa i dati tramite questo metodo.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">Per ogni blocco di dati, questo metodo aggiorna lo stato dell'oggetto hash viene restituito un valore hash corretto alla fine del flusso di dati.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte da cui iniziare a utilizzare i dati.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Il numero di byte nella matrice di byte da usare come dati.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, finalizza il calcolo hash dopo l'ultimo dati vengono elaborati dall'oggetto flusso crittografato.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method finalizes any partial computation and returns the correct hash value for the data stream.</source>
          <target state="translated">Questo metodo consente di finalizzare i calcoli parziali e restituisce il valore hash corretto per il flusso di dati.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">Il codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the size, in bits, of the computed hash code.</source>
          <target state="translated">Ottiene la dimensione in bit del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the computed hash code.</source>
          <target state="translated">La dimensione in bit del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Represents the size, in bits, of the computed hash code.</source>
          <target state="translated">Rappresenta la dimensione in bit del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash algorithm specifies the size of the hash code.</source>
          <target state="translated">L'algoritmo hash specifica le dimensioni del codice hash.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, &lt;xref:System.Security.Cryptography.SHA1&gt; uses a hash size of 160 bits.</source>
          <target state="translated">Ad esempio, &lt;xref:System.Security.Cryptography.SHA1&gt;utilizza una dimensione di hash di 160 bit.&lt;/xref:System.Security.Cryptography.SHA1&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property.</source>
          <target state="translated">Questo campo è possibile accedere mediante il &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;proprietà.&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Represents the value of the computed hash code.</source>
          <target state="translated">Rappresenta il valore del codice hash calcolato.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">Questo campo è possibile accedere mediante il &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;proprietà.&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Initializes an implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">Inizializza un'implementazione del <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the input block size.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, ottiene la dimensione del blocco di input.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">A meno che non viene sottoposto a override, questa proprietà restituisce il valore 1.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The input block size.</source>
          <target state="translated">La dimensione del blocco di input.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the output block size.</source>
          <target state="translated">Quando sottoposto a override in una classe derivata, ottiene la dimensione del blocco di output.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">A meno che non viene sottoposto a override, questa proprietà restituisce il valore 1.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The output block size.</source>
          <target state="translated">La dimensione del blocco di output.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Represents the state of the hash computation.</source>
          <target state="translated">Rappresenta lo stato del calcolo hash.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</source>
          <target state="translated">Questo campo viene utilizzato per impedire agli utenti di modificare la chiave di un algoritmo hash con chiave durante un'operazione di hash.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a key change is legitimate, the value of this field is zero both before and after a hash operation.</source>
          <target state="translated">Quando una modifica della chiave è legittima, il valore di questo campo è zero prima e dopo un'operazione di hash.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a key change is not legitimate, the value of this field is nonzero.</source>
          <target state="translated">Quando una modifica della chiave non è legittima, il valore di questo campo è diverso da zero.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">Da aggiungere.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</source>
          <target state="translated">Calcola il valore hash per l'area specificata della matrice di byte di input e copia l'area specificata della matrice di byte di input nell'area specificata della matrice di byte di output.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the TransformBlock method before calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method.</source>
          <target state="translated">È necessario chiamare il metodo TransformBlock prima di chiamare il &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;metodo.&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call both methods before you retrieve the final hash value.</source>
          <target state="translated">È necessario chiamare sia metodi prima di recuperare il valore hash finale.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the final hash value after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method, get the byte array contained within the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">Per recuperare il valore hash finale dopo la chiamata di &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;(metodo), ottenere la matrice di byte all'interno di &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;proprietà.&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; &lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the TransformBlock method with different input and output arrays results in an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">Chiamata al metodo TransformBlock con input diversi e i risultati di matrici di output in un &lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte di input dal quale iniziare a utilizzare i dati.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Il numero di byte nella matrice di byte di input da utilizzare come dati.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A copy of the part of the input array used to compute the hash code.</source>
          <target state="translated">Una copia della parte della matrice di input utilizzata per calcolare il codice hash.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">Offset nella matrice di byte di output da cui iniziare la scrittura dei dati.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">Il numero di byte scritti.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>utilizza un valore non valido.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid length.</source>
          <target state="translated">- oppure - <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> ha una lunghezza non valida.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>non compreso nell'intervallo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Questo parametro è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">Calcola il valore hash per l'area specificata della matrice di byte specificato.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the TransformFinalBlock method after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt; method but before you retrieve the final hash value.</source>
          <target state="translated">È necessario chiamare il metodo TransformFinalBlock dopo la chiamata di &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;metodo ma prima di recuperare il valore hash finale.&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</source>
          <target state="translated">Si noti che il valore restituito di questo metodo non è il valore hash, ma solo una copia della parte con hash dei dati di input.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the final hashed value after calling the TransformFinalBlock method, get the byte array contained in the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">Per recuperare il valore hash finale dopo la chiamata al metodo TransformFinalBlock, ottenere la matrice di byte contenuta nel &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;proprietà.&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">Calcolare il codice hash per l'input.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Offset nella matrice di byte da cui iniziare a utilizzare i dati.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Il numero di byte nella matrice di byte da usare come dati.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An array that is a copy of the part of the input that is hashed.</source>
          <target state="translated">Matrice che è una copia della parte dell'input che viene eseguito l'hashing.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>utilizza un valore non valido.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.</source>
          <target state="translated">- oppure - <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> ha lunghezza di offset non valido.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>non compreso nell'intervallo.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Questo parametro è richiesto un numero non negativo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">L'oggetto è già stato eliminato.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>