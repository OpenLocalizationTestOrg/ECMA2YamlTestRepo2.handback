<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08a0c21b43d81b7ec0fa14c20c194ee5330ec10a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.DesignerTransaction.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df38f201380cb67bce8d1e5cf5a69542b2ad063b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6048d255421b46381c032019ed37779ba8a27805</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to group a series of design-time actions to improve performance and enable most types of changes to be undone.</source>
          <target state="translated">Fornisce un modo per raggruppare una serie di azioni in fase di progettazione per migliorare le prestazioni e consentire la maggior parte dei tipi di modifiche da annullare.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transactions can track actions that can be undone later.</source>
          <target state="translated">Le transazioni possono tenere traccia delle azioni che possono essere annullate in un secondo momento.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes made during a transaction can be reversed by canceling a transaction, which automatically attempts to reverse each change by setting each changed property to its pre-change value.</source>
          <target state="translated">Le modifiche apportate durante una transazione possono essere annullate annullando una transazione, che tenterà automaticamente di invertire ogni modifica impostando tutte le proprietà modificate al valore prima della modifica.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transactions can also improve performance during a series of operations by deferring updates to the display until the completion of the transaction.</source>
          <target state="translated">Le transazioni possono inoltre migliorare le prestazioni durante una serie di operazioni rinviando gli aggiornamenti della visualizzazione fino al completamento della transazione.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a transaction is in progress, some components defer their processing until the transaction has completed by listening to the &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt; and &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; events.</source>
          <target state="translated">Quando una transazione è in corso, alcuni componenti viene rinviata fino al completamento della transazione in attesa di elaborazione di &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;e &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;eventi.&lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Properties window, for example, does not update its display after a transaction has opened until the transaction has closed.</source>
          <target state="translated">Finestra Proprietà, ad esempio, non aggiornare la visualizzazione dopo l'apertura di una transazione fino a quando la transazione è chiuso.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use transactions for reversible or multiple operations, have your designer create a DesignerTransaction for each operation or series of operations which should be reversible.</source>
          <target state="translated">Per utilizzare le transazioni per operazioni reversibili o più, è necessario creare un DesignerTransaction per ogni operazione o una serie di operazioni che devono essere reversibile.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be careful not to perform actions outside the transactions that might prevent a sequence of undo events from completing successfully.</source>
          <target state="translated">Prestare attenzione a non eseguire operazioni all'esterno le transazioni che potrebbero impedire il completamento una sequenza di eventi di annullamento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain a new DesignerTransaction by calling the &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; method of an &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.</source>
          <target state="translated">È possibile ottenere un nuovo DesignerTransaction chiamando il &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;metodo di un &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to obtain each DesignerTransaction from the active &lt;xref:System.ComponentModel.Design.IDesignerHost&gt; in order to correctly integrate with the designer transaction processing mechanism, rather than creating a new DesignerTransaction directly.</source>
          <target state="translated">Assicurarsi di ottenere ogni DesignerTransaction dalla scheda attiva &lt;xref:System.ComponentModel.Design.IDesignerHost&gt;per garantire una corretta integrazione con la transazione della finestra di progettazione al meccanismo di elaborazione, anziché creare un nuovo DesignerTransaction direttamente.&lt;/xref:System.ComponentModel.Design.IDesignerHost&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an action within a transaction, you must first create a transaction.</source>
          <target state="translated">Per eseguire un'azione all'interno di una transazione, è innanzitutto necessario creare una transazione.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then you must call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt; method before each change or set of changes occurs, and the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; method after each change or set of changes occur.</source>
          <target state="translated">È necessario chiamare il &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;metodo prima che si verifica una modifica o un set di modifiche e &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;metodo dopo una modifica o un set di modifiche.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, complete and close the transaction by calling the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt; method.</source>
          <target state="translated">Infine, completare e chiudere la transazione chiamando il &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;metodo.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When making changes to property values, use the &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt; method of a &lt;xref:System.ComponentModel.PropertyDescriptor&gt;, which calls the component change methods of the &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt; and creates a DesignerTransaction representing the change automatically.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; Quando si apportano modifiche ai valori delle proprietà, utilizzare il &lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;metodo di un &lt;xref:System.ComponentModel.PropertyDescriptor&gt;, che chiama i metodi di modifica del componente del &lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;e crea un DesignerTransaction che rappresenta la modifica automaticamente.&lt;/xref:System.ComponentModel.Design.IComponentChangeService&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor&gt; &lt;/xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a transaction, complete the following steps:      1.</source>
          <target state="translated">Per eseguire una transazione, completare i passaggi seguenti: 1.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; to obtain a DesignerTransaction that can be used to control the transaction.</source>
          <target state="translated">Chiamare &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;per ottenere un DesignerTransaction che può essere utilizzato per controllare la transazione.&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within a <ph id="ph1">`try`</ph> block, for each action that you want to track with a DesignerTransaction, call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt; method, make the change or changes, then call the &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; method to signal that the change or changes have been made.</source>
          <target state="translated">All'interno di un <ph id="ph1">`try`</ph> blocco, per ogni azione che si desidera tenere traccia con un DesignerTransaction, chiamata di &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;(metodo), apportare la modifica o le modifiche, quindi chiamare il &lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;metodo per segnalare che la modifica o le modifiche apportate.&lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt; &lt;/xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To complete the transaction, call &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt; from within a <ph id="ph1">`finally`</ph> block.</source>
          <target state="translated">Per completare la transazione, chiamare &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;dall'interno un <ph id="ph1">`finally`</ph> blocco.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, you can use the <ph id="ph1">`using`</ph> statement rather than a <ph id="ph2">`try/finally`</ph> block, such as in the following example.</source>
          <target state="translated">In c#, è possibile utilizzare il <ph id="ph1">`using`</ph> istruzione piuttosto che un <ph id="ph2">`try/finally`</ph> blocco, come illustrato nell'esempio seguente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   using (host.CreateTransaction() {   // Insert your code here.   }   ```</ph>       To cancel and attempt to roll back a transaction before it has been committed, call the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">```   using (host.CreateTransaction() {   // Insert your code here.   }   ```</ph>Per annullare e tentare di ripristinare una transazione prima che sia stato eseguito il commit, chiamare il &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;metodo.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt; method is invoked, the actions tracked by the DesignerTransaction are reversed to attempt to roll back the changes.</source>
          <target state="translated">Quando il &lt;xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;metodo viene richiamato, le operazioni tiene traccia di DesignerTransaction vengono annullate per tentare di eseguire il rollback delle modifiche.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To undo actions that occurred as part of earlier transactions, you must use the undo command provided by the development environment.</source>
          <target state="translated">Per annullare le operazioni che si sono verificati nell'ambito di transazioni precedenti, è necessario utilizzare il comando di annullamento fornito dall'ambiente di sviluppo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with no description.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe senza descrizione.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified transaction description.</source>
          <target state="translated">Inizializza una nuova istanza di <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> classe utilizzando la descrizione della transazione specificata.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the transaction with the specified description.</source>
          <target state="translated">Questo costruttore inizializza la transazione con la descrizione specificata.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A description for this transaction.</source>
          <target state="translated">Descrizione per questa transazione.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Cancels the transaction and attempts to roll back the changes made by the events of the transaction.</source>
          <target state="translated">Annulla la transazione e prova a ripristinare le modifiche apportate dagli eventi della transazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the transaction was canceled.</source>
          <target state="translated">Ottiene un valore che indica se la transazione è stata annullata.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</source>
          <target state="translated">Quando una transazione della finestra di progettazione viene annullata, il meccanismo di elaborazione delle transazioni tenta di eseguire il rollback delle modifiche apportate finora nella transazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</source>
          <target state="translated">Se l'esito è positivo è dipendente da fattori quali il tipo di ogni operazione, se altre operazioni abbiano interferito con lo stato del codice coinvolto e se una sequenza di operazioni previsto non è stato completato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the transaction was canceled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se la transazione è stata annullata. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Commits this transaction.</source>
          <target state="translated">Il commit della transazione.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a transaction has been committed, further calls to this method do nothing.</source>
          <target state="translated">Una volta che una transazione è stato eseguito il commit, ulteriormente le chiamate a questo metodo non eseguire alcuna operazione.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call this method after creating a transaction to ensure that the transaction closes properly.</source>
          <target state="translated">Chiamare sempre questo metodo dopo la creazione di una transazione per garantire che la transazione venga chiusa correttamente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the transaction was committed.</source>
          <target state="translated">Ottiene un valore che indica se è stato eseguito il commit della transazione.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the transaction was committed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Se la transazione è stata salvata. in caso contrario, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets a description for the transaction.</source>
          <target state="translated">Ottiene una descrizione per la transazione.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transaction can have a description that is useful in identifying the nature of the operation or operations.</source>
          <target state="translated">Una transazione può avere una descrizione che si rivela utile per identificare la natura dell'operazione o operazioni.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A description for the transaction.</source>
          <target state="translated">Descrizione per la transazione.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">Rilascia le risorse non gestite usate dal <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> e facoltativamente rilascia le risorse gestite.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">Questo metodo viene chiamato dal metodo pubblico <ph id="ph1">`Dispose()`</ph> (metodo) e &lt;xref:System.Object.Finalize%2A&gt;metodo.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>richiama il metodo protetto <ph id="ph2">`Dispose(Boolean)`</ph> metodo con il <ph id="ph3">`disposing`</ph> parametro impostato su <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;richiama <ph id="ph1">`Dispose`</ph> con <ph id="ph2">`disposing`</ph> impostato su <ph id="ph3">`false`</ph>.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; references.</source>
          <target state="translated">Quando il <ph id="ph1">`disposing`</ph> parametro <ph id="ph2">`true`</ph>, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;riferimenti.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Questo metodo richiama il <ph id="ph1">`Dispose()`</ph> metodo di ciascun oggetto cui viene fatto riferimento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>per rilasciare le risorse gestite e non gestite. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> per rilasciare solo le risorse non gestite.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with this object.</source>
          <target state="translated">Rilascia le risorse associate all'oggetto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This override commits this transaction if it was not already committed.</source>
          <target state="translated">Questa sostituzione il commit della transazione se non è già stato eseguito il commit.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; and cleans up resources by calling <ph id="ph1">`Dispose(false)`</ph>.</source>
          <target state="translated">Questo metodo esegue l'override &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;e pulisce le risorse chiamando <ph id="ph1">`Dispose(false)`</ph>.&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override <ph id="ph1">`Dispose(Boolean)`</ph> to customize the cleanup.</source>
          <target state="translated">Eseguire l'override <ph id="ph1">`Dispose(Boolean)`</ph> per personalizzare la pulizia.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Il codice dell'applicazione non deve chiamare questo metodo. un oggetto <ph id="ph1">`Finalize`</ph> metodo viene richiamato automaticamente durante l'operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;metodo.&lt;/xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>metodi Finalize e distruttori<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>la pulizia di risorse non gestite<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, e <bpt id="p3">[</bpt>si esegue l'override del metodo Finalize<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">Genera il <bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> evento.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a designer transaction is canceled, the transaction processing mechanism attempts to roll back the changes that have been made so far in the transaction.</source>
          <target state="translated">Quando una transazione della finestra di progettazione viene annullata, il meccanismo di elaborazione delle transazioni tenta di eseguire il rollback delle modifiche apportate finora nella transazione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether this succeeds is dependent upon such factors as the type of each operation, whether other operations interfered with any of the involved code's state, and whether a sequence of expected operations failed to complete.</source>
          <target state="translated">Se l'esito è positivo è dipendente da fattori quali il tipo di ogni operazione, se altre operazioni abbiano interferito con lo stato del codice coinvolto e se una sequenza di operazioni previsto non è stato completato.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Performs the actual work of committing a transaction.</source>
          <target state="translated">Esegue l'effettiva operazione di commit di una transazione.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a designer transaction is committed, the transaction is considered complete and does not track further changes.</source>
          <target state="translated">Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Rilascia tutte le risorse usate dal <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a transaction is disposed, it is committed.</source>
          <target state="translated">Quando viene eliminata una transazione, viene eseguito il commit.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>