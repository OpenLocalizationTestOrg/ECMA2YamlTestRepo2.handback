<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e956dad0abdc3e2bdfb9649199ef8b2da325e89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.LogicalTreeHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">faa3d5f2047d008a3d3ecec2702448ce6b0a26bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7a060b5836d0c4e39a02d0e9f64095e72e019ab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides static helper methods for querying objects in the logical tree.</source>
          <target state="translated">提供靜態 helper 方法來查詢邏輯樹狀結構中的物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The LogicalTreeHelper class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</source>
          <target state="translated">LogicalTreeHelper 類別提供方法，您可以使用傳回的物件或從子節點的邏輯樹狀結構內的特定物件的子集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on &lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt;.</source>
          <target state="translated">不過，大部分的通常要執行的物件樹狀目錄作業也會公開類似的方法或屬性上&lt;xref:System.Windows.FrameworkElement&gt;或&lt;xref:System.Windows.FrameworkContentElement&gt;.&lt;/xref:System.Windows.FrameworkContentElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, try the following:      -   Instead of calling the static &lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt; method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</source>
          <target state="translated">例如，請嘗試下列:-而不是呼叫靜態&lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;方法，傳回的列舉值的邏輯子物件，使用專用的集合，該物件的內容模型中公開。&lt;/xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</source>
          <target state="translated">支援內容模型的幾乎所有物件會都公開一些屬性，其中包含子物件的集合，並在該集合會提供直接集合介面的支援。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>-   Instead of calling the static &lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt; method to obtain a child object by specifying its name, call the &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt; method on specific objects.</source>
          <target state="translated">-而不是呼叫靜態&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;方法，以取得所指定名稱︰ 呼叫的子物件&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;或&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt;特定物件上的方法。&lt;/xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>LogicalTreeHelper is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</source>
          <target state="translated">LogicalTreeHelper 是最適合用於分析情況下您向上或向下到多個層級，則邏輯樹狀結構以遞迴方式在出差，想要用於檢查不同的父或子物件一致的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</source>
          <target state="translated">在此情況下，您可能會存取的內容模型，混合，因此使用更多的內容模型特定的應用程式開發介面會太複雜。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Attempts to bring the requested UI element into view and raises the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event on the target in order to report the results.</source>
          <target state="translated">嘗試將要求的 UI 項目帶入檢視，並引發<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.RequestBringIntoView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>才能報告的結果在目標上的事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is typically more convenient to call the instance methods &lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName&gt; rather than this static utility method.</source>
          <target state="translated">呼叫執行個體方法通常較為方便&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName&gt;或&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName&gt;而不是此靜態公用程式方法。&lt;/xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The behavior of the instance methods is equivalent to the behavior of the static method.</source>
          <target state="translated">執行個體方法的行為就相當於靜態方法的行為。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Even if the <ph id="ph1">`current`</ph> UI element provided was a &lt;xref:System.Windows.FrameworkContentElement&gt;, the resulting event is still the same &lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt; event, with the originating &lt;xref:System.Windows.FrameworkContentElement&gt; identifiable by checking the event data of the event.</source>
          <target state="translated">即使<ph id="ph1">`current`</ph>UI 項目提供&lt;xref:System.Windows.FrameworkContentElement&gt;，產生的事件方法仍然相同&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;事件，以起始端&lt;xref:System.Windows.FrameworkContentElement&gt;可識別藉由檢查事件的事件資料。&lt;/xref:System.Windows.FrameworkContentElement&gt; &lt;/xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The UI element to bring into view.</source>
          <target state="translated">使檢視成為 UI 項目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Attempts to find and return an object that has the specified name.</source>
          <target state="translated">嘗試尋找並傳回具有指定的名稱的物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The search starts from the specified object and continues into subnodes of the logical tree.</source>
          <target state="translated">搜尋會從指定的物件，然後持續至邏輯樹狀結構的子節點。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The methods &lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt; and &lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; are superficially similar to FindLogicalNode, but operate by different logic:      -   The search direction for FindLogicalNode is toward child objects (down the tree); the search direction for the <ph id="ph1">`FindName`</ph> methods is towards parent objects (up the tree).</source>
          <target state="translated">方法&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt;和&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt;表面上類似於 FindLogicalNode，但運作方式為不同的邏輯:-FindLogicalNode 搜尋方向是往 （向下樹狀目錄）; 的子物件的搜尋方向<ph id="ph1">`FindName`</ph>方法會向父物件 （向上樹狀目錄）。&lt;/xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`FindName`</ph> methods are governed by the concept of a XAML namescope.</source>
          <target state="translated">-<ph id="ph1">`FindName`</ph>方法由 XAML 名稱範圍的概念。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`FindName`</ph> you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</source>
          <target state="translated">使用<ph id="ph1">`FindName`</ph>保證都只有一個該名稱的物件存在，因為 XAML namescopes 強制執行唯一性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In contrast, FindLogicalNode ignores XAML namescope and might cross XAML namescope boundaries during the search.</source>
          <target state="translated">相反地，FindLogicalNode 忽略 XAML 名稱範圍，並可能會跨 XAML 名稱範圍界限，則進行搜尋。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As such, there is no guarantee of uniqueness of the <ph id="ph1">`elementName`</ph> name once boundaries are crossed.</source>
          <target state="translated">因此，建議您不能保證唯一性的<ph id="ph1">`elementName`</ph>名稱一旦越過界限。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about XAML namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需 XAML 名稱範圍的詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The object to start searching from.</source>
          <target state="translated">若要開始搜尋的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This object must be either a <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a <bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個物件必須<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name of the object to find.</source>
          <target state="translated">要尋找之物件的名稱。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The object with the matching name, if one is found; returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no matching name was found in the logical tree.</source>
          <target state="translated">找到相符的名稱，如果一個物件傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果邏輯樹狀結構中找不到任何相符的名稱。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the collection of immediate child objects of the specified object, by processing the logical tree.</source>
          <target state="translated">透過處理邏輯樹狀結構傳回指定之物件的立即子物件的集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use this signature and helper method primarily when you are unsure whether <ph id="ph1">`current`</ph> is a &lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt; and are also unsure whether that object's class supports its own content model collection.</source>
          <target state="translated">使用此簽章與協助程式方法主要是當您不確定是否<ph id="ph1">`current`</ph>是&lt;xref:System.Windows.FrameworkElement&gt;或&lt;xref:System.Windows.FrameworkContentElement&gt;和也是不確定該物件的類別是否支援它自己的內容模型的集合。&lt;/xref:System.Windows.FrameworkContentElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</source>
          <target state="translated">如果您可以判斷您要查詢之物件的類型，請檢查您知道的特定內容屬性存在於該型別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if you know that the object you are querying is an &lt;xref:System.Windows.Controls.ItemsControl&gt;, check the &lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt; property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</source>
          <target state="translated">例如，如果您知道物件查詢的是&lt;xref:System.Windows.Controls.ItemsControl&gt;，檢查&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;屬性來取得強類型的集合，其中具有集合介面的支援，而且可能比更清楚的列舉值。&lt;/xref:System.Windows.Controls.ItemsControl.Items%2A&gt; &lt;/xref:System.Windows.Controls.ItemsControl&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">要從中開始處理邏輯樹狀結構的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This is expected to be either a <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這應該是<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The enumerable collection of immediate child objects from the logical tree of the specified object.</source>
          <target state="translated">從指定之物件的邏輯樹狀結構的立即子物件的可列舉集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the collection of immediate child objects of the specified <bpt id="p1">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by processing the logical tree.</source>
          <target state="translated">傳回指定的立即子物件的集合<bpt id="p1">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>透過處理邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">要從中開始處理邏輯樹狀結構的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The enumerable collection of immediate child objects starting from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">current</ph><ept id="p1">&lt;/code&gt;</ept> in the logical tree.</source>
          <target state="translated">從開始的立即子物件的可列舉集合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">current</ph> <ept id="p1">&lt;/code&gt;</ept>邏輯樹狀結構中。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns the collection of immediate child objects of the specified <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> by processing the logical tree.</source>
          <target state="translated">傳回指定的立即子物件的集合<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>透過處理邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">要從中開始處理邏輯樹狀結構的物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The enumerable collection of immediate child objects starting from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">current</ph><ept id="p1">&lt;/code&gt;</ept> in the logical tree.</source>
          <target state="translated">從開始的立即子物件的可列舉集合<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">current</ph> <ept id="p1">&lt;/code&gt;</ept>邏輯樹狀結構中。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the parent object of the specified object by processing the logical tree.</source>
          <target state="translated">傳回指定之物件的父物件透過處理邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method is merely a wrapper that gets the appropriate type version (&lt;xref:System.Windows.FrameworkElement&gt; or &lt;xref:System.Windows.FrameworkContentElement&gt;) of the &lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName&gt; property; so unless you are unable to determine the <ph id="ph1">`current`</ph> type, you might want to check the respective instance properties instead.</source>
          <target state="translated">這個方法是只包裝函式可取得適當的型別版本 (&lt;xref:System.Windows.FrameworkElement&gt;或&lt;xref:System.Windows.FrameworkContentElement&gt;) 的&lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName&gt;或&lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName&gt;屬性，則為，除非您無法判斷<ph id="ph1">`current`</ph>類型，您可以改為檢查個別的執行個體的屬性。&lt;/xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.FrameworkContentElement&gt; &lt;/xref:System.Windows.FrameworkElement&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The object to find the parent object for.</source>
          <target state="translated">要尋找的父物件的物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This is expected to be either a <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or a <bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這應該是<bpt id="p1">&lt;xref href="System.Windows.FrameworkElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.FrameworkContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The requested parent object.</source>
          <target state="translated">要求的父物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>