<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1aca81d546fa968073c23d96d32ed689154095b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.HashAlgorithm.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1571f9ccc06cd41850ebf85587d11eabeb9df251</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ea5afdede90d5f935aeed91b67e1b27bcf7bf29</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class from which all implementations of cryptographic hash algorithms must derive.</source>
          <target state="translated">表示實作從它所有的加密編譯雜湊演算法必須衍生的基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hash functions are fundamental to modern cryptography.</source>
          <target state="translated">雜湊函式是現代的密碼編譯的基礎。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These functions map binary strings of an arbitrary length to small binary strings of a fixed length, known as hash values.</source>
          <target state="translated">這些函式會對應至固定長度，又稱為雜湊值的小型二進位字串的任意長度的二進位字串。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value.</source>
          <target state="translated">密碼編譯雜湊函數具有屬性無法進行該雜湊處理至相同的值找到兩個不同的輸入。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Hash functions are commonly used with digital signatures and for data integrity.</source>
          <target state="translated">雜湊函式通常用於使用數位簽章，資料的完整性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">使用雜湊是設為固定大小，表示大量資料的唯一值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">如果對應的資料也會比對，應該符合兩組資料的雜湊。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">對資料進行小變更會導致無法預期的大量變更，雜湊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">您無法建立抽象類別的執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Application code creates a new instance of a derived class.</source>
          <target state="translated">應用程式程式碼會建立衍生類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">取得值，指出是否可重複使用目前的轉換。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">當在衍生類別中覆寫時，取得值，指出是否可以轉換多個區塊。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if multiple blocks can be transformed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以轉換多個區塊。，否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is a simple call to the &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">這個方法是簡單呼叫&lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; class to be reallocated for other purposes.</source>
          <target state="translated">呼叫<ph id="ph1">`Dispose`</ph>允許所使用的資源&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;類別，以重新配置原本用於其他用途。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">`Dispose`</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified byte array.</source>
          <target state="translated">計算指定的位元組陣列的雜湊值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算的雜湊程式碼中。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified &lt;xref:System.IO.Stream&gt; object.</source>
          <target state="translated">計算指定的雜湊值&lt;xref:System.IO.Stream&gt;物件。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算的雜湊程式碼中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">計算指定的位元組陣列的指定區域的雜湊值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">中要開始使用資料的位元組陣列的位移。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">陣列中要用作資料的位元組數目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算的雜湊程式碼中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph>是無效的值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length is invalid.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>長度無效。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>已超出範圍。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">這個參數需要非負數。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Creates an instance of the default implementation of a hash algorithm.</source>
          <target state="translated">建立執行個體的雜湊演算法的預設實作。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, this overload uses the &lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt; implementation of a hash algorithm.</source>
          <target state="translated">根據預設，這個多載會使用&lt;xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;雜湊演算法的實作。&lt;/xref:System.Security.Cryptography.SHA1CryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you want to specify a different implementation, use the &lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt; overload, which lets you specify an algorithm name, instead.</source>
          <target state="translated">如果您想要指定不同的實作，使用&lt;xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;多載，可讓您指定的演算法名稱，改為。&lt;/xref:System.Security.Cryptography.HashAlgorithm.Create%28System.String%29&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The cryptography configuration system defines the default implementation of &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">密碼編譯組態系統定義的預設實作的&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, unless the default settings have been changed using the .</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Security.Cryptography.SHA1CryptoServiceProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>執行個體，除非已經變更預設設定使用。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified implementation of a hash algorithm.</source>
          <target state="translated">建立雜湊演算法之指定實作的執行個體。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The hash algorithm implementation to use.</source>
          <target state="translated">要使用的雜湊演算法實作。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following table shows the valid values for the <ph id="ph1">`hashName`</ph> parameter and the algorithms they map to.</source>
          <target state="translated">下表顯示有效的值<ph id="ph1">`hashName`</ph>參數以及它們所對應的演算法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Parameter value</source>
          <target state="translated">參數值</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">實作</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>SHA</source>
          <target state="translated">SHA</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>SHA1</source>
          <target state="translated">SHA1</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA1</source>
          <target state="translated">System.Security.Cryptography.SHA1</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.HashAlgorithm</source>
          <target state="translated">System.Security.Cryptography.HashAlgorithm</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.MD5</source>
          <target state="translated">System.Security.Cryptography.MD5</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>SHA256</source>
          <target state="translated">SHA256</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>SHA-256</source>
          <target state="translated">SHA-256</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA256</source>
          <target state="translated">System.Security.Cryptography.SHA256</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>SHA384</source>
          <target state="translated">SHA384</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>SHA-384</source>
          <target state="translated">SHA-384</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA384</source>
          <target state="translated">System.Security.Cryptography.SHA384</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>SHA512</source>
          <target state="translated">SHA512</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>SHA-512</source>
          <target state="translated">SHA&amp;512;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>System.Security.Cryptography.SHA512</source>
          <target state="translated">System.Security.Cryptography.SHA512</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A new instance of the specified hash algorithm, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">hashName</ph><ept id="p2">&lt;/code&gt;</ept> is not a valid hash algorithm.</source>
          <target state="translated">指定的雜湊演算法的新執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">hashName</ph> <ept id="p2">&lt;/code&gt;</ept>不是有效的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">目前的執行個體所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">呼叫<ph id="ph1">`Dispose`</ph>當您完成使用&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>方法會使&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;中無法使用的狀態。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">`Dispose`</ph>，您必須釋放所有參考&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;所佔用。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt; &lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 永遠呼叫<ph id="ph2">`Dispose`</ph>釋放您的最後一個參考至&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;之前</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;物件的<ph id="ph1">`Finalize`</ph>方法。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.HashAlgorithm&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數是<ph id="ph2">`true`</ph>，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;參考。&lt;/xref:System.Security.Cryptography.HashAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">`Dispose()`</ph>每個參考物件的方法。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the value of the computed hash code.</source>
          <target state="translated">取得計算的雜湊程式碼的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The Hash property is a byte array; the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property is a value that represent bits.</source>
          <target state="translated">雜湊值的位元組陣列。&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;屬性是代表位元的值。&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Therefore, the number of elements in Hash is one-eighth the size of &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;.</source>
          <target state="translated">因此，在雜湊中的項目數是八分之一&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;.&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;的大小</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The current value of the computed hash code.</source>
          <target state="translated">目前計算的雜湊程式碼的值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm.HashValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, routes data written to the object into the hash algorithm for computing the hash.</source>
          <target state="translated">當在衍生類別中覆寫時，會路由傳送到雜湊演算法來計算雜湊會寫入物件的資料。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This method is not called by application code.</source>
          <target state="translated">應用程式碼，不會呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">此抽象方法會執行雜湊計算。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">每次寫入至密碼編譯資料流物件會將資料傳遞到這個方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">對於每個資料區塊，這個方法會更新雜湊物件的狀態，以便在資料流結尾傳回正確的雜湊值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">中要開始使用資料的位元組陣列的位移。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">在要用作資料的位元組陣列中的位元組數目。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">在衍生類別中覆寫，對雜湊計算做最後密碼編譯資料流物件處理最後一個資料之後。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method finalizes any partial computation and returns the correct hash value for the data stream.</source>
          <target state="translated">這個方法會完成任何部分的計算，並傳回資料流的正確雜湊值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The computed hash code.</source>
          <target state="translated">計算的雜湊程式碼中。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the size, in bits, of the computed hash code.</source>
          <target state="translated">取得位元為單位計算的雜湊程式碼中的大小。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The size, in bits, of the computed hash code.</source>
          <target state="translated">大小，以位元為單位計算的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Represents the size, in bits, of the computed hash code.</source>
          <target state="translated">表示的大小，以位元為單位計算的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The hash algorithm specifies the size of the hash code.</source>
          <target state="translated">雜湊演算法指定雜湊程式碼的大小。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>For example, &lt;xref:System.Security.Cryptography.SHA1&gt; uses a hash size of 160 bits.</source>
          <target state="translated">例如，&lt;xref:System.Security.Cryptography.SHA1&gt;會 160 位元的雜湊大小。&lt;/xref:System.Security.Cryptography.SHA1&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt; property.</source>
          <target state="translated">這個欄位透過存取&lt;xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;屬性。&lt;/xref:System.Security.Cryptography.HashAlgorithm.HashSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Represents the value of the computed hash code.</source>
          <target state="translated">代表計算的雜湊程式碼的值。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This field is accessed through the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">這個欄位透過存取&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;屬性。&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Initializes an implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的實作<bpt id="p1">&lt;xref href="System.Security.Cryptography.HashAlgorithm"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the input block size.</source>
          <target state="translated">當在衍生類別中覆寫時，取得輸入的區塊的大小。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">除非覆寫時，這個屬性會傳回值 1。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The input block size.</source>
          <target state="translated">輸入的區塊的大小。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the output block size.</source>
          <target state="translated">當在衍生類別中覆寫時，取得輸出區塊的大小。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Unless overridden, this property returns the value 1.</source>
          <target state="translated">除非覆寫時，這個屬性會傳回值 1。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The output block size.</source>
          <target state="translated">輸出區塊的大小。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Represents the state of the hash computation.</source>
          <target state="translated">表示雜湊計算的狀態。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This field is used to prevent users from changing the key of a keyed hash algorithm during a hash operation.</source>
          <target state="translated">這個欄位用來防止使用者變更的金鑰雜湊演算法的金鑰雜湊作業期間。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When a key change is legitimate, the value of this field is zero both before and after a hash operation.</source>
          <target state="translated">合法金鑰變更時，這個欄位的值是零之前和之後的雜湊作業。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>When a key change is not legitimate, the value of this field is nonzero.</source>
          <target state="translated">不合法金鑰變更時，這個欄位的值不是零。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the input byte array and copies the specified region of the input byte array to the specified region of the output byte array.</source>
          <target state="translated">計算輸入的位元組陣列的指定區域的雜湊值，並將輸入的位元組陣列的指定的區域複製到輸出位元組陣列的指定區域。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You must call the TransformBlock method before calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method.</source>
          <target state="translated">您必須先呼叫 Transformblock&lt;tinput 方法呼叫之前&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;方法。&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>You must call both methods before you retrieve the final hash value.</source>
          <target state="translated">您必須先呼叫這兩種方法，然後再擷取最終雜湊值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To retrieve the final hash value after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt; method, get the byte array contained within the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">要擷取其最終雜湊值之後呼叫&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;方法，取得位元組陣列，內含&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;屬性。&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; &lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Calling the TransformBlock method with different input and output arrays results in an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">呼叫&lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt; Transformblock&lt;tinput 方法使用不同的輸入和輸出陣列的結果</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">中要開始使用資料來源的輸入的位元組陣列的位移。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">輸入的位元組陣列中要用作資料的位元組數目。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A copy of the part of the input array used to compute the hash code.</source>
          <target state="translated">用來計算雜湊程式碼之輸入陣列部分的複本。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">要從其中開始將資料寫入的輸出位元組陣列中的位移。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The number of bytes written.</source>
          <target state="translated">寫入的位元組數目。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>使用無效的值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid length.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>長度無效。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>已超出範圍。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">這個參數需要非負數。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Computes the hash value for the specified region of the specified byte array.</source>
          <target state="translated">計算指定的位元組陣列的指定區域的雜湊值。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You must call the TransformFinalBlock method after calling the &lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt; method but before you retrieve the final hash value.</source>
          <target state="translated">您必須呼叫 TransformFinalBlock 方法之後呼叫&lt;xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;方法之前擷取的最後一個雜湊值。&lt;/xref:System.Security.Cryptography.HashAlgorithm.TransformBlock%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Note that the return value of this method is not the hash value, but only a copy of the hashed part of the input data.</source>
          <target state="translated">請注意，這個方法的傳回值不是雜湊值，但輸入資料的雜湊的組件的複本。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To retrieve the final hashed value after calling the TransformFinalBlock method, get the byte array contained in the &lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt; property.</source>
          <target state="translated">若要擷取的最終雜湊的值之後呼叫 TransformFinalBlock 方法，取得位元組陣列中包含&lt;xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;屬性。&lt;/xref:System.Security.Cryptography.HashAlgorithm.Hash%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The input to compute the hash code for.</source>
          <target state="translated">要計算的雜湊碼的輸入。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">中要開始使用資料的位元組陣列的位移。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">在要用作資料的位元組陣列中的位元組數目。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An array that is a copy of the part of the input that is hashed.</source>
          <target state="translated">陣列，是一份雜湊輸入的一部分。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputCount&lt;/code&gt;</ph>使用無效的值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> has an invalid offset length.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>具有無效的位移長度。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputBuffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;inputOffset&lt;/code&gt;</ph>已超出範圍。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">這個參數需要非負數。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The object has already been disposed.</source>
          <target state="translated">物件已處置。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>