<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18e730162e3264a7bcd2b35b6f6319b1f0643671</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.ECDiffieHellman.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6d91033291154c7031f833ab34a61fb5a5e273d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6fa8106f6c74ff2a1ac7908f33bf6e6e89ede61</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class that Elliptic Curve Diffie-Hellman (ECDH) algorithm implementations can derive from.</source>
          <target state="translated">請提供該 Elliptic Curve Diffie-hellman (ECDH) 演算法的實作可以衍生自抽象的基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class provides the basic set of operations that all ECDH implementations must support.</source>
          <target state="translated">這個類別會提供一組基本的所有 ECDH 實作必須都支援的作業。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class serves as the abstract base class for ECDH implementations.</source>
          <target state="translated">這個類別可做為 ECDH 實作抽象基底類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This constructor is called by classes that derive from the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; class.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;類別&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;衍生的類別會呼叫這個建構函式</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt; class is the only implementation that is currently included in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;類別是目前包含在唯一實作<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For information about how to create a new implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm, see the &lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt; method.</source>
          <target state="translated">如需如何建立新的實作 Elliptic Curve Diffie-hellman (ECDH) 演算法的資訊，請參閱&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;方法。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">建立 Elliptic Curve Diffie-hellman (ECDH) 演算法的預設實作的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A new instance of the default implementation of this class.</source>
          <target state="translated">預設實作，這個類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specified implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">建立之指定實作的 Elliptic Curve Diffie-hellman (ECDH) 演算法的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you develop your own implementation of an &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; object, you can use the Create method overload to create a custom <ph id="ph1">`algorithm`</ph> string that specifies your implementation.</source>
          <target state="translated">如果您要開發自己的實作&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;物件，您可以使用建立方法多載來建立自訂<ph id="ph1">`algorithm`</ph>字串，指定您的實作。&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`algorithm`</ph> parameter specifies the name of an implementation of the ECDH algorithm.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>參數會指定名稱的 ECDH 演算法的實作。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following strings all refer to the same implementation, which is the only implementation currently supported in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>:      -   "ECDH"      -   "ECDiffieHellman"      -   "ECDiffieHellmanCng"      -   "System.Security.Cryptography.ECDiffieHellmanCng"       You can also provide the name of a custom ECDH implementation for the <ph id="ph2">`algorithm`</ph> parameter.</source>
          <target state="translated">中支援下列字串都參考相同的實作中，目前是唯一的實作<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>:-"ECDH"-"ECDiffieHellman"-"ECDiffieHellmanCng"-"System.Security.Cryptography.ECDiffieHellmanCng 「 您可以提供的自訂 ECDH 實作名稱<ph id="ph2">`algorithm`</ph>參數。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you do that, the &lt;xref:System.Security.Cryptography.CryptoConfig&gt; object will use it to determine whether an ECDH object can be created.</source>
          <target state="translated">如果您這樣做，請&lt;xref:System.Security.Cryptography.CryptoConfig&gt;物件將會使用它來判斷是否可以建立 ECDH 物件。&lt;/xref:System.Security.Cryptography.CryptoConfig&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of an implementation of the ECDH algorithm.</source>
          <target state="translated">實作 ECDH 演算法的名稱。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A new instance of the specified implementation of this class.</source>
          <target state="translated">指定實作這個類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the specified algorithm name does not map to an ECDH implementation, this method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果指定的演算法名稱不會對應至 ECDH 實作，這個方法會傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">algorithm</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key and hash algorithm's name.</source>
          <target state="translated">衍生位元組，可用做為索引鍵使用雜湊函式，另一個合作對象的公用金鑰和雜湊演算法的名稱。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This overload calls the &lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt; method passing <ph id="ph1">`null`</ph> as the prepend and append values.</source>
          <target state="translated">這個多載呼叫&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;方法傳遞<ph id="ph1">`null`</ph>前面加上為附加的值。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">要用來衍生金鑰內容的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">在衍生類別中實作時，衍生可用做為索引鍵使用雜湊函式，指定另一個合作對象的公開金鑰、 雜湊演算法名稱，前面加上值和新增值的位元組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">要用來衍生金鑰內容的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">要在前面加上密碼所衍生雜湊之前的值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">要附加至衍生的密碼雜湊之前的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">在衍生的類別必須覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">衍生可做為索引鍵使用雜湊式訊息驗證碼 (HMAC) 的位元組。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This overload calls the &lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt; method passing <ph id="ph1">`null`</ph> as the prepend and append values.</source>
          <target state="translated">這個多載呼叫&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;方法傳遞<ph id="ph1">`null`</ph>前面加上為附加的值。&lt;/xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">要用來衍生金鑰內容的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC 金鑰。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">在衍生類別中實作時，衍生位元組，可用做為索引鍵使用雜湊式訊息驗證碼 (HMAC)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">要用來衍生金鑰內容的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC 金鑰。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">要在前面加上密碼所衍生雜湊之前的值。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">要附加至衍生的密碼雜湊之前的值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">在衍生的類別必須覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Derives bytes that can be used as a key, given another party's public key.</source>
          <target state="translated">衍生位元組可以做為索引鍵，指定另一個合作對象的公開金鑰。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information about public keys, see the &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; class.</source>
          <target state="translated">如需公開金鑰的詳細資訊，請參閱&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;類別。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">在衍生類別中實作時，衍生可用做為使用傳輸層安全性 (TLS) Pseudo-Random 函式 (PRF) 衍生演算法的索引鍵的位元組。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The other party's public key.</source>
          <target state="translated">另一方的公開金鑰。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">ASCII 編碼的 PRF 標籤。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">64 位元組的 PRF 種子。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">從另一方的公開金鑰的金鑰交換金鑰內容。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">在衍生的類別必須覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the name of the key exchange algorithm.</source>
          <target state="translated">取得金鑰交換演算法的名稱。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default (non-overridden) implementation of this property returns the string "ECDiffieHellman".</source>
          <target state="translated">這個屬性的預設值 （非覆寫） 實作會傳回字串"ECDiffieHellman"。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This property is inherited from the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; base class.</source>
          <target state="translated">這個屬性被繼承自&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;基底類別。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">金鑰交換演算法的名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the public key that is being used by the current Elliptic Curve Diffie-Hellman (ECDH) instance.</source>
          <target state="translated">取得目前的 Elliptic Curve Diffie-hellman (ECDH) 執行個體正在使用的公開金鑰。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The public part of the ECDH key pair that is being used by this <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">正在使用此 ECDH 金鑰組的公開部分<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>執行個體。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the name of the signature algorithm.</source>
          <target state="translated">取得簽章演算法的名稱。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This property is inherited from the &lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt; base class.</source>
          <target state="translated">這個屬性被繼承自&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;基底類別。&lt;/xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm is used for key derivation, not digital signature generation.</source>
          <target state="translated">Elliptic Curve Diffie-hellman (ECDH) 演算法的金鑰衍生，用於產生沒有數位簽章。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Therefore, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">因此，這個屬性會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Always <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>