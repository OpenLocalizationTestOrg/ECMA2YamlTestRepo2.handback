<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4630f91e3baca4c8c73026f92f6ba246ae29a8e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Interop.WindowInteropHelper.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab2f7c061939da3a25e1005ab14b5a26021c85db</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b86cfff4608a46f453ed9a38fd30635f7c287a1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Assists interoperation between <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> and <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> code.</source>
          <target state="translated">之間的互通性，來協助<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>和<ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>程式碼。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Members of this class allows the caller to have internal access to the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> HWND and the parent HWND of a <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">這個類別的成員可讓內部存取呼叫者<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>HWND 和父 HWND 的<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt;.&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The proper security checks are performed by those members.</source>
          <target state="translated">適當的安全性檢查都是透過這些成員。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Use this class whenever you need a more specific object based on its HWND.</source>
          <target state="translated">每當您需要根據 HWND 更特定的物件時，請使用這個類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An example scenario is if you need to host a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">如果您要裝載即為一例<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>對話方塊<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initialize the WindowInteropHelper with a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window object for the dialog box.</source>
          <target state="translated">初始化與 WindowInteropHelper<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>對話方塊視窗物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can then get the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window's handle (HWND) from the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property and specify the owner for the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window with the &lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt; property.</source>
          <target state="translated">您可以取得<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>視窗的控制代碼 (HWND) 與&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;屬性和指定的擁有人<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>視窗&lt;xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt;屬性。&lt;/xref:System.Windows.Interop.WindowInteropHelper.Owner%2A&gt; &lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example shows how to use WindowInteropHelper when hosting a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> dialog box in a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">下列程式碼範例示範如何裝載時，使用 WindowInteropHelper<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>對話方塊<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>CorePseudocode#WindowInteropHelper<ept id="p2">](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CorePseudocode#WindowInteropHelper<ept id="p4">](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper)</ept><ept id="p3">]</ept>       Another scenario supported by this class is to obtain a &lt;xref:System.Windows.Interop.HwndSource&gt; object from a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> &lt;xref:System.Windows.Window&gt; object.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>CorePseudocode #WindowInteropHelper<ept id="p2">](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CorePseudocode #WindowInteropHelper<ept id="p4">](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper)</ept> <ept id="p3">]</ept>這個類別支援的另一種情況，是取得&lt;xref:System.Windows.Interop.HwndSource&gt;物件從<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>&lt;xref:System.Windows.Window&gt;物件。&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;  </target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Interop.HwndSource&gt; enables direct processing of <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> messages through the &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.Windows.Interop.HwndSource&gt;可讓您直接處理<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>訊息透過&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;方法。&lt;/xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>By using &lt;xref:System.Windows.Interop.HwndSource&gt; and &lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; in place of a &lt;xref:System.Windows.Window&gt; you can still handle messages that have no equivalent or handling in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">使用&lt;xref:System.Windows.Interop.HwndSource&gt;和&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;取代&lt;xref:System.Windows.Window&gt;您仍然可以處理不對應或處理中的訊息<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>。&lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Interop.HwndSource.AddHook%2A&gt; &lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a WindowInteropHelper with the &lt;xref:System.Windows.Window&gt; source, then call &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; on the WindowInteropHelper to get from HWND to &lt;xref:System.Windows.Interop.HwndSource&gt;.</source>
          <target state="translated">建立與&lt;xref:System.Windows.Window&gt;來源，然後呼叫&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;以取得從 HWND &lt;xref:System.Windows.Interop.HwndSource&gt;.&lt;/xref:System.Windows.Interop.HwndSource&gt; WindowInteropHelper&lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; &lt;/xref:System.Windows.Window&gt; WindowInteropHelper</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for a specified <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>針對指定的類別<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>視窗。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> application.</source>
          <target state="translated">視窗可以是對話方塊中或視窗，否則會不適合用來裝載界限內<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> window object.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph>視窗物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates the HWND of the window if the HWND has not been created yet.</source>
          <target state="translated">如果將 HWND 尚未建立，請建立視窗的 HWND。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the EnsureHandle method when you want to separate window handle (HWND) creation from the actual showing of the managed &lt;xref:System.Windows.Window&gt;.</source>
          <target state="translated">當您想要分隔實際顯示的受管理的&lt;xref:System.Windows.Window&gt;。&lt;/xref:System.Windows.Window&gt;的視窗控制代碼 (HWND) 建立使用 EnsureHandle 方法</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</source>
          <target state="translated">當您有可以完成其工作，而不需要顯示視窗的自動化用戶端時，這非常有用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the native window has not yet been created, this method creates the native window, sets the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property, and returns the HWND.</source>
          <target state="translated">如果尚未建立原生視窗，這個方法會建立原生視窗中，設定&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;屬性，並傳回 HWND。&lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the native window has been created already, the handle of the existing native window is returned.</source>
          <target state="translated">如果已經建立原生視窗，則會傳回現有的原生視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the native window is created as a result of calling this method, the &lt;xref:System.Windows.Window.SourceInitialized&gt; event is raised.</source>
          <target state="translated">如果因為呼叫這個方法，建立原生視窗&lt;xref:System.Windows.Window.SourceInitialized&gt;就會引發事件。&lt;/xref:System.Windows.Window.SourceInitialized&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Querying the &lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt; property after the EnsureHandle method is called returns the existing window handle.</source>
          <target state="translated">查詢&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;EnsureHandle 方法呼叫之後的屬性會傳回現有的視窗控制代碼。&lt;/xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The visual tree is not attached to the window until after the &lt;xref:System.Windows.Window.Show%2A&gt; method is called.</source>
          <target state="translated">視覺化樹狀結構未連接至後直到視窗&lt;xref:System.Windows.Window.Show%2A&gt;方法呼叫。&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Calling the EnsureHandle method more than one time does not create new window handles.</source>
          <target state="translated">呼叫 EnsureHandle 方法超過一次並不會建立新的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Calling the EnsureHandle method when the handle has already been created by a call to the &lt;xref:System.Windows.Window.Show%2A&gt; method does not create a new window handle.</source>
          <target state="translated">當呼叫已建立之控制代碼呼叫 EnsureHandle 方法&lt;xref:System.Windows.Window.Show%2A&gt;方法不會建立新的視窗控制代碼。&lt;/xref:System.Windows.Window.Show%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A native window is only created when no handle exists when the EnsureHandle method is called.</source>
          <target state="translated">沒有控制代碼存在 EnsureHandle 方法呼叫時，才會建立原生的視窗。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</source>
          <target state="translated">視窗屬性所設定使用原生視窗應用程式開發介面，透過 p/invoke 可能不會出現在受管理的應用程式開發介面視窗。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the EnsureHandle method is called, the &lt;xref:System.Windows.Window.Topmost%2A&gt; property is not guaranteed to reflect the native setting.</source>
          <target state="translated">例如，如果您設定後呼叫 EnsureHandle 方法時，使用原生 MS_EX_TOPMOST 旗標是最上層視窗&lt;xref:System.Windows.Window.Topmost%2A&gt;屬性不一定會反映原始設定。&lt;/xref:System.Windows.Window.Topmost%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IntPtr&gt; that represents the HWND.</source>
          <target state="translated">&lt;xref:System.IntPtr&gt;表示 HWND。&lt;/xref:System.IntPtr&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the window handle for a <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window that is used to create this <bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得的視窗控制代碼<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>視窗用來建立此<bpt id="p1">&lt;xref href="System.Windows.Interop.WindowInteropHelper"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> window handle (HWND).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>視窗控制代碼 (HWND)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the handle of the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> owner window.</source>
          <target state="translated">取得或設定的控制代碼<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>主控視窗。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can reparent windows by setting this property.</source>
          <target state="translated">您可以重設 windows 藉由設定這個屬性中的父代。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As is true for general <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph> programming, do not reparent windows that are already in use.</source>
          <target state="translated">True 會對一般<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]</ph>程式設計，請勿不重設父代已經在使用中的 windows。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The owner window handle (HWND).</source>
          <target state="translated">擁有者的視窗控制代碼 (HWND) 中。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>