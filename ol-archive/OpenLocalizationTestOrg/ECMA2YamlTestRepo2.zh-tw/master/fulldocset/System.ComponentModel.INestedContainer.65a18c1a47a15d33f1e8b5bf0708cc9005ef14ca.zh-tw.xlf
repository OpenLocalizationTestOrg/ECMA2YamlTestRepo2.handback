<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f65fc67ce7392cbd0da2f5dd98544a7f7125ac13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.INestedContainer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1adad88eee8b83102338eff0310f8712288e1d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">354f90a81f46fa3183a1ffadf94ec4ca56487fa3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality for nested containers, which logically contain zero or more other components and are owned by a parent component.</source>
          <target state="translated">提供巢狀容器，邏輯上包含零或多個其他元件和父元件所擁有的功能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The INestedContainer interface adds the concept of an owning component to the &lt;xref:System.ComponentModel.IContainer&gt; interface.</source>
          <target state="translated">INestedContainer 介面加入至主控元件的概念&lt;xref:System.ComponentModel.IContainer&gt;介面。&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A nested container is an object that logically, but not necessarily visually, contains zero or more child components and is owned by some parent component.</source>
          <target state="translated">巢狀的容器是邏輯上，但不是一定是以視覺化方式，包含零個或多個子元件和某些父元件所擁有的物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For visual containment, the owning component is often another container.</source>
          <target state="translated">針對 visual 的內含項目，主控的元件通常是另一個容器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Nested containers allow sections of a control to be designable, without requiring an explicit serialized member variable or a custom serializer for each subcontrol.</source>
          <target state="translated">巢狀的容器允許的設計控制項，而不需要明確序列化的成員變數或自訂序列化程式的每個子控制項的區段。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Instead, the form designer maintains one master container of components.</source>
          <target state="translated">相反地，在表單設計工具會維護一個主要元件容器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each component’s site may have a nested container that provides a place to put extra components.</source>
          <target state="translated">每個元件的站台可能會有巢狀的容器可放置的額外元件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a component is sited in a nested container, the name it receives is a combination of its given name and its owning component’s name.</source>
          <target state="translated">元件設置在巢狀容器，它所接收的名稱時，其指定名稱和其主控的元件名稱的組合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Additionally, components added to a nested container have full access to the services of the parent container, and the nested container provides the same behavior of the parent with respect to adding new components.</source>
          <target state="translated">此外，元件加入至巢狀容器擁有完整存取權的父容器中，服務和巢狀的容器會提供對於新增新元件父系的相同的行為。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The nested container will create the designer for each component it contains, thereby enabling design-time support.</source>
          <target state="translated">巢狀的容器將會建立每個元件、 包含設計工具藉此讓設計階段支援。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because standard code serializers do not look at nested containers, these components are only serialized if a path to them can be obtained by walking the components in the primary container.</source>
          <target state="translated">因為標準的程式碼序列化程式不會查看巢狀容器，這些元件才會序列化可以藉由查核主要容器中的元件取得它們的路徑。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Nested containers can be found by querying a component's site for services of type INestedContainer.</source>
          <target state="translated">您可以藉由查詢的型別 INestedContainer services 元件的站台找到巢狀的容器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the owning component for the nested container.</source>
          <target state="translated">巢狀容器取得主控的元件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The owning component is the characteristic that differentiates nested containers from ordinary containers.</source>
          <target state="translated">主控的元件是區別與一般容器的巢狀的容器的特性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that owns the nested container.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>擁有巢狀的容器。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>