<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6be823a18aeb670bec163beced5a5b7bd10194c5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.PageAsyncTask.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f5371e79fe8c4d7d8b5e807e7e123fcdd2af0ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef3816ca2a42fd149c3e09beebef528eaf86a728</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains information about an asynchronous task registered to a page.</source>
          <target state="translated">包含註冊到網頁的非同步工作的相關資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</source>
          <target state="translated">ASP.NET 2.0 版可讓您註冊多個工作的頁面和之前頁面的呈現以非同步方式執行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</source>
          <target state="translated">您可以指定是否緩慢的程序，而且不想讓其他處理程序執行時，這會因工作會以非同步方式執行。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The asynchronous tasks can be executed in parallel or sequentially.</source>
          <target state="translated">以平行方式或依序執行的非同步工作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A PageAsyncTask object must be registered to the page through the &lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt; method.</source>
          <target state="translated">必須透過網頁註冊 PageAsyncTask 物件&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;方法。&lt;/xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The page itself does not have to be processed asynchronously to execute asynchronous tasks.</source>
          <target state="translated">若要以非同步方式處理執行非同步工作沒有頁面本身。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can set the <ph id="ph1">`Async`</ph> attribute to either <ph id="ph2">`true`</ph> (as shown in the following code example) or <ph id="ph3">`false`</ph> on the page directive and the asynchronous tasks will still be processed asynchronously:       <ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph>       When the <ph id="ph5">`Async`</ph> attribute is set to <ph id="ph6">`false`</ph>, the thread that executes the page will be blocked until all asynchronous tasks are complete.</source>
          <target state="translated">您可以設定<ph id="ph1">`Async`</ph>屬性設為  <ph id="ph2">`true`</ph> （如下列程式碼範例所示） 或<ph id="ph3">`false`</ph>頁面上指示詞和非同步工作會仍會以非同步方式處理︰<ph id="ph4">`&lt;%@ Page Async="true" %&gt;`</ph>時<ph id="ph5">`Async`</ph>屬性設為<ph id="ph6">`false`</ph>，執行頁面的執行緒會封鎖，直到所有的非同步工作完成為止。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any asynchronous tasks registered before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event will be executed automatically by the page if they have not already been executed.</source>
          <target state="translated">註冊任何非同步工作，才能&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;事件將會自動由頁面時執行它們已經尚未執行。&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Those asynchronous tasks registered after the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event must be executed explicitly through the &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method.</source>
          <target state="translated">這些非同步工作註冊之後&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;必須明確地透過執行事件&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法。&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; &lt;/xref:System.Web.UI.Page.PreRenderComplete&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method can also be used to start tasks before the &lt;xref:System.Web.UI.Page.PreRenderComplete&gt; event.</source>
          <target state="translated">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法也可用來啟動工作，再&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;事件。&lt;/xref:System.Web.UI.Page.PreRenderComplete&gt; &lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt; method executes all the registered asynchronous tasks on the page that have not been executed.</source>
          <target state="translated">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;方法尚未執行的頁面上執行所有已註冊的非同步工作。&lt;/xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>By default, an asynchronous task will time out if it has not completed within 45 seconds.</source>
          <target state="translated">根據預設，非同步工作會逾時如果未在 45 秒內完成。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can specify a different time-out value in either the Web.config file or the page directive.</source>
          <target state="translated">您可以在 Web.config 檔或 page 指示詞中指定不同的逾時值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;pages&gt;`</ph> section of the Web.config file contains an <ph id="ph2">`asyncTimeout`</ph> attribute, as shown below.</source>
          <target state="translated"><ph id="ph1">`&lt;pages&gt;`</ph> Web.config 檔案區段包含<ph id="ph2">`asyncTimeout`</ph>屬性，如下所示。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>       The page directive contains an <ph id="ph5">`AsyncTimeout`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">`&lt;system.web&gt;`</ph>       <ph id="ph2">`&lt;pages asyncTimeout="30"&gt;`</ph>       <ph id="ph3">`&lt;/pages&gt;`</ph>       <ph id="ph4">`&lt;/system.web&gt;`</ph>頁面指示詞包含<ph id="ph5">`AsyncTimeout`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be canceled.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用事件處理常式，可讓要取消工作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This constructor wraps a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate so that the &lt;xref:System.Web.UI.PageAsyncTask&gt; object can integrate asynchronous code (based on &lt;xref:System.Threading.Tasks.Task&gt; objects) with the existing ASP.NET Web Forms asynchronous pages feature.</source>
          <target state="translated">這個建構函式會包裝&lt;xref:System.Web.CancellableTaskEventHandler&gt;委派以便&lt;xref:System.Web.UI.PageAsyncTask&gt;物件可以整合非同步程式碼 (根據&lt;xref:System.Threading.Tasks.Task&gt;物件) 與現有的 ASP.NET Web Form 非同步頁面功能。&lt;/xref:System.Threading.Tasks.Task&gt; &lt;/xref:System.Web.UI.PageAsyncTask&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ASP.NET will signal the &lt;xref:System.Threading.CancellationToken&gt; object that is passed to a &lt;xref:System.Web.CancellableTaskEventHandler&gt; delegate for cancellation based on the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; attribute set in the <ph id="ph1">`@ Page`</ph> directive of the Web page.</source>
          <target state="translated">表示 ASP.NET 將&lt;xref:System.Threading.CancellationToken&gt;傳遞至物件&lt;xref:System.Web.CancellableTaskEventHandler&gt;委派有無取消情形根據&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;屬性中設定<ph id="ph1">`@ Page`</ph>網頁指示詞。&lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt; &lt;/xref:System.Web.CancellableTaskEventHandler&gt; &lt;/xref:System.Threading.CancellationToken&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt; value has been reached, the &lt;xref:System.Threading.CancellationToken&gt; object will be signaled.</source>
          <target state="translated">當&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;值已達到，&lt;xref:System.Threading.CancellationToken&gt;物件將會收到信號。&lt;/xref:System.Threading.CancellationToken&gt; &lt;/xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CancellationToken`</ph> parameter must be passed to any asynchronous APIs that are called by your implementation of the &lt;xref:System.Web.CancellableTaskEventHandler&gt; class.</source>
          <target state="translated"><ph id="ph1">`CancellationToken`</ph>參數必須傳遞至您的&lt;xref:System.Web.CancellableTaskEventHandler&gt;類別&lt;/xref:System.Web.CancellableTaskEventHandler&gt;實作會呼叫任何非同步 Api</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an event handler that enables the task to be handled.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用的事件處理常式讓處理工作。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An event handler.</source>
          <target state="translated">事件處理常式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default value for executing in parallel.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用的平行執行的預設值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This implementation of the constructor sets the &lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt; property to <ph id="ph1">`false`</ph> so the asynchronous task is not processed in parallel with other tasks on the page.</source>
          <target state="translated">這項實作建構函式設定&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;屬性<ph id="ph1">`false`</ph>以便與頁面上的其他工作平行處理時，非同步工作。&lt;/xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">開始非同步工作時要呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">當工作在逾時期限內順利完成時呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">當工作未順利完成時逾時期間內呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">物件，代表工作的狀態。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept>參數或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept>未指定參數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified value for executing in parallel.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.UI.PageAsyncTask"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用的平行執行指定的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</source>
          <target state="translated">這個建構函式的實作可讓您設定是否會與頁面上的其他工作平行處理非同步工作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">開始非同步工作時要呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">當工作在逾時期限內順利完成時呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">當工作未順利完成時逾時期間內呼叫處理常式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The object that represents the state of the task.</source>
          <target state="translated">物件，代表工作的狀態。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">值，指出工作是否可以與其他工作平行處理。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">beginHandler</ph><ept id="p1">&lt;/code&gt;</ept> parameter or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endHandler</ph><ept id="p2">&lt;/code&gt;</ept> parameter is not specified.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">beginHandler</ph> <ept id="p1">&lt;/code&gt;</ept>參數或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">endHandler</ph> <ept id="p2">&lt;/code&gt;</ept>未指定參數。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the method to call when beginning an asynchronous task.</source>
          <target state="translated">取得時要呼叫的方法，開始非同步工作。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The BeginHandler delegate is set in the constructor.</source>
          <target state="translated">BeginHandler 委派會設定於建構函式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when beginning the asynchronous task.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.BeginEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>委派，表示從非同步工作時要呼叫的方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">取得工作逾時期間內成功完成時要呼叫的方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The EndHandler delegate is set in the constructor.</source>
          <target state="translated">EndHandler 委派會設定於建構函式。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>委派，表示當工作逾時期間內成功完成時要呼叫的方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">取得值，指出工作是否可以與其他工作平行處理。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The ExecuteInParallel property is set in the constructor.</source>
          <target state="translated">ExecuteInParallel 屬性是設定於建構函式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When multiple tasks are registered in a page and the ExecuteInParallel property is set to <ph id="ph1">`true`</ph>, then those tasks are processed concurrently.</source>
          <target state="translated">當多個工作都登錄在頁面或 ExecuteInParallel 屬性設定為<ph id="ph1">`true`</ph>，則會同時處理這些工作。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, if the ExecuteInParallel property is set to <ph id="ph1">`false`</ph>, then those tasks are processed sequentially.</source>
          <target state="translated">不過，如果 ExecuteInParallel 屬性設定為<ph id="ph1">`false`</ph>，則會依序處理這些工作。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and ExecuteInParallel is set to <ph id="ph1">`true`</ph>, both tasks will complete in 5 seconds.</source>
          <target state="translated">比方說，如果頁面包含兩個非同步工作每 5 秒才能完成，並 ExecuteInParallel 設<ph id="ph1">`true`</ph>，這兩項工作將在 5 秒內完成。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If ExecuteInParallel is set to <ph id="ph1">`false`</ph> for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</source>
          <target state="translated">如果設為 ExecuteInParallel<ph id="ph1">`false`</ph>這些相同的兩個工作，則第一項工作會在 5 秒內完成，而第二個工作完成第一項工作完成後的 5 秒。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task should be processed in parallel with other tasks; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果工作應該與其他工作; 平行處理否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets an object that represents the state of the task.</source>
          <target state="translated">取得物件，代表工作的狀態。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The State property is set in the constructor and cannot be modified during execution of the asynchronous task.</source>
          <target state="translated">State 屬性設定在建構函式，並執行非同步工作的期間，無法修改。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can differentiate asynchronous tasks in a page by assigning unique string values to their respective State properties.</source>
          <target state="translated">您可以藉由指派至其個別的狀態屬性的唯一字串值來區分在網頁中的非同步工作。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that represents the state of the task.</source>
          <target state="translated">&lt;xref:System.Object&gt;，代表工作的狀態。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">取得逾時期間內的工作未順利完成時要呼叫的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The TimeoutHandler delegate is set in the constructor.</source>
          <target state="translated">TimeoutHandler 委派會設定於建構函式。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate that represents the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Web.EndEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>委派，代表逾時期間內的工作未順利完成時要呼叫的方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>