<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81ce3321be4d0f9bb9a58307460c8164a5599680</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.ViewTechnology.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8352617d5fe7bb5b17f4afe07182f49336b0fe2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5f06e95a73467fef10d833c980c9ff9fdcd2b2a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines identifiers for a set of technologies that designer hosts support.</source>
          <target state="translated">定義一組技術，設計工具的主機支援的識別項。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The view adapter model replaces and adds functionality to the ViewTechnology feature; however, the ViewTechnology feature is retained for both backward compatibility and future use, if you choose.</source>
          <target state="translated">檢視配接器模型取代，並將功能加入至的 ViewTechnology 功能;不過，ViewTechnology 功能會保留回溯相容性及未來使用，如果您選擇。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</source>
          <target state="translated">如需詳細資訊，請參閱 「.NET 圖形文件庫:: 範例設計工具 」 知識庫中的 Windows Form 在 http://windowsforms.net/articles/shapedesigner.aspx。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>ViewTechnology defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</source>
          <target state="translated">ViewTechnology 定義，可以指出要用來控制設計工具裝載的文件的顯示模式的識別項。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You should only use the Default value in your designer hosting environment.</source>
          <target state="translated">您只應該在設計工具的裝載環境中使用的預設值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In previous versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>, the ViewTechnology enumeration specified the type of UI model supported by a root designer.</source>
          <target state="translated">在舊版的<ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>，ViewTechnology 列舉，指定的根目錄設計工具所支援的 UI 模型類型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Because this model is not extensible, you should instead use a <bpt id="p1">*</bpt>view adapter<ept id="p1">*</ept> model.</source>
          <target state="translated">因為此模型不是可延伸的則您應該改用<bpt id="p1">*</bpt>檢視配接器<ept id="p1">*</ept>模型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A view adapter is a type that adapts an object of one type to another.</source>
          <target state="translated">檢視配接器是會調整成其他類型的物件類型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, an HTML designer might return a <ph id="ph1">`DemoDOM`</ph> tree as its view.</source>
          <target state="translated">例如，HTML 設計工具可能會傳回<ph id="ph1">`DemoDOM`</ph>其檢視和樹狀結構。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The HTML designer returns a view technology of Default.</source>
          <target state="translated">HTML 設計工具傳回預設檢視的技術。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A Windows Forms hosting environment would have one or more view adapter classes available.</source>
          <target state="translated">Windows Form 裝載環境會有一或多個可用的檢視配接器類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If one such class could convert the <ph id="ph1">`DemoDOM`</ph> into a Windows Forms control, the hosting application can support this type of designer.</source>
          <target state="translated">如果可以轉換一個這類類別<ph id="ph1">`DemoDOM`</ph>為 Windows Form 控制項，在裝載應用程式可支援這種類型的設計工具。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If no adapter can handle the data type returned from the designer’s &lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt; method, the load of the designer will fail, and the user will be presented with an error.</source>
          <target state="translated">如果沒有配接器可以處理在設計工具傳回的資料類型&lt;xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;方法載入之設計工具將會失敗，和使用者會看到的錯誤。&lt;/xref:System.ComponentModel.Design.IRootDesigner.GetView%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>具有可延伸的配置，以提供檢視配接器，所以它可以適用於任何 UI 技術。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</source>
          <target state="translated">協力廠商技術提供者也可以提供適當的檢視介面卡和其物件模型可立即使用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For an example that uses view adapters, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</source>
          <target state="translated">如需範例，使用檢視介面卡，請參閱 「.NET 圖形文件庫:: 範例設計師 &gt; 知識庫中的 Windows Form 在 http://windowsforms.net/articles/shapedesigner.aspx。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies the default view technology support.</source>
          <target state="translated">指定的預設檢視技術支援。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</source>
          <target state="translated">根目錄設計工具可能會傳回任何類型的物件，但此物件必須是與配接器的主控件技術相容。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Hosting environments such as <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> provide a way to plug in new view technology adapters.</source>
          <target state="translated">裝載環境，例如<ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>提供一個方式來插入新的檢視技術配接器。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default view object for the Windows Forms designer is a &lt;xref:System.Windows.Forms.Control?displayProperty=fullName&gt; instance.</source>
          <target state="translated">Windows Form 設計工具的預設檢視物件是&lt;xref:System.Windows.Forms.Control?displayProperty=fullName&gt;執行個體。&lt;/xref:System.Windows.Forms.Control?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Represents a mode in which the view object is passed directly to the development environment.</source>
          <target state="translated">表示在其中檢視物件直接傳遞至開發環境的模式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The view object must implement any interfaces the development environment requires.</source>
          <target state="translated">檢視物件必須實作任何開發環境所需的介面。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through <ph id="ph2">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> VSI (<ph id="ph3">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Integration) program.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>開發環境支援 ActiveX 控制項、 將文件或實作可透過 IVsWindowPane 介面的物件的檢視表物件<ph id="ph2">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>VSI (<ph id="ph3">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>整合) 的程式。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> development environment provides support for this view technology.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>開發環境支援這個檢視技術。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Support for this view technology is not necessarily available in all development environments.</source>
          <target state="translated">不一定可以使用所有的開發環境中支援這個檢視技術。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Represents a mode in which a Windows Forms control object provides the display for the root designer.</source>
          <target state="translated">表示 Windows Form 控制項物件所在的根目錄設計工具提供顯示模式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The designer host fills the development environment document window with the Windows Forms control.</source>
          <target state="translated">設計工具主應用程式中填入在 Windows Form 控制項開發環境文件視窗。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>