<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bd21199241fb837aade668869d870fb7a8f66e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Selectors.SecurityTokenAuthenticator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59459f68674664893d7d216bcef527b57d34143f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c307544e69f4e252df5fd6fceaf0c6e566a9d28</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authenticates a security token.</source>
          <target state="translated">驗證安全性權杖。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens.</source>
          <target state="translated">一種 SecurityTokenAuthenticator 類別和從它衍生的類別來進行驗證安全性權杖。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token.</source>
          <target state="translated">一般而言，您需要只衍生其他類別直接從一種 SecurityTokenAuthenticator 當您建立自訂安全性權杖。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.</source>
          <target state="translated">如果您想要覆寫內建的安全性權杖的預設驗證或授權行為，衍生自其中一個類別，從其中一種 SecurityTokenAuthenticator，例如&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.&lt;/xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you derive a class from SecurityTokenAuthenticator, override the following two methods: &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;.</source>
          <target state="translated">當您從一種 SecurityTokenAuthenticator 衍生類別時，覆寫下列兩種方法︰&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;和&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method determines whether this security token authenticator can authenticate a specific security token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;方法會判斷這個安全性權杖驗證器是否可以驗證特定的安全性權杖。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method authenticates the security token and establishes a set of authorization policies for authorization.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;方法驗證安全性權杖，並建立一組授權原則進行授權。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The authorization policies map the claims found in the security token to claims required by the application.</source>
          <target state="translated">授權原則會對應到宣告的應用程式所需的安全性權杖中找到的宣告。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">取得值，指出這個安全性權杖驗證器是否可以驗證指定的安全性權杖。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The CanValidateToken method checks whether the token parameter is <ph id="ph1">`null`</ph> and then calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph2">`token`</ph>.</source>
          <target state="translated">CanValidateToken 方法可讓您檢查權杖參數是否為<ph id="ph1">`null`</ph>，然後呼叫&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;方法來判斷這個安全性權杖驗證器是否可以驗證的安全性權杖類型<ph id="ph2">`token`</ph>。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>進行驗證。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when token can be validated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>當驗證權杖。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">當在衍生類別中覆寫時，取得值，指出這個安全性權杖驗證器是否可以驗證指定的安全性權杖。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The CanValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph1">`token`</ph>.</source>
          <target state="translated">CanValidateTokenCore 方法由呼叫&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;方法來判斷這個安全性權杖驗證器是否可以驗證的安全性權杖類型<ph id="ph1">`token`</ph>。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">這不會驗證安全性權杖。由執行&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>進行驗證。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">token</ph><ept id="p2">&lt;/code&gt;</ept> can be validated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>當<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">token</ph> <ept id="p2">&lt;/code&gt;</ept>可以進行驗證，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">驗證指定的安全性權杖，並傳回安全性權杖的授權原則集合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The ValidateToken method checks whether the <ph id="ph1">`token`</ph> parameter is <ph id="ph2">`null`</ph>, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.</source>
          <target state="translated">ValidateToken 方法會檢查是否<ph id="ph1">`token`</ph>參數是<ph id="ph2">`null`</ph>，呼叫&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;方法來判斷這個安全性權杖驗證器可以驗證這個安全性權杖，然後如果可以再呼叫&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>進行驗證。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>型別的<bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含作用中對此應用程式的授權原則集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> cannot be authenticated by this security token authenticator       -or-       <ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph> is not authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>無法驗證此安全性權杖驗證器-或-<ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph>也尚未經過驗證。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">當在衍生類別中覆寫時，驗證指定的安全性權杖，並傳回安全性權杖的授權原則集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Override the ValidateTokenCore method to authenticate a specific security token type.</source>
          <target state="translated">覆寫 ValidateTokenCore 方法來驗證特定的安全性權杖的型別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">ValidateTokenCore 方法覆寫時，請遵循這些指導方針:-當安全性權杖傳遞至<ph id="ph1">`token`</ph>參數不可以是經過驗證，會擲回&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;例外狀況。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.</source>
          <target state="translated">-當沒有任何作用中的此應用程式授權原則，則傳回空&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;的型別&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.&lt;/xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; &lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">當<ph id="ph1">`null`</ph>會使用這個方法，傳回<ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph>會擲回&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;例外狀況。&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The ValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">ValidateTokenCore 方法由呼叫&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;方法。&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>進行驗證。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph>型別的<bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含作用中對此應用程式的授權原則集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>