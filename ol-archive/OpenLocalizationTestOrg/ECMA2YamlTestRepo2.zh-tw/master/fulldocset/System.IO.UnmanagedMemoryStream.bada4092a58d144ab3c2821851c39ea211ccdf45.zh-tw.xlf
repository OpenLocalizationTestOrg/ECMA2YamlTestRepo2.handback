<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c539823de736ff3586b35f92d9977c856169d2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.UnmanagedMemoryStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16ee29dbf30a27fdbcc4001ce4564cbe3ae4a560</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfa56e92c483bf62f1602b1ab01e9a775cfcb34e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to unmanaged blocks of memory from managed code.</source>
          <target state="translated">從 managed 程式碼，對 unmanaged 記憶體區塊提供存取。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class supports access to unmanaged memory using the existing stream-based model and does not require that the contents in the unmanaged memory be copied to the heap.</source>
          <target state="translated">這個類別支援使用現有的資料流為基礎的模型的 unmanaged 記憶體存取，而且不需要的 unmanaged 記憶體中的內容複製到堆積。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  This type implements the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 這個型別實作&lt;xref:System.IDisposable&gt;介面。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">當您完成使用類型時，您應該會處置它直接或間接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To dispose of the type directly, call its &lt;xref:System.IDisposable.Dispose%2A&gt; method in a <ph id="ph1">`try`</ph><ph id="ph2">/</ph><ph id="ph3">`catch`</ph> block.</source>
          <target state="translated">若要直接處置的類型，呼叫其&lt;xref:System.IDisposable.Dispose%2A&gt;方法中的<ph id="ph1">`try`</ph> <ph id="ph2">/</ph> <ph id="ph3">`catch`</ph>區塊。&lt;/xref:System.IDisposable.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">若要為其配置間接，使用語言建構例如<ph id="ph1">`using`</ph>（C# 中） 或<ph id="ph2">`Using`</ph>（在 Visual Basic)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see the “Using an Object that Implements IDisposable” section in the &lt;xref:System.IDisposable&gt; interface topic.</source>
          <target state="translated">如需詳細資訊，請參閱中的 「 使用物件的實作 IDisposable 」 一節&lt;xref:System.IDisposable&gt;介面 &gt; 主題。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">使用者沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified location and memory length.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的位置和記憶體長度。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This constructor creates a new instance of the &lt;xref:System.IO.UnmanagedMemoryStream&gt; class, and by default sets the &lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; property to <ph id="ph1">`false`</ph> and the &lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt; property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">這個建構函式建立的新執行個體&lt;xref:System.IO.UnmanagedMemoryStream&gt;類別，並依預設會設定&lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt;屬性<ph id="ph1">`false`</ph>和&lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;屬性<ph id="ph2">`true`</ph>。&lt;/xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.UnmanagedMemoryStream.Length%2A&gt; property is set to the value of the <ph id="ph1">`length`</ph> parameter and cannot be changed.</source>
          <target state="translated">&lt;xref:System.IO.UnmanagedMemoryStream.Length%2A&gt;屬性設定的值為<ph id="ph1">`length`</ph>參數，而且無法變更。&lt;/xref:System.IO.UnmanagedMemoryStream.Length%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">Unmanaged 的記憶體位置指標。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">要使用的記憶體長度。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">使用者沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset and length.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別以安全緩衝區的指定的位移和長度。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">包含 unmanaged 的記憶體資料流的緩衝區。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中要開始 unmanaged 的記憶體資料流緩衝區的位元組位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">Unmanaged 的記憶體資料流的長度。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified location, memory length, total amount of memory, and file access values.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的位置、 記憶體長度、 記憶體、 總數和檔案存取值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`length`</ph> parameter defines the current amount of memory in use.</source>
          <target state="translated"><ph id="ph1">`length`</ph>參數定義中使用目前的記憶體數量。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If reading or appending data to the stream, the <ph id="ph1">`length`</ph> value should be equal to the amount of valid data in the stream to be read from or preserved.</source>
          <target state="translated">如果讀取或寫入資料流，附加資料<ph id="ph1">`length`</ph>值應該等於要讀取的資料流中的有效資料量，或保留。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If writing to the stream, this value should be zero.</source>
          <target state="translated">如果寫入資料流，此值應該是零。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`capacity`</ph> parameter indicates the amount of total memory available.</source>
          <target state="translated"><ph id="ph1">`capacity`</ph>參數表示的可用總記憶體量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This value can describe a region that is longer than the length specified, or indicate a region that can be appended to.</source>
          <target state="translated">這個值可以描述超過指定長度的區域，或表示您可以附加至的區域。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Any attempt to write beyond this value will fail.</source>
          <target state="translated">任何嘗試寫入超過此值將會失敗。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`access`</ph> parameter sets the &lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;, and &lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; properties.</source>
          <target state="translated"><ph id="ph1">`access`</ph>參數集&lt;xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;，和&lt;xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt;屬性。&lt;/xref:System.IO.UnmanagedMemoryStream.CanWrite%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Note that specifying &lt;xref:System.IO.FileAccess&gt; does not guarantee that the stream will be writable.</source>
          <target state="translated">請注意該指定&lt;xref:System.IO.FileAccess&gt;不保證的資料流將是可寫入。&lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The access parameters allow the implementer to create an object whose implementation can match the actual stream that is exposed.</source>
          <target state="translated">存取參數可讓實作器建立其實作可比對實際資料流所公開的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">Unmanaged 的記憶體位置指標。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">要使用的記憶體長度。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The total amount of memory assigned to the stream.</source>
          <target state="translated">指派給資料流的記憶體總量。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">使用者沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset, length, and file access.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別在安全緩衝區中使用指定的位移、 長度和檔案存取。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">包含 unmanaged 的記憶體資料流的緩衝區。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中要開始 unmanaged 的記憶體資料流緩衝區的位元組位置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">Unmanaged 的記憶體資料流的長度。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The mode of file access to the unmanaged memory stream.</source>
          <target state="translated">Unmanaged 的記憶體資料流檔案存取模式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports reading.</source>
          <target state="translated">取得值，指出資料流是否支援讀取。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports reading.</source>
          <target state="translated">這個屬性會指出目前資料流物件是否支援讀取。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was created by a constructor with an <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p2">&lt;/code&gt;</ept> parameter that did not include reading the stream and if the stream is closed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果物件的建構函式由<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p2">&lt;/code&gt;</ept>不包括讀取資料流的參數，如果資料流已關閉，否則<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports seeking.</source>
          <target state="translated">取得值，指出資料流是否支援搜尋。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports seeking.</source>
          <target state="translated">這個屬性會指出目前資料流物件是否支援搜尋。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream is closed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料流已關閉。否則， <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a stream supports writing.</source>
          <target state="translated">取得值，指出資料流是否支援寫入。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This property indicates whether the current stream object supports writing.</source>
          <target state="translated">這個屬性會指出目前資料流物件是否支援寫入。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the object was created by a constructor with an <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p2">&lt;/code&gt;</ept> parameter value that supports writing or was created by a constructor that had no parameters, or if the stream is closed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果物件的建構函式由<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p2">&lt;/code&gt;</ept>支援寫入，或不有任何參數的建構函式所建立的參數值或資料流已關閉，否則如果<bpt id="p3">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the stream length (size) or the total amount of memory assigned to a stream (capacity).</source>
          <target state="translated">取得資料流的長度 （大小） 或指派給資料流 （容量） 的記憶體總數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This property returns the <ph id="ph1">`capacity`</ph> value provided to the constructor.</source>
          <target state="translated">這個屬性會傳回<ph id="ph1">`capacity`</ph>值提供給建構函式。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">`capacity`</ph> value was specified when the stream was initialized, this property returns the stream length.</source>
          <target state="translated">如果沒有<ph id="ph1">`capacity`</ph>初始化資料流時指定了值，這個屬性會傳回資料流的長度。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The size or capacity of the stream.</source>
          <target state="translated">大小或資料流的容量。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">這個方法會呼叫公用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;與受保護的 Dispose 方法會叫用<ph id="ph1">`disposing`</ph>參數設定為<ph id="ph2">`true`</ph>。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;叫用 Dispose 以<ph id="ph1">`disposing`</ph>設<ph id="ph2">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.UnmanagedMemoryStream&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數是<ph id="ph2">`true`</ph>，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.IO.UnmanagedMemoryStream&gt;參考。&lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">這個方法會叫用&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;每個參考物件的方法。&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;xref:System.IO.Stream.Flush*&gt; method so that no action is performed.</source>
          <target state="translated">覆寫&lt;xref:System.IO.Stream.Flush*&gt;方法以便不執行任何動作。&lt;/xref:System.IO.Stream.Flush*&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This method performs no action for this class but is included as part of the &lt;xref:System.IO.Stream&gt; base class.</source>
          <target state="translated">這個方法會執行任何動作，這個類別，但已包含在&lt;xref:System.IO.Stream&gt;基底類別。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Since any data is written to RAM, this method is redundant.</source>
          <target state="translated">由於 RAM 寫入任何資料，這個方法是多餘的。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.FlushAsync%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method so that the operation is cancelled if specified, but no other action is performed.</source>
          <target state="translated">覆寫<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream.FlushAsync%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法，讓操作已取消，如果指定，但不執行任何其他動作。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可用以啟動<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If the operation isn’t cancelled, the &lt;xref:System.IO.UnmanagedMemoryStream&gt; calls the &lt;xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt; method, which means that no action performed.</source>
          <target state="translated">如果未取消作業，&lt;xref:System.IO.UnmanagedMemoryStream&gt;呼叫&lt;xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt;方法，這表示不執行任何動作。&lt;/xref:System.IO.UnmanagedMemoryStream.Flush%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">預設值是&lt;xref:System.Threading.CancellationToken.None*&gt;.&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示非同步排清作業的工作。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using a pointer to an unmanaged memory location.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用 unmanaged 的記憶體位置的指標。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the &lt;xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt; constructor.</source>
          <target state="translated">這個方法相當於&lt;xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt;建構函式。&lt;/xref:System.IO.UnmanagedMemoryStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It supports methods that need to initialize the pointer before setting stream variables and, therefore, cannot call the parameterized constructor.</source>
          <target state="translated">它支援需要初始化之前設定資料流變數的指標，因此，無法呼叫參數化建構函式的方法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Such methods should use the default constructor, &lt;xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;, initialize the pointer, and then invoke the Initialize method.</source>
          <target state="translated">這類方法應該使用預設建構函式&lt;xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;、 初始化指標，並接著叫用的初始化方法。&lt;/xref:System.IO.UnmanagedMemoryStream.%23ctor&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A pointer to an unmanaged memory location.</source>
          <target state="translated">Unmanaged 的記憶體位置指標。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The length of the memory to use.</source>
          <target state="translated">要使用的記憶體長度。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The total amount of memory assigned to the stream.</source>
          <target state="translated">指派給資料流的記憶體總量。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The user does not have the required permission.</source>
          <target state="translated">使用者沒有必要的權限。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">pointer</ph><ept id="p1">&lt;/code&gt;</ept> value is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class in a safe buffer with a specified offset, length, and file access.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.UnmanagedMemoryStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別在安全緩衝區中使用指定的位移、 長度和檔案存取。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The buffer to contain the unmanaged memory stream.</source>
          <target state="translated">包含 unmanaged 的記憶體資料流的緩衝區。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The byte position in the buffer at which to start the unmanaged memory stream.</source>
          <target state="translated">中要開始 unmanaged 的記憶體資料流緩衝區的位元組位置。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The length of the unmanaged memory stream.</source>
          <target state="translated">Unmanaged 的記憶體資料流的長度。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The mode of file access to the unmanaged memory stream.</source>
          <target state="translated">Unmanaged 的記憶體資料流檔案存取模式。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the length of the data in a stream.</source>
          <target state="translated">資料流中取得資料的長度。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If unchanged since the stream was initialized, this property returns the length value provided to the constructor.</source>
          <target state="translated">如果沒有變更，因為資料流已經初始化，則這個屬性會傳回提供給建構函式的長度值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If changes to the stream have occurred, this property reflects any changes to the length of the data.</source>
          <target state="translated">如果已經發生變更之資料流，此屬性會反映資料的長度的任何變更。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The length of the data in the stream.</source>
          <target state="translated">資料流中資料的長度。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position in a stream.</source>
          <target state="translated">取得或設定資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When a stream is initialized, this property is set to zero.</source>
          <target state="translated">當初始化資料流時，這個屬性設為零。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although you can set the position of the stream beyond the stream's capacity, you will not be able to access that area using the &lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt; and &lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; methods.</source>
          <target state="translated">雖然您可以設定資料流的容量超出資料流的位置，您將無法存取該區域使用&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;和&lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;方法。&lt;/xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt; will return 0 and &lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt; will throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;會傳回 0，&lt;xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;將會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.UnmanagedMemoryStream.Write%2A&gt;&lt;/xref:System.IO.UnmanagedMemoryStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This support is primarily for design and code compatibility with basic stream operations.</source>
          <target state="translated">這項支援主要是基本的資料流作業與設計和程式碼相容性。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The current position in the stream.</source>
          <target state="translated">資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The position is set to a value that is less than zero, or the position is larger than &lt;xref:System.Int32.MaxValue&gt; or results in overflow when added to the current pointer.</source>
          <target state="translated">位置設定的值小於零，或位置大於&lt;xref:System.Int32.MaxValue&gt;或溢位時加入至目前的指標的結果。&lt;/xref:System.Int32.MaxValue&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets a byte pointer to a stream based on the current position in the stream.</source>
          <target state="translated">取得或設定資料流中的目前位置為基礎的資料流的位元組指標。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To return a pointer to the entire stream, set the &lt;xref:System.IO.UnmanagedMemoryStream.Position%2A&gt; property to zero, and then call this property.</source>
          <target state="translated">若要傳回整個資料流的指標，將&lt;xref:System.IO.UnmanagedMemoryStream.Position%2A&gt;屬性設為零，並接著呼叫這個屬性。&lt;/xref:System.IO.UnmanagedMemoryStream.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A byte pointer.</source>
          <target state="translated">位元組指標。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The current position is larger than the capacity of the stream.</source>
          <target state="translated">目前的位置大於資料流的容量。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The position is being set is not a valid position in the current stream.</source>
          <target state="translated">正在位置設定不是目前資料流中的有效位置。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The pointer is being set to a lower value than the starting position of the stream.</source>
          <target state="translated">指標會設定為較低的值超過資料流的開始位置。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The stream was initialized for use with a &lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;.</source>
          <target state="translated">將資料流已初始化&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;.&lt;/xref:System.Runtime.InteropServices.SafeBuffer&gt;搭配使用</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The PositionPointer property is valid only for streams that are initialized with a &lt;xref:System.Byte&gt; pointer.</source>
          <target state="translated">PositionPointer 屬性無效，只會使用初始化的資料流&lt;xref:System.Byte&gt;指標。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Reads the specified number of bytes into the specified array.</source>
          <target state="translated">指定的位元組數目讀入指定的陣列。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in the <ph id="ph2">`array`</ph> parameter (the buffer index) at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the maximum number of bytes to be read from this stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>參數會提供中的位元組位移<ph id="ph2">`array`</ph>參數 （緩衝區索引） 中要開始閱讀，而<ph id="ph3">`count`</ph>參數指定要從這個資料流讀取的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">如果已到達資料流結尾，傳回的值會是個位元組，則為零的實際數目。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">如果在讀取的作業成功，讀取的位元組數目進階資料流的目前位置。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">如果發生例外狀況，目前資料流的位置不變。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The Read method returns zero only after reaching the end of the stream.</source>
          <target state="translated">Read 方法傳回後才到達資料流結尾的零。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Otherwise, Read always reads at least one byte from the stream before returning.</source>
          <target state="translated">否則，讀取一定會讀取至少一個位元組資料流中傳回之前。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If no data is available from the stream upon a call to Read, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">如果沒有資料可從資料流讀取呼叫時，方法會封鎖直到至少一個位元組的資料可能會傳回。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">實作可以自由地傳回比要求的位元組更少，即使尚未達到資料流結尾。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">當這個方法會傳回包含指定的位元組陣列，其值介於<ph id="ph1">`offset`</ph>和 (<ph id="ph2">`offset`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`count`</ph> -1) 從目前來源讀取的位元組所取代。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數未初始化便傳遞。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin storing the data read from the current stream.</source>
          <target state="translated">中以零為起始的位元組位移<ph id="ph1">`buffer`</ph>中要開始將資料儲存讀取自目前資料流。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read from the current stream.</source>
          <target state="translated">要從目前資料流讀取的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">緩衝區所讀取的位元組總數。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">這可能會小於要求的位元組數如果許多位元組目前沒有提供，，或為零 (0) 如果已經到達資料流結尾。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is set to <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The length of the buffer array minus the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">減緩衝區陣列的長度<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Asynchronously reads the specified number of bytes into the specified array.</source>
          <target state="translated">以非同步方式讀入指定的陣列中指定的位元組數目。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可用以啟動<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If an exception occurs during the read operation, it will be set as the &lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt; of the property of the returned task.</source>
          <target state="translated">如果在讀取作業期間發生例外狀況，它會設定為&lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;所傳回工作的屬性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">要寫入資料的緩衝區。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">中的位元組位移<ph id="ph1">`buffer`</ph>中要開始寫入資料流的資料。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">要讀取的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">預設值是&lt;xref:System.Threading.CancellationToken.None*&gt;.&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">工作表示非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept>參數會包含讀取至緩衝區的位元組總數。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">結果值可能會小於要求的位元組數; 如果目前可用的位元組數目少於所要求的數目，或如果已經到達資料流末端，則可能為 0 （零）。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Reads a byte from a stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</source>
          <target state="translated">從資料流讀取一個位元組資料流位置推進一個位元組，或如果在資料流末端，則會傳回-1。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Use this method to return integer values from the stream.</source>
          <target state="translated">使用此方法傳回的整數值，從資料流。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The unsigned byte cast to an &lt;xref:System.Int32&gt; object, or -1 if at the end of the stream.</source>
          <target state="translated">不帶正負號的位元組轉換成&lt;xref:System.Int32&gt;物件或如果在資料流末端，則為-1。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Sets the current position of the current stream to the given value.</source>
          <target state="translated">將目前資料流的目前位置設定為指定的值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>For more information about seeking, see &lt;xref:System.IO.FileStream.Seek%2A&gt;.</source>
          <target state="translated">如需搜尋的詳細資訊，請參閱&lt;xref:System.IO.FileStream.Seek%2A&gt;.&lt;/xref:System.IO.FileStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The point relative to <ph id="ph1">`origin`</ph> to begin seeking from.</source>
          <target state="translated">相對於<ph id="ph1">`origin`</ph>搜尋起點。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Specifies the beginning, the end, or the current position as a reference point for <ph id="ph1">`origin`</ph>, using a value of type &lt;xref:System.IO.SeekOrigin&gt;.</source>
          <target state="translated">指定開頭、 結尾或目前位置做為參考點<ph id="ph1">`origin`</ph>，使用型別&lt;xref:System.IO.SeekOrigin&gt;.&lt;/xref:System.IO.SeekOrigin&gt;值</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The new position in the stream.</source>
          <target state="translated">資料流中的新位置。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An attempt was made to seek before the beginning of the stream.</source>
          <target state="translated">嘗試搜尋資料流開頭之前。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> value is larger than the maximum size of the stream.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>值大於資料流的大小上限。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loc&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loc&lt;/code&gt;</ph>不正確。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Sets the length of a stream to a specified value.</source>
          <target state="translated">將資料流的長度設定為指定的值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If the given value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">如果指定的值小於目前資料流的長度，則會截斷資料流。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If the given value is larger than the current length of the stream, the stream is expanded.</source>
          <target state="translated">如果指定的值大於目前資料流的長度，則會展開資料流。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If the stream is expanded, the contents of the stream between the old and the new lengths are undefined.</source>
          <target state="translated">如果展開資料流時，舊之間的新長度的資料流的內容會是未定義。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for SetLength to work.</source>
          <target state="translated">資料流必須支援寫入和搜尋的 SetLength 運作。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The length of the stream.</source>
          <target state="translated">資料流的長度。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Writes a block of bytes to the current stream using data from a buffer.</source>
          <target state="translated">將位元組區塊寫入目前資料流使用緩衝區中的資料。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Writing occurs at the current position in the stream.</source>
          <target state="translated">資料流中目前的位置進行寫入。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The byte array from which to copy bytes to the current stream.</source>
          <target state="translated">要從中複製位元組至目前資料流的位元組陣列。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The offset in the buffer at which to begin copying bytes to the current stream.</source>
          <target state="translated">中要開始複製位元組到目前資料流緩衝區的位移。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the current stream.</source>
          <target state="translated">要寫入目前資料流的位元組數目。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An I/O error occurs.</source>
          <target state="translated">發生 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One of the specified parameters is less than zero.</source>
          <target state="translated">其中一個指定的參數小於零。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter minus the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> parameter is less than the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度減<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>參數小於<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">count</ph> <ept id="p3">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">以非同步方式將一連串的位元組寫入目前資料流，這個資料流中的目前位置前移寫入的位元組數目，以及監視取消要求。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></source>
          <target state="translated">可用以啟動<ph id="ph1">[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]</ph></target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If an exception occurs during the write operation, it will be set as the &lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt; of the property of the returned task.</source>
          <target state="translated">如果在寫入作業期間發生例外狀況，它會設定為&lt;xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;所傳回工作的屬性。&lt;/xref:System.Threading.Tasks.Task.Exception%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">資料寫入來源緩衝區。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">中以零為起始的位元組位移<ph id="ph1">`buffer`</ph>要從其中開始將位元組複製至資料流。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">要寫入的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The default value is &lt;xref:System.Threading.CancellationToken.None*&gt;.</source>
          <target state="translated">預設值是&lt;xref:System.Threading.CancellationToken.None*&gt;.&lt;/xref:System.Threading.CancellationToken.None*&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the file stream.</source>
          <target state="translated">將位元組寫入檔案資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A byte value written to the stream.</source>
          <target state="translated">位元組值寫入資料流。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The supplied <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> causes the stream exceed its maximum capacity.</source>
          <target state="translated">提供<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>會造成資料流超過最大容量。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>