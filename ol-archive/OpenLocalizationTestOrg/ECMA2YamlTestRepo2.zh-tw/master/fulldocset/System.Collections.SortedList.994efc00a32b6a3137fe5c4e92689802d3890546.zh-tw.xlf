<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eea5d39fa138db1db722d30397b62477911a2643</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.SortedList.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1622ab7a3e142d470d010b3dd95358ceb457111</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77929b6051f98313b71b605920fefbe82eaba97b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">代表依索引鍵排序，而且可由索引鍵和索引存取的索引鍵/值組的集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>For the generic version of this collection, see &lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;.</source>
          <target state="translated">這個集合的泛型版本，請參閱&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;.&lt;/xref:System.Collections.Generic.SortedList%602?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A SortedList element can be accessed by its key, like an element in any &lt;xref:System.Collections.IDictionary&gt; implementation, or by its index, like an element in any &lt;xref:System.Collections.IList&gt; implementation.</source>
          <target state="translated">SortedList 項目可以存取它的金鑰，如在任何項目一般&lt;xref:System.Collections.IDictionary&gt;實作，或依據索引，如在任何項目一般&lt;xref:System.Collections.IList&gt;實作。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A SortedList object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">SortedList 物件在內部維護兩個陣列來儲存的清單項目也就是一個陣列的索引鍵，另一個陣列的相關聯的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每個項目是無法做為存取的索引鍵/值組&lt;xref:System.Collections.DictionaryEntry&gt;物件。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The capacity of a SortedList object is the number of elements the SortedList can hold.</source>
          <target state="translated">SortedList 物件的容量是 SortedList 可以保存的項目數目。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As elements are added to a SortedList, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至 SortedList 時，會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或藉由設定&lt;xref:System.Collections.SortedList.Capacity%2A&gt;屬性明確。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For very large SortedList objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">對於非常大的 SortedList 物件，您可以藉由設定增加到 64 位元系統上的 2 億元素的最大容量<ph id="ph1">`enabled`</ph>屬性的組態項目<ph id="ph2">`true`</ph>在執行階段環境中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The elements of a SortedList object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the SortedList is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">SortedList 物件的項目會依照索引鍵是根據特定&lt;xref:System.Collections.IComparer&gt;SortedList 建立時或根據指定的實作&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In either case, a SortedList does not allow duplicate keys.</source>
          <target state="translated">在任一情況下，SortedList 不允許重複的索引鍵。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into SortedList in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">加入項目之後，會插入 SortedList 正確的排序順序和索引會隨之調整。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the SortedList object.</source>
          <target state="translated">因此，加入或從 SortedList 物件移除項目時，可能會變更特定索引鍵/值組的索引。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Operations on a SortedList object tend to be slower than operations on a &lt;xref:System.Collections.Hashtable&gt; object because of the sorting.</source>
          <target state="translated">SortedList 物件的作業通常會變慢，相較於&lt;xref:System.Collections.Hashtable&gt;因為排序的物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, the SortedList offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">不過，SortedList 會提供更大的彈性，允許存取的值，透過關聯的索引鍵或索引。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">可以使用整數索引來存取此集合中的項目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">在此集合中的索引都以零為起始。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Since each element of the SortedList object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">SortedList 物件的每個項目是索引鍵/值組，因為項目型別不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Rather, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">相對地，項目型別是&lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic SortedList Example#2<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>Classic SortedList Example#2<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>Classic SortedList Example#2<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated">例如︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>傳統 SortedList 範例&amp;#2;<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.sor_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>傳統 SortedList 範例&amp;#2;<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.sor_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>傳統 SortedList 範例&amp;#2;<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.sor_1.vb)</ept> <ept id="p5">]</ept> <ph id="ph1">`foreach`</ph>陳述式是可讓只有讀取，不寫入至集合的列舉值的包裝函式。    </target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的是空白的、 具有預設初始容量，並排序依據&lt;xref:System.IComparable&gt;介面實作新增至每個索引鍵<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">項目都是根據&lt;xref:System.IComparable&gt;每個索引鍵加入至&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;實作&lt;/xref:System.IComparable&gt;排序</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the default initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別是空白的、 具有預設初始容量，而且排序根據指定&lt;xref:System.Collections.IComparer&gt;介面。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">排序項目會根據指定&lt;xref:System.Collections.IComparer&gt;實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>參數是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;會使用每個索引鍵的實作; 因此，每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比較索引鍵時要使用的實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;實作每個索引鍵。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，其中包含從指定的字典複製項目已複製，項目數一樣的初始容量，而且根據排序&lt;xref:System.IComparable&gt;每個索引鍵所實作的介面。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">項目都是根據&lt;xref:System.IComparable&gt;每個索引鍵加入至&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;實作&lt;/xref:System.IComparable&gt;排序</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;物件是範例&lt;xref:System.Collections.IDictionary&gt;可以傳遞給這個建構函式的實作。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;物件包含索引鍵和值在&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;儲存一份&lt;/xref:System.Collections.SortedList&gt;新</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;複製到新的實作<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>One or more elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> do not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">中的一個或多個項目<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">d</ph> <ept id="p1">&lt;/code&gt;</ept>不會實作&lt;xref:System.IComparable&gt;介面。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the &lt;xref:System.IComparable&gt; interface implemented by each key added to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的是空白的、 具有指定的初始容量，並排序依據&lt;xref:System.IComparable&gt;介面實作新增至每個索引鍵<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the &lt;xref:System.IComparable&gt; implementation of each key added to the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">項目都是根據&lt;xref:System.IComparable&gt;每個索引鍵加入至&lt;xref:System.Collections.SortedList&gt;。&lt;/xref:System.Collections.SortedList&gt;實作&lt;/xref:System.IComparable&gt;排序</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`initialCapacity`</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">初始項目數， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件可以包含。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;initialCapacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">initialCapacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">沒有足夠的記憶體來建立<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">initialCapacity</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別是空白的、 具有指定的初始容量，而且排序根據指定&lt;xref:System.Collections.IComparer&gt;介面。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">排序項目會根據指定&lt;xref:System.Collections.IComparer&gt;實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>參數是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;會使用每個索引鍵的實作; 因此，每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比較索引鍵時要使用的實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;實作每個索引鍵。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The initial number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">初始項目數， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件可以包含。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to create a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">capacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">沒有足夠的記憶體來建立<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有指定<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">capacity</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;xref:System.Collections.IComparer&gt; interface.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，其中包含從指定的字典複製項目已複製，項目數一樣的初始容量，而且排序根據指定&lt;xref:System.Collections.IComparer&gt;介面。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The elements are sorted according to the specified &lt;xref:System.Collections.IComparer&gt; implementation.</source>
          <target state="translated">排序項目會根據指定&lt;xref:System.Collections.IComparer&gt;實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the &lt;xref:System.IComparable&gt; implementation of each key is used; therefore, each key must implement the &lt;xref:System.IComparable&gt; interface to be capable of comparisons with every other key in the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>參數是<ph id="ph2">`null`</ph>、&lt;xref:System.IComparable&gt;會使用每個索引鍵的實作; 因此，每個索引鍵必須實作&lt;xref:System.IComparable&gt;介面中的索引鍵的比較能夠&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; object is an example of an &lt;xref:System.Collections.IDictionary&gt; implementation that can be passed to this constructor.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;物件是範例&lt;xref:System.Collections.IDictionary&gt;可以傳遞給這個建構函式的實作。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The new &lt;xref:System.Collections.SortedList&gt; object contains a copy of the keys and values stored in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;物件包含索引鍵和值在&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;儲存一份&lt;/xref:System.Collections.SortedList&gt;新</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The capacity of a &lt;xref:System.Collections.SortedList&gt; object is the number of elements that the &lt;xref:System.Collections.SortedList&gt; can hold.</source>
          <target state="translated">容量&lt;xref:System.Collections.SortedList&gt;物件則是項目數目，&lt;xref:System.Collections.SortedList&gt;可以保存。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>As elements are added to a &lt;xref:System.Collections.SortedList&gt;, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">當項目加入至&lt;xref:System.Collections.SortedList&gt;，就會自動增加容量的要求以重新配置內部的陣列。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">如果可以評估集合的大小，指定初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; implementation to copy to a new <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;複製到新的實作<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; implementation to use when comparing keys.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;比較索引鍵時要使用的實作。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the &lt;xref:System.IComparable&gt; implementation of each key.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用&lt;xref:System.IComparable&gt;實作每個索引鍵。&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and one or more elements in <ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph> do not implement the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph>是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，和一或多個項目中的<ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph>不會實作<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">將具有指定索引鍵和值的項目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the &lt;xref:System.Collections.SortedList&gt; object was created.</source>
          <target state="translated">插入點取決於選取，以明確或預設的比較子時&lt;xref:System.Collections.SortedList&gt;建立物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; already equals &lt;xref:System.Collections.SortedList.Capacity%2A&gt;, the capacity of the &lt;xref:System.Collections.SortedList&gt; object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList.Count%2A&gt;已等於&lt;xref:System.Collections.SortedList.Capacity%2A&gt;、 容量的&lt;xref:System.Collections.SortedList&gt;增加物件會自動重新配置內部的陣列，並加入新項目之前現有的項目複製到新陣列。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:System.Collections.SortedList.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">您也可以使用&lt;xref:System.Collections.SortedList.Item%2A&gt;加入新項目，藉由設定機碼值的屬性不存在於&lt;xref:System.Collections.SortedList&gt;物件 (例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>)。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the &lt;xref:System.Collections.SortedList.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於&lt;xref:System.Collections.SortedList&gt;，設定&lt;xref:System.Collections.SortedList.Item%2A&gt;屬性會覆寫舊的值。&lt;/xref:System.Collections.SortedList.Item%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">相反地，加入方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">項目&lt;xref:System.Collections.SortedList&gt;依索引鍵所排序的物件是根據特定&lt;xref:System.Collections.IComparer&gt;實作時指定&lt;xref:System.Collections.SortedList&gt;是建立或根據&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業的未排序的資料，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">是 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果在清單結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">若要加入的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">要加入之元素的值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An element with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> already exists in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">具有指定的項目<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>已經存在於<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is set to use the &lt;xref:System.IComparable&gt; interface, and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept> does not implement the &lt;xref:System.IComparable&gt; interface.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>會設定為使用&lt;xref:System.IComparable&gt;介面，和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>未實作&lt;xref:System.IComparable&gt;介面。&lt;/xref:System.IComparable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">不是記憶體不足，無法新增項目的<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較子會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the capacity of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得或設定的容量<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Capacity is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">容量則是項目數目，&lt;xref:System.Collections.SortedList&gt;物件可儲存。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;是實際&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;中的項目數目&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Capacity is always greater than or equal to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">容量永遠是大於或等於&lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.SortedList.Count%2A&gt; exceeds Capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList.Count%2A&gt;超過容量加入項目時，複製的舊項目並加入新項目之前，重新配置內部的陣列，就會自動增加容量。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The capacity can be decreased by calling &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or by setting the Capacity property explicitly.</source>
          <target state="translated">藉由呼叫，您可以減少容量&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或藉由明確地設定容量屬性。&lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When the value of Capacity is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">當明確設定的容量值時，在內部陣列也重新配置到符合指定的容量。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">擷取這個屬性的值是 o （1） 運算。將屬性設定為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是新的容量。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The number of elements that the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can contain.</source>
          <target state="translated">項目數目， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件可以包含。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value assigned is less than the current number of elements in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指派的值小於目前的數字中的項目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">沒有足夠的記憶體可用系統上。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes all elements from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除所有項目從<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Count%2A&gt; is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Count%2A&gt;設為零，且從項目集合的其他物件的參考也會釋放。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; remains unchanged.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;維持不變。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>To reset the capacity of the &lt;xref:System.Collections.SortedList&gt; object, call &lt;xref:System.Collections.SortedList.TrimToSize%2A&gt; or set the &lt;xref:System.Collections.SortedList.Capacity%2A&gt; property directly.</source>
          <target state="translated">若要重設的容量&lt;xref:System.Collections.SortedList&gt;物件，呼叫&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;或設定&lt;xref:System.Collections.SortedList.Capacity%2A&gt;屬性直接。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt; &lt;/xref:System.Collections.SortedList.TrimToSize%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">修剪空白&lt;xref:System.Collections.SortedList&gt;設定的容量&lt;xref:System.Collections.SortedList&gt;預設容量。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">建立的淺層複本<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">集合的淺層複本只會複製元素的集合，它們都是參考類型或值類型，但不會複製參考所參考的物件。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新的集合中的參考都指向相同原始集合中的參考所指向的物件。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">相反地，項目複製集合的深層複本，並直接或間接參考之項目，所有項目。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">淺層複本<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">項目&lt;xref:System.Collections.SortedList&gt;依索引鍵所排序的物件是根據特定&lt;xref:System.Collections.IComparer&gt;實作時指定&lt;xref:System.Collections.SortedList&gt;是建立或根據&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Contains implements &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">包含實作&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.&lt;/xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>It behaves exactly as &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;.</source>
          <target state="translated">它的行為就像&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;.&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要在中尋找的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件包含具有指定的項目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較子會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific key.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">項目&lt;xref:System.Collections.SortedList&gt;依索引鍵所排序的物件是根據特定&lt;xref:System.Collections.IComparer&gt;實作時指定&lt;xref:System.Collections.SortedList&gt;是建立或根據&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method.</source>
          <target state="translated">這個方法的行為就像&lt;xref:System.Collections.SortedList.Contains%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要在中尋找的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件包含具有指定的項目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較子會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Determines whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific value.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件包含特定值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; object are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">項目的值&lt;xref:System.Collections.SortedList&gt;物件與指定的值使用&lt;xref:System.Object.Equals%2A&gt;方法。&lt;/xref:System.Object.Equals%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, the average execution time is proportional to &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，平均執行時間是成比例&lt;xref:System.Collections.SortedList.Count%2A&gt;.&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">也就是說，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要在中尋找值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件包含具有指定的項目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Copies <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; object, starting at the specified index in the array.</source>
          <target state="translated">複製<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到一維的元素&lt;xref:System.Array&gt;物件，在陣列中指定索引處開始。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The key/value pairs are copied to the &lt;xref:System.Array&gt; object in the same order in which the enumerator iterates through the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">索引鍵/值組複製到&lt;xref:System.Array&gt;物件列舉值反覆執行的順序相同&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To copy only the keys in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要複製中的索引鍵&lt;xref:System.Collections.SortedList&gt;，使用<ph id="ph1">`SortedList.Keys.CopyTo`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To copy only the values in the &lt;xref:System.Collections.SortedList&gt;, use <ph id="ph1">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">若要複製的值中&lt;xref:System.Collections.SortedList&gt;，使用<ph id="ph1">`SortedList.Values.CopyTo`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; object that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一維&lt;xref:System.Array&gt;的目的地物件&lt;xref:System.Collections.DictionaryEntry&gt;從複製物件<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必須有以零為起始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中以零為起始的索引<ph id="ph1">`array`</ph>由此開始複製。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多維的。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-在來源中的項目數<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件是否大於可用空間<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>至目的地結尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">來源類型<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>無法自動轉換成目的地類型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets the number of elements contained in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得所包含的元素數目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair that can be accessed as a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每個項目是無法做為存取的索引鍵/值組&lt;xref:System.Collections.DictionaryEntry&gt;物件。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is the number of elements that the &lt;xref:System.Collections.SortedList&gt; object can store.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;是的項目數，&lt;xref:System.Collections.SortedList&gt;物件可儲存。&lt;/xref:System.Collections.SortedList&gt;&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Count is the number of elements that are actually in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">計數是實際&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;中的項目數目</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.SortedList.Capacity%2A&gt; is always greater than or equal to Count.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;永遠是大於或等於 Count。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If Count exceeds &lt;xref:System.Collections.SortedList.Capacity%2A&gt; while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果計數超過&lt;xref:System.Collections.SortedList.Capacity%2A&gt;時加入項目，容量會自動增加之前複製的舊項目並加入新項目後，重新配置內部的陣列。&lt;/xref:System.Collections.SortedList.Capacity%2A&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The number of elements contained in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">中包含的元素數目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets the value at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得指定索引處的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">要取得之值的以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The value at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定索引處的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有效索引範圍之外<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that iterates through a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">傳回&lt;xref:System.Collections.IDictionaryEnumerator&gt;逐一查看的物件<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議，而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但無法用於修改基礎集合。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;也會列舉值帶回至這個位置。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">此位置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是未定義。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，您必須呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;前進的第一個元素之前讀取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;值集合的列舉值&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;會傳回相同的物件直到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;下一個項目。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;超過集合的列舉值的結尾會位於集合中的最後一個元素之後和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;也會傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最後一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是未定義。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;的第一個元素的集合，您可以呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;後面加上&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除元素，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以鎖定在整個列舉過程的集合。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓集合以便進行讀取和寫入的多重執行緒能夠存取，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; object for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionaryEnumerator&gt;物件<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets the key at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得位於指定索引處的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">要取得之索引鍵以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The key at the specified index of the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">指定索引處的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有效索引範圍之外<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得索引鍵中<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">傳回&lt;xref:System.Collections.IList&gt;物件是索引鍵的唯讀檢視表&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;會立即反映在&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.SortedList&gt;基礎所做的修改</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;做為&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的索引鍵相同的順序排序&lt;/xref:System.Collections.IList&gt;傳回的項目</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Keys%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">這個方法是類似於&lt;xref:System.Collections.SortedList.Keys%2A&gt;屬性，但是傳回&lt;xref:System.Collections.IList&gt;物件而非&lt;xref:System.Collections.ICollection&gt;物件。&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.SortedList.Keys%2A&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;物件，其中包含中的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得值， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.IList&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">傳回&lt;xref:System.Collections.IList&gt;物件是唯讀值的檢視&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.IList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;會立即反映在&lt;xref:System.Collections.IList&gt;.&lt;/xref:System.Collections.IList&gt;&lt;/xref:System.Collections.SortedList&gt;基礎所做的修改</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The elements of the returned &lt;xref:System.Collections.IList&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;作為&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的值相同的順序排序&lt;/xref:System.Collections.IList&gt;傳回的項目</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;xref:System.Collections.SortedList.Values%2A&gt; property, but returns an &lt;xref:System.Collections.IList&gt; object instead of an &lt;xref:System.Collections.ICollection&gt; object.</source>
          <target state="translated">這個方法是類似於&lt;xref:System.Collections.SortedList.Values%2A&gt;屬性，但是傳回&lt;xref:System.Collections.IList&gt;物件而非&lt;xref:System.Collections.ICollection&gt;物件。&lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.SortedList.Values%2A&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;物件，其中包含中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the specified key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">傳回指定之索引鍵中以零為起始的索引<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; object are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created, or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">項目&lt;xref:System.Collections.SortedList&gt;依索引鍵所排序的物件是根據特定&lt;xref:System.Collections.IComparer&gt;實作時指定&lt;xref:System.Collections.SortedList&gt;建立，或依據&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">因此，特定的索引鍵/值組的索引可能會變更為加入或移除&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;項目</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法會使用二進位搜尋演算法。因此，這個方法是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要在中尋找的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">以零為起始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>參數，如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p2">&lt;/code&gt;</ept>位於<bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>物件; 否則為-1。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較子會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">傳回指定的值中的第一個出現項目以零為起始的索引<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.SortedList&gt; are compared to the specified value using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">項目的值&lt;xref:System.Collections.SortedList&gt;與指定的值使用&lt;xref:System.Object.Equals%2A&gt;方法。&lt;/xref:System.Object.Equals%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法會使用線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">要在中尋找值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is found in the <bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object; otherwise, -1.</source>
          <target state="translated">第一個出現的以零為起始的索引<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept>參數，如果<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">value</ph> <ept id="p2">&lt;/code&gt;</ept>位於<bpt id="p3">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>物件; 否則為-1。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有固定的大小。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件具有固定大小，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">是唯讀的集合不允許在集合建立後增加、 移除或修改項目。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件是唯讀，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is synchronized (thread safe).</source>
          <target state="translated">取得值，指出是否存取<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件為同步 （安全執行緒）。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要保證的執行緒安全&lt;xref:System.Collections.SortedList&gt;物件時，所有作業都必須都透過包裝函式所傳回&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存取<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件為同步 （安全執行緒），否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Gets and sets the value associated with a specific key in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得及設定中指定的索引鍵相關聯的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>You can use the Item property to access a specific element in a collection by specifying the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">您可以使用此項目屬性來存取集合中的特定元素，藉由指定下列語法︰ <ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.SortedList&gt; object (for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">您也可以使用這個屬性來加入新項目中不存在的索引鍵的值設定&lt;xref:System.Collections.SortedList&gt;物件 (例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue)`</ph>。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.SortedList&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於&lt;xref:System.Collections.SortedList&gt;，項目屬性設定會覆寫舊的值。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Collections.SortedList.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">相反地，&lt;xref:System.Collections.SortedList.Add%2A&gt;方法不會修改現有的項目。&lt;/xref:System.Collections.SortedList.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.SortedList.Contains%2A&gt; method or the &lt;xref:System.Collections.SortedList.ContainsKey%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">若要在區別<ph id="ph1">`null`</ph>傳回因為找不到指定的索引鍵和<ph id="ph2">`null`</ph>傳回指定之索引鍵的值，所以<ph id="ph3">`null`</ph>，使用&lt;xref:System.Collections.SortedList.Contains%2A&gt;方法或&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;方法來判斷是否索引鍵存在於清單中。&lt;/xref:System.Collections.SortedList.ContainsKey%2A&gt; &lt;/xref:System.Collections.SortedList.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The elements of a &lt;xref:System.Collections.SortedList&gt; are sorted by the keys either according to a specific &lt;xref:System.Collections.IComparer&gt; implementation specified when the &lt;xref:System.Collections.SortedList&gt; is created or according to the &lt;xref:System.IComparable&gt; implementation provided by the keys themselves.</source>
          <target state="translated">項目&lt;xref:System.Collections.SortedList&gt;依索引鍵所排序是根據特定&lt;xref:System.Collections.IComparer&gt;實作時指定&lt;xref:System.Collections.SortedList&gt;是建立或根據&lt;xref:System.IComparable&gt;金鑰本身所提供的實作。&lt;/xref:System.IComparable&gt; &lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the &lt;xref:System.Collections.SortedList.Keys%2A&gt;property.</source>
          <target state="translated">C# 語言使用關鍵字來定義索引，而不必實作&lt;xref:System.Collections.SortedList.Keys%2A&gt;屬性。&lt;/xref:System.Collections.SortedList.Keys%2A&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 實作項目作為預設屬性，提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">擷取這個屬性的值是 O (記錄<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">將屬性設定為 O (記錄<ph id="ph1">`n`</ph>) 作業時，如果在&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;已有索引鍵</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">如果索引鍵不在清單中，將屬性設定為 O (<ph id="ph1">`n`</ph>) 未排序的資料或 I/O 作業 (記錄<ph id="ph2">`n`</ph>) 如果清單的結尾處加入新項目。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入會導致調整大小，作業為 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">取得或設定要使用的值相關聯的金鑰。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The value associated with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object, if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> is found; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">與相關聯的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>中的參數<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件，如果<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">key</ph> <ept id="p3">&lt;/code&gt;</ept>找到，否則<bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated">此屬性設定和<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或-此屬性設定， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>不存在於集合中，而<bpt id="p2">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>There is not enough available memory to add the element to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">不是記憶體不足，無法新增項目的<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The comparer throws an exception.</source>
          <target state="translated">比較子會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Gets the keys in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得索引鍵中<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the keys of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;物件是索引鍵的唯讀檢視表&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;會立即反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.SortedList&gt;基礎所做的修改</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the keys of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt; &lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的索引鍵相同的順序排序&lt;/xref:System.Collections.ICollection&gt;的項目</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetKeyList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">這個屬性是類似於&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;方法，但傳回&lt;xref:System.Collections.ICollection&gt;物件而非&lt;xref:System.Collections.IList&gt;物件。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.SortedList.GetKeyList%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;物件，其中包含中的索引鍵<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除具有指定之索引鍵的項目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.SortedList&gt; object does not contain an element with the specified key, the &lt;xref:System.Collections.SortedList&gt; remains unchanged.</source>
          <target state="translated">如果&lt;xref:System.Collections.SortedList&gt;物件不包含以指定的索引鍵的項目&lt;xref:System.Collections.SortedList&gt;維持不變。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在連續項目，例如清單的集合中移除項的項目向上移動以佔用空出的位置。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，會移動之項目的索引也會更新。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">這個問題不適用於集合的項目在概念上群組成 bucket，例如雜湊資料表。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">移除位於指定索引處的項目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在連續項目，例如清單的集合中移除項的項目向上移動以佔用空出的位置。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，會移動之項目的索引也會更新。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">這個問題不適用於集合的項目在概念上群組成 bucket，例如雜湊資料表。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">若要移除的項目以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有效索引範圍之外<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Replaces the value at a specific index in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取代位於指定索引中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引的順序為基礎的排序順序。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>When an element is added, it is inserted into &lt;xref:System.Collections.SortedList&gt; in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">當已新增的項目時，它會插入&lt;xref:System.Collections.SortedList&gt;中正確的排序順序和索引據此調整。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">移除項目時，索引也會據以的調整。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">加入或移除項目時，特定的索引鍵/值組的索引可能會因此，變更&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to save <ph id="ph1">`value`</ph>.</source>
          <target state="translated">以零為起始的索引處儲存<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to save into the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;將其儲存到<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is outside the range of valid indexes for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>有效索引範圍之外<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread-safe) wrapper for a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">傳回同步 （安全執行緒） 包裝函式<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>To guarantee the thread safety of a &lt;xref:System.Collections.SortedList&gt; object, all operations must be done through this wrapper only.</source>
          <target state="translated">若要保證的執行緒安全&lt;xref:System.Collections.SortedList&gt;物件時，所有作業必須都透過這個包裝函式只。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件同步處理。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">同步處理 （安全執行緒） 包裝函式<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;list&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得物件，可用來同步處理存取具備<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.SortedList&gt; object, use the &lt;xref:System.Collections.SortedList.Synchronized%2A&gt; method.</source>
          <target state="translated">若要建立的同步化的版本&lt;xref:System.Collections.SortedList&gt;物件，請使用&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.SortedList.Synchronized%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.SortedList&gt; using the SyncRoot property.</source>
          <target state="translated">不過，在衍生的類別可以提供自己的同步處理的版本&lt;xref:System.Collections.SortedList&gt;使用 SyncRoot 屬性。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.SortedList&gt;, not directly on the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">同步處理的程式碼必須在上執行作業的 SyncRoot &lt;xref:System.Collections.SortedList&gt;，不是直接在&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">這可確保衍生自其他物件的集合正常運作。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">具體而言，保持正常的同步處理與其他可能同時修改的執行緒&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">物件，可用來同步處理存取具備<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回&lt;xref:System.Collections.IEnumerator&gt;逐一<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議，而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但無法用於修改基礎集合。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;也會列舉值帶回至這個位置。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">在這個位置上，呼叫&lt;xref:System.Collections.IEnumerator.Current%2A&gt;擲回例外狀況。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，您必須呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;前進的第一個元素之前讀取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;值集合的列舉值&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;會傳回相同的物件直到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;下一個項目。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;超過集合的列舉值的結尾會位於集合中的最後一個元素之後和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;也會傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最後一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>，則呼叫&lt;xref:System.Collections.IEnumerator.Current%2A&gt;擲回例外狀況。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;的第一個元素的集合，您可以呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;後面加上&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;傳回項目所設定，即使列舉值已經無效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Sets the capacity to the actual number of elements in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">將容量設中的項目實際數目<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">這個方法可用記憶體降到最低集合的額外負荷如果沒有新的項目會加入至集合。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>To reset a &lt;xref:System.Collections.SortedList&gt; object to its initial state, call the &lt;xref:System.Collections.SortedList.Clear%2A&gt; method before calling TrimToSize.</source>
          <target state="translated">若要重設&lt;xref:System.Collections.SortedList&gt;物件設為初始狀態，呼叫&lt;xref:System.Collections.SortedList.Clear%2A&gt;方法，然後再呼叫 TrimToSize。&lt;/xref:System.Collections.SortedList.Clear%2A&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Trimming an empty &lt;xref:System.Collections.SortedList&gt; sets the capacity of the &lt;xref:System.Collections.SortedList&gt; to the default capacity.</source>
          <target state="translated">修剪空白&lt;xref:System.Collections.SortedList&gt;設定的容量&lt;xref:System.Collections.SortedList&gt;預設容量。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.SortedList&gt;</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.SortedList.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.SortedList.Count%2A&gt;。&lt;/xref:System.Collections.SortedList.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets the values in a <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得值， <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.ICollection&gt; object is a read-only view of the values of the &lt;xref:System.Collections.SortedList&gt; object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;物件是唯讀值的檢視&lt;xref:System.Collections.SortedList&gt;物件。&lt;/xref:System.Collections.SortedList&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Modifications made to the underlying &lt;xref:System.Collections.SortedList&gt; are immediately reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.SortedList&gt;會立即反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.SortedList&gt;基礎所做的修改</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The elements of the &lt;xref:System.Collections.ICollection&gt; are sorted in the same order as the values of the &lt;xref:System.Collections.SortedList&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;作為&lt;xref:System.Collections.SortedList&gt;.&lt;/xref:System.Collections.SortedList&gt;的值相同的順序排序&lt;/xref:System.Collections.ICollection&gt;的項目</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This property is similar to the &lt;xref:System.Collections.SortedList.GetValueList%2A&gt; method, but returns an &lt;xref:System.Collections.ICollection&gt; object instead of an &lt;xref:System.Collections.IList&gt; object.</source>
          <target state="translated">這個屬性是類似於&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;方法，但傳回&lt;xref:System.Collections.ICollection&gt;物件而非&lt;xref:System.Collections.IList&gt;物件。&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.SortedList.GetValueList%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; object containing the values in the <bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;物件，其中包含中的值<bpt id="p1">&lt;xref href="System.Collections.SortedList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>