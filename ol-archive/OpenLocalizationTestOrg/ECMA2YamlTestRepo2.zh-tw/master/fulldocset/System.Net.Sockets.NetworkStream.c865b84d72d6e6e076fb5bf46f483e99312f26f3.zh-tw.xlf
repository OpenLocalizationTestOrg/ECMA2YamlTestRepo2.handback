<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f790c88906c95d6c2a8db4d44c7945fe4465d574</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Sockets.NetworkStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8574d60047d91a0cb96a92ca81b0750281013a78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e5e0a9aaff159d95d3c5e2b7dabe294458c219c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the underlying stream of data for network access.</source>
          <target state="translated">提供網路存取資料的基礎資料流。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The NetworkStream class provides methods for sending and receiving data over &lt;xref:System.Net.Sockets.SocketType&gt; sockets in blocking mode.</source>
          <target state="translated">NetworkStream 類別提供方法來傳送和接收資料透過&lt;xref:System.Net.Sockets.SocketType&gt;封鎖模式通訊端。&lt;/xref:System.Net.Sockets.SocketType&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For more information about blocking versus nonblocking &lt;xref:System.Net.Sockets.Socket&gt;s, see <bpt id="p1">[</bpt>Using an Asynchronous Client Socket<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關封鎖與封鎖&lt;xref:System.Net.Sockets.Socket&gt;s，請參閱<bpt id="p1">[</bpt>使用非同步用戶端通訊端<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can use the NetworkStream class for both synchronous and asynchronous data transfer.</source>
          <target state="translated">您可以使用 NetworkStream 類別，這兩個同步和非同步資料傳輸。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about synchronous and asynchronous communication, see <bpt id="p1">[</bpt>Sockets<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關同步和非同步通訊的詳細資訊，請參閱<bpt id="p1">[</bpt>通訊端<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a NetworkStream, you must provide a connected &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">若要建立 NetworkStream，您必須提供連接的&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can also specify what &lt;xref:System.IO.FileAccess&gt; permission the NetworkStream has over the provided &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">您也可以指定哪些&lt;xref:System.IO.FileAccess&gt;權限 NetworkStream 高於提供&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, closing the NetworkStream does not close the provided &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">根據預設，關閉 NetworkStream 不會關閉提供&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you want the NetworkStream to have permission to close the provided &lt;xref:System.Net.Sockets.Socket&gt;, you must specify <ph id="ph1">`true`</ph> for the value of the <ph id="ph2">`ownsSocket`</ph> parameter.</source>
          <target state="translated">如果您想要有權限，以關閉提供 NetworkStream &lt;xref:System.Net.Sockets.Socket&gt;，您必須指定<ph id="ph1">`true`</ph>值的<ph id="ph2">`ownsSocket`</ph>參數。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; and &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; methods for simple single thread synchronous blocking I/O.</source>
          <target state="translated">使用&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;和&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法來簡單的單一執行緒同步鎖定的 I/O。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you want to process your I/O using separate threads, consider using the &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt; and &lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt; methods, or the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; and &lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt; methods for communication.</source>
          <target state="translated">如果您想要處理您使用個別執行緒的 I/O，請考慮使用&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;和&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;方法，或&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;和&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;方法進行通訊。&lt;/xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The NetworkStream does not support random access to the network data stream.</source>
          <target state="translated">NetworkStream 不支援隨機存取的網路資料流。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The value of the &lt;xref:System.Net.Sockets.NetworkStream.CanSeek%2A&gt; property, which indicates whether the stream supports seeking, is always <ph id="ph1">`false`</ph>; reading the &lt;xref:System.Net.Sockets.NetworkStream.Position%2A&gt; property, reading the &lt;xref:System.Net.Sockets.NetworkStream.Length%2A&gt; property, or calling the &lt;xref:System.Net.Sockets.NetworkStream.Seek%2A&gt; method will throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">值&lt;xref:System.Net.Sockets.NetworkStream.CanSeek%2A&gt;屬性，指出資料流是否支援搜尋，永遠是<ph id="ph1">`false`</ph>; 讀取&lt;xref:System.Net.Sockets.NetworkStream.Position%2A&gt;屬性中讀取的&lt;xref:System.Net.Sockets.NetworkStream.Length%2A&gt;屬性，或呼叫的&lt;xref:System.Net.Sockets.NetworkStream.Seek%2A&gt;方法會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Seek%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Length%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Position%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream.CanSeek%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Read and write operations can be performed simultaneously on an instance of the NetworkStream class without the need for synchronization.</source>
          <target state="translated">讀取和寫入作業可以同時執行，而不需要同步處理 NetworkStream 類別的執行個體上。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</source>
          <target state="translated">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，用於讀取作業，讀取之間會有互相干擾，並寫入執行緒無同步處理不需要。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">建立的新執行個體<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Net.Sockets.Socket&gt;。&lt;/xref:System.Net.Sockets.Socket&gt;類別</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.NetworkStream&gt; is created with read/write access to the specified &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.NetworkStream&gt;建立具有讀取/寫入至指定&lt;xref:System.Net.Sockets.Socket&gt;。&lt;/xref:System.Net.Sockets.Socket&gt;的存取權&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.NetworkStream&gt; does not own the underlying &lt;xref:System.Net.Sockets.Socket&gt;, so calling the &lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt; method does not close the &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.NetworkStream&gt;未擁有的基礎&lt;xref:System.Net.Sockets.Socket&gt;，因此呼叫的&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;方法不會關閉&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Close%2A&gt; &lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.Socket&gt; that the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will use to send and receive data.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.Socket&gt;， <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將用於傳送和接收資料。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not connected.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數未連線。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>-or-       The &lt;xref:System.Net.Sockets.Socket.SocketType*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-或-&lt;xref:System.Net.Sockets.Socket.SocketType*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是<ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。&lt;/xref:System.Net.Sockets.Socket.SocketType*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is in a nonblocking state.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數處於封鎖狀態。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.Net.Sockets.Socket&gt; with the specified &lt;xref:System.Net.Sockets.Socket&gt; ownership.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定&lt;xref:System.Net.Sockets.Socket&gt;具有指定&lt;xref:System.Net.Sockets.Socket&gt;擁有權。&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.NetworkStream&gt; is created with read/write access to the specified &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.NetworkStream&gt;建立具有讀取/寫入至指定&lt;xref:System.Net.Sockets.Socket&gt;。&lt;/xref:System.Net.Sockets.Socket&gt;的存取權&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the value of <ph id="ph1">`ownsSocket`</ph> parameter is <ph id="ph2">`true`</ph>, the &lt;xref:System.Net.Sockets.NetworkStream&gt; takes ownership of the underlying &lt;xref:System.Net.Sockets.Socket&gt;, and calling the &lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt; method also closes the underlying &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">如果值<ph id="ph1">`ownsSocket`</ph>參數是<ph id="ph2">`true`</ph>、&lt;xref:System.Net.Sockets.NetworkStream&gt;接管基礎&lt;xref:System.Net.Sockets.Socket&gt;，和呼叫的&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;方法也會關閉基礎&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Close%2A&gt; &lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.Socket&gt; that the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will use to send and receive data.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.Socket&gt;， <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將用於傳送和接收資料。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will take ownership of the &lt;xref:System.Net.Sockets.Socket&gt;; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定為<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>將取得的擁有權&lt;xref:System.Net.Sockets.Socket&gt;，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not connected.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數未連線。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-       the value of the &lt;xref:System.Net.Sockets.Socket.SocketType*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-的值&lt;xref:System.Net.Sockets.Socket.SocketType*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是<ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。&lt;/xref:System.Net.Sockets.Socket.SocketType*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-       the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is in a nonblocking state.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數處於封鎖狀態。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.Net.Sockets.Socket&gt; with the specified access rights.</source>
          <target state="translated">建立的新執行個體<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定&lt;xref:System.Net.Sockets.Socket&gt;具有所指定的存取權限。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.NetworkStream&gt; is created with the specified access to the specified &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.NetworkStream&gt;建立指定的存取權，以指定&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>With this constructor, the &lt;xref:System.Net.Sockets.NetworkStream&gt; does not own the underlying &lt;xref:System.Net.Sockets.Socket&gt;, so calling the &lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt; method does not close the underlying &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">使用這個建構函式，&lt;xref:System.Net.Sockets.NetworkStream&gt;並未擁有的基礎&lt;xref:System.Net.Sockets.Socket&gt;，因此呼叫的&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;方法不會關閉基礎&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Close%2A&gt; &lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`access`</ph> parameter sets the &lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; and &lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; properties of the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated"><ph id="ph1">`access`</ph>參數設定&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;的&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;和&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;屬性&lt;/xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;&lt;/xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, then the &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; method.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，然後在&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, then the &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; method.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，然後在&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, both method calls are allowed.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，允許使用這兩個方法呼叫。&lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.Socket&gt; that the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will use to send and receive data.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.Socket&gt;， <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將用於傳送和接收資料。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specify the type of access given to the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> over the provided &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">位元組合<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，指定類型的存取權提供給<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>透過提供&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not connected.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數未連線。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-or-       the &lt;xref:System.Net.Sockets.Socket.SocketType*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-或-&lt;xref:System.Net.Sockets.Socket.SocketType*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是<ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。&lt;/xref:System.Net.Sockets.Socket.SocketType*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-       the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is in a nonblocking state.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數處於封鎖狀態。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.Net.Sockets.Socket&gt; with the specified access rights and the specified &lt;xref:System.Net.Sockets.Socket&gt; ownership.</source>
          <target state="translated">建立的新執行個體<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別指定&lt;xref:System.Net.Sockets.Socket&gt;與指定的存取權限和指定&lt;xref:System.Net.Sockets.Socket&gt;擁有權。&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.NetworkStream&gt; is created with read/write access to the specified &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.NetworkStream&gt;建立具有讀取/寫入至指定&lt;xref:System.Net.Sockets.Socket&gt;。&lt;/xref:System.Net.Sockets.Socket&gt;的存取權&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If the value of the <ph id="ph1">`ownsSocket`</ph> parameter is <ph id="ph2">`true`</ph>, the &lt;xref:System.Net.Sockets.NetworkStream&gt; takes ownership of the underlying &lt;xref:System.Net.Sockets.Socket&gt;, and calling the &lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt; method also closes the underlying &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">如果值<ph id="ph1">`ownsSocket`</ph>參數是<ph id="ph2">`true`</ph>、&lt;xref:System.Net.Sockets.NetworkStream&gt;接管基礎&lt;xref:System.Net.Sockets.Socket&gt;，和呼叫的&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;方法也會關閉基礎&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream.Close%2A&gt; &lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`access`</ph> parameter sets the &lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; and &lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; properties of the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated"><ph id="ph1">`access`</ph>參數設定&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;的&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;和&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;屬性&lt;/xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;&lt;/xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, then the &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; method.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，然後在&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, then the &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; method.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，然後在&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you specify &lt;xref:System.IO.FileAccess&gt;, both method calls are allowed.</source>
          <target state="translated">如果您指定&lt;xref:System.IO.FileAccess&gt;，允許使用這兩個方法呼叫。&lt;/xref:System.IO.FileAccess&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Net.Sockets.Socket&gt; that the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will use to send and receive data.</source>
          <target state="translated">&lt;xref:System.Net.Sockets.Socket&gt;， <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將用於傳送和接收資料。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of access given to the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> over the provided &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">位元組合<bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，指定類型的存取權提供給<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>透過提供&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> will take ownership of the &lt;xref:System.Net.Sockets.Socket&gt;; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">設定為<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>將取得的擁有權&lt;xref:System.Net.Sockets.Socket&gt;，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not connected.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數未連線。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       The &lt;xref:System.Net.Sockets.Socket.SocketType*&gt; property of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-或-&lt;xref:System.Net.Sockets.Socket.SocketType*&gt;屬性<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數不是<ph id="ph2">&amp;lt;</ph>xref:System.Net.Sockets.SocketType?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>。&lt;/xref:System.Net.Sockets.Socket.SocketType*&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">socket</ph><ept id="p1">&lt;/code&gt;</ept> parameter is in a nonblocking state.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">socket</ph> <ept id="p1">&lt;/code&gt;</ept>參數處於封鎖狀態。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">開始非同步讀取從<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The BeginRead method starts asynchronously reading data from the incoming network buffers.</source>
          <target state="translated">BeginRead 方法開始以非同步方式從傳入的網路緩衝區中讀取資料。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calling the BeginRead method gives you the ability to receive data within a separate execution thread.</source>
          <target state="translated">呼叫的 BeginRead 方法，讓您能夠接收不同的執行緒中的資料。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You must create a callback method that implements the &lt;xref:System.AsyncCallback&gt; delegate and pass its name to the BeginRead method.</source>
          <target state="translated">您必須建立實作的回呼方法&lt;xref:System.AsyncCallback&gt;委派，並將其名稱傳遞給的 BeginRead 方法。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>At the very minimum, your <ph id="ph1">`state`</ph> parameter must contain the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">在最起碼您<ph id="ph1">`state`</ph>參數必須包含&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</source>
          <target state="translated">因為您會想要取得已接收的資料，您的回呼方法中，您應該建立的小型類別或結構來保留讀取的緩衝區和其他有用的資訊。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Pass the structure or class instance to the BeginRead method through the <ph id="ph1">`state`</ph> parameter.</source>
          <target state="translated">結構或類別的執行個體傳遞給的 BeginRead 方法，透過<ph id="ph1">`state`</ph>參數。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Your callback method should call the &lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt; method.</source>
          <target state="translated">回呼方法應該呼叫&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When your application calls BeginRead, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on &lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt; until the provided &lt;xref:System.Net.Sockets.NetworkStream&gt; reads data or throws an exception.</source>
          <target state="translated">當您的應用程式呼叫 BeginRead 時，系統會等到收到資料或發生錯誤，然後系統會使用另一個執行緒來執行指定的回呼方法和上的區塊&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;直到提供&lt;xref:System.Net.Sockets.NetworkStream&gt;擲回例外狀況或讀取資料。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you want the original thread to block after you call the BeginRead method, use the &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt; method.</source>
          <target state="translated">如果您想要呼叫的 BeginRead 方法之後，封鎖原始執行緒時，使用&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;方法。&lt;/xref:System.Threading.WaitHandle.WaitOne%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt; in the callback method when you want the original thread to continue executing.</source>
          <target state="translated">呼叫&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;在回呼方法，當您想要繼續執行原始的執行緒。&lt;/xref:System.Threading.EventWaitHandle.Set%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For additional information about writing callback methods, see <bpt id="p1">[</bpt>Marshaling a Delegate as a Callback Method<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關撰寫回呼方法的詳細資訊，請參閱<bpt id="p1">[</bpt>封送處理做為回呼方法的委派<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The BeginRead method reads as much data as is available, up to the number of bytes specified by the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">BeginRead 方法讀取可供使用，最多為指定的位元組數目的資料量<ph id="ph1">`size`</ph>參數。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If so, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果是，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Read and write operations can be performed simultaneously on an instance of the &lt;xref:System.Net.Sockets.NetworkStream&gt; class without the need for synchronization.</source>
          <target state="translated">讀取和寫入作業可以同時執行的執行個體上&lt;xref:System.Net.Sockets.NetworkStream&gt;類別，而不需要同步處理。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</source>
          <target state="translated">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，用於讀取作業，讀取之間會有互相干擾，並寫入執行緒無同步處理不需要。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Byte&gt; that is the location in memory to store data read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">類型的陣列&lt;xref:System.Byte&gt;也就是在記憶體中，將讀取的資料儲存位置<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The location in <ph id="ph1">`buffer`</ph> to begin storing the data.</source>
          <target state="translated">中的位置<ph id="ph1">`buffer`</ph>來開始儲存資料。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The number of bytes to read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要讀取的位元組數目<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that is executed when BeginRead completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;BeginRead 完成時執行的委派。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An object that contains any additional user-defined data.</source>
          <target state="translated">物件，包含任何其他使用者定義資料。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;，代表非同步呼叫。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> paramater.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>數參數。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>小於 0。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> minus the value of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>大於的長度<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>的值減掉<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">offset</ph> <ept id="p3">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-or-       There was a failure while reading from the network.</source>
          <target state="translated">-或者-從網路讀取時失敗。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write to a stream.</source>
          <target state="translated">開始非同步寫入的資料流。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The BeginWrite method starts an asynchronous send operation to the remote host.</source>
          <target state="translated">BeginWrite 方法開始遠端主機的非同步傳送作業。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Calling the BeginWrite method gives you the ability to send data within a separate execution thread.</source>
          <target state="translated">呼叫的 BeginWrite 方法，讓您能夠傳送不同的執行緒中的資料。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You must create a callback method that implements the &lt;xref:System.AsyncCallback&gt; delegate and pass its name to the BeginWrite method.</source>
          <target state="translated">您必須建立實作的回呼方法&lt;xref:System.AsyncCallback&gt;委派，並將其名稱傳遞給的 BeginWrite 方法。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>At the very minimum, your <ph id="ph1">`state`</ph> parameter must contain the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">在最起碼您<ph id="ph1">`state`</ph>參數必須包含&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If your callback needs more information, you can create a small class or structure to hold the &lt;xref:System.Net.Sockets.NetworkStream&gt; and the other required information.</source>
          <target state="translated">如果您的回呼需要詳細資訊，您可以建立小型類別或結構來保留&lt;xref:System.Net.Sockets.NetworkStream&gt;以及其他必要的資訊。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Pass the structure or class instance to the BeginWrite method through the <ph id="ph1">`state`</ph> parameter.</source>
          <target state="translated">結構或類別的執行個體傳遞給 BeginWrite 方法，透過<ph id="ph1">`state`</ph>參數。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Your callback method should implement the &lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt; method.</source>
          <target state="translated">回呼方法應該實作&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When your application calls BeginWrite, the system uses a separate thread to execute the specified callback method, and blocks on &lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt; until the &lt;xref:System.Net.Sockets.NetworkStream&gt; sends the number of bytes requested or throws an exception.</source>
          <target state="translated">當您的應用程式呼叫 BeginWrite 時，系統會使用個別的執行緒來執行指定的回呼方法，並封鎖&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;直到&lt;xref:System.Net.Sockets.NetworkStream&gt;傳送要求的位元組數目，或擲回例外狀況。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>If you want the original thread to block after you call the BeginWrite method, use the &lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt; method.</source>
          <target state="translated">如果您想要呼叫的 BeginWrite 方法之後，封鎖原始執行緒時，使用&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;方法。&lt;/xref:System.Threading.WaitHandle.WaitOne%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Call &lt;xref:System.Threading.EventWaitHandle.Set%2A&gt; in the callback method when you want the original thread to continue executing.</source>
          <target state="translated">呼叫&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;在回呼方法，當您想要繼續執行原始的執行緒。&lt;/xref:System.Threading.EventWaitHandle.Set%2A&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>For additional information about writing callback methods, see <bpt id="p1">[</bpt>Marshaling a Delegate as a Callback Method<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關撰寫回呼方法的詳細資訊，請參閱<bpt id="p1">[</bpt>封送處理做為回呼方法的委派<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If so, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果是，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Read and write operations can be performed simultaneously on an instance of the &lt;xref:System.Net.Sockets.NetworkStream&gt; class without the need for synchronization.</source>
          <target state="translated">讀取和寫入作業可以同時執行的執行個體上&lt;xref:System.Net.Sockets.NetworkStream&gt;類別，而不需要同步處理。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</source>
          <target state="translated">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，用於讀取作業，讀取之間會有互相干擾，並寫入執行緒無同步處理不需要。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Byte&gt; that contains the data to write to the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">類型的陣列&lt;xref:System.Byte&gt;，其中包含要寫入至資料<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The location in <ph id="ph1">`buffer`</ph> to begin sending the data.</source>
          <target state="translated">中的位置<ph id="ph1">`buffer`</ph>開始傳送資料。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要寫入的位元組數目<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.AsyncCallback&gt; delegate that is executed when BeginWrite completes.</source>
          <target state="translated">&lt;xref:System.AsyncCallback&gt;BeginWrite 完成時執行的委派。&lt;/xref:System.AsyncCallback&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An object that contains any additional user-defined data.</source>
          <target state="translated">物件，包含任何其他使用者定義資料。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;，代表非同步呼叫。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> minus the value of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>的值減掉<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">offset</ph> <ept id="p3">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-or-       There was a failure while writing to the network.</source>
          <target state="translated">-或者-寫入網路時發生失敗。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supports reading.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>支援讀取。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If CanRead is <ph id="ph1">`true`</ph>, &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; method.</source>
          <target state="translated">如果是 CanRead <ph id="ph1">`true`</ph>，&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Provide the appropriate &lt;xref:System.IO.FileAccess&gt; enumerated value in the constructor to set the readability and writability of the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">提供&lt;xref:System.IO.FileAccess&gt;列舉值來設定可讀性和可寫性&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;的建構函式中&lt;/xref:System.IO.FileAccess&gt;的適當</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The CanRead property is set when the &lt;xref:System.Net.Sockets.NetworkStream&gt; is initialized.</source>
          <target state="translated">CanRead 屬性時，會設定&lt;xref:System.Net.Sockets.NetworkStream&gt;已初始化。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data can be read from the stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以讀取資料，從資料流。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports seeking.</source>
          <target state="translated">取得值，指出資料流是否支援搜尋。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This property is not currently supported.This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">目前不支援這個屬性。這個屬性永遠傳回<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases to indicate that <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> cannot seek a specific location in the stream.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在所有情況下，以指出<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>無法搜尋資料流中的特定位置。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Indicates whether timeout properties are usable for <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指出是否可供逾時屬性<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This property is present because it is inherited from &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">這個屬性是存在，因為它繼承自&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>在所有情況下。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> supports writing.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>支援寫入。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If CanWrite is <ph id="ph1">`true`</ph>, &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; method.</source>
          <target state="translated">如果 CanWrite <ph id="ph1">`true`</ph>，&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Provide the appropriate &lt;xref:System.IO.FileAccess&gt; enumerated value in the constructor to set the readability and writability of the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">提供&lt;xref:System.IO.FileAccess&gt;列舉值來設定可讀性和可寫性&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;的建構函式中&lt;/xref:System.IO.FileAccess&gt;的適當</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The CanWrite property is set when the &lt;xref:System.Net.Sockets.NetworkStream&gt; is initialized.</source>
          <target state="translated">CanWrite 屬性時，會設定&lt;xref:System.Net.Sockets.NetworkStream&gt;已初始化。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data can be written to the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料可以寫入<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Closes the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> after waiting the specified time to allow data to be sent.</source>
          <target state="translated">關閉<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>之後等候指定的時間，以允許資料傳送。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The Close method frees both unmanaged and managed resources associated with the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">Close 方法會釋放 unmanaged 和 managed &lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt;相關聯的資源</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Net.Sockets.NetworkStream&gt; owns the underlying &lt;xref:System.Net.Sockets.Socket&gt;, it is closed as well.</source>
          <target state="translated">如果&lt;xref:System.Net.Sockets.NetworkStream&gt;擁有基礎&lt;xref:System.Net.Sockets.Socket&gt;，它也會關閉。&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If a &lt;xref:System.Net.Sockets.NetworkStream&gt; was associated with a &lt;xref:System.Net.Sockets.TcpClient&gt;, the Close method will close the TCP connection, but not dispose of the associated &lt;xref:System.Net.Sockets.TcpClient&gt;.</source>
          <target state="translated">如果&lt;xref:System.Net.Sockets.NetworkStream&gt;a &lt;xref:System.Net.Sockets.TcpClient&gt;、 Close 方法將會關閉 TCP 連接，但不是相關聯的&lt;xref:System.Net.Sockets.TcpClient&gt;.&lt;/xref:System.Net.Sockets.TcpClient&gt;處置&lt;/xref:System.Net.Sockets.TcpClient&gt;與相關聯&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</source>
          <target state="translated">32 位元帶正負號的整數，指定要傳送任何剩餘的資料，在關閉前等候的毫秒數。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than -1.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">timeout</ph> <ept id="p1">&lt;/code&gt;</ept>參數為小於-1。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether data is available on the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be read.</source>
          <target state="translated">取得值，指出資料是否可在<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>讀取。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Use the DataAvailable property to determine if data is ready to be read.</source>
          <target state="translated">使用 DataAvailable 屬性來判斷資料是否可供讀取。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If DataAvailable is <ph id="ph1">`true`</ph>, a call to &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; returns immediately.</source>
          <target state="translated">如果是 DataAvailable <ph id="ph1">`true`</ph>，呼叫&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;會立即傳回。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>If the remote host shuts down or closes the connection, DataAvailable may throw a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">如果遠端主機關機或關閉連接，DataAvailable 可能會擲回&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data is available on the stream to be read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料可使用的資料流讀取;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">&amp;lt;</ph>xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">使用<ph id="ph1">&amp;lt;</ph>xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;叫用<ph id="ph1">`Dispose`</ph>與<ph id="ph2">`disposing`</ph>設<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Net.Sockets.NetworkStream&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數是<ph id="ph2">`true`</ph>，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.Net.Sockets.NetworkStream&gt;參考。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">`Dispose`</ph>每個參考物件的方法。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Handles the end of an asynchronous read.</source>
          <target state="translated">處理非同步讀取的結束。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The EndRead method completes the asynchronous read operation started in the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; method.</source>
          <target state="translated">EndRead 方法完成非同步的讀取的作業，以啟動&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Before calling &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;, you need to create a callback method that implements the &lt;xref:System.AsyncCallback&gt; delegate.</source>
          <target state="translated">然後再呼叫&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;，您需要建立回呼方法，實作&lt;xref:System.AsyncCallback&gt;委派。&lt;/xref:System.AsyncCallback&gt; &lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This callback method executes in a separate thread and is called by the system after &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; returns.</source>
          <target state="translated">不同的執行緒中執行這個回呼方法，以及之後系統便會呼叫&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;傳回。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The callback method must accept the &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; method as a parameter.</source>
          <target state="translated">回呼方法必須接受&lt;xref:System.IAsyncResult&gt;從傳回&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;做為參數的方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Within the callback method, call the &lt;xref:System.IAsyncResult.AsyncState%2A&gt; property of the &lt;xref:System.IAsyncResult&gt; to obtain the state object passed to the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; method.</source>
          <target state="translated">在回呼方法中呼叫&lt;xref:System.IAsyncResult.AsyncState%2A&gt;屬性&lt;xref:System.IAsyncResult&gt;取得狀態物件傳遞至&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; &lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IAsyncResult.AsyncState%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Extract the receiving &lt;xref:System.Net.Sockets.NetworkStream&gt; from this state object.</source>
          <target state="translated">擷取接收&lt;xref:System.Net.Sockets.NetworkStream&gt;從這個狀態物件。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>After obtaining the &lt;xref:System.Net.Sockets.NetworkStream&gt;, call the EndRead method to successfully complete the read operation and return the number of bytes read.</source>
          <target state="translated">取得之後&lt;xref:System.Net.Sockets.NetworkStream&gt;，呼叫 EndRead 方法，以成功地完成讀取的作業，並傳回讀取的位元組數目。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The EndRead method blocks until data is available.</source>
          <target state="translated">EndRead 方法會封鎖直到資料為止。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The EndRead method reads as much data as is available up to the number of bytes specified in the <ph id="ph1">`size`</ph> parameter of the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; method.</source>
          <target state="translated">EndRead 方法會讀取位於最高達指定的位元組數目的資料量<ph id="ph1">`size`</ph>參數&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If the remote host shuts down the &lt;xref:System.Net.Sockets.Socket&gt; connection and all available data has been received, the EndRead method completes immediately and returns zero bytes.</source>
          <target state="translated">如果遠端主機關機&lt;xref:System.Net.Sockets.Socket&gt;已接收連線並將所有可用的資料、 EndRead 方法立即完成，且傳回零個位元組。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>To obtain the received data, call the &lt;xref:System.IAsyncResult.AsyncState%2A&gt; property of the &lt;xref:System.IAsyncResult&gt;, and extract the buffer contained in the resulting state object.</source>
          <target state="translated">若要取得已接收的資料，請呼叫&lt;xref:System.IAsyncResult.AsyncState%2A&gt;屬性&lt;xref:System.IAsyncResult&gt;，然後將解壓縮所產生的狀態物件中包含的緩衝區。&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IAsyncResult.AsyncState%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If so, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果是，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents an asynchronous call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;代表的非同步呼叫。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">從讀取的位元組數<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Handles the end of an asynchronous write.</source>
          <target state="translated">處理非同步寫入結束。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>EndWrite completes the asynchronous send operation started in &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;.</source>
          <target state="translated">EndWrite 完成啟動&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;。&lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;非同步傳送作業</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Before calling &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;, you need to create a callback method that implements the &lt;xref:System.AsyncCallback&gt; delegate.</source>
          <target state="translated">然後再呼叫&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;，您需要建立回呼方法，實作&lt;xref:System.AsyncCallback&gt;委派。&lt;/xref:System.AsyncCallback&gt; &lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This callback method executes in a separate thread and is called by the system after &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt; returns.</source>
          <target state="translated">不同的執行緒中執行這個回呼方法，以及之後系統便會呼叫&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;傳回。&lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The callback method must accept the &lt;xref:System.IAsyncResult&gt; returned from the &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt; method as a parameter.</source>
          <target state="translated">回呼方法必須接受&lt;xref:System.IAsyncResult&gt;從傳回&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;做為參數的方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Within the callback method, call the &lt;xref:System.IAsyncResult.AsyncState%2A&gt; property of the <ph id="ph1">`IAsyncResult`</ph> parameter to obtain the &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">在回呼方法中呼叫&lt;xref:System.IAsyncResult.AsyncState%2A&gt;屬性<ph id="ph1">`IAsyncResult`</ph>參數來取得&lt;xref:System.Net.Sockets.NetworkStream&gt;.&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IAsyncResult.AsyncState%2A&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>After obtaining the &lt;xref:System.Net.Sockets.NetworkStream&gt;, you can call the EndWrite method to successfully complete the send operation and return the number of bytes sent.</source>
          <target state="translated">取得之後&lt;xref:System.Net.Sockets.NetworkStream&gt;，您可以呼叫 EndWrite 方法已成功完成傳送作業，並傳回傳送的位元組數目。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The EndWrite method blocks until the requested number of bytes are sent.</source>
          <target state="translated">EndWrite 方法會封鎖直到傳送要求的位元組數目。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If so, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果是，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IAsyncResult&gt; that represents the asynchronous call.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;，代表非同步呼叫。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred while writing to the network.</source>
          <target state="translated">-或者-寫入網路時發生錯誤。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">這個方法會覆寫&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Application code should not call this method; an object's &lt;xref:System.Object.Finalize%2A&gt; method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">應用程式程式碼不應該呼叫這個方法。物件的&lt;xref:System.Object.Finalize%2A&gt;方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For more information about using the Finalize method, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需使用 Finalize 方法的詳細資訊，請參閱<bpt id="p1">[</bpt>Finalize 方法和解構函式<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清除 Unmanaged 資源上<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>，和<bpt id="p3">[</bpt>覆寫 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Flushes data from the stream.</source>
          <target state="translated">排清資料流的資料。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This method is reserved for future use.</source>
          <target state="translated">這個方法被保留供未來使用。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The Flush method implements the &lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt; method; however, because &lt;xref:System.Net.Sockets.NetworkStream&gt; is not buffered, it has no affect on network streams.</source>
          <target state="translated">Flush 方法實作&lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;方法; 不過，因為&lt;xref:System.Net.Sockets.NetworkStream&gt;是未緩衝處理，它會有任何作用網路資料流。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Calling the Flush method does not throw an exception.</source>
          <target state="translated">呼叫 Flush 方法不會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Flushes data from the stream as an asynchronous operation.</source>
          <target state="translated">以非同步作業會排清資料流的資料。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Threading.Tasks.Task&gt; object will complete after data has been flushed from the stream for the &lt;xref:System.Net.Sockets.NetworkStream&gt; instance.</source>
          <target state="translated">傳回&lt;xref:System.Threading.Tasks.Task&gt;物件已從資料流排清資料之後，會完成&lt;xref:System.Net.Sockets.NetworkStream&gt;執行個體。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
          <target state="translated">取消語彙基元用來傳播應該取消這項作業的通知。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Threading.Tasks.Task&gt;.</source>
          <target state="translated">傳回&lt;xref:System.Threading.Tasks.Task&gt;.&lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Gets the length of the data available on the stream.</source>
          <target state="translated">取得資料流上的可用資料的長度。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This property is not currently supported and always throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">這個屬性目前不支援，而且一律會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The length of the data available on the stream.</source>
          <target state="translated">資料流上的可用資料的長度。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Any use of this property.</source>
          <target state="translated">任何使用此屬性。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position in the stream.</source>
          <target state="translated">取得或設定資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>This property is not currently supported and always throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">這個屬性目前不支援，而且一律會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The current position in the stream.</source>
          <target state="translated">資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Any use of this property.</source>
          <target state="translated">任何使用此屬性。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Reads data from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取資料，從<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This method reads data into the <ph id="ph1">`buffer`</ph> parameter and returns the number of bytes successfully read.</source>
          <target state="translated">這個方法會讀取資料到<ph id="ph1">`buffer`</ph>參數，並傳回成功讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>If no data is available for reading, the Read method returns 0.</source>
          <target state="translated">如果沒有資料可供讀取，則 Read 方法會傳回 0。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The Read operation reads as much data as is available, up to the number of bytes specified by the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">「 讀取 」 操作會讀取可供使用，最多為指定的位元組數目的資料量<ph id="ph1">`size`</ph>參數。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If the remote host shuts down the connection, and all available data has been received, the Read method completes immediately and return zero bytes.</source>
          <target state="translated">如果遠端主機關閉連接，而且已經收到所有可用的資料，Read 方法會立即完成，並傳回零個位元組。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Check to see if the &lt;xref:System.Net.Sockets.NetworkStream&gt; is readable by calling the &lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;，查看&lt;xref:System.Net.Sockets.NetworkStream&gt;藉由呼叫是否可讀取&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;屬性。&lt;/xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If you attempt to read from a &lt;xref:System.Net.Sockets.NetworkStream&gt; that is not readable, you will get an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">如果您嘗試從&lt;xref:System.Net.Sockets.NetworkStream&gt;無法讀取，您會收到&lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt;&lt;/xref:System.Net.Sockets.NetworkStream&gt;讀取</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>If so, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果是，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Byte&gt; that is the location in memory to store data read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">類型的陣列&lt;xref:System.Byte&gt;也就是在記憶體中，將讀取的資料儲存位置<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The location in <ph id="ph1">`buffer`</ph> to begin storing the data to.</source>
          <target state="translated">中的位置<ph id="ph1">`buffer`</ph>來開始儲存的資料。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The number of bytes to read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要讀取的位元組數目<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">從讀取的位元組數<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> minus the value of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>的值減掉<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">offset</ph> <ept id="p3">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The underlying &lt;xref:System.Net.Sockets.Socket&gt; is closed.</source>
          <target state="translated">基礎&lt;xref:System.Net.Sockets.Socket&gt;已關閉。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>-or-       There is a failure reading from the network.</source>
          <target state="translated">-或者-從網路讀取失敗。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be read.</source>
          <target state="translated">取得或設定值，指出是否<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>可以讀取。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>You must derive from the &lt;xref:System.Net.Sockets.NetworkStream&gt; class to use the Readable property.</source>
          <target state="translated">您必須衍生自&lt;xref:System.Net.Sockets.NetworkStream&gt;類別來使用可讀取的屬性。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>If Readable is <ph id="ph1">`true`</ph>, &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; method.</source>
          <target state="translated">如果可讀取為<ph id="ph1">`true`</ph>，&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>You can also determine whether a &lt;xref:System.Net.Sockets.NetworkStream&gt; is readable by checking the publicly accessible &lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; property.</source>
          <target state="translated">您也可以判斷是否&lt;xref:System.Net.Sockets.NetworkStream&gt;是藉由檢查可公開存取的可讀取&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;屬性。&lt;/xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The Readable property is set when the &lt;xref:System.Net.Sockets.NetworkStream&gt; is initialized.</source>
          <target state="translated">可讀取的屬性時，會設定&lt;xref:System.Net.Sockets.NetworkStream&gt;已初始化。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate that the <bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can be read; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示<bpt id="p2">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>可讀取，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time that a read operation blocks waiting for data.</source>
          <target state="translated">取得或設定讀取的作業封鎖，等待資料的時間量。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If the read operation does not complete within the time specified by this property, the read operation throws an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">如果這個屬性所指定的時間內讀取的作業未完成，讀取的作業會擲回&lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property affects only synchronous reads performed by calling the &lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這個屬性會影響只同步呼叫來執行的讀取&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This property does not affect asynchronous reads performed by calling the &lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt; method.</source>
          <target state="translated">這個屬性不會影響執行呼叫的非同步讀取&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</source>
          <target state="translated">A &lt;xref:System.Int32&gt;，指定的時間，以毫秒為單位，讀取的作業失敗之前等候。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The default value, &lt;xref:System.Threading.Timeout.Infinite&gt;, specifies that the read operation does not time out.</source>
          <target state="translated">預設值， &lt;xref:System.Threading.Timeout.Infinite&gt;，指定讀取的作業不會逾時。&lt;/xref:System.Threading.Timeout.Infinite&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The value specified is less than or equal to zero and is not &lt;xref:System.Threading.Timeout.Infinite&gt;.</source>
          <target state="translated">指定的值小於或等於零，且不是&lt;xref:System.Threading.Timeout.Infinite&gt;.&lt;/xref:System.Threading.Timeout.Infinite&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Sets the current position of the stream to the given value.</source>
          <target state="translated">將資料流的目前位置設定指定的值。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>This method is not currently supported and always throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">這個方法目前不支援，一律會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
          <target state="translated">未使用此參數。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
          <target state="translated">未使用此參數。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The position in the stream.</source>
          <target state="translated">資料流中的位置。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Any use of this property.</source>
          <target state="translated">任何使用此屬性。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Sets the length of the stream.</source>
          <target state="translated">設定資料流的長度。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>This method always throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">這個方法一律會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
          <target state="translated">未使用此參數。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Any use of this property.</source>
          <target state="translated">任何使用此屬性。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the underlying &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">取得基礎&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Classes deriving from &lt;xref:System.Net.Sockets.NetworkStream&gt; can use this property to get the underlying &lt;xref:System.Net.Sockets.Socket&gt;.</source>
          <target state="translated">類別衍生自&lt;xref:System.Net.Sockets.NetworkStream&gt;可以使用這個屬性，以取得基礎&lt;xref:System.Net.Sockets.Socket&gt;.&lt;/xref:System.Net.Sockets.Socket&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Use the underlying &lt;xref:System.Net.Sockets.Socket&gt; returned from the Socket property if you require access beyond that which &lt;xref:System.Net.Sockets.NetworkStream&gt; provides.</source>
          <target state="translated">使用基礎&lt;xref:System.Net.Sockets.Socket&gt;從通訊端屬性傳回，如果您需要存取超過其&lt;xref:System.Net.Sockets.NetworkStream&gt;提供。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property is accessible only through this class or a derived class.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;，這個值只可透過存取此類別或衍生的類別。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Net.Sockets.Socket&gt; that represents the underlying network connection.</source>
          <target state="translated">A&lt;xref:System.Net.Sockets.Socket&gt;表示基礎網路連接。&lt;/xref:System.Net.Sockets.Socket&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Writes data to the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">會將資料寫入<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The Write method starts at the specified <ph id="ph1">`offset`</ph> and sends <ph id="ph2">`size`</ph> bytes from the contents of <ph id="ph3">`buffer`</ph> to the network.</source>
          <target state="translated">Write 方法開始的指定位置<ph id="ph1">`offset`</ph>並傳送<ph id="ph2">`size`</ph>位元組的內容從<ph id="ph3">`buffer`</ph>到網路。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The Write method blocks until the requested number of bytes is sent or a &lt;xref:System.Net.Sockets.SocketException&gt; is thrown.</source>
          <target state="translated">寫入方法會封鎖，直到傳送要求的位元組數目或&lt;xref:System.Net.Sockets.SocketException&gt;就會擲回。&lt;/xref:System.Net.Sockets.SocketException&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If you receive a &lt;xref:System.Net.Sockets.SocketException&gt;, use the &lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName&gt; property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">如果您收到&lt;xref:System.Net.Sockets.SocketException&gt;，使用&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName&gt;屬性來取得特定的錯誤碼，並請參閱 Windows Sockets 第 2 版 API 錯誤的程式碼文件 MSDN 中錯誤的詳細描述。&lt;/xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Net.Sockets.SocketException&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Check to see if the &lt;xref:System.Net.Sockets.NetworkStream&gt; is writable by accessing the &lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;，查看&lt;xref:System.Net.Sockets.NetworkStream&gt;是可寫入存取&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;屬性。&lt;/xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If you attempt to write to a &lt;xref:System.Net.Sockets.NetworkStream&gt; that is not writable, you will get an &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">如果您嘗試要寫入&lt;xref:System.Net.Sockets.NetworkStream&gt;的是無法寫入，您會收到&lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>If you receive an &lt;xref:System.IO.IOException&gt;, check the &lt;xref:System.Exception.InnerException%2A&gt; property to determine if it was caused by a &lt;xref:System.Net.Sockets.SocketException&gt;.</source>
          <target state="translated">如果您收到&lt;xref:System.IO.IOException&gt;，請檢查&lt;xref:System.Exception.InnerException%2A&gt;屬性來判斷如果起因&lt;xref:System.Net.Sockets.SocketException&gt;.&lt;/xref:System.Net.Sockets.SocketException&gt; &lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Byte&gt; that contains the data to write to the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">類型的陣列&lt;xref:System.Byte&gt;，其中包含要寫入至資料<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The location in <ph id="ph1">`buffer`</ph> from which to start writing data.</source>
          <target state="translated">中的位置<ph id="ph1">`buffer`</ph>要開始寫入資料。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要寫入的位元組數目<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than 0.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數小於 0。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">size</ph><ept id="p1">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept> minus the value of the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p3">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">-或- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">size</ph> <ept id="p1">&lt;/code&gt;</ept>參數的長度大於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">buffer</ph> <ept id="p2">&lt;/code&gt;</ept>的值減掉<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">offset</ph> <ept id="p3">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>There was a failure while writing to the network.</source>
          <target state="translated">寫入網路時發生失敗。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>-or-       An error occurred when accessing the socket.</source>
          <target state="translated">-或者-存取通訊端時發生錯誤。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>See the Remarks section for more information.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已關閉。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-or-       There was a failure reading from the network.</source>
          <target state="translated">-或者-從網路讀取失敗。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is writable.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Net.Sockets.NetworkStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是可寫入。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>You must derive from the &lt;xref:System.Net.Sockets.NetworkStream&gt; class to use the Writeable property.</source>
          <target state="translated">您必須衍生自&lt;xref:System.Net.Sockets.NetworkStream&gt;類別來使用可寫入的屬性。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>If Writeable is <ph id="ph1">`true`</ph>, &lt;xref:System.Net.Sockets.NetworkStream&gt; allows calls to the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; method.</source>
          <target state="translated">如果是 Writeable <ph id="ph1">`true`</ph>，&lt;xref:System.Net.Sockets.NetworkStream&gt;允許呼叫&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>You can also determine whether a &lt;xref:System.Net.Sockets.NetworkStream&gt; is writable by checking the publicly accessible &lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; property.</source>
          <target state="translated">您也可以判斷是否&lt;xref:System.Net.Sockets.NetworkStream&gt;是藉由檢查可公開存取的可寫入&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;屬性。&lt;/xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt; &lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The Writeable property is set when the &lt;xref:System.Net.Sockets.NetworkStream&gt; is initialized.</source>
          <target state="translated">可寫入的屬性時，會設定&lt;xref:System.Net.Sockets.NetworkStream&gt;已初始化。&lt;/xref:System.Net.Sockets.NetworkStream&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if data can be written to the stream; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料可以寫入資料流。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount of time that a write operation blocks waiting for data.</source>
          <target state="translated">取得或設定寫入作業封鎖，等待資料的時間量。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>If the write operation does not complete within the time specified by this property, the write operation throws a &lt;xref:System.IO.IOException&gt;.</source>
          <target state="translated">如果這個屬性所指定的時間內不會寫入作業完成，在寫入作業會擲回&lt;xref:System.IO.IOException&gt;.&lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property affects only synchronous write operations performed by calling the &lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這個屬性會影響執行的呼叫只同步寫入操作&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>This property does not affect asynchronous writes performed by calling the &lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt; method.</source>
          <target state="translated">這個屬性不會影響執行呼叫的非同步寫入&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;方法。&lt;/xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Int32&gt; that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</source>
          <target state="translated">A &lt;xref:System.Int32&gt;，指定的時間，以毫秒為單位，在寫入作業失敗之前等候。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The default value, &lt;xref:System.Threading.Timeout.Infinite&gt;, specifies that the write operation does not time out.</source>
          <target state="translated">預設值， &lt;xref:System.Threading.Timeout.Infinite&gt;，指定寫入作業不會逾時。&lt;/xref:System.Threading.Timeout.Infinite&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The value specified is less than or equal to zero and is not &lt;xref:System.Threading.Timeout.Infinite&gt;.</source>
          <target state="translated">指定的值小於或等於零，且不是&lt;xref:System.Threading.Timeout.Infinite&gt;.&lt;/xref:System.Threading.Timeout.Infinite&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>