<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25b2c13aca7eb12585b3d02640ad9017e879a6db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Provider.ITextRangeProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a2fc8e1335089433e3d73b2749325146e8d76e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4e4a3cc39a607a101f67f7bd3b0edecf4144703</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.ITextProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">公開方法與屬性，以實作的文字容器中支援使用者介面自動化用戶端存取的一段連續文字<bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.ITextProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Implemented on a UI Automation provider that must support the &lt;xref:System.Windows.Automation.TextPattern&gt; control pattern.</source>
          <target state="translated">在必須支援的 UI 自動化提供者上實作&lt;xref:System.Windows.Automation.TextPattern&gt;控制項模式。&lt;/xref:System.Windows.Automation.TextPattern&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Automation.Text.TextPatternRange&gt; can represent an insertion point, a subset, or all of the text in a &lt;xref:System.Windows.Automation.TextPattern&gt; container.</source>
          <target state="translated">A&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;的插入點、 的子集或所有中的文字可以代表&lt;xref:System.Windows.Automation.TextPattern&gt;容器。&lt;/xref:System.Windows.Automation.TextPattern&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRange&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">加入至支援多個文字容器中反白顯示的文字集合，斷續選取。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">文字插入點移動至新的選取範圍的區域。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">提供變質文字範圍移動插入點。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (that is, &lt;xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">如果文字提供者不支援多次斷續選取 (也就是&lt;xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*&gt;的值必須<bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>)。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns a new <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.ITextRangeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> identical to the original <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.ITextRangeProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and inheriting all properties of the original.</source>
          <target state="translated">傳回新<bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.ITextRangeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>等於原始<bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.ITextRangeProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>且繼承其所有屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">新的範圍可以從原始獨立操作。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The new text range.</source>
          <target state="translated">新的文字範圍。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) is never returned.</source>
          <target state="translated">Null 參考 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>) 絕對不會傳回。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the span (the <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> endpoint to the <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">傳回值，指出是否範圍 ( <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>端點<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>端點) 的文字範圍是與另一個文字範圍相同。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A text range to compare</source>
          <target state="translated">要比較的文字範圍</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the span of both text ranges is identical; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果兩個文字範圍的跨幅相同的。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">如果要比較的範圍不是來自相同文字提供者。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a value that specifies whether two text ranges have identical endpoints.</source>
          <target state="translated">傳回值，這個值會指定兩個文字範圍是否具有相同的端點。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the caller.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>呼叫端的端點。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The target range for comparison.</source>
          <target state="translated">比較目標範圍。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoint of the target.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>端點的目標。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">如果呼叫端的端點更早出現在文字中比目標端點，傳回負數的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">如果呼叫端的端點是在與目標端點位於相同位置，則傳回零。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">如果呼叫端的端點在文字中比目標端點更晚出現，則傳回正值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetRange</ph><ept id="p1">&lt;/code&gt;</ept> is from a different text provider.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">targetRange</ph> <ept id="p1">&lt;/code&gt;</ept>是從不同的文字提供者。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Expands the text range to the specified text unit.</source>
          <target state="translated">將文字範圍擴展至指定的文字單元。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">如果範圍中的指定單位的精確數量則保持不變。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>There is a series of steps are involved behind the scenes in order for the &lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt; method to execute successfully.</source>
          <target state="translated">沒有一系列的步驟會在幕後順序&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;方法才能成功執行。&lt;/xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點，可讓&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點變成多餘。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">產生的範圍向後移&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;要求開頭<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">將範圍移往前或往後在&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;所要求的數目<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">範圍到時會展開，從變質範圍狀態移動&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;依一個要求的端點<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move &amp; expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由移動 &amp; expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept>如何針對 move （） 和 expandtoenclosingunit （） 調整文字範圍的範例 &gt; <ph id="ph1">[!NOTE]</ph> &gt; 這些步驟是必要的因為它是很常見的螢幕助讀員讀取完整單字、 句子或整個段落插入點或任何虛擬的游標位置。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>ExpandToEnclosingUnit respects both hidden and visible text.</source>
          <target state="translated">Expandtoenclosingunit 進行尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>ExpandToEnclosingUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">Expandtoenclosingunit 進行會延後到下一個最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;如果給定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控制項不支援。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The textual unit.</source>
          <target state="translated">文字單元。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">傳回具有指定的屬性值的文字範圍子集。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The attribute to search for.</source>
          <target state="translated">要搜尋的屬性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The attribute value to search for.</source>
          <target state="translated">要搜尋的屬性值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">此值必須符合指定之屬性的型別。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該傳回最後一個出現的文字範圍，而不是第一個;否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A text range having a matching attribute and attribute value; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">文字範圍具有相符屬性和屬性值。否則為 null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">傳回包含指定的文字的文字範圍子集。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The text string to search for.</source>
          <target state="translated">要搜尋的文字字串。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the last occurring text range should be returned instead of the first; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該傳回最後一個出現的文字範圍，而不是第一個;否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if case should be ignored; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該忽略大小寫。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A text range matching the specified text; otherwise null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">符合指定之文字; 文字範圍否則為 null (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>中<ph id="ph1">[!INCLUDE[TLA#tla_visualbnet](~/add/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Retrieves the value of the specified attribute across the text range.</source>
          <target state="translated">文字範圍，擷取指定之屬性的值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The text attribute.</source>
          <target state="translated">文字屬性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves an object representing the value of the specified attribute.</source>
          <target state="translated">擷取物件，代表指定之屬性的值。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`GetAttributeValue(TextPattern.FontNameAttribute)`</ph> would return a string that represents the font name of the text range while <ph id="ph2">`GetAttributeValue(TextPattern.IsItalicAttribute)`</ph> would return a value of type &lt;xref:System.Boolean&gt;.</source>
          <target state="translated">例如，<ph id="ph1">`GetAttributeValue(TextPattern.FontNameAttribute)`</ph>會傳回表示文字範圍時的字型名稱的字串<ph id="ph2">`GetAttributeValue(TextPattern.IsItalicAttribute)`</ph>會傳回型別&lt;xref:System.Boolean&gt;.&lt;/xref:System.Boolean&gt;值</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Windows.Automation.TextPattern.MixedAttributeValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果文字範圍內的指定屬性的值而有所不同。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Windows.Automation.AutomationElement.NotSupported"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果提供者或控制項不支援指定的屬性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">如果指定的屬性不是有效的。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">擷取每一個完整或部分可見的文字範圍中的文字行構成的週框的集合。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">文字的文字範圍中的每一個完整或部分行構成的週框陣列。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An empty array for a degenerate range.</source>
          <target state="translated">變質範圍的空陣列。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">已將其放在完全螢幕之外、 螢幕座標的文字範圍的空陣列捲動到檢視，或被重疊的視窗遮蔽。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">擷取文字範圍內所有內嵌物件的集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A collection of child objects that fall within the range.</source>
          <target state="translated">落在範圍內的子物件的集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">子系與文字範圍重疊，但不完全圍住，則也會包含在集合中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">如果沒有子物件會傳回空集合。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Returns the innermost control that encloses the text range.</source>
          <target state="translated">傳回圍住文字範圍的最內層控制項。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The enclosing control, typically the text provider that supplies the text range.</source>
          <target state="translated">封入控制項通常提供文字範圍的文字提供者。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">不過，如果文字提供者支援子項目，例如表格或超連結，然後封入項目可能是文字提供者的子系。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Retrieves the plain text of the range.</source>
          <target state="translated">擷取範圍的純文字。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>GetText respects both hidden and visible text.</source>
          <target state="translated">GetText 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">如果<ph id="ph1">`maxLength`</ph>大於的長度是呼叫端的文字範圍內，傳回的字串會是個文字範圍的純文字。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>GetText will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated">GetText 不會影響順序文字流向; 中的端點它一定會傳回邏輯文字流程順序中的文字範圍的開始和結束端點之間的文字。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The maximum length of the string to return.</source>
          <target state="translated">要傳回之字串的長度上限。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`-1`</ph> if no limit is required.</source>
          <target state="translated">使用<ph id="ph1">`-1`</ph>如果需要無限制。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The plain text of the text range, possibly truncated at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">純文字的文字範圍內，可能以截斷方式在指定<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">maxLength</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">maxLength</ph> <ept id="p1">&lt;/code&gt;</ept>小於-1。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">將文字範圍的文字單元數移動。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the Move method to execute successfully.</source>
          <target state="translated">需周遊文字範圍的內容時，一系列的步驟會在幕後移動方法，才能成功執行的順序。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點，可讓&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點變成多餘。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">產生的範圍向後移&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;要求開頭<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The range is moved forward or backward in the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt; by the requested number of <ph id="ph1">`unit`</ph> boundaries.</source>
          <target state="translated">將範圍移往前或往後在&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;所要求的數目<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">範圍到時會展開，從變質範圍狀態移動&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;依一個要求的端點<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move &amp; expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由移動 &amp; expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept>如何針對 move （） 和 expandtoenclosingunit （） 的文字內容 （或內部文字） 的文字容器和內嵌的物件，例如超連結或表格儲存格，調整文字範圍的範例會公開為單一連續的文字資料流中的控制項檢閱和內容檢閱<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>樹狀; 物件界限會被忽略。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>合併的內嵌物件的文字範圍。<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>合併內嵌物件的文字範圍。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Example of a text stream with embedded objects and their range spans       Move respects both hidden and visible text.</source>
          <target state="translated">具有內嵌的物件及其範圍的文字資料流範例跨越移動方面此時隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Move defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated">移動會延後到下一個最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;如果給定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控制項不支援。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;       The text is not altered in any way, the text range just spans a different part of the text.</source>
          <target state="translated">- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;- &lt;xref:System.Windows.Automation.Text.TextUnit&gt;-&lt;xref:System.Windows.Automation.Text.TextUnit&gt;文字不會改變以任何方式，只是文字範圍擴展的不同部分文字。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The text unit boundary.</source>
          <target state="translated">文字單元界限。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The number of text units to move.</source>
          <target state="translated">要移動的文字單元數。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">正值會將移動的文字範圍向前，負值會將文字範圍向後，0 沒有作用。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The number of units actually moved.</source>
          <target state="translated">實際移動的單位數。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*&gt; endpoints.</source>
          <target state="translated">這可能會小於要求的數目如果新的文字範圍端點大於或小於比&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*&gt;端點。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange*&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">將文字範圍的一個端點移至第二個文字範圍指定的端點。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; is always less than or equal to &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;).</source>
          <target state="translated">如果移動端點置於相同的文字範圍的另一個端點則導致變質範圍，以及確保端點的正確順序也，移動其他端點 (也就是&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;一定會小於或等於&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;)。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">要移動的端點。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Another range from the same text provider.</source>
          <target state="translated">另一個範圍是從相同的文字提供者。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An endpoint on the other range.</source>
          <target state="translated">另一個範圍上的端點。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Moves one endpoint of the text range the specified number of text units within the document range.</source>
          <target state="translated">一個端點移動的文字範圍的文件範圍內的文字單元數。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the &lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt; method to execute successfully.</source>
          <target state="translated">需周遊文字範圍的內容時，一系列的步驟會在幕後順序&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;方法才能成功執行。&lt;/xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>1.</source>
          <target state="translated">1.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint, which makes the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化;也就是文字範圍已摺疊為變質範圍在&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點，可讓&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;端點變成多餘。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; &lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt>http://www.microsoft.com<ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The resulting range is moved backward in the &lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt; to the beginning of the requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">產生的範圍向後移&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;要求開頭<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The range is then expanded from a degenerate range state by moving the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint by one requested <ph id="ph1">`unit`</ph> boundary.</source>
          <target state="translated">範圍到時會展開，從變質範圍狀態移動&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;依一個要求的端點<ph id="ph1">`unit`</ph>界限。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept>   Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()       MoveEndpointByUnit defers to the next largest &lt;xref:System.Windows.Automation.Text.TextUnit&gt; supported if the given &lt;xref:System.Windows.Automation.Text.TextUnit&gt; is not supported by the control.</source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move &amp; expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由移動 &amp; expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept>如何針對 move （） 和 expandtoenclosingunit （) MoveEndpointByUnit 調整文字範圍的範例會延後到下一個最大&lt;xref:System.Windows.Automation.Text.TextUnit&gt;如果給定&lt;xref:System.Windows.Automation.Text.TextUnit&gt;控制項不支援。&lt;/xref:System.Windows.Automation.Text.TextUnit&gt; &lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;</source>
          <target state="translated">-   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;      -   &lt;xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;&lt;/xref:System.Windows.Automation.Text.TextUnit&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The endpoint to move.</source>
          <target state="translated">要移動的端點。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The textual unit for moving.</source>
          <target state="translated">移動的文字單元。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The number of units to move.</source>
          <target state="translated">要移動的單位數目。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A positive value moves the endpoint forward.</source>
          <target state="translated">正值會向前移動的點。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A negative value moves backward.</source>
          <target state="translated">負值會向後移動。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A value of 0 has no effect.</source>
          <target state="translated">值為 0 沒有任何作用。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">實際移動的單位數，這可以小於要求如果移動端點會碰到的開頭或結尾的文件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Removes a highlighted section of text, corresponding to the caller's <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">移除反白顯示的一段文字，對應至呼叫端的<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>端點，從支援多次的文字容器中反白顯示的文字集合斷續選取。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">移除反白顯示的區域，將文字插入點。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">提供變質文字範圍，將會移動插入點。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>If text provider does not support multiple, disjoint selections (for example, &lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt; must have a value of <bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">如果文字提供者不支援多次斷續選取 (比方說，&lt;xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;的值必須<bpt id="p1">&lt;xref uid="langword_csharp_Multiple" name="Multiple" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>)。&lt;/xref:System.Windows.Automation.TextPattern.SupportedTextSelection*&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">導致文字控制項垂直捲動，直到看到檢視區中的文字範圍為止。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>ScrollIntoView respects both hidden and visible text.</source>
          <target state="translated">ScrollIntoView 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">如果隱藏的文字範圍，文字控制項將捲動隱藏的文字檢視區中有一個錨點。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the text control should be scrolled so the text range is flush with the top of the viewport; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it should be flush with the bottom of the viewport.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果應該捲動文字控制項，讓文字範圍與檢視區; 頂端齊<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果應該與檢視區的底端齊。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Highlights text in the text control corresponding to the text range <bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> endpoints.</source>
          <target state="translated">對應至文字範圍的文字控制項中的文字會反白顯示<bpt id="p1">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Windows.Automation.Text.TextPatternRangeEndpoint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>端點。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>If a degenerate text range is provided, the text insertion point will move to the &lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt; endpoint of the text range.</source>
          <target state="translated">如果提供變質文字範圍，文字插入點會移至&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;個文字範圍端點。&lt;/xref:System.Windows.Automation.Text.TextPatternRangeEndpoint&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">文字控制項不支援文字選取範圍時，就會發生。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>