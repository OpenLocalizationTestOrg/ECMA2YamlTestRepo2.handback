<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e25f02a9132243b302856fca33cad93657b70d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.CompilerServices.RuntimeWrappedException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b279df7dd6012d8c128d69baec2edb69f498c11f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91f9f2b4bef3eb1bc1fe1040d3214bc5d3eccf9a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps an exception that does not derive from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">包裝不是衍生自&lt;xref:System.Exception&gt;類別&lt;/xref:System.Exception&gt;的例外狀況</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Some languages, such as C++, allow you to throw exceptions of any managed type.</source>
          <target state="translated">某些語言，例如 c + +，可讓您擲回例外任何的狀況 managed 型別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">Microsoft C# 及 Visual Basic 等其他語言需要每個擲回的例外狀況衍生自&lt;xref:System.Exception&gt;類別。&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from &lt;xref:System.Exception&gt; in a RuntimeWrappedException object.</source>
          <target state="translated">若要維持語言之間的相容性，common language runtime (CLR) 會包裝物件不是衍生自&lt;xref:System.Exception&gt;RuntimeWrappedException 物件中。&lt;/xref:System.Exception&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</source>
          <target state="translated">您可以使用&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;類別，以指定例外狀況應該組件出現在 catch 區塊和例外狀況篩選條件內已包裝。&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</source>
          <target state="translated">許多語言編譯器，包括 Microsoft C# 和 Visual Basic 編譯器，套用這個屬性預設會將指定的換行行為。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that the runtime still wraps exceptions even if you use the &lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt; class to specify that you do not want them wrapped.</source>
          <target state="translated">請注意，即使您使用的執行階段仍會例外狀況&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;類別，以指定您不想加以包裝。&lt;/xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this case, exceptions are unwrapped only inside catch blocks or exception filters.</source>
          <target state="translated">在此情況下，例外狀況是在 catch 區塊或例外狀況篩選條件內未包裝。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object with information about the exception.</source>
          <target state="translated">設定<bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>例外狀況的相關資訊的物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The GetObjectData method sets a &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; object with all the exception object data targeted for serialization.</source>
          <target state="translated">GetObjectData 方法會設定&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;物件序列化的所有例外狀況物件資料。&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>During deserialization, the exception is reconstituted from the <ph id="ph1">`SerializationInfo`</ph> transmitted over the stream.</source>
          <target state="translated">還原序列化期間的例外狀況重新組成從<ph id="ph1">`SerializationInfo`</ph>資料流上傳輸。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>保存所擲回的例外狀況的相關序列化的物件資料的物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object that contains contextual information about the source or destination.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件，其中包含關於來源或目的端內容資訊。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the object that was wrapped by the <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">取得由已包裝的物件<bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The WrappedException property gets an object that was thrown as an exception from a language that allows exceptions that do not derive from the &lt;xref:System.Exception&gt; class.</source>
          <target state="translated">WrappedException 屬性取得已擲回做為從一種語言，可讓不是衍生自&lt;xref:System.Exception&gt;類別&lt;/xref:System.Exception&gt;的例外狀況的例外狀況物件</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The object that was wrapped by the <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">已包裝的物件<bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>