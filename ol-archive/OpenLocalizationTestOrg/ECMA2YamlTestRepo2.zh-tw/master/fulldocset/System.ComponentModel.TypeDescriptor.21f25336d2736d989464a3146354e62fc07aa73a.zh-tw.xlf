<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13475c0aad85f66bcdb930cee398db3e341a8c57</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.TypeDescriptor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6400d656ae05705c1a629d07ea96fb626032236f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c59c9cee7078fa469e101827e85f4d93bf6101a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about the characteristics for a component, such as its attributes, properties, and events.</source>
          <target state="translated">如需元件，例如其屬性、 屬性和事件提供特性的相關資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the &lt;xref:System.Reflection?displayProperty=fullName&gt; namespace, and the TypeDescriptor class.</source>
          <target state="translated">.NET Framework 提供兩種方式可存取的型別上的中繼資料︰ 反映 API 所提供的&lt;xref:System.Reflection?displayProperty=fullName&gt;命名空間，而 TypeDescriptor 類別。&lt;/xref:System.Reflection?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reflection is a general mechanism available to all types because its foundation is established in the &lt;xref:System.Object.GetType%2A&gt; method of the root &lt;xref:System.Object&gt; class.</source>
          <target state="translated">Reflection 相當適用於所有類型的一般機制，因為其建立在&lt;xref:System.Object.GetType%2A&gt;方法的根&lt;xref:System.Object&gt;類別。&lt;/xref:System.Object&gt; &lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</source>
          <target state="translated">無法修改目標型別進行編譯之後，是無法延伸，它會傳回類型的資訊。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>反映<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In contrast, TypeDescriptor is an extensible inspection mechanism for components: those classes that implement the &lt;xref:System.ComponentModel.IComponent&gt; interface.</source>
          <target state="translated">相反地，TypeDescriptor 是元件的可延伸檢查機制︰ 那些類別可實作&lt;xref:System.ComponentModel.IComponent&gt;介面。&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Unlike reflection, it does not inspect for methods.</source>
          <target state="translated">不同於反映，它不會檢查的方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>TypeDescriptor can be dynamically extended by several services available through the target component's &lt;xref:System.ComponentModel.Component.Site%2A&gt;.</source>
          <target state="translated">TypeDescriptor 可以透過數個服務可透過目標元件&lt;xref:System.ComponentModel.Component.Site%2A&gt;.&lt;/xref:System.ComponentModel.Component.Site%2A&gt;動態擴充</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table shows these services.</source>
          <target state="translated">下表顯示這些服務。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>|Service name|Description|   |------------------|-----------------|   |&lt;xref:System.ComponentModel.IExtenderProvider&gt;|Enables another class, such as &lt;xref:System.Windows.Forms.ToolTip&gt;, to provide extra properties to a component.|   |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|Enables another object to modify the standard metadata that is exposed by a component.|   |&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;|Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of TypeDescriptor.|       The extensibility provided by TypeDescriptor allows the design-time representation of a component to differ from its actual run-time representation, which makes TypeDescriptor useful for building design-time infrastructure.</source>
          <target state="translated">|服務名稱 |描述 |  |------------------|-----------------|  |&lt;xref:System.ComponentModel.IExtenderProvider&gt;|可以讓另一個類別，例如&lt;xref:System.Windows.Forms.ToolTip&gt;，以提供給元件的額外屬性。 |  |&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;|可讓另一個物件以修改元件所公開的標準中繼資料。 |  |&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;|可讓類別完全以動態的方式指定自己的中繼資料，取代 TypeDescriptor 的標準檢查機制。 |      TypeDescriptor 所提供的擴充可讓與它的實際執行階段，表示，可用於建立設計階段基礎結構的 TypeDescriptor 的不同元件的設計階段表示法。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt; &lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.Windows.Forms.ToolTip&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All the methods in TypeDescriptor are <ph id="ph1">`static`</ph>.</source>
          <target state="translated">TypeDescriptor 的所有方法都是<ph id="ph1">`static`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You cannot create an instance of this class, and this class cannot be inherited.</source>
          <target state="translated">您無法建立這個類別的執行個體，這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can set property and event values two different ways: specify them in the component class or change them at design time.</source>
          <target state="translated">您可以設定屬性和事件值兩種不同方式︰ 在元件類別中指定或變更它們在設計階段。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Because you can set these values two ways, the overloaded methods of TypeDescriptor take two different types of parameters: a class type or an object instance.</source>
          <target state="translated">因為您可以設定這些值兩種方式，TypeDescriptor 的多載的方法會採用兩個不同類型的參數︰ 類別類型或物件執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you want to access TypeDescriptor information and you have an instance of the object, use the method that calls for a component.</source>
          <target state="translated">您想要存取 TypeDescriptor 資訊，而且您具有物件的執行個體，請呼叫元件方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Use the method that calls for the class type only when you do not have an instance of the object.</source>
          <target state="translated">使用您不需要物件的執行個體時，才會呼叫類別類型的方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by TypeDescriptor for speed.</source>
          <target state="translated">屬性和事件會快取 TypeDescriptor 的速度。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常，它們都維持不變的物件存留期。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this is the case, then the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method must be called to update the cache.</source>
          <target state="translated">如果這種情況，則&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;必須呼叫方法來更新快取。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds class-level attributes to the target component instance.</source>
          <target state="translated">將類別層級屬性加入目標元件執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The AddAttributes method adds class-level attributes to the specified instance of a component.</source>
          <target state="translated">AddAttributes 方法會將類別層級屬性加入至元件的指定執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因為這是常見的需求，應用程式使用的<ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>Windows Form 設計工具] 和 [屬性] 視窗中，這個方法會提供捷徑藉由建立合併提供的屬性與已經存在於類別的屬性類型描述提供者。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">傳回值是用來將屬性加入類型描述提供者。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method when the added attributes are no longer needed.</source>
          <target state="translated">此提供者可以稍後傳遞到&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法時不再需要新增的屬性。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;物件&lt;/xref:System.Attribute&gt;陣列，若要加入至元件的類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was used to add the specified attributes.</source>
          <target state="translated">新建立<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用來加入指定的屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One or both of the parameters is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Adds class-level attributes to the target component type.</source>
          <target state="translated">將類別層級屬性加入目標元件類型。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The AddAttributes method adds class-level attributes to the specified type of a component.</source>
          <target state="translated">AddAttributes 方法會將類別層級屬性加入至指定類型的元件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Because this is a common requirement of applications using the <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph> Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</source>
          <target state="translated">因為這是常見的需求，應用程式使用的<ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>Windows Form 設計工具] 和 [屬性] 視窗中，這個方法會提供捷徑藉由建立合併提供的屬性與已經存在於類別的屬性類型描述提供者。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The return value is the type description provider that was used to add the attributes.</source>
          <target state="translated">傳回值是用來將屬性加入類型描述提供者。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This provider can later be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method when the added attributes are no longer needed.</source>
          <target state="translated">此提供者可以稍後傳遞到&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法時不再需要新增的屬性。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Attribute&gt; objects to add to the component's class.</source>
          <target state="translated">&lt;xref:System.Attribute&gt;物件&lt;/xref:System.Attribute&gt;陣列，若要加入至元件的類別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was used to add the specified attributes.</source>
          <target state="translated">新建立<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用來加入指定的屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>One or both of the parameters is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds an editor table for the given editor base type.</source>
          <target state="translated">加入編輯器資料表指定的編輯器的基底類型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The AddEditorTable method adds an editor table for the given editor base type.</source>
          <target state="translated">AddEditorTable 方法加入編輯器資料表指定的編輯器的基底類型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Typically, editors are specified as metadata on a component.</source>
          <target state="translated">一般而言，編輯器會指定為在元件上的中繼資料。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>However, if no metadata for a requested editor base type can be found on the component, the associated &lt;xref:System.ComponentModel.TypeDescriptor&gt; will search an editor table for the editor type, if one can be found.</source>
          <target state="translated">不過，如果沒有中繼資料要求的編輯器基底類型就可以找到上相關聯的元件&lt;xref:System.ComponentModel.TypeDescriptor&gt;將資料表中搜尋編輯器的編輯器類型，如果可以找到其中一個。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</source>
          <target state="translated">一旦加入編輯器資料表類型描述元，它無法移除，並擁有的型別描述項。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The type descriptor may freely make modifications to this table.</source>
          <target state="translated">類型描述元可以自由修改這個資料表。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The format for an editor table uses data types as keys and editors as values.</source>
          <target state="translated">編輯器資料表的格式會使用資料類型做為索引鍵和編輯器做為值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value portion of an entry in the table represents an editor instance.</source>
          <target state="translated">項目資料表中的值部分表示編輯器執行個體。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It can have one of three values.</source>
          <target state="translated">它可以有三個值之一。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</source>
          <target state="translated">如果它包含的字串，這是完整限定的名稱的型別，然後載入型別物件假設的類型描述元。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If it contains a type, an instance of this type will be created to obtain an editor.</source>
          <target state="translated">如果它包含的類型，將建立此類型的執行個體取得編輯器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Finally, the value portion may contain an actual editor instance.</source>
          <target state="translated">最後，值部分可能會包含實際編輯器執行個體。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</source>
          <target state="translated">如果類型描述元解析編輯器執行個體，它會儲存在資料表供未來使用的執行個體。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The editor base type to add the editor table for.</source>
          <target state="translated">若要加入編輯器資料表中的編輯器基底類型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If a table already exists for this type, this method will do nothing.</source>
          <target state="translated">如果資料表已經存在此類型，這個方法會執行任何動作。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">加入元件的單一執行個體的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The AddProvider method adds a type description provider that supplies type information for a single instance of a component.</source>
          <target state="translated">AddProvider 方法加入類型描述提供者提供輸入元件的單一執行個體的資訊。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If a provider is added by this method, the provider's &lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt; method will not be called because the instance already exists.</source>
          <target state="translated">如果提供者會使用這個方法，提供者的加入&lt;xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;將不會呼叫方法，因為執行個體已經存在。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</source>
          <target state="translated">這個方法不會維護硬式元件，參考，所以它不會阻止元件正在完成。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以加入多個相同的型別或物件的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果發生這種情況，將會以獨佔方式使用的第一個類型描述提供者遇到提供型別資訊。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Since type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">由於型別資訊提供者會儲存在堆疊中，加入的最後一個提供者將會第一個查詢。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行為可讓 AddProvider 和&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;要使用推入和彈出方法類型描述提供者所需的特定案例。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt; method on the <ph id="ph1">`instance`</ph> parameter.</source>
          <target state="translated">如果成功，這個方法會呼叫&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;方法<ph id="ph1">`instance`</ph>參數。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 兩個版本，這個方法會產生不同的領域的結果。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;採用方法&lt;xref:System.Object&gt;參數會影響指定之元件的單一執行個體。&lt;/xref:System.Object&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.</source>
          <target state="translated">相反地，其他多載，其可接受&lt;xref:System.Type&gt;參數，會影響該類型所描述之元件的所有執行個體。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法，如果您需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">加入元件類別的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The AddProvider method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</source>
          <target state="translated">AddProvider 方法加入類型描述提供者指定的類別、 衍生的類別，以及這些類型的所有執行個體的提供類型資訊。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`type`</ph> parameter can be any type, including an interface.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`type`</ph>參數可以是任何類型，包括介面。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, to provide custom type and instance information for all components, you would specify <ph id="ph1">`typeof(IComponent)`</ph>.</source>
          <target state="translated">例如，若要提供自訂型別和所有元件的執行個體資訊，您會指定<ph id="ph1">`typeof(IComponent)`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Passing <ph id="ph1">`typeof(object)`</ph> will call the provider to supply type information for all types.</source>
          <target state="translated">傳遞<ph id="ph1">`typeof(object)`</ph>會呼叫提供者提供的所有類型的類型資訊。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</source>
          <target state="translated">這個方法不會維護硬式參考任何物件，所以它無法防止進行最終處理物件。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It is possible to add multiple type description providers for the same type or object.</source>
          <target state="translated">它是可以加入多個相同的型別或物件的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If this occurs, the first type description provider encountered that provides type information will be used exclusively.</source>
          <target state="translated">如果發生這種情況，將會以獨佔方式使用的第一個類型描述提供者遇到提供型別資訊。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because type information providers are stored in a stack, the last provider added will be the first one queried.</source>
          <target state="translated">因為型別資訊提供者會儲存在堆疊中，加入的最後一個提供者會是第一個查詢。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This behavior enables the AddProvider and &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt; methods to be used to push and pop type description providers as required for particular scenarios.</source>
          <target state="translated">此行為可讓 AddProvider 和&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;要使用推入和彈出方法類型描述提供者所需的特定案例。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If successful, this method calls the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt; method on the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">如果成功，這個方法會呼叫&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;方法<ph id="ph1">`type`</ph>參數。&lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The two versions of this method produce results with different scopes.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 兩個版本，這個方法會產生不同的領域的結果。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; method that takes an &lt;xref:System.Object&gt; parameter affects only that single instance of the component specified.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;採用方法&lt;xref:System.Object&gt;參數會影響指定之元件的單一執行個體。&lt;/xref:System.Object&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In contrast, the other overload, which takes a &lt;xref:System.Type&gt; parameter, affects all instances of the component described by that type.</source>
          <target state="translated">相反地，其他多載，其可接受&lt;xref:System.Type&gt;參數，會影響該類型所描述之元件的所有執行個體。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法，如果您需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a single instance of a component.</source>
          <target state="translated">加入元件的單一執行個體的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">從部分信任程式碼可以呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定義，呼叫端可以註冊指定的執行個體的提供者，如果其類型也受到部分信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法，如果您不需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Adds a type description provider for a component class.</source>
          <target state="translated">加入元件類別的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">從部分信任程式碼可以呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定義，呼叫端可以註冊為指定的型別提供者，如果也受到部分信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法，如果您不需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets the provider for the Component Object Model (COM) type information for the target component.</source>
          <target state="translated">取得或設定目標元件的元件物件模型 (COM) 類型資訊的提供者。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The ComNativeDescriptorHandler property and the &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface are obsolete.</source>
          <target state="translated">ComNativeDescriptorHandler 屬性和&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;介面已經過時。&lt;/xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt; property.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;屬性。&lt;/xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IComNativeDescriptorHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance representing the COM type information provider.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComNativeDescriptorHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>代表 COM 類型資訊提供者的執行個體。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the type of the Component Object Model (COM) object represented by the target component.</source>
          <target state="translated">取得目標元件表示之元件物件模型 (COM) 物件的類型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The ComObjectType property returns a type that can be passed to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method to define a type description provider for COM types.</source>
          <target state="translated">ComObjectType 屬性會傳回可傳遞至型別&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法，以定義 COM 類型的類型描述提供者。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ComObjectType property and other members in this class replace the functionality in the obsolete &lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt; interface.</source>
          <target state="translated">ComObjectType 屬性與這個類別中的其他成員取代過時的功能&lt;xref:System.ComponentModel.IComNativeDescriptorHandler&gt;介面。&lt;/xref:System.ComponentModel.IComNativeDescriptorHandler&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To implement a mapping layer between a COM object and &lt;xref:System.ComponentModel.TypeDescriptor&gt;, add a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; to handle type ComObjectType.</source>
          <target state="translated">若要實作 COM 物件之間的對應層和&lt;xref:System.ComponentModel.TypeDescriptor&gt;，新增&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;處理類型 ComObjectType。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the COM object represented by this component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for non-COM objects.</source>
          <target state="translated">&lt;xref:System.Type&gt;此元件所代表之 COM 物件或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>非 COM 物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Creates a primary-secondary association between two objects.</source>
          <target state="translated">建立兩個物件之間的主要-次要關聯。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The CreateAssociation method creates an association between a primary and a secondary object.</source>
          <target state="translated">CreateAssociation 方法會建立主要和次要物件之間的關聯。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</source>
          <target state="translated">一旦建立關聯時，設計工具或其他篩選的機制就可以新增到主要物件的屬性集路由傳送至其中一個物件的屬性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When a property invocation is made against the primary object, the &lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt; method will be called to resolve the actual object instance that is related to its type parameter.</source>
          <target state="translated">當屬性的引動過程會對主要物件，&lt;xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;將呼叫方法，來解決與型別參數的實際物件執行個體。&lt;/xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;是用來維護主要和次要物件之間的關聯; 因此，這個方法不會阻止任一個物件正在完成並回收進行回收。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt;.</source>
          <target state="translated">主要&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The secondary &lt;xref:System.Object&gt;.</source>
          <target state="translated">次要&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;code&gt;secondary&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph>等於<ph id="ph2">&lt;code&gt;secondary&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Creates an instance of the designer associated with the specified component and of the specified type of designer.</source>
          <target state="translated">建立與指定元件關聯的設計工具和設計工具的指定型別的執行個體。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>If this method cannot find a valid &lt;xref:System.ComponentModel.DesignerAttribute&gt;, it searches up the class hierarchy for a designer.</source>
          <target state="translated">如果此方法找不到有效&lt;xref:System.ComponentModel.DesignerAttribute&gt;，它會搜尋類別階層架構設計工具。&lt;/xref:System.ComponentModel.DesignerAttribute&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If it cannot find a designer in the class hierarchy, it returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果找不到設計工具類別階層架構中，它會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies the component to associate with the designer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，指定要與設計工具產生關聯的元件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the type of designer to create.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示設計工具來建立的型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is an instance of the designer for the component, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no designer can be found.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>也就是元件的設計工具的執行個體或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>如果找不到沒有設計工具。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立新的事件描述元，等同於現有的事件描述元傳遞現有時<bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The type of the component for which to create the new event.</source>
          <target state="translated">若要建立新事件的元件類型。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The existing event information.</source>
          <target state="translated">現有的事件資訊。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The new attributes.</source>
          <target state="translated">新的屬性。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has merged the specified metadata attributes with the existing metadata attributes.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其合併了指定的中繼資料屬性與現有的中繼資料屬性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</source>
          <target state="translated">建立新的事件描述元，藉由以動態方式產生描述項資訊從指定的事件型別上等同於現有的事件描述元。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The type of the component the event lives on.</source>
          <target state="translated">元件事件型別所在。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The name of the event.</source>
          <target state="translated">事件的名稱。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The type of the delegate that handles the event.</source>
          <target state="translated">處理事件的委派類型。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The attributes for this event.</source>
          <target state="translated">此事件的屬性。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is bound to a type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>繫結的型別。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Creates an object that can substitute for another data type.</source>
          <target state="translated">建立可以代替另一種資料類型的物件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The CreateInstance method will search for a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt; that is associated with the specified <ph id="ph1">`objectType`</ph> data type.</source>
          <target state="translated">CreateInstance 方法會搜尋&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;聯指定<ph id="ph1">`objectType`</ph>資料型別。&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method first tries to obtain a type description provider from the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">這個方法會先嘗試取得的類型描述提供者，從<ph id="ph1">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;).</source>
          <target state="translated">如果失敗，它會搜尋它自己的內部資料表的提供者 (透過先前呼叫所建立這些項目&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;)。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If it finds a provider, this method will delegate the creation call to that object.</source>
          <target state="translated">如果它找到的提供者，這個方法會委派給該物件將建立呼叫。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The service provider that provides a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> service.</source>
          <target state="translated">提供的服務提供者<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>服務。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of object to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;要建立的物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An optional array of parameter types to be passed to the object's constructor.</source>
          <target state="translated">選擇性的參數類型傳遞給物件的建構函式的陣列。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an array of zero length.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或長度為零的陣列。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An optional array of parameter values to pass to the object's constructor.</source>
          <target state="translated">選擇性的要傳遞至物件的建構函式的參數值的陣列。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If not <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the number of elements must be the same as <ph id="ph1">`argTypes`</ph>.</source>
          <target state="translated">如果沒有<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的數字的項目必須是相同<ph id="ph1">`argTypes`</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>An instance of the substitute data type if an associated <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is found; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果相關聯的替代資料類型的執行個體<bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>找到，否則<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when <ph id="ph3">&lt;code&gt;argTypes&lt;/code&gt;</ph> is not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;objectType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> when <ph id="ph3">&lt;code&gt;argTypes&lt;/code&gt;</ph> is not <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;argTypes&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph> have different number of elements.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;argTypes&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;args&lt;/code&gt;</ph>有不同數目的項目。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a new property descriptor from an existing property descriptor, using the specified existing <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and attribute array.</source>
          <target state="translated">建立新的屬性描述元從現有的屬性描述元，使用指定的現有<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和屬性陣列。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the component that the property is a member of.</source>
          <target state="translated">&lt;xref:System.Type&gt;屬性所屬的元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The existing property descriptor.</source>
          <target state="translated">現有的屬性描述項。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The new attributes for this property.</source>
          <target state="translated">這個屬性的新屬性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有與現有的中繼資料屬性合併指定的中繼資料屬性。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</source>
          <target state="translated">建立並以動態方式將屬性描述項繫結至類型，使用指定的屬性名稱、 類型和屬性陣列。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the component that the property is a member of.</source>
          <target state="translated">&lt;xref:System.Type&gt;屬性所屬的元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">屬性的名稱。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the property.</source>
          <target state="translated">&lt;xref:System.Type&gt;的屬性。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The new attributes for this property.</source>
          <target state="translated">這個屬性的新屬性。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的繫結至指定的型別，且具有與現有的中繼資料屬性合併指定的中繼資料屬性。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Returns an instance of the type associated with the specified primary object.</source>
          <target state="translated">傳回與指定的主要物件相關聯之類型的執行個體。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If a previous association has been made for the <ph id="ph1">`type`</ph> parameter using the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method, then the GetAssociation method returns the correct secondary object to invoke for the requested type.</source>
          <target state="translated">如果先前的關聯對<ph id="ph1">`type`</ph>參數使用&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法，則 GetAssociation 方法會傳回要為要求的型別叫用正確的次要物件。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Otherwise, GetAssociation searches for a compatible designer for <ph id="ph1">`type`</ph> and returns the designer if one is found.</source>
          <target state="translated">否則，GetAssociation 搜尋相容的設計工具的<ph id="ph1">`type`</ph>，如果找到就傳回設計工具。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This method never returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">這個方法不會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;是用來維護主要和次要物件之間的關聯; 因此，這個方法不會阻止主要或次要物件正在完成並回收進行回收。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The primary object of the association.</source>
          <target state="translated">關聯的主要物件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">primary</ph><ept id="p1">&lt;/code&gt;</ept> if no specified association exists.</source>
          <target state="translated">如果，則關聯存在; 已經與主要物件相關聯的次要類型執行個體否則， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">primary</ph> <ept id="p1">&lt;/code&gt;</ept>如果沒有指定關聯存在。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Returns the collection of attributes for the specified component.</source>
          <target state="translated">傳回指定元件的屬性集合。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original component's source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.</source>
          <target state="translated">所傳回的屬性&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;方法可能會動態修改擴充性提供者所列出的原始元件的來源 (&lt;xref:System.ComponentModel.IExtenderProvider&gt;)，篩選服務 (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;)，和屬性篩選。&lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">當您定義自訂屬性與&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;設<ph id="ph1">`true`</ph>，您必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性，使它成為唯一。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果您的屬性的所有執行個體是唯一的覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;來傳回屬性的物件識別。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有某些屬性的執行個體是唯一的傳回值，以從&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，可在這些情況下傳回是否相等。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，某些屬性具有建構函式參數，可做為唯一索引鍵。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">對於這些屬性會傳回從建構函式參數的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的預設實作&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;傳回型別身分識別的值為何&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">為了傳回多個執行個體&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性從&lt;xref:System.ComponentModel.AttributeCollection&gt;，您的屬性必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">您要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the attributes for the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含元件的屬性。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">component</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">component</ph> <ept id="p1">&lt;/code&gt;</ept>是<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，這個方法會傳回空集合。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Returns a collection of attributes for the specified type of component.</source>
          <target state="translated">傳回元件指定類型的屬性集合。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>For attributes with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, the attribute collection removes duplicate instances.</source>
          <target state="translated">有屬性&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;設<ph id="ph1">`true`</ph>，屬性集合中移除重複的執行個體。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>These are instances in which the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property returns equal values.</source>
          <target state="translated">這些是在其中執行個體&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性會傳回相同的值。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">當您定義自訂屬性與&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;設<ph id="ph1">`true`</ph>，您必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性，使它成為唯一。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果您的屬性的所有執行個體是唯一的覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;來傳回屬性的物件識別。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有某些屬性的執行個體是唯一的傳回值，以從&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，可在這些情況下傳回是否相等。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，某些屬性具有建構函式參數，可做為唯一索引鍵。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">對於這些屬性會傳回從建構函式參數的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的預設實作&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;傳回型別身分識別的值為何&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">為了傳回多個執行個體&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性從&lt;xref:System.ComponentModel.AttributeCollection&gt;，您的屬性必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the attributes for the type of the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>之屬性的元件的類型。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If the component is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果元件是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，這個方法會傳回空集合。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</source>
          <target state="translated">傳回指定的元件和布林值，指出已建立自訂類型描述元的屬性集合。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The attributes returned by the &lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt; method may be dynamically modified from the original components source listing by extender providers (&lt;xref:System.ComponentModel.IExtenderProvider&gt;), filter services (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;), and attribute filters.</source>
          <target state="translated">所傳回的屬性&lt;xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;方法可能會動態修改原始來源元件的擴充性提供者清單 (&lt;xref:System.ComponentModel.IExtenderProvider&gt;)，篩選服務 (&lt;xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt;)，和屬性篩選。&lt;/xref:System.ComponentModel.Design.ITypeDescriptorFilterService&gt; &lt;/xref:System.ComponentModel.IExtenderProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>When you define a custom attribute with &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; set to <ph id="ph1">`true`</ph>, you must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property to make it unique.</source>
          <target state="translated">當您定義自訂屬性與&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;設<ph id="ph1">`true`</ph>，您必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性，使它成為唯一。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If all instances of your attribute are unique, override &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; to return the object identity of your attribute.</source>
          <target state="translated">如果您的屬性的所有執行個體是唯一的覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;來傳回屬性的物件識別。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If only some instances of your attribute are unique, return a value from &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; that would return equality in those cases.</source>
          <target state="translated">如果只有某些屬性的執行個體是唯一的傳回值，以從&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;，可在這些情況下傳回是否相等。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>For example, some attributes have a constructor parameter that acts as a unique key.</source>
          <target state="translated">例如，某些屬性具有建構函式參數，可做為唯一索引鍵。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For these attributes, return the value of the constructor parameter from the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">對於這些屬性會傳回從建構函式參數的值&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The default implementation of &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; returns the type identity regardless of the value of the &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的預設實作&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;傳回型別身分識別的值為何&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; &lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>In order to return multiple instances of an &lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt; attribute from the &lt;xref:System.ComponentModel.AttributeCollection&gt;, your attribute must override the &lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">為了傳回多個執行個體&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;屬性從&lt;xref:System.ComponentModel.AttributeCollection&gt;，您的屬性必須覆寫&lt;xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt;屬性。&lt;/xref:System.Attribute.TypeId%2A?displayProperty=fullName&gt; &lt;/xref:System.ComponentModel.AttributeCollection&gt; &lt;/xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The component for which you want to get attributes.</source>
          <target state="translated">您要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use a baseline set of attributes from the custom type descriptor if <ph id="ph1">`component`</ph> is of type <bpt id="p2">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要使用一組基準屬性從自訂類型描述元，如果<ph id="ph1">`component`</ph>的型別<bpt id="p2">&lt;xref href="System.ComponentModel.ICustomTypeDescriptor"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the attributes for the component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>之屬性的元件。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>If the component is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, this method returns an empty collection.</source>
          <target state="translated">如果元件是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，這個方法會傳回空集合。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified component using the default type descriptor.</source>
          <target state="translated">傳回使用預設類型描述元之指定元件類別的名稱。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id="ph1">`component`</ph> parameter type.</source>
          <target state="translated">一般而言，這個方法會傳回完整&lt;xref:System.Type&gt;名稱<ph id="ph1">`component`</ph>參數型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，按鈕的類別名稱是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>實作&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;，它可以傳回的替代名稱。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">這個方法相當於多載&lt;xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;具有第二個參數的方法<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;您想要的類別名稱。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定的元件類別的名稱。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified type.</source>
          <target state="translated">傳回指定類型的類別名稱。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This method uses the cached custom type descriptor for the specified type to discover the associated class name.</source>
          <target state="translated">這個方法會使用快取的自訂類型描述元指定之類型探索相關聯的類別名稱。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component type.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定的元件類型的類別名稱。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;componentType&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Returns the name of the class for the specified component using a custom type descriptor.</source>
          <target state="translated">傳回使用自訂類型描述元之指定元件類別的名稱。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the full &lt;xref:System.Type&gt; name for the <ph id="ph1">`component`</ph> parameter type.</source>
          <target state="translated">一般而言，這個方法會傳回完整&lt;xref:System.Type&gt;名稱<ph id="ph1">`component`</ph>參數型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，按鈕的類別名稱是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter implements &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;, it can return an alternate name.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>參數實作&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;，它可以傳回的替代名稱。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;您想要的類別名稱。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the class for the specified component.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定的元件類別的名稱。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified component using the default type descriptor.</source>
          <target state="translated">傳回使用預設類型描述元之指定元件的名稱。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">一般而言，這個方法傳回的元件，網站的名稱，如果有的話。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，按鈕的類別名稱是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">這個方法相當於多載&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;具有第二個參數的方法<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">這個方法在執行階段用於擷取元件的執行個體的名稱。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;您想要的類別名稱。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no component name.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含指定的元件名稱或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果沒有元件名稱。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified component using a custom type descriptor.</source>
          <target state="translated">傳回使用自訂類型描述元之指定元件的名稱。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This method is used at design time to retrieve the name of an instance of a component.</source>
          <target state="translated">這個方法在執行階段用於擷取元件的執行個體的名稱。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Typically, this method returns the name for the site of the component, if one exists.</source>
          <target state="translated">一般而言，這個方法傳回的元件，網站的名稱，如果有的話。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>For example, the class name for a button is "System.Windows.Forms.Button".</source>
          <target state="translated">例如，按鈕的類別名稱是"System.Windows.Forms.Button"。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>If the component implements the &lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt; interface, it can return an alternate name.</source>
          <target state="translated">如果元件實作&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;介面，它可以傳回的替代名稱。&lt;/xref:System.ComponentModel.ICustomTypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which you want the class name.</source>
          <target state="translated">&lt;xref:System.Object&gt;您想要的類別名稱。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The name of the class for the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no component name.</source>
          <target state="translated">指定的元件類別的名稱或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果沒有元件名稱。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the type of the specified component.</source>
          <target state="translated">傳回指定元件類型的類型轉換子。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This method locates an appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">這個方法依尋找&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;找出適當的型別轉換子</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，直到找到基本型別周遊類別的基底類別階層架構。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">這個方法相當於多載&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;具有第二個參數的方法<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A component to get the converter for.</source>
          <target state="translated">要取得的轉換子的元件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定元件。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the specified type.</source>
          <target state="translated">傳回指定型別的型別轉換子。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This method looks for the appropriate type converter by looking for a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">這個方法會尋找適當的類型轉換器&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;尋找</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，直到找到基本型別周遊類別的基底類別階層架構。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定的類型。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Returns a type converter for the type of the specified component with a custom type descriptor.</source>
          <target state="translated">傳回具有自訂類型描述元之指定元件類型的類型轉換子。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>This method looks for the appropriate type converter by trying to find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.</source>
          <target state="translated">這個方法會嘗試尋找&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;.&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;適當的型別轉換子</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>If it cannot find a &lt;xref:System.ComponentModel.TypeConverterAttribute&gt;, it traverses the base class hierarchy of the class until it finds a primitive type.</source>
          <target state="translated">如果找不到&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;，直到找到基本型別周遊類別的基底類別階層架構。&lt;/xref:System.ComponentModel.TypeConverterAttribute&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A component to get the converter for.</source>
          <target state="translated">要取得的轉換子的元件。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>指定元件。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Returns the default event for the specified component.</source>
          <target state="translated">傳回指定元件的預設事件。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the overloaded &lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt; method with a second parameter of <ph id="ph1">`false`</ph>.</source>
          <target state="translated">這個方法相當於多載&lt;xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;具有第二個參數的方法<ph id="ph1">`false`</ph>。&lt;/xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The component to get the event for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>和預設事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何事件。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Returns the default event for the specified type of component.</source>
          <target state="translated">傳回指定元件類型的預設事件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>和預設事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何事件。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Returns the default event for a component with a custom type descriptor.</source>
          <target state="translated">傳回具有自訂類型描述元之元件的預設事件。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The component to get the event for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default event, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>和預設事件，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何事件。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified component.</source>
          <target state="translated">傳回指定元件的預設屬性。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>參數是<ph id="ph2">`null`</ph>，這個方法會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The component to get the default property for.</source>
          <target state="translated">要取得的預設屬性的元件。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的預設屬性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何屬性。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified type of component.</source>
          <target state="translated">傳回指定元件類型的預設屬性。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>參數是<ph id="ph2">`null`</ph>，這個方法會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the class to get the property for.</source>
          <target state="translated">&lt;xref:System.Type&gt;代表要取得屬性 for...in 類別&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的預設屬性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何屬性。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Returns the default property for the specified component with a custom type descriptor.</source>
          <target state="translated">傳回具有自訂類型描述元之指定元件的預設屬性。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>參數是<ph id="ph2">`null`</ph>，這個方法會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The component to get the default property for.</source>
          <target state="translated">要取得的預設屬性的元件。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the default property, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there are no properties.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的預設屬性，或<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是否有任何屬性。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Gets an editor with the specified base type for the specified component.</source>
          <target state="translated">取得具有指定的基底類型指定的元件編輯器。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example, &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">型別<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但您也可以使用其他類型 (例如，&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">您可以定義多個屬性編輯器。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">您可以使用這個方法來選取您想要使用的編輯器。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The component to get the editor for.</source>
          <target state="translated">要取得編輯器的元件。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示您想要尋找之編輯器的基底型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An instance of the editor that can be cast to the specified editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以轉換成指定的編輯器類型，在編輯器的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到要求的型別的編輯器。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Returns an editor with the specified base type for the specified type.</source>
          <target state="translated">傳回具有指定的基底類型指定型別的編輯器。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">型別<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但您也可以使用其他類型 (例如&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a type.</source>
          <target state="translated">您可以定義多個型別的編輯器。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>You use this method to select the one you want to use.</source>
          <target state="translated">您可以使用這個方法來選取您想要使用的一個。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you are trying to find.</source>
          <target state="translated">A &lt;xref:System.Type&gt;，代表您要尋找之編輯器的基底類型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>An instance of the editor object that can be cast to the given base type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以轉換成指定的基底類型的編輯器物件的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到要求的型別的編輯器。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Returns an editor with the specified base type and with a custom type descriptor for the specified component.</source>
          <target state="translated">傳回指定的基底類型與指定元件的自訂類型描述元的編輯器。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`editorBaseType`</ph> is usually &lt;xref:System.Drawing.Design.UITypeEditor&gt;, but you can also use other types (for example &lt;xref:System.ComponentModel.ComponentEditor&gt; and &lt;xref:System.ComponentModel.InstanceCreationEditor&gt;).</source>
          <target state="translated">型別<ph id="ph1">`editorBaseType`</ph>通常是&lt;xref:System.Drawing.Design.UITypeEditor&gt;，但您也可以使用其他類型 (例如&lt;xref:System.ComponentModel.ComponentEditor&gt;和&lt;xref:System.ComponentModel.InstanceCreationEditor&gt;)。&lt;/xref:System.ComponentModel.InstanceCreationEditor&gt; &lt;/xref:System.ComponentModel.ComponentEditor&gt; &lt;/xref:System.Drawing.Design.UITypeEditor&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>You can define multiple editors for a property.</source>
          <target state="translated">您可以定義多個屬性編輯器。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>You use this method to select the editor you want to use.</source>
          <target state="translated">您可以使用這個方法來選取您想要使用的編輯器。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The component to get the editor for.</source>
          <target state="translated">要取得編輯器的元件。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the base type of the editor you want to find.</source>
          <target state="translated">A&lt;xref:System.Type&gt;表示您想要尋找之編輯器的基底型別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A flag indicating whether custom type description information should be considered.</source>
          <target state="translated">旗標，指出是否應該考慮自訂類型描述資訊。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>An instance of the editor that can be cast to the specified editor type, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if no editor of the requested type can be found.</source>
          <target state="translated">可以轉換成指定的編輯器類型，在編輯器的執行個體或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果找不到要求的型別的編輯器。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;editorBaseType&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for the specified component.</source>
          <target state="translated">傳回指定元件的事件集合。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">擷取的事件集合的指定<ph id="ph1">`component`</ph>參數執行個體會提供。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>This collection can differ from the set of events the class provides.</source>
          <target state="translated">此集合可以與不同類別提供的事件集。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>設置參數、 站台可以新增或移除額外的事件。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, then an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，則會傳回空集合。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與此元件的事件。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified type of component.</source>
          <target state="translated">傳回指定元件類型的事件集合。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與此元件的事件。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">傳回指定元件，使用指定的屬性陣列做為篩選條件的事件集合。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">針對事件<ph id="ph1">`component`</ph>參數可能會與不同的事件類別，因為站台可以新增或移除事件，如果<ph id="ph2">`component`</ph>設置參數。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>陣列可以具有多種&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;物件。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">篩選會定義下列規則:-&lt;xref:System.Type&gt;會被視為萬用字元使用，它會比對有任何事件&lt;xref:System.Type&gt;集中的屬性。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件沒有&lt;xref:System.Attribute&gt;相同類別的事件不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別事件必須為完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體，這是預設事件，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;萬一。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;，您可以使用做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有符合此元件指定的屬性之事件。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component with a custom type descriptor.</source>
          <target state="translated">傳回具有自訂類型描述元之指定元件的事件集合。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This method retrieves a collection of events that the given <ph id="ph1">`component`</ph> parameter instance provides.</source>
          <target state="translated">這個方法會擷取事件的集合，指定<ph id="ph1">`component`</ph>參數執行個體會提供。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>This can differ from the set of events the class provides.</source>
          <target state="translated">這可能不同於類別提供的事件集。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is sited, the site can add or remove additional events.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>設置參數、 站台可以新增或移除額外的事件。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與此元件的事件。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">傳回指定之類型的元件，使用指定的屬性陣列做為篩選條件的事件集合。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>參數陣列可以具有多種&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;物件。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">篩選會定義下列規則:-&lt;xref:System.Type&gt;會被視為萬用字元使用，它會比對有任何事件&lt;xref:System.Type&gt;集中的屬性。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件沒有&lt;xref:System.Attribute&gt;相同類別的事件不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別事件必須為完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體，這是預設事件，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;萬一。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; that you can use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;，您可以使用做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有符合此元件指定的屬性之事件。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">傳回使用指定的屬性陣列做為篩選條件，並使用自訂類型描述元之指定元件的事件集合。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The events for the <ph id="ph1">`component`</ph> parameter can differ from the events of a class, because the site can add or remove events if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">針對事件<ph id="ph1">`component`</ph>參數可能會與不同的事件類別，因為站台可以新增或移除事件，如果<ph id="ph2">`component`</ph>設置參數。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array can have a mix of &lt;xref:System.Type&gt; and &lt;xref:System.Attribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>參數陣列可以具有多種&lt;xref:System.Type&gt;和&lt;xref:System.Attribute&gt;物件。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   A &lt;xref:System.Type&gt; is treated as a wildcard; it matches any event that has the &lt;xref:System.Type&gt; in its set of attributes.</source>
          <target state="translated">篩選會定義下列規則:-&lt;xref:System.Type&gt;會被視為萬用字元使用，它會比對有任何事件&lt;xref:System.Type&gt;集中的屬性。&lt;/xref:System.Type&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>-   If an event does not have an &lt;xref:System.Attribute&gt; of the same class, the event is not included in the returned array.</source>
          <target state="translated">-如果事件沒有&lt;xref:System.Attribute&gt;相同類別的事件不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the event must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別事件必須為完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default event, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the event.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體，這是預設事件，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;萬一。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>A component to get the events for.</source>
          <target state="translated">要取得事件的元件。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;要做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for this component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有符合此元件指定的屬性之事件。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Returns the fully qualified name of the component.</source>
          <target state="translated">傳回元件的完整的名稱。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>In many cases, the GetFullComponentName method will return the same value as the &lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt; method.</source>
          <target state="translated">在許多情況下，GetFullComponentName 方法會傳回相同的值&lt;xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</source>
          <target state="translated">不過，如果元件位於巢狀容器，或有其他巢狀的語意，它可能會傳回不同的完整的名稱。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to find the name for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Component"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>若要尋找的名稱。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the specified component, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the component has no name.</source>
          <target state="translated">指定元件的完整的名稱或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果元件有沒有名稱。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component.</source>
          <target state="translated">傳回指定元件的屬性集合。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</source>
          <target state="translated">元件的屬性可以與不同類別的屬性，因為站台可以新增或移除屬性，如果元件決定位置。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與指定元件的屬性。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified type of component.</source>
          <target state="translated">傳回元件指定類型的屬性集合。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents the component to get properties for.</source>
          <target state="translated">&lt;xref:System.Type&gt;表示要取得屬性 for...in 元件&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for a specified type of component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>具有指定元件類型的屬性。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter.</source>
          <target state="translated">傳回指定元件，使用指定的屬性陣列做為篩選條件的屬性集合。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">屬性<ph id="ph1">`component`</ph>參數可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果<ph id="ph2">`component`</ph>設置參數。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>參數陣列用來篩選陣列。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">篩選會定義下列規則:-如果屬性沒有&lt;xref:System.Attribute&gt;相同類別的屬性不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別的屬性必須是完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;屬性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有預設屬性，GetProperties 方法符合大小寫，此屬性沒有套用屬性時。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;要做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>符合指定的元件指定的屬性的屬性。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using the default type descriptor.</source>
          <target state="translated">傳回使用預設類型描述元之指定元件的屬性集合。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The properties for the <ph id="ph1">`component`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> parameter is sited.</source>
          <target state="translated">屬性<ph id="ph1">`component`</ph>參數可能會與不同類別的屬性，因為站台可以新增或移除屬性，如果<ph id="ph2">`component`</ph>設置參數。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`component`</ph> is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to not consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示不考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties for a specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與指定元件的屬性。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</source>
          <target state="translated">傳回使用指定的屬性陣列做為篩選條件的元件指定類型的屬性集合。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>參數陣列用來篩選陣列。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">篩選會定義下列規則:-如果屬性沒有&lt;xref:System.Attribute&gt;相同類別的屬性不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別的屬性必須是完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;屬性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有預設屬性，GetProperties 方法符合大小寫，此屬性沒有套用屬性時。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`componentType`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`componentType`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;要做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the properties that match the specified attributes for this type of component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>符合這種類型的元件指定的屬性的屬性。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</source>
          <target state="translated">傳回使用指定的屬性陣列做為篩選條件，並使用自訂類型描述元之指定元件的屬性集合。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The properties for a <ph id="ph1">`component`</ph> can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`component`</ph> is sited.</source>
          <target state="translated">屬性<ph id="ph1">`component`</ph>可以與不同類別的屬性，因為站台可以新增或移除屬性，如果<ph id="ph2">`component`</ph>設置。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`attributes`</ph> parameter array is used to filter the array.</source>
          <target state="translated"><ph id="ph1">`attributes`</ph>參數陣列用來篩選陣列。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Filtering is defined by the following rules:      -   If a property does not have an &lt;xref:System.Attribute&gt; of the same class, the property is not included in the returned array.</source>
          <target state="translated">篩選會定義下列規則:-如果屬性沒有&lt;xref:System.Attribute&gt;相同類別的屬性不包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>-   If the attribute is an instance of the &lt;xref:System.Attribute&gt; class, the property must be an exact match or it is not included in the returned array.</source>
          <target state="translated">-如果此屬性是的執行個體&lt;xref:System.Attribute&gt;類別的屬性必須是完全相符，或它不會包含傳回陣列中。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Attribute&gt; instance is specified and it is the default property, it is included in the returned array even if there is no instance of the &lt;xref:System.Attribute&gt; in the property.</source>
          <target state="translated">-如果&lt;xref:System.Attribute&gt;指定執行個體和它的預設屬性，即使沒有任何執行個體，它包含傳回陣列中&lt;xref:System.Attribute&gt;屬性中。&lt;/xref:System.Attribute&gt; &lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`attributes`</ph> has a default attribute, the GetProperties method matches the case when the property does not have the attribute applied.</source>
          <target state="translated">-如果<ph id="ph1">`attributes`</ph>具有預設屬性，GetProperties 方法符合大小寫，此屬性沒有套用屬性時。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`component`</ph> parameter is <ph id="ph2">`null`</ph>, an empty collection is returned.</source>
          <target state="translated">如果<ph id="ph1">`component`</ph>參數是<ph id="ph2">`null`</ph>，就會傳回空集合。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</source>
          <target state="translated">所傳回之集合的順序不保證是相同的呼叫之間，所以一定訂購，才能使用。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A component to get the properties for.</source>
          <target state="translated">要取得屬性的元件。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Attribute&gt; to use as a filter.</source>
          <target state="translated">類型的陣列&lt;xref:System.Attribute&gt;要做為篩選條件。&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to consider custom type description information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要考慮自訂類型描述資訊;否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the events that match the specified attributes for the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含符合指定的屬性，指定元件之事件。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is a cross-process remoted object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>是跨處理序的遠端物件。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Returns the type description provider for the specified component.</source>
          <target state="translated">傳回指定元件的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;方法一律會傳回的類型描述提供者。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.</source>
          <target state="translated">即使預設&lt;xref:System.ComponentModel.TypeDescriptor&gt;實作根據&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified component.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與指定的元件相關聯。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Returns the type description provider for the specified type.</source>
          <target state="translated">傳回指定類型的類型描述提供者。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt; method will always return a type description provider.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;方法一律會傳回的類型描述提供者。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProvider%2A&gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Even the default &lt;xref:System.ComponentModel.TypeDescriptor&gt; implementation is built on a &lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.</source>
          <target state="translated">即使預設&lt;xref:System.ComponentModel.TypeDescriptor&gt;實作根據&lt;xref:System.ComponentModel.TypeDescriptionProvider&gt;.&lt;/xref:System.ComponentModel.TypeDescriptionProvider&gt; &lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>與指定的型別相關聯。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given an object.</source>
          <target state="translated">傳回&lt;xref:System.Type&gt;可用來執行反映指定的物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;方法是低階版本的&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;通常用來執行對物件的標準反映，沒有自訂類型描述元可以找到它。&lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; for the specified object.</source>
          <target state="translated">A&lt;xref:System.Type&gt;指定的物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Returns a &lt;xref:System.Type&gt; that can be used to perform reflection, given a class type.</source>
          <target state="translated">傳回&lt;xref:System.Type&gt;，可以用來執行反映中，指定類別類型。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; method is a low-level version of the &lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; method.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;方法是低階版本的&lt;xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt; is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;通常用來執行標準的反映類別，沒有自訂類型描述元可以找到它。&lt;/xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; of the specified class.</source>
          <target state="translated">&lt;xref:System.Type&gt;的指定類別。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Gets a type that represents a type description provider for all interface types.</source>
          <target state="translated">取得代表所有介面類型的類型描述提供者的類型。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The InterfaceType property gets a &lt;xref:System.Type&gt; object that you can pass to the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; methods to define a type description provider for interface types.</source>
          <target state="translated">InterfaceType 屬性會取得&lt;xref:System.Type&gt;可以傳遞給物件&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt;方法來定義介面類型的類型描述提供者。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%2A&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; that represents a custom type description provider for all interface types.</source>
          <target state="translated">A &lt;xref:System.Type&gt;，代表所有介面類型的自訂類型描述提供者。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified component from the cache.</source>
          <target state="translated">清除屬性和指定的元件，從快取的事件。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">屬性和事件不會快取&lt;xref:System.ComponentModel.TypeDescriptor&gt;速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常，它們都維持不變的物件存留期。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>If they do, they should call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果沒有的話，它們應該呼叫這個方法，以清除物件的屬性和事件描述項。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">這個方法只在設計階段使用。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在執行階段不使用它。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.</source>
          <target state="translated">這個方法也會引發&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件屬性或事件的元件變更時。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.</source>
          <target state="translated">如果沒有在先前呼叫只會引發這個事件&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;或&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;快取資訊的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A component for which the properties or events have changed.</source>
          <target state="translated">已變更的屬性或事件時元件。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified assembly from the cache.</source>
          <target state="translated">指定的組件，從快取清除屬性和事件。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">屬性和事件不會快取&lt;xref:System.ComponentModel.TypeDescriptor&gt;速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常，它們都維持不變的物件存留期。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果沒有的話，它們能呼叫這個方法，以清除物件的屬性和事件描述項。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">這個方法只在設計階段使用。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在執行階段不使用它。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific assembly to cache the information first.</source>
          <target state="translated">之前，請呼叫&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;方法，以清除快取中，您需要呼叫&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;第一次快取的資訊的特定組件的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">這個方法也會引發&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件以通知所有想要的屬性集元件變更時收到通知的類別。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; that represents the assembly to refresh.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;，代表要重新整理之組件。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Type&gt; in this assembly will be refreshed.</source>
          <target state="translated">每個&lt;xref:System.Type&gt;這個組件中將會重新整理。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified module from the cache.</source>
          <target state="translated">清除屬性和指定的模組，從快取的事件。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">屬性和事件不會快取&lt;xref:System.ComponentModel.TypeDescriptor&gt;速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常，它們都維持不變的物件存留期。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果沒有的話，它們能呼叫這個方法，以清除物件的屬性和事件描述項。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">這個方法只在設計階段使用。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在執行階段不使用它。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Before you make a call to the &lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt; method to clear the cache, you need to call the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; method for the specific module to cache the information first.</source>
          <target state="translated">之前，請呼叫&lt;xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;方法，以清除快取中，您需要呼叫&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;第一次快取的資訊的特定模組的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.Refresh%2A&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to notify all classes that want to be notified when the property set of a component changes.</source>
          <target state="translated">這個方法也會引發&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件以通知所有想要的屬性集元件變更時收到通知的類別。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Module&gt; that represents the module to refresh.</source>
          <target state="translated">&lt;xref:System.Reflection.Module&gt;，代表要重新整理的模組。&lt;/xref:System.Reflection.Module&gt;</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Type&gt; in this module will be refreshed.</source>
          <target state="translated">每個&lt;xref:System.Type&gt;這個模組將會重新整理。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Clears the properties and events for the specified type of component from the cache.</source>
          <target state="translated">清除屬性和元件，從快取的指定類型的事件。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Call this version of this method only when you do not have an instance of the object.</source>
          <target state="translated">您不需要物件的執行個體時，才呼叫這個方法的這個版本。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Properties and events are cached by &lt;xref:System.ComponentModel.TypeDescriptor&gt; for speed.</source>
          <target state="translated">屬性和事件不會快取&lt;xref:System.ComponentModel.TypeDescriptor&gt;速度。&lt;/xref:System.ComponentModel.TypeDescriptor&gt;</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Typically, they are constant for the lifetime of an object.</source>
          <target state="translated">通常，它們都維持不變的物件存留期。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>However, extender providers and designers can change the set of properties on an object.</source>
          <target state="translated">不過，擴充性提供者和設計工具可以變更物件上的屬性的集。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>If they do, they can call this method to clear the property and event descriptors of the object.</source>
          <target state="translated">如果沒有的話，它們能呼叫這個方法，以清除物件的屬性和事件描述項。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>This method is used only at design time.</source>
          <target state="translated">這個方法只在設計階段使用。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>It is not used during run time.</source>
          <target state="translated">在執行階段不使用它。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>This method also raises a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event when the properties or events of a component change.</source>
          <target state="translated">這個方法也會引發&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;事件屬性或事件的元件變更時。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>This event is only raised if there was a prior call to the &lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt; or &lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; method that cached the information.</source>
          <target state="translated">如果沒有在先前呼叫只會引發這個事件&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;或&lt;xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt;快取資訊的方法。&lt;/xref:System.ComponentModel.TypeDescriptor.GetEvents%2A&gt; &lt;/xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Occurs when the cache for a component is cleared.</source>
          <target state="translated">發生於清除元件快取。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>NIB︰ 使用事件<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Removes an association between two objects.</source>
          <target state="translated">移除兩個物件之間的關聯。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The RemoveAssociation method removes an association between two objects formed by the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.</source>
          <target state="translated">RemoveAssociation 方法移除所形成的兩個物件之間的關聯&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;是用來維護主要和次要物件之間的關聯; 因此，這個方法不會影響任一物件已完成或記憶體回收所回收時。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt;.</source>
          <target state="translated">主要&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The secondary &lt;xref:System.Object&gt;.</source>
          <target state="translated">次要&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Removes all associations for a primary object.</source>
          <target state="translated">移除所有主要物件的關聯。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The RemoveAssociations method removes all associations between a primary object and all of its secondary objects, created by calls to the &lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt; method.</source>
          <target state="translated">RemoveAssociations 方法移除主要物件以及其所有次要物件，呼叫所建立的所有關聯&lt;xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A&gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.WeakReference&gt; is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</source>
          <target state="translated">A&lt;xref:System.WeakReference&gt;是用來維護主要和次要物件之間的關聯; 因此，這個方法不會影響當完成次要物件的主要或記憶體回收所回收。&lt;/xref:System.WeakReference&gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The primary &lt;xref:System.Object&gt; in an association.</source>
          <target state="translated">主要&lt;xref:System.Object&gt;在關聯中。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;primary&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">移除先前新增的類型描述提供者與指定的物件相關聯。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.</source>
          <target state="translated">這個方法會移除先前新增的類型描述提供者&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.</source>
          <target state="translated">移除提供者會使&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;相關聯的物件會引發事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法，如果您需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">移除先前新增的類型描述提供者與指定的型別相關聯。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.</source>
          <target state="translated">這個方法會移除先前新增的類型描述提供者&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.</source>
          <target state="translated">移除提供者會使&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;相關聯的類型會引發事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法，如果您需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified object.</source>
          <target state="translated">移除先前新增的類型描述提供者與指定的物件相關聯。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method.</source>
          <target state="translated">這個方法會移除先前新增的類型描述提供者&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated object.</source>
          <target state="translated">移除提供者會使&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;相關聯的物件會引發事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">從部分信任程式碼可以呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定義，呼叫端可以註冊指定的執行個體的提供者，如果其類型也受到部分信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;方法，如果您不需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>An instance of the target component.</source>
          <target state="translated">目標元件的執行個體。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Removes a previously added type description provider that is associated with the specified type.</source>
          <target state="translated">移除先前新增的類型描述提供者與指定的型別相關聯。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>This method removes a type description provider previously added with the &lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method.</source>
          <target state="translated">這個方法會移除先前新增的類型描述提供者&lt;xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法。&lt;/xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Removing a provider causes a &lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt; event to be raised for the associated type.</source>
          <target state="translated">移除提供者會使&lt;xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;相關聯的類型會引發事件。&lt;/xref:System.ComponentModel.TypeDescriptor.Refreshed&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>This method can be called from partially trusted code.</source>
          <target state="translated">從部分信任程式碼可以呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt; is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</source>
          <target state="translated">如果&lt;xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;是定義，呼叫端可以取消註冊提供者指定的類型如果也受到部分信任。&lt;/xref:System.Security.Permissions.TypeDescriptorPermissionFlags&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt; method if you do not need to call from partially trusted code.</source>
          <target state="translated">使用&lt;xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;方法，如果您不需要從部分信任程式碼呼叫。&lt;/xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.TypeDescriptionProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>移除。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the target component.</source>
          <target state="translated">&lt;xref:System.Type&gt;目標元件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>One or both of the parameters are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或兩個參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Sorts descriptors using the name of the descriptor.</source>
          <target state="translated">使用的描述元名稱的排序描述元。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that contains the descriptors to sort.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;，其中包含排序描述元。&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;infos&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;infos&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>