<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb8f9739e674c5062a08210f1e8f16b2798f50ac</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18d4c85a6ed3e01f39beec0a884c2a08ef6b77cd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c07d6684782aa957af7231de75350efc1a406fb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a connection point object that enables a server control acting as a provider to form a connection with a consumer.</source>
          <target state="translated">定義可讓做為伺服器控制項的提供者與取用者連接的連接點物件。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">在兩個伺服器控制項之間的每個 Web 組件連接，每個控制項必須有 （還有其他需求） 可讓它連接至其他控制項，並提供或取用資料，為提供者或消費者連接指定控制項是否根據相關聯的連接點物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;物件通常包含如何將控制項可以連接到另一個控制項，它可以共用的資料類型的詳細資料。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a control acting as the provider in a connection, its connection point must be a ProviderConnectionPoint object.</source>
          <target state="translated">做為連接提供者的控制項，其連接點必須 ProviderConnectionPoint 物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For details on Web Parts connections and connection points, see the topics listed in the See Also section below.</source>
          <target state="translated">如需 Web 組件連接和連接點的詳細資訊，請參閱 &lt; 另請參閱下一節中所列的主題。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a ProviderConnectionPoint object, several steps are required:      1.</source>
          <target state="translated">若要建立 ProviderConnectionPoint 物件，不需要數個步驟︰ 1。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create an interface.</source>
          <target state="translated">建立介面。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When a provider shares data with a consumer, it does so by getting an instance of an interface, and returning that instance to a consumer.</source>
          <target state="translated">當共用資料提供者與取用者時，它會取得介面的執行個體，並將該執行個體傳回給取用者。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Implement the interface in a provider.</source>
          <target state="translated">提供者中實作的介面。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt; or other server control (any type of server control in a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; zone can be used) that will be the provider must implement the interface created in the first step.</source>
          <target state="translated">A&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;或其他伺服器控制項 (任何類型的伺服器控制項中&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;可用區域)，將會提供者必須實作第一個步驟中所建立的介面。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Identify a callback method.</source>
          <target state="translated">識別回呼方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A method in the provider must be identified as the callback method to establish a connection.</source>
          <target state="translated">提供者中的方法，必須識別為回呼方法，以建立連接。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This method returns an instance of the implemented interface to a consumer.</source>
          <target state="translated">這個方法會傳回實作介面的執行個體的取用者。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The Web Parts approach for identifying a callback method in the provider is to add a <ph id="ph1">`ConnectionProvider`</ph> metadata attribute (defined by the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt; class) to the method that returns the interface instance.</source>
          <target state="translated">識別提供者中的回呼方法的 Web 組件方法是加入<ph id="ph1">`ConnectionProvider`</ph>中繼資料屬性 (由&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;類別) 傳回的介面執行個體的方法。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When the attribute is added, the only required parameter is a display name to use for the provider connection point.</source>
          <target state="translated">加入屬性時，唯一的必要的參數時要使用的提供者連接點的顯示名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional parameters can also be added, such as an ID for the connection point.</source>
          <target state="translated">可以加入選擇性參數也是，例如連接點的識別碼。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>After a control has been equipped to act as a provider, the control can participate in connections (assuming that a consumer control is similarly equipped and available).</source>
          <target state="translated">控制項已具備做為提供者之後，此控制項可以參與連接 （假設，消費者控制項也備妥可用）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">若要建立靜態、 宣告式連接的網頁標記中，開發人員可以使用<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`ConnectionProvider`</ph> attribute in the provider source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ProviderConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">如果<ph id="ph1">`ConnectionProvider`</ph>屬性提供者的原始碼識別的回呼方法中指定連接點的識別碼，則該值必須指派給<ph id="ph2">`ProviderConnectionPointID`</ph>屬性<ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph>頁面上的元素。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One reason that a developer might specify an ID for a provider connection point is if there are multiple connection points in the provider control.</source>
          <target state="translated">開發人員可能會指定提供者連接點識別碼的其中一個原因是提供者控制項中是否有多個連接點。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an ID is not specified for the provider connection point in the provider control, a value does not have to be assigned to the <ph id="ph1">`ProviderConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt; field.</source>
          <target state="translated">如果提供者連接點提供者控制項中沒有指定的識別碼，值沒有指派給<ph id="ph1">`ProviderConnectionPointID`</ph>頁面中，屬性，因為連接將使用預設值取自建立&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;欄位。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To create a connection in code, developers must create a new ProviderConnectionPoint object by calling the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method and passing to it the ID of the provider control, along with the ID or index of the defined ProviderConnectionPoint object in the provider control.</source>
          <target state="translated">若要在程式碼中建立連接，開發人員必須藉由呼叫建立新的 ProviderConnectionPoint 物件&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;方法並傳遞給它的提供者的控制項，以及識別碼或索引定義 ProviderConnectionPoint 物件提供者控制項中的識別碼。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The returned ProviderConnectionPoint object, along with a reference to the provider control, a reference to the consumer control, and a corresponding &lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt; object, are all passed to the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; method to create a new &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; object.</source>
          <target state="translated">傳回的 ProviderConnectionPoint 物件，以及提供者控制項的參考，取用者控制項，和對應的參考&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;物件，全部都是傳遞至&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;方法來建立新&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;物件。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although developers can use provider connection points as part of establishing connections either declaratively or programmatically, users can also interact with provider connection points to establish connections through the user interface (UI).</source>
          <target state="translated">雖然開發人員可以使用提供者連接點，以宣告方式或以程式設計方式建立連接的一部分，使用者也可以在與提供者連接點來建立連接，透過使用者介面 (UI) 互動。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If developers declare a &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt; control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">如果開發人員宣告&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;控制項在網頁上，它會提供執行階段的 UI，讓使用者能夠建立連接。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If users choose the consumer control as the starting point for establishing the connection by clicking its connect verb (they could also choose the provider; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display name of the available provider connection point (or points if there are multiple ones).</source>
          <target state="translated">如果使用者選擇為起點來建立連接，即可取用者控制其連接動詞命令 （也可以選擇提供者; 沒有任何差異，產生的連線中），它們會在 UI 中看到可用的提供者連接點 （或如果多個點） 的顯示名稱的下拉式清單控制項。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Users must select a provider connection point to create a connection.</source>
          <target state="translated">使用者必須選取提供者連接點，以建立連接。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A ProviderConnectionPoint object associates directly with a specific provider control, and stores details about a connection in the properties it inherits from the base &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint 物件直接與特定的提供者控制項產生關聯，並將連線的相關詳細資料儲存在它繼承自基底&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;類別&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;的屬性</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, in the inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; property, a provider connection point keeps the type of interface returned by the provider.</source>
          <target state="translated">例如，在繼承&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;屬性，提供者連接點會持續提供者傳回的介面的型別。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If the provider and consumer in a connection both work with the same interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">如果提供者和消費者中都使用相同的連接介面型別，這些控制項是相容，並且能夠建立直接連接。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object to translate the provider connection point's &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; value into a type that the consumer can work with.</source>
          <target state="translated">如果提供者和消費者不能使用相同的介面類型，它們不相容，而且必須使用&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;物件翻譯的提供者連接點&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;值到取用者可以使用的型別。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Another important inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt; property, which provides a friendly name to display in the UI for users to choose a provider connection point when creating connections.</source>
          <target state="translated">另一個重要的繼承的屬性是&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;屬性，提供易記的名稱，以顯示在 UI，供使用者選擇提供者連接點，當建立連接。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionProvider`</ph> attribute to the callback method in a provider control.</source>
          <target state="translated">顯示名稱是必要的參數，當開發人員將<ph id="ph1">`ConnectionProvider`</ph>屬性設定為提供者控制項的回呼方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The inherited &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt; property is also useful, as indicated above, because it provides a unique identifier for a provider connection point in the event that a provider has multiple connection points.</source>
          <target state="translated">繼承&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;屬性也很有用，如前文所述，，因為它提供唯一的識別項的提供者連接點的提供者有多個連接點。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A provider can have multiple ProviderConnectionPoint objects defined in it, and in this case, when developers add the <ph id="ph1">`ConnectionProvider`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">提供者可以有多個定義，並在此情況下，當開發人員將加入的 ProviderConnectionPoint 物件<ph id="ph1">`ConnectionProvider`</ph>屬性給方法時，他們應該指定區別每一個連接點識別碼值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>One other notable inherited property is the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt; property, which indicates whether a provider connection point can connect simultaneously to multiple consumers.</source>
          <target state="translated">其中一個其他值得注意繼承的屬性是&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;屬性，指出提供者連接點是否可同時連接到多個取用者。&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This property value is <ph id="ph1">`true`</ph> by default for provider connection points (whereas it defaults to <ph id="ph2">`false`</ph> for consumer connection points).</source>
          <target state="translated">這個屬性值<ph id="ph1">`true`</ph>預設提供者連接點 (而其預設值為<ph id="ph2">`false`</ph>的消費者連接點)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint class adds several unique methods to the members it inherits from the &lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt; class.</source>
          <target state="translated">ProviderConnectionPoint 類別會加入數個唯一的方法繼承自此&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;類別&lt;/xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;的成員</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method retrieves an instance of the interface that the callback method will return to consumers.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法會擷取回呼方法會傳回給取用者介面的執行個體。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt; method retrieves additional consumer interfaces that are part of an existing connection, but are not the interfaces used to establish the connection.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;方法會擷取額外的消費者介面屬於現有的連接，但不是介面可用來建立連接。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetSecondaryInterfaces%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The ProviderConnectionPoint constructor for the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated">ProviderConnectionPoint 建構函式的&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;類別只會呼叫基底建構函式，將各種不同的參數傳遞給它，並初始化基底類別。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">基底類別建構函式會檢查幾個連接點的參數，並可能會擲回某些例外狀況。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">如需可能的例外狀況的清單，請參閱例外狀況 &gt; 一節。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can call the ProviderConnectionPoint constructor to create your own instance of the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; class.</source>
          <target state="translated">您可以呼叫 ProviderConnectionPoint 建構函式來建立您自己的執行個體的&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;類別。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the &lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt; method to return an existing connection point object from a provider.</source>
          <target state="translated">不過，如果您只建立連線，並不會擴充類別，您應該呼叫&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;方法，以從提供者傳回現有的連接點物件。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The method in the provider control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">傳回給取用者建立連接的介面執行個體的提供者控制項中的方法。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the interface that the provider serves to consumers.</source>
          <target state="translated">&lt;xref:System.Type&gt;的提供者是用來取用者的介面。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the provider control with which the provider connection point is associated.</source>
          <target state="translated">&lt;xref:System.Type&gt;與提供者連接點相關聯的提供者控制項。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A friendly display name for the provider connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">顯示給使用者連接的使用者介面 (UI) 中的提供者連接點易記顯示名稱。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A unique identifier for the provider connection point.</source>
          <target state="translated">提供者連接點的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A Boolean value indicating whether the provider connection point can have multiple simultaneous connections with consumers.</source>
          <target state="translated">布林值，表示提供者連接點是否可以具有多個取用者的同時連線。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>is not the same type as the provider control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;controlType &lt;/code&gt;</ph>不是相同的型別提供者控制項 （或有效的類別衍生自它）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Invokes the callback method in a provider control that gets an interface instance to return to consumers.</source>
          <target state="translated">取得要傳回給取用者的介面執行個體的提供者控制項的回呼方法會叫用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method returns an object from the provider control that is an instance of the interface used to establish a connection.</source>
          <target state="translated">這個方法會傳回物件，從用來建立連接的介面的執行個體提供者控制。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The type of the object will be the type of the implemented interface.</source>
          <target state="translated">物件的型別會實作介面的型別。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>For example, two interfaces that are implemented for connections in the Web Parts control set are &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt; and &lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.</source>
          <target state="translated">例如，兩個 Web 組件控制項集合中的連線實作的介面是&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;和&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;.&lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When the GetObject method is called on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object, if the associated provider implements one of these interfaces, the returned object will be of the same type.</source>
          <target state="translated">GetObject 方法上呼叫時&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;物件，如果相關聯的提供者會實作這些介面之一，傳回的物件都屬於相同類型。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The GetObject method is called by &lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt; objects when a connection is being activated.</source>
          <target state="translated">GetObject 方法會呼叫&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;物件正在啟動連線時。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This is a critical step that actually initiates a connection and begins the process that enables two controls to share data.</source>
          <target state="translated">這是實際起始的連線，並開始的程序，可讓共用資料的兩個控制項的重要步驟。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">取用者中的控制項的連接必須能夠使用的相同介面的型別為提供者。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If it does not, the controls are incompatible and a &lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt; object must be used to establish a connection.</source>
          <target state="translated">如果不存在，會不相容的控制項和&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;物件必須用來建立連接。&lt;/xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">做為 Web 組件連接提供者的控制項。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt; that is an instance of the interface a provider returns to consumers to establish a connection.</source>
          <target state="translated">&lt;xref:System.Object&gt;，是介面的提供者的執行個體傳回給取用者建立連接。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an optional collection of secondary interfaces that can be supported by a provider connection point.</source>
          <target state="translated">取得選擇性的輔助介面，可支援的提供者連接點集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A provider connection point object always has a default interface that is used to establish a connection with consumers.</source>
          <target state="translated">提供者連接點物件一律會有預設介面用來建立與取用者的連線。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An instance of the default interface is retrieved by calling the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method on a &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; object.</source>
          <target state="translated">預設介面的執行個體藉由呼叫擷取&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;物件。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt; &lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>However, some provider controls will implement multiple interfaces to provide to consumers as part of a connection.</source>
          <target state="translated">不過，某些提供者的控制項將會實作多個介面，提供給取用者連接的一部分。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>These interfaces, which are not the default ones used to establish a connection, are called secondary interfaces.</source>
          <target state="translated">這些介面，沒有預設值，用來建立連接，稱為次要介面。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The GetSecondaryInterfaces method provides a way to return a collection of references to the secondary interfaces, just as the &lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt; method returns a reference to the default interface.</source>
          <target state="translated">GetSecondaryInterfaces 方法可用來傳回的次要的介面參考的集合一樣&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;方法會傳回預設介面的參考。&lt;/xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint.GetObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The control acting as the provider in a Web Parts connection.</source>
          <target state="translated">做為 Web 組件連接提供者的控制項。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of additional interfaces provided by the control acting as a provider.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>控制項當做提供者所提供的其他介面。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>