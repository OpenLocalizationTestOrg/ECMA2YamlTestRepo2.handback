<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6666a90742c1811ac0f8382a1497787847d82742</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.CompilerServices.CallConvCdecl.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44ae7ecd03a799517363044647b217b4ba6c74f8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6e0d2044ef26a710a8354c18905376e253646b7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that a method should use the <bpt id="p1">&lt;xref uid="langword_csharp_Cdecl" name="Cdecl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> calling convention.</source>
          <target state="translated">表示方法應該使用<bpt id="p1">&lt;xref uid="langword_csharp_Cdecl" name="Cdecl" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呼叫慣例。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The caller cleans the stack.</source>
          <target state="translated">呼叫端會清除堆疊。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This enables calling functions with <ph id="ph1">`varargs`</ph>.</source>
          <target state="translated">這可讓呼叫的函式與<ph id="ph1">`varargs`</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This class is used only as a custom modifier of the metadata signature of a method.</source>
          <target state="translated">這個類別只會當作方法的中繼資料簽章的自訂修飾詞。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The classes in &lt;xref:System.Runtime.CompilerServices&gt; are for compiler writers' use only.</source>
          <target state="translated">中的類別&lt;xref:System.Runtime.CompilerServices&gt;編譯器撰寫者僅供使用。&lt;/xref:System.Runtime.CompilerServices&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</source>
          <target state="translated">編譯器會發出中繼資料，以變更預設行為不適用時，在 just-in-time (JIT) 編譯器，處理值的方式中的自訂修飾詞。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</source>
          <target state="translated">當 JIT 編譯器遇到的自訂修飾詞時，它會處理修飾詞指定的方式中的值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compilers can apply custom modifiers to methods, parameters, and return values.</source>
          <target state="translated">編譯器可以套用的自訂修飾詞來方法、 參數和傳回值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The JIT compiler must respond to required modifiers but can ignore optional modifiers.</source>
          <target state="translated">JIT 編譯器的必要修飾詞必須回應，但可以忽略的選擇性修飾詞。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</source>
          <target state="translated">C + + 編譯器可以發出來描述如何 byte，應該要視為 JIT 編譯器以 c + + 與不相容的方式處理位元組中預設的自訂修飾詞。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can emit custom modifiers into metadata using one of the following techniques:      -   Using methods in the &lt;xref:System.Reflection.Emit.TypeBuilder&gt; class such as &lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;, &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;, and &lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;.</source>
          <target state="translated">您可以將自訂修飾詞發出至中繼資料使用的下列技術的其中一個:-使用中的方法&lt;xref:System.Reflection.Emit.TypeBuilder&gt;類別如&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;， &lt;xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt;， &lt;xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt;，和&lt;xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt;。&lt;/xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineField%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt; &lt;/xref:System.Reflection.Emit.TypeBuilder&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to <ph id="ph1">`modopt`</ph> and <ph id="ph2">`modreq`</ph>, and assembling the file with the <bpt id="p1">[</bpt>Ilasm.exe (IL Assembler)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">產生 Microsoft intermediate language (MSIL) 指示檔案，其中包含呼叫<ph id="ph1">`modopt`</ph>和<ph id="ph2">`modreq`</ph>，然後將組合至檔案最<bpt id="p1">[</bpt>Ilasm.exe （IL 組譯工具）<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-   Using the unmanaged reflection API.</source>
          <target state="translated">-使用 unmanaged 的反映 API。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.CallConvCdecl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Runtime.CompilerServices.CallConvCdecl"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The classes in &lt;xref:System.Runtime.CompilerServices&gt; are for compiler writers' use only.</source>
          <target state="translated">中的類別&lt;xref:System.Runtime.CompilerServices&gt;編譯器撰寫者僅供使用。&lt;/xref:System.Runtime.CompilerServices&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>