<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">743b00cae26b2222671c6733ec6673f60a6aa7b5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Threading.ThreadState.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10f2e2991f5027d1a3f75652074c942e1152b47a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b58d0f8f571e866a50256a8fec82b65b3451b6b2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the execution states of a <bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">指定的執行狀態<bpt id="p1">&lt;xref href="System.Threading.Thread"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The ThreadState enumeration is of interest only in a few debugging scenarios.</source>
          <target state="translated">ThreadState 列舉型別是只能在一些感興趣的偵錯案例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Your code should never use the thread state to synchronize the activities of threads.</source>
          <target state="translated">您的程式碼應該永遠不會使用執行緒狀態來同步處理執行緒活動。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>ThreadState defines a set of all possible execution states for threads.</source>
          <target state="translated">ThreadState 定義一組所有可能的執行狀態的執行緒。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Once a thread is created, it is in at least one of the states until it terminates.</source>
          <target state="translated">一旦建立執行緒，則為至少其中一個狀態直到它所終止。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Threads created within the common language runtime are initially in the <ph id="ph1">`Unstarted`</ph> state, while external threads that come into the runtime are already in the <ph id="ph2">`Running`</ph> state.</source>
          <target state="translated">Common language runtime 中建立的執行緒都在一開始處於<ph id="ph1">`Unstarted`</ph>狀態，而外部進入執行階段的執行緒已在<ph id="ph2">`Running`</ph>狀態。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Unstarted`</ph> thread is transitioned into the <ph id="ph2">`Running`</ph> state by calling &lt;xref:System.Threading.Thread.Start%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`Unstarted`</ph>執行緒轉換為<ph id="ph2">`Running`</ph>藉由呼叫&lt;xref:System.Threading.Thread.Start%2A&gt;.&lt;/xref:System.Threading.Thread.Start%2A&gt;狀態</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Not all combinations of <ph id="ph1">`ThreadState`</ph> values are valid; for example, a thread cannot be in both the <ph id="ph2">`Aborted`</ph> and <ph id="ph3">`Unstarted`</ph> states.</source>
          <target state="translated">並非所有的組合<ph id="ph1">`ThreadState`</ph>是有效的值; 例如，執行緒不會同時<ph id="ph2">`Aborted`</ph>和<ph id="ph3">`Unstarted`</ph>狀態。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  There are two thread state enumerations,ThreadState and &lt;xref:System.Diagnostics.ThreadState?displayProperty=fullName&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 有兩個執行緒狀態的列舉型別，ThreadState 和&lt;xref:System.Diagnostics.ThreadState?displayProperty=fullName&gt;.&lt;/xref:System.Diagnostics.ThreadState?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table shows the actions that cause a change of state.</source>
          <target state="translated">下表顯示的動作會導致狀態的變更。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>|Action|ThreadState|   |------------|-----------------|   |A thread is created within the common language runtime.|Unstarted|   |Another thread calls the &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; method on the new thread, and the call returns.</source>
          <target state="translated">|動作 |ThreadState |  |------------|-----------------|  |Common language runtime 中建立的執行緒。 |尚未開始 |  |另一個執行緒呼叫&lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;上新的執行緒和呼叫的方法會傳回。&lt;/xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.Thread.Start%2A&gt; method does not return until the new thread has started running.</source>
          <target state="translated">&lt;xref:System.Threading.Thread.Start%2A&gt;方法前不會傳回新的執行緒已開始執行。&lt;/xref:System.Threading.Thread.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There is no way to know at what point the new thread will start running, during the call to &lt;xref:System.Threading.Thread.Start%2A&gt;.|Running|   |The thread calls &lt;xref:System.Threading.Thread.Sleep%2A&gt;|WaitSleepJoin|   |The thread calls &lt;xref:System.Threading.Monitor.Wait%2A&gt; on another object.|WaitSleepJoin|   |The thread calls &lt;xref:System.Threading.Thread.Join%2A&gt; on another thread.|WaitSleepJoin|   |Another thread calls &lt;xref:System.Threading.Thread.Interrupt%2A&gt;|Running|   |Another thread calls &lt;xref:System.Threading.Thread.Suspend%2A&gt;|SuspendRequested|   |The thread responds to a &lt;xref:System.Threading.Thread.Suspend%2A&gt; request.|Suspended|   |Another thread calls &lt;xref:System.Threading.Thread.Resume%2A&gt;|Running|   |Another thread calls &lt;xref:System.Threading.Thread.Abort%2A&gt;|AbortRequested|   |The thread responds to a &lt;xref:System.Threading.Thread.Abort%2A&gt; request.|Stopped|   |A thread is terminated.|Stopped|       In addition to the states noted above, there is also the <ph id="ph1">`Background`</ph> state, which indicates whether the thread is running in the background or foreground.</source>
          <target state="translated">沒有方法知道點，新的執行緒會開始執行，&lt;xref:System.Threading.Thread.Start%2A&gt;的呼叫期間。 |執行 |  |執行緒呼叫&lt;xref:System.Threading.Thread.Sleep%2A&gt;|WaitSleepJoin |  |另一個物件的執行緒呼叫&lt;xref:System.Threading.Monitor.Wait%2A&gt;。 |WaitSleepJoin |  |另一個執行緒上的執行緒呼叫&lt;xref:System.Threading.Thread.Join%2A&gt;。 |WaitSleepJoin |  |另一個執行緒呼叫&lt;xref:System.Threading.Thread.Interrupt%2A&gt;|執行 |  |另一個執行緒呼叫&lt;xref:System.Threading.Thread.Suspend%2A&gt;|SuspendRequested |  |執行緒回應&lt;xref:System.Threading.Thread.Suspend%2A&gt;要求。 |暫止 |  |另一個執行緒呼叫&lt;xref:System.Threading.Thread.Resume%2A&gt;|執行 |  |另一個執行緒呼叫&lt;xref:System.Threading.Thread.Abort%2A&gt;|AbortRequested |  |執行緒回應&lt;xref:System.Threading.Thread.Abort%2A&gt;要求。 |停止 |  |執行緒已終止。 |停止 |      除了上述的狀態，另外還有<ph id="ph1">`Background`</ph>狀態，指出執行緒是否正執行於背景或前景。&lt;/xref:System.Threading.Thread.Abort%2A&gt; &lt;/xref:System.Threading.Thread.Abort%2A&gt; &lt;/xref:System.Threading.Thread.Resume%2A&gt; &lt;/xref:System.Threading.Thread.Suspend%2A&gt; &lt;/xref:System.Threading.Thread.Suspend%2A&gt; &lt;/xref:System.Threading.Thread.Interrupt%2A&gt; &lt;/xref:System.Threading.Thread.Join%2A&gt; &lt;/xref:System.Threading.Monitor.Wait%2A&gt; &lt;/xref:System.Threading.Thread.Sleep%2A&gt; &lt;/xref:System.Threading.Thread.Start%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A thread can be in more than one state at a given time.</source>
          <target state="translated">執行緒可以在多個狀態中給定的時間。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if a thread is blocked on a call to &lt;xref:System.Threading.Monitor.Wait%2A&gt;, and another thread calls &lt;xref:System.Threading.Thread.Abort%2A&gt; on the blocked thread, the blocked thread will be in both the <ph id="ph1">`WaitSleepJoin`</ph> and the <ph id="ph2">`AbortRequested`</ph> states at the same time.</source>
          <target state="translated">例如，如果執行緒已封鎖的呼叫上&lt;xref:System.Threading.Monitor.Wait%2A&gt;，和另一個執行緒呼叫&lt;xref:System.Threading.Thread.Abort%2A&gt;封鎖的執行緒上封鎖的執行緒就會同時<ph id="ph1">`WaitSleepJoin`</ph>和<ph id="ph2">`AbortRequested`</ph>一次的狀態。&lt;/xref:System.Threading.Thread.Abort%2A&gt; &lt;/xref:System.Threading.Monitor.Wait%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this case, as soon as the thread returns from the call to &lt;xref:System.Threading.Monitor.Wait%2A&gt; or is interrupted, it will receive the &lt;xref:System.Threading.ThreadAbortException&gt; to begin aborting.</source>
          <target state="translated">在此情況下，當執行緒從呼叫返回&lt;xref:System.Threading.Monitor.Wait%2A&gt;或已中斷，就會收到&lt;xref:System.Threading.ThreadAbortException&gt;開始中止。&lt;/xref:System.Threading.ThreadAbortException&gt; &lt;/xref:System.Threading.Monitor.Wait%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName&gt; property of a thread provides the current state of a thread.</source>
          <target state="translated">&lt;xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName&gt;執行緒屬性會提供執行緒的目前狀態。&lt;/xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Applications must use a bitmask to determine whether a thread is running.</source>
          <target state="translated">應用程式必須使用位元遮罩，來判斷是否正在執行一個執行緒。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Since the value for <ph id="ph1">`Running`</ph> is zero (0), test whether a thread is running by using C# code such as <ph id="ph2">`(myThread.ThreadState &amp; (ThreadState.Stopped | ThreadState.Unstarted)) == 0`</ph> or Visual Basic code such as <ph id="ph3">`(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`</ph>.</source>
          <target state="translated">值因為<ph id="ph1">`Running`</ph>零 (0)，測試是否執行緒正在執行使用 C# 程式碼，例如<ph id="ph2">`(myThread.ThreadState &amp; (ThreadState.Stopped | ThreadState.Unstarted)) == 0`</ph>或 Visual Basic 程式碼，例如<ph id="ph3">`(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The thread state includes AbortRequested and the thread is now dead, but its state has not yet changed to Stopped.</source>
          <target state="translated">執行緒狀態包含 AbortRequested 和執行緒已無作用，但其狀態尚未變更為 已停止。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.Abort%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method has been invoked on the thread, but the thread has not yet received the pending <bpt id="p1">&lt;xref href="System.Threading.ThreadAbortException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that will attempt to terminate it.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Threading.Thread.Abort%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>方法叫用執行緒上、 但尚未收到執行緒暫止<bpt id="p1">&lt;xref href="System.Threading.ThreadAbortException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，將會嘗試將其終止。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The thread is being executed as a background thread, as opposed to a foreground thread.</source>
          <target state="translated">執行緒為背景執行緒，而不是前景執行緒正在執行。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This state is controlled by setting the <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> property.</source>
          <target state="translated">此狀態由設定<ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The thread has been started, it is not blocked, and there is no pending <bpt id="p1">&lt;xref href="System.Threading.ThreadAbortException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">執行緒已經啟動，並未受到封鎖，而且沒有任何暫止<bpt id="p1">&lt;xref href="System.Threading.ThreadAbortException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The thread has stopped.</source>
          <target state="translated">執行緒已停止。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The thread is being requested to stop.</source>
          <target state="translated">執行緒會被要求停止。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is for internal use only.</source>
          <target state="translated">這是僅供內部使用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The thread has been suspended.</source>
          <target state="translated">執行緒已經暫止。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The thread is being requested to suspend.</source>
          <target state="translated">執行緒會被暫止要求。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.Start%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method has not been invoked on the thread.</source>
          <target state="translated"><ph id="ph1">&amp;lt;</ph>Xref:System.Threading.Thread.Start%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>已不在執行緒上叫用方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The thread is blocked.</source>
          <target state="translated">執行緒會封鎖。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This could be the result of calling <ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> or <ph id="ph3">&amp;lt;</ph>xref:System.Threading.Thread.Join%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>, of requesting a lock — for example, by calling <ph id="ph5">&amp;lt;</ph>xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName<ph id="ph6">&amp;gt;</ph> or <ph id="ph7">&amp;lt;</ph>xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName<ph id="ph8">&amp;gt;</ph> — or of waiting on a thread synchronization object such as &lt;xref:System.Threading.ManualResetEvent&gt;.</source>
          <target state="translated">這可能是呼叫<ph id="ph1">&amp;lt;</ph>xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>或<ph id="ph3">&amp;lt;</ph>xref:System.Threading.Thread.Join%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>，要求鎖定的 — 例如，藉由呼叫<ph id="ph5">&amp;lt;</ph>xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName<ph id="ph6">&amp;gt;</ph>或<ph id="ph7">&amp;lt;</ph>xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName<ph id="ph8">&amp;gt;</ph> — 或等待&lt;xref:System.Threading.ManualResetEvent&gt;.&lt;/xref:System.Threading.ManualResetEvent&gt;例如執行緒同步處理物件</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>