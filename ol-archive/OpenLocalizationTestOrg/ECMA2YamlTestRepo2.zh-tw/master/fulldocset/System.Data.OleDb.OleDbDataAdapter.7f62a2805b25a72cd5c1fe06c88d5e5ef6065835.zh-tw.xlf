<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcc31274176c0f8129b121de304d7162d769c64d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OleDb.OleDbDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c4d7912cd2ebb734a7b29108afaa81716708af8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02a3d91f94bf1cfef8c580e14ed15cbad374e867</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a database connection that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update the data source.</source>
          <target state="translated">代表一組資料命令和資料庫連接，用來填滿<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並更新資料來源。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The OleDbDataAdapter serves as a bridge between a &lt;xref:System.Data.DataSet&gt; and data source for retrieving and saving data.</source>
          <target state="translated">OleDbDataAdapter 當做之間的橋樑&lt;xref:System.Data.DataSet&gt;以及擷取和儲存資料的資料來源。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The OleDbDataAdapter provides this bridge by using &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to load data from the data source into the &lt;xref:System.Data.DataSet&gt;, and using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; to send changes made in the &lt;xref:System.Data.DataSet&gt; back to the data source.</source>
          <target state="translated">OleDbDataAdapter 提供使用這個橋接器&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;將資料載入到資料來源&lt;xref:System.Data.DataSet&gt;，並使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;傳送中所做的變更&lt;xref:System.Data.DataSet&gt;回資料來源。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When the OleDbDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it will create the appropriate tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">當填滿 OleDbDataAdapter &lt;xref:System.Data.DataSet&gt;，它尚未存在，如果會建立適當的資料表和資料行所傳回資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">不過，主索引鍵資訊不包含隱含建立的結構描述中除非&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性設定為&lt;xref:System.Data.MissingSchemaAction&gt;.&lt;/xref:System.Data.MissingSchemaAction&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You may also have the OleDbDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">您也可以建立結構描述&lt;xref:System.Data.DataSet&gt;，包括主索引鍵資訊，填滿其使用&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;資料與之前&lt;/xref:System.Data.DataSet&gt;的 OleDbDataAdapter</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>將現有條件約束加入至資料集<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</source>
          <target state="translated">請注意，有些 OLE DB 提供者，包括 MSDataShape 提供者不會傳回基底資料表或主索引鍵資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Therefore, the OleDbDataAdapter cannot correctly set the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property on any created &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">因此，OleDbDataAdapter 無法正確地設定&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;於任何建立的&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;屬性&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In these cases you should explicitly specify primary keys for tables in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">在這些情況下您應該明確指定&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中資料表的主索引鍵</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The OleDbDataAdapter also includes the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; properties to facilitate the loading and updating of data.</source>
          <target state="translated">OleDbDataAdapter 也包含&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;， &lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;， &lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;， &lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;，和&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;屬性，以加速載入和更新的資料。&lt;/xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you create an instance of OleDbDataAdapter, properties are set to their initial values.</source>
          <target state="translated">當您建立的 OleDbDataAdapter 執行個體時，屬性會設定為其初始值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For a list of these values, see the OleDbDataAdapter constructor.</source>
          <target state="translated">如需這些值的清單，請參閱 OleDbDataAdapter 建構函式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;，下列的讀取/寫入屬性設定為下列的初始值。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更任何這些屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定<bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>為&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;屬性。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; constructor sets the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">這項實作&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;建構函式&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;屬性中指定的值為<ph id="ph1">`selectCommand`</ph>參數。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;，下列的讀取/寫入屬性設定為下列的初始值。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更任何這些屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a SELECT statement or stored procedure, and is set as the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>的 SELECT 陳述式或預存程序，並已設定為&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;屬性<bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;類別</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; opens and closes an &lt;xref:System.Data.OleDb.OleDbConnection&gt; if it is not already open.</source>
          <target state="translated">這項實作&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;開啟和關閉&lt;xref:System.Data.OleDb.OleDbConnection&gt;如果它尚未開啟。&lt;/xref:System.Data.OleDb.OleDbConnection&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This can be useful in an application that must call the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method for two or more &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; objects.</source>
          <target state="translated">這很有用的應用程式，必須呼叫&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的兩個或多個&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;物件。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.OleDb.OleDbConnection&gt; is already open, you must explicitly call &lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt; or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> to close it.</source>
          <target state="translated">如果&lt;xref:System.Data.OleDb.OleDbConnection&gt;是已經開啟，您必須明確呼叫&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;或<bpt id="p1">**</bpt>處置<ept id="p1">**</ept>關閉它。&lt;/xref:System.Data.OleDb.OleDbConnection.Close%2A&gt; &lt;/xref:System.Data.OleDb.OleDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;，下列的讀取/寫入屬性設定為下列的初始值。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更上述任一個屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字串的 SQL SELECT 陳述式或預存程序，以供&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;屬性<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，代表的連接。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;類別</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This overload of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; constructor uses the <ph id="ph1">`selectConnectionString`</ph> parameter to set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">這個多載&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;建構函式使用<ph id="ph1">`selectConnectionString`</ph>參數來設定&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;屬性。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, it does not open the connection.</source>
          <target state="translated">不過，它不會開啟連接。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">您仍然必須明確開啟連接。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">當您建立的執行個體&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;，下列的讀取/寫入屬性設定為下列的初始值。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">|屬性 |初始值 |  |----------------|-------------------|  |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|  |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|      您可以變更任何這些屬性，透過呼叫另一個屬性的值。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字串的 SQL SELECT 陳述式或預存程序，以供&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;屬性<bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">連接字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序從資料集中刪除記錄。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the DeleteCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">期間&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;，如果沒有設定這個屬性，且主索引鍵資訊存在&lt;xref:System.Data.DataSet&gt;，可以產生 DeleteCommand，只有在您設定的&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;屬性並使用&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;時，自動&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">然後，您未設定任何其他命令會產生&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此產生邏輯需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When DeleteCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">當指派 DeleteCommand 到先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;、&lt;xref:System.Data.OleDb.OleDbCommand&gt;不會被複製。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">DeleteCommand 維護參考先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to delete records in the data source that correspond to deleted rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>期間使用&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;刪除對應到資料來源中的記錄將刪除的資料列中的<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in an ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object using the specified <bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and ADO objects.</source>
          <target state="translated">加入或重新整理中的資料列<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以符合 ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>物件使用指定<bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>和 ADO 物件。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the &lt;xref:System.Data.DataSet&gt;, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業&lt;xref:System.Data.DataSet&gt;，但必須由 ADO.NET 處理資料的任何更新。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This overload of the Fill method does not close the input <ph id="ph1">`Recordset`</ph> on completion of the Fill operation.</source>
          <target state="translated">Fill 方法的這個多載不會關閉輸入<ph id="ph1">`Recordset`</ph>填滿作業完成。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When handling batch SQL statements that return multiple results, this implementation of Fill and &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</source>
          <target state="translated">處理批次傳回多個結果，這項實作的填滿的 SQL 陳述式時，&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;的 OLE DB.NET Framework 資料提供者擷取的只有第一個結果的結構描述資訊。&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The Fill operation adds the rows to the specified destination &lt;xref:System.Data.DataTable&gt; object in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; object if it does not already exist.</source>
          <target state="translated">填滿作業會將資料列加入到指定的目的地&lt;xref:System.Data.DataTable&gt;物件存放至&lt;xref:System.Data.DataSet&gt;、 建立&lt;xref:System.Data.DataTable&gt;如果它不存在的物件。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When you create a &lt;xref:System.Data.DataTable&gt; object, the Fill operation ordinarily creates only column name metadata.</source>
          <target state="translated">當您建立&lt;xref:System.Data.DataTable&gt;物件填入作業通常會建立只有資料行名稱中繼資料。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">不過，如果&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性設定為<ph id="ph1">`AddWithKey`</ph>，也會建立適當的主索引鍵和條件約束。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can use the Fill method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">您可以使用的填滿方法多次於相同&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">如果沒有主索引鍵存在，內送資料列會附加至&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在&lt;xref:System.Data.DataTable&gt;對應至&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">主索引鍵資訊可能會設定透過&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;，藉由指定&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;屬性&lt;xref:System.Data.DataTable&gt;，或藉由設定&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性<ph id="ph1">`AddWithKey`</ph>。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; returns the results of an OUTER JOIN, the <ph id="ph1">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">如果&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;傳回結果的 OUTER JOIN，<ph id="ph1">`DataAdapter`</ph>未設定&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;值，產生&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>定義主索引鍵<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <ph id="ph2">`IColumnsRowset`</ph>.</source>
          <target state="translated">若要正常搭配.NET Framework Data Provider for OLE DB<ph id="ph1">`AddWithKey`</ph>需要原生 OLE DB 提供者藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，並接著會判斷哪些資料行是主索引鍵資料行，藉由檢查中的 DBCOLUMN_KEYCOLUMN <ph id="ph2">`IColumnsRowset`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Alternatively the user may explicitly set the primary key constraints on each &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">或者使用者可能會明確設定於&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt; primary key 條件約束</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This makes sure that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">這可確保符合現有記錄的內送記錄會更新而不是附加。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;遇到重複的資料行在填入&lt;xref:System.Data.DataTable&gt;，它會產生後續的資料行，並使用模式的名稱"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3 」，依此類推。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Empty column names are added to the &lt;xref:System.Data.DataTable&gt;, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</source>
          <target state="translated">空的資料行名稱會加入至&lt;xref:System.Data.DataTable&gt;，使用空字串的第一個資料行，後面接著"1"、"2"、"3"，等後續的空白資料行。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">在 ADO 中的值<ph id="ph1">`Recordset`</ph>或<ph id="ph2">`Record`</ph>物件會轉換成&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中的儲存體的 common language runtime 類型</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  This overload of the Fill method does not implicitly call <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Fill 方法的這個多載不會隱含地呼叫<ph id="ph2">`Close`</ph>ADO 時在物件上填滿作業已完成。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Therefore, always call <ph id="ph1">`Close`</ph> when you are finished using ADO <ph id="ph2">`Recordset`</ph> or <ph id="ph3">`Record`</ph> objects.</source>
          <target state="translated">因此，務必呼叫<ph id="ph1">`Close`</ph>當您完成使用 ADO<ph id="ph2">`Recordset`</ph>或<ph id="ph3">`Record`</ph>物件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</source>
          <target state="translated">這可確保基礎連接到資料來源即時的方式，以發行和也會防止可能的存取違規，因為 unmanaged ADO 物件被記憶體回收所回收仍存在現有的參考時。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>When you call the <ph id="ph1">`TableMappings.Add`</ph> method on a <ph id="ph2">`DataAdapter`</ph> and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</source>
          <target state="translated">當您呼叫<ph id="ph1">`TableMappings.Add`</ph>方法<ph id="ph2">`DataAdapter`</ph>和明確對應的來源資料表參數為空字串、 資料集成功填滿使用來源資料表中，但資料集將會填入執行任何動作。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For example, in the following example, <ph id="ph1">`rDataSet`</ph> will be populated with nothing.</source>
          <target state="translated">例如，在下列範例中，<ph id="ph1">`rDataSet`</ph>會填入執行任何動作。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   rAdapter.TableMappings.Add("source table", "");   rAdapter.Fill(rDataSet, "source table");      ```</ph>       This example shows how you can skip a result when dealing with multiple results.</source>
          <target state="translated"><ph id="ph1">```   rAdapter.TableMappings.Add("source table", "");   rAdapter.Fill(rDataSet, "source table");      ```</ph>這個範例會示範如何可以略過的結果處理多個結果時。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The following example uses an &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; to fill a &lt;xref:System.Data.DataTable&gt; using an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">下列範例會使用&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;填滿&lt;xref:System.Data.DataTable&gt;使用 ADO <ph id="ph1">`Recordset`</ph>。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This example assumes that you have created an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">這個範例假設您已建立 ADO <ph id="ph1">`Recordset`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable("Customers")        custTable.Columns.Add("CustomerID", Type.GetType("System.String"))        custTable.Columns.Add("CompanyName", Type.GetType("System.String"))        custDS.Tables.Add(custTable)        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable("Customers");        custTable.Columns.Add("CustomerID", typeof(String));        custTable.Columns.Add("CompanyName", typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```</ph></source>
          <target state="translated"><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable("Customers")        custTable.Columns.Add("CustomerID", Type.GetType("System.String"))        custTable.Columns.Add("CompanyName", Type.GetType("System.String"))        custDS.Tables.Add(custTable)        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable("Customers");        custTable.Columns.Add("CustomerID", typeof(String));        custTable.Columns.Add("CompanyName", typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>填滿記錄，而且如果它是必要項，結構描述。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The number of rows successfully refreshed to the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要重新整理的資料列數目<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">這不包括不傳回資料列的陳述式所影響的資料列。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in an ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object using the specified <bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, ADO object, and source table name.</source>
          <target state="translated">加入或重新整理中的資料列<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>以符合 ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>或<bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>物件使用指定<bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>，ADO 物件和來源資料表名稱。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the &lt;xref:System.Data.DataSet&gt;, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ActiveX Data Objects (ADO) 與 ADO.NET 之間的連結，您可以從 ADO 來複製資料，是單向作業&lt;xref:System.Data.DataSet&gt;，但必須由 ADO.NET 處理資料的任何更新。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method iterates through multiple results by calling the <ph id="ph1">`NextRecordset`</ph> method on the <ph id="ph2">`Recordset`</ph>, closing the input <ph id="ph3">`Recordset`</ph> on completion of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;方法逐一查看多個結果藉由呼叫<ph id="ph1">`NextRecordset`</ph>方法<ph id="ph2">`Recordset`</ph>，關閉輸入<ph id="ph3">`Recordset`</ph>完成&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;作業。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation adds the rows to the specified destination &lt;xref:System.Data.DataTable&gt; object in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; object if it does not already exist.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;作業會將資料列加入到指定的目的地&lt;xref:System.Data.DataTable&gt;物件存放至&lt;xref:System.Data.DataSet&gt;、 建立&lt;xref:System.Data.DataTable&gt;如果它不存在的物件。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When you create a &lt;xref:System.Data.DataTable&gt; object, the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation ordinarily creates only column name metadata.</source>
          <target state="translated">當您建立&lt;xref:System.Data.DataTable&gt;物件&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;作業通常會建立只有資料行名稱中繼資料。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>However, if the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">不過，如果&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性設定為<ph id="ph1">`AddWithKey`</ph>，也會建立適當的主索引鍵和條件約束。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">如果存在主索引鍵資訊，任何重複的資料列和一致，而且只能出現一次在&lt;xref:System.Data.DataTable&gt;對應至&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">主索引鍵資訊可能會設定透過&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;，藉由指定&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;屬性&lt;xref:System.Data.DataTable&gt;，或藉由設定&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;屬性<ph id="ph1">`AddWithKey`</ph>。&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</source>
          <target state="translated">若要正常搭配.NET Framework Data Provider for OLE DB<ph id="ph1">`AddWithKey`</ph>需要原生 OLE DB 提供者，藉由設定 DBPROP_UNIQUEROWS 屬性，取得必要的主索引鍵資訊，然後決定 哪些資料行是主索引鍵資料行，藉由檢查中的 DBCOLUMN_KEYCOLUMN <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Alternatively the user may explicitly set the primary key constraints on each &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">或者使用者可能會明確設定於&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt; primary key 條件約束</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>This ensures that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">這可確保符合現有記錄的內送記錄會更新而不是附加。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; returns the results of an OUTER JOIN, the <ph id="ph1">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">如果&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;傳回結果的 OUTER JOIN，<ph id="ph1">`DataAdapter`</ph>未設定&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;值，產生&lt;xref:System.Data.DataTable&gt;。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">您必須明確定義主索引鍵，以確定正確解析重複的資料列。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>定義主索引鍵<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Recordset`</ph> is closed before the starting of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation, no error results.</source>
          <target state="translated">如果<ph id="ph1">`Recordset`</ph>的啟動前已關閉&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;作業，而且不會產生錯誤。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This is required for handling of multiple results, because queries that do not return rows are indicated by a closed <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">這是必要以處理多個結果，因為查詢不會傳回資料列會指出由關閉<ph id="ph1">`Recordset`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; just calls <ph id="ph1">`NextRecordset`</ph> on the closed <ph id="ph2">`Recordset`</ph> and continues processing.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;只會呼叫<ph id="ph1">`NextRecordset`</ph>上的封閉型<ph id="ph2">`Recordset`</ph>然後繼續處理。&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">在填入資料集發生錯誤，如果發生錯誤之前所加入的資料列會保留在&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The rest of the operation is aborted.</source>
          <target state="translated">其餘的作業已中止。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">如果&lt;xref:System.Data.Common.DbDataAdapter&gt;物件遇到重複的資料行在填入&lt;xref:System.Data.DataTable&gt;，它會產生後續的資料行，並使用模式的名稱"<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1"，"<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2"，"<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3 」，依此類推。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">如果內送資料中包含未命名資料行，它們會放置於&lt;xref:System.Data.DataSet&gt;根據模式"Column1"、"Column2"，等等。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">當多個結果集加入至&lt;xref:System.Data.DataSet&gt;放置於個別的資料表中每個結果集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">使用資料行和資料表名稱的應用程式應該要確定這些命名模式衝突不會發生。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">在 ADO 中的值<ph id="ph1">`Recordset`</ph>或<ph id="ph2">`Record`</ph>物件會轉換成&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中的儲存體的 common language runtime 類型</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This overload of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method implicitly calls <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的這個多載&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;方法會隱含呼叫<ph id="ph2">`Close`</ph>ADO 時在物件上填滿作業已完成。&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The following example uses an &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; to fill a &lt;xref:System.Data.DataSet&gt; using an ADO <ph id="ph1">`Recordset`</ph> that is an ADO <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">下列範例會使用&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;填滿&lt;xref:System.Data.DataSet&gt;使用 ADO<ph id="ph1">`Recordset`</ph>也就是 ADO<ph id="ph2">`Record`</ph>物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This example assumes that you have created an ADO <ph id="ph1">`RecordSet`</ph> and <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">這個範例假設您已建立 ADO<ph id="ph1">`RecordSet`</ph>和<ph id="ph2">`Record`</ph>物件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, "Customers")        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, "Customers");        adoConn.Close();   ```</ph></source>
          <target state="translated"><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, "Customers")        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, "Customers");        adoConn.Close();   ```</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>填滿記錄，而且如果它是必要項，結構描述。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The source table used for the table mappings.</source>
          <target state="translated">來源資料表，用於資料表對應。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">資料列數目已成功加入，或在中重新整理<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">這不包括不傳回資料列的陳述式所影響的資料列。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">無效的來源資料表。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來將新記錄插入至資料來源。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the InsertCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">期間&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;，如果沒有設定這個屬性，且主索引鍵資訊存在&lt;xref:System.Data.DataSet&gt;，可以產生 InsertCommand，只有在您設定的&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;屬性並使用&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;時，自動&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">然後，您未設定任何其他命令會產生&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此產生邏輯需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>When InsertCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">當指派 InsertCommand 到先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;、&lt;xref:System.Data.OleDb.OleDbCommand&gt;不會被複製。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The InsertCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">InsertCommand 維護參考先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be added to the &lt;xref:System.Data.DataSet&gt; depending on how you set the &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果執行此命令會傳回資料列，這些資料列可能會加入至&lt;xref:System.Data.DataSet&gt;根據如何設定&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;屬性&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to insert records in the data source that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>期間使用&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;對應至新的資料列中的資料來源中插入記錄<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; after a command is executed against the data source.</source>
          <target state="translated">發生在&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;針對資料來源執行命令之後。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The attempt to update is made.</source>
          <target state="translated">會嘗試更新。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Therefore, the event occurs.</source>
          <target state="translated">因此，就會發生此事件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">當您使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;，有兩個每個更新的資料列就會發生的事件。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">執行的順序如下︰ 1。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移到參數值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;就會引發事件。&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">如果命令設定為<ph id="ph1">`FirstReturnedRecord`</ph>，第一個傳回的結果會放在&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;就會引發事件。&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;會呼叫。&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">發生在&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;針對資料來源執行命令之前。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The attempt to update is made.</source>
          <target state="translated">會嘗試更新。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Therefore, the event occurs.</source>
          <target state="translated">因此，就會發生此事件。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">當您使用&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;，有兩個每個更新的資料列就會發生的事件。&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">執行的順序如下︰ 1。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">中的值&lt;xref:System.Data.DataRow&gt;移到參數值。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;就會引發事件。&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The command executes.</source>
          <target state="translated">執行命令。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">如果命令設定為<ph id="ph1">`FirstReturnedRecord`</ph>，第一個傳回的結果會放在&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">如果沒有輸出參數，它們會放置於&lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;就會引發事件。&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;會呼叫。&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來選取資料來源中的記錄。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">當 SelectCommand 指派到先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;、&lt;xref:System.Data.OleDb.OleDbCommand&gt;不會被複製。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The SelectCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">SelectCommand 維護參考先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If the SelectCommand returns no rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">SelectCommand 不傳回任何資料列，如果沒有資料表會加入至&lt;xref:System.Data.DataSet&gt;，並會引發任何例外狀況。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt; to select records from data source for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>期間所使用&lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt;放置在資料來源選取記錄<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.Common.DbDataAdapter.Fill*&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新期間用來刪除資料集中刪除資料列的資料來源中的記錄。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新期間用來將記錄插入資料來源的資料集內的位置。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>更新期間用來從放置在資料集中的資料來源選取記錄。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">如需這個成員的說明，請參閱&lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;執行個體轉換成&lt;xref:System.Data.IDbDataAdapter&gt;介面。&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>對修改資料集中的資料列進行資料來源中更新來更新記錄時使用。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;執行個體轉換成&lt;xref:System.ICloneable&gt;介面。&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A new &lt;xref:System.Object&gt; that is a copy of this instance.</source>
          <target state="translated">新&lt;xref:System.Object&gt;也就是這個執行個體的複本。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">取得或設定的 SQL 陳述式或預存程序，用來更新資料來源中的記錄。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the UpdateCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">期間&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;，如果沒有設定這個屬性，且主索引鍵資訊存在&lt;xref:System.Data.DataSet&gt;，可以產生 UpdateCommand，只有在您設定的&lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;屬性並使用&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;時，自動&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">然後，您未設定任何其他命令會產生&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;。&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此產生邏輯需要存在於&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的索引鍵資料行資訊</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Commandbuilder 產生命令<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">當指派 UpdateCommand 到先前建立&lt;xref:System.Data.OleDb.OleDbCommand&gt;、&lt;xref:System.Data.OleDb.OleDbCommand&gt;不會被複製。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">UpdateCommand 會維護先前建立的參考&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending on how you set the &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果執行此命令會傳回資料列，這些資料列可能會合併與&lt;xref:System.Data.DataSet&gt;根據如何設定&lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;屬性&lt;xref:System.Data.OleDb.OleDbCommand&gt;物件。&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to update records in the data source that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>期間使用&lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;對應至資料來源中更新記錄修改中的資料列<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>