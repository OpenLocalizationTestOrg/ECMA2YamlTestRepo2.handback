<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfd1a485c7cd423bac8fc1edeb446bfc906a0ac4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaComplexType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">014b46122fe8fd3c452cf63dbb70dd3e9a7be4f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">702a52072c38fb3df461125f5d44a8c7b43e67e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element from XML Schema as specified by the World Wide Web Consortium (W3C).</source>
          <target state="translated">代表<bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> World Wide Web Consortium (W3C) 所指定的項目從 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class defines a complex type that determines the set of attributes and content of an element.</source>
          <target state="translated">這個類別定義的屬性和項目的內容會決定複雜類型。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An element can be declared with a type attribute that refers to a <ph id="ph1">`complexType`</ph> element that defines the structure, content, and attributes of that element.</source>
          <target state="translated">項目可以宣告具有型別屬性，它是指<ph id="ph1">`complexType`</ph>定義結構、 內容和屬性，該元素的項目。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaComplexType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the value for the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated">取得或設定值<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>複雜類型的元件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If this property is not null, the complex type can contain any attributes from the namespaces specified in the &lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.</source>
          <target state="translated">如果這個屬性不是 null，複雜類型可以包含&lt;xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaAnyAttribute&gt;中指定的命名空間中的任何屬性</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> component of the complex type.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAnyAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>複雜類型的元件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the collection of attributes for the complex type.</source>
          <target state="translated">取得複雜類型的屬性集合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Contains <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">包含<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttributeGroupRef"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the collection of all the complied attributes of this complex type and its base types.</source>
          <target state="translated">取得這個複雜類型及其基底型別的所有遵守屬性的集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, a combination of all the attributes from the <ph id="ph1">`Attributes`</ph> property from each type in the hierarchy.</source>
          <target state="translated">例如，從所有屬性的組合<ph id="ph1">`Attributes`</ph>從階層中每個類型的屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The value of this property is read-only.</source>
          <target state="translated">這個屬性的值為唯讀。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This property has the value after the schema has been successfully compiled to determine the complete attribute set that is allowed in an instance document.</source>
          <target state="translated">結構描述成功編譯來判斷完成屬性集，允許的執行個體文件之後，這個屬性具有值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The collection of all the attributes from this complex type and its base types.</source>
          <target state="translated">從這個複雜類型和其基底類型的所有屬性的集合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">編譯後值<bpt id="p1">&lt;xref uid="langword_csharp_AttributeUses" name="AttributeUses" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>屬性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the post-compilation value for <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this complex type and its base type(s).</source>
          <target state="translated">取得編譯後值<bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此複雜類型和其基底類型。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The value of this property is read-only.</source>
          <target state="translated">這個屬性的值為唯讀。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This property has values after the schema has been successfully compiled to determine the complete attribute set of the complex type.</source>
          <target state="translated">結構描述成功編譯來判斷完成屬性集的複雜型別之後，此屬性的值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, it might be the <ph id="ph1">`anyAttribute`</ph> element from one of the base types.</source>
          <target state="translated">例如，它可能是<ph id="ph1">`anyAttribute`</ph>基底類型中的項目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the <bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">編譯後值<bpt id="p1">&lt;xref uid="langword_csharp_anyAttribute" name="anyAttribute" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>屬性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Indicates the type of derivation.</source>
          <target state="translated">指出衍生的型別。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">這個屬性可以包含下列值: |列舉 |描述 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|使用所定義的衍生限制<ph id="ph2">`BlockDefault`</ph>屬性結構描述，如果存在的話。 |  |<ph id="ph3">`Extension`</ph>|無法利用擴充衍生的類型所取代此項目。 |  |<ph id="ph4">`Restriction`</ph>|無法由限制衍生的類型所取代此項目。 |  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">無法取代這個項目，不論衍生方法的任何類型。 |      <ph id="ph1">`Substitution`</ph>， <ph id="ph2">`List`</ph>，和<ph id="ph3">`Union`</ph>衍生方法不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> attribute prevents a complex type from being used in the specified type of derivation.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_block" name="block" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>屬性可防止複雜類型中指定的型別衍生的使用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_XmlSchemaDerivationMethod.None" name="XmlSchemaDerivationMethod.None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the value after the type has been compiled to the post-schema-validation information set (infoset).</source>
          <target state="translated">取得值，類型編譯為後結構描述驗證資訊集 (infoset) 之後。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This value indicates how the type is enforced when <bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is used in the instance document.</source>
          <target state="translated">這個值表示如何強制執行型別時<bpt id="p1">&lt;xref uid="langword_csharp_xsi:type" name="xsi:type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用於執行個體文件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This value is taken either from the type itself or, if not defined at the type level, it is taken from the <ph id="ph1">`schema`</ph> element.</source>
          <target state="translated">這個值會從該類型本身，或如果未定義類型層級，它取自<ph id="ph1">`schema`</ph>項目。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if the value is restricted, only the specifically defined type can be used, not types derived from the specifically defined type.</source>
          <target state="translated">例如，如果有限制的值，可以使用特別定義的類型，不是型別衍生自特別定義的型別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |<ph id="ph1">`None`</ph>|Use the derivation restriction defined by the <ph id="ph2">`BlockDefault`</ph> property of the schema, if it exists.|   |<ph id="ph3">`Extension`</ph>|This element cannot be replaced by a type derived by Extension.|   |<ph id="ph4">`Restriction`</ph>|This element cannot be replaced by a type derived by Restriction.|   |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</source>
          <target state="translated">這個屬性可以包含下列值: |列舉 |描述 |  |----------|-----------------|  |<ph id="ph1">`None`</ph>|使用所定義的衍生限制<ph id="ph2">`BlockDefault`</ph>屬性結構描述，如果存在的話。 |  |<ph id="ph3">`Extension`</ph>|無法利用擴充衍生的類型所取代此項目。 |  |<ph id="ph4">`Restriction`</ph>|無法由限制衍生的類型所取代此項目。 |  |<ph id="ph5">`All`</ph><ph id="ph6">|</ph><ph id="ph7">`#all`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This element cannot be replaced by any type regardless of derivation method.|       The <ph id="ph1">`Substitution`</ph>, <ph id="ph2">`List`</ph>, and <ph id="ph3">`Union`</ph> derivation methods are not supported by this property.</source>
          <target state="translated">無法取代這個項目，不論衍生方法的任何類型。 |      <ph id="ph1">`Substitution`</ph>， <ph id="ph2">`List`</ph>，和<ph id="ph3">`Union`</ph>衍生方法不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The post-schema-validated infoset value.</source>
          <target state="translated">後結構描述驗證 infoset 值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value on the <bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_BlockDefault" name="BlockDefault" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值<bpt id="p2">&lt;xref uid="langword_csharp_schema" name="schema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>項目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the post-compilation <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of this complex type.</source>
          <target state="translated">取得或設定編譯後<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaContentModel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>此複雜類型。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt; property.</source>
          <target state="translated">這是與互斥&lt;xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;屬性。&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The content model type that is one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">內容模型類型的其中一個<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSimpleContent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaComplexContent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the content model of the complex type which holds the post-compilation value.</source>
          <target state="translated">取得包含編譯後值之複雜類型的內容模型。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This is the content in the post-schema-validation infoset.</source>
          <target state="translated">這是中的後結構描述驗證資訊集的內容。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is set to <ph id="ph2">`true`</ph> on the <ph id="ph3">`ContentModel`</ph> property that has the type <ph id="ph4">`XmlSchemaComplexContent`</ph>, the value returned is <ph id="ph5">`Mixed`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`IsMixed`</ph>屬性設定為<ph id="ph2">`true`</ph>上<ph id="ph3">`ContentModel`</ph>具有類型的屬性<ph id="ph4">`XmlSchemaComplexContent`</ph>，傳回的值為<ph id="ph5">`Mixed`</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`IsMixed`</ph> property is <ph id="ph2">`false`</ph>, the value is either <ph id="ph3">`Empty`</ph> or <ph id="ph4">`ElementOnly`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`IsMixed`</ph>屬性是<ph id="ph2">`false`</ph>，值是<ph id="ph3">`Empty`</ph>或<ph id="ph4">`ElementOnly`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If the type on the <ph id="ph1">`ContentModel`</ph> property has the type <ph id="ph2">`XmlSchemaSimpleContent`</ph>, then this value is always <ph id="ph3">`TextOnly`</ph>.</source>
          <target state="translated">如果型別上的<ph id="ph1">`ContentModel`</ph>屬性都有類型<ph id="ph2">`XmlSchemaSimpleContent`</ph>，則這個值一律是<ph id="ph3">`TextOnly`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ContentType`</ph> property must have one of the values shown in the following table.</source>
          <target state="translated"><ph id="ph1">`ContentType`</ph>屬性必須有下表中所顯示的值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>|Enum|Description|   |----------|-----------------|   |<ph id="ph1">`TextOnly`</ph>|Text-only content.|   |<ph id="ph2">`Empty`</ph>|Empty content.|   |<ph id="ph3">`ElementOnly`</ph>|Element-only content.|   |<ph id="ph4">`Mixed`</ph>|Mixed content model.|</source>
          <target state="translated">|列舉 |描述 |  |----------|-----------------|  |<ph id="ph1">`TextOnly`</ph>|純文字內容。 |  |<ph id="ph2">`Empty`</ph>|空白的內容。 |  |<ph id="ph3">`ElementOnly`</ph>|僅限元素內容。 |  |<ph id="ph4">`Mixed`</ph>|混合內容模型。 |</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the content model for the complex type.</source>
          <target state="translated">編譯後值的內容模型的複雜型別。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the particle that holds the post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">取得物件所在的編譯後值&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;物件。&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">`ContentTypeParticle`</ph> is determined after the content models of the most derived types and the base complex type have been resolved according to the rules defined in the W3C XML Schema definition language (XSD) specification.</source>
          <target state="translated">這<ph id="ph1">`ContentTypeParticle`</ph>之後最常衍生的型別和基底複雜類型的內容模型已解決，根據 W3C XML 結構描述定義語言 (XSD) 規格中定義的規則決定。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The particle for the content type.</source>
          <target state="translated">內容類型的物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The post-compilation value of the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt; particle.</source>
          <target state="translated">編譯後值&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;物件。&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets the information that determines if the <bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> element can be used in the instance document.</source>
          <target state="translated">取得或設定資訊，決定如果<bpt id="p1">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>項目可以用於執行個體文件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, an element cannot use this <bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> element directly and must use a complex type that is derived from this <bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> element.</source>
          <target state="translated">如果<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，項目無法使用此<bpt id="p2">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>直接項目，且必須使用衍生自該複雜型別<bpt id="p3">&lt;xref uid="langword_csharp_complexType" name="complexType" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>項目。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets information that determines if the complex type has a mixed content model (markup within the content).</source>
          <target state="translated">取得或設定資訊，決定複雜類型是否具有混合內容模型 （內容中的標記）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Indicates if character data can appear between the child elements of this <ph id="ph1">`complexType`</ph>.</source>
          <target state="translated">指出是否出現字元資料可以之間之子項目的這<ph id="ph1">`complexType`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`simpleContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute is not allowed (<ph id="ph3">`false`</ph>).</source>
          <target state="translated">如果<ph id="ph1">`simpleContent`</ph>元素為子元素，<ph id="ph2">`mixed`</ph>不允許有屬性 (<ph id="ph3">`false`</ph>)。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`complexContent`</ph> element is a child element, the <ph id="ph2">`mixed`</ph> attribute can be overridden by the <ph id="ph3">`mixed`</ph> attribute on the <ph id="ph4">`complexContent`</ph> element.</source>
          <target state="translated">如果<ph id="ph1">`complexContent`</ph>元素為子元素，<ph id="ph2">`mixed`</ph>屬性可以覆寫<ph id="ph3">`mixed`</ph>屬性<ph id="ph4">`complexContent`</ph>項目。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, if character data can appear between child elements of this complex type; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此複雜類型的子元素之間可以出現的字元資料否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets the compositor type as one of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> classes.</source>
          <target state="translated">取得或設定複合項類型做為其中一個<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaGroupRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaChoice"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>， <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAll"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>，或<bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaSequence"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Particles must be one of the following compositors:      |Element|Description|   |-------------|-----------------|   |<ph id="ph1">`group`</ph>|The complex type contains the elements defined in the referenced group.|   |<ph id="ph2">`sequence`</ph>|The complex type contains the elements defined in the specified sequence.|   |<ph id="ph3">`choice`</ph>|The complex type allows one of the elements specified in the <ph id="ph4">`choice`</ph> element.|   |<ph id="ph5">`all`</ph>|The complex type allows all of the elements specified in the <ph id="ph6">`all`</ph> element to appear once or not at all.|       This is mutually exclusive with the &lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt; property.</source>
          <target state="translated">物件必須是下列合成的其中一個: |項目 |描述 |  |-------------|-----------------|  |<ph id="ph1">`group`</ph>|複雜型別包含參考群組中所定義的項目。 |  |<ph id="ph2">`sequence`</ph>|複雜類型包含指定序列中所定義的項目。 |  |<ph id="ph3">`choice`</ph>|複雜型別不允許在指定的項目<ph id="ph4">`choice`</ph>項目。 |  |<ph id="ph5">`all`</ph>|複雜型別允許的所有項目中指定<ph id="ph6">`all`</ph>元素出現一次或完全無法執行。 |      這是與互斥&lt;xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;屬性。&lt;/xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The compositor type.</source>
          <target state="translated">複合項類型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>