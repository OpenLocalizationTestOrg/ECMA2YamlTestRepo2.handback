<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">705003c6f689a2b4d0080db9ca21f5c5de2802c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.DataSet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e81f67c950eee1723ceb2f2c9797e4546c3c92ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a3d97bb9d963824c560aaa35301932b8da2af76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an in-memory cache of data.</source>
          <target state="translated">代表記憶體中快取的資料。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The DataSet, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture.</source>
          <target state="translated">資料集，也就是從資料來源擷取資料的記憶體中快取是 ADO.NET 架構的主要元件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The DataSet consists of a collection of &lt;xref:System.Data.DataTable&gt; objects that you can relate to each other with &lt;xref:System.Data.DataRelation&gt; objects.</source>
          <target state="translated">資料集所組成的集合&lt;xref:System.Data.DataTable&gt;物件，您可以與彼此相關以&lt;xref:System.Data.DataRelation&gt;物件。&lt;/xref:System.Data.DataRelation&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can also enforce data integrity in the DataSet by using the &lt;xref:System.Data.UniqueConstraint&gt; and &lt;xref:System.Data.ForeignKeyConstraint&gt; objects.</source>
          <target state="translated">您可以使用強制在資料集中的資料完整性&lt;xref:System.Data.UniqueConstraint&gt;和&lt;xref:System.Data.ForeignKeyConstraint&gt;物件。&lt;/xref:System.Data.ForeignKeyConstraint&gt; &lt;/xref:System.Data.UniqueConstraint&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For further details about working with DataSet objects, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關使用資料集物件的詳細資訊，請參閱<bpt id="p1">[</bpt>資料集、 Datatable 和 Dataview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Whereas &lt;xref:System.Data.DataTable&gt; objects contain the data, the &lt;xref:System.Data.DataRelationCollection&gt; allows you to navigate though the table hierarchy.</source>
          <target state="translated">而&lt;xref:System.Data.DataTable&gt;物件包含的資料，&lt;xref:System.Data.DataRelationCollection&gt;可讓您巡覽資料表階層架構。&lt;/xref:System.Data.DataRelationCollection&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The tables are contained in a &lt;xref:System.Data.DataTableCollection&gt; accessed through the &lt;xref:System.Data.DataSet.Tables%2A&gt; property.</source>
          <target state="translated">資料表包含在&lt;xref:System.Data.DataTableCollection&gt;透過存取&lt;xref:System.Data.DataSet.Tables%2A&gt;屬性。&lt;/xref:System.Data.DataSet.Tables%2A&gt; &lt;/xref:System.Data.DataTableCollection&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When accessing &lt;xref:System.Data.DataTable&gt; objects, note that they are conditionally case sensitive.</source>
          <target state="translated">當存取&lt;xref:System.Data.DataTable&gt;物件，請注意，它們是有條件地區分大小寫。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, if one &lt;xref:System.Data.DataTable&gt; is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">例如，如果一個&lt;xref:System.Data.DataTable&gt;名為"mydatatable"和另一個名為"Mydatatable 」，用來搜尋的其中一個資料表的字串會視為區分大小寫。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">不過，如果"mydatatable 」 存在，"Mydatatable"並不會搜尋字串會視為為不區分大小寫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about working with &lt;xref:System.Data.DataTable&gt; objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關使用&lt;xref:System.Data.DataTable&gt;物件，請參閱<bpt id="p1">[</bpt>建立 DataTable<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A DataSet can read and write data and schema as XML documents.</source>
          <target state="translated">資料集可以讀寫資料和結構描述為 XML 文件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled.</source>
          <target state="translated">資料和結構描述可以會透過 HTTP 傳輸並啟用 XML 的任何平台上的任何應用程式，使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can save the schema as an XML schema with the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method, and both schema and data can be saved using the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">您可以將結構描述儲存為 XML 結構描述與&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，這個方法，而結構描述和資料可以儲存使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To read an XML document that includes both schema and data, use the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method.</source>
          <target state="translated">若要讀取 XML 文件包含結構描述和資料，使用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In a typical multiple-tier implementation, the steps for creating and refreshing a DataSet, and in turn, updating the original data are to:      1.</source>
          <target state="translated">在一般的多層式實作中，更新的原始資料的步驟，建立及重新整理資料集，並在輪中，為︰ 1。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Build and fill each &lt;xref:System.Data.DataTable&gt; in a DataSet with data from a data source using a &lt;xref:System.Data.Common.DataAdapter&gt;.</source>
          <target state="translated">建置和每個&lt;xref:System.Data.DataTable&gt;資料集中的資料來源中使用&lt;xref:System.Data.Common.DataAdapter&gt;.&lt;/xref:System.Data.Common.DataAdapter&gt;&lt;/xref:System.Data.DataTable&gt;填滿</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Change the data in individual &lt;xref:System.Data.DataTable&gt; objects by adding, updating, or deleting &lt;xref:System.Data.DataRow&gt; objects.</source>
          <target state="translated">變更中個別的資料&lt;xref:System.Data.DataTable&gt;藉由加入、 更新或刪除物件&lt;xref:System.Data.DataRow&gt;物件。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method to create a second DataSet that features only the changes to the data.</source>
          <target state="translated">叫用&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法來建立功能的資料變更的第二個資料集。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Call the &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; method of the &lt;xref:System.Data.Common.DataAdapter&gt;, passing the second DataSet as an argument.</source>
          <target state="translated">呼叫&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;方法&lt;xref:System.Data.Common.DataAdapter&gt;，做為引數傳遞的第二個資料集。&lt;/xref:System.Data.Common.DataAdapter&gt; &lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.Merge%2A&gt; method to merge the changes from the second DataSet into the first.</source>
          <target state="translated">叫用&lt;xref:System.Data.DataSet.Merge%2A&gt;方法，將合併到第一個從第二個資料集的變更。&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;xref:System.Data.DataSet.AcceptChanges%2A&gt; on the DataSet.</source>
          <target state="translated">叫用&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;資料集。&lt;/xref:System.Data.DataSet.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Alternatively, invoke &lt;xref:System.Data.DataSet.RejectChanges%2A&gt; to cancel the changes.</source>
          <target state="translated">或者，叫用&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;取消所做的變更。&lt;/xref:System.Data.DataSet.RejectChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The DataSet and &lt;xref:System.Data.DataTable&gt; objects inherit from &lt;xref:System.ComponentModel.MarshalByValueComponent&gt;, and support the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface for remoting.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 資料集和&lt;xref:System.Data.DataTable&gt;物件繼承自&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;，並支援&lt;xref:System.Runtime.Serialization.ISerializable&gt;遠端執行功能的介面。&lt;/xref:System.Runtime.Serialization.ISerializable&gt; &lt;/xref:System.ComponentModel.MarshalByValueComponent&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>These are the only ADO.NET objects that can be remoted.</source>
          <target state="translated">這些是唯一可以進行遠端通訊的 ADO.NET 物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Classes inherited from DataSet are not finalized by the garbage collector, because the finalizer has been suppressed in DataSet.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為完成項宣告已經隱藏在資料集中未從資料集繼承的類別完成，記憶體回收行程。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The derived class can call the &lt;xref:System.GC.ReRegisterForFinalize%2A&gt; method in its constructor to allow the class to be finalized by the garbage collector.</source>
          <target state="translated">在衍生的類別可以呼叫&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;其建構函式，以允許記憶體回收行程最終處理而類別中的方法。&lt;/xref:System.GC.ReRegisterForFinalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This implementation of the &lt;xref:System.Data.DataSet&gt; constructor takes no parameters, and creates a default name, "NewDataSet," for the new instance.</source>
          <target state="translated">這項實作&lt;xref:System.Data.DataSet&gt;建構函式不採用任何參數，並建立一個預設名稱，"NewDataSet，"新的執行個體。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest-level element in a schema definition.</source>
          <target state="translated">名稱&lt;xref:System.Data.DataSet&gt;，才能確保的 XML 表示法&lt;xref:System.Data.DataSet&gt;一律會有文件項目，也就是最高層級的項目結構描述定義中的名稱。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the given name.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有指定名稱的類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A name for the &lt;xref:System.Data.DataSet&gt; is required to ensure that the XML representation of the &lt;xref:System.Data.DataSet&gt; always has a name for the document element, which is the highest level element in a schema definition.</source>
          <target state="translated">名稱&lt;xref:System.Data.DataSet&gt;，才能確保的 XML 表示法&lt;xref:System.Data.DataSet&gt;一律會有文件項目，也就是最高的層級項目結構描述定義中的名稱。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名稱<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that has the given serialization information and context.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定的序列化資訊和內容。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">要序列化或還原序列化物件所需的資料。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">來源和目的端的給定序列化資料流。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The boolean value.</source>
          <target state="translated">布林值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Commits all the changes made to this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was loaded or since the last time AcceptChanges was called.</source>
          <target state="translated">認可對此所做的所有變更<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>自載入後，或自上次呼叫 AcceptChanges。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Both the &lt;xref:System.Data.DataRow&gt; and &lt;xref:System.Data.DataTable&gt; classes have AcceptChanges methods.</source>
          <target state="translated">同時&lt;xref:System.Data.DataRow&gt;和&lt;xref:System.Data.DataTable&gt;類別有 AcceptChanges 方法。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Calling &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; at the &lt;xref:System.Data.DataTable&gt; level causes the &lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; method for each &lt;xref:System.Data.DataRow&gt; to be called.</source>
          <target state="translated">呼叫&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;在&lt;xref:System.Data.DataTable&gt;層級原因&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;每個方法&lt;xref:System.Data.DataRow&gt;呼叫。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Similarly, invoking AcceptChanges on the &lt;xref:System.Data.DataSet&gt; causes &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; to be called on each table within the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">同樣地，叫用 AcceptChanges &lt;xref:System.Data.DataSet&gt; &lt;xref:System.Data.DataTable.AcceptChanges%2A&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;中每一個資料表上呼叫&lt;/xref:System.Data.DataTable.AcceptChanges%2A&gt;會導致&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In this manner, you have multiple levels at which the method can be invoked.</source>
          <target state="translated">如此一來，在中，您必須在可以叫用此方法的多個層級。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Calling the AcceptChanges of the &lt;xref:System.Data.DataSet&gt; enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.</source>
          <target state="translated">呼叫的 AcceptChanges&lt;xref:System.Data.DataSet&gt;可讓您叫用所有從屬物件 （例如，資料表和資料列） 中的某個呼叫的方法。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you call <ph id="ph1">`AcceptChanges`</ph> on the <ph id="ph2">`DataSet`</ph>, any &lt;xref:System.Data.DataRow&gt; objects still in edit-mode end their edits successfully.</source>
          <target state="translated">當您呼叫<ph id="ph1">`AcceptChanges`</ph>上<ph id="ph2">`DataSet`</ph>，任何&lt;xref:System.Data.DataRow&gt;物件仍在編輯模式中的順利結束編輯。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataRow.RowState%2A&gt; property of each &lt;xref:System.Data.DataRow&gt; also changes; <ph id="ph1">`Added`</ph> and <ph id="ph2">`Modified`</ph> rows become <ph id="ph3">`Unchanged`</ph>, and <ph id="ph4">`Deleted`</ph> rows are removed.</source>
          <target state="translated">每個&lt;xref:System.Data.DataRow&gt;&lt;xref:System.Data.DataRow.RowState%2A&gt;屬性也會變更。<ph id="ph1">`Added`</ph>和<ph id="ph2">`Modified`</ph>資料列會變成<ph id="ph3">`Unchanged`</ph>，和<ph id="ph4">`Deleted`</ph>會移除資料列。 &lt;/xref:System.Data.DataRow.RowState%2A&gt;&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`DataSet`</ph> contains &lt;xref:System.Data.ForeignKeyConstraint&gt; objects, invoking the <ph id="ph2">`AcceptChanges`</ph> method also causes the &lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; to be enforced.</source>
          <target state="translated">如果<ph id="ph1">`DataSet`</ph>包含&lt;xref:System.Data.ForeignKeyConstraint&gt;叫用的物件<ph id="ph2">`AcceptChanges`</ph>方法也會導致&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;強制執行。&lt;/xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt; &lt;/xref:System.Data.ForeignKeyConstraint&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">`AcceptChanges`</ph> and <ph id="ph4">`RejectChanges`</ph> only apply to <ph id="ph5">`DataRow`</ph> related changes (that is, Add, Remove, Delete, and Modify).</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> <ph id="ph2"> &gt;  </ph> <ph id="ph3">`AcceptChanges`</ph>和<ph id="ph4">`RejectChanges`</ph>只會套用到<ph id="ph5">`DataRow`</ph>相關的變更 （亦即，新增、 移除、 刪除和修改）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它們並不適用於結構描述或結構化變更。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter.</source>
          <target state="translated">&gt;&gt; 如果資料集時已填滿使用 DataAdapter 呼叫 AcceptChanges 不會回到資料來源複寫這些變更。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In that situation, call &lt;xref:System.Data.Common.DataAdapter.Update%2A&gt; instead.</source>
          <target state="translated">在此情況下，呼叫&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;改用。&lt;/xref:System.Data.Common.DataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> for more information.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>以 Dataadapter 更新資料來源<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept>如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Begins the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">開始初始化<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是用於表單或另一個元件所使用。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 設計環境會使用這個方法來開始初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.EndInit%2A&gt; method ends the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法結束初始化。&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Using the BeginInit and &lt;xref:System.Data.DataSet.EndInit%2A&gt; methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用 BeginInit 和&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法可防止控制項完全初始化之前使用。&lt;/xref:System.Data.DataSet.EndInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether string comparisons within <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are case-sensitive.</source>
          <target state="translated">取得或設定值，指出是否字串內的比較<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件會區分大小寫。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The CaseSensitive property affects how sorting, searching, and filtering operations are performed on each &lt;xref:System.Data.DataTable&gt; object contained in a &lt;xref:System.Data.DataSet&gt; when using the &lt;xref:System.Data.DataTable.Select%2A&gt; method.</source>
          <target state="translated">CaseSensitive 屬性會影響如何在每個執行排序、 搜尋和篩選作業&lt;xref:System.Data.DataTable&gt;中所含物件&lt;xref:System.Data.DataSet&gt;時使用&lt;xref:System.Data.DataTable.Select%2A&gt;方法。&lt;/xref:System.Data.DataTable.Select%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>By default, setting the CaseSensitive property for a &lt;xref:System.Data.DataSet&gt; also sets the &lt;xref:System.Data.DataTable.CaseSensitive%2A&gt; property of each associated &lt;xref:System.Data.DataTable&gt; to the same value.</source>
          <target state="translated">根據預設，設定的 CaseSensitive 屬性&lt;xref:System.Data.DataSet&gt;也會設定&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;的每個相關聯的屬性&lt;xref:System.Data.DataTable&gt;為相同的值。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if string comparisons are case-sensitive; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果字串比較會區分大小寫。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Clears the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of any data by removing all rows in all tables.</source>
          <target state="translated">清除<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>藉由移除所有的資料表中的所有資料列的任何資料。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Data.DataSet&gt; is bound to an &lt;xref:System.Xml.XmlDataDocument&gt;, calling Clear or &lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; raises the &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果&lt;xref:System.Data.DataSet&gt;繫結到&lt;xref:System.Xml.XmlDataDocument&gt;呼叫清除或&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt;引發&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Data.DataTable.Clear%2A?displayProperty=fullName&gt; 、&lt;/xref:System.Xml.XmlDataDocument&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">若要避免這種情況下，會周遊一次移除一個每個資料列的每個資料表。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Copies the structure of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, including all <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> schemas, relations, and constraints.</source>
          <target state="translated">結構複製<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，包括所有<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>結構描述、 關聯和條件約束。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Does not copy any data.</source>
          <target state="translated">不會複製任何資料。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same schema as the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but none of the data.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含相同的結構描述與目前<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，但沒有任何資料。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Copies both the structure and data for this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將結構和資料複製這個<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the same structure (table schemas, relations, and constraints) and data as this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>具有相同的結構 （資料表結構描述、 關聯和條件約束） 和資料，因為這樣<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If these classes have been subclassed, the copy will also be of the same subclasses.</source>
          <target state="translated">如果這些類別具有已子類別化，複製也會屬於相同的子類別。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, in the same sequence as the tables appear in the &lt;xref:System.Data.DataSet.Tables*&gt; collection.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與每個設定的其中一個結果<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，請在相同排序資料表中顯示的樣子&lt;xref:System.Data.DataSet.Tables*&gt;集合。&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In order to ensure the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">若要確保結果集內傳回的順序&lt;xref:System.Data.DataTableReader&gt;，如果&lt;xref:System.Data.DataTable&gt;內&lt;xref:System.Data.DataSet&gt;是空的它會以空的結果集內傳回<ph id="ph1">`DataTableReader`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含一或多個結果集，對應至<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含來源中的執行個體<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with one result set per <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與每個設定的其中一個結果<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In order to ensure that the order of the result sets within the returned &lt;xref:System.Data.DataTableReader&gt;, if a &lt;xref:System.Data.DataTable&gt; within the &lt;xref:System.Data.DataSet&gt; is empty, it is represented by an empty result set within the returned <ph id="ph1">`DataTableReader`</ph>.</source>
          <target state="translated">為了確保結果的順序設定內傳回&lt;xref:System.Data.DataTableReader&gt;，如果&lt;xref:System.Data.DataTable&gt;內&lt;xref:System.Data.DataSet&gt;是空的它會以空的結果集內傳回<ph id="ph1">`DataTableReader`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTableReader&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because this overloaded version allows you to supply a list of <ph id="ph1">`DataTable`</ph> instances as parameters, you can specify the order in which the result sets appear within the returned <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">因為這個多載的版本，可讓您提供一份<ph id="ph1">`DataTable`</ph>做為參數的情況下，您可以指定結果集內傳回的出現的順序<ph id="ph2">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An array of DataTables providing the order of the result sets to be returned in the <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">提供的順序結果的 Datatable 的陣列設定中傳回<bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing one or more result sets, corresponding to the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances contained within the source <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTableReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含一或多個結果集，對應至<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含來源中的執行個體<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The returned result sets are in the order specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataTables</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated">傳回的結果集位於所指定的順序<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">dataTables</ph> <ept id="p1">&lt;/code&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the current <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定目前的名稱<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">名稱<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets a custom view of the data contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to allow filtering, searching, and navigating using a custom <bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得資料中所包含的自訂檢視<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>允許篩選、 搜尋和瀏覽 使用自訂<bpt id="p2">&lt;xref href="System.Data.DataViewManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataViewManager&gt; returned by the DefaultViewManager property allows you to create custom settings for each &lt;xref:System.Data.DataTable&gt; in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataViewManager&gt;屬性可讓您建立自訂設定的每個&lt;xref:System.Data.DataTable&gt;在&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; DefaultViewManager 所傳回&lt;/xref:System.Data.DataViewManager&gt;的</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>When you obtain a &lt;xref:System.Data.DataView&gt; from a &lt;xref:System.Data.DataTable&gt;, the sort order, filtering, and &lt;xref:System.Data.DataViewRowState&gt; are configured according to the settings in the DefaultViewManager property.</source>
          <target state="translated">當您取得&lt;xref:System.Data.DataView&gt;從&lt;xref:System.Data.DataTable&gt;，排序次序、 篩選和&lt;xref:System.Data.DataViewRowState&gt;根據 DefaultViewManager 屬性中的設定會設定。&lt;/xref:System.Data.DataViewRowState&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataViewManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定&lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">具型別&lt;xref:System.Data.DataSet&gt;來判斷其&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;&lt;/xref:System.Data.DataSet&gt;還原序列化時，就可以呼叫這個方法</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; instance that is passed during deserialization of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;還原序列化期間所傳入的執行個體<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列舉，指出是否已省略裝載的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Determines the &lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt; for a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">決定&lt;xref:System.Data.DataSet.SchemaSerializationMode*&gt;如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.SchemaSerializationMode*&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method can be called when deserializing a typed &lt;xref:System.Data.DataSet&gt; to determine its &lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.</source>
          <target state="translated">具型別&lt;xref:System.Data.DataSet&gt;來判斷其&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;.&lt;/xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;&lt;/xref:System.Data.DataSet&gt;還原序列化時，就可以呼叫這個方法</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that a <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ， <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>的受保護建構函式<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph>以遠端處理案例中還原序列化期間叫用。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that a <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>’s protected constructor <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;， <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的受保護建構函式<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.%23ctor%2A<ph id="ph2">&amp;gt;</ph>以遠端處理案例中還原序列化期間叫用。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列舉，指出是否已省略裝載的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Ends the initialization of a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used on a form or used by another component.</source>
          <target state="translated">初始化結束<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是用於表單或另一個元件所使用。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 設計環境會使用這個方法來結束初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method starts the initialization.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;方法會啟動初始化。&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Data.DataSet.BeginInit%2A&gt; and EndInit methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.BeginInit%2A&gt;和 EndInit 方法可防止控制項完全初始化之前使用。&lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</source>
          <target state="translated">取得或設定值，指出是否嘗試任何 update 作業時，會遵循條件約束規則。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Constraints are set at the &lt;xref:System.Data.DataTable&gt; level (&lt;xref:System.Data.DataTable.Constraints%2A&gt; property).</source>
          <target state="translated">條件約束會在設定&lt;xref:System.Data.DataTable&gt;層級 (&lt;xref:System.Data.DataTable.Constraints%2A&gt;屬性)。&lt;/xref:System.Data.DataTable.Constraints%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about creating constraints, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關建立條件約束的詳細資訊，請參閱<bpt id="p1">[</bpt>DataTable 條件約束<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if rules are enforced; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果會強制執行規則。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enforced.</source>
          <target state="translated">無法強制執行一個或多個條件約束。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the collection of customized user information associated with the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得相關聯的自訂的使用者資訊的集合<bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The ExtendedProperties property enables you to store custom information with the <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">ExtendedProperties 屬性可讓您儲存自訂的資訊與<ph id="ph1">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>For example, you might store a time when the data should be refreshed.</source>
          <target state="translated">例如，您可能會儲存資料應該重新整理的時間。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Extended properties must be of type &lt;xref:System.String&gt; if you want them persisted when the &lt;xref:System.Data.DataSet&gt; is written as XML.</source>
          <target state="translated">擴充的屬性的類型必須是&lt;xref:System.String&gt;如果您想要它們時保存&lt;xref:System.Data.DataSet&gt;寫入為 XML。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with all custom user information.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.PropertyCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>以自訂使用者資訊。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains all changes made to it since it was loaded or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was last called.</source>
          <target state="translated">取得一份<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含所有對它自載入後，或自&lt;xref:System.Data.DataSet.AcceptChanges*&gt;上次呼叫。&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;xref:System.Data.DataSet&gt; that contains a copy of all rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">建立新&lt;xref:System.Data.DataSet&gt;包含的所有資料列的原始複本&lt;xref:System.Data.DataSet&gt;具有暫止的變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new &lt;xref:System.Data.DataSet&gt; if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">關聯性條件約束會造成其他不變的資料列新增至新&lt;xref:System.Data.DataSet&gt;如果變更的資料列包含對應至外部索引鍵中的變更資料列的主索引鍵。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The method returns <ph id="ph1">`null`</ph> if there are no rows in the original &lt;xref:System.Data.DataSet&gt; that have pending changes.</source>
          <target state="translated">方法會傳回<ph id="ph1">`null`</ph>是否有任何資料列在原始&lt;xref:System.Data.DataSet&gt;具有暫止的變更。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A copy of the changes from this <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it and later be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">從這個變更複本<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，可以執行的動作上及更新版本中使用&lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;合併</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>If no changed rows are found, the method returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果發現任何變更的資料列，則方法會傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing all changes made to it since it was last loaded, or since &lt;xref:System.Data.DataSet.AcceptChanges*&gt; was called, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得一份<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含自上次載入後，或之後所做的所有變更&lt;xref:System.Data.DataSet.AcceptChanges*&gt;呼叫，以進行篩選<bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Data.DataSet.AcceptChanges*&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is used to produce a second &lt;xref:System.Data.DataSet&gt; object that contains only the changes introduced into the original.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法用來產生第二個&lt;xref:System.Data.DataSet&gt;導入原始的物件，其中包含所做的變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">使用<ph id="ph1">`rowStates`</ph>引數以指定的變更應該包含新的物件類型。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>This returned copy is designed to be merged back in to this original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">傳回此複本為了中能順利合併回至這個原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Relationship constraints may cause parent rows marked <ph id="ph1">`Unchanged`</ph> to be included.</source>
          <target state="translated">關聯性條件約束可能會導致父資料列標示為<ph id="ph1">`Unchanged`</ph>包含。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If no rows of the desired &lt;xref:System.Data.DataRowState&gt; are found, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果所需的任何資料列&lt;xref:System.Data.DataRowState&gt;找不到，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法會傳回<ph id="ph1">`null`</ph>。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A filtered copy of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can have actions performed on it, and subsequently be merged back in using &lt;xref:System.Data.DataSet.Merge*&gt;.</source>
          <target state="translated">已篩選的複本<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，可以執行的動作，之後再使用&lt;xref:System.Data.DataSet.Merge*&gt;.&lt;/xref:System.Data.DataSet.Merge*&gt;內合併</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>If no rows of the desired <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> are found, the method returns <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果所需的任何資料列<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>找不到，則方法會傳回<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the DataSet.</source>
          <target state="translated">取得一份<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>資料集。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The specified schema set.</source>
          <target state="translated">指定的結構描述設定。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A copy of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要序列化所需的資料填入的序列化資訊物件<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that holds the serialized data associated with the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>存與相關聯之序列化的資料<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; that contains the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;，其中包含來源和目的地的序列化資料流相關聯<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Returns a serializable &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">傳回可序列化&lt;xref:System.Xml.Schema.XMLSchema&gt;執行個體。&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XMLSchema&gt; instance.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XMLSchema&gt;執行個體。&lt;/xref:System.Xml.Schema.XMLSchema&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Deserializes the table data from the binary or XML stream.</source>
          <target state="translated">還原序列化的二進位檔或 XML 資料流的資料表資料。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>執行個體。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The streaming context.</source>
          <target state="translated">資料流的內容。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回儲存在資料的 XML 表示法<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXml%2A&gt; with &lt;xref:System.Data.XmlWriteMode&gt; set to &lt;xref:System.Data.XmlWriteMode&gt;.</source>
          <target state="translated">呼叫此方法等於呼叫&lt;xref:System.Data.DataSet.WriteXml%2A&gt;設&lt;xref:System.Data.XmlWriteMode&gt;為&lt;xref:System.Data.XmlWriteMode&gt;.&lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.XmlWriteMode&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>GetXml returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXml%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXml 傳回 XML 字串形式，因此需要以更多成本負擔比&lt;xref:System.Data.DataSet.WriteXml%2A&gt;寫入 XML 檔案。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果您要建置&lt;xref:System.Data.DataSet&gt;使用結構描述推斷和序列化它使用 XML 或 Web 服務的資料行順序可能會變更。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A string that is a representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">字串中儲存之資料的表示法<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Returns the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回 XML 結構描述中儲存之資料的 XML 表示法<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Calling this method is identical to calling &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;, except that only the primary schema is written.</source>
          <target state="translated">呼叫此方法等於呼叫&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;，只不過寫入主要結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>GetXmlSchema returns XML as a string, and therefore requires more overhead than &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; to write XML to a file.</source>
          <target state="translated">GetXmlSchema 傳回 XML 字串形式，因此需要以更多成本負擔比&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;寫入 XML 檔案。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>If you build a &lt;xref:System.Data.DataSet&gt; using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果您要建置&lt;xref:System.Data.DataSet&gt;使用結構描述推斷和序列化它使用 XML 或 Web 服務的資料行順序可能會變更。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>String that is the XML Schema for the XML representation of the data stored in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">也就字串的 XML 結構描述中儲存之資料的 XML 表示法<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有變更，包括新增、 刪除或修改過的資料列。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有變更，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has changes, including new, deleted, or modified rows, filtered by <bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有變更，包括新增、 刪除或修改過的資料列，以進行篩選<bpt id="p2">&lt;xref href="System.Data.DataRowState"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Examine the &lt;xref:System.Data.DataSet.HasChanges%2A&gt; property of the <ph id="ph1">`DataSet`</ph> before invoking the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method.</source>
          <target state="translated">檢查&lt;xref:System.Data.DataSet.HasChanges%2A&gt;屬性<ph id="ph1">`DataSet`</ph>叫用之前&lt;xref:System.Data.DataSet.GetChanges%2A&gt;方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt; &lt;/xref:System.Data.DataSet.HasChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.DataRowState"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has changes; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有變更，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether there are errors in any of the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects within this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得值，指出是否有錯誤的任何<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件在這個<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Each &lt;xref:System.Data.DataTable&gt; in a &lt;xref:System.Data.DataSet&gt; also has a &lt;xref:System.Data.DataTable.HasErrors%2A&gt; property.</source>
          <target state="translated">每個&lt;xref:System.Data.DataTable&gt;中&lt;xref:System.Data.DataSet&gt;還有&lt;xref:System.Data.DataTable.HasErrors%2A&gt;屬性。&lt;/xref:System.Data.DataTable.HasErrors%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`HasErrors`</ph> property of the <ph id="ph2">`DataSet`</ph> first, to determine if any table has errors, before checking individual &lt;xref:System.Data.DataTable&gt; objects.</source>
          <target state="translated">使用<ph id="ph1">`HasErrors`</ph>屬性<ph id="ph2">`DataSet`</ph>首先，判斷資料表是否錯誤，檢查個別之前&lt;xref:System.Data.DataTable&gt;物件。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`DataTable`</ph> has errors, the &lt;xref:System.Data.DataTable.GetErrors%2A&gt; method returns an array of &lt;xref:System.Data.DataRow&gt; objects containing the errors.</source>
          <target state="translated">如果<ph id="ph1">`DataTable`</ph>有錯誤，錯誤&lt;xref:System.Data.DataTable.GetErrors%2A&gt;方法傳回的陣列&lt;xref:System.Data.DataRow&gt;包含錯誤的物件。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable.GetErrors%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if any table contains an error;otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果任何資料表包含錯誤; 否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.Stream&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用於從指定的 XML 結構描述&lt;xref:System.IO.Stream&gt;至<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Stream" name="Stream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要從其中讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要排除的結構描述推斷的命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.IO.TextReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用於從指定的 XML 結構描述&lt;xref:System.IO.TextReader&gt;至<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要從其中讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要排除的結構描述推斷的命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified file to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">從指定的檔案來套用 XML 結構描述<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The name of the file (including the path) from which to read the schema.</source>
          <target state="translated">要從其中讀取的結構描述 （包括路徑） 的檔案名稱。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要排除的結構描述推斷的命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Applies the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">適用於從指定的 XML 結構描述&lt;xref:System.Xml.XmlReader&gt;至<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XMLReader" name="XMLReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要從其中讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要排除的結構描述推斷的命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Occurs after the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">之後，就會發生<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已初始化。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Data.DataSet.IsInitialized%2A&gt;.</source>
          <target state="translated">如需詳細資訊，請參閱&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;.&lt;/xref:System.Data.DataSet.IsInitialized%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Deserialize all of the tables data of the DataSet from the binary or XML stream.</source>
          <target state="translated">還原序列化的所有資料表資料的二進位或 XML 資料流中的資料集。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Inspects the format of the serialized representation of the <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">會檢查格式的序列化表示<bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">此成員支援.NET Framework 基礎結構，並不是直接從您的程式碼使用。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> represents a <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> serialized in its binary format, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> otherwise.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定<bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>代表<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>以二進位格式，序列化<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>否則。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is initialized.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>已初始化。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Returns the status of the &lt;xref:System.Data.DataSet&gt; while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">傳回的狀態&lt;xref:System.Data.DataSet&gt;時它由所建構，例如 Visual Studio。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.BeginInit%2A&gt; method sets it to <ph id="ph1">`false`</ph> and &lt;xref:System.Data.DataSet.EndInit%2A&gt; method sets it to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;方法將它設定為<ph id="ph1">`false`</ph>和&lt;xref:System.Data.DataSet.EndInit%2A&gt;方法將它設定為<ph id="ph2">`true`</ph>。&lt;/xref:System.Data.DataSet.EndInit%2A&gt; &lt;/xref:System.Data.DataSet.BeginInit%2A&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to indicate the component has completed initialization; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示元件已完成初始化，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">填滿<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>從資料來源，使用提供的值與<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用的陣列<bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>提供結構描述和命名空間資訊的執行個體。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供的技巧，以便填滿單一&lt;xref:System.Data.DataTable&gt;從擷取的資料&lt;xref:System.Data.IDataReader&gt;執行個體。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從&lt;xref:System.Data.IDataReader&gt;分成多個資料表內&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.IDataReader&gt;載入多個結果集</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 載入作業將會失敗並&lt;xref:System.InvalidOperationException&gt;若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式&lt;xref:System.Data.LoadOption&gt;列舉型別。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">請參閱文件&lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt;如需有關使用此參數的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您指定的陣列&lt;xref:System.Data.DataTable&gt;執行個體，指出資料表對應至每一個結果集從讀取器的載入順序。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Loadmethod 填滿每個提供&lt;xref:System.Data.DataTable&gt;具有資料從單一結果集，從來源資料讀取器執行個體。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後，Loadmethod 會移至下一個設定中讀取器，直到沒有其他結果集的結果。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;類別。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">中的值<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，指出如何資料列已在<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>內<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>會結合共用相同的主索引鍵的內送資料列。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>情況下，要從中載入方法會擷取名稱和命名空間的資訊。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Each of these tables must be a member of the <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這些資料表必須是成員<bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含由此<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of strings to supply the names for the tables within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">填滿<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>從資料來源，使用提供的值與<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用提供的內的資料表名稱的字串陣列<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供的技巧，以便填滿單一&lt;xref:System.Data.DataTable&gt;從擷取的資料&lt;xref:System.Data.IDataReader&gt;執行個體。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從多個結果集載入<ph id="ph1">`IDataReader`</ph>分成多個資料表內<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 載入作業將會失敗並&lt;xref:System.InvalidOperationException&gt;若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式&lt;xref:System.Data.LoadOption&gt;列舉型別。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">請參閱文件&lt;xref:System.Data.DataTable.Load%2A&gt;如需有關使用此參數的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您用來指定資料表名稱，表示對應至每一個結果集載入從讀取器的資料表順序的陣列。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Load`</ph> method attempts to find a table within the <ph id="ph2">`DataSet`</ph> matching the name found in the array of table names, in order.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法會嘗試尋找內資料表<ph id="ph2">`DataSet`</ph>陣列中的順序中的資料表名稱，找到符合的名稱。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>If a matching table is found, that table is loaded with the content of the current result set.</source>
          <target state="translated">如果找到相符的資料表，該資料表會載入目前的結果集的內容。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set.</source>
          <target state="translated">如果找到相符的資料表，建立資料表所使用的資料表名稱陣列中提供的名稱，並從結果集推斷新的資料表結構描述。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>After each result set, the <ph id="ph1">`Load`</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後,<ph id="ph1">`Load`</ph>方法會移到下一個結果集內讀取器，直到沒有其他結果集。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The default namespace associated with <ph id="ph1">`DataSet`</ph>, if any, is associated with each newly created <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">與相關聯的預設命名空間<ph id="ph1">`DataSet`</ph>，如果任何項目，為新建立的每個相關聯<ph id="ph2">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;類別。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">中的值<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，指出如何資料列已在<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>內<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>會結合共用相同的主索引鍵的內送資料列。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An array of strings, from which the <bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method retrieves table name information.</source>
          <target state="translated">Strings 的陣列，從中<bpt id="p1">&lt;xref uid="langword_csharp_Load" name="Load" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法會擷取資料表名稱資訊。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Fills a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with values from a data source using the supplied <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, using an array of <bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> instances to supply the schema and namespace information.</source>
          <target state="translated">填滿<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>從資料來源，使用提供的值與<bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，使用的陣列<bpt id="p3">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>提供結構描述和命名空間資訊的執行個體。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataTable.Load%2A&gt; method provides a technique for filling a single &lt;xref:System.Data.DataTable&gt; with data, retrieved from an &lt;xref:System.Data.IDataReader&gt; instance.</source>
          <target state="translated">&lt;xref:System.Data.DataTable.Load%2A&gt;方法提供的技巧，以便填滿單一&lt;xref:System.Data.DataTable&gt;從擷取的資料&lt;xref:System.Data.IDataReader&gt;執行個體。&lt;/xref:System.Data.IDataReader&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an &lt;xref:System.Data.IDataReader&gt; into multiple tables within a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從&lt;xref:System.Data.IDataReader&gt;分成多個資料表內&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.IDataReader&gt;載入多個結果集</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The load operation will fail with an &lt;xref:System.InvalidOperationException&gt; if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 載入作業將會失敗並&lt;xref:System.InvalidOperationException&gt;若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the &lt;xref:System.Data.LoadOption&gt; enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式&lt;xref:System.Data.LoadOption&gt;列舉型別。&lt;/xref:System.Data.LoadOption&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt; method for more information on using this parameter.</source>
          <target state="translated">請參閱文件&lt;xref:System.Data.DataTable&gt;&lt;xref:System.Data.DataTable.Load%2A&gt;如需有關使用此參數的方法。&lt;/xref:System.Data.DataTable.Load%2A&gt;&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a &lt;xref:System.Data.FillErrorEventHandler&gt; delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated"><ph id="ph1">`errorHandler`</ph>參數是&lt;xref:System.Data.FillErrorEventHandler&gt;載入資料時，發生錯誤時呼叫的程序是指的委派。&lt;/xref:System.Data.FillErrorEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the &lt;xref:System.Data.DataTable&gt; being filled.</source>
          <target state="translated">&lt;xref:System.Data.FillErrorEventArgs&gt;參數傳遞至程序提供可讓您擷取發生的錯誤，目前的資料，資料列的相關資訊的屬性和&lt;xref:System.Data.DataTable&gt;被填入。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">使用此委派機制，而不是簡單的 try/catch 區塊，可讓您判斷錯誤處理狀況，並繼續處理，如果您想。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.FillErrorEventArgs&gt; parameter supplies a &lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt; property: set this property to <ph id="ph1">`true`</ph> to indicate that you have handled the error and wish to continue processing; set the property to <ph id="ph2">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">&lt;xref:System.Data.FillErrorEventArgs&gt;參數提供&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;屬性︰ 將此屬性設定為<ph id="ph1">`true`</ph>，表示處理錯誤和想来繼續處理，將屬性設定為<ph id="ph2">`false`</ph>指出您想要停止處理。&lt;/xref:System.Data.FillErrorEventArgs.Continue%2A&gt; &lt;/xref:System.Data.FillErrorEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">請注意，將屬性設<ph id="ph1">`false`</ph>導致觸發要擲回例外狀況的問題將程式碼。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of &lt;xref:System.Data.DataTable&gt; instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您指定的陣列&lt;xref:System.Data.DataTable&gt;執行個體，指出資料表對應至每一個結果集從讀取器的載入順序。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The Loadmethod fills each supplied &lt;xref:System.Data.DataTable&gt; instance with data from a single result set from the source data reader.</source>
          <target state="translated">Loadmethod 填滿每個提供&lt;xref:System.Data.DataTable&gt;具有資料從單一結果集，從來源資料讀取器執行個體。&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後，Loadmethod 會移至下一個設定中讀取器，直到沒有其他結果集的結果。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The name resolution scheme for this method is the same as that followed by the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method of the &lt;xref:System.Data.Common.DbDataAdapter&gt; class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;方法的&lt;xref:System.Data.Common.DbDataAdapter&gt;類別。&lt;/xref:System.Data.Common.DbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides one or more result sets.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration that indicates how rows already in the <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instances within the <bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">中的值<bpt id="p1">&lt;xref href="System.Data.LoadOption"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>列舉，指出如何資料列已在<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>內<bpt id="p3">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>會結合共用相同的主索引鍵的內送資料列。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate to call when an error occurs while loading data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.FillErrorEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>載入資料卻發生錯誤時要呼叫的委派。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances, from which the Load method retrieves name and namespace information.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>情況下，要從中載入方法會擷取名稱和命名空間的資訊。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">取得或設定用來比較字串時，在資料表中的地區設定資訊。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The Locale property specifies the locale for which sorting applies.</source>
          <target state="translated">地區設定屬性指定的地區設定的排序會套用。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>By default, setting the Locale for a &lt;xref:System.Data.DataSet&gt; also sets the Locale for each &lt;xref:System.Data.DataTable&gt; object in that <ph id="ph1">`DataSet`</ph> to the same value.</source>
          <target state="translated">根據預設，設定的地區設定&lt;xref:System.Data.DataSet&gt;也會針對每個設定的地區設定&lt;xref:System.Data.DataTable&gt;中的物件<ph id="ph1">`DataSet`</ph>為相同的值。&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In columns that contain expressions, the &lt;xref:System.StringComparison&gt; is used.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 包含運算式、 資料行中&lt;xref:System.StringComparison&gt;用。&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.StringComparison&gt; is ignored.</source>
          <target state="translated">&lt;xref:System.StringComparison&gt;會被忽略。&lt;/xref:System.StringComparison&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; that contains data about the user's machine locale.</source>
          <target state="translated">A &lt;xref:System.Globalization.CultureInfo&gt;，其中包含使用者的電腦地區設定的相關資料。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">合併的陣列<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到目前的物件<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集通常比較小，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。&lt;/xref:System.Data.DataRowState&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of a merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用合併，結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件合併至<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將指定的合併<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其結構描述到目前<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The Merge method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">Merge 方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The Merge method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Merge 方法通常稱為結尾的一系列程序牽涉到驗證的變更、 調整錯誤、 變更，更新資料來源和最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the Merge method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;合併方法。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>When the Merge method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當合併方法呼叫時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將合併的資料和結構描述。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>One or more constraints cannot be enabled.</source>
          <target state="translated">無法啟用一或多個條件約束。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將指定的合併<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其結構描述到目前<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將合併的資料和結構描述。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">table</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding any changes in this <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> according to the given argument.</source>
          <target state="translated">將指定的合併<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其結構描述到目前<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或捨棄任何變更，在這個<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>根據指定的引數。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將合併的資料和結構描述。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在目前的變更<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Merges an array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects into the current <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">合併的陣列<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到目前的物件<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或捨棄變更<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和處理的不相容的結構描述，根據指定的引數。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">為了方便說明&lt;xref:System.Data.DataSet.Merge%2A&gt;方法，我們使用 「 目標 」 來表示目前&lt;xref:System.Data.DataSet&gt;，和 「 來源 」 名稱的第二個 （參數） &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目標&lt;xref:System.Data.DataSet&gt;會如此命名，因為它是在其動作 （合併），就會發生的物件。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet&gt;稱為 「 來源 」，因為它包含的資訊不會變更，但改為合併到目前&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet&gt;第二個</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects to be merged into the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件合併至<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在變更<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema with the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the current <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">將指定的合併<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其結構描述與目前<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或捨棄目前的變更<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和處理的不相容的結構描述，根據指定的引數。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To facilitate explanation of the &lt;xref:System.Data.DataSet.Merge%2A&gt; method, we use "target" to signify the current &lt;xref:System.Data.DataSet&gt;, and "source" to name the second (parameter) &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">為了方便說明&lt;xref:System.Data.DataSet.Merge%2A&gt;方法，我們使用 「 目標 」 來表示目前&lt;xref:System.Data.DataSet&gt;，和 「 來源 」 名稱的第二個 （參數） &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The target &lt;xref:System.Data.DataSet&gt; is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目標&lt;xref:System.Data.DataSet&gt;會如此命名，因為它是在其動作 （合併），就會發生的物件。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The second &lt;xref:System.Data.DataSet&gt; is called a "source" because the information it contains does not change, but instead is merged into the current &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet&gt;稱為 「 來源 」，因為它包含的資訊不會變更，但改為合併到目前&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet&gt;第二個</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將合併的資料和結構描述。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在目前的變更<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Merges a specified <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and its schema into the current <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, preserving or discarding changes in the <bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">將指定的合併<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>及其結構描述到目前<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 保留或捨棄變更<bpt id="p3">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>和處理的不相容的結構描述，根據指定的引數。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is used to merge two &lt;xref:System.Data.DataSet&gt; objects that have largely similar schemas.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;方法用來合併兩個&lt;xref:System.Data.DataSet&gt;有大致相似的結構描述的物件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有的&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>This allows the client application to have a refreshed &lt;xref:System.Data.DataSet&gt; with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理&lt;xref:System.Data.DataSet&gt;從資料來源的最新的資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.Merge%2A&gt; method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.Merge%2A&gt;結尾的一系列程序，包含驗證變更、 調解錯誤，更新資料來源的變更，以及最後重新整理現有&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;通常呼叫方法&lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">Middle 用戶端應用程式，它是具有單一按鈕，讓使用者可以按一下，收集變更的資料，並送回中介層元件之前先進行驗證。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>In this scenario, the &lt;xref:System.Data.DataSet.GetChanges%2A&gt; method is first invoked.</source>
          <target state="translated">在此案例中，&lt;xref:System.Data.DataSet.GetChanges%2A&gt;首次叫用方法。&lt;/xref:System.Data.DataSet.GetChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>That method returns a second &lt;xref:System.Data.DataSet&gt; optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個&lt;xref:System.Data.DataSet&gt;適合用來驗證和合併。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>This second &lt;xref:System.Data.DataSet&gt; object contains only the &lt;xref:System.Data.DataTable&gt; and &lt;xref:System.Data.DataRow&gt; objects that were changed, resulting in a subset of the original &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">此第二個&lt;xref:System.Data.DataSet&gt;物件只包含&lt;xref:System.Data.DataTable&gt;與&lt;xref:System.Data.DataRow&gt;物件的已變更，導致原始&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;子集&lt;/xref:System.Data.DataRow&gt;&lt;/xref:System.Data.DataTable&gt;&lt;/xref:System.Data.DataSet&gt;的</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The middle tier can then send back either a new &lt;xref:System.Data.DataSet&gt; that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新&lt;xref:System.Data.DataSet&gt;（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned &lt;xref:System.Data.DataSet&gt; can be merged back into the client application's original &lt;xref:System.Data.DataSet&gt; with the &lt;xref:System.Data.DataSet.Merge%2A&gt; method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回&lt;xref:System.Data.DataSet&gt;可以合併至用戶端應用程式的原始&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.Merge%2A&gt;方法。&lt;/xref:System.Data.DataSet.Merge%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataSet.Merge%2A&gt; method is called, the schemas of the two &lt;xref:System.Data.DataSet&gt; objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當&lt;xref:System.Data.DataSet.Merge%2A&gt;呼叫方法時，兩個結構描述&lt;xref:System.Data.DataSet&gt;物件進行比較，因為它是可能的結構描述可能已經變更。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.Merge%2A&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If the source &lt;xref:System.Data.DataSet&gt; contains schema elements (added &lt;xref:System.Data.DataColumn&gt; objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph1">`missingSchemaAction`</ph> argument to <ph id="ph2">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源&lt;xref:System.Data.DataSet&gt;包含結構描述項目 (加入&lt;xref:System.Data.DataColumn&gt;物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph1">`missingSchemaAction`</ph>引數<ph id="ph2">`MissingSchemaAction.Add`</ph>。&lt;/xref:System.Data.DataColumn&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>In that case, the merged &lt;xref:System.Data.DataSet&gt; contains the added schema and data.</source>
          <target state="translated">在此情況下，合併&lt;xref:System.Data.DataSet&gt;包含新增結構描述和資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>When merging a new source &lt;xref:System.Data.DataSet&gt; into the target, any source rows with a &lt;xref:System.Data.DataRowState&gt; value of <ph id="ph1">`Unchanged`</ph>, <ph id="ph2">`Modified`</ph>, or <ph id="ph3">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時&lt;xref:System.Data.DataSet&gt;到目標，任何來源的資料列與&lt;xref:System.Data.DataRowState&gt;值<ph id="ph1">`Unchanged`</ph>， <ph id="ph2">`Modified`</ph>，或<ph id="ph3">`Deleted`</ph>與目標資料列具有相同的主索引鍵值相符。&lt;/xref:System.Data.DataRowState&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>If any constraints cannot be enabled at the end of merge, a &lt;xref:System.Data.ConstraintException&gt; is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾&lt;xref:System.Data.ConstraintException&gt;產生，停用條件約束時，合併的資料都會保留下來。&lt;/xref:System.Data.ConstraintException&gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property is set to <ph id="ph1">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性設定為<ph id="ph1">`false`</ph>，並且所有的資料列，而不會標示錯誤。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The errors must be resolved before attempting to reset the &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;屬性<ph id="ph1">`true`</ph>。&lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose data and schema will be merged.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataTable" name="DataTable" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>將合併的資料和結構描述。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.MissingSchemaAction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to preserve changes in the <bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要保留在變更<bpt id="p2">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataSet</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Occurs when a target and source <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have the same primary key value, and &lt;xref:System.Data.DataSet.EnforceConstraints*&gt; is set to true.</source>
          <target state="translated">發生於目標和來源<bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有相同的主索引鍵值，和&lt;xref:System.Data.DataSet.EnforceConstraints*&gt;設為 true。&lt;/xref:System.Data.DataSet.EnforceConstraints*&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>NIB︰ 使用事件<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定的命名空間<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The Namespace property is used when reading and writing an XML document into the &lt;xref:System.Data.DataSet&gt; using the &lt;xref:System.Data.DataSet.ReadXml%2A&gt;, &lt;xref:System.Data.DataSet.WriteXml%2A&gt;, &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;, or &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods.</source>
          <target state="translated">命名空間屬性用於讀取和寫入 XML 文件到&lt;xref:System.Data.DataSet&gt;使用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;， &lt;xref:System.Data.DataSet.WriteXml%2A&gt;， &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;，或&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The namespace of an XML document is used to scope XML attributes and elements when read into a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">XML 文件的命名空間用來限定範圍的 XML 屬性和項目至&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt;讀取時</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;xref:System.Data.DataSet&gt; contains a schema that was read from a document with the namespace "myCompany," and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</source>
          <target state="translated">例如，如果&lt;xref:System.Data.DataSet&gt;包含結構描述，已從具有命名空間"mycompany 機 」 的文件和嘗試從具有不同的命名空間的文件只讀取資料，任何未對應到現有的結構描述的資料會被忽略。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">命名空間的<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The namespace already has data.</source>
          <target state="translated">命名空間中已經有資料。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Raises the OnPropertyChanging event.</source>
          <target state="translated">引發 OnPropertyChanging 事件。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派事件處理常式叫用。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>For an overview, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
          <target state="translated">如需概觀，請參閱<bpt id="p1">[</bpt>NIB︰ 引發事件<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt; that contains the event data.</source>
          <target state="translated">A&lt;xref:System.ComponentModel.PropertyChangedEventArgs&gt;包含事件資料。&lt;/xref:System.ComponentModel.PropertyChangedEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is removed from a <bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">發生時<bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件移除<bpt id="p2">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to restrict tables being removed</source>
          <target state="translated">要移除的資料表限制的子類別應該覆寫這個方法</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>被移除。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is removed from a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">發生時<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>被移除了<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>This method can be overridden by subclasses to restrict tables from being removed.</source>
          <target state="translated">這個方法可以覆寫子類別，以限制資料表中移除。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being removed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>被移除。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Gets or sets an XML prefix that aliases the namespace of the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定 XML 前置詞別名的命名空間<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The Prefix property is used throughout an XML document to identify elements which belong to the namespace of the &lt;xref:System.Data.DataSet&gt; object (as set by the &lt;xref:System.Data.DataSet.Namespace%2A&gt; property).</source>
          <target state="translated">前置詞屬性用於整個 XML 文件，以找出項目所屬的命名空間&lt;xref:System.Data.DataSet&gt;物件 (為設定由&lt;xref:System.Data.DataSet.Namespace%2A&gt;屬性)。&lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The XML prefix for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> namespace.</source>
          <target state="translated">XML 前置詞<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>命名空間。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Sends a notification that the specified <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property is about to change.</source>
          <target state="translated">傳送通知指定<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>屬性即將變更。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The name of the property that is about to change.</source>
          <target state="translated">若要變更的屬性名稱。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema, as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>An object that derives from &lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">衍生自&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;物件</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>類別繼承自&lt;xref:System.IO.TextReader&gt;類別包含&lt;xref:System.IO.StreamReader&gt;和&lt;xref:System.IO.StringReader&gt;類別。&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph2">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from which to read the schema and data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>要從其中讀取的結構描述和資料。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的檔案。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">檔案名稱 （包括路徑） 從當中讀取。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The ReadXml method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">ReadXml 方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling ReadXml to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫 ReadXml 載入時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; inherits from &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph>       &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;繼承自&lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXml by specifying <ph id="ph2">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間， &lt;xref:System.Data.DataSet&gt;ReadXml 藉由指定與<ph id="ph2">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;從中讀取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">同樣適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use ReadXml and you set &lt;xref:System.Data.XmlReadMode&gt; to <ph id="ph2">`Diffgram`</ph>, the content of the target <ph id="ph3">`DataSet`</ph> and the original <ph id="ph4">`DataSet`</ph> may differ because of how the diffgram is generated and processed.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 當您使用 ReadXml，而且您設定&lt;xref:System.Data.XmlReadMode&gt;至<ph id="ph2">`Diffgram`</ph>，目標內容<ph id="ph3">`DataSet`</ph>和原始<ph id="ph4">`DataSet`</ph>可能因為 diffgram 會產生並處理方式不同。&lt;/xref:System.Data.XmlReadMode&gt;</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>For more information on diffgrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需有關 diffgram 的詳細資訊，請參閱<bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;從中讀取。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.TextReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;從中讀取。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified file and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的檔案和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">檔案名稱 （包括路徑） 從當中讀取。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Reads XML schema and data into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述和資料<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.Xml.XmlReader?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method provides a way to read either data only, or both data and schema into a &lt;xref:System.Data.DataSet&gt; from an XML document, whereas the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method reads only the schema.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法來讀取資料，或同時提供資料和結構描述&lt;xref:System.Data.DataSet&gt;從 XML 文件，而&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法讀取的結構描述。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; and &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.WriteXml%2A&gt;和&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述會用來擴充現有的關聯式結構載入資料之前。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The <ph id="ph2">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph3">`DataColumn`</ph> or <ph id="ph4">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;<ph id="ph2">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph3">`DataColumn`</ph>或<ph id="ph4">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>If the XML Schema for a &lt;xref:System.Data.DataSet&gt; includes a <ph id="ph1">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling &lt;xref:System.Data.DataSet.ReadXml%2A&gt; to load the &lt;xref:System.Data.DataSet&gt; with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述&lt;xref:System.Data.DataSet&gt;包含<ph id="ph1">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況&lt;xref:System.Data.DataSet.ReadXml%2A&gt;載入&lt;xref:System.Data.DataSet&gt;xml 程式碼，包含非限定命名空間的項目。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXml%2A&gt; by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated"><ph id="ph1">```   &lt;xsd:schema id="MyDataSet"       elementFormDefault="qualified"       targetNamespace="http://www.tempuri.org/MyDataSet.xsd"       xmlns="http://www.tempuri.org/MyDataSet.xsd"       xmlns:xsd="http://www.w3.org/2001/XMLSchema"       xmlns:msdata="urn:schemas-microsoft-com:xml-msdata"&gt;   &lt;/xsd:schema&gt;   ```</ph><ph id="ph2">      &gt; </ph><ph id="ph3">[!NOTE]</ph>&gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXml%2A&gt;藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。&lt;/xref:System.Data.DataSet.ReadXml%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;從中讀取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlReadMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to read the data.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReadMode" name="XmlReadMode" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>用來讀取資料。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.Stream&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述從指定&lt;xref:System.IO.Stream&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法來建立&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的結構描述&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果 msdata:DataType 和 xs: type 類型不相符，就可能發生資料損毀。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常會叫用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用來填滿&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前會叫用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">類別衍生自&lt;xref:System.IO.Stream&gt;類別包含&lt;xref:System.IO.BufferedStream&gt;， &lt;xref:System.IO.FileStream&gt;， &lt;xref:System.IO.MemoryStream&gt;，和&lt;xref:System.Net.Sockets.NetworkStream&gt;。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試以讀取結構描述&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;從中讀取。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.IO.TextReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述從指定&lt;xref:System.IO.TextReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法來建立&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的結構描述&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果 msdata:DataType 和 xs: type 類型不相符，就可能發生資料損毀。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常會叫用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用來填滿&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前會叫用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Classes that inherit from the &lt;xref:System.IO.TextReader&gt; class include the &lt;xref:System.IO.StreamReader&gt; and &lt;xref:System.IO.StringReader&gt; classes.</source>
          <target state="translated">類別繼承自&lt;xref:System.IO.TextReader&gt;類別包含&lt;xref:System.IO.StreamReader&gt;和&lt;xref:System.IO.StringReader&gt;類別。&lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試以讀取結構描述&lt;xref:System.Data.DataSet&gt;與&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;從中讀取。&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified file into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述從指定的檔案到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法來建立&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的結構描述&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果 msdata:DataType 和 xs: type 類型不相符，就可能發生資料損毀。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;通常會叫用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用來填滿&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前會叫用方法&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含項目嘗試讀取 into &lt;xref:System.Data.DataSet&gt; &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;與&lt;/xref:System.Data.DataSet&gt;結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The file name (including the path) from which to read.</source>
          <target state="translated">檔案名稱 （包括路徑），要從其中讀取。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Reads the XML schema from the specified &lt;xref:System.Xml.XmlReader&gt; into the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">讀取 XML 結構描述從指定&lt;xref:System.Xml.XmlReader&gt;到<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>Use the ReadXmlSchema method to create the schema for a &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">若要建立&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;的結構描述使用 ReadXmlSchema 方法</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果 msdata:DataType 和 xs: type 類型不相符，就可能發生資料損毀。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>The ReadXmlSchema method is generally invoked before invoking the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; method which is used to fill the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">ReadXmlSchema 方法一般叫用&lt;xref:System.Data.DataSet.ReadXml%2A&gt;方法用來填滿&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataSet.ReadXml%2A&gt;之前叫用</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt; class is abstract.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader?displayProperty=fullName&gt;類別是抽象的。&lt;/xref:System.Xml.XmlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>A class that inherits from the <ph id="ph1">`XmlReader`</ph> is the &lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt; class.</source>
          <target state="translated">類別繼承自<ph id="ph1">`XmlReader`</ph>是&lt;xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;類別。&lt;/xref:System.Xml.XmlTextReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the schema for your &lt;xref:System.Data.DataSet&gt; contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the &lt;xref:System.Data.DataSet&gt; with ReadXmlSchema.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果的結構描述您&lt;xref:System.Data.DataSet&gt;包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試讀取到結構描述&lt;xref:System.Data.DataSet&gt;與 ReadXmlSchema。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlReader&gt; from which to read.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;從中讀取。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Ignores attributes and returns an empty DataSet.</source>
          <target state="translated">會忽略屬性，並傳回空的資料集。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>The specified XML reader.</source>
          <target state="translated">指定的 XML 讀取器。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>Rolls back all the changes made to the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> since it was created, or since the last time <ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> was called.</source>
          <target state="translated">復原對所做的所有變更<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>建立，以來或自從上次<ph id="ph1">&amp;lt;</ph>xref:System.Data.DataSet.AcceptChanges%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Invoke the RejectChanges to call the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method on all &lt;xref:System.Data.DataTable&gt; objects contained by the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">叫用呼叫的&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;方法上所有&lt;xref:System.Data.DataTable&gt;物件包含&lt;xref:System.Data.DataSet&gt;。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; RejectChanges</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.DataRow&gt; objects contained by the &lt;xref:System.Data.DataSet&gt; can each be set into edit mode by invoking the &lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">&lt;xref:System.Data.DataRow&gt;所包含之物件&lt;xref:System.Data.DataSet&gt;可每個被設定進入編輯模式下叫用&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Data.DataRow.BeginEdit%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataSet&gt;&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>After invoking the &lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt; method, changes can be rejected by calling the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; on the &lt;xref:System.Data.DataTable&gt; to which the &lt;xref:System.Data.DataRow&gt; objects belong.</source>
          <target state="translated">叫用後&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;方法，可以藉由呼叫拒絕變更&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;上&lt;xref:System.Data.DataTable&gt;要&lt;xref:System.Data.DataRow&gt;物件屬於。&lt;/xref:System.Data.DataRow&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; &lt;/xref:System.Data.DataRow.EndEdit%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt; method is called, any rows still in edit-mode cancel their edits.</source>
          <target state="translated">當&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;呼叫方法時，仍在編輯模式中的任何資料列取消編輯。&lt;/xref:System.Data.DataTable.RejectChanges%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>New rows are removed.</source>
          <target state="translated">新的資料列被移除。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Modified and deleted rows return back to their original state (<ph id="ph1">`DataRowState.Unchanged`</ph>).</source>
          <target state="translated">修改和刪除資料列會傳回至其原始狀態 (<ph id="ph1">`DataRowState.Unchanged`</ph>)。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>AcceptChanges and RejectChanges only apply to &lt;xref:System.Data.DataRow&gt; related changes (that is, <ph id="ph1">`Add`</ph>, <ph id="ph2">`Remove`</ph>, <ph id="ph3">`Delete`</ph>, and <ph id="ph4">`Modify`</ph>).</source>
          <target state="translated">AcceptChanges 和 RejectChanges 只會套用到&lt;xref:System.Data.DataRow&gt;相關的變更 (亦即<ph id="ph1">`Add`</ph>， <ph id="ph2">`Remove`</ph>， <ph id="ph3">`Delete`</ph>，和<ph id="ph4">`Modify`</ph>)。&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它們並不適用於結構描述或結構化變更。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</source>
          <target state="translated">取得連結資料表，並可瀏覽，從父資料表到子資料表之關聯的集合。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a collection of <bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataRelationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含的集合<bpt id="p2">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">如果沒有傳回空的集合，則<bpt id="p1">&lt;xref href="System.Data.DataRelation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件存在。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used during remoting.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>遠端處理期間使用。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.SerializationFormat"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Clears all tables and removes all relations, foreign constraints, and tables from the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">清除所有資料表，並移除所有關聯性、 外部索引的條件約束和來自資料表<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>Subclasses should override Reset to restore a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to its original state.</source>
          <target state="translated">子類別應該覆寫重設為還原<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>為其原始狀態。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Data.DataSet&gt; serializes its schema and instance data by default in Web services and remoting scenarios.</source>
          <target state="translated">A &lt;xref:System.Data.DataSet&gt;Web 服務和遠端處理案例中，預設序列化其結構描述和執行個體資料。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Setting the SchemaSerializationMode property of a typed <ph id="ph1">`DataSet`</ph> to &lt;xref:System.Data.SchemaSerializationMode&gt; causes schema information to be excluded from the serialization payload.</source>
          <target state="translated">具類型的 SchemaSerializationMode 屬性設定<ph id="ph1">`DataSet`</ph>至&lt;xref:System.Data.SchemaSerializationMode&gt;會導致序列化裝載要排除的結構描述資訊。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported only for a typed <ph id="ph1">`DataSet`</ph>.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;支援僅針對具型別的<ph id="ph1">`DataSet`</ph>。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>For an un-typed <ph id="ph1">`DataSet`</ph> this property can only be set to &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">針對不具型別的<ph id="ph1">`DataSet`</ph>這個屬性只能設定為&lt;xref:System.Data.SchemaSerializationMode&gt;。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; should only be used in cases where the schema information of the underlying typed <ph id="ph1">`DataTables`</ph>, <ph id="ph2">`DataRelations`</ph> and <ph id="ph3">`Constraints`</ph> has not been modified.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;應該只用於在其中具類型的基礎結構描述資訊的情況下<ph id="ph1">`DataTables`</ph>，<ph id="ph2">`DataRelations`</ph>和<ph id="ph3">`Constraints`</ph>尚未修改。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>If modifications have occurred, complete schema information should be serialized with &lt;xref:System.Data.SchemaSerializationMode&gt;.</source>
          <target state="translated">如果需要修改應該以&lt;xref:System.Data.SchemaSerializationMode&gt;.&lt;/xref:System.Data.SchemaSerializationMode&gt;序列化發生、 完整的結構描述資訊</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Data.SchemaSerializationMode&gt; is supported in version 2.0 of the .NET Framework or later.</source>
          <target state="translated">&lt;xref:System.Data.SchemaSerializationMode&gt;支援 2.0 版的.NET framework 或更新版本。&lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Data.SchemaSerializationMode&gt; is set, only the top level runtime properties present on the &lt;xref:System.Data.DataSet&gt; are serialized.</source>
          <target state="translated">當&lt;xref:System.Data.SchemaSerializationMode&gt;設定，只有最上層的層級執行階段屬性上有&lt;xref:System.Data.DataSet&gt;會序列化。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.SchemaSerializationMode&gt;</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>In addition, they are serialized only if they happen to be different from the default values.</source>
          <target state="translated">此外，它們會序列化才發生不同的預設值。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>None of the <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> or <ph id="ph3">`Constraints`</ph> are serialized.</source>
          <target state="translated">沒有任何<ph id="ph1">`Tables`</ph>，<ph id="ph2">`Relations`</ph>或<ph id="ph3">`Constraints`</ph>會序列化。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source>The serialized runtime properties include &lt;xref:System.Data.DataSet.DataSetName%2A&gt;, &lt;xref:System.Data.DataSet.Namespace%2A&gt;, &lt;xref:System.Data.DataSet.Prefix%2A&gt;, &lt;xref:System.Data.DataSet.Locale%2A&gt;, &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;, and &lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;.</source>
          <target state="translated">序列化的執行階段屬性包括&lt;xref:System.Data.DataSet.DataSetName%2A&gt;， &lt;xref:System.Data.DataSet.Namespace%2A&gt;， &lt;xref:System.Data.DataSet.Prefix%2A&gt;， &lt;xref:System.Data.DataSet.Locale%2A&gt;， &lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;，和&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;。&lt;/xref:System.Data.DataSet.CaseSensitive%2A&gt; &lt;/xref:System.Data.DataSet.EnforceConstraints%2A&gt; &lt;/xref:System.Data.DataSet.Locale%2A&gt; &lt;/xref:System.Data.DataSet.Prefix%2A&gt; &lt;/xref:System.Data.DataSet.Namespace%2A&gt; &lt;/xref:System.Data.DataSet.DataSetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>These properties are serialized to make sure that overall runtime data integrity is preserved.</source>
          <target state="translated">這些屬性會序列化以確定會保留整體的執行階段資料的完整性。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets or sets a <bpt id="p1">&lt;xref href="System.Data.SchemaSerializationMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for a <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Relations*&gt; property should be persisted.</source>
          <target state="translated">取得值，指出是否&lt;xref:System.Data.DataSet.Relations*&gt;屬性必須永續性。&lt;/xref:System.Data.DataSet.Relations*&gt;</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>You typically use this method if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">您通常使用這個方法，如果您要建立的設計工具&lt;xref:System.Data.DataSet&gt;，或建立您自己的控制項加入&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性值已變更其預設值。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether &lt;xref:System.Data.DataSet.Tables*&gt; property should be persisted.</source>
          <target state="translated">取得值，指出是否&lt;xref:System.Data.DataSet.Tables*&gt;屬性必須永續性。&lt;/xref:System.Data.DataSet.Tables*&gt;</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>You typically use this method only if you are either creating a designer for the &lt;xref:System.Data.DataSet&gt;, or creating your own control incorporating the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">您通常使用這個方法，您可能想要建立的設計工具時，才&lt;xref:System.Data.DataSet&gt;，或建立您自己的控制項加入&lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the property value has been changed from its default; otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果屬性值已變更其預設值。否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定<bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>Sites bind a &lt;xref:System.ComponentModel.Component&gt; to a &lt;xref:System.ComponentModel.Container&gt; and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">站台繫結&lt;xref:System.ComponentModel.Component&gt;至&lt;xref:System.ComponentModel.Container&gt;和啟用它們之間的通訊，以及提供的方式管理其元件的容器。&lt;/xref:System.ComponentModel.Container&gt; &lt;/xref:System.ComponentModel.Component&gt;</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An <bpt id="p1">&lt;xref href="System.ComponentModel.ISite"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.DataSet&gt;執行個體轉換成&lt;xref:System.ComponentModel.IListSource&gt;介面。&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.ContainsListCollection%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.ComponentModel.IListSource&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.DataSet&gt;執行個體轉換成&lt;xref:System.ComponentModel.IListSource&gt;介面。&lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.ComponentModel.IListSource.GetList%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.DataSet&gt;執行個體轉換成&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;介面。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.GetSchema%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.DataSet&gt;執行個體轉換成&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;介面。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Data.DataSet&gt; instance is cast to an &lt;xref:System.Xml.Serialization.IXmlSerializable&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Data.DataSet&gt;執行個體轉換成&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;介面。&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">A &lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>Gets the collection of tables contained in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得集合中包含的資料表<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>To add tables to the collection, use &lt;xref:System.Data.DataTableCollection.Add%2A&gt; method of the &lt;xref:System.Data.DataTableCollection&gt;.</source>
          <target state="translated">若要將資料表加入至集合，使用&lt;xref:System.Data.DataTableCollection.Add%2A&gt;&lt;xref:System.Data.DataTableCollection&gt;.&lt;/xref:System.Data.DataTableCollection&gt;方法&lt;/xref:System.Data.DataTableCollection.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>To remove tables, use the &lt;xref:System.Data.DataTableCollection.Remove%2A&gt; method.</source>
          <target state="translated">若要移除資料表，請使用&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;方法。&lt;/xref:System.Data.DataTableCollection.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contained by this <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.DataTableCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含由此<bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>An empty collection is returned if no <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects exist.</source>
          <target state="translated">如果沒有傳回空的集合，則<bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件存在。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">將目前的資料寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;物件，用來寫入至檔案。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">將目前的資料寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定的&lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;用來寫入的物件。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file.</source>
          <target state="translated">將目前的資料寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>至指定的檔案。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">檔案名稱 （包括路徑） 寫入。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Writes the current data for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">將目前的資料寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>至指定&lt;xref:System.Xml.XmlWriter&gt;。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;用來寫入。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">寫入目前的資料，以及選擇性結構描述，如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要撰寫結構描述，設定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>參數<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;物件，用來寫入至檔案。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.IO.TextWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">寫入目前的資料，以及選擇性結構描述，如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定&lt;xref:System.IO.TextWriter&gt;和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要撰寫結構描述，設定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>參數<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object used to write the document.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.IO.TextWriter?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>用來撰寫的文件物件。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the specified file using the specified <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">寫入目前的資料，以及選擇性結構描述，如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>至指定的檔案使用指定<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要撰寫結構描述，設定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>參數<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">檔案名稱 （包括路徑） 寫入。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Writes the current data, and optionally the schema, for the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified &lt;xref:System.Xml.XmlWriter&gt; and <bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">寫入目前的資料，以及選擇性結構描述，如<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>使用指定&lt;xref:System.Xml.XmlWriter&gt;和<bpt id="p2">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>To write the schema, set the value for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> parameter to <bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">若要撰寫結構描述，設定的值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept>參數<bpt id="p2">&lt;xref uid="langword_csharp_WriteSchema" name="WriteSchema" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a &lt;xref:System.Data.DataSet&gt; into an XML document, whereas the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供的方式寫入資料，或同時資料和結構描述從&lt;xref:System.Data.DataSet&gt;XML 文件，而&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法會寫入的結構描述。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>Note that the same is true for the &lt;xref:System.Data.DataSet.ReadXml%2A&gt; and &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; methods, respectively.</source>
          <target state="translated">請注意，也適用於&lt;xref:System.Data.DataSet.ReadXml%2A&gt;和&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;方法，分別。&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt; &lt;/xref:System.Data.DataSet.ReadXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  An &lt;xref:System.InvalidOperationException&gt; will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements &lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt; and does not implement &lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;&lt;xref:System.InvalidOperationException&gt;會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;，但未實作&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;.&lt;/xref:System.Xml.Serialization.IXmlSerializable&gt; &lt;/xref:System.Dynamic.IDynamicMetaObjectProvider&gt; &lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; with which to write.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;用來寫入。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref href="System.Data.XmlWriteMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到指定的 XML 結構描述的結構<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Use the WriteXmlSchema method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">要寫入的結構描述使用 WriteXmlSchema 方法&lt;xref:System.Data.DataSet&gt;XML 文件。&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the WriteXmlSchema method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用 WriteXmlSchema 方法。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>Classes that derive from the &lt;xref:System.IO.Stream&gt; class include &lt;xref:System.IO.BufferedStream&gt;, &lt;xref:System.IO.FileStream&gt;, &lt;xref:System.IO.MemoryStream&gt;, and &lt;xref:System.Net.Sockets.NetworkStream&gt;.</source>
          <target state="translated">類別衍生自&lt;xref:System.IO.Stream&gt;類別包含&lt;xref:System.IO.BufferedStream&gt;， &lt;xref:System.IO.FileStream&gt;， &lt;xref:System.IO.MemoryStream&gt;，和&lt;xref:System.Net.Sockets.NetworkStream&gt;。&lt;/xref:System.Net.Sockets.NetworkStream&gt; &lt;/xref:System.IO.MemoryStream&gt; &lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.BufferedStream&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.Stream&gt; object used to write to a file.</source>
          <target state="translated">A&lt;xref:System.IO.Stream&gt;物件，用來寫入至檔案。&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt; object.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到指定的 XML 結構描述的結構&lt;xref:System.IO.TextWriter&gt;物件。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法來寫入的結構描述&lt;xref:System.Data.DataSet&gt;XML 文件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Classes the derive from the &lt;xref:System.IO.TextWriter?displayProperty=fullName&gt; class include the &lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;, &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;, &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;, &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;, and &lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;.</source>
          <target state="translated">類別和從其中衍生&lt;xref:System.IO.TextWriter?displayProperty=fullName&gt;類別包含&lt;xref:System.Web.HttpWriter?displayProperty=fullName&gt;， &lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt;， &lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt;， &lt;xref:System.IO.StreamWriter?displayProperty=fullName&gt;，和&lt;xref:System.IO.StringWriter?displayProperty=fullName&gt;。&lt;/xref:System.IO.StringWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.StreamWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Web.HttpWriter?displayProperty=fullName&gt; &lt;/xref:System.IO.TextWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextWriter&gt; object with which to write.</source>
          <target state="translated">&lt;xref:System.IO.TextWriter&gt;用來寫入的物件。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與 XML 結構描述檔案的結構。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法來寫入的結構描述&lt;xref:System.Data.DataSet&gt;XML 文件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">檔案名稱 （包括路徑） 寫入。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is not set to <bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.Permissions.FileIOPermission"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>未設定為<bpt id="p2">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to an &lt;xref:System.Xml.XmlWriter&gt; object.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與 XML 結構描述結構&lt;xref:System.Xml.XmlWriter&gt;物件。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>Use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method to write the schema for a &lt;xref:System.Data.DataSet&gt; to an XML document.</source>
          <target state="translated">使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法來寫入的結構描述&lt;xref:System.Data.DataSet&gt;XML 文件。&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>To write a schema to an XML document, use the &lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt; method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>To write the data to an XML document, use the &lt;xref:System.Data.DataSet.WriteXml%2A&gt; method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用&lt;xref:System.Data.DataSet.WriteXml%2A&gt;方法。&lt;/xref:System.Data.DataSet.WriteXml%2A&gt;</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>One class that inherits from the &lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt; class is the &lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; class.</source>
          <target state="translated">一個類別繼承自的&lt;xref:System.Xml.XmlWriter?displayProperty=fullName&gt;類別是&lt;xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt;類別。&lt;/xref:System.Xml.XmlTextWriter?displayProperty=fullName&gt; &lt;/xref:System.Xml.XmlWriter?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlWriter&gt; to write to.</source>
          <target state="translated">&lt;xref:System.Xml.XmlWriter&gt;寫入。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到指定的 XML 結構描述的結構<ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> object to write to.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.IO.Stream?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>来寫入的物件。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委派，用來將轉換&lt;xref:System.Type&gt;字串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.IO.TextWriter&gt;.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.IO.TextWriter&gt;.&lt;/xref:System.IO.TextWriter&gt;將 XML 結構描述的結構</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.IO.TextWriter&gt; object to write to.</source>
          <target state="translated">A&lt;xref:System.IO.TextWriter&gt;要寫入的物件。&lt;/xref:System.IO.TextWriter&gt;</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委派，用來將轉換&lt;xref:System.Type&gt;字串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to a file.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>與 XML 結構描述檔案的結構。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The name of the file to write to.</source>
          <target state="translated">要寫入檔案的名稱。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委派，用來將轉換&lt;xref:System.Type&gt;字串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>Writes the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure as an XML schema to the specified &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">寫入<bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定&lt;xref:System.Xml.XmlWriter&gt;.&lt;/xref:System.Xml.XmlWriter&gt;將 XML 結構描述的結構</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.XmlWriter&gt; object to write to.</source>
          <target state="translated">A&lt;xref:System.Xml.XmlWriter&gt;要寫入的物件。&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>A delegate used to convert &lt;xref:System.Type&gt; to string.</source>
          <target state="translated">委派，用來將轉換&lt;xref:System.Type&gt;字串。&lt;/xref:System.Type&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>