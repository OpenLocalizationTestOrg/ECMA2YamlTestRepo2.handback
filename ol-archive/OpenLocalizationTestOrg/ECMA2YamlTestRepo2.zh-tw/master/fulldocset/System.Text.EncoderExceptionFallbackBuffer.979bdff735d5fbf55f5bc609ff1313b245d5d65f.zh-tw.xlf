<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4b1c0bbbb744ceae5dd3f655fe4d602efef4353</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Text.EncoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a50e5c4396b83432d6c9f13c8fe0acca467c0424</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dc68a64823c4f3c678fa1269c86c0de93e4e669</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.Text.EncoderFallbackException&gt; when an input character cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">擲回&lt;xref:System.Text.EncoderFallbackException&gt;當輸入的字元無法轉換成編碼的輸出位元組序列。&lt;/xref:System.Text.EncoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
          <target state="translated">用於編碼或解碼作業失敗的常見原因是如果基礎的編碼類別並未提供一個字元與對應的位元組序列之間的對應。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt; method, which throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">如果輸入的字元無法轉換成輸出位元組序列，編碼作業會呼叫&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;方法，它會擲回&lt;xref:System.Text.EncoderFallbackException&gt;.&lt;/xref:System.Text.EncoderFallbackException&gt; &lt;/xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt; class, which represents a data buffer used in an encoding operation, is the base class for the EncoderExceptionFallbackBuffer class.</source>
          <target state="translated">的&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;類別，用來表示用在編碼作業中，將資料緩衝區是 EncoderExceptionFallbackBuffer 類別的基底類別&lt;/xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, instead of a data buffer, the EncoderExceptionFallbackBuffer class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
          <target state="translated">不過，而不是資料緩衝區，EncoderExceptionFallbackBuffer 類別代表標準行為，其中如果編碼作業失敗會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
          <target state="translated">沒有實際的資料緩衝區存在，而且設計來管理這類緩衝區的成員沒有相當多的工作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">擲回例外狀況，因為無法編碼輸入的字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
          <target state="translated">參數會指定的字元無法轉換的值和索引位置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter an unknown character in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;和&lt;xref:System.Text.Encoder.Convert%2A&gt;方法呼叫後援，如果遇到未知的字元，在其輸入。&lt;/xref:System.Text.Encoder.Convert%2A&gt; &lt;/xref:System.Text.Encoding.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In response, Fallback always throws &lt;xref:System.Text.EncoderFallbackException&gt;.</source>
          <target state="translated">為了回應，後援一律會擲回&lt;xref:System.Text.EncoderFallbackException&gt;.&lt;/xref:System.Text.EncoderFallbackException&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An input character.</source>
          <target state="translated">輸入的字元。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The index position of the character in the input buffer.</source>
          <target state="translated">在輸入緩衝區中的字元索引位置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">無。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">因為則後援方法一律會擲回的例外狀況，則會不傳回任何值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> cannot be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph>無法進行編碼。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> parameters.</source>
          <target state="translated">這個方法一律會擲回的例外狀況報告的值<ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph>和<ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph>參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
          <target state="translated">擲回例外狀況，因為無法編碼輸入的字元。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
          <target state="translated">參數會指定在輸入中，surrogate 字組的值和索引位置和未使用的表面的傳回值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Text.Encoding.GetBytes%2A&gt; and &lt;xref:System.Text.Encoder.Convert%2A&gt; methods call Fallback if they encounter a surrogate pair in their input.</source>
          <target state="translated">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;和&lt;xref:System.Text.Encoder.Convert%2A&gt;方法呼叫後援，如果遇到其輸入中的 surrogate 字組。&lt;/xref:System.Text.Encoder.Convert%2A&gt; &lt;/xref:System.Text.Encoding.GetBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In response, Fallback always throws an exception.</source>
          <target state="translated">為了回應，後援一律會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The high surrogate of the input pair.</source>
          <target state="translated">輸入組之高 surrogate。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The low surrogate of the input pair.</source>
          <target state="translated">輸入組之低 surrogate。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The index position of the surrogate pair in the input buffer.</source>
          <target state="translated">輸入緩衝區中的 surrogate 字組的索引位置。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">無。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>No value is returned because the Fallback method always throws an exception.</source>
          <target state="translated">因為則後援方法一律會擲回的例外狀況，則會不傳回任何值。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The character represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> cannot be encoded.</source>
          <target state="translated">所表示的字元<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">charUnknownHigh</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept>無法編碼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</source>
          <target state="translated">Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> is not between U+D800 and U+DBFF, inclusive, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is not between U+DC00 and U+DFFF, inclusive.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept>不是 U + D800 到 U + DBFF，含之間或<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">charUnknownLow</ph> <ept id="p2">&lt;/code&gt;</ept>不是 U + DC00 到 U + DFFF （含) 之間。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception fallback buffer.</source>
          <target state="translated">擷取例外狀況後援緩衝區中的下一個字元。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character.</source>
          <target state="translated">因為&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;具有任何實際的例外狀況資料緩衝區，GetNextChar 方法一律會傳回 Unicode NULL 字元。&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
          <target state="translated">傳回的值永遠是 NULL 的 Unicode 字元 (U +&amp;0000;)。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">定義傳回值，雖然它是不可變的因為這個方法會實作抽象方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Causes the next call to the &lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt; method to access the exception data buffer character position that is prior to the current position.</source>
          <target state="translated">會導致下一個呼叫&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;方法來存取目前的位置之前的例外狀況資料緩衝區的字元位置。&lt;/xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the MovePrevious method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">因為&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;具有任何實際的例外狀況資料緩衝區，MovePrevious 方法一律會傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The return value is always <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回值永遠是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">定義傳回值，雖然它是不可變的因為這個方法會實作抽象方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that remain to be processed.</source>
          <target state="translated">取得在目前的字元數<bpt id="p1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>仍需要處理的物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt; has no actual exception data buffer, the Remaining property always returns zero.</source>
          <target state="translated">因為&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;有沒有實際的例外狀況資料緩衝區的剩餘屬性一律會傳回零。&lt;/xref:System.Text.EncoderExceptionFallbackBuffer&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
          <target state="translated">傳回值永遠是零。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
          <target state="translated">定義傳回值，雖然它是不可變的因為這個方法會實作抽象方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>