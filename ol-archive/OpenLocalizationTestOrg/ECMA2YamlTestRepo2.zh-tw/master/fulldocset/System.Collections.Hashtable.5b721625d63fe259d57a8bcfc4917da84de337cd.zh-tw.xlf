<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29a99113f6f5e8c636cca37d5dd69f98b78d8b76</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Collections.Hashtable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7adab19de5e9eff7db361e4d8a403ac1e8bbc6c4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39d3f10f8859d27bfef8c293efca692035665ca7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of key/value pairs that are organized based on the hash code of the key.</source>
          <target state="translated">表示集合的索引鍵/值組會組織為基礎的索引鍵的雜湊碼。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>.</source>
          <target state="translated">若要瀏覽此類型的.NET Framework 原始程式碼，請參閱<bpt id="p1">[</bpt>參考來源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt; 這種類型的.NET Framework 原始程式碼，請參閱 &lt;&lt;c2&gt; <bpt id="p1">[</bpt> 參考來源<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/collections/hashtable.cs#10fefb6e0ae510dd)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
          <target state="translated">您可以瀏覽原始碼、 下載的參考，離線檢視，並逐步執行原始程式碼 （包含修補程式和更新），在偵錯;請參閱<bpt id="p1">[</bpt>指示<ept id="p1">](http://referencesource.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair stored in a &lt;xref:System.Collections.DictionaryEntry&gt; object.</source>
          <target state="translated">每個項目是儲存在索引鍵/值組&lt;xref:System.Collections.DictionaryEntry&gt;物件。&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The objects used as keys by a Hashtable are required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; method (or the &lt;xref:System.Collections.IHashCodeProvider&gt; interface) and the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method (or the &lt;xref:System.Collections.IComparer&gt; interface).</source>
          <target state="translated">做為索引鍵的雜湊表，才能覆寫物件&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;方法 (或&lt;xref:System.Collections.IHashCodeProvider&gt;介面) 和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法 (或&lt;xref:System.Collections.IComparer&gt;介面)。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the Hashtable might behave incorrectly.</source>
          <target state="translated">方法和介面的實作必須處理區分大小寫相同的方式;否則雜湊表可能不正確地運作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, when creating a Hashtable, you must use the &lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt; class (or any case-insensitive &lt;xref:System.Collections.IHashCodeProvider&gt; implementation) with the &lt;xref:System.Collections.CaseInsensitiveComparer&gt; class (or any case-insensitive &lt;xref:System.Collections.IComparer&gt; implementation).</source>
          <target state="translated">例如，在建立雜湊表，您必須使用&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;類別 (或任何不區分大小寫&lt;xref:System.Collections.IHashCodeProvider&gt;實作) 與&lt;xref:System.Collections.CaseInsensitiveComparer&gt;類別 (或任何不區分大小寫&lt;xref:System.Collections.IComparer&gt;實作)。&lt;/xref:System.Collections.IComparer&gt; &lt;/xref:System.Collections.CaseInsensitiveComparer&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt; &lt;/xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the Hashtable.</source>
          <target state="translated">此外，這些方法必須產生相同的結果時索引鍵的雜湊表中存在具有相同參數呼叫時。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An alternative is to use a Hashtable constructor with an &lt;xref:System.Collections.IEqualityComparer&gt; parameter.</source>
          <target state="translated">替代方式是使用的雜湊表建構函式&lt;xref:System.Collections.IEqualityComparer&gt;參數。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If key equality were simply reference equality, the inherited implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; would suffice.</source>
          <target state="translated">如果索引鍵相等與否是只需參考相等的繼承實作&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;即已足夠。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Key objects must be immutable as long as they are used as keys in the Hashtable.</source>
          <target state="translated">索引鍵物件必須是不變的只要它們作為雜湊表中的索引鍵。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When an element is added to the Hashtable, the element is placed into a bucket based on the hash code of the key.</source>
          <target state="translated">項目加入至雜湊表，項目會放入桶，依據索引鍵的雜湊碼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</source>
          <target state="translated">後續的查閱索引鍵使用索引鍵的雜湊的碼搜尋中只有一個特定的貯體，因而大幅降低尋找的項目所需的索引鍵比較的數量。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The load factor of a Hashtable determines the maximum ratio of elements to buckets.</source>
          <target state="translated">雜湊表的負載因數會決定雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數會導致更快的平均查閱次數，代價是會增加的記憶體耗用量。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default load factor of 1.0 generally provides the best balance between speed and size.</source>
          <target state="translated">預設的負載因數 1.0 通常會提供速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A different load factor can also be specified when the Hashtable is created.</source>
          <target state="translated">建立雜湊表時，也可以指定不同的負載因數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As elements are added to a Hashtable, the actual load factor of the Hashtable increases.</source>
          <target state="translated">當項目加入至雜湊表，其中的 Hashtable 的實際負載因數會增加。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets in the Hashtable is automatically increased to the smallest prime number that is larger than twice the current number of Hashtable buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，雜湊表中的貯體數目會自動增加到大於兩次目前的雜湊表值區數目最小質數。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each key object in the Hashtable must provide its own hash function, which can be accessed by calling &lt;xref:System.Collections.Hashtable.GetHash%2A&gt;.</source>
          <target state="translated">雜湊表中的每個索引鍵物件必須提供它自己的雜湊函數，可以藉由呼叫&lt;xref:System.Collections.Hashtable.GetHash%2A&gt;.&lt;/xref:System.Collections.Hashtable.GetHash%2A&gt;存取</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, any object implementing &lt;xref:System.Collections.IHashCodeProvider&gt; can be passed to a Hashtable constructor, and that hash function is used for all objects in the table.</source>
          <target state="translated">不過，任何物件實作&lt;xref:System.Collections.IHashCodeProvider&gt;可以傳遞雜湊表的建構函式，而且該雜湊函式用於資料表中的所有物件。&lt;/xref:System.Collections.IHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The capacity of a Hashtable is the number of elements the Hashtable can hold.</source>
          <target state="translated">雜湊表的容量是雜湊表可以保存的項目數目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As elements are added to a Hashtable, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">當項目加入至雜湊表，就會自動增加容量視需要透過重新配置。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For very large Hashtable objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph1">`enabled`</ph> attribute of the  configuration element to <ph id="ph2">`true`</ph> in the run-time environment.</source>
          <target state="translated">對於非常大的雜湊表物件，您可以藉由設定增加到 64 位元系統上的 2 億元素的最大容量<ph id="ph1">`enabled`</ph>屬性的組態項目<ph id="ph2">`true`</ph>在執行階段環境中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Since each element of the Hashtable is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因為雜湊表的每個項目是索引鍵/值組，項目型別不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Instead, the element type is &lt;xref:System.Collections.DictionaryEntry&gt;.</source>
          <target state="translated">相反地，項目型別是&lt;xref:System.Collections.DictionaryEntry&gt;.&lt;/xref:System.Collections.DictionaryEntry&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.has_1.cs)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb)</ept><ept id="p5">]</ept>       The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</source>
          <target state="translated">例如︰ <bpt id="p1">[!code-cpp</bpt> <bpt id="p2">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p2">](~/add/codesnippet/cpp/t-system.collections.has_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-cs</bpt><bpt id="p4">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p4">](~/add/codesnippet/csharp/t-system.collections.has_1.cs)</ept><ept id="p3">]</ept><bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.Collections.Hashtable_ClassExample#01<ept id="p6">](~/add/codesnippet/visualbasic/t-system.collections.has_1.vb)</ept> <ept id="p5">]</ept> <ph id="ph1">`foreach`</ph>陳述式是包裝函式，只允許讀取，不寫入至集合的列舉值。    </target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a Hashtable can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">序列化和還原序列化列舉值的雜湊表可能會導致變成重新排列項目，因為不可能繼續列舉型別，而不需呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the &lt;xref:System.Type.Equals%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 因為索引鍵可以被繼承，變更其行為，其絕對唯一性無法保證使用比較&lt;xref:System.Type.Equals%2A&gt;方法。&lt;/xref:System.Type.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity, load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用預設的初始容量，載入因數、 雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">雜湊表的容量用來計算最佳的雜湊根據負載因數的資料表值區數目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自動增加容量視需要而定。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有相等的項目數複製，初始容量，並使用預設載入因數、 雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity and load factor, and the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用預設的初始容量，並載入因數，以及指定&lt;xref:System.Collections.IEqualityComparer&gt;物件。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">雜湊表的容量用來計算最佳的雜湊根據負載因數的資料表值區數目。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自動增加容量視需要而定。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件包含雜湊碼提供者和比較子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;物件不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可案例，例如執行不區分大小寫字串的查閱。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件，定義要使用的雜湊碼提供者和比較子<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者和預設比較子。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">預設雜湊碼提供者是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和預設比較子是每個索引鍵實作<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量，並預設載入因數、 雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to a new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件預設初始容量等於複製，項目數目，並使用預設載入因數和指定&lt;xref:System.Collections.IEqualityComparer&gt;物件。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件包含雜湊碼提供者和比較子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;物件不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可案例，例如執行不區分大小寫字串的查閱。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件，定義要使用的雜湊碼提供者和比較子<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者和預設比較子。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">預設雜湊碼提供者是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和預設比較子是每個索引鍵實作<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有相等的項目數複製，初始容量，並使用指定的負載因數，以及預設雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用預設的初始容量，並載入因數，以及指定的雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">雜湊表的容量用來計算最佳的雜湊根據負載因數的資料表值區數目。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自動增加容量視需要而定。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自訂的雜湊碼提供者和自訂比較子以啟用案例，例如執行不區分大小寫字串的查閱。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">這個建構函式是 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，提供雜湊碼的所有索引鍵中<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;物件用來判斷兩個索引鍵是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用預設比較子，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity and &lt;xref:System.Collections.IEqualityComparer&gt;, and the default load factor.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量和&lt;xref:System.Collections.IEqualityComparer&gt;，與預設負載因數。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件包含雜湊碼提供者和比較子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可案例，例如執行不區分大小寫字串的查閱。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>參數。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件，定義要使用的雜湊碼提供者和比較子<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者和預設比較子。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">預設雜湊碼提供者是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和預設比較子是每個索引鍵實作<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量，並載入因數的預設雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>參數。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is causing an overflow.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>造成溢位。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is serializable using the specified <bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> and &lt;xref:System.Runtime.Serialization.StreamingContext&gt; objects.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>序列化使用指定的類別<bpt id="p2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>和&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</source>
          <target state="translated">雜湊表的容量用來計算最佳的雜湊根據負載因數的資料表值區數目。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required.</source>
          <target state="translated">自動增加容量視需要而定。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因為序列化和還原序列化的列舉值&lt;xref:System.Collections.Hashtable&gt;可能會導致變成重新排列項目，就不可能繼續列舉型別，而不需呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，其中包含要序列化所需的資訊<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件，其中包含來源和目的地相關聯之序列化資料流<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有相等的項目數複製，初始容量，並使用預設的負載因數，以及指定的雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This API is obsolete.</source>
          <target state="translated">這個 API 已過時。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>For an alternative, see <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Hashtable.%23ctor%2A<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">如需替代方法，請參閱<ph id="ph1">&amp;lt;</ph>xref:System.Collections.Hashtable.%23ctor%2A<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自訂的雜湊碼提供者和自訂比較子以啟用案例，例如執行不區分大小寫字串的查閱。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，提供雜湊碼的所有索引鍵中<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;物件用來判斷兩個索引鍵是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用預設比較子，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有相等的項目數複製，初始容量，並且會利用指定的負載因數和&lt;xref:System.Collections.IEqualityComparer&gt;物件。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件包含雜湊碼提供者和比較子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; object are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;物件不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可案例，例如執行不區分大小寫字串的查閱。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件，定義要使用的雜湊碼提供者和比較子<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者和預設比較子。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">預設雜湊碼提供者是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和預設比較子是每個索引鍵實作<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量、 雜湊碼提供者、 比較子，以及預設載入因數。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自訂的雜湊碼提供者和自訂比較子以啟用案例，例如執行不區分大小寫字串的查閱。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>參數。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，提供雜湊碼的所有索引鍵中<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;物件用來判斷兩個索引鍵是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用預設比較子，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, load factor, and &lt;xref:System.Collections.IEqualityComparer&gt; object.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量，負載因數和&lt;xref:System.Collections.IEqualityComparer&gt;物件。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object includes both the hash code provider and the comparer.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件包含雜湊碼提供者和比較子。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; enables scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;可案例，例如執行不區分大小寫字串的查閱。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>參數。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; object that defines the hash code provider and the comparer to use with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;物件，定義要使用的雜湊碼提供者和比較子<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider and the default comparer.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者和預設比較子。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The default hash code provider is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> and the default comparer is each key's implementation of <ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>.</source>
          <target state="translated">預設雜湊碼提供者是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>和預設比較子是每個索引鍵實作<ph id="ph3">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph4">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by copying the elements from the specified dictionary to the new <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定字典中的項目複製到新的類別<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</source>
          <target state="translated">新<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件具有相等的項目數複製，初始容量，並使用指定的負載因數、 雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The initial capacity is set to the number of elements in the source dictionary.</source>
          <target state="translated">初始容量設定為來源字典中的項目數。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">雜湊碼提供者在該雜湊程式碼中的索引鍵&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自訂的雜湊碼提供者和自訂比較子以啟用案例，例如執行不區分大小寫字串的查閱。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The elements of the new &lt;xref:System.Collections.Hashtable&gt; are sorted in the same order in which the enumerator iterates through the &lt;xref:System.Collections.IDictionary&gt; object.</source>
          <target state="translated">新的項目&lt;xref:System.Collections.Hashtable&gt;都會依照相同的順序，以列舉值逐一&lt;xref:System.Collections.IDictionary&gt;物件。&lt;/xref:System.Collections.IDictionary&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in the <ph id="ph3">`d`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是中的項目數<ph id="ph3">`d`</ph>參數。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IDictionary&gt; object to copy to a new <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;要複製到新物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，提供雜湊碼的所有索引鍵中<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;物件用來判斷兩個索引鍵是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用預設比較子，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Initializes a new, empty instance of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified initial capacity, load factor, hash code provider, and comparer.</source>
          <target state="translated">初始化新的空白執行個體<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別使用指定的初始容量，載入因數、 雜湊碼提供者和比較子。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">指定的初始容量，就不需要執行數個調整大小作業時新增元素至&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Capacity is automatically increased as required based on the load factor.</source>
          <target state="translated">容量會自動視需要增加的負載因數為基礎。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The load factor is the maximum ratio of elements to buckets.</source>
          <target state="translated">載入因數是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A smaller load factor means faster lookup at the cost of increased memory consumption.</source>
          <target state="translated">較小的負載因數表示代價是會增加的記憶體耗用量的查閱速度較快。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>A load factor of 1.0 is the best balance between speed and size.</source>
          <target state="translated">1.0 的負載因數是速度及大小最佳平衡。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</source>
          <target state="translated">當實際的負載因數會到達指定的負載因數時，bucket 的數目會自動增加到大於兩次目前的 bucket 數目最小質數。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The hash code provider dispenses hash codes for keys in the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">雜湊碼提供者在該&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的索引鍵的雜湊程式碼</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The default hash code provider is the key's implementation of &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設雜湊碼提供者是&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;機碼的實作</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The comparer determines whether two keys are equal.</source>
          <target state="translated">比較子判斷兩個索引鍵是否相等。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Every key in a &lt;xref:System.Collections.Hashtable&gt; must be unique.</source>
          <target state="translated">在每個索引鍵&lt;xref:System.Collections.Hashtable&gt;必須是唯一的。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The default comparer is the key's implementation of &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">預設比較子是&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt;索引鍵的實作</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</source>
          <target state="translated">自訂的雜湊碼提供者和自訂比較子以啟用案例，例如執行不區分大小寫字串的查閱。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the <ph id="ph3">`capacity`</ph> parameter.</source>
          <target state="translated">這個建構函式為 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>參數。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The approximate number of elements that the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can initially contain.</source>
          <target state="translated">大約項目數， <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>一開始可包含物件。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</source>
          <target state="translated">從 0.1 到 1.0 之間，提供最佳效能的預設值會乘以範圍之數字。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The result is the maximum ratio of elements to buckets.</source>
          <target state="translated">結果是雜湊桶項的最大比例。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that supplies the hash codes for all keys in the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，提供雜湊碼的所有索引鍵中<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default hash code provider, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>使用預設雜湊碼提供者，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.GetHashCode%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; object to use to determine whether two keys are equal.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;物件用來判斷兩個索引鍵是否相等。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use the default comparer, which is each key's implementation of <ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">- <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>表示使用預設比較子，這是每個索引鍵實作<ph id="ph1">&amp;lt;</ph>xref:System.Object.Equals%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is less than 0.1.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>小於 0.1。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph> is greater than 1.0.</source>
          <target state="translated">-或-<ph id="ph1">&lt;code&gt;loadFactor&lt;/code&gt;</ph>大於 1.0。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>Adds an element with the specified key and value into the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">將具有指定之索引鍵和值的項目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>An object that has no correlation between its state and its hash code value should typically not be used as the key.</source>
          <target state="translated">具有其狀態和其雜湊碼值之間沒有關聯的物件通常不應做為索引鍵。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For example, String objects are better than StringBuilder objects for use as keys.</source>
          <target state="translated">例如，字串物件做為索引鍵是優於使用 StringBuilder 物件。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;xref:System.Collections.Hashtable.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Hashtable&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用&lt;xref:System.Collections.Hashtable.Item%2A&gt;加入新項目，藉由設定機碼值的屬性不存在於&lt;xref:System.Collections.Hashtable&gt;; 例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Hashtable&gt;, setting the &lt;xref:System.Collections.Hashtable.Item%2A&gt; property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於&lt;xref:System.Collections.Hashtable&gt;，設定&lt;xref:System.Collections.Hashtable.Item%2A&gt;屬性會覆寫舊的值。&lt;/xref:System.Collections.Hashtable.Item%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>In contrast, the Add method does not modify existing elements.</source>
          <target state="translated">相反地，加入方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.Hashtable.Count%2A&gt; is less than the capacity of the &lt;xref:System.Collections.Hashtable&gt;, this method is an O(1) operation.</source>
          <target state="translated">如果&lt;xref:System.Collections.Hashtable.Count%2A&gt;的容量小於&lt;xref:System.Collections.Hashtable&gt;，這個方法是 o （1） 運算。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">如果需要增加，以容納新項目容量，這個方法會變成 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The key of the element to add.</source>
          <target state="translated">若要加入的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The value of the element to add.</source>
          <target state="translated">要加入之元素的值。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>An element with the same key already exists in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">具有相同索引鍵的項目已經存在於<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除所有項目從<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.Hashtable.Count%2A&gt; is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated">&lt;xref:System.Collections.Hashtable.Count%2A&gt;已設為零，並從項目集合的其他物件的參考也會釋放。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The capacity remains unchanged.</source>
          <target state="translated">容量會維持不變。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">建立的淺層複本<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">集合的淺層複本只會複製元素的集合，不論它們是參考類型或實值類型，但是不會複製參考所參考的物件。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新的集合中的參考都指向相同原始集合中的參考所指向的物件。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">相反地，項目複製集合的深層複本，並直接或間接參考之項目，所有項目。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Hashtable&gt; clone has the same count, the same capacity, the same &lt;xref:System.Collections.IHashCodeProvider&gt; implementation, and the same &lt;xref:System.Collections.IComparer&gt; implementation as the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.Hashtable&gt;複製具有相同的計數，相同的容量，相同的&lt;xref:System.Collections.IHashCodeProvider&gt;實作，並&lt;xref:System.Collections.IComparer&gt;與原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;實作&lt;/xref:System.Collections.IComparer&gt;相同的&lt;/xref:System.Collections.IHashCodeProvider&gt;&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>A shallow copy of the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">淺層複本<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Collections.IComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得或設定&lt;xref:System.Collections.IComparer&gt;用於<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IComparer&gt;用於<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an &lt;xref:System.Collections.IEqualityComparer&gt;.</source>
          <target state="translated">屬性設定為值，但使用&lt;xref:System.Collections.IEqualityComparer&gt;.&lt;/xref:System.Collections.IEqualityComparer&gt;建立雜湊資料表</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Contains implements &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">包含實作&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;.&lt;/xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>It behaves exactly as &lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;.</source>
          <target state="translated">它的行為就像&lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;.&lt;/xref:System.Collections.Hashtable.ContainsKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要在中尋找的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的項目索引鍵，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific key.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定索引鍵。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as &lt;xref:System.Collections.Hashtable.Contains%2A&gt;.</source>
          <target state="translated">這個方法的行為就像&lt;xref:System.Collections.Hashtable.Contains%2A&gt;.&lt;/xref:System.Collections.Hashtable.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The key to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要在中尋找的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified key; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的項目索引鍵，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> contains a specific value.</source>
          <target state="translated">決定是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>包含特定值。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The values of the elements of the &lt;xref:System.Collections.Hashtable&gt; are compared to the specified value using the &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">項目的值&lt;xref:System.Collections.Hashtable&gt;與指定的值使用&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法會執行線性搜尋;因此，這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods on <ph id="ph1">`item`</ph> to determine whether item exists.</source>
          <target state="translated">從.NET Framework 2.0 開始，這個方法會使用集合的物件&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>來判斷項目是否存在。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the &lt;xref:System.Object.Equals%2A&gt; and &lt;xref:System.IComparable.CompareTo%2A&gt; methods of the <ph id="ph1">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在舊版的.NET Framework 中，藉由進行這項判斷&lt;xref:System.Object.Equals%2A&gt;和&lt;xref:System.IComparable.CompareTo%2A&gt;方法<ph id="ph1">`item`</ph>上集合中物件的參數。&lt;/xref:System.IComparable.CompareTo%2A&gt; &lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The value to locate in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">要在中尋找值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The value can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個值可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> contains an element with the specified <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p3">&lt;/code&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>包含具有指定的項目<bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p3">&lt;/code&gt;</ept>，否則<bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Copies the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> elements to a one-dimensional &lt;xref:System.Array&gt; instance at the specified index.</source>
          <target state="translated">複製<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>到一維的元素&lt;xref:System.Array&gt;指定索引處的執行個體。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">項目複製至&lt;xref:System.Array&gt;列舉值逐一&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;所在的相同順序&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>To copy only the keys in the &lt;xref:System.Collections.Hashtable&gt;, use <ph id="ph1">`Hashtable.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要複製中的索引鍵&lt;xref:System.Collections.Hashtable&gt;，使用<ph id="ph1">`Hashtable.Keys.CopyTo`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>To copy only the values in the &lt;xref:System.Collections.Hashtable&gt;, use <ph id="ph1">`Hashtable.Values.CopyTo`</ph>.</source>
          <target state="translated">若要複製的值中&lt;xref:System.Collections.Hashtable&gt;，使用<ph id="ph1">`Hashtable.Values.CopyTo`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the &lt;xref:System.Collections.DictionaryEntry&gt; objects copied from <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一維&lt;xref:System.Array&gt;也就是目的&lt;xref:System.Collections.DictionaryEntry&gt;從複製物件<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.DictionaryEntry&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;必須有以零為起始的索引。&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">中以零為起始的索引<ph id="ph1">`array`</ph>由此開始複製。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>小於零。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>是多維的。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is greater than the available space from <ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-在來源中的項目數<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>大於可用空間<ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>至目的地結尾<ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">來源類型<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>無法自動轉換成目的地類型<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Gets the number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得中所包含的索引鍵/值組數目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The number of key/value pairs contained in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">中所包含的索引鍵/值組數目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Collections.IEqualityComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得&lt;xref:System.Collections.IEqualityComparer&gt;用於<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; includes both the comparer and the hash code provider.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;包含的比較子和雜湊碼提供者。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>If an &lt;xref:System.Collections.IEqualityComparer&gt; is used in the &lt;xref:System.Collections.Hashtable&gt; constructor, the objects used as keys in the &lt;xref:System.Collections.Hashtable&gt; are not required to override the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; and &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt; methods.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEqualityComparer&gt;用於&lt;xref:System.Collections.Hashtable&gt;建構函式、 物件做為索引鍵中&lt;xref:System.Collections.Hashtable&gt;不需要覆寫&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;和&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;方法。&lt;/xref:System.Object.Equals%2A?displayProperty=fullName&gt; &lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IEqualityComparer&gt; to use for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.IEqualityComparer&gt;用於<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IEqualityComparer&gt;</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an <bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and an &lt;xref:System.Collections.IComparer&gt;.</source>
          <target state="translated">屬性設定為值，但雜湊資料表建立使用<bpt id="p1">&lt;xref href="System.Collections.IHashCodeProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>和&lt;xref:System.Collections.IComparer&gt;。&lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; that iterates through the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回&lt;xref:System.Collections.IDictionaryEnumerator&gt;逐一<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議，而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但無法用於修改基礎集合。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;也會列舉值帶回至這個位置。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>At this position, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">此位置&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是未定義。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，您必須呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;前進的第一個元素之前讀取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;值集合的列舉值&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;會傳回相同的物件直到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;下一個項目。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;超過集合的列舉值的結尾會位於集合中的最後一個元素之後和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;也會傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">如果最後一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;是未定義。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;的第一個元素的集合，您可以呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;後面加上&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除元素，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒的程序。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以鎖定在整個列舉過程的集合。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓集合以便進行讀取和寫入的多重執行緒能夠存取，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因為序列化和還原序列化的列舉值&lt;xref:System.Collections.Hashtable&gt;可能會導致變成重新排列項目，就不可能繼續列舉型別，而不需呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">An &lt;xref:System.Collections.IDictionaryEnumerator&gt; for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Returns the hash code for the specified key.</source>
          <target state="translated">傳回指定之索引鍵的雜湊碼。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>If the hash table was created with a specific &lt;xref:System.Collections.IHashCodeProvider&gt; implementation, this method uses that hash code provider; otherwise, it uses the &lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; implementation of <ph id="ph1">`key`</ph>.</source>
          <target state="translated">如果雜湊表已建立具有特定&lt;xref:System.Collections.IHashCodeProvider&gt;實作，這個方法會使用該雜湊碼提供者; 否則它會使用&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;實作<ph id="ph1">`key`</ph>。&lt;/xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt; &lt;/xref:System.Collections.IHashCodeProvider&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which a hash code is to be returned.</source>
          <target state="translated">&lt;xref:System.Object&gt;雜湊程式碼是要傳回。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The hash code for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">雜湊碼<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and returns the data needed to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">實作<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面，並傳回序列化所需的資料<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，其中包含要序列化所需的資訊<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Runtime.Serialization.StreamingContext&gt;物件，其中包含來源和目的地相關聯之序列化資料流<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The collection was modified.</source>
          <target state="translated">集合已修改。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that can dispense hash codes.</source>
          <target state="translated">取得或設定可以分配雜湊程式碼的物件。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The object that can dispense hash codes.</source>
          <target state="translated">物件，其可以分配雜湊碼。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The property is set to a value, but the hash table was created using an &lt;xref:System.Collections.IEqualityComparer&gt;.</source>
          <target state="translated">屬性設定為值，但使用&lt;xref:System.Collections.IEqualityComparer&gt;.&lt;/xref:System.Collections.IEqualityComparer&gt;建立雜湊資料表</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許在集合建立後，但允許修改現有的項目後新增或移除項目。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有固定大小，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">取得值，指出是否<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">是唯讀的集合不允許在集合建立後增加、 移除或修改項目。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">是唯讀的集合是唯讀的集合只具有可防止修改集合的包裝函式因此，如果基礎集合進行變更，唯讀的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is read-only; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是唯讀，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is synchronized (thread safe).</source>
          <target state="translated">取得值，指出是否存取<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>是同步 （安全執行緒）。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Collections.Hashtable&gt; can support one writer and multiple readers concurrently.</source>
          <target state="translated">A&lt;xref:System.Collections.Hashtable&gt;可以同時支援一個寫入器與多個讀取器。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>To support multiple writers, all operations must be done through the wrapper returned by the &lt;xref:System.Collections.Hashtable.Synchronized%2A&gt; method.</source>
          <target state="translated">若要支援多個寫入器，所有作業必須都透過包裝函式所傳回&lt;xref:System.Collections.Hashtable.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Synchronized%2A&gt;</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是執行緒安全的程序。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs)</ept><ept id="p5">]</ept></source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用&lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt;在整個列舉過程︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_1_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_1_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_1_1.cs)</ept> <ept id="p5">]</ept>     &lt;/xref:System.Collections.Hashtable.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is synchronized (thread safe); otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存取<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>是同步 （安全執行緒），否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
          <target state="translated">取得或設定與指定之索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性會提供可以使用下列語法存取集合中的特定元素的能力︰ <ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>You can also use the Item property to add new elements by setting the value of a key that does not exist in the &lt;xref:System.Collections.Hashtable&gt;; for example, <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
          <target state="translated">您也可以使用此項目屬性來加入新項目中不存在的索引鍵的值設定&lt;xref:System.Collections.Hashtable&gt;; 例如， <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>However, if the specified key already exists in the &lt;xref:System.Collections.Hashtable&gt;, setting the Item property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已存在於&lt;xref:System.Collections.Hashtable&gt;，項目屬性設定會覆寫舊的值。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>In contrast, the &lt;xref:System.Collections.Hashtable.Add%2A&gt; method does not modify existing elements.</source>
          <target state="translated">相反地，&lt;xref:System.Collections.Hashtable.Add%2A&gt;方法不會修改現有的項目。&lt;/xref:System.Collections.Hashtable.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">金鑰不能<ph id="ph1">`null`</ph>，但是值可以是。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the &lt;xref:System.Collections.Hashtable.Contains%2A&gt; method or the &lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt; method to determine if the key exists in the list.</source>
          <target state="translated">若要在區別<ph id="ph1">`null`</ph>傳回因為找不到指定的索引鍵和<ph id="ph2">`null`</ph>傳回指定之索引鍵的值，所以<ph id="ph3">`null`</ph>，使用&lt;xref:System.Collections.Hashtable.Contains%2A&gt;方法或&lt;xref:System.Collections.Hashtable.ContainsKey%2A&gt;方法來判斷是否索引鍵存在於清單中。&lt;/xref:System.Collections.Hashtable.ContainsKey%2A&gt; &lt;/xref:System.Collections.Hashtable.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是 o （1） 運算。設定屬性，也是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the &lt;xref:System.Collections.IList.Item%2A&gt; property.</source>
          <target state="translated">C# 語言使用關鍵字來定義索引，而不必實作&lt;xref:System.Collections.IList.Item%2A&gt;屬性。&lt;/xref:System.Collections.IList.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Visual Basic implements Item as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 實作項目作為預設屬性，提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The key whose value to get or set.</source>
          <target state="translated">索引鍵來取得或設定其值。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
          <target state="translated">具有指定索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, attempting to get it returns <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and attempting to set it creates a new element using the specified key.</source>
          <target state="translated">如果找不到指定的索引鍵，嘗試取得它傳回<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，並嘗試將它設定建立使用指定的索引鍵的新項目。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The property is set and the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated">此屬性設定和<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>-or-       The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或-此屬性設定， <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>不存在於集合中，而<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Compares a specific &lt;xref:System.Object&gt; with a specific key in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">比較特定&lt;xref:System.Object&gt;中指定的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>If the hash table was created with a specific &lt;xref:System.Collections.IComparer&gt; implementation, this method uses that comparer; that is, &lt;xref:System.Collections.IComparer.Compare%2A&gt; (<ph id="ph1">`item`</ph>, <ph id="ph2">`key`</ph>).</source>
          <target state="translated">如果雜湊表已建立具有特定&lt;xref:System.Collections.IComparer&gt;實作中，這個方法會使用該比較子; 也就是說， &lt;xref:System.Collections.IComparer.Compare%2A&gt;(<ph id="ph1">`item`</ph>， <ph id="ph2">`key`</ph>)。&lt;/xref:System.Collections.IComparer.Compare%2A&gt; &lt;/xref:System.Collections.IComparer&gt;</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Otherwise, it uses <ph id="ph1">`item.Equals(key)`</ph>.</source>
          <target state="translated">否則，它會使用<ph id="ph1">`item.Equals(key)`</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with <ph id="ph1">`key`</ph>.</source>
          <target state="translated">&lt;xref:System.Object&gt;要與比較<ph id="ph1">`key`</ph>。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The key in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare with <ph id="ph1">`item`</ph>.</source>
          <target state="translated">中的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要與比較<ph id="ph1">`item`</ph>。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p3">&lt;/code&gt;</ept> are equal; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得&lt;xref:System.Collections.ICollection&gt;包含中的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The order of the keys in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated values in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Hashtable.Values%2A&gt; method.</source>
          <target state="translated">中的索引鍵的順序&lt;xref:System.Collections.ICollection&gt;並未指定，但它是關聯值中的相同順序&lt;xref:System.Collections.ICollection&gt;傳回&lt;xref:System.Collections.Hashtable.Values%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Values%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the keys in the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">傳回&lt;xref:System.Collections.ICollection&gt;不是靜態的複本; 相反地，&lt;xref:System.Collections.ICollection&gt;是指回原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中索引鍵&lt;/xref:System.Collections.ICollection&gt;的&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Therefore, changes to the &lt;xref:System.Collections.Hashtable&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">因此，變更&lt;xref:System.Collections.Hashtable&gt;才會反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;繼續&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the keys in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含中的索引鍵<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface and raises the deserialization event when the deserialization is complete.</source>
          <target state="translated">實作<bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面，並引發還原序列化完成時，還原序列化事件。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is &lt;xref:System.Collections.Hashtable.Count%2A&gt;.</source>
          <target state="translated">這個方法是 O (<ph id="ph1">`n`</ph>) 作業，其中<ph id="ph2">`n`</ph>為&lt;xref:System.Collections.Hashtable.Count%2A&gt;。&lt;/xref:System.Collections.Hashtable.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Because serializing and deserializing an enumerator for a &lt;xref:System.Collections.Hashtable&gt; can cause the elements to become reordered, it is not possible to continue enumeration without calling the &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method.</source>
          <target state="translated">因為序列化和還原序列化的列舉值&lt;xref:System.Collections.Hashtable&gt;可能會導致變成重新排列項目，就不可能繼續列舉型別，而不需呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;方法。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The source of the deserialization event.</source>
          <target state="translated">還原序列化事件的來源。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object associated with the current <bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is invalid.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>目前相關聯的物件<bpt id="p2">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>無效。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">移除具有指定之索引鍵的項目<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Collections.Hashtable&gt; does not contain an element with the specified key, the &lt;xref:System.Collections.Hashtable&gt; remains unchanged.</source>
          <target state="translated">如果&lt;xref:System.Collections.Hashtable&gt;不包含具有指定之索引鍵項目&lt;xref:System.Collections.Hashtable&gt;維持不變。&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>No exception is thrown.</source>
          <target state="translated">擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has a fixed size.</source>
          <target state="translated">-或- <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>有固定的大小。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Returns a synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回同步 （安全執行緒） 包裝函式<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The Synchronized method is thread safe for multiple readers and writers.</source>
          <target state="translated">已同步處理方法具備執行緒安全之多個讀取器和寫入器。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</source>
          <target state="translated">此外，可確保同步處理的包裝函式，會寫入一次只能有一個寫入器。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是安全執行緒程序。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the &lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt; during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs)</ept><ept id="p5">]</ept>       This method is an O(1) operation.</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用&lt;xref:System.Collections.Hashtable.SyncRoot%2A&gt;在整個列舉過程︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p2">](~/add/codesnippet/cpp/m-system.collections.has_11_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p4">](~/add/codesnippet/visualbasic/m-system.collections.has_11_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p6">](~/add/codesnippet/csharp/m-system.collections.has_11_1.cs)</ept> <ept id="p5">]</ept>這個方法是 o （1） 運算。    &lt;/xref:System.Collections.Hashtable.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to synchronize.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>來同步處理。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>A synchronized (thread-safe) wrapper for the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">同步處理 （安全執行緒） 包裝函式<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得物件，可用來同步處理存取具備<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>To create a synchronized version of the &lt;xref:System.Collections.Hashtable&gt;, use the &lt;xref:System.Collections.Hashtable.Synchronized%2A&gt; method.</source>
          <target state="translated">若要建立的同步化的版本&lt;xref:System.Collections.Hashtable&gt;，使用&lt;xref:System.Collections.Hashtable.Synchronized%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Synchronized%2A&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>However, derived classes can provide their own synchronized version of the &lt;xref:System.Collections.Hashtable&gt; using the SyncRoot property.</source>
          <target state="translated">不過，在衍生的類別可以提供自己的同步處理的版本&lt;xref:System.Collections.Hashtable&gt;使用 SyncRoot 屬性。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The synchronizing code must perform operations on the SyncRoot of the &lt;xref:System.Collections.Hashtable&gt;, not directly on the &lt;xref:System.Collections.Hashtable&gt; .</source>
          <target state="translated">同步處理的程式碼必須在上執行作業的 SyncRoot &lt;xref:System.Collections.Hashtable&gt;，不是直接在&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt; &lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">這可確保衍生自其他物件的集合正常運作。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the &lt;xref:System.Collections.Hashtable&gt; object.</source>
          <target state="translated">具體而言，保持正常的同步處理與其他可能同時修改的執行緒&lt;xref:System.Collections.Hashtable&gt;物件。&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是執行緒安全的程序。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The following code example shows how to lock the collection using the SyncRoot during the entire enumeration:       <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>Classic Hashtable.IsSynchronized Example#2<ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)</ept><ept id="p5">]</ept></source>
          <target state="translated">下列程式碼範例示範如何中鎖定集合，在整個列舉過程中使用 syncroot 同步︰ <bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p2">](~/add/codesnippet/cpp/p-system.collections.has_0_1.cpp)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;<ept id="p4">](~/add/codesnippet/visualbasic/p-system.collections.has_0_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cs</bpt><bpt id="p6">[</bpt>傳統 Hashtable.IsSynchronized 範例&amp;#2;    <ept id="p6">](~/add/codesnippet/csharp/p-system.collections.has_0_1.cs)</ept><ept id="p5">]</ept></target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">物件，可用來同步處理存取具備<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic、 C#]      <ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議，而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但無法用於修改基礎集合。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Reset%2A&gt; also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;也會列舉值帶回至這個位置。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>At this position, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">在這個位置上，呼叫&lt;xref:System.Collections.IEnumerator.Current%2A&gt;擲回例外狀況。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Therefore, you must call &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">因此，您必須呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;前進的第一個元素之前讀取&lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;值集合的列舉值&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;會傳回相同的物件直到&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;稱為。&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;下一個項目。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;超過集合的列舉值的結尾會位於集合中的最後一個元素之後和&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;也會傳回<ph id="ph1">`false`</ph>。&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returned <ph id="ph1">`false`</ph>, calling &lt;xref:System.Collections.IEnumerator.Current%2A&gt; throws an exception.</source>
          <target state="translated">如果最後一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;傳回<ph id="ph1">`false`</ph>，則呼叫&lt;xref:System.Collections.IEnumerator.Current%2A&gt;擲回例外狀況。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">若要設定&lt;xref:System.Collections.IEnumerator.Current%2A&gt;的第一個元素的集合，您可以呼叫&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;後面加上&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值無效，而且下一個呼叫&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;或&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;擲回&lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>If the collection is modified between &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; and &lt;xref:System.Collections.IEnumerator.Current%2A&gt;, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;和&lt;xref:System.Collections.IEnumerator.Current%2A&gt;，&lt;xref:System.Collections.IEnumerator.Current%2A&gt;傳回項目所設定，即使列舉值已經無效。&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取因此，列舉集合在本質上並非安全執行緒的程序。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>This method is an O(1) operation.</source>
          <target state="translated">這個方法是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; that can be used to iterate through the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;，可用來逐一查看集合。&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Gets an &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得&lt;xref:System.Collections.ICollection&gt;包含中的值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>The order of the values in the &lt;xref:System.Collections.ICollection&gt; is unspecified, but it is the same order as the associated keys in the &lt;xref:System.Collections.ICollection&gt; returned by the &lt;xref:System.Collections.Hashtable.Keys%2A&gt; method.</source>
          <target state="translated">中值的順序&lt;xref:System.Collections.ICollection&gt;並未指定，但它是關聯的索引鍵中的相同順序&lt;xref:System.Collections.ICollection&gt;傳回&lt;xref:System.Collections.Hashtable.Keys%2A&gt;方法。&lt;/xref:System.Collections.Hashtable.Keys%2A&gt; &lt;/xref:System.Collections.ICollection&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The returned &lt;xref:System.Collections.ICollection&gt; is not a static copy; instead, the &lt;xref:System.Collections.ICollection&gt; refers back to the values in the original &lt;xref:System.Collections.Hashtable&gt;.</source>
          <target state="translated">傳回&lt;xref:System.Collections.ICollection&gt;不是靜態的複本; 相反地，&lt;xref:System.Collections.ICollection&gt;原始&lt;xref:System.Collections.Hashtable&gt;.&lt;/xref:System.Collections.Hashtable&gt;中的值是指回&lt;/xref:System.Collections.ICollection&gt;&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>Therefore, changes to the &lt;xref:System.Collections.Hashtable&gt; continue to be reflected in the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">因此，變更&lt;xref:System.Collections.Hashtable&gt;才會反映在&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt;繼續&lt;/xref:System.Collections.Hashtable&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">擷取這個屬性的值是一種 o （1） 運算。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; containing the values in the <bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;包含中的值<bpt id="p1">&lt;xref href="System.Collections.Hashtable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>