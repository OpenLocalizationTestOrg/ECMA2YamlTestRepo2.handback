<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8617fd2888dadcba65ab15c4e282aa49bbc924c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices._ConstructorInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d05ca903b033faab5ab5aa41930fd2ee505969c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7093f0a2a9ffd066a512ff33ff5ea197de00752d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes the public members of the <ph id="ph1">&amp;lt;</ph>xref:System.Reflection.ConstructorInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> class to unmanaged code.</source>
          <target state="translated">公開的 public 成員<ph id="ph1">&amp;lt;</ph>xref:System.Reflection.ConstructorInfo?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>至 unmanaged 程式碼的類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">此介面會從 unmanaged 程式碼，是對存取 managed 類別，而且不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class discovers the attributes of a class constructor and provides access to constructor metadata.</source>
          <target state="translated">&lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;類別探索類別建構函式的屬性，並提供建構函式中繼資料的存取。&lt;/xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The _ConstructorInfo interface preserves the vtable order of the &lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt; class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">_ConstructorInfo 介面保留的 vtable 順序的&lt;xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;類別可由 unmanaged COM 物件存取的成員。&lt;/xref:System.Reflection.ConstructorInfo?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Attributes*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.Attributes*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.Attributes*&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.Attributes%2A&gt; property gets the attributes associated with this method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Attributes%2A&gt;屬性會取得與此方法關聯的屬性。&lt;/xref:System.Reflection.MethodBase.Attributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the &lt;xref:System.Reflection.MethodAttributes&gt; values.</source>
          <target state="translated">其中一個&lt;xref:System.Reflection.MethodAttributes&gt;值。&lt;/xref:System.Reflection.MethodAttributes&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.CallingConvention*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.CallingConvention*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.CallingConvention*&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt; property gets a value indicating the calling conventions for this method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.CallingConvention%2A&gt;屬性會取得值，指出這個方法的呼叫慣例。&lt;/xref:System.Reflection.MethodBase.CallingConvention%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.CallingConventions&gt; for this method.</source>
          <target state="translated">&lt;xref:System.Reflection.CallingConventions&gt;，此方法。&lt;/xref:System.Reflection.CallingConventions&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.DeclaringType*&gt;屬性。&lt;/xref:System.Reflection.MemberInfo.DeclaringType*&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt; property gets the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;屬性會取得宣告此成員的類別。&lt;/xref:System.Reflection.MemberInfo.DeclaringType%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object for the class that declares this member.</source>
          <target state="translated">&lt;xref:System.Type&gt;宣告這個成員的類別的物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.Equals*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Object.Equals*&gt;方法。&lt;/xref:System.Object.Equals*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.Equals%2A&gt; method determines whether the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;方法會判斷是否&lt;xref:System.Object&gt;等於目前&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;&lt;/xref:System.Object&gt;指定&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to compare with the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;要與目前&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;比較&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified &lt;xref:System.Object&gt; is equal to the current &lt;xref:System.Object&gt;; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果指定&lt;xref:System.Object&gt;是否等於目前&lt;xref:System.Object&gt;，否則<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。&lt;/xref:System.Object&gt; &lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;方法。&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt; method returns an array containing all the custom attributes.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;方法會傳回陣列，其中包含的所有自訂屬性。&lt;/xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</source>
          <target state="translated">陣列，其中包含所有的自訂屬性或零個項目，如果沒有定義屬性的陣列。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt;方法。&lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes*&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt; method returns an array of custom attributes identified by &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;方法會傳回&lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt;所識別的自訂屬性的陣列&lt;/xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The type of attribute to search for.</source>
          <target state="translated">要搜尋的屬性類型。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Only attributes that are assignable to this type are returned.</source>
          <target state="translated">會傳回可指派給這個類型的屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</source>
          <target state="translated">陣列的自訂屬性套用至這個成員或如果沒有屬性已套用零 (0) 元素的陣列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetHashCode*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Object.GetHashCode*&gt;方法。&lt;/xref:System.Object.GetHashCode*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.GetHashCode%2A&gt; method serves as a hash function for a particular type.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;方法做為特定類型的雜湊函式。&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.GetHashCode%2A&gt; is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated">&lt;xref:System.Object.GetHashCode%2A&gt;適用於雜湊演算法和資料結構，例如雜湊表。&lt;/xref:System.Object.GetHashCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The hash code for the current instance.</source>
          <target state="translated">目前的執行個體的雜湊碼。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Maps a set of names to a corresponding set of dispatch identifiers.</source>
          <target state="translated">將一組名稱對應至一組對應的分派識別項。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetIDsOfNames`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">保留供將來使用。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">必須是 IID_NULL。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Passed-in array of names to be mapped.</source>
          <target state="translated">傳入的對應名稱的陣列。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Count of the names to be mapped.</source>
          <target state="translated">要對應的名稱計數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret the names.</source>
          <target state="translated">地區設定內容，用於解譯名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Caller-allocated array that receives the IDs corresponding to the names.</source>
          <target state="translated">呼叫端配置的陣列，用於接收對應於名稱的 Id。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt; member.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;成員。&lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags*&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt; member returns the &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;成員傳回&lt;xref:System.Reflection.MethodImplAttributes&gt;旗標。&lt;/xref:System.Reflection.MethodImplAttributes&gt; &lt;/xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodImplAttributes&gt; flags.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodImplAttributes&gt;旗標。&lt;/xref:System.Reflection.MethodImplAttributes&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.GetParameters*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.GetParameters*&gt;方法。&lt;/xref:System.Reflection.MethodBase.GetParameters*&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt; method gets the parameters of the specified method or constructor.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;方法會取得指定的方法或建構函式的參數。&lt;/xref:System.Reflection.MethodBase.GetParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.Reflection.ParameterInfo&gt; containing information that matches the signature of the method (or constructor) reflected by this instance.</source>
          <target state="translated">類型的陣列&lt;xref:System.Reflection.ParameterInfo&gt;包含資訊的方法 （或建構函式） 之簽章相符的這個執行個體所反映。&lt;/xref:System.Reflection.ParameterInfo&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.GetType*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Object.GetType*&gt;方法。&lt;/xref:System.Object.GetType*&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object.GetType%2A&gt; method gets the type of the current instance.</source>
          <target state="translated">&lt;xref:System.Object.GetType%2A&gt;方法會取得目前的執行個體的類型。&lt;/xref:System.Object.GetType%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Type&gt; object.</source>
          <target state="translated">A&lt;xref:System.Type&gt;物件。&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Retrieves the type information for an object, which can then be used to get the type information for an interface.</source>
          <target state="translated">擷取的類型資訊物件，然後可以用來取得介面的型別資訊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetTypeInfo`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The type information to return.</source>
          <target state="translated">要傳回的類型資訊。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The locale identifier for the type information.</source>
          <target state="translated">型別資訊的地區設定識別項。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Receives a pointer to the requested type information object.</source>
          <target state="translated">接收到要求的類型資訊物件的指標。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</source>
          <target state="translated">擷取物件提供 （0 或 1） 的類型資訊介面數目。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::GetTypeInfoCount`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Points to a location that receives the number of type information interfaces provided by the object.</source>
          <target state="translated">指向接收物件提供的類型資訊介面數目的位置。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Provides access to properties and methods exposed by an object.</source>
          <target state="translated">提供屬性和物件所公開的方法存取權。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`IDispatch::Invoke`</ph>, see the MSDN Library.</source>
          <target state="translated">如需有關<ph id="ph1">`IDispatch::Invoke`</ph>，請參閱 MSDN Library。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Identifies the member.</source>
          <target state="translated">辨識成員。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
          <target state="translated">保留供將來使用。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Must be IID_NULL.</source>
          <target state="translated">必須是 IID_NULL。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The locale context in which to interpret arguments.</source>
          <target state="translated">地區設定內容，用於解譯引數。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Flags describing the context of the call.</source>
          <target state="translated">描述呼叫之內容的旗標。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</source>
          <target state="translated">此結構包含引數陣列，為具名引數，以及陣列中的項目數目的計數的引數 Dispid 陣列指標。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Pointer to the location where the result is to be stored.</source>
          <target state="translated">儲存結果之位置的指標。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Pointer to a structure that contains exception information.</source>
          <target state="translated">包含例外狀況資訊的結構指標。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The index of the first argument that has an error.</source>
          <target state="translated">發生錯誤的第一個引數索引。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.Invoke*&gt;方法。&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;方法會叫用此&lt;xref:System.Reflection.ConstructorInfo&gt;指定的引數，指定&lt;xref:System.Reflection.Binder&gt;.&lt;/xref:System.Reflection.Binder&gt;的條件約束&lt;/xref:System.Reflection.ConstructorInfo&gt;所反映的建構函式&lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">建立這個方法的執行個體。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，指定繫結的類型。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，定義一組屬性並啟用繫結、 引數類型強制型轉和使用反映的成員引動過程。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">類型的陣列<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用來比對數目、 順序和類型的參數的條件約束這個建構函式， <ph id="ph1">`binder`</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</source>
          <target state="translated">如果這個建構函式不需要參數，傳遞的陣列項目為零，做為 in 物件 [] 參數 = 新的物件 [0]。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">參考類型的項目，這個值會<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">針對實值型別項目，這個值是 0、 0.0、 或<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取決於特定的項目類型。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.</source>
          <target state="translated">A&lt;xref:System.Globalization.CultureInfo&gt;用於管理類型的強制型轉。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果這是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;會使用目前的執行緒。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">類別建構函式相關聯的執行個體。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.Invoke*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.Invoke*&gt;方法。&lt;/xref:System.Reflection.MethodBase.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.Invoke%2A&gt; method invokes the method or constructor represented by this object, using the specified parameters.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;方法會叫用方法或建構函式，由這個物件，使用指定的參數。&lt;/xref:System.Reflection.MethodBase.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The instance that created this method.</source>
          <target state="translated">建立這個方法的執行個體。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An argument list for the invoked method or constructor.</source>
          <target state="translated">叫用的方法或建構函式引數清單。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked.</source>
          <target state="translated">這是具有相同的數目、 順序和類型的物件陣列做為方法或建構函式來叫用的參數。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If there are no parameters, <ph id="ph1">`parameters`</ph> should be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">如果沒有任何參數，<ph id="ph1">`parameters`</ph>應該<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If the method or constructor represented by this instance takes a <bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic), no special attribute is required for that parameter in order to invoke the method or constructor using this function.</source>
          <target state="translated">如果所代表的方法或建構函式會採用這個執行個體<bpt id="p1">&lt;xref uid="langword_csharp_ref" name="ref" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數 (<bpt id="p2">&lt;xref uid="langword_csharp_ByRef" name="ByRef" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>在 Visual Basic 中)，才能叫用方法或建構函式使用這個函式是必要該參數沒有特殊屬性。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">參考類型的項目，這個值會<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">針對實值型別項目，這個值是 0、 0.0、 或<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取決於特定的項目類型。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">類別建構函式相關聯的執行個體。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt;方法。&lt;/xref:System.Reflection.ConstructorInfo.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by this &lt;xref:System.Reflection.ConstructorInfo&gt; object with the specified arguments, under the constraints of the specified &lt;xref:System.Reflection.Binder&gt; object.</source>
          <target state="translated">&lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;方法會叫用的建構函式所這反映&lt;xref:System.Reflection.ConstructorInfo&gt;物件與指定的引數，在指定的條件約束下&lt;xref:System.Reflection.Binder&gt;物件。&lt;/xref:System.Reflection.Binder&gt; &lt;/xref:System.Reflection.ConstructorInfo&gt; &lt;/xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the type of binding.</source>
          <target state="translated">其中一個<bpt id="p1">&lt;xref uid="langword_csharp_BindingFlags" name="BindingFlags" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>值，指定繫結的類型。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_Binder" name="Binder" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，定義一組屬性並啟用繫結、 引數類型強制型轉和使用反映的成員引動過程。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</source>
          <target state="translated">If <ph id="ph1">`binder`</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, then <bpt id="p2">&lt;xref uid="langword_csharp_Binder.DefaultBinding" name="Binder.DefaultBinding" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is used.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>An array of type <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to match the number, order, and type of the parameters for this constructor, under the constraints of <ph id="ph1">`binder`</ph>.</source>
          <target state="translated">類型的陣列<bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>用來比對數目、 順序和類型的參數的條件約束這個建構函式， <ph id="ph1">`binder`</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If this constructor does not require parameters, pass an array with zero elements, as in Object[] parameters = new Object[0].</source>
          <target state="translated">如果這個建構函式不需要參數，傳遞的陣列項目為零，做為 in 物件 [] 參數 = 新的物件 [0]。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">參考類型的項目，這個值會<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">針對實值型別項目，這個值是 0、 0.0、 或<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取決於特定的項目類型。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Globalization.CultureInfo&gt; used to govern the coercion of types.</source>
          <target state="translated">A&lt;xref:System.Globalization.CultureInfo&gt;用於管理類型的強制型轉。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If this is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Globalization.CultureInfo&gt; for the current thread is used.</source>
          <target state="translated">如果這是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>、&lt;xref:System.Globalization.CultureInfo&gt;會使用目前的執行緒。&lt;/xref:System.Globalization.CultureInfo&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">類別建構函式相關聯的執行個體。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.ConstructorInfo.Invoke*&gt;方法。&lt;/xref:System.Reflection.ConstructorInfo.Invoke*&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt; method invokes the constructor reflected by the instance that has the specified parameters, providing default values for the parameters not commonly used.</source>
          <target state="translated">&lt;xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;方法會叫用具有指定的參數，並不常用的參數提供預設值的執行個體所反映的建構函式。&lt;/xref:System.Reflection.ConstructorInfo.Invoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An array of values that matches the number, order, and type (under the constraints of the default binder) of the parameters for this constructor.</source>
          <target state="translated">符合數目、 順序和類型 （在預設的繫結器的條件約束） 的這個建構函式參數的值陣列。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>If this constructor takes no parameters, then use either an array with zero elements or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, as in Object[] parameters = new Object[0].</source>
          <target state="translated">如果這個建構函式會不採用任何參數，然後使用其中一個陣列項目為零或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，如所示 Object [] parameters = 新的物件 [0]。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Any object in this array that is not explicitly initialized with a value will contain the default value for that object type.</source>
          <target state="translated">未明確初始化的值，這個陣列中的任何物件將包含該物件類型的預設值。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For reference-type elements, this value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">參考類型的項目，這個值會<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For value-type elements, this value is 0, 0.0, or <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, depending on the specific element type.</source>
          <target state="translated">針對實值型別項目，這個值是 0、 0.0、 或<bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，取決於特定的項目類型。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An instance of the class associated with the constructor.</source>
          <target state="translated">類別建構函式相關聯的執行個體。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAbstract*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsAbstract*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsAbstract*&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt; property gets a value indicating whether the method is abstract.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsAbstract%2A&gt;屬性會取得值，指出方法是否為抽象。&lt;/xref:System.Reflection.MethodBase.IsAbstract%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is abstract; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果方法為抽象。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsAssembly*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsAssembly*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt; property gets a value indicating whether this method can be called by other classes in the same assembly.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsAssembly%2A&gt;屬性會取得值，指出是否可以由其他類別相同的組件呼叫這個方法。&lt;/xref:System.Reflection.MethodBase.IsAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method can be called by other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果可以由其他類別相同的組件; 呼叫此方法否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsConstructor*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsConstructor*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsConstructor*&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt; property gets a value indicating whether the method is a constructor.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsConstructor%2A&gt;屬性會取得值，指出該方法建構函式。&lt;/xref:System.Reflection.MethodBase.IsConstructor%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is a constructor; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此方法的建構函式。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined*&gt; member.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.IsDefined*&gt;成員。&lt;/xref:System.Reflection.MemberInfo.IsDefined*&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt; member indicates whether one or more instances of <ph id="ph1">`attributeType`</ph> is applied to this member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.IsDefined%2A&gt;指出成員是否的一或多個執行個體<ph id="ph1">`attributeType`</ph>套用至這個成員。&lt;/xref:System.Reflection.MemberInfo.IsDefined%2A&gt;</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to which the custom attributes are applied.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Type" name="Type" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>来套用自訂屬性的物件。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Specifies whether to search this member's inheritance chain to find the attributes.</source>
          <target state="translated">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if one or more instances of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">attributeType</ph><ept id="p2">&lt;/code&gt;</ept> is applied to this member; otherwise <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果一或多個執行個體的<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">attributeType</ph> <ept id="p2">&lt;/code&gt;</ept>套用至這個成員; 否則為<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamily*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsFamily*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsFamily*&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt; property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamily%2A&gt;屬性會取得值，指出這個方法的存取是否為類別的成員和其衍生類別的成員限制。&lt;/xref:System.Reflection.MethodBase.IsFamily%2A&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存取此類別是類別本身的成員和其衍生的類別; 的成員限制否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes if they are in the same assembly.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;屬性取得值，指出是否有相同的組件，可以被衍生類別呼叫這個方法。&lt;/xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個方法的存取限制類別本身的成員和衍生類別中相同的組件; 的成員否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly*&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt; property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;屬性會取得值，指出是否此方法可以呼叫由衍生類別，無論在何處，並由相同組件中的所有類別。&lt;/xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個方法的存取限制為本身之類別的成員，成員的衍生類別任一處，以及其他類別相同的組件; 的成員否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsFinal*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsFinal*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsFinal*&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt; property gets a value indicating whether this method is <ph id="ph1">`final`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsFinal%2A&gt;屬性會取得值，指出這個方法<ph id="ph1">`final`</ph>。&lt;/xref:System.Reflection.MethodBase.IsFinal%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此方法<bpt id="p2">&lt;xref uid="langword_csharp_final" name="final" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsHideBySig*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsHideBySig*&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt; property gets a value indicating whether only a member of the same kind with exactly the same signature is hidden in the derived class.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;屬性會取得值，指出是否隱藏完全相同的簽章相同類型的成員在衍生類別中&lt;/xref:System.Reflection.MethodBase.IsHideBySig%2A&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the member is hidden by signature; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果簽章，會隱藏成員，否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPrivate*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsPrivate*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsPrivate*&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt; property gets a value indicating whether this member is private.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsPrivate%2A&gt;屬性會取得值，指出這個成員私用。&lt;/xref:System.Reflection.MethodBase.IsPrivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to this method is restricted to other members of the class itself; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果存取此方法是限制為本身; 類別的其他成員否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsPublic*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsPublic*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsPublic*&gt;</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt; property gets a value indicating whether this is a public method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsPublic%2A&gt;屬性會取得值，指出這是否為公用方法。&lt;/xref:System.Reflection.MethodBase.IsPublic%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is public; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個方法是公用的。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsSpecialName*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsSpecialName*&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt; property gets a value indicating whether this method has a special name.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;屬性會取得值，指出這個方法是否有特殊的名稱。&lt;/xref:System.Reflection.MethodBase.IsSpecialName%2A&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method has a special name; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果這個方法有特殊的名稱。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsStatic*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsStatic*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsStatic*&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`static`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsStatic%2A&gt;屬性會取得值，指出方法是否<ph id="ph1">`static`</ph>。&lt;/xref:System.Reflection.MethodBase.IsStatic%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此方法<bpt id="p2">&lt;xref uid="langword_csharp_static" name="static" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.IsVirtual*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.IsVirtual*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.IsVirtual*&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt; property gets a value indicating whether the method is <ph id="ph1">`virtual`</ph>.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.IsVirtual%2A&gt;屬性會取得值，指出方法是否<ph id="ph1">`virtual`</ph>。&lt;/xref:System.Reflection.MethodBase.IsVirtual%2A&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this method is <bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果此方法<bpt id="p2">&lt;xref uid="langword_csharp_virtual" name="virtual" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，否則<bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.ConstructorInfo.MemberType*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.ConstructorInfo.MemberType*&gt;屬性。&lt;/xref:System.Reflection.ConstructorInfo.MemberType*&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.ConstructorInfo.MemberType%2A&gt; property gets a &lt;xref:System.Reflection.MemberTypes&gt; value indicating the type of the member — method, constructor, event, and so on.</source>
          <target state="translated">&lt;xref:System.Reflection.ConstructorInfo.MemberType%2A&gt;屬性會取得&lt;xref:System.Reflection.MemberTypes&gt;值，指出成員類型 — 方法、 建構函式、 事件等等。&lt;/xref:System.Reflection.MemberTypes&gt; &lt;/xref:System.Reflection.ConstructorInfo.MemberType%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating the type of member.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Reflection.MemberTypes"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值，指出成員的型別。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MethodBase.MethodHandle*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MethodBase.MethodHandle*&gt;屬性。&lt;/xref:System.Reflection.MethodBase.MethodHandle*&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt; property gets a handle to the internal metadata representation of a method.</source>
          <target state="translated">&lt;xref:System.Reflection.MethodBase.MethodHandle%2A&gt;屬性會取得方法之內部中繼資料表示的控制代碼。&lt;/xref:System.Reflection.MethodBase.MethodHandle%2A&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.RuntimeMethodHandle&gt; object.</source>
          <target state="translated">A&lt;xref:System.RuntimeMethodHandle&gt;物件。&lt;/xref:System.RuntimeMethodHandle&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.Name*&gt;屬性。&lt;/xref:System.Reflection.MemberInfo.Name*&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.Name%2A&gt; property gets the name of the current member.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;屬性會取得目前成員的名稱。&lt;/xref:System.Reflection.MemberInfo.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; containing the name of this member.</source>
          <target state="translated">A&lt;xref:System.String&gt;包含這個成員的名稱。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt; property.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Reflection.MemberInfo.ReflectedType*&gt;屬性。&lt;/xref:System.Reflection.MemberInfo.ReflectedType*&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property gets the class object that was used to obtain this instance of &lt;xref:System.Reflection.MemberInfo&gt;.</source>
          <target state="translated">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;屬性會取得用來取得這個執行個體的&lt;xref:System.Reflection.MemberInfo&gt;。&lt;/xref:System.Reflection.MemberInfo&gt;類別物件&lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; object through which this &lt;xref:System.Reflection.MemberInfo&gt; object was obtained.</source>
          <target state="translated">&lt;xref:System.Type&gt;物件，可透過這個&lt;xref:System.Reflection.MemberInfo&gt;取得物件。&lt;/xref:System.Reflection.MemberInfo&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Provides COM objects with version-independent access to the &lt;xref:System.Object.ToString*&gt; method.</source>
          <target state="translated">COM 物件提供與版本無關的存取權&lt;xref:System.Object.ToString*&gt;方法。&lt;/xref:System.Object.ToString*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A string that represents the current &lt;xref:System.Object&gt;.</source>
          <target state="translated">字串，代表目前&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>