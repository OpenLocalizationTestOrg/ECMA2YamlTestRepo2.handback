<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">869e2d13071ffdd5c6fbb3cdaec0c6cbfba8ffe0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.BufferedStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30ffa020e95f88d749a4c4b94885b0ba7d1370ac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">578f042a0dadbb4176f263189037db06eac6b3e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Adds a buffering layer to read and write operations on another stream.</source>
          <target state="translated">將讀取和寫入作業上另一個資料流緩衝層。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a default buffer size of 4096 bytes.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 4096 位元組的預設緩衝區大小類別。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">共用的讀取/寫入緩衝區配置第一次<ph id="ph1">`BufferedStream`</ph>物件會使用這個建構函式進行初始化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">如果所有讀取和寫入都是大於或等於不使用的共用的緩衝區<ph id="ph1">`bufferSize`</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">目前的資料流。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified buffer size.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.IO.BufferedStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別具有指定的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A shared read/write buffer is allocated the first time a <ph id="ph1">`BufferedStream`</ph> object is initialized with this constructor.</source>
          <target state="translated">共用的讀取/寫入緩衝區配置第一次<ph id="ph1">`BufferedStream`</ph>物件會使用這個建構函式進行初始化。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The shared buffer is not used if all reads and writes are greater than or equal to <ph id="ph1">`bufferSize`</ph>.</source>
          <target state="translated">如果所有讀取和寫入都是大於或等於不使用的共用的緩衝區<ph id="ph1">`bufferSize`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The current stream.</source>
          <target state="translated">目前的資料流。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The buffer size in bytes.</source>
          <target state="translated">緩衝區大小，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>為負。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">開始非同步的讀取的作業。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(請考慮使用&lt;xref:System.IO.BufferedStream.ReadAsync*&gt;代替; 請參閱 &lt; 備註 &gt; 一節。)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和舊版中，您必須使用下列方法&lt;xref:System.IO.Stream.BeginRead%2A&gt;和&lt;xref:System.IO.Stream.EndRead%2A&gt;實作非同步檔案作業。&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">這些方法都仍有<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支援舊版的程式碼; 不過，新的非同步方法，例如&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;， &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;，和&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;，協助您更輕鬆地實作非同步檔案作業。&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;必須呼叫一次的 BeginRead 每次呼叫。&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">若要開始另一次讀取之前結束讀取的處理序失敗，可能會導致非預期的行為，例如死結。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.BufferedStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 使用&lt;xref:System.IO.BufferedStream.CanRead%2A&gt;屬性來判斷目前的執行個體是否支援讀取。&lt;/xref:System.IO.BufferedStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.BufferedStream.EndRead%2A&gt; must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndRead%2A&gt;必須先呼叫與這個&lt;xref:System.IAsyncResult&gt;找出多少位元組被讀取。&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The buffer to read the data into.</source>
          <target state="translated">要讀取資料的緩衝區。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data read from the stream.</source>
          <target state="translated">中的位元組位移<ph id="ph1">`buffer`</ph>中要開始寫入自資料流讀取的資料。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">要讀取的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">選擇性的非同步回呼，在讀取完成時呼叫。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">從其他要求使用者提供的物件，可區別這個特定非同步讀取的要求。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">物件，表示可能還在暫止的非同步讀取。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Attempted an asynchronous read past the end of the stream.</source>
          <target state="translated">嘗試了非同步讀取超過資料流的結尾。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The buffer length minus <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">緩衝區長度減去<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>是小於<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The current stream does not support the read operation.</source>
          <target state="translated">目前資料流不支援讀取的作業。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">開始非同步的寫入作業。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(請考慮使用&lt;xref:System.IO.BufferedStream.WriteAsync*&gt;代替; 請參閱 &lt; 備註 &gt; 一節。)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和舊版中，您必須使用下列方法&lt;xref:System.IO.Stream.BeginWrite%2A&gt;和&lt;xref:System.IO.Stream.EndWrite%2A&gt;實作非同步檔案作業。&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">這些方法都仍有<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支援舊版的程式碼; 不過，新的非同步方法，例如&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;， &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;，和&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;，協助您更輕鬆地實作非同步檔案作業。&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;必須正好一次上呼叫每個&lt;xref:System.IAsyncResult&gt;從 BeginWrite。&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt; will block until the I/O operation has completed.</source>
          <target state="translated">&lt;xref:System.IO.BufferedStream.EndWrite%2A&gt;將會封鎖，直到 I/O 作業完成為止。&lt;/xref:System.IO.BufferedStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">包含要寫入目前資料流資料的緩衝區。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">中以零為起始的位元組位移<ph id="ph1">`buffer`</ph>中要開始複製位元組到目前資料流。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">要寫入的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">在非同步寫入作業完成時要呼叫方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">使用者提供的物件，可從其他要求中辨別這個特定非同步寫入要求。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous write which could still be pending.</source>
          <target state="translated">物件，參考可能還在暫止的非同步寫入。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> length minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>長度減去<ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph>是小於<ph id="ph3">&lt;code&gt;count&lt;/code&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">資料流不支援寫入。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">取得值，指出目前資料流是否支援讀取。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support reading, calls to the &lt;xref:System.IO.BufferedStream.Read%2A&gt;, &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;, &lt;xref:System.IO.Stream.BeginRead%2A&gt;, &lt;xref:System.IO.Stream.EndRead%2A&gt;, and the <ph id="ph1">`Peek`</ph> methods of &lt;xref:System.IO.StreamReader&gt;, &lt;xref:System.IO.StringReader&gt;, and &lt;xref:System.IO.TextReader&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果類別衍生自&lt;xref:System.IO.Stream&gt;不支援讀取，但呼叫&lt;xref:System.IO.BufferedStream.Read%2A&gt;， &lt;xref:System.IO.BufferedStream.ReadByte%2A&gt;， &lt;xref:System.IO.Stream.BeginRead%2A&gt;， &lt;xref:System.IO.Stream.EndRead%2A&gt;，而<ph id="ph1">`Peek`</ph>方法&lt;xref:System.IO.StreamReader&gt;， &lt;xref:System.IO.StringReader&gt;，而且&lt;xref:System.IO.TextReader&gt;會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.TextReader&gt; &lt;/xref:System.IO.StringReader&gt; &lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Read%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果資料流已關閉，則這個屬性會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports reading; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料流支援讀取，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果資料流已關閉或以唯寫存取開啟。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">取得值，指出目前資料流是否支援搜尋。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support seeking, calls to &lt;xref:System.IO.BufferedStream.Length%2A&gt;, &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Position%2A&gt;, and &lt;xref:System.IO.BufferedStream.Seek%2A&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果類別衍生自&lt;xref:System.IO.Stream&gt;不支援搜尋，但呼叫&lt;xref:System.IO.BufferedStream.Length%2A&gt;， &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;， &lt;xref:System.IO.BufferedStream.Position%2A&gt;，而且&lt;xref:System.IO.BufferedStream.Seek%2A&gt;會擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.Seek%2A&gt; &lt;/xref:System.IO.BufferedStream.Position%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.BufferedStream.Length%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果資料流已關閉，則這個屬性會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports seeking; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料流支援搜尋。，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果資料流已關閉，或資料流建構從作業系統控制代碼，例如管道或輸出至主控台。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">取得值，指出目前資料流是否支援寫入。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support writing, a call to &lt;xref:System.IO.BufferedStream.SetLength%2A&gt;, &lt;xref:System.IO.BufferedStream.Write%2A&gt;, or &lt;xref:System.IO.BufferedStream.WriteByte%2A&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">如果類別衍生自&lt;xref:System.IO.Stream&gt;不支援寫入，呼叫&lt;xref:System.IO.BufferedStream.SetLength%2A&gt;， &lt;xref:System.IO.BufferedStream.Write%2A&gt;，或&lt;xref:System.IO.BufferedStream.WriteByte%2A&gt;擲回&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.BufferedStream.WriteByte%2A&gt; &lt;/xref:System.IO.BufferedStream.Write%2A&gt; &lt;/xref:System.IO.BufferedStream.SetLength%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果資料流已關閉，則這個屬性會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports writing; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果資料流支援寫入;<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>如果資料流已關閉或以唯讀存取開啟。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">等候暫止非同步讀取作業完成。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(請考慮使用&lt;xref:System.IO.BufferedStream.ReadAsync*&gt;代替; 請參閱 &lt; 備註 &gt; 一節。)&lt;/xref:System.IO.BufferedStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginRead%2A&gt; and &lt;xref:System.IO.Stream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和舊版中，您必須使用下列方法&lt;xref:System.IO.Stream.BeginRead%2A&gt;和&lt;xref:System.IO.Stream.EndRead%2A&gt;實作非同步檔案作業。&lt;/xref:System.IO.Stream.EndRead%2A&gt; &lt;/xref:System.IO.Stream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">這些方法都仍有<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支援舊版的程式碼; 不過，新的非同步方法，例如&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;， &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;，和&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;，協助您更輕鬆地實作非同步檔案作業。&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>EndRead must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">必須與此呼叫 EndRead&lt;xref:System.IAsyncResult&gt;找出多少位元組被讀取。&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">等候暫止的非同步要求的參考。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">從資料流，介於 0 （零） 到您要求的位元組數，讀取的位元組數。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">資料流只傳回 0，只能在資料流末端，否則它們應該封鎖直到至少 1 位元組可用為止。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginRead*&gt; on this class.</source>
          <target state="translated">此&lt;xref:System.IAsyncResult&gt;物件不是藉由呼叫&lt;xref:System.IO.BufferedStream.BeginRead*&gt;在這個類別。&lt;/xref:System.IO.BufferedStream.BeginRead*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">結束非同步寫入作業並封鎖，直到 I/O 作業完成為止。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.BufferedStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(請考慮使用&lt;xref:System.IO.BufferedStream.WriteAsync*&gt;代替; 請參閱 &lt; 備註 &gt; 一節。)&lt;/xref:System.IO.BufferedStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.Stream.BeginWrite%2A&gt; and &lt;xref:System.IO.Stream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">在.NET Framework 4 和舊版中，您必須使用下列方法&lt;xref:System.IO.Stream.BeginWrite%2A&gt;和&lt;xref:System.IO.Stream.EndWrite%2A&gt;實作非同步檔案作業。&lt;/xref:System.IO.Stream.EndWrite%2A&gt; &lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;, &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;, and &lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">這些方法都仍有<ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>以支援舊版的程式碼; 不過，新的非同步方法，例如&lt;xref:System.IO.BufferedStream.ReadAsync%2A&gt;， &lt;xref:System.IO.BufferedStream.WriteAsync%2A&gt;，和&lt;xref:System.IO.BufferedStream.FlushAsync%2A&gt;，協助您更輕鬆地實作非同步檔案作業。&lt;/xref:System.IO.BufferedStream.FlushAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.WriteAsync%2A&gt; &lt;/xref:System.IO.BufferedStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>EndWrite must be called exactly once for every call to &lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;.</source>
          <target state="translated">必須正好一次呼叫 EndWrite，每次呼叫至&lt;xref:System.IO.BufferedStream.BeginRead%2A&gt;。&lt;/xref:System.IO.BufferedStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</source>
          <target state="translated">無法結束讀取的處理程序，在開始之前其他的讀取的作業可能會導致死結或其他非預期的行為。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The pending asynchronous request.</source>
          <target state="translated">暫止的非同步要求。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.BufferedStream.BeginWrite*&gt; on this class.</source>
          <target state="translated">此&lt;xref:System.IAsyncResult&gt;物件不是藉由呼叫&lt;xref:System.IO.BufferedStream.BeginWrite*&gt;在這個類別。&lt;/xref:System.IO.BufferedStream.BeginWrite*&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">清除這個資料流的所有緩衝區，並造成任何緩衝的資料都寫入基礎裝置。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">`Flush`</ph> or &lt;xref:System.IO.Stream.Close%2A&gt;.</source>
          <target state="translated">清除資料流不會清除其基礎的編碼器，除非您明確地呼叫<ph id="ph1">`Flush`</ph>或&lt;xref:System.IO.Stream.Close%2A&gt;.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you use the &lt;xref:System.IO.BufferedStream.%23ctor%2A&gt; constructor, thus specifying the buffer size while creating the <ph id="ph1">`BufferedStream`</ph> object, the content is flushed when it reaches the buffer size.</source>
          <target state="translated">如果您使用&lt;xref:System.IO.BufferedStream.%23ctor%2A&gt;建構函式，因此在建立時指定的緩衝區大小<ph id="ph1">`BufferedStream`</ph>物件內容時達到其大小的緩衝區排清。&lt;/xref:System.IO.BufferedStream.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For example, code such as <ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph> will flush the content when the buffer size reaches 5 bytes.</source>
          <target state="translated">例如，程式碼如<ph id="ph1">`BufferedStream bs = new BufferedStream(bs, 5)`</ph>緩衝區大小到達 5 個位元組時，會清除內容。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>All the read and write methods of <ph id="ph1">`BufferedStream`</ph> automatically maintain the buffer, so there is no need to invoke <ph id="ph2">`Flush`</ph> when switching back and forth between reading and writing.</source>
          <target state="translated">所有的讀取和寫入方法<ph id="ph1">`BufferedStream`</ph>自動維護緩衝區，因此不需要叫用<ph id="ph2">`Flush`</ph>時讀取和寫入之間來回切換。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">資料流已經處置。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The data source or repository is not open.</source>
          <target state="translated">資料來源或儲存機制未開啟。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">以非同步的方式清除這個資料流的所有緩衝區，造成任何緩衝的資料都寫入基礎裝置，並且監視取消要求。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">表示非同步排清作業的工作。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">資料流已經處置。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the stream length in bytes.</source>
          <target state="translated">取得以位元組為單位的資料流的長度。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The stream length in bytes.</source>
          <target state="translated">資料流的長度，以位元組為單位。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The underlying stream is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or closed.</source>
          <target state="translated">基礎資料流<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或已關閉。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">資料流不支援搜尋。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets the position within the current stream.</source>
          <target state="translated">取得目前資料流中的位置。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`get`</ph> accessor invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt; to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.</source>
          <target state="translated"><ph id="ph1">`get`</ph>存取子會叫用&lt;xref:System.IO.BufferedStream.Seek%2A&gt;取得基礎資料流中目前的位置並調整緩衝區中目前的位置根據此值。&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`set`</ph> accessor copies any data previously written to the buffer to the underlying stream, and then invokes &lt;xref:System.IO.BufferedStream.Seek%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`set`</ph>存取子會複製任何先前寫入基礎資料流緩衝區的資料，然後再叫用&lt;xref:System.IO.BufferedStream.Seek%2A&gt;.&lt;/xref:System.IO.BufferedStream.Seek%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支援搜尋到的任何位置超出資料流的長度。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The position within the current stream.</source>
          <target state="translated">目前資料流的位置。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The value passed to &lt;xref:System.IO.BufferedStream.Seek*&gt; is negative.</source>
          <target state="translated">傳遞給的值&lt;xref:System.IO.BufferedStream.Seek*&gt;是負數。&lt;/xref:System.IO.BufferedStream.Seek*&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">發生 I/O 錯誤發生，例如資料流已經關閉。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">資料流不支援搜尋。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Copies bytes from the current buffered stream to an array.</source>
          <target state="translated">從目前緩衝的資料流複製位元組陣列。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Read`</ph> method will return 0 only if the end of the stream is reached.</source>
          <target state="translated"><ph id="ph1">`Read`</ph>方法會傳回 0，只有當資料流結尾為止。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In all other cases, <ph id="ph1">`Read`</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">在其他情況下，<ph id="ph1">`Read`</ph>一律會讀取至少一個位元組資料流後再傳回。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>By definition, if no data is available from the stream upon a call to <ph id="ph1">`Read`</ph>, the <ph id="ph2">`Read`</ph> method returns 0 (the end of the stream is reached automatically).</source>
          <target state="translated">根據定義，如果沒有資料可用的呼叫時，資料流<ph id="ph1">`Read`</ph>、<ph id="ph2">`Read`</ph>方法會傳回的 0 （自動到達資料流末端）。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">實作可以自由地傳回比要求的位元組更少，即使尚未達到資料流結尾。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Use &lt;xref:System.IO.BinaryReader&gt; for reading primitive data types.</source>
          <target state="translated">使用&lt;xref:System.IO.BinaryReader&gt;讀取基本資料型別。&lt;/xref:System.IO.BinaryReader&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The buffer to which bytes are to be copied.</source>
          <target state="translated">是要複製位元組緩衝區。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer at which to begin reading bytes.</source>
          <target state="translated">中要開始寫入讀取位元組緩衝區的位元組位移。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The number of bytes to be read.</source>
          <target state="translated">要讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">總位元組數讀入<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</source>
          <target state="translated">這可能會小於許多位元組目前沒有提供，，或 0，如果已經到達資料流末端，任何資料之前可以被讀取時，要求的位元組數目。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">資料流尚未開啟，或為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">資料流不支援讀取。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">以非同步方式從目前的資料流讀取一連串的位元組資料流位置推進讀取位元組數，並且監視取消要求。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">您可以藉由建立的執行個體建立的取消語彙基元&lt;xref:System.Threading.CancellationTokenSource&gt;類別，並傳遞&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;屬性做為<ph id="ph1">`cancellationToken`</ph>參數。&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">要寫入資料的緩衝區。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">中的位元組位移<ph id="ph1">`buffer`</ph>中要開始寫入資料流的資料。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">要讀取的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">工作表示非同步讀取作業。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">值<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept>參數會包含讀取至緩衝區的位元組總數。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">結果值可能會小於要求的位元組數; 如果目前可用的位元組數目少於所要求的數目，或如果已經到達資料流末端，則可能為 0 （零）。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">總和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>大於緩衝區長度。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">資料流不支援讀取。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">資料流已經處置。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">資料流目前正在使用先前的讀取作業。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Reads a byte from the underlying stream and returns the byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or returns -1 if reading from the end of the stream.</source>
          <target state="translated">從基礎資料流讀取一個位元組，並傳回轉換成位元組<bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，或者如果讀取資料流末端，則傳回-1。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The byte cast to an <bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or -1 if reading from the end of the stream.</source>
          <target state="translated">位元組轉換成<bpt id="p1">&lt;xref uid="langword_csharp_int" name="int" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>，則為-1 讀取資料流結尾。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the stream being closed.</source>
          <target state="translated">發生 I/O 錯誤發生，例如資料流已經關閉。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">資料流不支援讀取。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Sets the position within the current buffered stream.</source>
          <target state="translated">設定目前緩衝的資料流中的位置。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is negative, the new position will precede the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>是負數，新的位置將會在之前所指定的位置<ph id="ph2">`origin`</ph>所指定的位元組數<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is 0, the new position will be the position specified by <ph id="ph2">`origin`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>為 0，新的位置會是所指定的位置<ph id="ph2">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`offset`</ph> is positive, the new position will follow the position specified by <ph id="ph2">`origin`</ph> by the number of bytes specified by <ph id="ph3">`offset`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`offset`</ph>是正數，新的位置將會依照下列所指定的位置<ph id="ph2">`origin`</ph>所指定的位元組數<ph id="ph3">`offset`</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>When a &lt;xref:System.IO.BufferedStream&gt; object is the base stream for a &lt;xref:System.IO.StreamReader&gt; object, calling the Seek method can cause the position of the stream to no longer match the position of the internal buffer in the reader.</source>
          <target state="translated">當&lt;xref:System.IO.BufferedStream&gt;物件是基底資料流&lt;xref:System.IO.StreamReader&gt;物件、 呼叫 Seek 方法可能會導致不再符合內部緩衝區的位置，在讀取器資料流的位置。&lt;/xref:System.IO.StreamReader&gt; &lt;/xref:System.IO.BufferedStream&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To reset the internal buffer, call the &lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt; method; however, this method slows performance and should be called only when absolutely necessary.</source>
          <target state="translated">若要重設內部緩衝區，呼叫&lt;xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;方法; 不過，這個方法會降低效能，而且應該只在絕對必要時呼叫。&lt;/xref:System.IO.StreamReader.DiscardBufferedData%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">支援搜尋到的任何位置超出資料流的長度。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A byte offset relative to <ph id="ph1">`origin`</ph>.</source>
          <target state="translated">相對於的位元組位移<ph id="ph1">`origin`</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A value of type &lt;xref:System.IO.SeekOrigin&gt; indicating the reference point from which to obtain the new position.</source>
          <target state="translated">型別的值&lt;xref:System.IO.SeekOrigin&gt;表示要從中取得新位置的參考點。&lt;/xref:System.IO.SeekOrigin&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The new position within the current buffered stream.</source>
          <target state="translated">目前緩衝的資料流中的新位置。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">資料流尚未開啟，或為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">資料流不支援搜尋。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets the length of the buffered stream.</source>
          <target state="translated">設定緩衝的資料流的長度。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The buffer is flushed before setting the length of the underlying data source or repository.</source>
          <target state="translated">緩衝區排清之前設定的基礎資料來源或儲存機制的長度。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>If the specified value is less than the current length of the buffered stream, the buffered stream is truncated.</source>
          <target state="translated">如果指定的值小於目前緩衝的資料流的長度，則會截斷緩衝的資料流。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded.</source>
          <target state="translated">如果指定的值大於目前緩衝的資料流的長度，會展開緩衝的資料流。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.</source>
          <target state="translated">如果展開緩衝的資料流時，舊的和新長度之間緩衝的資料流的內容未定義。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SetLength`</ph> flushes any buffered writes if necessary.</source>
          <target state="translated"><ph id="ph1">`SetLength`</ph>如有必要，請清除任何經過緩衝處理的寫入。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">資料流必須支援寫入和搜尋的<ph id="ph1">`SetLength`</ph>運作。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>An integer indicating the desired length of the current buffered stream in bytes.</source>
          <target state="translated">整數，表示目前緩衝的資料流，以位元組為單位的所需的長度。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>為負。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The stream is not open or is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">資料流尚未開啟，或為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">資料流不支援寫入和搜尋。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</source>
          <target state="translated">將位元組複製到緩衝的資料流和緩衝的資料流中目前位置前移寫入的位元組數目。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The byte array from which to copy <ph id="ph1">`count`</ph> bytes to the current buffered stream.</source>
          <target state="translated">要複製的位元組陣列<ph id="ph1">`count`</ph>目前緩衝的資料流的位元組。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The offset in the buffer at which to begin copying bytes to the current buffered stream.</source>
          <target state="translated">中要開始複製位元組到目前緩衝的資料流緩衝區的位移。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The number of bytes to be written to the current buffered stream.</source>
          <target state="translated">要寫入目前緩衝的資料流的位元組數目。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">Length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> minus <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> is less than <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The stream is closed or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">資料流已關閉或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">資料流不支援寫入。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">以非同步方式將一連串的位元組寫入目前資料流，這個資料流中的目前位置前移寫入的位元組數目，以及監視取消要求。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>You can create a cancellation token by creating an instance of the &lt;xref:System.Threading.CancellationTokenSource&gt; class and passing the &lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt; property as the <ph id="ph1">`cancellationToken`</ph> parameter.</source>
          <target state="translated">您可以藉由建立的執行個體建立的取消語彙基元&lt;xref:System.Threading.CancellationTokenSource&gt;類別，並傳遞&lt;xref:System.Threading.CancellationTokenSource.Token%2A&gt;屬性做為<ph id="ph1">`cancellationToken`</ph>參數。&lt;/xref:System.Threading.CancellationTokenSource.Token%2A&gt; &lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">資料寫入來源緩衝區。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">中以零為起始的位元組位移<ph id="ph1">`buffer`</ph>要從其中開始將位元組複製至資料流。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">要寫入的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">要用於監控取消要求的語彙基元。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">表示非同步寫入作業的工作。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>或<ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph>是負數。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">總和<bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept>和<bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept>大於緩衝區長度。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">資料流不支援寫入。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">資料流已經處置。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">資料流目前正在使用先前的寫入作業。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the buffered stream.</source>
          <target state="translated">將位元組寫入緩衝的資料流中目前的位置。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A byte to write to the stream.</source>
          <target state="translated">要寫入資料流的位元組。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">資料流不支援寫入。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">關閉資料流後呼叫了方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>