<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1a58f4258e37de8646e9bfd12202cc63ef6b9f1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Utilities.MuxLogger.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aca3c7e03c5de31ed550e9598f60739bf980430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2154be4bc3b547d29a543508f7b1355f80b13ab5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a multiplexing logger.</source>
          <target state="translated">代表 multiplexing 記錄器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The purpose of this logger is to register and unregister multiple loggers during the build.</source>
          <target state="translated">這個記錄器的目的是註冊及取消註冊在建置期間的多個記錄器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Supports the <ph id="ph1">[!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)]</ph> IDE scenario in which loggers are registered and unregistered for each project system’s build request.</source>
          <target state="translated">支援<ph id="ph1">[!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)]</ph>IDE 案例記錄器已登錄並為每個專案系統的組建要求取消登錄。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>One physical build can have multiple logical builds, each with its own set of loggers.</source>
          <target state="translated">一個實體組建可以有多個邏輯的組建，每個都有它自己的記錄器集。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>registers itself with the build manager as a regular central /l style logger.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>註冊其本身與組建管理員做為一般的中央 /l 樣式記錄器。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</source>
          <target state="translated">從組建管理員接收訊息，它們正確記錄器，根據邏輯建置，以將訊息路由的來源。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph>generally functions as follows:      -   The <ph id="ph2">`MuxLogger`</ph> is registered at the beginning of the build manager’s Begin build.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>通常函式，如下所示:-<ph id="ph2">`MuxLogger`</ph>註冊的組建管理員開始建置開頭。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Any loggers registered before the build manager starts the build get the build-started event at the same time as the <ph id="ph1">`MuxLogger`</ph>.</source>
          <target state="translated">註冊後，組建管理程式隨即啟動建置任何記錄器取得組建啟動事件做為同時<ph id="ph1">`MuxLogger`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any loggers registered after the build manager starts the build get a synthesized build-started event.</source>
          <target state="translated">任何組建管理員啟動建置後註冊的記錄器取得合成的組建啟動的事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the <ph id="ph1">`MuxLogger`</ph>.</source>
          <target state="translated">無法快取事件，因為組建啟動事件的時間戳記決定事件建立時，並快取事件會提供不正確的建置時間中註冊的記錄器<ph id="ph1">`MuxLogger`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> is initialized by the build manager           The <ph id="ph2">`MuxLogger`</ph> listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>已由組建管理員初始化<ph id="ph2">`MuxLogger`</ph>從組建管理員會接聽事件來源上的所有事件，並正確地將事件路由至已註冊的記錄器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> is shutdown when the build is finished in end build.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>在組建中結束建置完成時關閉。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At this time, it unregisters any loggers attached to it.</source>
          <target state="translated">在這個階段中，它會移除註冊任何附加的記錄器。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>-   The <ph id="ph1">`MuxLogger`</ph> logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</source>
          <target state="translated">-<ph id="ph1">`MuxLogger`</ph>記錄時每個記錄器都會出現的第一個專案啟動事件的專案完成事件完成建置後事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> registers loggers in the following way:      1.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>記錄器註冊方式如下︰ 1。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The logger is passed to the <ph id="ph1">`MuxLogger.RegisterLogger`</ph> method with a submission ID that is used to route a message to that logger.</source>
          <target state="translated">記錄器傳遞至<ph id="ph1">`MuxLogger.RegisterLogger`</ph>提交識別碼為用來將訊息路由至該記錄器的方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> registers the logger to the <ph id="ph2">`MuxLogger`</ph> event source.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>註冊記錄器<ph id="ph2">`MuxLogger`</ph>事件來源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the build-started event has already been logged, the <ph id="ph1">`MuxLogger`</ph> creates a new build-started event and sends it to the logger’s event source.</source>
          <target state="translated">如果建置開始時間的事件已記錄，<ph id="ph1">`MuxLogger`</ph>建立新的組建啟動事件，並將它傳送至記錄器的事件來源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> unregisters loggers in the following way:      1.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>取消註冊的記錄器，方式如下︰ 1。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When a build submission is completed, the <ph id="ph1">`MuxLogger.UnregisterLogger`</ph> method is called with the submission ID for the logger.</source>
          <target state="translated">送出組建完成時，<ph id="ph1">`MuxLogger.UnregisterLogger`</ph>提交識別碼記錄器呼叫方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph> looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>提交識別碼尋找專案完成事件的成功狀態，並建置完成的事件記錄到記錄器。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MuxLogger`</ph>cleans up the event source.</source>
          <target state="translated"><ph id="ph1">`MuxLogger`</ph>清除的事件來源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</source>
          <target state="translated">請注意，取消註冊來自記錄執行緒以外的執行緒，如果記錄事件時，系統會呼叫取消註冊，可能會發生同步處理問題。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the multiplexing logger.</source>
          <target state="translated">建立 multiplexing 記錄器的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initialize the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the specified event source.</source>
          <target state="translated">初始化<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的執行個體與指定的事件來源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">事件的來源。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initialize the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance with the specified event source and specified maximum number of nodes.</source>
          <target state="translated">初始化<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>的執行個體與指定的事件來源和指定的節點的最大數目。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The event source.</source>
          <target state="translated">事件的來源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The maximum number of nodes.</source>
          <target state="translated">節點數目上限。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets and sets the Parameters attribute, required by the <bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">取得並設定參數屬性，所需<bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns the Parameters attribute.</source>
          <target state="translated">傳回的參數屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Registers a logger on the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and raises a build-started event if the build-started event has already been logged.</source>
          <target state="translated">在註冊的記錄器<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，並引發組建啟動的事件已記錄組建啟動的事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The submission ID of the logger being registered.</source>
          <target state="translated">正在註冊的記錄器提交 ID。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The logger to register.</source>
          <target state="translated">要註冊的記錄器。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Shuts down the <bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and clears out any state.</source>
          <target state="translated">關閉<bpt id="p1">&lt;xref uid="langword_csharp_MuxLogger" name="MuxLogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>並清除任何狀態。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Removes the specified logger from the MuxLogger.</source>
          <target state="translated">從 MuxLogger 中移除指定的記錄器。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The submission ID of the logger to be removed.</source>
          <target state="translated">要移除的記錄器提交 ID。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method is successful in removing the logger, otherwise, returns <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">傳回<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>方法是否成功移除記錄器，否則會傳回<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets and sets the Verbosity attribute, required by the <bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">取得與設定的詳細資訊屬性，所需<bpt id="p1">&lt;xref uid="langword_csharp_ILogger" name="ILogger" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>介面。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the Verbosity attribute.</source>
          <target state="translated">傳回的詳細資訊的屬性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>