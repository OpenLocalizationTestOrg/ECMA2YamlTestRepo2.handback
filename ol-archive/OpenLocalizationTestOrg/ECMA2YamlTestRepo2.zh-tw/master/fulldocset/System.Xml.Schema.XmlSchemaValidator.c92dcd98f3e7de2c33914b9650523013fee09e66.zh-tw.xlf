<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4ac62558c0577e175a60eeabe38e09f46fe8d3b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Schema.XmlSchemaValidator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c51a81b344f108aaed03fb0d941e1dcf17c85e2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad40590bbde8a13fd8908f8bb1630a604da696f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an XML Schema Definition Language (XSD) Schema validation engine.</source>
          <target state="translated">表示 XML 結構描述定義語言 (XSD) 結構描述驗證引擎。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class cannot be inherited.</source>
          <target state="translated">XmlSchemaValidator 類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  -   Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt;-請勿使用結構描述從未知或未受信任的來源或位置。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">如此一來，將危害您的程式碼的安全性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>&gt; -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">&gt;-（包括內嵌結構描述） 的 XML 結構描述是本質上容易遭到阻絕服務攻擊。不接受其在受信任的案例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&gt; -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">&gt;-結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">請小心不要公開給未受信任的呼叫端的這項資訊。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner.</source>
          <target state="translated">XmlSchemaValidator 類別提供有效率的高效能機制來驗證 XML 結構描述的 XML 資料以發送為基礎的方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader.</source>
          <target state="translated">比方說，XmlSchemaValidator 類別可讓您以 XML infoset 就地驗證而不需要將其序列化為 XML 文件，然後重新剖析使用驗證的 XML 讀取器的文件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.</source>
          <target state="translated">XmlSchemaValidator 類別也可用來建立驗證引擎，透過自訂的 XML 資料來源，或做為建置驗證 XML 寫入的方式。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information about the XmlSchemaValidator class, see the <bpt id="p1">[</bpt>XmlSchemaValidator Push-Based Validation<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">如需 XmlSchemaValidator 類別的詳細資訊，請參閱<bpt id="p1">[</bpt>XmlSchemaValidator 推入型驗證<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>主題。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an XmlSchemaValidator object are not set be default.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;和&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;XmlSchemaValidator 物件的旗標未設定的驗證是預設值。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an XmlSchemaValidator object is <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">此外， &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;XmlSchemaValidator 物件的屬性是<ph id="ph1">`null`</ph>預設。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">如此一來，外部結構描述中參考包含，import 或 redefine 項目不會解決預設值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the XmlSchemaValidator constructor.</source>
          <target state="translated">以下是使用 XmlSchemaValidator 建構函式時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-   The contents of the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter are copied into an internal &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object when the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; or the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation options are set.</source>
          <target state="translated">-內容&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;參數複製到內部&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;物件時&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;或&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;設定驗證選項。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As a result, changes to the input &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; object during validation do not affect the outcome of validation.</source>
          <target state="translated">如此一來，變更為輸入&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;物件驗證期間不會影響驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaSet&gt; parameter specified is not compiled, its &lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; method is called.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;未編譯指定的參數，其&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;方法呼叫。&lt;/xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaSet&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.IXmlNamespaceResolver&gt; parameter is especially important for validating <ph id="ph1">`xs:QName`</ph> types.</source>
          <target state="translated">-&lt;xref:System.Xml.IXmlNamespaceResolver&gt;參數，請務必特別驗證<ph id="ph1">`xs:QName`</ph>型別。&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; class does not copy the in-scope namespaces from the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object but instead holds a reference to it.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;類別不會複製的範圍內命名空間中的&lt;xref:System.Xml.IXmlNamespaceResolver&gt;物件，但改為保留的參考它。&lt;/xref:System.Xml.IXmlNamespaceResolver&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This allows new namespaces to be added to the &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object during the validation process.</source>
          <target state="translated">這可讓新的命名空間加入至&lt;xref:System.Xml.IXmlNamespaceResolver&gt;驗證程序期間的物件。&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  The &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; and &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation flags of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object are not set be default.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;和&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;驗證旗標&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件不是集合是預設值。&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt; property of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object is <ph id="ph1">`null`</ph> by default.</source>
          <target state="translated">此外，&lt;xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;屬性&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件是<ph id="ph1">`null`</ph>預設。&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</source>
          <target state="translated">如此一來，外部結構描述中參考包含，import 或 redefine 項目不會解決預設值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlNameTable&gt; object containing element and attribute names as atomized strings.</source>
          <target state="translated">&lt;xref:System.Xml.XmlNameTable&gt;物件，其中包含為原子化字串的元素和屬性名稱。&lt;/xref:System.Xml.XmlNameTable&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the XML Schema Definition Language (XSD) schemas used for validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，其中包含用於驗證的 XML 結構描述定義語言 (XSD) 結構描述。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.IXmlNamespaceResolver&gt; object used for resolving namespaces encountered during validation.</source>
          <target state="translated">&lt;xref:System.Xml.IXmlNamespaceResolver&gt;用於解析驗證期間遇到的命名空間的物件。&lt;/xref:System.Xml.IXmlNamespaceResolver&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value specifying schema validation options.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidationFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>值，指定結構描述驗證選項。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或多個指定的參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error occurred while compiling schemas in the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter.</source>
          <target state="translated">編譯結構描述中的時發生錯誤<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</source>
          <target state="translated">將 XML 結構描述定義語言 (XSD) 結構描述加入至用來進行驗證的結構描述集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the AddSchema method.</source>
          <target state="translated">以下是使用 AddSchema 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.</source>
          <target state="translated">-AddSchema 方法可用來模擬遇到內嵌 XML 結構描述驗證 XML 文件中的效果。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-   The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter cannot match that of any element or attribute already encountered by the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object.</source>
          <target state="translated">-目標命名空間&lt;xref:System.Xml.Schema.XmlSchema&gt;參數不相符的任何元素或屬性已遇到&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件。&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt; &lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is not set, the AddSchema method does nothing.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;未設定驗證選項，則 AddSchema 方法沒有作用。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchema&gt; object to add to the set of schemas used for validation.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;要加入至用來進行驗證的結構描述集合物件。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter specified is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;指定參數<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The target namespace of the &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter matches that of any element or attribute already encountered by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">目標命名空間&lt;xref:System.Xml.Schema.XmlSchema&gt;參數與相符的任何元素或屬性已遇到<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchema&gt; parameter is invalid.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchema&gt;參數無效。&lt;/xref:System.Xml.Schema.XmlSchema&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Ends validation and checks identity constraints for the entire XML document.</source>
          <target state="translated">結束驗證，並檢查整個 XML 文件的識別條件約束。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The EndValidation method ends validation and checks identity constraints for the entire XML document if the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; validation option is set.</source>
          <target state="translated">EndValidation 方法結束驗證，並檢查整個 XML 文件的識別條件約束，如果&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;設定驗證選項。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An identity constraint error was found in the XML document.</source>
          <target state="translated">XML 文件中找不到識別條件約束錯誤。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the expected attributes for the current element context.</source>
          <target state="translated">傳回目前的項目內容的預期的屬性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the GetExpectedAttributes method.</source>
          <target state="translated">以下是使用 GetExpectedAttributes 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-   If the GetExpectedAttributes method is called immediately after the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt; method, all the attributes that could appear in the XML document are returned.</source>
          <target state="translated">-如果 GetExpectedAttributes 方法之後，立即呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;方法，可能會顯示為 XML 文件中的所有屬性會都傳回。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-   If the GetExpectedAttributes method is called after one or more calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method, the attributes that haven't yet been validated for the current element are returned.</source>
          <target state="translated">-如果在一或多個呼叫後呼叫 GetExpectedAttributes 方法&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;方法，這個方法會傳回尚未尚未驗證目前元素的屬性。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects or an empty array if there are no expected attributes.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件或沒有預期的屬性則為空白陣列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns the expected particles in the current element context.</source>
          <target state="translated">傳回目前的項目內容中的預期的物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The valid particles that can be returned by the GetExpectedParticles method are instances of the &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; and &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; classes.</source>
          <target state="translated">可以 GetExpectedParticles 方法所傳回的有效物件是的執行個體&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;和&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;類別。&lt;/xref:System.Xml.Schema.XmlSchemaAny&gt; &lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When the compositor for the content model is an <ph id="ph1">`xs:sequence`</ph>, only the next particle in the sequence is returned.</source>
          <target state="translated">當內容模型的複合器為<ph id="ph1">`xs:sequence`</ph>，傳回的下一個物件的順序。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the compositor for the content model is an <ph id="ph1">`xs:all`</ph> or an <ph id="ph2">`xs:choice`</ph>, then all valid particles that could follow in the current element context are returned.</source>
          <target state="translated">如果內容模型的複合器<ph id="ph1">`xs:all`</ph>或<ph id="ph2">`xs:choice`</ph>，則會傳回所有目前的項目內容中的有效物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <ph id="ph1">`book`</ph> element, the <ph id="ph2">`book`</ph> element is the current element context.</source>
          <target state="translated">例如，在 XML 結構描述定義語言 (XSD) 結構描述及 XML 文件之後，在驗證之後<ph id="ph1">`book`</ph>項目，<ph id="ph2">`book`</ph>項目是目前的項目內容。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The GetExpectedParticles method returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id="ph1">`title`</ph> element.</source>
          <target state="translated">GetExpectedParticles 方法會傳回陣列，其中包含單一&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;物件，代表<ph id="ph1">`title`</ph>項目。&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When the validation context is the <ph id="ph1">`title`</ph> element, the GetExpectedParticles method returns an empty array.</source>
          <target state="translated">當驗證內容是<ph id="ph1">`title`</ph>項目，GetExpectedParticles 方法會傳回空陣列。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the GetExpectedParticles method is called after the <ph id="ph1">`title`</ph> element has been validated but before the <ph id="ph2">`description`</ph> element has been validated, it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaElement&gt; object representing the <ph id="ph3">`description`</ph> element.</source>
          <target state="translated">如果之後呼叫 GetExpectedParticles 方法<ph id="ph1">`title`</ph>之前已驗證的項目<ph id="ph2">`description`</ph>已驗證的項目，它會傳回陣列，其中包含單一&lt;xref:System.Xml.Schema.XmlSchemaElement&gt;物件，代表<ph id="ph3">`description`</ph>項目。&lt;/xref:System.Xml.Schema.XmlSchemaElement&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If the GetExpectedParticles method is called after the <ph id="ph1">`description`</ph> element has been validated then it returns an array containing a single &lt;xref:System.Xml.Schema.XmlSchemaAny&gt; object representing the wildcard.</source>
          <target state="translated">如果之後呼叫 GetExpectedParticles 方法<ph id="ph1">`description`</ph>項目已通過驗證，則它會傳回陣列，其中包含單一&lt;xref:System.Xml.Schema.XmlSchemaAny&gt;物件，代表萬用字元。&lt;/xref:System.Xml.Schema.XmlSchemaAny&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">```vb#   Dim reader As XmlReader =  XmlReader.Create("input.xml")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, "schema.xsd")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement("book", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("title", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("description", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement("namespace", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```</ph>      <ph id="ph2">```c#   XmlReader reader = XmlReader.Create("input.xml");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "schema.xsd");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement("book", "", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("title", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("description", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement("namespace", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```</ph>       The example takes the following XML as input.</source>
          <target state="translated"><ph id="ph1">```vb#   Dim reader As XmlReader =  XmlReader.Create("input.xml")       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, "schema.xsd")   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement("book", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("title", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement("description", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement("namespace", "", Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```</ph>      <ph id="ph2">```c#   XmlReader reader = XmlReader.Create("input.xml");      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, "schema.xsd");   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement("book", "", null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("title", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement("description", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement("namespace", "", null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```</ph>該範例使用下列 XML 做為輸入。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;`</ph>       <ph id="ph2">`&lt;xs:element name="book"&gt;`</ph>       <ph id="ph3">`&lt;xs:complexType&gt;`</ph>       <ph id="ph4">`&lt;xs:sequence&gt;`</ph>       <ph id="ph5">`&lt;xs:element name="title" type="xs:string" /&gt;`</ph>       <ph id="ph6">`&lt;xs:element name="description" type="xs:string" /&gt;`</ph>       <ph id="ph7">`&lt;xs:any processContents ="lax"/&gt;`</ph>       <ph id="ph8">`&lt;/xs:sequence&gt;`</ph>       <ph id="ph9">`&lt;/xs:complexType&gt;`</ph>       <ph id="ph10">`&lt;/xs:element&gt;`</ph>       <ph id="ph11">`&lt;/xs:schema&gt;`</ph>       The example takes the following XSD schema as input.</source>
          <target state="translated"><ph id="ph1">`&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;`</ph>       <ph id="ph2">`&lt;xs:element name="book"&gt;`</ph>       <ph id="ph3">`&lt;xs:complexType&gt;`</ph>       <ph id="ph4">`&lt;xs:sequence&gt;`</ph>       <ph id="ph5">`&lt;xs:element name="title" type="xs:string" /&gt;`</ph>       <ph id="ph6">`&lt;xs:element name="description" type="xs:string" /&gt;`</ph>       <ph id="ph7">`&lt;xs:any processContents ="lax"/&gt;`</ph>       <ph id="ph8">`&lt;/xs:sequence&gt;`</ph>       <ph id="ph9">`&lt;/xs:complexType&gt;`</ph>       <ph id="ph10">`&lt;/xs:element&gt;`</ph>       <ph id="ph11">`&lt;/xs:schema&gt;`</ph>該範例使用下列 XSD 結構描述做為輸入。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;book&gt;`</ph>       <ph id="ph2">`&lt;title&gt;My Book&lt;/title&gt;`</ph>       <ph id="ph3">`&lt;description&gt;My Book's Description&lt;/description&gt;`</ph>       <ph id="ph4">`&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;`</ph>       <ph id="ph5">`&lt;/book&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`&lt;book&gt;`</ph>       <ph id="ph2">`&lt;title&gt;My Book&lt;/title&gt;`</ph>       <ph id="ph3">`&lt;description&gt;My Book's Description&lt;/description&gt;`</ph>       <ph id="ph4">`&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;`</ph>       <ph id="ph5">`&lt;/book&gt;`</ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An array of <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaParticle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects or an empty array if there are no expected particles.</source>
          <target state="translated">陣列<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaParticle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件或有未預期的物件則為空白陣列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Validates identity constraints on the default attributes and populates the <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified with <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for any attributes with default values that have not been previously validated using the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt; method in the element context.</source>
          <target state="translated">驗證預設屬性的識別條件約束，並於其中填入<bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定與<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>有尚未先前驗證使用的預設值的任何屬性的物件&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;元素內容中的方法。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">驗證目前項目使用的所有屬性之後，必須呼叫 GetUnspecifiedDefaultAttributes 方法&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.</source>
          <target state="translated">GetUnspecifiedDefaultAttributes 方法應該用來判斷預設屬性是要插入至要驗證的 XML 文件。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to populate with <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects for any attributes not yet encountered during validation in the element context.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>填入<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>尚未在元素內容中的驗證期間發生的任何屬性的物件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">初始化的狀態<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The Initialize method is only valid if called immediately after the construction of an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;.</source>
          <target state="translated">Initialize 方法才會有效建構之後立即呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件或呼叫至&lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt;。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id="p1">*</bpt>&gt; method is valid immediately after the construction of an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id="p1">*</ept>&gt; only.</source>
          <target state="translated">呼叫&lt;&gt; <bpt id="p1">*</bpt>&gt; 方法適用於建構之後立即<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件或呼叫後&lt;&gt; <ept id="p1">*</ept>&gt; 只。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes the state of the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object using the <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> specified for partial validation.</source>
          <target state="translated">初始化的狀態<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件使用<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>指定進行部分驗證。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The Initialize method that takes an &lt;xref:System.Xml.Schema.XmlSchemaObject&gt; as a parameter initializes an &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to its starting state for partial validation.</source>
          <target state="translated">Initialize 方法採用&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;如參數初始化&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;其開始狀態，以進行部分驗證的物件。&lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt; &lt;/xref:System.Xml.Schema.XmlSchemaObject&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object used to initialize the validation context of the <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object for partial validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>， <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>，或<bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>用來初始化的驗證內容物件<bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>進行部分驗證的物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize<bpt id="p1">*</bpt>&gt; method is valid immediately after the construction of an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object or after a call to &lt;xref:System.Xml.Schema.XmlSchemaValidator.EndValidation<ept id="p1">*</ept>&gt; only.</source>
          <target state="translated">呼叫&lt;&gt; <bpt id="p1">*</bpt>&gt; 方法適用於建構之後立即<bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件或呼叫後&lt;&gt; <ept id="p1">*</ept>&gt; 只。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter is not an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter is not an <bpt id="p2">&lt;xref href="System.Xml.Schema.XmlSchemaElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, <bpt id="p3">&lt;xref href="System.Xml.Schema.XmlSchemaAttribute"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, or <bpt id="p4">&lt;xref href="System.Xml.Schema.XmlSchemaType"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>參數不可為<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets the line number information for the XML node being validated.</source>
          <target state="translated">取得或設定要驗證之 XML 節點的行號資訊。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Line information is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.</source>
          <target state="translated">行資訊由任何報告&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;驗證程序期間擲回。&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-   The default &lt;xref:System.Xml.IXmlLineInfo&gt; object returned by the LineInfoProvider property returns 0 for the &lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt; and &lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt; properties.</source>
          <target state="translated">-預設&lt;xref:System.Xml.IXmlLineInfo&gt;物件傳回的屬性會傳回 0 代表 LineInfoProvider&lt;xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt;和&lt;xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt;屬性。&lt;/xref:System.Xml.IXmlLineInfo.LinePosition%2A&gt; &lt;/xref:System.Xml.IXmlLineInfo.LineNumber%2A&gt; &lt;/xref:System.Xml.IXmlLineInfo&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.IXmlLineInfo&gt; object.</source>
          <target state="translated">&lt;xref:System.Xml.IXmlLineInfo&gt;物件。&lt;/xref:System.Xml.IXmlLineInfo&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Skips validation of the current element content and prepares the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to validate content in the parent element's context.</source>
          <target state="translated">略過目前項目內容的驗證，並準備<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件以驗證父項目的內容中的內容。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the SkipToEndElement method.</source>
          <target state="translated">以下是使用 SkipToEndElement 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-   The SkipToEndElement method skips validation of the current element content and prepares the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object to validate content in the parent element's context; it is equivalent to skipping validation for all the children of the current element and then calling the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method.</source>
          <target state="translated">-SkipToEndElement 方法略過目前項目內容的驗證，並準備&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件以驗證父項目的內容中的內容; 它相當於略過目前項目的所有子系的驗證，然後再呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-   If the current element content is successfully skipped, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">-如果已成功略過目前項目內容，&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定）&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  No validation errors are reported on skipped content.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 略過的內容會報告任何驗證錯誤。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set if the current element content is successfully skipped.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>其屬性已設定，如果已成功略過目前項目內容的物件。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The SkipToEndElement method was not called in the correct sequence.</source>
          <target state="translated">SkipToEndElement 方法不正確的順序呼叫。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, calling SkipToEndElement after calling SkipToEndElement.</source>
          <target state="translated">例如，在呼叫 SkipToEndElement 之後呼叫 SkipToEndElement。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the source URI for the XML node being validated.</source>
          <target state="translated">取得或設定正在驗證之 XML 節點的來源 URI。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The source URI is reported by any &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; thrown during the validation process.</source>
          <target state="translated">URI 所報告任何來源&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;驗證程序期間擲回。&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-   If the SourceUri property is not set, the file name for the XML document is &lt;xref:System.String.Empty&gt; in validation error messages.</source>
          <target state="translated">-如果未設定 SourceUri 屬性，XML 文件的檔案名稱是&lt;xref:System.String.Empty&gt;驗證錯誤訊息中。&lt;/xref:System.String.Empty&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; object representing the source URI for the XML node being validated; the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;物件，代表要驗證的 XML 節點的來源 URI，預設值為<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">驗證的屬性名稱、 命名空間 URI 和目前的項目內容中的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateAttribute method.</source>
          <target state="translated">以下是使用 ValidateAttribute 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;驗證目前項目使用的所有屬性之後，必須呼叫方法&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;物件傳遞給&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;方法，ValidateAttribute 方法會驗證對屬性&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;物件。&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前的項目內容中，成功驗證屬性&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">要驗證之屬性的本機名稱。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">命名空間 URI 之屬性的驗證。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The value of the attribute to validate.</source>
          <target state="translated">要驗證之屬性的值。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的屬性設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
          <target state="translated">已驗證之屬性的值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">屬性目前的項目內容中無效。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id="p1">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如，呼叫&lt;&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;之後</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或多個指定的參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Validates the attribute name, namespace URI, and value in the current element context.</source>
          <target state="translated">驗證的屬性名稱、 命名空間 URI 和目前的項目內容中的值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateAttribute method.</source>
          <target state="translated">以下是使用 ValidateAttribute 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method must be called after validating all the attributes for the current element with the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; method.</source>
          <target state="translated">-&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;驗證目前項目使用的所有屬性之後，必須呼叫方法&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt;方法。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-   If an &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object was passed to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; method, the ValidateAttribute method validates the attribute against the &lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt; object.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;物件傳遞給&lt;xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt;方法，ValidateAttribute 方法會驗證對屬性&lt;xref:System.Xml.Schema.XmlSchemaAttribute&gt;物件。&lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaAttribute&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-   If the attribute is successfully validated in the current element context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前的項目內容中，成功驗證屬性&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The local name of the attribute to validate.</source>
          <target state="translated">要驗證之屬性的本機名稱。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute to validate.</source>
          <target state="translated">命名空間 URI 之屬性的驗證。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the attribute's value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>用於傳遞屬性的值為 Common Language Runtime (CLR) 型別與 XML 結構描述定義語言 (XSD) 類型的屬性。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的屬性設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This parameter and can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The validated attribute's value.</source>
          <target state="translated">已驗證之屬性的值。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The attribute is not valid in the current element context.</source>
          <target state="translated">屬性目前的項目內容中無效。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute<ept id="p1">*</ept>&gt; after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如，呼叫&lt;&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*&gt;之後</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或多個指定的參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context.</source>
          <target state="translated">驗證目前內容中的元素。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateElement method.</source>
          <target state="translated">以下是使用 ValidateElement 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前內容中，已成功驗證項目名稱&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-   If the element name or any of its attributes are invalid the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">-如果是無效的項目名稱或其任何屬性目前的內容，&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;，否則為&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
          <target state="translated">要驗證之項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">命名空間驗證項目的 URI。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的項目名稱設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">無法在目前內容中無效的項目名稱。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如， &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Validates the element in the current context with the <ph id="ph1">`xsi:Type`</ph>, <ph id="ph2">`xsi:Nil`</ph>, <ph id="ph3">`xsi:SchemaLocation`</ph>, and <ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph> attribute values specified.</source>
          <target state="translated">驗證與目前內容中的元素<ph id="ph1">`xsi:Type`</ph>， <ph id="ph2">`xsi:Nil`</ph>， <ph id="ph3">`xsi:SchemaLocation`</ph>，和<ph id="ph4">`xsi:NoNamespaceSchemaLocation`</ph>屬性指定的值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateElement method.</source>
          <target state="translated">以下是使用 ValidateElement 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-   If the element name is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前內容中，已成功驗證項目名稱&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>-   If the element name or any of its attributes are invalid in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;; otherwise the &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">-如果項目名稱或其任何屬性不適用於目前的內容，&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;，否則為&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value was not passed as a parameter to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt; constructor, <ph id="ph1">`xsi:SchemaLocation`</ph> and <ph id="ph2">`xsi:NoNamespaceSchemaLocation`</ph> attribute values are ignored.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;值並未當做參數傳遞&lt;xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt;建構函式，<ph id="ph1">`xsi:SchemaLocation`</ph>和<ph id="ph2">`xsi:NoNamespaceSchemaLocation`</ph>屬性值會被忽略。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The local name of the element to validate.</source>
          <target state="translated">要驗證之項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element to validate.</source>
          <target state="translated">命名空間驗證項目的 URI。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element's name.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的項目名稱設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:Type`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:Type`</ph>屬性值的項目。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:Nil`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:Nil`</ph>屬性值的項目。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:SchemaLocation`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:SchemaLocation`</ph>屬性值的項目。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`xsi:NoNamespaceSchemaLocation`</ph> attribute value of the element.</source>
          <target state="translated"><ph id="ph1">`xsi:NoNamespaceSchemaLocation`</ph>屬性值的項目。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The element's name is not valid in the current context.</source>
          <target state="translated">無法在目前內容中無效的項目名稱。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如， &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</source>
          <target state="translated">驗證項目的文字內容是否有效，根據其資料類型，具有簡單內容的項目，驗證目前項目的內容是否完整項目具有複雜內容。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndElement method.</source>
          <target state="translated">以下是使用 ValidateEndElement 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">-若為具有簡單內容的項目，方法會驗證項目的文字內容根據其資料類型有效，且傳回的已剖析 ValidateEndElement 具類型值。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The text content of the element is obtained from the results of previous calls to &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;.</source>
          <target state="translated">項目的文字內容被取自&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;先前呼叫的結果</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-   For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.</source>
          <target state="translated">-若為具有複雜內容元素，ValidateEndElement 方法會驗證目前項目的內容是否完整。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>-   If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.</source>
          <target state="translated">-如果項目都有預設值，從 ValidateEndElement 方法傳回的值會是項目的預設值。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件以建構&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;值做為參數，識別條件約束規則 （如果有的話），套用至項目 ValidateEndElement 方法會檢查。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前內容中，已成功驗證元素&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的項目設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The parsed, typed text value of the element if the element has simple content.</source>
          <target state="translated">如果元素具有簡單內容之已剖析的輸入項目的文字值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The element's content is not valid.</source>
          <target state="translated">在元素內容不正確。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如，如果&lt;&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Verifies if the text content of the element specified is valid according to its data type.</source>
          <target state="translated">確認指定的項目文字內容是否根據其資料類型有效。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&gt; [!IMPORTANT]</ph> &gt;  If you are validating against the <ph id="ph2">`xs:key`</ph>, <ph id="ph3">`xs:keyref`</ph>, or <ph id="ph4">`xs:unique`</ph> identity constraints, do not use the ValidateEndElement method overload.</source>
          <target state="translated"><ph id="ph1">&gt; [!IMPORTANT]</ph>&gt; 如果您要針對驗證<ph id="ph2">`xs:key`</ph>， <ph id="ph3">`xs:keyref`</ph>，或<ph id="ph4">`xs:unique`</ph>識別條件約束，請勿使用 ValidateEndElement 方法多載。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Instead, call the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method and pass it the value of the element.</source>
          <target state="translated">請改為呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;方法並將它傳遞項目的值。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Then call the  &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method overload, which takes &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; as an argument, to verify that the text content of the element is valid according to its data type.</source>
          <target state="translated">然後呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;方法多載會採用&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;做為引數，來檢查項目的文字內容是否根據其資料類型有效。&lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndElement method.</source>
          <target state="translated">以下是使用 ValidateEndElement 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>-   For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value.</source>
          <target state="translated">-若為具有簡單內容的項目，方法會驗證項目的文字內容根據其資料類型有效，且傳回的已剖析 ValidateEndElement 具類型值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The text content of the element is obtained from the typed content passed as a parameter.</source>
          <target state="translated">從具型別做為參數傳遞的內容取得項目的文字內容。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-   If calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt; method have been previously made, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">假設呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;方法可能先前已，&lt;xref:System.InvalidOperationException&gt;就會擲回。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">-如果項目具有複雜內容&lt;xref:System.InvalidOperationException&gt;就會擲回。&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-   If the &lt;xref:System.Xml.Schema.XmlSchemaValidator&gt; object was constructed with the &lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.</source>
          <target state="translated">-如果&lt;xref:System.Xml.Schema.XmlSchemaValidator&gt;物件以建構&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;值做為參數，識別條件約束規則 （如果有的話），套用至項目 ValidateEndElement 方法會檢查。&lt;/xref:System.Xml.Schema.XmlSchemaValidationFlags&gt; &lt;/xref:System.Xml.Schema.XmlSchemaValidator&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-   If the element is successfully validated in the current context, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;, &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;, and &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; properties are set with the results of the validation.</source>
          <target state="translated">-如果在目前內容中，已成功驗證元素&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定） &lt;xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt;， &lt;xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt;，和&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性會設定與驗證的結果。&lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful validation of the text content of the element.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證的文字內容的項目設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The typed text content of the element.</source>
          <target state="translated">輸入的文字內容的項目。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The parsed, typed simple content of the element.</source>
          <target state="translated">已剖析的輸入項目的簡單內容。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The element's text content is not valid.</source>
          <target state="translated">項目的文字內容無效。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence (for example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement<bpt id="p2">*</bpt>&gt;), calls to the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p2">*</ept>&gt; method have been previously made, or the element has complex content.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 不正確的順序呼叫方法 (例如，如果&lt;&gt; <ept id="p1">*</ept>&gt; 方法呼叫之後呼叫&lt;&gt; <bpt id="p2">*</bpt>&gt;)，呼叫&lt;&gt; <ept id="p2">*</ept>&gt; 方法所做之前，或在元素具有複雜的內容。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The typed text content parameter cannot be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">輸入的文字內容參數不可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Verifies whether all the required attributes in the element context are present and prepares the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to validate the child content of the element.</source>
          <target state="translated">驗證是否所有必要的屬性項目內容中均已存在，並準備<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>来驗證子內容項目的物件。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateEndOfAttributes method.</source>
          <target state="translated">以下是使用 ValidateEndOfAttributes 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt; method should always be called before ValidateEndOfAttributes.</source>
          <target state="translated">-&lt;xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;方法一律會呼叫之前 ValidateEndOfAttributes。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-   The ValidateEndOfAttributes method must be called before proceeding with validation of an element's content.</source>
          <target state="translated">-ValidateEndOfAttributes 必須呼叫方法之前的項目內容的驗證。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-   If all the required attributes in the element context are present, the &lt;xref:System.Xml.Schema.XmlSchemaInfo&gt; object's (if specified) &lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; property is set to &lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.</source>
          <target state="translated">-如果項目內容中的所有必要的屬性不存在，&lt;xref:System.Xml.Schema.XmlSchemaInfo&gt;物件的 （如果已指定）&lt;xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt;屬性設定為&lt;xref:System.Xml.Schema.XmlSchemaValidity&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidity&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A&gt; &lt;/xref:System.Xml.Schema.XmlSchemaInfo&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose properties are set on successful verification that all the required attributes in the element context are present.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>成功驗證所有必要的屬性項目內容中有設定其屬性的物件。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">這個參數可以是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>One or more of the required attributes in the current element context were not found.</source>
          <target state="translated">找不到一或多個目前的項目內容中的必要屬性。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The ValidateEndOfAttributes method was not called in the correct sequence.</source>
          <target state="translated">ValidateEndOfAttributes 方法不正確的順序呼叫。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>For example, calling ValidateEndOfAttributes after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.</source>
          <target state="translated">例如，在呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*&gt;之後呼叫 ValidateEndOfAttributes</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>One or more of the parameters specified are <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">一或多個指定的參數是<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Validates whether the text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">驗證是否文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定允許在目前的項目內容中，並累積文件驗證目前元素具有簡單內容。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateText method.</source>
          <target state="translated">以下是使用 ValidateText 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>-   If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.</source>
          <target state="translated">-如果元素具有簡單內容，文字<ph id="ph1">`string`</ph>指定串連 ValidateText 方法，直到每次呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;方法呼叫。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.</source>
          <target state="translated">當&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;呼叫方法時，會驗證所有文字。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">-如果項目具有複雜內容時，就會不發生任何文字串連。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate in the current element context.</source>
          <target state="translated">文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>來驗證目前元素內容中。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is not allowed in the current element context.</source>
          <target state="translated">文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定目前的項目內容中不允許。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如， &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數不可為<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Validates whether the text returned by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</source>
          <target state="translated">驗證所傳回的文字是否<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>允許在目前的項目內容中，指定的物件，並累積文件驗證目前元素具有簡單內容。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The following are important notes to consider when using the ValidateText method.</source>
          <target state="translated">以下是使用 ValidateText 方法時要考慮的重要注意事項。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>-   If the element has simple content, the text <ph id="ph1">`string`</ph> specified is concatenated on each call to the ValidateText method until the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called.</source>
          <target state="translated">-如果元素具有簡單內容，文字<ph id="ph1">`string`</ph>指定串連 ValidateText 方法，直到每次呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;方法呼叫。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>When the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt; method is called, all the text is validated.</source>
          <target state="translated">當&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;呼叫方法時，會驗證所有文字。&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-   If the element has complex content, no text concatenation occurs.</source>
          <target state="translated">-如果項目具有複雜內容時，就會不發生任何文字串連。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>用來將文字值傳遞做為 Common Language Runtime (CLR) 類型與屬性的 XML 結構描述定義語言 (XSD) 類型相容。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is not allowed in the current element context.</source>
          <target state="translated">文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定目前的項目內容中不允許。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateText<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如， &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The text <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> parameter cannot be <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">文字<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>參數不可為<bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Validates whether the white space in the <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">驗證中的空間是否白色<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定允許在目前的項目內容中，並且累積空白字元以進行驗證，如果在目前元素具有簡單內容。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A white space <bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to validate in the current element context.</source>
          <target state="translated">泛空白字元<bpt id="p1">&lt;xref uid="langword_csharp_string" name="string" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>來驗證目前元素內容中。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">目前的項目內容中不允許空白字元。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如，如果&lt;&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Validates whether the white space returned by the <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</source>
          <target state="translated">驗證是否所傳回的泛空白字元<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>指定物件允許在目前的項目內容中，並且累積空白字元以進行驗證，如果在目前元素具有簡單內容。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept><bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.XmlValueGetter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> <bpt id="p2">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>用來傳遞為 Common Language Runtime (CLR) 類型的泛空白字元值與屬性的 XML 結構描述定義語言 (XSD) 類型相容。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>White space is not allowed in the current element context.</source>
          <target state="translated">目前的項目內容中不允許空白字元。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<bpt id="p1">*</bpt>&gt; method was not called in the correct sequence. For example, if the &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace<ept id="p1">*</ept>&gt; method is called after calling &lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 方法不會以正確的順序呼叫。例如，如果&lt;&gt; <ept id="p1">*</ept>&gt; 呼叫&lt;xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;.&lt;/xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*&gt;之後呼叫方法</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that receives schema validation warnings and errors encountered during schema validation.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.Schema.ValidationEventHandler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>結構描述驗證警告及結構描述驗證期間發生的錯誤。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>If no &lt;xref:System.Xml.Schema.ValidationEventHandler&gt; is specified, an &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is thrown for all schema validation errors with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">如果沒有&lt;xref:System.Xml.Schema.ValidationEventHandler&gt;指定，則&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;會擲回的所有結構描述驗證錯誤&lt;xref:System.Xml.Schema.XmlSeverityType&gt;的&lt;xref:System.Xml.Schema.XmlSeverityType&gt;.&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;值&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;&lt;/xref:System.Xml.Schema.ValidationEventHandler&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt; is not thrown for validation warnings with an &lt;xref:System.Xml.Schema.XmlSeverityType&gt; value of &lt;xref:System.Xml.Schema.XmlSeverityType&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;不會擲回的驗證警告&lt;xref:System.Xml.Schema.XmlSeverityType&gt;的&lt;xref:System.Xml.Schema.XmlSeverityType&gt;.&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;值&lt;/xref:System.Xml.Schema.XmlSeverityType&gt;&lt;/xref:System.Xml.Schema.XmlSchemaValidationException&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Gets or sets the object sent as the sender object of a validation event.</source>
          <target state="translated">取得或設定驗證事件的傳送者物件形式傳送的物件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Object&gt;; the default is this <bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;; 這是預設<bpt id="p1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Sets the <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object used to resolve <ph id="ph1">`xs:import`</ph> and <ph id="ph2">`xs:include`</ph> elements as well as <ph id="ph3">`xsi:schemaLocation`</ph> and <ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph> attributes.</source>
          <target state="translated">設定<bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件用來解析<ph id="ph1">`xs:import`</ph>和<ph id="ph2">`xs:include`</ph>項目，如同<ph id="ph3">`xsi:schemaLocation`</ph>和<ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object; the default is an <bpt id="p2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlResolver"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，則為預設值是<bpt id="p2">&lt;xref href="System.Xml.XmlUrlResolver"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>