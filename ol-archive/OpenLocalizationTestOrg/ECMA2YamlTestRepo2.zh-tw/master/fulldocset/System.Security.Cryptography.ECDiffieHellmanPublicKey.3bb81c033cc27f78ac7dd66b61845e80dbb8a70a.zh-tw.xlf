<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">84dc07b0a9716ccf86f103a84b303fac71aa41d2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.ECDiffieHellmanPublicKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b14a1da7c242b51a7622c03ea9f7b8092512bfbd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e631c844f02e70f57167deb8eafa796163c2a111</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class from which all <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanCngPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementations must inherit.</source>
          <target state="translated">提供所有的抽象基底類別<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanCngPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>實作都必須繼承。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This constructor is called by classes that derive from the &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; class.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;類別&lt;/xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;衍生的類別會呼叫這個建構函式</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt; class is the only currently supported implementation.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;類別是唯一支援目前的實作。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A byte array that represents an <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">位元組陣列，代表<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyBlob&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;keyBlob&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">目前的執行個體所使用的資源全部釋出<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Call Dispose when you are finished using the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;.</source>
          <target state="translated">當您完成使用&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;.&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;呼叫 Dispose</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The Dispose method leaves the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; in an unusable state.</source>
          <target state="translated">Dispose 方法會使&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;中無法使用的狀態。&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After calling Dispose, you must release all references to the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.Security.Cryptography.ECDiffieHellman&gt; was occupying.</source>
          <target state="translated">在呼叫 Dispose 之後，您必須釋放所有參考&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;讓記憶體回收行程可以回收記憶體的&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;所佔用。&lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt; &lt;/xref:System.Security.Cryptography.ECDiffieHellman&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and optionally releases the managed resources.</source>
          <target state="translated">所使用的 unmanaged 的資源釋出<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellman"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，並選擇性釋放 managed 的資源。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method executes in two distinct scenarios:      -   If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`true`</ph>, the method has been called directly or indirectly by a user's code.</source>
          <target state="translated">這個方法會在兩個不同的案例:-如果<ph id="ph1">`disposing`</ph>等於<ph id="ph2">`true`</ph>，已經呼叫方法直接或間接透過使用者程式碼。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Managed and unmanaged resources can be disposed.</source>
          <target state="translated">管理，而且可以處置 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>-   If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`false`</ph>, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.</source>
          <target state="translated">-如果<ph id="ph1">`disposing`</ph>等於<ph id="ph2">`false`</ph>、 完成項，在執行階段呼叫的方法，而且您不應該參考 managed 的資源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Only unmanaged resources can be disposed.</source>
          <target state="translated">可以處置 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.</source>
          <target state="translated">如果您需要提供建立物件的 managed 和 unmanaged 資源的清除程式碼，您應該覆寫這個方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph>method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和&lt;xref:System.Object.Finalize%2A&gt;方法。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph>叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes <ph id="ph1">`Dispose`</ph> with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;叫用<ph id="ph1">`Dispose`</ph>與<ph id="ph2">`disposing`</ph>設<ph id="ph3">`false`</ph>。&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this &lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt; references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;參考。&lt;/xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用<ph id="ph1">`Dispose()`</ph>每個參考物件的方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>表示釋放 managed 和 unmanaged 資源，<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>表示只釋放 unmanaged 的資源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Serializes the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> key BLOB to a byte array.</source>
          <target state="translated">將序列化<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>金鑰 BLOB 的位元組陣列。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">包含序列化橢圓曲線 Diffie-hellman (ECDH) 公開金鑰的位元組陣列。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Serializes the <bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> public key to an XML string.</source>
          <target state="translated">將序列化<bpt id="p1">&lt;xref href="System.Security.Cryptography.ECDiffieHellmanPublicKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>公開金鑰的 XML 字串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">包含序列化橢圓曲線 Diffie-hellman (ECDH) 公開金鑰的 XML 字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>