<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97b8f0e925aa738f8cee4da0329367baf7c6407e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Application.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eaa1a724eded114c5c0d84abac223d153f3bdc9f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b75537628da94f6b326c9ea337d189d986f59a3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">封裝<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Application is a class that encapsulates <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application-specific functionality, including the following:      -   <bpt id="p1">**</bpt>Application Lifetime<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt;, &lt;xref:System.Windows.Application.Current%2A&gt;, &lt;xref:System.Windows.Application.Deactivated&gt;, &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt;, &lt;xref:System.Windows.Application.Exit&gt;, &lt;xref:System.Windows.Application.Run%2A&gt;, &lt;xref:System.Windows.Application.SessionEnding&gt;, &lt;xref:System.Windows.Application.Shutdown%2A&gt;, &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;, &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">應用程式是封裝的類別<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式專屬功能，包括下列:-<bpt id="p1">**</bpt>應用程式存留期<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Activated&gt; &lt;xref:System.Windows.Application.Current%2A&gt; &lt;xref:System.Windows.Application.Deactivated&gt; &lt;xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;xref:System.Windows.Application.Exit&gt; &lt;xref:System.Windows.Application.Run%2A&gt; &lt;xref:System.Windows.Application.SessionEnding&gt; &lt;xref:System.Windows.Application.Shutdown%2A&gt; &lt;xref:System.Windows.Application.ShutdownMode%2A&gt;、 &lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.SessionEnding&gt; &lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.DispatcherUnhandledException&gt; &lt;/xref:System.Windows.Application.Deactivated&gt; &lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Application-Scope Window, Property, and Resource Management<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt;, &lt;xref:System.Windows.Application.GetContentStream%2A&gt;, &lt;xref:System.Windows.Application.GetResourceStream%2A&gt;, &lt;xref:System.Windows.Application.LoadComponent%2A&gt;, &lt;xref:System.Windows.Application.MainWindow%2A&gt;, &lt;xref:System.Windows.Application.Properties%2A&gt;, &lt;xref:System.Windows.Application.Resources%2A&gt;, &lt;xref:System.Windows.Application.StartupUri%2A&gt;, &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">-<bpt id="p1">**</bpt>應用程式範圍 視窗、 屬性和資源管理<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FindResource%2A&gt; &lt;xref:System.Windows.Application.GetContentStream%2A&gt; &lt;xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;xref:System.Windows.Application.LoadComponent%2A&gt; &lt;xref:System.Windows.Application.MainWindow%2A&gt; &lt;xref:System.Windows.Application.Properties%2A&gt; &lt;xref:System.Windows.Application.Resources%2A&gt; &lt;xref:System.Windows.Application.StartupUri%2A&gt;、 &lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt; &lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.Properties%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.LoadComponent%2A&gt; &lt;/xref:System.Windows.Application.GetResourceStream%2A&gt; &lt;/xref:System.Windows.Application.GetContentStream%2A&gt; &lt;/xref:System.Windows.Application.FindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Command-Line Parameter and Exit Code Processing<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt;, &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">-<bpt id="p1">**</bpt>命令列參數並結束程式碼處理<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.Startup?displayProperty=fullName&gt; &lt;xref:System.Windows.Application.Exit?displayProperty=fullName&gt;、 &lt;xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Exit?displayProperty=fullName&gt; &lt;/xref:System.Windows.Application.Startup?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.</source>
          <target state="translated">-   <bpt id="p1">**</bpt>Navigation<ept id="p1">**</ept>: &lt;xref:System.Windows.Application.FragmentNavigation&gt;, &lt;xref:System.Windows.Application.LoadCompleted&gt;, &lt;xref:System.Windows.Application.Navigated&gt;, &lt;xref:System.Windows.Application.Navigating&gt;, &lt;xref:System.Windows.Application.NavigationProgress&gt;, &lt;xref:System.Windows.Application.NavigationStopped&gt;, &lt;xref:System.Windows.Application.NavigationFailed&gt;, &lt;xref:System.Windows.Application.SetCookie%2A&gt;, &lt;xref:System.Windows.Application.GetCookie%2A&gt;.&lt;/xref:System.Windows.Application.GetCookie%2A&gt;&lt;/xref:System.Windows.Application.SetCookie%2A&gt;&lt;/xref:System.Windows.Application.NavigationFailed&gt;&lt;/xref:System.Windows.Application.NavigationStopped&gt;&lt;/xref:System.Windows.Application.NavigationProgress&gt;&lt;/xref:System.Windows.Application.Navigating&gt;&lt;/xref:System.Windows.Application.Navigated&gt;&lt;/xref:System.Windows.Application.LoadCompleted&gt;&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Application implements the singleton pattern to provide shared access to its window, property, and resource scope services.</source>
          <target state="translated">應用程式實作單一子句模式，以提供其視窗、 屬性和資源範圍服務的共用存取權。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Consequently, only one instance of the Application class can be created per &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">因此，建立應用程式類別只有一個執行個體，每&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can implement an Application using markup, markup and code-behind, or code.</source>
          <target state="translated">您可以實作使用標記、 標記和程式碼後置或程式碼的應用程式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If Application is implemented with markup, whether markup or markup and code-behind, the markup file must be configured as an <ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> <ph id="ph2">`ApplicationDefinition`</ph> item.</source>
          <target state="translated">如果應用程式以實作標記，標記檔案標記或標記和程式碼後置，必須設定為是否<ph id="ph1">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph><ph id="ph2">`ApplicationDefinition`</ph>項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  A standalone application does not require an Application object; it is possible to implement a custom <ph id="ph2">`static`</ph> entry point method (<ph id="ph3">`Main`</ph>) that opens a window without creating an instance of Application.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 的獨立應用程式不需要的應用程式物件，它也可以實作自訂<ph id="ph2">`static`</ph>進入點方法 (<ph id="ph3">`Main`</ph>)，而不建立應用程式的執行個體開啟的視窗。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph> require an Application object.</source>
          <target state="translated">不過，<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>需要應用程式物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only one instance of the &lt;xref:System.Windows.Application&gt; class can be created per &lt;xref:System.AppDomain&gt;, to ensure shared access to a single set of application-scope window, property, and resource data.</source>
          <target state="translated">只有一個執行個體&lt;xref:System.Windows.Application&gt;類別可由每個&lt;xref:System.AppDomain&gt;，以確保單一資料集的應用程式範圍 視窗、 屬性和資源的共用的存取。&lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Consequently, the default constructor of the &lt;xref:System.Windows.Application&gt; class detects whether the instance being initialized is the first instance in an &lt;xref:System.AppDomain&gt;; if it is not, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">因此，預設的建構函式&lt;xref:System.Windows.Application&gt;類別會偵測是否已初始化的執行個體中的第一個執行個體&lt;xref:System.AppDomain&gt;; 如果不是，&lt;xref:System.InvalidOperationException&gt;就會擲回。&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Windows.Application&gt; object for the current &lt;xref:System.AppDomain&gt; is exposed from the static &lt;xref:System.Windows.Application.Current%2A&gt; property.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;物件目前&lt;xref:System.AppDomain&gt;公開靜態&lt;xref:System.Windows.Application.Current%2A&gt;屬性。&lt;/xref:System.Windows.Application.Current%2A&gt; &lt;/xref:System.AppDomain&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>More than one instance of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class is created per <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">多個執行個體<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別建立每個<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Occurs when an application becomes the foreground application.</source>
          <target state="translated">發生於應用程式變成前景應用程式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows is activated (becomes the foreground application) when one of the windows is activated for the first time since the application was launched, or when one of the windows is activated while the application is inactive: Specifically, activation occurs when:      -   An application opens its first window.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>啟動應用程式具有一個或多個開啟的視窗 （變成前景應用程式） 當其中一個 windows 啟動時第一次啟動應用程式，因為或其中一個視窗在何時啟用非作用中應用程式時︰ 特別是，啟用，就會發生時:-應用程式開啟其第一個視窗。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>-   A user switches to the application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">-使用者切換至應用程式使用 ALT + TAB，或使用 工作管理員。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-   A user clicks the taskbar button for one of the windows in an application.</source>
          <target state="translated">-使用者按一下其中一個應用程式視窗的工作列按鈕。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Applications that need to detect when they activate can handle the Activated event.</source>
          <target state="translated">需要偵測當他們所啟動的應用程式可以處理已啟動事件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">第一次啟動應用程式之後，它可能會停用並重新啟動幾次在其存留期間。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If an application's behavior or state depends on its activation state, it can handle both Activated and &lt;xref:System.Windows.Application.Deactivated&gt; events to determine which activation state it's in.</source>
          <target state="translated">如果應用程式的狀態或行為取決於其啟動狀態，它可以處理啟動和&lt;xref:System.Windows.Application.Deactivated&gt;事件，以判斷哪一個啟用狀態的英吋&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once an application becomes active, Activated will not be raised again until the application is deactivated, irrespective of how many windows within an application are activated while the application is active.</source>
          <target state="translated">一旦應用程式變成作用中，啟動系統不會引發一次直到應用程式停用時，不論是在應用程式使用中時，會啟動多少 windows 應用程式中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Activated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">啟動不會引發<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">取得<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件目前<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application&gt; is a per-&lt;xref:System.AppDomain&gt; singleton type that implements the static Current property to provide shared access to the &lt;xref:System.Windows.Application&gt; instance for the current &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;為每個-&lt;xref:System.AppDomain&gt;單一型別，它會實作靜態的目前屬性，以提供共用的存取&lt;xref:System.Windows.Application&gt;&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;在目前的執行個體&lt;/xref:System.Windows.Application&gt;&lt;/xref:System.AppDomain&gt;&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This design guarantees that state managed by &lt;xref:System.Windows.Application&gt;, including shared resources and state, is available from a single, shared location.</source>
          <target state="translated">此設計會保證受該狀態&lt;xref:System.Windows.Application&gt;包括共用的資源和狀態，而且可從單一的共用位置。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">這個屬性是安全執行緒，可從任何執行緒。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件目前<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when an application stops being the foreground application.</source>
          <target state="translated">發生於應用程式停止前景應用程式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application that has one or more open windows deactivates (stops being the foreground application) when a user does the following:      -   Switches to another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>具有一或多個開啟的 windows 應用程式，就會停用 （停止前景應用程式） 時使用者會執行下列:-使用 ALT + TAB，或使用 工作管理員會切換成另一個應用程式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-   Clicks the taskbar button for a window in another application.</source>
          <target state="translated">-按一下另一個應用程式視窗的工作列按鈕。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Applications that need to detect deactivation can handle the Deactivated event.</source>
          <target state="translated">需要偵測停用的應用程式可以處理停用事件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After an application is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">第一次啟動應用程式之後，它可能會停用並重新啟動幾次在其存留期間。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If an application's behavior or state depends on its activation state, it can handle both Deactivated and &lt;xref:System.Windows.Application.Activated&gt; events to determine which state it's in.</source>
          <target state="translated">如果應用程式的狀態或行為取決於其啟動狀態，它可以處理這兩種停用和&lt;xref:System.Windows.Application.Activated&gt;事件，以判斷其狀態是英吋&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Deactivated is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">停用不會引發<ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Occurs when an exception is thrown by an application but not handled.</source>
          <target state="translated">發生於應用程式所擲回但未處理例外狀況。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> catches unhandled exceptions, notifies users of the exception from a dialog box (from which they can report the exception), and automatically shuts down an application.</source>
          <target state="translated">根據預設，<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>攔截未處理例外狀況、 通知使用者 （從中它們可以回報該例外狀況） 對話方塊中，從例外狀況，並自動關閉應用程式。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>However, if an application needs to perform custom unhandled exception processing from a centralized location, you should handle DispatcherUnhandledException.</source>
          <target state="translated">不過，如果應用程式需要執行自訂處理的例外狀況處理從一個集中位置，您應該處理 DispatcherUnhandledException。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>DispatcherUnhandledException is raised by an &lt;xref:System.Windows.Application&gt; for each exception that is unhandled by code running on the main UI thread.</source>
          <target state="translated">引發 DispatcherUnhandledException&lt;xref:System.Windows.Application&gt;的每個主要 UI 執行緒上執行的程式碼未處理的例外狀況。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If an exception is not handled on either a background <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread (a thread with its own &lt;xref:System.Windows.Threading.Dispatcher&gt;) or a background worker thread (a thread without a &lt;xref:System.Windows.Threading.Dispatcher&gt;), the exception is not forwarded to the main <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">如果未處理例外狀況上背景<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>執行緒 (使用它自己的執行緒&lt;xref:System.Windows.Threading.Dispatcher&gt;) 或背景工作執行緒 (沒有執行緒&lt;xref:System.Windows.Threading.Dispatcher&gt;)，例外狀況不會轉送至 main<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>執行緒。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Consequently, DispatcherUnhandledException is not raised.</source>
          <target state="translated">因此，不會引發 DispatcherUnhandledException。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In these circumstances, you will need to write code to do the following:      1.</source>
          <target state="translated">在這些情況下，您必須撰寫程式碼來執行下列動作︰ 1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Handle exceptions on the background thread.</source>
          <target state="translated">處理背景執行緒上的例外狀況。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Dispatch those exceptions to the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">分派這些例外狀況的主要<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>執行緒。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Rethrow them on the main <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread without handling them to allow DispatcherUnhandledException to be raised.</source>
          <target state="translated">會重新擲回它們在主要<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>執行緒，而不處理它們允許 DispatcherUnhandledException 引發。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Threading Model<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> overview.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>執行緒模型<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>概觀。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The DispatcherUnhandledException event handler is passed a &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt; argument that contains contextual information regarding the exception, including:      -   The exception (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;).</source>
          <target state="translated">DispatcherUnhandledException 事件處理常式會傳遞&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;引數，其中包含有關例外狀況，內容資訊包括:-例外狀況 (&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt;)。&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A&gt; &lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-   The &lt;xref:System.Windows.Threading.Dispatcher&gt; from which it originated (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;).</source>
          <target state="translated">-&lt;xref:System.Windows.Threading.Dispatcher&gt;從起源自 (&lt;xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt;)。&lt;/xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can use this information to determine whether an exception is recoverable or not.</source>
          <target state="translated">您可以使用這項資訊來判斷例外狀況是否為可復原。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A recoverable exception might be a &lt;xref:System.IO.FileNotFoundException&gt;, for example, while an unrecoverable exception might be a &lt;xref:System.StackOverflowException&gt;, for example.</source>
          <target state="translated">可復原的例外狀況可能是&lt;xref:System.IO.FileNotFoundException&gt;，例如，時間可能會無法復原的例外狀況&lt;xref:System.StackOverflowException&gt;，例如。&lt;/xref:System.StackOverflowException&gt; &lt;/xref:System.IO.FileNotFoundException&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When you process an unhandled exception from DispatcherUnhandledException, and you don't want <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> to continue processing it, you need to set the &lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt; property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">當您處理 DispatcherUnhandledException，發生未處理例外狀況，而且您不想<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>繼續處理它，您需要設定&lt;xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;屬性<ph id="ph2">`true`</ph>。&lt;/xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Unlike the other events that &lt;xref:System.Windows.Application&gt; raises, DispatcherUnhandledException does not have a matching protected virtual implementation (OnDispatcherUnhandledException).</source>
          <target state="translated">不同於其他事件， &lt;xref:System.Windows.Application&gt;DispatcherUnhandledException 會引發，並沒有比對受保護虛擬實作 (OnDispatcherUnhandledException)。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Consequently, classes that derive from &lt;xref:System.Windows.Application&gt; must always register an event handler with DispatcherUnhandledException to process unhandled exceptions.</source>
          <target state="translated">因此，類別衍生自&lt;xref:System.Windows.Application&gt;一律必須向處理未處理例外狀況的 DispatcherUnhandledException 註冊事件處理常式。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Occurs just before an application shuts down, and cannot be canceled.</source>
          <target state="translated">應用程式關閉，而且不能取消之前發生。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An application can shut down for either of the following reasons:      -   The &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the &lt;xref:System.Windows.Application&gt; object is called, either explicitly or as determined by the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property.</source>
          <target state="translated">應用程式可以關機的原因如下:-&lt;xref:System.Windows.Application.Shutdown%2A&gt;方法&lt;xref:System.Windows.Application&gt;物件就會呼叫，以明確或決定&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;屬性。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-   The user ends the session by logging off or shutting down.</source>
          <target state="translated">-使用者會透過登出或關機，結束工作階段。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You can detect when application shutdown occurs by handling the Exit event, and perform any additional processing as required.</source>
          <target state="translated">您可以偵測應用程式關閉時處理結束事件，並執行任何所需的額外處理。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can also handle Exit to inspect or change the application exit code when you don't need to call &lt;xref:System.Windows.Application.Shutdown%2A&gt; explicitly.</source>
          <target state="translated">您也可以處理來檢查或變更應用程式結束代碼，當您不需要呼叫結束&lt;xref:System.Windows.Application.Shutdown%2A&gt;明確。&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The exit code is exposed from the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property of the &lt;xref:System.Windows.ExitEventArgs&gt; argument that's passed to the Exit event handler.</source>
          <target state="translated">結束代碼從公開&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;屬性&lt;xref:System.Windows.ExitEventArgs&gt;傳遞給結束事件處理常式的引數。&lt;/xref:System.Windows.ExitEventArgs&gt; &lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When the application stops running, the exit code is passed to the operating system for subsequent processing.</source>
          <target state="translated">當應用程式停止執行時，結束代碼會傳遞給作業系統，供後續處理。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If your application handles the &lt;xref:System.Windows.Application.SessionEnding&gt; event and subsequently cancels it, Exit is not raised and the application continues running in accordance with the shutdown mode.</source>
          <target state="translated">如果您的應用程式處理&lt;xref:System.Windows.Application.SessionEnding&gt;事件和後續取消結束，它就不會引發和應用程式繼續執行的像素來關機模式。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The exit code can be set from an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>, although the value is ignored.</source>
          <target state="translated">可設定結束碼<ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>，但是會忽略這個值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>, Exit is raised in the following circumstances:      -   An <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is navigated away from.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)]</ph>，在下列情況中將會引發結束:-<ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>巡覽離開的。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-   In <ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>, when the tab that is hosting the <ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph> is closed.</source>
          <target state="translated">-在<ph id="ph1">[!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)]</ph>，當 [] 索引標籤裝載<ph id="ph2">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>已關閉。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>-   When the browser is closed.</source>
          <target state="translated">-當瀏覽器關閉時。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In all cases, the value of the &lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt; property is ignored.</source>
          <target state="translated">在所有情況下，值&lt;xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;屬性會被忽略。&lt;/xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Searches for a <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> resource, such as a <bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, with the specified key, and throws an exception if the requested resource is not found (see <bpt id="p3">[</bpt>XAML Resources<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">搜尋<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>資源，例如<bpt id="p1">&lt;xref href="System.Windows.Style"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>或<bpt id="p2">&lt;xref href="System.Windows.Media.Brush"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>、 具有指定之索引鍵，則擲回的例外狀況，如果找不到要求的資源 (請參閱<bpt id="p3">[</bpt>XAML 資源<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>FindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">FindResource 會先查看應用程式範圍的資源，為指定的資源。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">應用程式範圍的資源由管理&lt;xref:System.Windows.Application&gt;，而且會公開從&lt;xref:System.Windows.Application.Resources%2A&gt;屬性。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the specified resource is not found in the set of application-scope resources, FindResource then next searches the system resources.</source>
          <target state="translated">如果應用程式範圍的資源集中找不到指定的資源，FindResource 再接下來會搜尋系統資源。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">系統資源是由使用者定義的 shell 資源，並且包含色彩、 字型及殼層組態。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">這些由公開&lt;xref:System.Windows.SystemColors&gt;， &lt;xref:System.Windows.SystemFonts&gt;，和&lt;xref:System.Windows.SystemParameters&gt;類型，分別靜態屬性。&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To use FindResource to acquire them, these types also expose resource key properties that are designed to be passed to FindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">若要使用 FindResource 取得它們，這些型別也會公開資源的索引鍵屬性是設計成可傳遞至 FindResource;例如， &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Because FindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">FindResource 傳回的物件，因為您必須先轉換適當的型別傳回的值，如果找到資源。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you call this method for a key that cannot be found, an exception is thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 如果找不到機碼中呼叫這個方法，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>If you do not want to handle exceptions that result from calling FindResource, call &lt;xref:System.Windows.Application.TryFindResource%2A&gt; instead; &lt;xref:System.Windows.Application.TryFindResource%2A&gt; returns a <ph id="ph1">`null`</ph> reference when a requested resource cannot be found, and does not throw an exception.</source>
          <target state="translated">如果您不想處理的例外狀況所導致的呼叫 FindResource，&lt;xref:System.Windows.Application.TryFindResource%2A&gt;改為呼叫;&lt;xref:System.Windows.Application.TryFindResource%2A&gt;傳回<ph id="ph1">`null`</ph>時找不到要求的資源，並不會擲回例外狀況參考。&lt;/xref:System.Windows.Application.TryFindResource%2A&gt; &lt;/xref:System.Windows.Application.TryFindResource%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">這個方法是安全執行緒，可以從任何執行緒呼叫。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">要尋找之資源的名稱。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">要求的資源物件。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">如果找不到要求的資源， <bpt id="p1">&lt;xref href="System.Windows.ResourceReferenceKeyNotFoundException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>就會擲回。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The resource cannot be found.</source>
          <target state="translated">找不到資源。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> content has been loaded if the desired fragment is in different content.</source>
          <target state="translated">發生於應用程式中的巡覽開始導覽至內容片段中，如果想要的片段是在目前內容中，或來源之後立即進行巡覽<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>要的片段不同的內容是否已載入內容。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a content data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">傳回位於指定的內容資料檔案的資源資料流&lt;xref:System.Uri&gt;(請參閱<bpt id="p1">[</bpt>WPF 應用程式資源、 內容和資料檔案<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">這個方法不具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The relative &lt;xref:System.Uri&gt; that maps to a loose resource.</source>
          <target state="translated">將相對&lt;xref:System.Uri&gt;對應至鬆散的資源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a content data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含的內容資料檔，位於指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If a loose resource is not found, null is returned.</source>
          <target state="translated">如果找不到鬆散的資源，則會傳回 null。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至 GetContentStream 為 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetContentStream is an absolute &lt;xref:System.Uri&gt;.</source>
          <target state="translated">&lt;xref:System.Uri&gt;也就是傳遞至 GetContentStream 是絕對&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt; &lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">擷取的 cookie &lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;所指定的位置</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>GetCookie retrieves a cookie for the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">GetCookie 擷取指定&lt;xref:System.Uri&gt;。&lt;/xref:System.Uri&gt; cookie</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If the cookie can't be retrieved, a &lt;xref:System.ComponentModel.Win32Exception&gt; is thrown.</source>
          <target state="translated">如果無法擷取 cookie，&lt;xref:System.ComponentModel.Win32Exception&gt;就會擲回。&lt;/xref:System.ComponentModel.Win32Exception&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You need to write the code to parse the cookie string into a list of name/value pairs.</source>
          <target state="translated">您需要撰寫程式碼將 cookie 字串剖析成名稱/值組的清單。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如概觀中的 cookie <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>，請參閱<bpt id="p1">[</bpt>巡覽概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which a cookie was created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;可指定為其建立 cookie 的位置。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.String&gt; value, if the cookie exists; otherwise, a <bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is thrown.</source>
          <target state="translated">A&lt;xref:System.String&gt;值，如果存在 cookie，否則<bpt id="p1">&lt;xref href="System.ComponentModel.Win32Exception"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>就會擲回。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by GetCookie) if a problem occurs when attempting to retrieve the specified cookie.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>產生錯誤時<bpt id="p1">&lt;xref uid="langword_csharp_InternetGetCookie" name="InternetGetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函式 （由 GetCookie 呼叫） 嘗試擷取指定的 cookie 時，發生問題時。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">傳回位於指定的站台的來源資料檔的資源資料流&lt;xref:System.Uri&gt;(請參閱<bpt id="p1">[</bpt>WPF 應用程式資源、 內容和資料檔案<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">這個方法不具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to a loose resource at the site of origin.</source>
          <target state="translated">&lt;xref:System.Uri&gt;對應至鬆散的來源站台資源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for a site-of-origin data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;位於站台的原始資料檔案的資源資料流</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If the loose resource is not found, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is returned.</source>
          <target state="translated">如果找不到鬆散的資源， <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>傳回。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至 GetRemoteStream 為 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetRemoteStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://siteoforigin:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至 GetRemoteStream 不相關，而不是位於絕對值<ph id="ph1">`pack://siteoforigin:,,,/`</ph>表單。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns a resource stream for a resource data file that is located at the specified &lt;xref:System.Uri&gt; (see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated">傳回位於指定之資源的資料檔的資源資料流&lt;xref:System.Uri&gt;(請參閱<bpt id="p1">[</bpt>WPF 應用程式資源、 內容和資料檔案<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This method is not thread safe.</source>
          <target state="translated">這個方法不具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that maps to an embedded resource.</source>
          <target state="translated">&lt;xref:System.Uri&gt;可對應到內嵌資源。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains a resource stream for resource data file that is located at the specified &lt;xref:System.Uri&gt;.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Resources.StreamResourceInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含位於指定&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;的資源資料檔案的資源資料流</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is null.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至 GetResourceStream 為 null。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream is either not relative, or is absolute but not in the <ph id="ph1">`pack://application:,,,/`</ph> form.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至 GetResourceStream 不相關，而不是位於絕對值<ph id="ph1">`pack://application:,,,/`</ph>表單。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that is passed to GetResourceStream cannot be found.</source>
          <target state="translated">&lt;xref:System.Uri&gt;傳遞至找不到 GetResourceStream。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</source>
          <target state="translated">發生於應用程式中的巡覽所巡覽的內容已載入，剖析，並開始呈現。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Listen for events on the navigated content such as the &lt;xref:System.Windows.FrameworkElement.Loaded&gt;event on &lt;xref:System.Windows.Controls.Page&gt; before you access properties of the navigated content.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這類接聽事件上巡覽內容&lt;xref:System.Windows.FrameworkElement.Loaded&gt;事件&lt;xref:System.Windows.Controls.Page&gt;存取巡覽內容的屬性之前。&lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.FrameworkElement.Loaded&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>, and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">載入<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>位在指定的檔案<ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>，並將它轉換為物件的根項目所指定的執行個體<ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>You must explicitly convert the return value to the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">您必須明確轉換成相同類型的根項目為傳回值<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>檔案可以是應用程式程式碼檔案 (設定為<ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph>頁面項目) 或應用程式資料檔案 (資源檔中，內容檔案或站台的來源檔案，請參閱 &lt; <bpt id="p1">[</bpt>WPF 應用程式資源、 內容和資料檔案<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這個方法不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;對應至相對之<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>檔案。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An instance of the root element specified by the XAML file loaded.</source>
          <target state="translated">指定載入之 XAML 檔案的根項目執行個體。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>為 null。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The file is not a <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file.</source>
          <target state="translated">檔案不是<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file that is located at the specified <ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph> and converts it to an instance of the object that is specified by the root element of the <ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> file.</source>
          <target state="translated">載入<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>位在指定的檔案<ph id="ph2">[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]</ph>並將它轉換為物件的根項目所指定的執行個體<ph id="ph3">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> file can be an application code file (configured as an <ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph> Page item) or an application data file (a resource file, content file, or site-of-origin file; see <bpt id="p1">[</bpt>WPF Application Resource, Content, and Data Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>檔案可以是應用程式程式碼檔案 (設定為<ph id="ph2">[!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)]</ph>頁面項目) 或應用程式資料檔案 (資源檔中，內容檔案或站台的來源檔案，請參閱 &lt; <bpt id="p1">[</bpt>WPF 應用程式資源、 內容和資料檔案<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>)。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is not thread-safe.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 這個方法不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An object of the same type as the root element of the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">相同的根項目類型的物件<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that maps to a relative <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;對應至相對之<ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>檔案。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;resourceLocator&lt;/code&gt;</ph>為 null。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">resourceLocator</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph> is of a type that does not match the root element of the <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;component&lt;/code&gt;</ph>不符合的根元素的類型<ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph>檔案。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the main window of the application.</source>
          <target state="translated">取得或設定應用程式的主視窗。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>MainWindow is automatically set with a reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated in the &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">第一個&lt;xref:System.Windows.Window&gt;要在&lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt;具現化物件&lt;/xref:System.Windows.Window&gt;的參考，會自動設定 MainWindow</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>You can specify a different main window by setting MainWindow assigning another &lt;xref:System.Windows.Application.Windows%2A&gt; object to the MainWindow property.</source>
          <target state="translated">您可以藉由設定 MainWindow 指派另一個指定不同的主視窗&lt;xref:System.Windows.Application.Windows%2A&gt;MainWindow 屬性的物件。&lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object is set to &lt;xref:System.Windows.ShutdownMode&gt;, closing the main window causes the application to shut down.</source>
          <target state="translated">如果&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;屬性&lt;xref:System.Windows.Application&gt;物件設定為&lt;xref:System.Windows.ShutdownMode&gt;，關閉主視窗會關閉應用程式。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>It is possible to set the MainWindow property from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>, if an application's main window is not the window that is produced by setting the &lt;xref:System.Windows.Application.StartupUri%2A&gt; property in <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>.</source>
          <target state="translated">您可從 MainWindow 屬性設為<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>，如果應用程式的主視窗不是設定所產生的視窗&lt;xref:System.Windows.Application.StartupUri%2A&gt;屬性<ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>。&lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The two limitations of the <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> approach are:      -   You can specify either a <ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Window&gt; or a <ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-only &lt;xref:System.Windows.Navigation.NavigationWindow&gt; as the main window.</source>
          <target state="translated">兩個限制<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>方法是:-您可以指定<ph id="ph2">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-只&lt;xref:System.Windows.Window&gt;或<ph id="ph3">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>-只&lt;xref:System.Windows.Navigation.NavigationWindow&gt;做為主要的視窗。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-   You must set the &lt;xref:System.Windows.UIElement.Visibility%2A&gt; property of the window you specify, otherwise it won't be shown.</source>
          <target state="translated">-您必須設定&lt;xref:System.Windows.UIElement.Visibility%2A&gt;您所指定視窗的屬性，否則它將不會顯示。&lt;/xref:System.Windows.UIElement.Visibility%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The reference to the first &lt;xref:System.Windows.Window&gt; object to be instantiated is also added as the first item to the &lt;xref:System.Windows.Application.Windows%2A&gt; collection.</source>
          <target state="translated">第一個參考&lt;xref:System.Windows.Window&gt;要具現化物件也會加入做為第一個項目&lt;xref:System.Windows.Application.Windows%2A&gt;集合。&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If MainWindow is subsequently set with a reference to a different &lt;xref:System.Windows.Window&gt;, the position of the item with the reference to the main window will change, while the order of items in &lt;xref:System.Windows.Application.Windows%2A&gt; remains the same.</source>
          <target state="translated">如果 MainWindow 後續設定至不同的參考&lt;xref:System.Windows.Window&gt;，將會變更主視窗的參考之項目的位置，在順序中的項目時&lt;xref:System.Windows.Application.Windows%2A&gt;維持不變。&lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Consequently, always use MainWindow to refer to the main window instead of the first item in &lt;xref:System.Windows.Application.Windows%2A&gt;.</source>
          <target state="translated">因此，一律使用 MainWindow 參考到主視窗而不是&lt;xref:System.Windows.Application.Windows%2A&gt;.&lt;/xref:System.Windows.Application.Windows%2A&gt;中的第一個項目</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the main window is a &lt;xref:System.Windows.Navigation.NavigationWindow&gt;, and you need specific access to &lt;xref:System.Windows.Navigation.NavigationWindow&gt; members, you will need to cast the value of MainWindow to &lt;xref:System.Windows.Navigation.NavigationWindow&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 主視窗是否&lt;xref:System.Windows.Navigation.NavigationWindow&gt;，您需要特定的存取權&lt;xref:System.Windows.Navigation.NavigationWindow&gt;的成員，您必須為&lt;xref:System.Windows.Navigation.NavigationWindow&gt;。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; MainWindow 值轉型&lt;/xref:System.Windows.Navigation.NavigationWindow&gt;和&lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>&gt;    &gt;  This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&gt;&gt; 這個屬性就只能從建立的執行緒&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is designated as the main application window.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>已指定為主要的應用程式視窗。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>MainWindow is set from an application that's hosted in a browser, such as an <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">從裝載於瀏覽器，例如應用程式會設定 MainWindow <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</source>
          <target state="translated">發生於找到正在巡覽至應用程式中的巡覽器的內容，但它可能尚未完成載入。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Occurs when a new navigation is requested by a navigator in the application.</source>
          <target state="translated">當應用程式中的巡覽要求新的瀏覽時，就會發生。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Occurs when an error occurs while a navigator in the application is navigating to the requested content.</source>
          <target state="translated">發生於應用程式中的導覽巡覽至所要求的內容時發生錯誤。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</source>
          <target state="translated">是受管理的應用程式提供導覽進度資訊中的導覽器 在下載期間定期發生。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Occurs when the <bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</source>
          <target state="translated">發生時<bpt id="p1">&lt;xref uid="langword_csharp_StopLoading" name="StopLoading" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>呼叫的應用程式中的巡覽方法，或新的瀏覽要求時的巡覽器目前的瀏覽正在進行時。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A navigator is either a &lt;xref:System.Windows.Navigation.NavigationWindow&gt; or a &lt;xref:System.Windows.Controls.Frame&gt;.</source>
          <target state="translated">導覽是其中一個&lt;xref:System.Windows.Navigation.NavigationWindow&gt;或&lt;xref:System.Windows.Controls.Frame&gt;.&lt;/xref:System.Windows.Controls.Frame&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>See &lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;.</source>
          <target state="translated">請參閱&lt;xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Activated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>OnActivated raises the &lt;xref:System.Windows.Application.Activated&gt; event.</source>
          <target state="translated">OnActivated 引發&lt;xref:System.Windows.Application.Activated&gt;事件。&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnActivated.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnActivated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnActivated in the base class if &lt;xref:System.Windows.Application.Activated&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnActivated 基底類別中如果&lt;xref:System.Windows.Application.Activated&gt;需要引發。&lt;/xref:System.Windows.Application.Activated&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件資料。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Deactivated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>OnDeactivated raises the &lt;xref:System.Windows.Application.Deactivated&gt; event.</source>
          <target state="translated">OnDeactivated 引發&lt;xref:System.Windows.Application.Deactivated&gt;事件。&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnDeactivated.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnDeactivated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnDeactivated in the base class if &lt;xref:System.Windows.Application.Deactivated&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnDeactivated 基底類別中如果&lt;xref:System.Windows.Application.Deactivated&gt;需要引發。&lt;/xref:System.Windows.Application.Deactivated&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;包含事件資料。&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Exit"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>OnExit raises the &lt;xref:System.Windows.Application.Exit&gt; event.</source>
          <target state="translated">OnExit 引發&lt;xref:System.Windows.Application.Exit&gt;事件。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override the OnExit method.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnExit 方法。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnExit in the base class if &lt;xref:System.Windows.Application.Exit&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnExit 基底類別中如果&lt;xref:System.Windows.Application.Exit&gt;需要引發。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.ExitEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.FragmentNavigation"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>OnFragmentNavigation raises the &lt;xref:System.Windows.Application.FragmentNavigation&gt; event.</source>
          <target state="translated">OnFragmentNavigation 引發&lt;xref:System.Windows.Application.FragmentNavigation&gt;事件。&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnFragmentNavigation.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnFragmentNavigation。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnFragmentNavigation in the base class if &lt;xref:System.Windows.Application.FragmentNavigation&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnFragmentNavigation 基底類別中如果&lt;xref:System.Windows.Application.FragmentNavigation&gt;需要引發。&lt;/xref:System.Windows.Application.FragmentNavigation&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.FragmentNavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.LoadCompleted"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>OnLoadCompleted raises the &lt;xref:System.Windows.Application.LoadCompleted&gt; event.</source>
          <target state="translated">OnLoadCompleted 引發&lt;xref:System.Windows.Application.LoadCompleted&gt;事件。&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnLoadCompleted.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnLoadCompleted。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnLoadCompleted in the base class if &lt;xref:System.Windows.Application.LoadCompleted&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnLoadCompleted 基底類別中如果&lt;xref:System.Windows.Application.LoadCompleted&gt;需要引發。&lt;/xref:System.Windows.Application.LoadCompleted&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Navigated"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>OnNavigated raises the &lt;xref:System.Windows.Application.Navigated&gt; event.</source>
          <target state="translated">OnNavigated 引發&lt;xref:System.Windows.Application.Navigated&gt;事件。&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigated.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnNavigated。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigated in the base class if &lt;xref:System.Windows.Application.Navigated&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnNavigated 基底類別中如果&lt;xref:System.Windows.Application.Navigated&gt;需要引發。&lt;/xref:System.Windows.Application.Navigated&gt;</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Navigating"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>OnNavigating raises the &lt;xref:System.Windows.Application.Navigating&gt; event.</source>
          <target state="translated">OnNavigating 引發&lt;xref:System.Windows.Application.Navigating&gt;事件。&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigating.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnNavigating。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigating in the base class if &lt;xref:System.Windows.Application.Navigating&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnNavigating 基底類別中如果&lt;xref:System.Windows.Application.Navigating&gt;需要引發。&lt;/xref:System.Windows.Application.Navigating&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigatingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationFailed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>OnNavigationFailed raises the &lt;xref:System.Windows.Application.NavigationFailed&gt; event.</source>
          <target state="translated">OnNavigationFailed 引發&lt;xref:System.Windows.Application.NavigationFailed&gt;事件。&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationFailed.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnNavigationFailed。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigationFailed in the base class if &lt;xref:System.Windows.Application.NavigationFailed&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnNavigationFailed 基底類別中如果&lt;xref:System.Windows.Application.NavigationFailed&gt;需要引發。&lt;/xref:System.Windows.Application.NavigationFailed&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationFailedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationProgress"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>OnNavigationProgress raises the &lt;xref:System.Windows.Application.NavigationProgress&gt; event.</source>
          <target state="translated">OnNavigationProgress 引發&lt;xref:System.Windows.Application.NavigationProgress&gt;事件。&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationProgress.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnNavigationProgress。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The overridden method must explicitly call OnNavigationProgress in the base class if &lt;xref:System.Windows.Application.NavigationProgress&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須明確地呼叫 OnNavigationProgress 基底類別中如果&lt;xref:System.Windows.Application.NavigationProgress&gt;需要引發。&lt;/xref:System.Windows.Application.NavigationProgress&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationProgressEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.NavigationStopped"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>OnNavigationStopped raises the &lt;xref:System.Windows.Application.NavigationStopped&gt; event.</source>
          <target state="translated">OnNavigationStopped 引發&lt;xref:System.Windows.Application.NavigationStopped&gt;事件。&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnNavigationStopped.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnNavigationStopped。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnNavigationStopped in the base class if &lt;xref:System.Windows.Application.NavigationStopped&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnNavigationStopped 基底類別中如果&lt;xref:System.Windows.Application.NavigationStopped&gt;需要引發。&lt;/xref:System.Windows.Application.NavigationStopped&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Navigation.NavigationEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.SessionEnding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>OnSessionEnding raises the &lt;xref:System.Windows.Application.SessionEnding&gt; event.</source>
          <target state="translated">OnSessionEnding 引發&lt;xref:System.Windows.Application.SessionEnding&gt;事件。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnSessionEnding.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnSessionEnding。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnSessionEnding in the base class if &lt;xref:System.Windows.Application.SessionEnding&gt; needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnSessionEnding 基底類別中如果&lt;xref:System.Windows.Application.SessionEnding&gt;需要引發。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.SessionEndingCancelEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">引發<bpt id="p1">&lt;xref href="System.Windows.Application.Startup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>事件。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>OnStartup raises the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">OnStartup 引發&lt;xref:System.Windows.Application.Startup&gt;事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A type that derives from &lt;xref:System.Windows.Application&gt; may override OnStartup.</source>
          <target state="translated">從衍生的型別&lt;xref:System.Windows.Application&gt;可能會覆寫 OnStartup。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The overridden method must call OnStartup in the base class if the &lt;xref:System.Windows.Application.Startup&gt; event needs to be raised.</source>
          <target state="translated">覆寫的方法必須呼叫 OnStartup 基底類別中如果&lt;xref:System.Windows.Application.Startup&gt;必須引發的事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.StartupEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>包含事件資料。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Gets a collection of application-scope properties.</source>
          <target state="translated">取得應用程式範圍的屬性集合。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application&gt; exposes a dictionary via Properties which you can use to store application-scope properties.</source>
          <target state="translated">&lt;xref:System.Windows.Application&gt;會公開透過屬性可用來儲存應用程式範圍的屬性字典。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>This allows you to share state amongst all code in an &lt;xref:System.AppDomain&gt; in a thread-safe fashion, without the need to write your own state code.</source>
          <target state="translated">這可讓您共用中的所有程式碼之間的狀態&lt;xref:System.AppDomain&gt;以執行緒安全的方式，而不必自行撰寫程式的狀態碼。&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Properties stored in Properties must be converted to the appropriate type returned.</source>
          <target state="translated">儲存在屬性內容必須轉換成傳回適當的型別。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>TheProperties property is thread safe and is available from any thread.</source>
          <target state="translated">TheProperties 屬性具備執行緒安全，且可從任何執行緒。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IDictionary&gt; that contains the application-scope properties.</source>
          <target state="translated">&lt;xref:System.Collections.IDictionary&gt;，其中包含應用程式領域屬性。&lt;/xref:System.Collections.IDictionary&gt;</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">取得或設定&lt;xref:System.Reflection.Assembly&gt;提供組件<ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph>中的資源<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> resources are resolved at run time with respect to the entry assembly, which is identified by the value returned from the &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; method.</source>
          <target state="translated">根據預設，<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>相對於項目組件，從傳回的值由執行階段在解決資源&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;方法。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The entry assembly is the assembly that is returned by &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; and could be the following:      -   The executable assembly in the default application domain.</source>
          <target state="translated">項目組件是所傳回的組件&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;和以下:-預設應用程式定義域中執行的組件。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>-   The first assembly to be executed by calling &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">的藉由呼叫&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt;要執行第一個組件</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>In the following cases, however, a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly cannot get a reference to the entry assembly:      -   An unmanaged (native) application hosts the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly.</source>
          <target state="translated">在下列情況中，不過，<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>組件無法取得項目組件的參考:-unmanaged （機器碼） 的應用程式主機<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>組件。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>-   A managed application hosts the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly by loading it into a new application domain using a method other than &lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.</source>
          <target state="translated">-受管理的應用程式主機<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>所載入的新應用程式定義域以外使用方法&lt;xref:System.AppDomain.ExecuteAssembly%2A&gt;.&lt;/xref:System.AppDomain.ExecuteAssembly%2A&gt;的組件</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>In both of these cases, &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns <ph id="ph1">`null`</ph>, and the <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly's resources cannot be resolved.</source>
          <target state="translated">在上述兩種情況，&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;傳回<ph id="ph1">`null`</ph>，而<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>無法解析組件的資源。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>In these cases, ResourceAssembly can be set, once only, with a reference to the assembly that should be used to resolve resources.</source>
          <target state="translated">在這些情況下，ResourceAssembly 可以設定，只有一次，應該用來解析資源的組件的參考。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>ResourceAssembly can only be set once because it is unlikely that the resource assembly will change after the <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly is loaded.</source>
          <target state="translated">ResourceAssembly 只能設定一次，所以不太可能，資源組件會在之後變更<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>已載入組件。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  ResourceAssembly cannot be set when a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> assembly can discover the entry assembly—that is, when &lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt; returns a reference to an assembly rather than <ph id="ph3">`null`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; ResourceAssembly 時不能設定<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>組件可以探索項目組件 — 也就是，當&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;傳回組件的參考而非<ph id="ph3">`null`</ph>。&lt;/xref:System.Reflection.Assembly.GetEntryAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This property is thread safe and is available from any thread.</source>
          <target state="translated">這個屬性是安全執行緒，可從任何執行緒。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>ResourceAssembly is introduced in the .NET Framework version 3.5.</source>
          <target state="translated">.NET Framework 3.5 版中引進 ResourceAssembly。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>版本和相依性<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;xref:System.Reflection.Assembly&gt; that provides the pack <ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph> for resources in a <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">參考&lt;xref:System.Reflection.Assembly&gt;提供組件<ph id="ph1">[!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)]</ph>中的資源<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式。&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application has an entry assembly, or ResourceAssembly has already been set.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式有項目組件，或已經設定 ResourceAssembly。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of application-scope resources, such as styles and brushes.</source>
          <target state="translated">取得或設定應用程式範圍的資源，例如樣式和筆刷的集合。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The Resources property can be used to share resources across the windows and elements of an application.</source>
          <target state="translated">資源屬性可以用來在 windows 和應用程式的項目之間共用資源。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Additionally, the Resources property is included in the resource lookup path, which is traversed in the following order:      1.</source>
          <target state="translated">此外，資源屬性包含在資源查閱路徑、 周遊順序如下︰ 1。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Elements      2.</source>
          <target state="translated">項目 2。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Windows      3.</source>
          <target state="translated">Windows 3。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Resources      4.</source>
          <target state="translated">4 的資源。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>System       Consequently, <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> elements can bind to application-scope resources.</source>
          <target state="translated">系統因此<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>元素可以繫結至應用程式範圍的資源。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Additionally, if resources change, the resource system ensures that element properties which are bound to those resources are automatically updated to reflect the change.</source>
          <target state="translated">此外，如果變更資源，資源系統可確保該元素繫結至這些資源的屬性會自動更新以反映變更。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Application-scope resources provide a simple way to support a consistent theme across your application.</source>
          <target state="translated">應用程式範圍的資源會提供簡單的方式，以支援跨應用程式一致的主題。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>You can easily create a theme in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> by using the <ph id="ph2">`Application.Resources`</ph> tag.</source>
          <target state="translated">您可以輕鬆地建立佈景主題<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>使用<ph id="ph2">`Application.Resources`</ph>標記。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>However, if your application supports multiple themes, which may contain a large number of theme elements, it might be easier to manage them using one &lt;xref:System.Windows.ResourceDictionary&gt; instance for each theme.</source>
          <target state="translated">不過，如果您的應用程式支援多個主題，其中可能包含大量的佈景主題的項目，可能是您更輕鬆地管理這些使用其中一種&lt;xref:System.Windows.ResourceDictionary&gt;為每個主題的執行個體。&lt;/xref:System.Windows.ResourceDictionary&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>In this way, a new theme can be applied by setting the Resources property to the appropriate &lt;xref:System.Windows.ResourceDictionary&gt;.</source>
          <target state="translated">如此一來，新的佈景主題可以套用至適當的&lt;xref:System.Windows.ResourceDictionary&gt;。&lt;/xref:System.Windows.ResourceDictionary&gt;設定資源屬性</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>There are two considerations to make when using Resources.</source>
          <target state="translated">有兩個要使用的資源時的考量。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>First, the dictionary <bpt id="p1">*</bpt>key<ept id="p1">*</ept> is an object, so you need to use exactly the same object instance when both setting and getting a property value (note that the key is case-sensitive when using a string).</source>
          <target state="translated">首先，字典<bpt id="p1">*</bpt>金鑰<ept id="p1">*</ept>不是物件，因此您必須使用完全相同物件執行個體時設定和取得屬性值 （請注意使用字串時，索引鍵是區分大小寫）。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Second, the dictionary <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is an object, so you will need to convert the value to the desired type when getting a property value.</source>
          <target state="translated">其次，字典<bpt id="p1">*</bpt>值<ept id="p1">*</ept>不是物件，因此您必須取得的屬性值時，就將值轉換成所需的類型。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Resources is thread safe and is available from any thread.</source>
          <target state="translated">資源是安全執行緒，可從任何執行緒。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains zero or more application-scope resources.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ResourceDictionary"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>物件，其中包含零或多個應用程式範圍的資源。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application.</source>
          <target state="translated">啟動<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; is called to start a <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> application.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;呼叫以啟動<ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>If you define your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, &lt;xref:System.Windows.Application.Run%2A&gt; will be called implicitly.</source>
          <target state="translated">如果您定義您&lt;xref:System.Windows.Application&gt;使用標記或標記和程式碼後置&lt;xref:System.Windows.Application.Run%2A&gt;會隱含地呼叫。&lt;/xref:System.Windows.Application.Run%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>However, if you define your &lt;xref:System.Windows.Application&gt; using code, you will need to explicitly call &lt;xref:System.Windows.Application.Run%2A&gt;.</source>
          <target state="translated">不過，如果您定義&lt;xref:System.Windows.Application&gt;使用程式碼中，您需要明確地呼叫&lt;xref:System.Windows.Application.Run%2A&gt;.&lt;/xref:System.Windows.Application.Run%2A&gt;&lt;/xref:System.Windows.Application&gt;您</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>When &lt;xref:System.Windows.Application.Run%2A&gt; is called, &lt;xref:System.Windows.Application&gt; attaches a new &lt;xref:System.Windows.Threading.Dispatcher&gt; instance to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> thread.</source>
          <target state="translated">當&lt;xref:System.Windows.Application.Run%2A&gt;呼叫時，&lt;xref:System.Windows.Application&gt;附加新&lt;xref:System.Windows.Threading.Dispatcher&gt;執行個體<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>執行緒。&lt;/xref:System.Windows.Threading.Dispatcher&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Next, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object's &lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt; method is called, which starts a message pump to process windows messages.</source>
          <target state="translated">下一步&lt;xref:System.Windows.Threading.Dispatcher&gt;物件的&lt;xref:System.Windows.Threading.Dispatcher.Run%2A&gt;呼叫方法，以便啟動以處理 windows 訊息的訊息幫浦。&lt;/xref:System.Windows.Threading.Dispatcher.Run%2A&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;xref:System.Windows.Threading.Dispatcher&gt; object calls the &lt;xref:System.Windows.Application&gt; object's the &lt;xref:System.Windows.Application.OnStartup%2A&gt; method to raise the &lt;xref:System.Windows.Application.Startup&gt; event.</source>
          <target state="translated">最後，&lt;xref:System.Windows.Threading.Dispatcher&gt;物件會呼叫&lt;xref:System.Windows.Application&gt;物件的&lt;xref:System.Windows.Application.OnStartup%2A&gt;方法，以引發&lt;xref:System.Windows.Application.Startup&gt;事件。&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.OnStartup%2A&gt; &lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Threading.Dispatcher&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Consequently, the application execution model has been established by the time you handle &lt;xref:System.Windows.Application.Startup&gt;, at which point the application is considered to be running.</source>
          <target state="translated">因此，您所處理的時間建立應用程式執行模型&lt;xref:System.Windows.Application.Startup&gt;，此時應用程式會被視為在執行。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An application stops running when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called; the value of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; property determines when &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called, and whether it happens automatically or you need to explicitly call it.</source>
          <target state="translated">應用程式停止時執行&lt;xref:System.Windows.Application.Shutdown%2A&gt;稱為; 的值&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;屬性會決定當&lt;xref:System.Windows.Application.Shutdown%2A&gt;呼叫時，與是否自動，或者您需要明確地呼叫它。&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run%2A&gt; can be called only from the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run%2A&gt;可以只從建立的執行緒呼叫&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Also, &lt;xref:System.Windows.Application.Run%2A&gt; cannot be called from a <ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">此外，&lt;xref:System.Windows.Application.Run%2A&gt;無法從呼叫<ph id="ph1">[!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;應用程式的應用程式關閉時，作業系統傳回的結束代碼。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">根據預設，結束代碼值為 0。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Run is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">從瀏覽器裝載應用程式呼叫執行 (例如， <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Starts a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application and opens the specified window.</source>
          <target state="translated">啟動<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>應用程式，並開啟指定的視窗。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This overload extends the &lt;xref:System.Windows.Application.Run%2A&gt; method to open the specified window after an application starts running.</source>
          <target state="translated">這個多載擴充&lt;xref:System.Windows.Application.Run%2A&gt;方法來執行的應用程式啟動後開啟指定的視窗。&lt;/xref:System.Windows.Application.Run%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>If you define a code &lt;xref:System.Windows.Application&gt; that opens a window when it starts running, you explicitly call Run.</source>
          <target state="translated">如果您的程式碼定義&lt;xref:System.Windows.Application&gt;，會開啟視窗，它會開始執行時，您明確地呼叫執行。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>If you create your &lt;xref:System.Windows.Application&gt; using markup, or markup and code-behind, you can automatically open a window during using either of the following techniques:      -   Declaratively, by setting &lt;xref:System.Windows.Application.StartupUri%2A&gt;.</source>
          <target state="translated">如果您建立您&lt;xref:System.Windows.Application&gt;使用標記或標記和程式碼後置，您就可以自動開啟視窗期間使用的下列技術:-以宣告方式，是藉由設定&lt;xref:System.Windows.Application.StartupUri%2A&gt;.&lt;/xref:System.Windows.Application.StartupUri%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-   Programmatically, by handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">-以程式設計的方式，是藉由處理&lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that opens automatically when an application starts.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Window"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，會自動開啟應用程式啟動時執行。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Int32&gt; application exit code that is returned to the operating system when the application shuts down.</source>
          <target state="translated">&lt;xref:System.Int32&gt;應用程式的應用程式關閉時，作業系統傳回的結束代碼。&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>By default, the exit code value is 0.</source>
          <target state="translated">根據預設，結束代碼值為 0。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Windows.Application.Run*&gt; is called from a browser-hosted application (for example, an <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>).</source>
          <target state="translated">&lt;xref:System.Windows.Application.Run*&gt;從瀏覽器裝載應用程式呼叫 (例如， <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>)。&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Occurs when the user ends the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session by logging off or shutting down the operating system.</source>
          <target state="translated">當使用者結束時，就會發生<ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>透過登出或關閉作業系統的工作階段。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>By default, an application shuts down when the <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> session ends, which occurs when a user logs off or shuts down.</source>
          <target state="translated">根據預設，應用程式關閉時<ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>使用者登出或關閉時，就會發生的工作階段結束。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>When this happens, <ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph> asks each open application to shut down.</source>
          <target state="translated">當發生這種情況時，<ph id="ph1">[!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)]</ph>會要求每個開啟的應用程式關閉。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>However, it is possible that an application may not be ready to shut down when this occurs.</source>
          <target state="translated">不過，它可能會，應用程式可能無法馬上發生此情況時關閉。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>For example, an application may have data that is in an inconsistent state, or in the middle of a long-running operation.</source>
          <target state="translated">例如，應用程式可能處於不一致的狀態，或進行長時間執行的作業資料。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>In these situations, it may be desirable to prevent the session from ending, and may be more desirable to allow users the option to decide whether or not to let the session to end.</source>
          <target state="translated">在這些情況下，它可能會想要防止結束，工作階段，並可能比較想要允許使用者決定要讓結束工作階段的選項。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>You can detect when a session ends by handling the SessionEnding event.</source>
          <target state="translated">您可以偵測藉由處理 SessionEnding 事件的工作階段結束時。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>If an application needs to prevent the session from ending, the &lt;xref:System.Windows.SessionEndingCancelEventArgs&gt; argument that is passed to the event handler exposes the &lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; that you set to <ph id="ph1">`true`</ph> (the default value is <ph id="ph2">`false`</ph>).</source>
          <target state="translated">如果應用程式需要阻礙工作階段結束，&lt;xref:System.Windows.SessionEndingCancelEventArgs&gt;傳遞至事件處理常式的引數會公開&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;，您將設定為<ph id="ph1">`true`</ph>(預設值是<ph id="ph2">`false`</ph>)。&lt;/xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>If SessionEnding is unhandled, or is handled without being cancelled, &lt;xref:System.Windows.Application.Shutdown%2A&gt; is called and the &lt;xref:System.Windows.Application.Exit&gt; event is raised.</source>
          <target state="translated">如果 SessionEnding 未經處理，或處理而被取消，&lt;xref:System.Windows.Application.Shutdown%2A&gt;稱為和&lt;xref:System.Windows.Application.Exit&gt;就會引發事件。&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>To obtain more information about why the session is ending, an application can inspect &lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;, which is one of the &lt;xref:System.Windows.ReasonSessionEnding&gt; values (&lt;xref:System.Windows.ReasonSessionEnding&gt; and &lt;xref:System.Windows.ReasonSessionEnding&gt;).</source>
          <target state="translated">若要取得工作階段結束的原因的詳細資訊，請檢查應用程式可以&lt;xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;，這是其中一個&lt;xref:System.Windows.ReasonSessionEnding&gt;值 (&lt;xref:System.Windows.ReasonSessionEnding&gt;和&lt;xref:System.Windows.ReasonSessionEnding&gt;)。&lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.ReasonSessionEnding&gt; &lt;/xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A&gt;</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>SessionEnding is not raised by console applications.</source>
          <target state="translated">SessionEnding 不是主控台應用程式所引發。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>SessionEnding is raised only on the thread that creates the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">只能在建立的執行緒上引發 SessionEnding&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>SessionEnding is not raised for <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">不會引發 SessionEnding <ph id="ph1">[!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Creates a cookie for the location specified by a &lt;xref:System.Uri&gt;.</source>
          <target state="translated">建立 cookie 的&lt;xref:System.Uri&gt;.&lt;/xref:System.Uri&gt;所指定的位置</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A cookie is an arbitrary piece of data that can be stored by an application on the client machine during application sessions (session cookies) or across application sessions (persistent cookies).</source>
          <target state="translated">Cookie 是任意的資料片段都儲存在應用程式工作階段 (工作階段 cookie)，或在應用程式工作階段 (持續性 cookies) 之間的用戶端電腦上應用程式。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>You can create both types of cookies by calling SetCookie.</source>
          <target state="translated">您可以藉由呼叫 SetCookie 建立這兩種類型的 cookie。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Cookie data typically takes the form of a name/value pair in the following format:       <ph id="ph1">`Name=Value`</ph>       You pass a string of this format to SetCookie, along with the &lt;xref:System.Uri&gt; of the location for which the cookie should be set (typically, the application domain).</source>
          <target state="translated">Cookie 資料通常會採用格式的名稱/值組的格式如下︰<ph id="ph1">`Name=Value`</ph>連同傳遞 SetCookie，這種格式的字串&lt;xref:System.Uri&gt;設定 cookie 的位置 （一般而言，應用程式定義域）。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Whether a cookie is a session cookie or a persistent cookie depends on whether the cookie string that you pass to SetCookie includes an expiry date.</source>
          <target state="translated">Cookie 是工作階段 cookie 或永續性 cookie，取決於您傳遞給 SetCookie 的 cookie 字串是否包含到期日。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The string for a session cookie does not include an expiry date.</source>
          <target state="translated">工作階段 cookie 字串沒有包括到期日。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The string for a persistent cookie does, and must be in the following format:       <ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph>       Persistent cookies are stored in the current <ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph> installation's Temporary Internet Files folder until they expire, in which case they are deleted.</source>
          <target state="translated">永續性 cookie 字串存在，而且必須以下列格式︰<ph id="ph1">`NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT`</ph>永續性 cookie 儲存在目前<ph id="ph2">[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]</ph>安裝的 Temporary Internet Files 資料夾，直至到期，在此情況下會刪除它們為止。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>You can delete a persistent cookie from your application by setting its expiry date to a date/time value that is in the past.</source>
          <target state="translated">您可以從您的應用程式刪除永續性 cookie，藉由其到期日設定在過去的日期/時間值。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>For an overview of cookies in <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>, see <bpt id="p1">[</bpt>Navigation Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">如概觀中的 cookie <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>，請參閱<bpt id="p1">[</bpt>巡覽概觀<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Uri&gt; that specifies the location for which the cookie should be created.</source>
          <target state="translated">&lt;xref:System.Uri&gt;可指定應建立 cookie 的位置。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.String&gt; that contains the cookie data.</source>
          <target state="translated">&lt;xref:System.String&gt;包含 cookie 資料。&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph> error is raised by the <bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function (called by SetCookie) if a problem occurs when attempting to create the specified cookie.</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>產生錯誤時<bpt id="p1">&lt;xref uid="langword_csharp_InternetSetCookie" name="InternetSetCookie" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>函式 （由 SetCookie 呼叫） 嘗試建立指定的 cookie 時，發生問題時。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Shuts down an application.</source>
          <target state="translated">關閉應用程式。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>When Shutdown is called, an application stops running.</source>
          <target state="translated">當呼叫關閉時，應用程式會停止執行。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to detect when an application is about to stop running, to perform any appropriate processing.</source>
          <target state="translated">您可以處理&lt;xref:System.Windows.Application.Exit&gt;事件來偵測應用程式時即將停止執行，若要執行任何適當的處理。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>Shutdown is implicitly called by <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> in the following situations:      -   When &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">關機會隱含地呼叫<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>在下列情況:-當&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;設定為&lt;xref:System.Windows.ShutdownMode&gt;.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>-   When the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;.</source>
          <target state="translated">-當&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;設定為&lt;xref:System.Windows.ShutdownMode&gt;.&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>-   When a user ends a session and the &lt;xref:System.Windows.Application.SessionEnding&gt; event is either unhandled, or handled without cancellation.</source>
          <target state="translated">-當使用者結束工作階段和&lt;xref:System.Windows.Application.SessionEnding&gt;事件已處理時，或處理，而取消。&lt;/xref:System.Windows.Application.SessionEnding&gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Calling Shutdown explicitly causes an application to shut down, regardless of the &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; setting.</source>
          <target state="translated">明確呼叫關閉會導致應用程式關閉，不論&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;設定。&lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>However, if &lt;xref:System.Windows.Application.ShutdownMode%2A&gt; is set to &lt;xref:System.Windows.ShutdownMode&gt;, you must call Shutdown to shut down an application.</source>
          <target state="translated">不過，如果&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;設&lt;xref:System.Windows.ShutdownMode&gt;，您必須呼叫 Shutdown 以關閉應用程式。&lt;/xref:System.Windows.ShutdownMode&gt; &lt;/xref:System.Windows.Application.ShutdownMode%2A&gt;</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  When Shutdown is called, the application will shut down irrespective of whether the &lt;xref:System.Windows.Window.Closing&gt; event of any open windows is canceled.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 呼叫時的關機，不論是否會關閉應用程式&lt;xref:System.Windows.Window.Closing&gt;取消事件的任何開啟的視窗。&lt;/xref:System.Windows.Window.Closing&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">可以呼叫這個方法，只能從建立的執行緒&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Shuts down an application that returns the specified exit code to the operating system.</source>
          <target state="translated">關閉指定的結束代碼傳回至作業系統的應用程式。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>You can handle the &lt;xref:System.Windows.Application.Exit&gt; event to set an exit code.</source>
          <target state="translated">您可以處理&lt;xref:System.Windows.Application.Exit&gt;事件設定的結束代碼。&lt;/xref:System.Windows.Application.Exit&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>However, if you explicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt;, and you handle &lt;xref:System.Windows.Application.Exit&gt; only to set an exit code, you can call Shutdown instead.</source>
          <target state="translated">不過，如果您明確地呼叫&lt;xref:System.Windows.Application.Shutdown%2A&gt;，而且您處理&lt;xref:System.Windows.Application.Exit&gt;僅若要設定的結束代碼，您可以改為呼叫關機。&lt;/xref:System.Windows.Application.Exit&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This method can be called only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">可以呼叫這個方法，只能從建立的執行緒&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An integer exit code for an application.</source>
          <target state="translated">整數的結束代碼的應用程式。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The default exit code is 0.</source>
          <target state="translated">預設的結束代碼為 0。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Gets or sets the condition that causes the &lt;xref:System.Windows.Application.Shutdown*&gt; method to be called.</source>
          <target state="translated">取得或設定導致的狀況&lt;xref:System.Windows.Application.Shutdown*&gt;要呼叫的方法。&lt;/xref:System.Windows.Application.Shutdown*&gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Applications stop running only when the &lt;xref:System.Windows.Application.Shutdown%2A&gt; method of the Application is called.</source>
          <target state="translated">應用程式停止執行時，才&lt;xref:System.Windows.Application.Shutdown%2A&gt;呼叫應用程式的方法。&lt;/xref:System.Windows.Application.Shutdown%2A&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Shut down can occur implicitly or explicitly, as specified by the value of the ShutdownMode property.</source>
          <target state="translated">隱含或明確地 ShutdownMode 屬性的值所指定，就會發生關機。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>If you set ShutdownMode to &lt;xref:System.Windows.ShutdownMode&gt;, <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> implicitly calls &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the last window in an application closes, even if any currently instantiated windows are set as the main window (see &lt;xref:System.Windows.Application.MainWindow%2A&gt;).</source>
          <target state="translated">如果您將設定 ShutdownMode &lt;xref:System.Windows.ShutdownMode&gt;，<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>隱含地呼叫&lt;xref:System.Windows.Application.Shutdown%2A&gt;應用程式中的上一個視窗關閉時，即使未設定任何目前的具現化的視窗做為主要視窗 (請參閱&lt;xref:System.Windows.Application.MainWindow%2A&gt;)。&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>A ShutdownMode of &lt;xref:System.Windows.ShutdownMode&gt; causes <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>to implicitly call &lt;xref:System.Windows.Application.Shutdown%2A&gt; when the &lt;xref:System.Windows.Application.MainWindow%2A&gt; closes, even if other windows are currently open.</source>
          <target state="translated">ShutdownMode&lt;xref:System.Windows.ShutdownMode&gt;導致<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>隱含呼叫&lt;xref:System.Windows.Application.Shutdown%2A&gt;時&lt;xref:System.Windows.Application.MainWindow%2A&gt;隨即關閉，即使目前開啟其他視窗。&lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The lifetime of some applications may not be dependent on when the main window or last window is closed, or may not be dependent on windows at all.</source>
          <target state="translated">某些應用程式的存留期間可能不相依於當主視窗或最後一個視窗已關閉，或可能完全不能相依於 windows。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>For these scenarios you need to set the ShutdownMode property to &lt;xref:System.Windows.ShutdownMode&gt;, which requires an explicit &lt;xref:System.Windows.Application.Shutdown%2A&gt; method call to stop the application.</source>
          <target state="translated">這些案例，您需要將 ShutdownMode 屬性設定為&lt;xref:System.Windows.ShutdownMode&gt;，這需要明確&lt;xref:System.Windows.Application.Shutdown%2A&gt;停止應用程式的方法呼叫。&lt;/xref:System.Windows.Application.Shutdown%2A&gt; &lt;/xref:System.Windows.ShutdownMode&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Otherwise, the application continues running in the background.</source>
          <target state="translated">否則，應用程式會繼續在背景執行。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>ShutdownMode can be configured declaratively from <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> or programmatically from code.</source>
          <target state="translated">可以以宣告方式設定 ShutdownMode，從<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>或以程式設計方式從程式碼。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">這個屬性就只能從建立的執行緒&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>列舉值。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">預設值是<bpt id="p1">&lt;xref href="System.Windows.ShutdownMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Occurs when the &lt;xref:System.Windows.Application.Run*&gt; method of the <bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is called.</source>
          <target state="translated">發生時&lt;xref:System.Windows.Application.Run*&gt;方法<bpt id="p1">&lt;xref href="System.Windows.Application"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>物件稱為。&lt;/xref:System.Windows.Application.Run*&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A typical <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> application may perform a variety of initialization tasks when it starts up, including:      -   Processing command-line parameters.</source>
          <target state="translated">一般<ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph>應用程式可能會在啟動時，包括執行各種不同的初始設定工作:-處理命令列參數。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>-   Opening the main window.</source>
          <target state="translated">-開啟主視窗。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-   Initializing application-scope resources.</source>
          <target state="translated">初始化應用程式範圍的資源。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>-   Initializing application-scope properties.</source>
          <target state="translated">初始化應用程式範圍的屬性。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>You can declaratively specify the main window and application-scope resources using <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph> (&lt;xref:System.Windows.Application.StartupUri%2A&gt; and &lt;xref:System.Windows.Application.Resources%2A&gt;, respectively).</source>
          <target state="translated">您可以以宣告方式指定的主視窗和使用的應用程式範圍資源<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>(&lt;xref:System.Windows.Application.StartupUri%2A&gt;和&lt;xref:System.Windows.Application.Resources%2A&gt;分別)。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Sometimes, however, the resources or main window of your application can only be determined programmatically at run time.</source>
          <target state="translated">有時候，不過，資源或主視窗的應用程式只能判斷以程式設計方式在執行階段。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Additionally, application-scope properties and command-line parameters can only be used programmatically.</source>
          <target state="translated">此外，應用程式範圍的屬性和命令列參數僅能以程式設計的方式。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Programmatic initialization can be performed by handling the Startup event, including the following:      -   Acquire and process command-line parameters, which are available from the &lt;xref:System.Windows.StartupEventArgs.Args%2A&gt; property of the &lt;xref:System.Windows.StartupEventArgs&gt; class that is passed to the Startup event handler.</source>
          <target state="translated">以程式設計方式初始化可執行的處理啟動事件，包括下列:-取得並處理命令列參數，都是從&lt;xref:System.Windows.StartupEventArgs.Args%2A&gt;屬性&lt;xref:System.Windows.StartupEventArgs&gt;傳遞至啟動的事件處理常式的類別。&lt;/xref:System.Windows.StartupEventArgs&gt; &lt;/xref:System.Windows.StartupEventArgs.Args%2A&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>-   Initialize application-scope resources by using the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">-初始化應用程式範圍的資源使用&lt;xref:System.Windows.Application.Resources%2A&gt;屬性。&lt;/xref:System.Windows.Application.Resources%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>-   Initialize application-scope properties by using the &lt;xref:System.Windows.Application.Properties%2A&gt; property.</source>
          <target state="translated">-應用程式範圍的屬性初始化是使用&lt;xref:System.Windows.Application.Properties%2A&gt;屬性。&lt;/xref:System.Windows.Application.Properties%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>-   Instantiate and show one (or more) windows.</source>
          <target state="translated">-具現化，並會顯示一個 （或以上） 的視窗。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Command-line parameters can also be acquired by calling the static &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; method of the &lt;xref:System.Environment&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 命令列參數也可以取得藉由呼叫靜態&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;方法&lt;xref:System.Environment&gt;物件。&lt;/xref:System.Environment&gt; &lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Environment.GetCommandLineArgs%2A&gt; requires full trust to execute.</source>
          <target state="translated">不過，&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;需要完全信任才能執行。&lt;/xref:System.Environment.GetCommandLineArgs%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>If you set &lt;xref:System.Windows.Application.StartupUri%2A&gt; using <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>, the main window that is created is not available from either the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property or the &lt;xref:System.Windows.Application.Windows%2A&gt; property of the &lt;xref:System.Windows.Application&gt; object until after the Startup event is processed.</source>
          <target state="translated">如果您設定&lt;xref:System.Windows.Application.StartupUri%2A&gt;使用<ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph>，就無法使用從主要視窗建立&lt;xref:System.Windows.Application.MainWindow%2A&gt;屬性或&lt;xref:System.Windows.Application.Windows%2A&gt;屬性&lt;xref:System.Windows.Application&gt;Startup 事件處理後，直到物件。&lt;/xref:System.Windows.Application&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.StartupUri%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>If you need access to the main window during startup, you need to manually create a new window object from your Startup event handler.</source>
          <target state="translated">如果您在啟動期間需要存取主要視窗中，您需要手動從啟動的事件處理常式中建立新的視窗物件。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If your application uses &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; to specify a credential policy, you need to set &lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; after Startup is raised; otherwise, <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph> sets it to a default internal policy directly after the Startup event has been raised.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 如果應用程式使用&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;若要指定認證原則，您需要設定&lt;xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;啟動引發，否則後<ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]</ph>將其設為預設的內部原則直接啟動事件引發之後。&lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt; &lt;/xref:System.Net.AuthenticationManager.CredentialPolicy%2A&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The command-line arguments that are passed to the Startup event handler are not the same as the <ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph> query string parameters that are passed to an <ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">傳遞至啟動的事件處理常式的命令列引數不是相同<ph id="ph1">[!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)]</ph>查詢字串參數傳遞給<ph id="ph2">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that is automatically shown when an application starts.</source>
          <target state="translated">取得或設定<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>，會自動顯示應用程式啟動時。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>You can use StartupUri to automatically load a <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource when an application starts.</source>
          <target state="translated">您可以使用將 StartupUri 自動載入<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>應用程式啟動時的資源。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The following table shows the types of <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources that can be loaded, the type of window they are opened into, and the type of application that these resources can be set as the StartupUri.</source>
          <target state="translated">下表顯示的型別<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>可以載入的資源，都會開啟的視窗類型，這些資源可設定為將 StartupUri 的應用程式的類型。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>|Type|Window|Application type|   |----------|------------|----------------------|   |&lt;xref:System.Windows.Window&gt;|&lt;xref:System.Windows.Window&gt;|Standalone only|   |&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone only|   |&lt;xref:System.Windows.Controls.Page&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Controls.UserControl&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Documents.FlowDocument&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|   |&lt;xref:System.Windows.Navigation.PageFunction%601&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|Standalone/browser-hosted|       Typically, you set the StartupUri property declaratively in <ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">|型別 |視窗 |應用程式類型 |  |----------|------------|----------------------|  |&lt;xref:System.Windows.Window&gt;|&lt;xref:System.Windows.Window&gt;|僅限獨立 |  |&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|僅限獨立 |  |&lt;xref:System.Windows.Controls.Page&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|獨立/瀏覽器裝載 |  |&lt;xref:System.Windows.Controls.UserControl&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|獨立/瀏覽器裝載 |  |&lt;xref:System.Windows.Documents.FlowDocument&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|獨立/瀏覽器裝載 |  |&lt;xref:System.Windows.Navigation.PageFunction%601&gt;|&lt;xref:System.Windows.Navigation.NavigationWindow&gt;|獨立/瀏覽器裝載 |      一般而言，您設定將 StartupUri 屬性以宣告方式在<ph id="ph1">[!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)]</ph>。&lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.PageFunction%601&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Documents.FlowDocument&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.UserControl&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Controls.Page&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Navigation.NavigationWindow&gt; &lt;/xref:System.Windows.Window&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>However, you can set StartupUri programmatically, such as from a &lt;xref:System.Windows.Application.Startup&gt; event handler, which is useful if for applications that can only load the necessary <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resources at run time.</source>
          <target state="translated">不過，您可以設定將 StartupUri 程式設計角度而言，這類在&lt;xref:System.Windows.Application.Startup&gt;事件處理常式，也就是適用於只可載入必要的應用程式如果<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>在執行階段的資源。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>For example, an application might wait until run time to load its resources if the name of the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is stored in a configuration file.</source>
          <target state="translated">例如，應用程式可能會等到執行階段来載入其資源，則名稱<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>資源會儲存在組態檔。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Whether you set StartupUri declaratively or programmatically, the corresponding <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> resource is not loaded until after the &lt;xref:System.Windows.Application.Startup&gt; event is handled.</source>
          <target state="translated">您是否設定將 StartupUri 以宣告方式或以程式設計的方式，對應<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>資源未載入直到之後&lt;xref:System.Windows.Application.Startup&gt;處理事件。&lt;/xref:System.Windows.Application.Startup&gt;</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Consequently, you won't have access to the resulting window from either the &lt;xref:System.Windows.Application.Windows%2A&gt; property or the &lt;xref:System.Windows.Application.MainWindow%2A&gt; property when handling &lt;xref:System.Windows.Application.Startup&gt;.</source>
          <target state="translated">因此，您不需要存取結果視窗中與其中的&lt;xref:System.Windows.Application.Windows%2A&gt;屬性或&lt;xref:System.Windows.Application.MainWindow%2A&gt;屬性時處理&lt;xref:System.Windows.Application.Startup&gt;.&lt;/xref:System.Windows.Application.Startup&gt; &lt;/xref:System.Windows.Application.MainWindow%2A&gt; &lt;/xref:System.Windows.Application.Windows%2A&gt;</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; that refers to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> that automatically opens when an application starts.</source>
          <target state="translated">A&lt;xref:System.Uri&gt;參考<ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph>，會自動開啟應用程式啟動時。&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>StartupUri is set with a value of null.</source>
          <target state="translated">設定將 StartupUri 的值是 null。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Queries for whether a specified ambient property is available in the current scope.</source>
          <target state="translated">指定的環境屬性是否可以使用目前範圍中的查詢。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>It can be used only when the &lt;xref:System.Windows.Application&gt; instance is cast to an &lt;xref:System.Windows.Markup.IQueryAmbient&gt; interface.</source>
          <target state="translated">它可用時，才&lt;xref:System.Windows.Application&gt;執行個體轉換成&lt;xref:System.Windows.Markup.IQueryAmbient&gt;介面。&lt;/xref:System.Windows.Markup.IQueryAmbient&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The name of the requested ambient property.</source>
          <target state="translated">要求的環境屬性的名稱。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the requested ambient property is available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>要求的環境屬性是否可用。否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Searches for the specified resource.</source>
          <target state="translated">搜尋指定的資源。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>TryFindResource will first look in application-scope resources for the specified resource.</source>
          <target state="translated">TryFindResource 會先查看應用程式範圍的資源，為指定的資源。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Application-scope resources are managed by &lt;xref:System.Windows.Application&gt;, and are exposed from the &lt;xref:System.Windows.Application.Resources%2A&gt; property.</source>
          <target state="translated">應用程式範圍的資源由管理&lt;xref:System.Windows.Application&gt;，而且會公開從&lt;xref:System.Windows.Application.Resources%2A&gt;屬性。&lt;/xref:System.Windows.Application.Resources%2A&gt; &lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>If the specified resource is not found in the set of application-scope resources, TryFindResource then next searches the system resources.</source>
          <target state="translated">如果應用程式範圍的資源集中找不到指定的資源，TryFindResource 再接下來會搜尋系統資源。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>System resources are shell resources defined by the user, and include colors, fonts, and shell configurations.</source>
          <target state="translated">系統資源是由使用者定義的 shell 資源，並且包含色彩、 字型及殼層組態。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>These are exposed from the &lt;xref:System.Windows.SystemColors&gt;, &lt;xref:System.Windows.SystemFonts&gt;, and &lt;xref:System.Windows.SystemParameters&gt; types, respectively, as static properties.</source>
          <target state="translated">這些由公開&lt;xref:System.Windows.SystemColors&gt;， &lt;xref:System.Windows.SystemFonts&gt;，和&lt;xref:System.Windows.SystemParameters&gt;類型，分別靜態屬性。&lt;/xref:System.Windows.SystemParameters&gt; &lt;/xref:System.Windows.SystemFonts&gt; &lt;/xref:System.Windows.SystemColors&gt;</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>To use TryFindResource to acquire them, these types also expose resource key properties that are designed to be passed to TryFindResource; for example, &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.</source>
          <target state="translated">若要使用 TryFindResource 取得它們，這些型別也會公開資源的索引鍵屬性是設計成可傳遞至 TryFindResource;例如， &lt;xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;.&lt;/xref:System.Windows.SystemParameters.IconWidthKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Because TryFindResource returns an object, you must cast the returned value to the appropriate type if the resource is found.</source>
          <target state="translated">TryFindResource 傳回的物件，因為您必須先轉換適當的型別傳回的值，如果找到資源。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>This method is thread safe and can be called from any thread.</source>
          <target state="translated">這個方法是安全執行緒，可以從任何執行緒呼叫。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The name of the resource to find.</source>
          <target state="translated">要尋找之資源的名稱。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The requested resource object.</source>
          <target state="translated">要求的資源物件。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>If the requested resource is not found, a null reference is returned.</source>
          <target state="translated">如果找不到要求的資源，則會傳回 null 參考。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Gets the instantiated windows in an application.</source>
          <target state="translated">取得具現化的 windows 應用程式中。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically added to Windows as soon as a window is instantiated on the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph> thread; windows that are created by worker threads are not added.</source>
          <target state="translated">A&lt;xref:System.Windows.Window&gt;上具現化一個視窗時，windows 會自動加入參考<ph id="ph1">[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]</ph>執行緒，則為所建立的背景工作執行緒不會加入 windows。&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Windows.Window&gt; reference is automatically removed after its &lt;xref:System.Windows.Window.Closing&gt; event has been handled and before its &lt;xref:System.Windows.Window.Closed&gt; event is raised.</source>
          <target state="translated">A&lt;xref:System.Windows.Window&gt;之後，會自動移除參考其&lt;xref:System.Windows.Window.Closing&gt;已處理事件，以及之前其&lt;xref:System.Windows.Window.Closed&gt;就會引發事件。&lt;/xref:System.Windows.Window.Closed&gt; &lt;/xref:System.Windows.Window.Closing&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>By default, the first item added to the Windows property becomes the &lt;xref:System.Windows.Application.MainWindow%2A&gt;.</source>
          <target state="translated">根據預設，加入 Windows 屬性的第一個項目會成為&lt;xref:System.Windows.Application.MainWindow%2A&gt;.&lt;/xref:System.Windows.Application.MainWindow%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>This property is available only from the thread that created the &lt;xref:System.Windows.Application&gt; object.</source>
          <target state="translated">這個屬性就只能從建立的執行緒&lt;xref:System.Windows.Application&gt;物件。&lt;/xref:System.Windows.Application&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains references to all window objects in the current <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.WindowCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ，其中包含所有在目前的視窗物件的參考<bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>