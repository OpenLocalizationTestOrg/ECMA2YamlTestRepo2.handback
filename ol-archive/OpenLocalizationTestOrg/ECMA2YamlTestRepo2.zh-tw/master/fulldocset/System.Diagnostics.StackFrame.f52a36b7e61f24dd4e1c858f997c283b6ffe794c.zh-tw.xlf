<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc59cbca0c143e021414dfb8d0fc24a348b6aa38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Diagnostics.StackFrame.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">221dec73928135b5d33d9db4625f0087d18b7fb8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d6b293aa1e5f6a23ac2121af24938051942dd3b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about a StackFrame, which represents a function call on the call stack for the current thread.</source>
          <target state="translated">提供代表目前執行緒的呼叫堆疊上函式呼叫的 StackFrame 的相關資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A StackFrame is created and pushed on the call stack for every function call made during the execution of a thread.</source>
          <target state="translated">建立並在每個執行緒的執行期間所做的函式呼叫的呼叫堆疊上推入的 StackFrame。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The stack frame always includes &lt;xref:System.Reflection.MethodBase&gt; information, and optionally includes file name, line number, and column number information.</source>
          <target state="translated">堆疊框架一定會包含&lt;xref:System.Reflection.MethodBase&gt;的詳細資訊，並選擇性地包含檔案名稱、 行號和資料行號資訊。&lt;/xref:System.Reflection.MethodBase&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>StackFrame information will be most informative with Debug build configurations.</source>
          <target state="translated">StackFrame 資訊將會使用偵錯組建組態的資訊最多。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">根據預設，偵錯組建中包含偵錯符號，但不需要發行組建。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing StackFrame objects.</source>
          <target state="translated">偵錯符號包含大部分的檔案、 方法名稱、 行號和用來建構 StackFrame 物件的資料行資訊。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, optionally capturing source information.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，選擇性地擷取來源資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to capture the file name, line number, and column number of the stack frame; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要擷取檔案名稱、 行號和欄號堆疊框架否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that corresponds to a frame above the current stack frame.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別對應至目前的堆疊框架上方的框架。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">要略過的堆疊上的畫面格數目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that corresponds to a frame above the current stack frame, optionally capturing source information.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別對應至目前的堆疊框架，選擇性地擷取來源資訊上方的框架。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">要略過的堆疊上的畫面格數目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to capture the file name, line number, and column number of the stack frame; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>若要擷取檔案名稱、 行號和欄號堆疊框架否則， <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains only the given file name and line number.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，其中包含只有指定的檔名和行號。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">當您不想使用偵錯工具的線條對應邏輯時，請使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">檔案名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The line number in the specified file.</source>
          <target state="translated">中指定的檔案的行號。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that contains only the given file name, line number, and column number.</source>
          <target state="translated">初始化的新執行個體<bpt id="p1">&lt;xref href="System.Diagnostics.StackFrame"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>類別，其中包含只有指定的檔名、 行號和欄號。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">當您不想使用偵錯工具的線條對應邏輯時，請使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">檔案名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The line number in the specified file.</source>
          <target state="translated">中指定的檔案的行號。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The column number in the specified file.</source>
          <target state="translated">指定的檔案中的資料行數目。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the column number in the file that contains the code that is executing.</source>
          <target state="translated">取得包含正在執行的程式碼檔案中的資料行數目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The file column number, or 0 (zero) if the file column number cannot be determined.</source>
          <target state="translated">檔案欄號或 0 （零） 如果無法確定。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the line number in the file that contains the code that is executing.</source>
          <target state="translated">取得包含正在執行的程式碼檔案中的行號。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The file line number, or 0 (zero) if the file line number cannot be determined.</source>
          <target state="translated">檔案的行號或 0 （零） 如果無法判別檔案行號。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the file name that contains the code that is executing.</source>
          <target state="translated">取得包含正在執行的程式碼的檔案名稱。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">這項資訊通常擷取自可執行檔的偵錯符號。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The file name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file name cannot be determined.</source>
          <target state="translated">檔案名稱，或<bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>如果無法判斷檔案名稱。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing.</source>
          <target state="translated">取得從 Microsoft intermediate language (MSIL) 程式碼開頭的位移，用於正在執行的方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code.</source>
          <target state="translated">這項位移可能是近似值，根據在 just-in-time (JIT) 編譯器產生偵錯的程式碼。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The generation of this debugging information is controlled by the &lt;xref:System.Diagnostics.DebuggableAttribute&gt;.</source>
          <target state="translated">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;。&lt;/xref:System.Diagnostics.DebuggableAttribute&gt;控制產生這個偵錯資訊</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The offset from the start of the MSIL code for the method that is executing.</source>
          <target state="translated">從正在執行之方法的 MSIL 程式碼的開始位移。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the method in which the frame is executing.</source>
          <target state="translated">取得框架正在執行的方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The method that is currently executing may be inherited from a base class, although it is called in a derived class.</source>
          <target state="translated">目前執行的方法可以繼承自基底類別，雖然它在衍生類別中呼叫。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt; property of the &lt;xref:System.Reflection.MethodBase&gt; object that is returned by GetMethod identifies the base class, not the derived class.</source>
          <target state="translated">在此情況下，&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;屬性的&lt;xref:System.Reflection.MethodBase&gt;物件由 GetMethod 識別基底類別，也就不是衍生的類別。&lt;/xref:System.Reflection.MethodBase&gt; &lt;/xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The method in which the frame is executing.</source>
          <target state="translated">框架正在執行的方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed.</source>
          <target state="translated">取得從原生在 just-in-time (JIT) 開頭的位移-編譯程式碼正在執行的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The generation of this debugging information is controlled by the &lt;xref:System.Diagnostics.DebuggableAttribute&gt; class.</source>
          <target state="translated">控制產生這個偵錯資訊的&lt;xref:System.Diagnostics.DebuggableAttribute&gt;類別。&lt;/xref:System.Diagnostics.DebuggableAttribute&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The offset from the start of the JIT-compiled code for the method that is being executed.</source>
          <target state="translated">從 JIT 編譯程式碼正在執行之方法的起始位移。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Defines the value that is returned from the &lt;xref:System.Diagnostics.StackFrame.GetNativeOffset<bpt id="p1">*</bpt>&gt; or &lt;xref:System.Diagnostics.StackFrame.GetILOffset<ept id="p1">*</ept>&gt; method when the native or Microsoft intermediate language (MSIL) offset is unknown.</source>
          <target state="translated">定義從傳回的值&lt;&gt; <bpt id="p1">*</bpt>&gt; 或&lt;&gt; <ept id="p1">*</ept>&gt; 原生模式或 Microsoft intermediate language (MSIL) 位移時未知的方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This field is constant.</source>
          <target state="translated">這個欄位是常數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The value of this constant is -1.</source>
          <target state="translated">這個常數的值為-1。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">即將加入。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">建立堆疊追蹤的可讀取表示。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">堆疊追蹤的可讀取表示。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>