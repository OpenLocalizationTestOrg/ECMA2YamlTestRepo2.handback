<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a4c9a731018446d3e92314374b76eabdfce634a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset2\Microsoft.Build.Tasks.ManagedCompiler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bd3e0d8ab5130b850fdb273ff1e7e8ebe1ca07b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4dccccd37ee91da60ac724d00f2b7bf8e1c0631d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the properties and methods common to managed compiler tasks.</source>
          <target state="translated">관리 되는 컴파일러 작업에는 공통적인 속성과 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.ManagedCompiler"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.ManagedCompiler"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Generates command line arguments that the command line tool must run directly from the command line and not from a response file.</source>
          <target state="translated">명령줄에서 직접 및 응답 파일에서가 아니라 명령줄 도구를 실행 해야 하는 명령줄 인수를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Command line builder to add arguments to.</source>
          <target state="translated">에 대 한 인수를 추가 하려면 명령줄 작성기입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the additional folders in which to look for assemblies.</source>
          <target state="translated">어셈블리에 대해 알아볼 수 있는 추가 폴더를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The additional folders in which to look for assemblies.</source>
          <target state="translated">어셈블리에 대해 알아볼 수 있는 추가 폴더입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets the modules for the compiler to make available to the project you are currently compiling.</source>
          <target state="translated">현재 컴파일 중인 프로젝트를 사용할 수 있도록 컴파일러에 대 한 모듈을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The modules for the compiler to make available to the project you are currently compiling.</source>
          <target state="translated">모듈에서 사용할 수 있도록 프로젝트를 컴파일러에 대 한 현재 컴파일 중인 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Fills the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">commandLine</ph><ept id="p1">&lt;/code&gt;</ept> parameter with the switches and other information that can go into a response file.</source>
          <target state="translated">지정 된 채웁니다 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">commandLine</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 스위치와 응답 파일에 사용할 수 있는 다른 정보입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Command line builder to add arguments to.</source>
          <target state="translated">에 대 한 인수를 추가 하려면 명령줄 작성기입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Verifies that all specified references exist on disk.</source>
          <target state="translated">디스크에 지정 된 모든 참조가 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if all references exist on disk; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>디스크;에 대 한 모든 참조는 존재 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Logs a message if the specified parameter is not supported by the host compiler.</source>
          <target state="translated">지정된 된 매개 변수는 호스트 컴파일러에서 지원 되지 않는 경우 메시지를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The parameter name to set on the host compiler.</source>
          <target state="translated">호스트 컴파일러에 설정 하려면 매개 변수 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the host compiler supports <ph id="ph1">`parameterName`</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호스트 컴파일러를 지 원하는 경우 <ph id="ph1">`parameterName`</ph>고, 그렇지 않으면<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the code page to use for all source code files in the compilation.</source>
          <target state="translated">컴파일할 때 모든 소스 코드 파일에 사용할 코드 페이지를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The code page to use for all source code files in the compilation.</source>
          <target state="translated">컴파일할 때 모든 소스 코드 파일에 사용할 코드 페이지입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the debug type.</source>
          <target state="translated">디버그 형식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The debug type.</source>
          <target state="translated">디버그 형식입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the conditional compiler constants.</source>
          <target state="translated">조건부 컴파일러 상수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The conditional compiler constants.</source>
          <target state="translated">조건부 컴파일러 상수입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the public key is placed in the assembly.</source>
          <target state="translated">공개 키를 어셈블리에 배치 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the public key is placed in the assembly; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the assembly is fully signed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>공개 키, 어셈블리에 배치 되는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 어셈블리가 완전히 서명 하는 경우.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the compiler generates debugging information.</source>
          <target state="translated">컴파일러가 디버깅 정보를 생성 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if debugging information is generated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>;</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>디버깅 정보 생성 됩니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating where to align the sections of the output file.</source>
          <target state="translated">출력 파일의 섹션에 맞출 위치를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A value indicating where to align the sections of the output file.</source>
          <target state="translated">출력 파일의 섹션에 맞출 위치를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Handles the return code from the compiler.</source>
          <target state="translated">컴파일러에서 반환 코드를 처리합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 메서드는 항상 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the return code was handled successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>반환 코드를 성공적으로 처리 된 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the HighEntropyVA attribute.</source>
          <target state="translated">HighEntropyVA 특성을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns the HighEntropyVA attribute.</source>
          <target state="translated">HighEntropyVA 특성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating wheter the host compilter supports all task parameters.</source>
          <target state="translated">호스트 컴파일러가 모든 작업 매개 변수에서 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the host compiler supports all task parameters; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호스트 컴파일러가 모든 작업 매개 변수를 지원 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the cryptographic key container.</source>
          <target state="translated">암호화 키 컨테이너의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the cryptographic key container.</source>
          <target state="translated">암호화 키 컨테이너의 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the file name containing the cryptographic key.</source>
          <target state="translated">암호화 키가 포함 된 파일 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The file name containing the cryptographic key.</source>
          <target state="translated">암호화 키가 포함 된 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> resource files to link to the output file.</source>
          <target state="translated">가져오거나는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 출력 파일에 연결할 리소스 파일입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> resource files to link to the output file.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 출력 파일에 연결할 리소스 파일입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Determines if any duplicate items exist in the specified task parameter.</source>
          <target state="translated">지정 된 작업 매개 변수에 중복 항목이 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The list of items to examine for duplicates.</source>
          <target state="translated">중복 요소를 검토 하는 항목의 목록입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the parameter that contains the <ph id="ph1">`itemList`</ph>.</source>
          <target state="translated">이름을 포함 하는 매개 변수는 <ph id="ph1">`itemList`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the item list contains no duplicates; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>항목 목록에 중복; 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the class or module that contains the main entry point.</source>
          <target state="translated">클래스 또는 모듈의 주 진입점을 포함 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The class or module that contains the main entry point.</source>
          <target state="translated">클래스 또는 주 진입점이 포함 된 모듈.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the compiler should use the default response file.</source>
          <target state="translated">컴파일러에서 기본 지시 파일을 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the compiler is not using the default response file; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일러에서 기본 응답 파일을 사용 하지 않는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to suppress the compiler banner information.</source>
          <target state="translated">컴파일러 배너 정보를 표시 하지 않을 것인지를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to suppress the compiler banner information; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일러 배너 정보;를 표시 하지 않으려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether an external UAC manifest is generated for the application.</source>
          <target state="translated">응용 프로그램에 대 한 외부 UAC 매니페스트가 생성 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if an external UAC manifest is generated for the application; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>응용 프로그램에 대 한 외부 UAC 매니페스트가 생성 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to enable compiler optimizations.</source>
          <target state="translated">컴파일러 최적화를 사용할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to enable compiler optimizations; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일러 최적화;를 사용 하도록 설정 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the output file.</source>
          <target state="translated">출력 파일의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The name of the output file.</source>
          <target state="translated">출력 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the Platform attribute.</source>
          <target state="translated">Platform 특성을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the Platform attribute.</source>
          <target state="translated">Platform 특성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets the Prefer32Bit attribute.</source>
          <target state="translated">Prefer32Bit 특성을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns the Prefer32Bit attribute.</source>
          <target state="translated">Prefer32Bit 특성을 반환합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the items from which the compiler will import public type information.</source>
          <target state="translated">컴파일러는 공용 형식 정보를 가져올 항목을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The items from which the compiler will import public type information.</source>
          <target state="translated">컴파일러는 공용 형식 정보를 가져올 항목입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> resources to embed in the output file.</source>
          <target state="translated">가져오거나는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 출력 파일에 포함할 리소스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> resources to embed in the output file.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 출력 파일에 포함할 리소스입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the response files that contain commands for the task.</source>
          <target state="translated">작업에 대 한 명령을 포함 하는 응답 파일을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The response files that contain commands for the task.</source>
          <target state="translated">작업에 대 한 명령을 포함 하는 지시 파일입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets or sets the source files to compile.</source>
          <target state="translated">컴파일할 소스 파일을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The source files to compile.</source>
          <target state="translated">컴파일할 소스 파일입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets the encoding of the captured task standard output stream.</source>
          <target state="translated">캡처한 작업 표준 출력 스트림의 인코딩을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The encoding of the captured task standard output stream.</source>
          <target state="translated">캡처한 작업 표준 출력 스트림에의 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets or sets the SubsystemVersion attribute value.</source>
          <target state="translated">SubsystemVersion 특성 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns the subsystem version.</source>
          <target state="translated">하위 시스템 버전을 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the file format of the output file.</source>
          <target state="translated">출력 파일의 파일 형식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The file format of the output file.</source>
          <target state="translated">출력 파일의 파일 형식입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether warnings are treated as errors.</source>
          <target state="translated">경고를 오류로 처리할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if warnings are treated as errors; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경고가 오류로; 처리 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If an alternate tool name or tool path was specified in the project file, then that tool is used rather than the host compiler for integrated development environment (IDE) builds.</source>
          <target state="translated">대체 도구 이름 또는 도구 경로 프로젝트 파일에 지정 된 경우 통합된 개발 환경 (IDE)에 대 한 호스트 컴파일러를 작성 하지 않고 해당 도구 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the host compiler should be used; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>호스트 컴파일러를 사용 해야 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Whether the command line compiler was invoked, instead of the host object compiler.</source>
          <target state="translated">여부 호스트 개체 컴파일러 대신 명령줄 컴파일러 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether compiler output is logged using UTF-8 encoding.</source>
          <target state="translated">Utf-8 인코딩을 사용 하 여 컴파일러 출력을 로깅할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if compiler output is logged using UTF-8 encoding; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>utf-8 인코딩을 사용 하 여 컴파일러 출력을 기록 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Validates the task parameters.</source>
          <target state="translated">작업 매개 변수 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if all parameters are valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>모든 매개 변수가 유효한; 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets the icon file name.</source>
          <target state="translated">아이콘 파일 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The icon file name.</source>
          <target state="translated">아이콘 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets the Win32 manifest.</source>
          <target state="translated">Win32 매니페스트를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The Win32 manifest.</source>
          <target state="translated">Win32 매니페스트입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a Win32 resource (.res) file to insert in the output file.</source>
          <target state="translated">출력 파일에 삽입할 Win32 리소스 (.res) 파일을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The Win32 resource (.res) file to insert in the output file.</source>
          <target state="translated">출력 파일에 삽입할 Win32 리소스 (.res) 파일입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>