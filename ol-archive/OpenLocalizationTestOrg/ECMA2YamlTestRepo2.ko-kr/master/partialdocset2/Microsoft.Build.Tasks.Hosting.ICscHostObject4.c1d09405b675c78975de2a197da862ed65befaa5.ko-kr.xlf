<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11ab3e63e1b32716778458d05cae7c0c475c817e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset2\Microsoft.Build.Tasks.Hosting.ICscHostObject4.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">partialdocset2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7c3f4260c0285d29a336bc3fda7b5b4b813eaec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b3bda1a8cbb8f6965fa7ffdb1b0719bc936bc1b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the Csc host compiler.</source>
          <target state="translated">Csc 호스트 컴파일러를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defines an interface for the Csc task to communicate with the Visual Studio IDE.</source>
          <target state="translated">Visual Studio IDE와 통신할 Csc 작업에 대 한 인터페이스를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, the Csc task delegates the actual compilation to the IDE rather than shelling out to the command-line compilers.</source>
          <target state="translated">특히, Csc 작업 명령줄 컴파일러 우회해 하는 것이 아니라 IDE에는 실제 컴파일에 위임 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`/highentropyva`</ph> value as specified.</source>
          <target state="translated">설정의 <ph id="ph1">`/highentropyva`</ph> 지정 된 값입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to set the <ph id="ph1">`/ highentropyva`</ph> to indicate support of high entropy Address Space Layout Randomization (ASLR); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>설정 하는 <ph id="ph1">`/ highentropyva`</ph> 높은 엔트로피 주소 공간 레이아웃 불규칙화 (ASLR);의 지원을 나타내는 데, 그러지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method was successful.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드가 성공적으로 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`/platform`</ph> value to <bpt id="p1">&lt;xref uid="langword_csharp_AnyCPU32BitPreferred" name="AnyCPU32BitPreferred" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">설정의 <ph id="ph1">`/platform`</ph> 값을 <bpt id="p1">&lt;xref uid="langword_csharp_AnyCPU32BitPreferred" name="AnyCPU32BitPreferred" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit%2A&gt; property is set on the project, SetPlatformWith32BitPreference changes the <ph id="ph1">`/platform`</ph> value from <ph id="ph2">`AnyCPU`</ph> or the default value (<ph id="ph3">`null`</ph> or "") to <ph id="ph4">`AnyCPU32BitPreferred`</ph>.</source>
          <target state="translated">하는 경우는 &lt;xref:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit%2A&gt;속성은 프로젝트에 설정, SetPlatformWith32BitPreference 변경는 <ph id="ph1">`/platform`</ph> 에서 값 <ph id="ph2">`AnyCPU`</ph> 또는 기본값 (<ph id="ph3">`null`</ph> 또는 "")를 <ph id="ph4">`AnyCPU32BitPreferred`</ph>.&lt;/xref:Microsoft.Build.Tasks.ManagedCompiler.Prefer32Bit%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>/platform (C# Compiler Options)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>/platform (C# 컴파일러 옵션)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`/platform`</ph> value is set to <ph id="ph2">`AnyCPU`</ph> (<ph id="ph3">`/platform:AnyCPU`</ph>), your application runs as a 64-bit process whenever possible and falls back to 32-bit for 32-bit-only systems.</source>
          <target state="translated">하는 경우는 <ph id="ph1">`/platform`</ph> 값으로 설정 되어 <ph id="ph2">`AnyCPU`</ph> (<ph id="ph3">`/platform:AnyCPU`</ph>), 응용 프로그램 가능 하면 64 비트 프로세스로 실행 되 고 다시 32 비트 전용 시스템에 대 한 32 비트에 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you might prefer an application to run as a 32-bit process because 64-bit applications may consume more memory.</source>
          <target state="translated">그러나 64 비트 응용 프로그램에서 더 많은 메모리를 사용할 수 있습니다 때문에 32 비트 프로세스로 실행 되도록 응용 프로그램을 선호할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`AnyCPU32BitPreferred`</ph> setting is similar to <ph id="ph2">`AnyCPU`</ph>, except that its default action is to run applications in 32-bit mode on systems that support either mode.</source>
          <target state="translated"><ph id="ph1">`AnyCPU32BitPreferred`</ph> 설정을 비슷합니다 <ph id="ph2">`AnyCPU`</ph>한다는 점을 제외 하는 기본 작업은 두 모드를 지 원하는 시스템에서 32 비트 모드에서 응용 프로그램을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting accommodates future processors that may not fall back to 32-bit mode.</source>
          <target state="translated">이 설정은 수용 이후 프로세서를 32 비트 모드로로 대체 되지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to set the <ph id="ph1">`/platform`</ph> value to <bpt id="p2">&lt;xref uid="langword_csharp_AnyCPU32BitPreferred" name="AnyCPU32BitPreferred" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>설정 하는 <ph id="ph1">`/platform`</ph> 값을 <bpt id="p2">&lt;xref uid="langword_csharp_AnyCPU32BitPreferred" name="AnyCPU32BitPreferred" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>고, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method was successful.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메서드가 성공 하면 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Sets the subsystem version flag as specified.</source>
          <target state="translated">지정 된 대로 하위 시스템 버전 플래그를 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The subsystem version.</source>
          <target state="translated">하위 시스템 버전입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the method succeeds.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드가 성공 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>