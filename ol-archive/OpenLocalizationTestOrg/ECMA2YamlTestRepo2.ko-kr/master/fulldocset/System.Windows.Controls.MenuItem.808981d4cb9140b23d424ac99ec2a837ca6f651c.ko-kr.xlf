<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1425b130b73999350f11f6df21e90f6d0cd51862</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Controls.MenuItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47d3d0cbf917f940512aea50a8e2eecaa1e72506</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f06033ae80df590d39974fbe284871c6a9b8bd9e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a selectable item inside a <bpt id="p1">&lt;xref href="System.Windows.Controls.Menu"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">안에 선택 가능한 항목을 나타내는 한 <bpt id="p1">&lt;xref href="System.Windows.Controls.Menu"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>MenuItem is a &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;, which means its header and collection of objects can be of any type (such as string, image, or panel).</source>
          <target state="translated">MenuItem이는 &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;, 즉 헤더와 개체의 컬렉션 (예: 문자열, 이미지 또는 패널) 형식일 수 있습니다.&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt; class.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Windows.Controls.HeaderedItemsControl&gt;클래스&lt;/xref:System.Windows.Controls.HeaderedItemsControl&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MenuItem can have submenus.</source>
          <target state="translated">MenuItem 하위 메뉴를 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The submenu of the MenuItem is made up of the objects within the &lt;xref:System.Windows.Controls.ItemCollection&gt; of a MenuItem.</source>
          <target state="translated">메뉴 항목의 하위 메뉴 내에서 개체 이루어집니다는 &lt;xref:System.Windows.Controls.ItemCollection&gt;는 MenuItem입니다.&lt;/xref:System.Windows.Controls.ItemCollection&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is common for a MenuItem to contain other MenuItem objects to create nested submenus.</source>
          <target state="translated">것이 일반적를 중첩 된 하위 메뉴를 만드는 다른 MenuItem 개체를 포함 하는 MenuItem입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A MenuItem can have one of several functions:      -   It can be selected to invoke a command.</source>
          <target state="translated">MenuItem 함수 중 하나를 가질 수 있습니다.-명령을 호출 하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It can be a separator for other menu items.</source>
          <target state="translated">-다른 메뉴 항목에 대 한 구분 기호 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It can be a header for a submenu.</source>
          <target state="translated">-하위 메뉴에 대 한 머리글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   It can be checked or unchecked.</source>
          <target state="translated">-Checked 또는 unchecked 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  By default, the &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt; of a MenuItem is set to &lt;xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 기본적으로 &lt;xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;MenuItem &lt;xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt;.&lt;/xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt; 로 설정&lt;/xref:System.Windows.FrameworkElement.HorizontalAlignment%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default horizontal position of a &lt;xref:System.Windows.Controls.StackPanel&gt; is &lt;xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.StackPanel&gt; &lt;xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt;.&lt;/xref:System.Windows.HorizontalAlignment?displayProperty=fullName&gt; &lt;/xref:System.Windows.Controls.StackPanel&gt; 의 기본 가로 위치</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the &lt;xref:System.Windows.FrameworkElement.Width%2A&gt; property of a MenuItem through a &lt;xref:System.Windows.Controls.StackPanel&gt;, the stack panel's default is applied and the item is centered.</source>
          <target state="translated">설정 하는 경우는 &lt;xref:System.Windows.FrameworkElement.Width%2A&gt;통해 MenuItem의 속성을 &lt;xref:System.Windows.Controls.StackPanel&gt;, 스택 패널의 기본값이 적용 되 고 항목 가운데에 배치 됩니다.&lt;/xref:System.Windows.Controls.StackPanel&gt; &lt;/xref:System.Windows.FrameworkElement.Width%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>TheMenuItem handles the &lt;xref:System.Windows.UIElement.MouseDown&gt; event, so if you attach an event handler to &lt;xref:System.Windows.UIElement.MouseDown&gt;, your handler will never be called.</source>
          <target state="translated">TheMenuItem 핸들은 &lt;xref:System.Windows.UIElement.MouseDown&gt;를 이벤트 처리기를 연결 하는 이벤트, 따라서 &lt;xref:System.Windows.UIElement.MouseDown&gt;, 처리기 호출 되지 것입니다.&lt;/xref:System.Windows.UIElement.MouseDown&gt; &lt;/xref:System.Windows.UIElement.MouseDown&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add your own handler, subscribe to the &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt; event or subscribe to &lt;xref:System.Windows.UIElement.MouseDown&gt; by calling &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; with <ph id="ph1">`handledEventsToo`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">사용자 고유의 처리기를 추가 하려면 구독 하는 &lt;xref:System.Windows.UIElement.PreviewMouseDown&gt;이벤트 구독 또는 &lt;xref:System.Windows.UIElement.MouseDown&gt;호출 하 여 &lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;와 <ph id="ph1">`handledEventsToo`</ph> 로 설정 <ph id="ph2">`true`</ph>.&lt;/xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt; &lt;/xref:System.Windows.UIElement.MouseDown&gt; &lt;/xref:System.Windows.UIElement.PreviewMouseDown&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Customizing the MenuItem Control    To apply the same property settings to multiple MenuItem controls, use the &lt;xref:System.Windows.FrameworkElement.Style%2A&gt; property.</source>
          <target state="translated">동일한 속성 설정을 사용 하 여 여러 메뉴 항목 컨트롤에 적용는 MenuItem 컨트롤을 사용자 지정의 &lt;xref:System.Windows.FrameworkElement.Style%2A&gt;속성.&lt;/xref:System.Windows.FrameworkElement.Style%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the default &lt;xref:System.Windows.Controls.ControlTemplate&gt; to give the control a unique appearance.</source>
          <target state="translated">기본값을 수정할 수 &lt;xref:System.Windows.Controls.ControlTemplate&gt;고유한 모양을 제어할 수 있습니다.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating a &lt;xref:System.Windows.Controls.ControlTemplate&gt;, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">만들기에 대 한 자세한 내용은 &lt;xref:System.Windows.Controls.ControlTemplate&gt;, 참조 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.&lt;/xref:System.Windows.Controls.ControlTemplate&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To see the parts and states that are specific to the MenuItem, see <bpt id="p1">[</bpt>Menu Styles and Templates<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">부분 및 MenuItem에만 적용 되는 상태를 보려면 참조 <bpt id="p1">[</bpt>메뉴 스타일 및 템플릿<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">종속성 속성을이 컨트롤은 컨트롤의 기본 스타일으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">기본 스타일 속성은 응용 프로그램에이 컨트롤이 표시 하는 경우 속성이 기본값에서 변경 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">기본 스타일 응용 프로그램이 실행 중인 때 사용 되는 데스크톱 테마에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 WPF 테마<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Setting a visual property will only have an effect if that property is both present in MenuItem control's default template and is set by using a .</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 시각적 속성을 설정만 영향을 미칠 속성 시각적 MenuItem 컨트롤의 기본 서식 파일에 속성이 있으며를 사용 하 여 설정 된 경우는 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>.</source>
          <target state="translated">"변경의 시각적 구조의 정도 제어" 섹션의 시각적 속성 목록을 찾을 수 있습니다 <bpt id="p1">[</bpt>는 ControlTemplate을 만들어 기존 컨트롤의 모양 사용자 지정<ept id="p1">](../Topic/Customizing%20the%20Appearance%20of%20an%20Existing%20Control%20by%20Creating%20a%20ControlTemplate.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Occurs when a menu item is checked.</source>
          <target state="translated">메뉴 항목을 선택 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Checked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.CheckedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Checked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.CheckedEvent&gt;|   | 라우팅 전략 | 버블링 |   | 대리자 | &lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.MenuItem.CheckedEvent&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is clicked.</source>
          <target state="translated">발생 경우는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Click event does not occur if the &lt;xref:System.Windows.Controls.MenuItem&gt; has a submenu.</source>
          <target state="translated">Click 이벤트가 발생 하지 않습니다는 &lt;xref:System.Windows.Controls.MenuItem&gt;에 하위 메뉴가.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Click"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.ClickEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Click"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.ClickEvent&gt;|   | 라우팅 전략 | 버블링 |   | 대리자 | &lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.MenuItem.ClickEvent&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Click"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Click"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event corresponds to a left mouse button click.</source>
          <target state="translated">이 이벤트는 마우스 왼쪽된 단추 클릭에 해당합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the command associated with the menu item.</source>
          <target state="translated">메뉴 항목과 연결 된 명령을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used to associate a command with a particular &lt;xref:System.Windows.Controls.MenuItem&gt; instance.</source>
          <target state="translated">이 속성을 사용 하는 특정 명령과 연결 &lt;xref:System.Windows.Controls.MenuItem&gt;인스턴스.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example associates the <bpt id="p1">**</bpt>Copy<ept id="p1">**</ept> command with a &lt;xref:System.Windows.Controls.MenuItem&gt; and automatically supplies the input gesture text <bpt id="p2">**</bpt>Ctrl+C<ept id="p2">**</ept>.</source>
          <target state="translated">다음 예제에서는 연결 된 <bpt id="p1">**</bpt>복사<ept id="p1">**</ept> 명령에 &lt;xref:System.Windows.Controls.MenuItem&gt;자동으로 입력된 제스처를 제공 합니다. <bpt id="p2">**</bpt>Ctrl + C<ept id="p2">**</ept>.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example does not set the &lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt; property, but the &lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt; for the &lt;xref:System.Windows.Controls.MenuItem&gt; is "Copy" at run time.</source>
          <target state="translated">이 예제에서는 설정 되지 않습니다는 &lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;속성 되지만 &lt;xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;에 대 한는 &lt;xref:System.Windows.Controls.MenuItem&gt;런타임 시 "복사"가.&lt;/xref:System.Windows.Controls.MenuItem&gt; &lt;/xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt; &lt;/xref:System.Windows.Controls.HeaderedItemsControl.Header%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify another header for the &lt;xref:System.Windows.Controls.MenuItem&gt; if you want it to be different.</source>
          <target state="translated">에 대 한 다른 헤더를 지정할 수는 &lt;xref:System.Windows.Controls.MenuItem&gt;일치 하지 않아도 들어 있습니다.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how to bind to the desired command, see <bpt id="p1">[</bpt>Add a Command to a MenuItem<ept id="p1">](http://msdn.microsoft.com/en-us/013d68a0-5373-4a68-bd91-5de574307370)</ept>.</source>
          <target state="translated">참조에 원하는 명령에 바인딩하는 방법에 대 한 내용은 <bpt id="p1">[</bpt>MenuItem에 명령을 추가<ept id="p1">](http://msdn.microsoft.com/en-us/013d68a0-5373-4a68-bd91-5de574307370)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuItems_snip#MenuItemCommand<ept id="p2">](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#menuitemcommand)</ept><ept id="p1">]</ept>       A command is raised when a &lt;xref:System.Windows.Controls.MenuItem&gt; is clicked—just after the &lt;xref:System.Windows.Controls.MenuItem.Click&gt; event.</source>
          <target state="translated"><bpt id="p1">[!code-xml</bpt><bpt id="p2">[</bpt>MenuItems_snip #MenuItemCommand<ept id="p2">](~/add/codesnippet/xaml/MenuItems_snip.Menus/Pane1.xaml#menuitemcommand)</ept> <ept id="p1">]</ept> 명령을 발생 때는 &lt;xref:System.Windows.Controls.MenuItem&gt;클릭-바로 뒤의 &lt;xref:System.Windows.Controls.MenuItem.Click&gt;이벤트.&lt;/xref:System.Windows.Controls.MenuItem.Click&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command is raised on the element according to the following priorities:      1.</source>
          <target state="translated">이 명령은 다음과 같은 우선 순위에 따라 요소에서 발생 합니다.: 1입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt; is set on the &lt;xref:System.Windows.Controls.MenuItem&gt;, that element is used.</source>
          <target state="translated">경우 &lt;xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;에 설정 된 &lt;xref:System.Windows.Controls.MenuItem&gt;, 해당 요소가 사용 됩니다.&lt;/xref:System.Windows.Controls.MenuItem&gt; &lt;/xref:System.Windows.Controls.MenuItem.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt; of a &lt;xref:System.Windows.Controls.ContextMenu&gt; that contains the &lt;xref:System.Windows.Controls.MenuItem&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt; &lt;xref:System.Windows.Controls.ContextMenu&gt; &lt;xref:System.Windows.Controls.MenuItem&gt;.&lt;/xref:System.Windows.Controls.MenuItem&gt; 를 포함 하&lt;/xref:System.Windows.Controls.ContextMenu&gt; 는 중&lt;/xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The focus target of the main window that contains a &lt;xref:System.Windows.Controls.Menu&gt;.</source>
          <target state="translated">포커스 대상에 &lt;xref:System.Windows.Controls.Menu&gt;.&lt;/xref:System.Windows.Controls.Menu&gt; 포함 된 주 창</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Controls.MenuItem&gt; that was clicked.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.MenuItem&gt;클릭.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.CommandProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Command"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.CommandProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.CommandProperty&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The command associated with the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 연결 된 명령에서 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the parameter to pass to the &lt;xref:System.Windows.Controls.MenuItem.Command*&gt; property of a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 전달할 매개 변수를 가져오거나 설정 합니다.는 &lt;xref:System.Windows.Controls.MenuItem.Command*&gt;속성은 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.Command*&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.CommandParameterProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandParameter"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.CommandParameterProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.CommandParameterProperty&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The parameter to pass to the &lt;xref:System.Windows.Controls.MenuItem.Command*&gt; property of a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 전달할 매개 변수는 &lt;xref:System.Windows.Controls.MenuItem.Command*&gt;속성은 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.Command*&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.CommandParameter*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.CommandParameter*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.CommandParameter*&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.Command*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.Command*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.Command*&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the target element on which to raise the specified command.</source>
          <target state="translated">지정 된 명령을 대상 요소를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CommandTarget property specifies the element where the command occurs.</source>
          <target state="translated">CommandTarget 속성은 명령이 발생 하는 요소를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If CommandTarget is not set, the element that has keyboard focus will receive the command.</source>
          <target state="translated">CommandTarget을 설정 하지 않으면 명령을 키보드 포커스를 가진 요소를 받게 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandTarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.CommandTargetProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_CommandTarget"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.CommandTargetProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.CommandTargetProperty&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The element on which to raise the specified command.</source>
          <target state="translated">지정 된 명령을 요소.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.CommandTarget*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.CommandTarget*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.CommandTarget*&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Creates or identifies the element used to display a specified item.</source>
          <target state="translated">페이지를 만들거나 지정된 된 항목을 표시 하는 데 사용 하는 요소를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The element used to display a specified item.</source>
          <target state="translated">지정된 된 항목을 표시 하는 데 사용 되는 요소입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets whether the control supports scrolling.</source>
          <target state="translated">컨트롤에서 스크롤을 지원 하는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control has a &lt;xref:System.Windows.Controls.ScrollViewer&gt; in its style and has a custom keyboard scrolling behavior, &lt;xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt; should return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">컨트롤에 있는 경우는 &lt;xref:System.Windows.Controls.ScrollViewer&gt;의 스타일에 있으며 스크롤 동작을 사용자 지정 키보드 &lt;xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt;반환할지 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Controls.ListBox.HandlesScrolling%2A&gt; &lt;/xref:System.Windows.Controls.ScrollViewer&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in all cases.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>모든 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets the icon that appears in a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 표시 되는 아이콘을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many &lt;xref:System.Windows.Controls.Menu&gt; controls have more than just text in the &lt;xref:System.Windows.Controls.MenuItem&gt; elements.</source>
          <target state="translated">많은 &lt;xref:System.Windows.Controls.Menu&gt;컨트롤에 텍스트 이외의 있는 &lt;xref:System.Windows.Controls.MenuItem&gt;요소.&lt;/xref:System.Windows.Controls.MenuItem&gt; &lt;/xref:System.Windows.Controls.Menu&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Often there are icons, check marks, accelerators, and arrows to indicate submenus.</source>
          <target state="translated">종종 아이콘, 확인 표시, 가속기 및 하위 메뉴를 가리키는 화살표 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Icon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IconProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Icon"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IconProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.IconProperty&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The icon that appears in a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">아이콘에 표시 되는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.Icon*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.Icon*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.Icon*&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Sets the text describing an input gesture that will call the command tied to the specified item.</source>
          <target state="translated">지정된 된 항목에 연결 된 명령을 호출 하는 입력된 제스처를 설명 하는 텍스트를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</source>
          <target state="translated">이 속성에서 입력된 제스처 메뉴 항목과 연결 하지 않습니다. 메뉴 항목에 텍스트를 추가 하기만 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application must handle the user's input to carry out the action.</source>
          <target state="translated">응용 프로그램 동작을 수행 하는 사용자 입력을 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how to associate a command with a menu item, see &lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;.</source>
          <target state="translated">메뉴 항목과 명령을 연결 하는 방법에 대 한 자세한 내용은 &lt;xref:System.Windows.Controls.MenuItem.Command%2A&gt;.&lt;/xref:System.Windows.Controls.MenuItem.Command%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputGestureText"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.InputGestureTextProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_InputGestureText"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.InputGestureTextProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.InputGestureTextProperty&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The text that describes the input gesture, such as <bpt id="p1">**</bpt>Ctrl+C<ept id="p1">**</ept> for the <bpt id="p2">**</bpt>Copy<ept id="p2">**</ept> command.</source>
          <target state="translated">와 같은 입력된 제스처를 설명 하는 텍스트 <bpt id="p1">**</bpt>Ctrl + C<ept id="p1">**</ept> 에 대 한는 <bpt id="p2">**</bpt>복사<ept id="p2">**</ept> 명령입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.InputGestureText*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.InputGestureText*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.InputGestureText*&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> can be checked.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 체크 인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsCheckable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsCheckableProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsCheckable"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsCheckableProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.IsCheckableProperty&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the menu item can be checked; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메뉴 항목을 선택할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsCheckable*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsCheckable*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsCheckable*&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is checked.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsChecked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsCheckedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Journal%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsChecked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsCheckedProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;, &lt;xref:System.Windows.FrameworkPropertyMetadata.Journal%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.Journal%2A&gt; &lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem.IsCheckedProperty&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is checked; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그러지 않으면 선택한 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsChecked*&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the &lt;xref:System.Windows.ContentElement.IsEnabled*&gt; property is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the current menu item.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 &lt;xref:System.Windows.ContentElement.IsEnabled*&gt;속성은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 메뉴 항목에 대 한.&lt;/xref:System.Windows.ContentElement.IsEnabled*&gt;</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> can be selected; otherwise,<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 수 선택한 없으면<bpt id="p3">&lt;xref uid="langword_csharp_ false" name=" false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is highlighted.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 강조 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 3.0 Service Pack 1, the IsHighlighted property has a protected setter.</source>
          <target state="translated">.NET Framework 버전 3.0 부터는 서비스 팩 1, IsHighlighted 속성에는 보호 된 setter입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this functionality, your application should target the .NET Framework version 3.5.</source>
          <target state="translated">이 기능을 사용 하려면 응용 프로그램은.NET Framework 버전 3.5 대상으로 해야 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHighlighted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsHighlightedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsHighlighted"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsHighlightedProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.IsHighlightedProperty&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is highlighted; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그러지 않으면 강조 표시 된 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsHighlighted*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsHighlighted*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsHighlighted*&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Determines if the specified item is (or is eligible to be) its own <ph id="ph1">`ItemContainer`</ph>.</source>
          <target state="translated">지정된 된 항목 (또는 상태가 될 수 있도록) 경우 결정 자체 <ph id="ph1">`ItemContainer`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Specified item.</source>
          <target state="translated">지정한 항목입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the item is its own <ph id="ph1">`ItemContainer`</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>항목을 자체 <ph id="ph1">`ItemContainer`</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is pressed.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 눌려질 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 3.0 Service Pack 1, the IsPressed property has a protected setter.</source>
          <target state="translated">.NET Framework 버전 3.0 부터는 서비스 팩 1, IsPressed 속성에는 보호 된 setter입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this functionality, your application should target the .NET Framework version 3.5.</source>
          <target state="translated">이 기능을 사용 하려면 응용 프로그램은.NET Framework 버전 3.5 대상으로 해야 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsPressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsPressedProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsPressed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsPressedProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.IsPressedProperty&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is pressed; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그러지 않으면 누름 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsPressed*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsPressed*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsPressed*&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the submenu of the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is open.</source>
          <target state="translated">나타내는 값을 가져오거나 설정 합니다. 여부의 하위 메뉴는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열려 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>When IsSubmenuOpen is set to <ph id="ph1">`true`</ph>, mouse capture is set to the &lt;xref:System.Windows.Controls.MenuItem&gt; and its subtree.</source>
          <target state="translated">IsSubmenuOpen로 설정 되 면 <ph id="ph1">`true`</ph>, 마우스 캡처로 설정 되어는 &lt;xref:System.Windows.Controls.MenuItem&gt;및 해당 하위 트리.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsSubmenuOpen"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsSubmenuOpen"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>|&lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt;|&lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the submenu of the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is open; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우의 하위 메뉴는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그러지 않으면 열려 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets whether a menu suspends animations on its <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.Popup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">메뉴가에 있는지 여부를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.Primitives.Popup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the menu should suspend animations on its popup; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메뉴 해당 팝업에 애니메이션을 일시 중단 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation*&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the custom logic for choosing a template used to display each item.</source>
          <target state="translated">각 항목을 표시 하는 데 사용 하는 템플릿을 선택 하기 위한 사용자 지정 논리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use an &lt;xref:System.Windows.Controls.ItemContainerTemplateSelector&gt; to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</source>
          <target state="translated">사용 하 여 프로그램 &lt;xref:System.Windows.Controls.ItemContainerTemplateSelector&gt;하 여 컬렉션의 항목은 동일한 유형 및 항목 컨테이너를 선택 하는 사용자 지정 논리를 제공 해야 할 경우 컨테이너의 다른 항목을 선택 합니다.&lt;/xref:System.Windows.Controls.ItemContainerTemplateSelector&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_ItemContainerTemplateSelector"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_ItemContainerTemplateSelector"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A custom object that provides logic and returns an item container.</source>
          <target state="translated">논리를 제공 하 고 항목 컨테이너를 반환 하는 사용자 지정 개체입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector*&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Responds when the &lt;xref:System.Windows.Controls.AccessText.AccessKey*&gt; for this control is invoked.</source>
          <target state="translated">응답 하는 경우는 &lt;xref:System.Windows.Controls.AccessText.AccessKey*&gt;이 컨트롤을 호출에 대 한.&lt;/xref:System.Windows.Controls.AccessText.AccessKey*&gt;</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;이벤트.&lt;/xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Called when the template's tree is generated.</source>
          <target state="translated">서식 파일의 트리를 생성할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt; property becomes <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">될 때 호출 된 &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt;속성은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.IsChecked*&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>This method raises the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">이 메서드는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control raises the &lt;xref:System.Windows.Controls.MenuItem.Checked&gt; event by calling &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.</source>
          <target state="translated">컨트롤에 &lt;xref:System.Windows.Controls.MenuItem.Checked&gt; &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.&lt;/xref:System.Windows.UIElement.RaiseEvent%2A&gt; 를 호출 하 여 이벤트&lt;/xref:System.Windows.Controls.MenuItem.Checked&gt; 를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>라우트된 이벤트 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Checked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Called when a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is clicked and raises a <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">될 때 호출는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 클릭 하 고 발생 한 <bpt id="p2">&lt;xref href="System.Windows.Controls.Primitives.ButtonBase.Click"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you inherit from &lt;xref:System.Windows.Controls.MenuItem&gt;, be sure to call the base class to get the following behavior.</source>
          <target state="translated">상속 하는 경우 &lt;xref:System.Windows.Controls.MenuItem&gt;, 다음과 같은 동작을 가져오도록 기본 클래스를 호출 해야 합니다.&lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Toggling of the &lt;xref:System.Windows.Controls.MenuItem.IsChecked%2A&gt; property.</source>
          <target state="translated">-토글의 &lt;xref:System.Windows.Controls.MenuItem.IsChecked%2A&gt;속성.&lt;/xref:System.Windows.Controls.MenuItem.IsChecked%2A&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Focus being set to the menu item.</source>
          <target state="translated">-포커스 메뉴 항목으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Automation invoke event.</source>
          <target state="translated">자동화 이벤트를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   &lt;xref:System.Windows.Controls.MenuItem.Click&gt; event.</source>
          <target state="translated">- &lt;xref:System.Windows.Controls.MenuItem.Click&gt;이벤트.&lt;/xref:System.Windows.Controls.MenuItem.Click&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Provides an appropriate <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.MenuItemAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation for this control, as part of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> automation infrastructure.</source>
          <target state="translated">적절 한 제공 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.MenuItemAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 일부로이 컨트롤에 대 한 구현을 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 자동화 인프라입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.MenuItemAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.MenuItemAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Announces that the keyboard is focused on this element.</source>
          <target state="translated">이 요소에 키보드 포커스가 있는지를 알립니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.GotFocus"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt; property is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and raises an <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">될 때 호출의 &lt;xref:System.Windows.FrameworkElement.IsInitialized*&gt;속성이로 설정 되어 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가능성이 높아지고는 <bpt id="p2">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트.&lt;/xref:System.Windows.FrameworkElement.IsInitialized*&gt;</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.FrameworkElement.Initialized"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Called when the focus is no longer on or within a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">포커스가 있는 경우 더 이상 또는 내에서 호출 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.ContentElement.IsKeyboardFocusWithinChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.ContentElement.IsKeyboardFocusWithinChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.ItemsControl.Items*&gt; property changes.</source>
          <target state="translated">될 때 호출 된 &lt;xref:System.Windows.Controls.ItemsControl.Items*&gt;속성 변경.&lt;/xref:System.Windows.Controls.ItemsControl.Items*&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.Controls.ItemContainerGenerator.ItemsChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.Controls.ItemContainerGenerator.ItemsChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Responds to the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">응답 하는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Called whenever the mouse enters a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">마우스를 가져갈 때마다 호출 됩니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.MouseEnter&gt; event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 &lt;xref:System.Windows.Input.Mouse.MouseEnter&gt;이벤트.&lt;/xref:System.Windows.Input.Mouse.MouseEnter&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Called whenever the mouse leaves a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">마우스가 벗어날 때마다 호출 됩니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.MouseLeave&gt; event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 &lt;xref:System.Windows.Input.Mouse.MouseLeave&gt;이벤트.&lt;/xref:System.Windows.Input.Mouse.MouseLeave&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Called when the left mouse button is pressed.</source>
          <target state="translated">마우스 왼쪽된 단추를 누를 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Called when the left mouse button is released.</source>
          <target state="translated">마우스 왼쪽된 단추를 놓을 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseLeftButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Called when the mouse is moved over a menu item.</source>
          <target state="translated">메뉴 항목 위로 마우스를 이동할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The event data for the &lt;xref:System.Windows.Input.Mouse.MouseMove&gt; event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 &lt;xref:System.Windows.Input.Mouse.MouseMove&gt;이벤트.&lt;/xref:System.Windows.Input.Mouse.MouseMove&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Called when the right mouse button is pressed.</source>
          <target state="translated">마우스 오른쪽 단추를 누를 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Called when the right mouse button is released.</source>
          <target state="translated">마우스 오른쪽 단추를 놓을 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.MouseRightButtonUp"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Called when the submenu of a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is closed.</source>
          <target state="translated">될 때 호출의 하위 메뉴는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuClosed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuClosed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Called when the submenu of a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is opened.</source>
          <target state="translated">될 때 호출의 하위 메뉴는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열립니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuOpened"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuOpened"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Called when the &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt; property becomes <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">될 때 호출 된 &lt;xref:System.Windows.Controls.MenuItem.IsChecked*&gt;속성은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.IsChecked*&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>This method raises the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">이 메서드는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control raises the &lt;xref:System.Windows.Controls.MenuItem.Unchecked&gt; event by calling &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.</source>
          <target state="translated">컨트롤에 &lt;xref:System.Windows.Controls.MenuItem.Unchecked&gt; &lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;.&lt;/xref:System.Windows.UIElement.RaiseEvent%2A&gt; 를 호출 하 여 이벤트&lt;/xref:System.Windows.Controls.MenuItem.Unchecked&gt; 를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>라우트된 이벤트 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The event data for the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 이벤트 데이터는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Called when the parent of the visual <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> changes.</source>
          <target state="translated">될 때 호출 시각적 개체의 부모 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Old value of the parent of the visual, or null if the visual did not have a parent.</source>
          <target state="translated">시각적 개체의 부모의 이전 값 또는 시각적 개체는 부모가 없는 경우 null입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Prepares the specified element to display the specified item.</source>
          <target state="translated">지정된 된 항목을 표시 하기 위해 지정 된 요소를 준비 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Preparing the element may involve applying styles, setting bindings, and so on.</source>
          <target state="translated">요소를 준비할 때는 바인딩 설정 스타일 적용을 포함 하 고 등 수 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Element used to display the specified item.</source>
          <target state="translated">지정한 항목을 표시 하는 데 사용 하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Specified item.</source>
          <target state="translated">지정한 항목입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the role of a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">역할을 나타내는 값을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of Role depends on the relationship to the &lt;xref:System.Windows.Controls.Menu&gt; and other &lt;xref:System.Windows.Controls.MenuItem&gt; objects.</source>
          <target state="translated">역할의 값에 대 한 관계에 종속 된 &lt;xref:System.Windows.Controls.Menu&gt;및 기타 &lt;xref:System.Windows.Controls.MenuItem&gt;개체.&lt;/xref:System.Windows.Controls.MenuItem&gt; &lt;/xref:System.Windows.Controls.Menu&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_Role"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.RoleProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_Role"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.RoleProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.RoleProperty&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItemRole"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItemRole"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItemRole"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItemRole"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.Role*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.Role*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.Role*&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 는 <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the style of a &lt;xref:System.Windows.Controls.Separator&gt; in a menu.</source>
          <target state="translated">스타일을 변경 하려면이 속성을 사용 하는 &lt;xref:System.Windows.Controls.Separator&gt;메뉴에.&lt;/xref:System.Windows.Controls.Separator&gt;</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SeparatorStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>={ <bpt id="p4">**</bpt>MenuItem.SeparatorStyleKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SeparatorStyleKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= { <bpt id="p4">**</bpt>MenuItem.SeparatorStyleKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 는 <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Used to determine whether to apply a style to the item container.</source>
          <target state="translated">항목 컨테이너에 스타일을 적용할 것인지 결정 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Container to which the style will be applied.</source>
          <target state="translated">스타일이 적용 된 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Item to which the container belongs.</source>
          <target state="translated">컨테이너 속해 있는 항목입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is not a <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>if the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is not a <bpt id="p3">&lt;xref href="System.Windows.Controls.Separator"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates that the submenu in which this <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is located should not close when this item is clicked.</source>
          <target state="translated">이에 함을 나타내는 값의 하위 메뉴를 설정 하거나 가져오는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 있는이 항목을 클릭할 때입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_StaysOpenOnClick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_StaysOpenOnClick"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty&gt;</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the submenu in which this <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is located should not close when this item is clicked; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우이 하위 메뉴 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 위치한이 항목이 고, 그러지 않으면 클릭 한 때를 닫지 마십시오 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.StaysOpenOnClick*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.StaysOpenOnClick*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.StaysOpenOnClick*&gt;</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Occurs when the state of the &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt; property changes to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">발생 경우의 상태는 &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;속성 변경 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_SubmenuClosed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_SubmenuClosed"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent&gt;|   | 라우팅 전략 | 버블링 |   | 대리자 | &lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuClosed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuClosed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a header of a submenu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하위 메뉴의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the style of a &lt;xref:System.Windows.Controls.MenuItem&gt; whose &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; property is set to &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.MenuItem&gt; &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt; 속성&lt;/xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; 의 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>={ <bpt id="p4">**</bpt>MenuItem.SubmenuHeaderTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= { <bpt id="p4">**</bpt>MenuItem.SubmenuHeaderTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a header of a submenu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하위 메뉴의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a submenu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하위 메뉴가 됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the style of a &lt;xref:System.Windows.Controls.MenuItem&gt; whose &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; property is set to &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.MenuItem&gt; &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt; 속성&lt;/xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; 의 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_SubmenuItemTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>={ <bpt id="p4">**</bpt>MenuItem.SubmenuItemTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_SubmenuItemTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= { <bpt id="p4">**</bpt>MenuItem.SubmenuItemTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a submenu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 하위 메뉴가 됩니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Occurs when the state of the &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt; property changes to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">발생 경우의 상태는 &lt;xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;속성 변경 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Windows.Controls.MenuItem.IsSubmenuOpen*&gt;</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_SubmenuOpened"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_SubmenuOpened"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent&gt;|   | 라우팅 전략 | 버블링 |   | 대리자 | &lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuOpened"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.SubmenuOpened"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a header of a top-level menu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 최상위 메뉴의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the style of a &lt;xref:System.Windows.Controls.MenuItem&gt; whose &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; property is set to &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.MenuItem&gt; &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt; 속성&lt;/xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; 의 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>={ <bpt id="p4">**</bpt>MenuItem.TopLevelHeaderTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= { <bpt id="p4">**</bpt>MenuItem.TopLevelHeaderTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is a header of a top-level menu.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 때는 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 최상위 메뉴의 헤더입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Gets the resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when it is a top-level <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can invoke commands.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 최상위 때 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 명령을 호출할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to change the style of a &lt;xref:System.Windows.Controls.MenuItem&gt; whose &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; property is set to &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성을 사용 하 여 &lt;xref:System.Windows.Controls.MenuItem&gt; &lt;xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Controls.MenuItemRole?displayProperty=fullName&gt; 속성&lt;/xref:System.Windows.Controls.MenuItem.Role%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; 의 스타일을 변경 하려면</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlAttributeUsage_TopLevelItemTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Attribute Usage    &lt;<bpt id="p2">*</bpt>object<ept id="p2">*</ept> <bpt id="p3">*</bpt>property<ept id="p3">*</ept>={ <bpt id="p4">**</bpt>MenuItem.TopLevelItemTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlAttributeUsage_TopLevelItemTemplateKey"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 특성 사용 <bpt id="p2">*</bpt>개체<ept id="p2">*</ept> <bpt id="p3">*</bpt>속성<ept id="p3">*</ept>= { <bpt id="p4">**</bpt>MenuItem.TopLevelItemTemplateKey<ept id="p4">**</ept>}<ph id="ph1">`"`</ph><ph id="ph2">/&gt;</ph></target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The resource key for a style applied to a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when it is a top-level <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that can invoke commands.</source>
          <target state="translated">에 적용 된 스타일에 대 한 리소스 키를 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 최상위 때 <bpt id="p2">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 명령을 호출할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Occurs when a <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is unchecked.</source>
          <target state="translated">발생 경우는 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 선택이 취소 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="routedEventInfo_Unchecked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Routed Event Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.UncheckedEvent&gt;|   |Routing strategy|Bubbling|   |Delegate|&lt;xref:System.Windows.RoutedEventHandler&gt;|</source>
          <target state="translated"><bpt id="p1">&lt;a name="routedEventInfo_Unchecked"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 이벤트 정보 라우트된 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.UncheckedEvent&gt;|   | 라우팅 전략 | 버블링 |   | 대리자 | &lt;xref:System.Windows.RoutedEventHandler&gt;|&lt;/xref:System.Windows.RoutedEventHandler&gt;&lt;/xref:System.Windows.Controls.MenuItem.UncheckedEvent&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Identifies the <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> routed event.</source>
          <target state="translated">식별 된 <bpt id="p1">&lt;xref href="System.Windows.Controls.MenuItem.Unchecked"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 라우트된 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</source>
          <target state="translated">기본 컬렉션 또는 기타 추론에 있는 항목의 유형에 따라 서로 다른 항목 컨테이너의 메뉴를 선택할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful if you want to create a menu by binding to a collection.</source>
          <target state="translated">이 속성은 컬렉션에 바인딩하여 메뉴를 만들려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The item container is the UI element that displays the object in a collection.</source>
          <target state="translated">항목 컨테이너에는 컬렉션에 개체를 표시 하는 UI 요소입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to bind to a collection to create a menu that contains &lt;xref:System.Windows.Controls.MenuItem&gt; objects and &lt;xref:System.Windows.Controls.Separator&gt; objects, set the &lt;xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A&gt; property to true and create an &lt;xref:System.Windows.Controls.ItemContainerTemplate&gt; for each type of object in your collection.</source>
          <target state="translated">컬렉션에 포함 된 메뉴를 만들려면 바인딩될 하려면 &lt;xref:System.Windows.Controls.MenuItem&gt;개체 및 &lt;xref:System.Windows.Controls.Separator&gt;개체를 설정는 &lt;xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A&gt;속성을 true로 만들는 &lt;xref:System.Windows.Controls.ItemContainerTemplate&gt;각 유형의 컬렉션에 개체에 대 한.&lt;/xref:System.Windows.Controls.ItemContainerTemplate&gt; &lt;/xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A&gt; &lt;/xref:System.Windows.Controls.Separator&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Windows.Controls.ItemContainerTemplate&gt; must contain either a &lt;xref:System.Windows.Controls.MenuItem&gt; or a &lt;xref:System.Windows.Controls.Separator&gt;.</source>
          <target state="translated">각 &lt;xref:System.Windows.Controls.ItemContainerTemplate&gt;중 하나는 &lt;xref:System.Windows.Controls.MenuItem&gt;나 &lt;xref:System.Windows.Controls.Separator&gt;.&lt;/xref:System.Windows.Controls.Separator&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; 포함 해야 합니다&lt;/xref:System.Windows.Controls.ItemContainerTemplate&gt;</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="dependencyPropertyInfo_UsesItemContainerTemplate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Dependency Property Information      |||   |-|-|   |Identifier field|&lt;xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty&gt;|   |Metadata properties set to <ph id="ph1">`true`</ph>|None|</source>
          <target state="translated"><bpt id="p1">&lt;a name="dependencyPropertyInfo_UsesItemContainerTemplate"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 종속성 속성 정보 | | |   |-|-|   | 식별자 필드 | &lt;xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty&gt;|   | 메타 데이터 속성이 <ph id="ph1">`true`</ph>| None |&lt;/xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> the menu selects different item containers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>메뉴 선택 컨테이너의 다른 항목입니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The registered default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">등록 된 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>For more information about what can influence the value, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">값에 영향을 줄 수 요소에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>종속성 속성 값 우선 순위<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplate*&gt; dependency property.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplate*&gt;종속성 속성입니다.&lt;/xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplate*&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>