<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">042808c6ce11d4a9c10f3309ab60c8f64fccfc4a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XmlDataDocument.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be76257ec4bc1ec2ca6c52d42d59152f1a65ae0c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6a3d4f3f00f16099cdf75869ba1f28fc8c29818</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows structured data to be stored, retrieved, and manipulated through a relational <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">구조화 된 데이터를 저장, 검색 및 관계형 통해 조작 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class extends &lt;xref:System.Xml.XmlDocument&gt;.</source>
          <target state="translated">이 클래스 확장 &lt;xref:System.Xml.XmlDocument&gt;.&lt;/xref:System.Xml.XmlDocument&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</source>
          <target state="translated">관계형 데이터 또는 XML 데이터 로드를 World Wide Web Consortium (W3C) 문서 개체 모델 (DOM)를 사용 하 여 해당 데이터를 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DOM presents data as a hierarchy of node objects.</source>
          <target state="translated">DOM 노드 개체의 계층으로 데이터를 표시합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">`XmlDataDocument`</ph> implements the &lt;xref:System.Xml.XPath.IXPathNavigable&gt; interface, it can also be used as the source document for the &lt;xref:System.Xml.Xsl.XslTransform&gt; class.</source>
          <target state="translated">때문에 <ph id="ph1">`XmlDataDocument`</ph> 구현 하는 &lt;xref:System.Xml.XPath.IXPathNavigable&gt;인터페이스에도 사용할 수 있습니다 소스 문서로 &lt;xref:System.Xml.Xsl.XslTransform&gt;클래스&lt;/xref:System.Xml.Xsl.XslTransform&gt; 에 대 한&lt;/xref:System.Xml.XPath.IXPathNavigable&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDataDocument`</ph> has a close affiliation with the <ph id="ph2">`DataSet`</ph> class, which provides a relational view of the loaded XML data.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>닫기는 정보에는 <ph id="ph2">`DataSet`</ph> 로드 된 XML 데이터의 관계형 뷰를 제공 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made to the <ph id="ph1">`XmlDataDocument`</ph> are reflected in the <ph id="ph2">`DataSet`</ph> and vice versa.</source>
          <target state="translated">변경 내용이 <ph id="ph1">`XmlDataDocument`</ph> 에 반영 되는 <ph id="ph2">`DataSet`</ph> 그 반대의 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To load a <ph id="ph1">`DataSet`</ph> with XML data, use &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; to build a relational mapping.</source>
          <target state="translated">로드 하는 <ph id="ph1">`DataSet`</ph> XML 데이터와 함께 사용 하 여 &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;관계형 매핑을 만들려는.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML data can then be loaded using &lt;xref:System.Xml.XmlDataDocument.Load%2A&gt; or &lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;.</source>
          <target state="translated">XML 데이터 로드 &lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;또는 &lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;.&lt;/xref:System.Xml.XmlDocument.LoadXml%2A&gt; &lt;/xref:System.Xml.XmlDataDocument.Load%2A&gt; 사용 하 여</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To load relational data, specify the <ph id="ph1">`DataSet`</ph> containing the relational data as the parameter in the &lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt; constructor.</source>
          <target state="translated">관계형 데이터를 로드 하려면 지정 된 <ph id="ph1">`DataSet`</ph> 에서 매개 변수로 관계형 데이터를 포함 하는 &lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;생성자.&lt;/xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty &lt;xref:System.Data.DataSet&gt; is created and associated with the <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">빈 &lt;xref:System.Data.DataSet&gt;생성 되 고 연결 된는 <ph id="ph1">`XmlDataDocument`</ph>.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlDataDocument`</ph> is synchronized with the specified <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> 동기화가 지정 된 <ph id="ph2">`DataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any data in the <ph id="ph1">`DataSet`</ph> is immediately available through the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">모든 데이터는 <ph id="ph1">`DataSet`</ph> 를 통해 즉시 사용할 수는 <ph id="ph2">`XmlDataDocument`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes in the <ph id="ph1">`DataSet`</ph> are propagated in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">모든 변경 내용을 <ph id="ph1">`DataSet`</ph> 에 전파는 <ph id="ph2">`XmlDataDocument`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any changes made in the <ph id="ph1">`XmlDataDocument`</ph>, provided they match the <ph id="ph2">`DataSet`</ph> schema, are propagated in the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">변경한 내용은 <ph id="ph1">`XmlDataDocument`</ph>일치 하는 제공는 <ph id="ph2">`DataSet`</ph> 스키마에 전파는 <ph id="ph3">`DataSet`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to load into <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to load into <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of the current node.</source>
          <target state="translated">현재 노드의 복제본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cloning the <ph id="ph1">`XmlDataDocument`</ph> also clones the &lt;xref:System.Data.DataSet&gt; schema.</source>
          <target state="translated">복제는 <ph id="ph1">`XmlDataDocument`</ph> 도 복제는 &lt;xref:System.Data.DataSet&gt;스키마.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`false`</ph>, the cloned <ph id="ph3">`DataSet`</ph> has no data; that is, no rows.</source>
          <target state="translated">경우 <ph id="ph1">`deep`</ph> 로 설정 된 <ph id="ph2">`false`</ph>, 복제 된 <ph id="ph3">`DataSet`</ph> 에 있는 데이터가 없습니다;이, 행이 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`true`</ph>, the cloned <ph id="ph3">`DataSet`</ph> is set with the schema and then populated with the data.</source>
          <target state="translated">경우 <ph id="ph1">`deep`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 복제 된 <ph id="ph3">`DataSet`</ph> 스키마로 설정 되 고 데이터로 채워집니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.Xml.XmlNode.CloneNode%2A&gt; in the <ph id="ph1">`XmlNode`</ph> class to see a table describing how this method behaves with each of the different node types.</source>
          <target state="translated">참조 &lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;에 <ph id="ph1">`XmlNode`</ph> 이 메서드를 다른 노드 형식을 사용 하는 방법을 설명 하는 테이블을 표시 하는 클래스입니다.&lt;/xref:System.Xml.XmlNode.CloneNode%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to recursively clone the subtree under the specified node; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to clone only the node itself.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 노드 아래의 하위 트리를 재귀적으로를 복제. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 노드 자체만 복제 하려면.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The cloned node.</source>
          <target state="translated">복제 된 노드입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates an element with the specified &lt;xref:System.Xml.XmlNode.Prefix<bpt id="p1">*</bpt>&gt;, &lt;xref:System.Xml.XmlDocument.LocalName<ept id="p1">*</ept>&gt; , and &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.</source>
          <target state="translated">지정 된 요소를 만듭니다 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;, &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;, 및 &lt;xref:System.Xml.XmlNode.NamespaceURI*&gt;.&lt;/xref:System.Xml.XmlNode.NamespaceURI*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Note to Inheritors`</ph> If you overload this function, it cannot be used for extensibility.</source>
          <target state="translated"><ph id="ph1">`Note to Inheritors`</ph>이 함수를 오버 로드 하는 경우에 확장성을 위해 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can return an element created by the base class, in this case, <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">대신,이 경우 기본 클래스에서 만든 요소를 반환할 수 있습니다 <ph id="ph1">`XmlDataDocument`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the following example.</source>
          <target state="translated">다음 예를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The prefix of the new element.</source>
          <target state="translated">새 요소의 접두사입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If String.Empty or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, there is no prefix.</source>
          <target state="translated">경우 String.Empty 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 접두사가 없는 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The local name of the new element.</source>
          <target state="translated">새 요소의 로컬 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The namespace Uniform Resource Identifier (URI) of the new element.</source>
          <target state="translated">네임 스페이스 식별자 URI (Uniform Resource) 새 요소입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If String.Empty or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, there is no namespaceURI.</source>
          <target state="translated">경우 String.Empty 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 없습니다 namespaceURI는 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates an <bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified name.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xml.XmlEntityReference&gt; nodes cannot be created for &lt;xref:System.Xml.XmlDataDocument&gt; objects.</source>
          <target state="translated">&lt;xref:System.Xml.XmlEntityReference&gt;에 대 한 노드를 만들 수 없습니다 &lt;xref:System.Xml.XmlDataDocument&gt;개체입니다.&lt;/xref:System.Xml.XmlDataDocument&gt;&lt;/xref:System.Xml.XmlEntityReference&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method throws an exception.</source>
          <target state="translated">이 메서드를 호출 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
          <target state="translated">엔터티 참조의 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified name.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlEntityReference"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Calling this method.</source>
          <target state="translated">이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for navigating this document.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 문서를 탐색 하기 위한 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XPathNavigator" name="XPathNavigator" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is positioned on the node specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">node</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XPathNavigator" name="XPathNavigator" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 노드에 배치는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">node</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
          <target state="translated"><ph id="ph1">`XPathNavigator`</ph> 읽기 전용, 임의 데이터 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt; method.</source>
          <target state="translated">한 입력된 메커니즘으로 사용 될 때 성능 이점을 제공 XSLT 변형에 최적화 되어는 &lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;메서드.&lt;/xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> you want the navigator initially positioned on.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 탐색기를 처음에 배치 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_XPathNavigator" name="XPathNavigator" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to navigate the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XPathNavigator" name="XPathNavigator" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 는 문서를 탐색 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that provides a relational representation of the data in the <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 있는 데이터의 관계형 표현을 제공 하는 <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DataSet`</ph> enables you to access the data in the <ph id="ph2">`XmlDataDocument`</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> 데이터에 액세스할 수 있습니다는 <ph id="ph2">`XmlDataDocument`</ph> 관계형 모델을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you can handle the data as tables and views, rows and columns, relations, and so on.</source>
          <target state="translated">테이블, 뷰, 행 및 열, 관계 등으로 데이터를 처리 하 고 등 수 있다는 의미 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes made in the <ph id="ph1">`DataSet`</ph> are immediately visible in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">변경한 내용은 <ph id="ph1">`DataSet`</ph> 에서 바로 볼 수는 <ph id="ph2">`XmlDataDocument`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can be used to access the data in the <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using a relational model.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_DataSet" name="DataSet" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터에 액세스 하는 데 사용 하는 <bpt id="p2">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관계형 모델을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified ID.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 id</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method is not supported by the <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">이 메서드는에서 지원 되지 않습니다는 <bpt id="p1">&lt;xref href="System.Xml.XmlDataDocument"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Calling this method throws an exception.</source>
          <target state="translated">이 메서드를 호출 하면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not supported by the &lt;xref:System.Xml.XmlDataDocument&gt; class.</source>
          <target state="translated">이 메서드는 &lt;xref:System.Xml.XmlDataDocument&gt;클래스&lt;/xref:System.Xml.XmlDataDocument&gt; 에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The attribute ID to match.</source>
          <target state="translated">일치 시킬 특성 ID입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with the specified ID.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 id</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Calling this method.</source>
          <target state="translated">이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">검색 된 <bpt id="p1">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 연결 된 <bpt id="p2">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose associated <bpt id="p2">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> you want to retrieve.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인 관련 <bpt id="p2">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 검색할 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a representation of the specified <bpt id="p2">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 지정 된 표현이 포함 된 <bpt id="p2">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all descendant elements that match the specified &lt;xref:System.Xml.XmlDocument.Name*&gt;.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlDocument.Name*&gt;.&lt;/xref:System.Xml.XmlDocument.Name*&gt; 지정 된 일치 하는 모든 하위 요소의 목록이 포함 된</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The qualified name to match.</source>
          <target state="translated">일치 시킬 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It is matched against the &lt;xref:System.Xml.XmlDocument.Name<bpt id="p1">*</bpt>&gt; property of the matching node. The special value "<ept id="p1">*</ept>" matches all tags.</source>
          <target state="translated">일치는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 일치 하는 노드의 속성입니다. 특수 값 "<ept id="p1">*</ept>" 모든 태그와 일치 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a list of all matching nodes.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XmlNodeList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 일치 하는 모든 노드 목록이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Retrieves the <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> associated with the specified <bpt id="p2">&lt;xref href="System.Xml.XmlElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">검색 된 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 연결 된 <bpt id="p2">&lt;xref href="System.Xml.XmlElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> whose associated <bpt id="p2">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> you want to retrieve.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인 관련 <bpt id="p2">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 검색할 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing a representation of the <bpt id="p2">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if there is no <bpt id="p4">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> associated with the <bpt id="p5">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 표현을 포함 하는 <bpt id="p2">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; <bpt id="p3">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 없는 경우 없는 <bpt id="p4">&lt;xref uid="langword_csharp_DataRow" name="DataRow" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 연관는 <bpt id="p5">&lt;xref uid="langword_csharp_XmlElement" name="XmlElement" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Loads the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified stream.</source>
          <target state="translated">로드는 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 스트림에서 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>엔터티 참조를 만들를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">데이터 엔터티 참조를 포함 하는 경우는 <ph id="ph1">`Load`</ph> 메서드를 확인 및 엔터티 참조를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; XML 데이터를 관계형으로 볼 수 있도록 먼저 데이터 매핑에 사용할 스키마를을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be done either by calling the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method or by creating the tables and columns within the <ph id="ph1">`DataSet`</ph> manually.</source>
          <target state="translated">이렇게 호출 하 여는 &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;메서드 또는 테이블 및 열 내에서 만들어는 <ph id="ph1">`DataSet`</ph> 수동으로.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">이 단계를 호출 하기 전에 수행 해야 <ph id="ph1">`Load`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">로드할 XML 문서가 포함 된 스트림입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Loads the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">로드는 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt; 지정</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>엔터티 참조를 만들를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">데이터 엔터티 참조를 포함 하는 경우는 <ph id="ph1">`Load`</ph> 메서드를 확인 및 엔터티 참조를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; XML 데이터를 관계형으로 볼 수 있도록 먼저 데이터 매핑에 사용할 스키마를을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be done either by calling the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method or by creating the tables and columns within the <ph id="ph1">`DataSet`</ph> manually.</source>
          <target state="translated">이렇게 호출 하 여는 &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;메서드 또는 테이블 및 열 내에서 만들어는 <ph id="ph1">`DataSet`</ph> 수동으로.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">이 단계를 호출 하기 전에 수행 해야 <ph id="ph1">`Load`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used to feed the XML data into the document.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_TextReader" name="TextReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 문서에 XML 데이터를 제공 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Loads the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using the specified URL.</source>
          <target state="translated">로드는 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 URL을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>엔터티 참조를 만들를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">데이터 엔터티 참조를 포함 하는 경우는 <ph id="ph1">`Load`</ph> 메서드를 확인 및 엔터티 참조를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; XML 데이터를 관계형으로 볼 수 있도록 먼저 데이터 매핑에 사용할 스키마를을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be done either by calling the &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt; method or by creating the tables and columns within the <ph id="ph1">`DataSet`</ph> manually.</source>
          <target state="translated">이렇게 호출 하 여는 &lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;메서드 또는 테이블 및 열 내에서 만들어는 <ph id="ph1">`DataSet`</ph> 수동으로.&lt;/xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">이 단계를 호출 하기 전에 수행 해야 <ph id="ph1">`Load`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The URL of the file containing the XML document to load.</source>
          <target state="translated">로드할 XML 문서를 포함 하는 파일의 URL입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Loads the <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">로드는 <bpt id="p1">&lt;xref uid="langword_csharp_XmlDataDocument" name="XmlDataDocument" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 지정</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph>엔터티 참조를 만들를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source contains entity references, you must create an &lt;xref:System.Xml.XmlValidatingReader&gt; with the &lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt; property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <ph id="ph1">`XmlValidatingReader`</ph> to the <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">데이터 원본에 엔터티 참조를 만들어야 합니다는 &lt;xref:System.Xml.XmlValidatingReader&gt;와 &lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;속성 (이것이 기본 동작) EntityHandling.ExpandEntities로 설정 하 고 전달는 <ph id="ph1">`XmlValidatingReader`</ph> 에 <ph id="ph2">`Load`</ph> 메서드.&lt;/xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt; &lt;/xref:System.Xml.XmlValidatingReader&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use an <ph id="ph1">`XmlValidatingReader`</ph>, the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">사용 하지 않는 경우는 <ph id="ph1">`XmlValidatingReader`</ph>, <ph id="ph2">`Load`</ph> 메서드에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> 메서드는 항상 유효 공백 유지 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt; property determines whether or not white space is preserved.</source>
          <target state="translated">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;속성 공백이 유지 되 고 있는지 여부를 결정 합니다.&lt;/xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>, white space is not preserved.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>, 공백이 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is in the initial state (that is, ReadState=ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">초기 단계 (즉, ReadState=ReadState.Initial) 판독기가 있으면 <ph id="ph1">`Load`</ph> 판독기의 전체 내용을 사용 하 고 그 결과에서 DOM을 빌드합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">판독기가 위치 일부 노드의 깊이 "n"에 이미, 해당 노드 및 "n" 수준을 닫는 끝 태그 까지의 모든 후속 형제가이 방법을 로드 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This has the following results.</source>
          <target state="translated">다음과 같은 결과가이 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current node and its following siblings look similar to the following:      <ph id="ph1">```   &lt;!--comment--&gt;&lt;element1&gt;one&lt;/element1&gt;&lt;element2&gt;two&lt;/element2&gt;   ```</ph>       <ph id="ph2">`Load`</ph> throws an exception, because a document cannot have two root-level elements.</source>
          <target state="translated">현재 노드 및 다음 형제 다음 다음과 같이 표시 하는 경우: <ph id="ph1">```   &lt;!--comment--&gt;&lt;element1&gt;one&lt;/element1&gt;&lt;element2&gt;two&lt;/element2&gt;   ```</ph> <ph id="ph2">`Load`</ph> 문서는 두 개의 루트 수준 요소를 가질 수 없으므로 예외를 throw 합니다.       </target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current node and its following siblings look similar to the following:      <ph id="ph1">```   &lt;!--comment--&gt;&lt;?process       instruction?&gt;&lt;!--comment--&gt;&lt;/endtag&gt;   ```</ph>       <ph id="ph2">`Load`</ph> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</source>
          <target state="translated">현재 노드 및 다음 형제 다음 다음과 같이 표시 하는 경우: <ph id="ph1">```   &lt;!--comment--&gt;&lt;?process       instruction?&gt;&lt;!--comment--&gt;&lt;/endtag&gt;   ```</ph> <ph id="ph2">`Load`</ph> 성공 합니다; 그러나 있습니다는 불완전 한 DOM 트리는 루트 수준 요소가 없기 때문에 있습니다.       </target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>You have to add a root-level element before you save the document; otherwise, the &lt;xref:System.Xml.XmlDocument.Save%2A&gt; method throws an exception.</source>
          <target state="translated">문서를 저장 하기 전에 루트 수준 요소를 추가 해야 합니다. 그렇지 않은 경우는 &lt;xref:System.Xml.XmlDocument.Save%2A&gt;메서드에서 예외를 throw 합니다.&lt;/xref:System.Xml.XmlDocument.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">판독기가 배치 될 때까지 읽기를 계속 문서 (예를 들어 한 공백이 나 특성 노드)의 루트 수준에 대 한 유효 하지 않은 리프 노드에 판독기는 루트로 사용할 수 있는 노드에 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The document begins loading at this point.</source>
          <target state="translated">문서의 시점에서 로드 되기 시작 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_XmlReader" name="XmlReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the XML document to load.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_XmlReader" name="XmlReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 로드할 XML 문서가 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The XML being loaded contains entity references, and the reader cannot resolve entities.</source>
          <target state="translated">엔터티 참조를 포함 하는 XML을 로드 하 고 판독기 엔터티를 확인할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>