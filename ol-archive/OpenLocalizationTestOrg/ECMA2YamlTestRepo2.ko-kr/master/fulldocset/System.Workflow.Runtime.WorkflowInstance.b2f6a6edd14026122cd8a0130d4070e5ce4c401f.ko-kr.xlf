<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b8d65760219a0ce4bd4424a9b83e641e47605a0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.WorkflowInstance.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e6e702c117e76b8e63b0a961ed5ccf67a06fdfd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5a51cd59410f67f181cb908bc3ac707224cdd07</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a workflow instance.</source>
          <target state="translated">워크플로 인스턴스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       The WorkflowInstance class exposes methods and properties that can be used to control the execution of a workflow instance; it is essentially a proxy to the actual workflow instance used by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>WorkflowInstance 클래스는 워크플로 인스턴스의 실행을 제어 하는 데 사용할 수 있는 속성과 메서드를 노출 워크플로 런타임 엔진에서 사용 하는 실제 워크플로 인스턴스에 대 한 프록시 기본적으로입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A host or a service can instruct the workflow runtime engine to perform actions on a workflow instance by calling the appropriate methods that are contained in the WorkflowInstance class.</source>
          <target state="translated">호스트나 서비스는 WorkflowInstance 클래스에 포함 된 적절 한 메서드를 호출 하 여 워크플로 인스턴스에서 작업을 수행 하는 워크플로 런타임 엔진에 지시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the requested action is not valid, for example, if the host calls &lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt; on a workflow instance that has already completed, the workflow runtime engine will raise an appropriate exception.</source>
          <target state="translated">된 다음 요청한 작업이 유효 하지 않을 경우, 예를 들어 호스트 호출 하는 경우 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;이미 완료 된 워크플로 인스턴스의 워크플로 런타임 엔진이 해당 예외를 발생 시킵니다.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a workflow instance becomes unresponsive because a call on the host application does not return, the only way to recover the instance is to restart the runtime.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 인스턴스를 복구 하는 유일한 방법은 런타임을 다시 시작은 워크플로 인스턴스가 응답 하지 않는 경우 호스트 응용 프로그램에 대 한 호출을 반환 하지 않으므로, 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the instance has been forcibly unloaded, aborted, or suspended, it can be continued by calling the &lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">그러나 인스턴스가 없는 경우에 강제로 언로드, 중단 또는 일시 중단 된 경우 계속할 수 있습니다를 호출 하 여는 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aborts the workflow instance.</source>
          <target state="translated">워크플로 인스턴스를 중단 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance is aborted in a synchronous manner; that is, the method returns after the workflow instance has been aborted.</source>
          <target state="translated">동기 방식에서 워크플로 인스턴스가 중단 될 즉, 워크플로 인스턴스가 중단 된 후 메서드가 반환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine invalidates the workflow instance in memory and clears the &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.</source>
          <target state="translated">워크플로 런타임 엔진은 메모리에서 워크플로 인스턴스를 무효화 하 고 있는 &lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt; 지웁니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a persistence service was used by your workflow instance, all work performed since the last persistence point is thrown away.</source>
          <target state="translated">지 속성 서비스가 워크플로 인스턴스에서 사용 된 경우 모든 이후로 수행 마지막 유지 지점 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it aborts the workflow instance, the workflow runtime engine raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt; event.</source>
          <target state="translated">워크플로 런타임 엔진에서 발생 된 워크플로 인스턴스를 중단 한 후의 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;이벤트.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt; to reload the workflow instance and start from its last persistence point.</source>
          <target state="translated">호출할 수 있습니다 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;워크플로 인스턴스를 다시 로드 하 고 마지막 유지 지점에서 시작 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Abort`</ph> is different from &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt; in that while <ph id="ph2">`Abort`</ph> simply clears the in-memory workflow instance and can be restarted from the last persistence point, Terminate clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated"><ph id="ph1">`Abort`</ph>와 다른 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;있는 동안에 <ph id="ph2">`Abort`</ph> 단순히 메모리 내 워크플로 인스턴스를 지우고 다시 시작할 수 마지막 유지 지점에서 Terminate가 메모리 내 워크플로 인스턴스를 지우고 및 지워졌음을 지 속성 서비스는 인스턴스가 메모리에서.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;,이 워크플로 인스턴스에 대 한 모든 상태 정보가 종료 시 데이터베이스에서 삭제 됨을 의미 합니다.&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">이전에 저장 된 유지 지점에서 워크플로 인스턴스를 다시 로드할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Applies changes to the workflow instance specified by the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">로 지정 된 워크플로 인스턴스에 변경 내용을 적용는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is not already suspended, the workflow runtime engine temporarily suspends the instance before applying the changes.</source>
          <target state="translated">워크플로 인스턴스가 이미 일시 중단 되지 않은 경우 워크플로 런타임 엔진이 변경 내용을 적용 하기 전에 인스턴스를 일시적으로 중단 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specifying dynamic updates for the workflow instance.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.WorkflowChanges"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 워크플로 인스턴스에 대 한 동적 업데이트를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Posts a message to the specified workflow queue synchronously.</source>
          <target state="translated">지정 된 워크플로 큐에 메시지를 동기적으로 게시 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends the <ph id="ph1">`item`</ph> to the specified &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">보냅니다는 <ph id="ph1">`item`</ph> &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt; 지정</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to be notified when the message is delivered, you can implement &lt;xref:System.Workflow.Runtime.IPendingWork&gt; in your service and pass a <ph id="ph1">`workItem`</ph> and an &lt;xref:System.Workflow.Runtime.IPendingWork&gt; object to EnqueueItem.</source>
          <target state="translated">메시지를 배달 하는 경우 알림을 받는 하려는 경우 구현할 수 있습니다 &lt;xref:System.Workflow.Runtime.IPendingWork&gt;서비스 및 패스는 <ph id="ph1">`workItem`</ph> 및 &lt;xref:System.Workflow.Runtime.IPendingWork&gt;EnqueueItem 개체.&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.IPendingWork&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">이러한 알림을 하지 않으려면 null 참조를 전달할 수 있습니다 (<ph id="ph1">`Nothing`</ph> Visual basic에서)에 대 한 <ph id="ph2">`pendingWork`</ph> 및 <ph id="ph3">`workItem`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method with a state machine workflow, you might get an exception with the message "Queue '{0}' is not enabled."</source>
          <target state="translated">이 메서드는 상태 시스템 워크플로 사용할 때 메시지와 함께 "큐 ' {' (를) 사용 되지 않습니다." 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This happens when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">이 상태 시스템의 현재 상태에서 특정 이벤트를 처리 하는 방법을 인식 하지 못하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when some state other than the current state contains the &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt; that contains the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; that is represented by the queue '{0}'.</source>
          <target state="translated">현재 상태 이외의 일부 상태 있는 경우 예를 들어는 &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;를 포함 하는 &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;큐 (를) ' {'으로 표시 되는.&lt;/xref:System.Workflow.Activities.HandleExternalEventActivity&gt; &lt;/xref:System.Workflow.Activities.EventDrivenActivity&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Messages are not guaranteed to be received by the workflow instance in the order that they were sent.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 메시지가 전송 된 순서 대로 워크플로 인스턴스에 의해 수신 되도록 보장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if receiving a message in an existing queue (Queue A) causes a workflow to create another queue (Queue B), which then listens for another message sent after the first message, it is possible that the second message will arrive first, and will not be received due to its queue not being created yet.</source>
          <target state="translated">예를 들어 (큐 A) 하면 첫 번째 메시지 이후에 보낸 메시지를 다른 메시지에 대 한 다음 수신 대기 하는 다른 큐 (큐 B)를 만드는 워크플로 큐의 기존 메시지를 받는 경우 두 번째 메시지가 먼저 도착 하 고 아직 생성 되지 않으며 해당 큐로 인해 수신 되지 것입니다 수입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this issue, the second message should not be sent until the presence of the second queue is verified (using &lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;.)</source>
          <target state="translated">이 문제를 방지 하려면 두 번째 메시지를 보내지 두 번째 큐의 존재 여부 확인 될 때까지 (사용 하 여 &lt;xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;.)&lt;/xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object to enqueue.</source>
          <target state="translated">큐에 삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that allows the sender to be notified when <ph id="ph1">`item`</ph> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보낸 사람에 게 사용할 수 있는 경우 알림을 받을 <ph id="ph1">`item`</ph> 배달 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object to be passed to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> methods.</source>
          <target state="translated">개체를 전달 하도록는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> is not enabled.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept> 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Posts a message to the specified workflow queue when the workflow is idle.</source>
          <target state="translated">워크플로가 유휴 상태가 될 때 지정 된 워크플로 큐에 메시지를 게시 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>EnqueueItemOnIdle waits until the workflow reaches an idle point and enqueues after verifying that the workflow scheduler is idle (that is, no active operation is being executed).</source>
          <target state="translated">EnqueueItemOnIdle 워크플로가 유휴 지점 및 큐에 도달 하면 워크플로 스케줄러가 유휴 상태 인지 확인 한 후 될 때까지 대기 (즉, 활성 작업이 없는지 실행 중인).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Waits for the workflow instance to become idle and then sends the <ph id="ph1">`item`</ph> to the specified &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">워크플로 인스턴스가 유휴 상태가 될 때까지 대기 하 고 다음 보냅니다는 <ph id="ph1">`item`</ph> &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt; 지정</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call EnqueueItemOnIdle while the workflow instance is suspended, the workflow runtime engine will throw an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">워크플로 인스턴스가 일시 중단 된 동안 EnqueueItemOnIdle을 호출 하면 워크플로 런타임 엔진에서 throw &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to be notified when the message is delivered, you can implement &lt;xref:System.Workflow.Runtime.IPendingWork&gt; in your service and pass a <ph id="ph1">`workItem`</ph> and an &lt;xref:System.Workflow.Runtime.IPendingWork&gt; object to &lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;.</source>
          <target state="translated">메시지를 배달 하는 경우 알림을 받는 하려는 경우 구현할 수 있습니다 &lt;xref:System.Workflow.Runtime.IPendingWork&gt;서비스 및 패스는 <ph id="ph1">`workItem`</ph> 및 &lt;xref:System.Workflow.Runtime.IPendingWork&gt; &lt;xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A&gt; 개체&lt;/xref:System.Workflow.Runtime.IPendingWork&gt; &lt;/xref:System.Workflow.Runtime.IPendingWork&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want such notification, you can pass a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) for <ph id="ph2">`pendingWork`</ph> and <ph id="ph3">`workItem`</ph>.</source>
          <target state="translated">이러한 알림을 하지 않으려면 null 참조를 전달할 수 있습니다 (<ph id="ph1">`Nothing`</ph> Visual basic에서)에 대 한 <ph id="ph2">`pendingWork`</ph> 및 <ph id="ph3">`workItem`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are using this method with a state machine workflow, you might get an exception that contains the message "Queue '{0}' is not enabled."</source>
          <target state="translated">"큐 ' {' (를) 사용 되지 않습니다." 메시지를 포함 하는 예외를 상태 시스템 워크플로에이 메서드를 사용할 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs when the current state of the state machine does not know how to handle a specific event.</source>
          <target state="translated">상태 시스템의 현재 상태에서 특정 이벤트를 처리 하는 방법을 인식 하지 못하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when some state other than the current state contains the &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt; that contains the &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt; that is represented by the queue '{0}'.</source>
          <target state="translated">현재 상태 이외의 일부 상태 있는 경우 예를 들어는 &lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;를 포함 하는 &lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;큐 (를) ' {'으로 표시 되는.&lt;/xref:System.Workflow.Activities.HandleExternalEventActivity&gt; &lt;/xref:System.Workflow.Activities.EventDrivenActivity&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름에서 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The object to enqueue.</source>
          <target state="translated">큐에 삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that allows the sender to be notified when <ph id="ph1">`item`</ph> is delivered.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보낸 사람에 게 사용할 수 있는 경우 알림을 받을 <ph id="ph1">`item`</ph> 배달 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object to be passed to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> methods.</source>
          <target state="translated">개체를 전달 하도록는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.IPendingWork"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메서드.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;queueName&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-       The workflow instance is suspended.</source>
          <target state="translated">-또는-워크플로 인스턴스가 일시 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">queueName</ph><ept id="p2">&lt;/code&gt;</ept> is not enabled.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">queueName</ph> <ept id="p2">&lt;/code&gt;</ept> 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified object is equal to the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 개체가 같은지 여부를 나타내는 값을 반환 된 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object must be an instance of the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; class and have the same &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; as this &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;.</source>
          <target state="translated">개체는 인스턴스 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;는 동일한 &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;이 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; 있고 클래스&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; 여야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The object to compare.</source>
          <target state="translated">비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified object is equal to this <bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정 된 개체가이 같으면 <bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this workflow instance.</source>
          <target state="translated">이 워크플로 인스턴스에 대 한 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetHashCode returns a hash code based on the value of &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;.</source>
          <target state="translated">GetHashCode &lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt; 값에 따라 해시 코드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hash code for this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 해시 코드 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Retrieves the root activity for this workflow instance.</source>
          <target state="translated">이 워크플로 인스턴스의 루트 활동을 검색합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the root activity to navigate the activity hierarchy of the workflow.</source>
          <target state="translated">워크플로 활동 계층 구조를 탐색 하 여 루트 활동을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not thread safe, so the host should synchronize its calls to this method.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 하지 호스트가이 메서드에 대 한 호출을 동기화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Activity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the next point in time that this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is scheduled to be delivered a timer message.</source>
          <target state="translated">이 다음 시점 반환 시간 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 타이머 메시지 배달 되도록 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A DateTime value that represents the next &lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt; time this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> will be delivered a timer message.</source>
          <target state="translated">다음을 나타내는 DateTime 값 &lt;xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt;이 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 타이머 메시지를 전달 합니다.&lt;/xref:System.Workflow.Runtime.TimerEventSubscription.ExpiresAt*&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a collection of <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that contains the pending items and subscribed activities for the workflow queues associated with this workflow instance.</source>
          <target state="translated">컬렉션을 가져옵니다 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 워크플로 인스턴스와 연결 된 워크플로 큐에 대 한 활동을 구독 보류 중인 항목을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetWorkflowQueueData returns a collection of &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt; objects, each of which contains information about the state of one of the workflow queues associated with this workflow instance.</source>
          <target state="translated">컬렉션을 반환 하는 GetWorkflowQueueData &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;개체를 각각 한이 워크플로 인스턴스와 연결 된 워크플로 큐의 상태에 대 한 정보를 포함 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt; contains the pending items for a &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt; and &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt; contains a list of the activities that are subscribed for item delivery on a &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt;&lt;xref:System.Workflow.Runtime.WorkflowQueue&gt; &lt;xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt; &lt;xref:System.Workflow.Runtime.WorkflowQueue&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt; 항목 배달을 위한 구독 하는 활동의 목록이&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName&gt; 포함&lt;/xref:System.Workflow.Runtime.WorkflowQueue&gt; 된 보류 중인 항목이&lt;/xref:System.Workflow.Runtime.WorkflowQueueInfo.Items%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> 의 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowQueueInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use InstanceId to reference the workflow instance.</source>
          <target state="translated">InstanceId를 사용 하 여 워크플로 인스턴스를 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;워크플로 인스턴스의.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Loads a previously unloaded workflow instance.</source>
          <target state="translated">이전에 언로드된 워크플로 인스턴스를 로드 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Load is synchronous; if the workflow instance can be loaded, Load will return after the workflow instance has been loaded into memory and scheduled by the workflow runtime engine.</source>
          <target state="translated">부하는 동기적입니다. 워크플로 인스턴스를 로드할 수 있는 경우 워크플로 인스턴스를 메모리에 로드 하 고 워크플로 런타임 엔진에 의해 예약 된 후 부하 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt; event after the persistence service has restored the workflow instance in memory, but before the workflow runtime engine schedules the instance.</source>
          <target state="translated">런타임에서 발생는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;이벤트 후 지 속성 서비스가 메모리에서 워크플로 인스턴스를 복원 했습니다 되기 전에 워크플로 런타임 엔진이 인스턴스를 예약 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Reload the tracking profiles for this workflow instance.</source>
          <target state="translated">이 워크플로 인스턴스에 대 한 추적 프로필을 다시 로드 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime tracking infrastructure will reload each &lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt; for this workflow instance associated with its tracking channels.</source>
          <target state="translated">런타임 추적 인프라는 각 다시 로드 &lt;xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;와 추적 채널과 연결 된이 워크플로 인스턴스에 대 한.&lt;/xref:System.Workflow.Runtime.Tracking.TrackingProfile&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is not already in a suspended state, the workflow is temporarily suspended by the runtime tracking infrastructure while the tracking profiles are reloaded.</source>
          <target state="translated">없으면 이미 일시 중단 된 상태로, 워크플로가 런타임 추적 인프라는 추적 프로필을 다시 로드 하는 동안 의해 일시 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Resumes execution of a previously suspended workflow instance.</source>
          <target state="translated">이전에 일시 중단 된 워크플로 인스턴스의 실행을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host can call Resume to resume execution of a workflow instance that has been previously suspended.</source>
          <target state="translated">호스트는 이전에 일시 중단 된 워크플로 인스턴스의 실행을 계속 하려면는 Resume을 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is not in the suspended state, no action is taken.</source>
          <target state="translated">워크플로 인스턴스가 일시 중단된 상태에 없는 경우 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt; event just before execution of the workflow instance is resumed.</source>
          <target state="translated">런타임에서 발생는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;이벤트는 워크플로 인스턴스의 실행이 다시 시작 하기 바로 전에.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Starts the execution of the workflow instance.</source>
          <target state="translated">워크플로 인스턴스 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Start calls &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt; on the root activity of this workflow instance.</source>
          <target state="translated">호출을 시작 &lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;이 워크플로 인스턴스의 루트 활동에.&lt;/xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Start encounters an exception, it terminates the workflow instance by calling &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt; with the &lt;xref:System.Exception.Message%2A&gt; property of the exception passed as the reason for the termination.</source>
          <target state="translated">호출 하 여 워크플로 인스턴스를 종료 하기 시작 예외를 발생 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;와 &lt;xref:System.Exception.Message%2A&gt;종료 이유로 전달 된 예외의 속성.&lt;/xref:System.Exception.Message%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       The workflow instance has already been started.</source>
          <target state="translated">-또는-워크플로 인스턴스가 이미 시작 되었습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Suspends the workflow instance.</source>
          <target state="translated">워크플로 인스턴스가 일시 중단합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance is suspended in a synchronous manner.</source>
          <target state="translated">워크플로 인스턴스를 동기 방식으로 일시 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is already suspended, no action is taken; otherwise, the workflow runtime engine suspends the workflow instance, raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt; event and passes <ph id="ph1">`reason`</ph> in a &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;.</source>
          <target state="translated">워크플로 인스턴스가 이미 일시 중단 된 경우 아무 작업도 수행 합니다. 그렇지 않으면 워크플로 런타임 엔진이 워크플로 인스턴스에서 발생을 일시 중단 된 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;이벤트 및 전달 <ph id="ph1">`reason`</ph> &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Suspend does not unload the workflow instance.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일시 중단 된 워크플로 인스턴스를 언로드하지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A description of the reason for suspending the workflow instance.</source>
          <target state="translated">워크플로 인스턴스를 일시 중단에 대 한 이유에 대 한 설명.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Terminates the workflow instance in a synchronous manner.</source>
          <target state="translated">동기 방식으로 워크플로 인스턴스를 종료합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance is terminated in a synchronous manner.</source>
          <target state="translated">워크플로 인스턴스를 동기 방식으로 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host calls Terminate to terminate the workflow instance.</source>
          <target state="translated">호스트는 워크플로 인스턴스를 종료 하는 종료를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow runtime engine clears the in-memory workflow instance and informs the persistence service that the instance has been cleared from memory.</source>
          <target state="translated">워크플로 런타임 엔진은 메모리 내 워크플로 인스턴스를 지우고 지워졌음을 지 속성 서비스는 인스턴스가 메모리에서 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;, this means that all state information for that workflow instance is deleted from the database upon termination.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;,이 워크플로 인스턴스에 대 한 모든 상태 정보가 종료 시 데이터베이스에서 삭제 됨을 의미 합니다.&lt;/xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will not be able to reload the workflow instance from a previously stored persistence point.</source>
          <target state="translated">이전에 저장 된 유지 지점에서 워크플로 인스턴스를 다시 로드할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the in-memory workflow instance is cleared and the persistence service is informed of the termination, the <ph id="ph1">`Terminate`</ph> method raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt; event and passes <ph id="ph2">`reason`</ph> in the &lt;xref:System.Exception.Message%2A&gt; property of a &lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt; contained in the &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;.</source>
          <target state="translated">메모리 내 워크플로 인스턴스를 지우고 지 속성 서비스 종료를 알린 후는 <ph id="ph1">`Terminate`</ph> 발생 시키는 메서드는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;이벤트 및 전달 <ph id="ph2">`reason`</ph> &lt;xref:System.Exception.Message%2A&gt; &lt;xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt; &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; 에 포함 된&lt;/xref:System.Workflow.ComponentModel.WorkflowTerminatedException&gt; 속성&lt;/xref:System.Exception.Message%2A&gt; 에&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Terminate`</ph> is different from &lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt; in that while Terminate clears the in-memory workflow instance and informs the persistence service of the termination, <ph id="ph2">`Abort`</ph> simply clears the in-memory workflow instance, which can then be restarted from the last persistence point.</source>
          <target state="translated"><ph id="ph1">`Terminate`</ph>와 다른 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;을 종료 하는 동안 메모리 내 워크플로 인스턴스를 지우고 지 속성 서비스에 종료를 알리는 <ph id="ph2">`Abort`</ph> 단순히는 메모리 내 워크플로 인스턴스를 지우며 마지막 유지 지점에서 다시 시작할 수 있습니다.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A description of the reason for terminating the workflow instance.</source>
          <target state="translated">워크플로 인스턴스의 종료에 대 한 이유에 대 한 설명.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The workflow runtime engine is not running.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Unloads the workflow instance from memory to the persistence store when the instance is suspended or idle.</source>
          <target state="translated">인스턴스가 일시 중단 또는 유휴 상태에 있으면 지 속성 저장소에 워크플로 인스턴스가 메모리에서 언로드합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is idle or suspended, TryUnload uses the persistence service to remove the workflow instance from memory and persist it to a data store.</source>
          <target state="translated">워크플로 인스턴스가 유휴 상태가 되거나 일시 중단 된 경우 TryUnload를 사용 하 여 지 속성 서비스가 메모리에서 워크플로 인스턴스를 제거 하 고 데이터 저장소에 유지 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no persistence service registered with the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, TryUnload throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">등록 된 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;TryUnload throw &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; ,&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 지 속성 서비스가 없는 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is successfully persisted, the runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt; event, and returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">런타임에서 발생 하는 워크플로 인스턴스가 성공적으로 지속 되 면는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;이벤트 및 반환 <ph id="ph1">`true`</ph>.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt; returns <ph id="ph1">`false`</ph> if the workflow instance has already been unloaded, has been terminated, has been aborted, or has already completed.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;반환 <ph id="ph1">`false`</ph> 워크플로 인스턴스가 이미 언로드 되었습니다, 하는 경우 종료 되었습니다, 중단 되었습니다. 또는 이미 완료 되었습니다.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host can use TryUnload to reclaim system resources from an idle workflow.</source>
          <target state="translated">호스트 TryUnload를 사용 하 여 유휴 워크플로에서 시스템 리소스를 회수할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow instance was unloaded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>워크플로 인스턴스가 언로드; 하지 못한 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">워크플로 런타임 엔진에 등록 된 지 속성 서비스가 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Unloads the workflow instance from memory to the persistence store.</source>
          <target state="translated">지 속성 저장소에 워크플로 인스턴스가 메모리에서 언로드합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>This call blocks until after the currently scheduled work is finished, or the end of a transaction scope.</source>
          <target state="translated">현재 예약 된 작업이 완료 된 후이 호출 될 때까지 차단 또는 트랜잭션 범위의 끝입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unload is synchronous; that is, it returns after completing any action that it performs.</source>
          <target state="translated">Unload는 동기적입니다. 즉, 수행 하는 모든 작업을 완료 한 후 반환 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is not idle, the runtime waits until the instance can be interrupted.</source>
          <target state="translated">워크플로 인스턴스가 유휴 상태가 아닌 경우 런타임에서 인스턴스를 중단할 수 될 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance can only be interrupted after the currently scheduled work item completes; this is typically when the currently running Activity returns from its &lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt; method.</source>
          <target state="translated">현재 예약 된 작업 항목; 완료 된 후에 인스턴스를 중단할 수 있습니다. 이 일반적으로 현재 실행 중인 작업에서 반환 하는 경우 해당 &lt;xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;메서드.&lt;/xref:System.Workflow.ComponentModel.Activity.Execute%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the instance is executing a &lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;, the transaction scope must complete execution before the instance can be interrupted.</source>
          <target state="translated">그러나 인스턴스가 실행 되는 경우는 &lt;xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;, 인스턴스를 중단할 수 트랜잭션 범위가 실행을 완료 해야 합니다.&lt;/xref:System.Workflow.ComponentModel.TransactionScopeActivity&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unload then uses the persistence service to remove the workflow instance from memory and persists it to a data store.</source>
          <target state="translated">그런 다음 unload는 지 속성 서비스를 사용 하 여 메모리에서 워크플로 인스턴스를 제거 하 고 데이터 저장소에 지속 되.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no persistence service registered with the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, Unload throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">등록 된 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;언로드 throw &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; ,&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 지 속성 서비스가 없는 경우</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the workflow instance is successfully persisted, the runtime raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt; event.</source>
          <target state="translated">런타임에서 발생 하는 워크플로 인스턴스가 성공적으로 지속 되 면는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;이벤트.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host can use Unload to reclaim system resources from an idle workflow.</source>
          <target state="translated">호스트 언로드를 사용 하 여 유휴 워크플로에서 시스템 리소스를 회수할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>There is no persistence service registered with the workflow runtime engine.</source>
          <target state="translated">워크플로 런타임 엔진에 등록 된 지 속성 서비스가 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this workflow instance.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 워크플로 인스턴스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the execution environment in which this workflow instance is running.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 워크플로 인스턴스가 실행 중인 실행 환경을 나타내는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>