<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a167971b0b5d6a45ba8cd4783696d16d414acee6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Log.IRecordSequence.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0efe6e55b18e66d08144ac1a6cb8276bd3e23e34</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb78af0469dacf07d11bfc0904977849ec2a00f5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a generic interface to a sequence of records.</source>
          <target state="translated">레코드의 시퀀스에 제네릭 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IRecordSequence interface provides an abstract interface to a record-oriented stream.</source>
          <target state="translated">IRecordSequence 인터페이스 레코드 기반 스트림에 대 한 추상 인터페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A IRecordSequence instance can be used to read and write log records.</source>
          <target state="translated">IRecordSequence 인스턴스 읽고 로그 레코드를 쓰는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IRecordSequence interface provides the following capabilities,      -   Append log records using the &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; methods.</source>
          <target state="translated">로그 추가-IRecordSequence 인터페이스는 다음과 같은 기능을 제공를 사용 하 여 기록 된 &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Read the appended records using the &lt;xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt; method.</source>
          <target state="translated">-를 사용 하 여 추가 된 레코드는 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Write a special restart record using the &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt; method.</source>
          <target state="translated">-는 특수 재시작 레코드를 사용 하 여 작성 된 &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Read restart records from the most recently written restart record using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">읽기는 가장 최근에 쓴 재시작 레코드를 사용 하 여의 레코드를 다시 시작은 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Flush the records to durable store using the  &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">-다음을 사용 하 여 영 속 저장소에 레코드 플러시는 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Reserve space for appending records.</source>
          <target state="translated">-레코드를 추가 하기 위한 공간을 예약 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Free log space by advancing the base of the log.</source>
          <target state="translated">-로그 공간이 로그의 기준을 앞으로 이동 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Receive &lt;xref:System.IO.Log.IRecordSequence.TailPinned&gt; event notifications to move the base of the log to free space.</source>
          <target state="translated">-수신 &lt;xref:System.IO.Log.IRecordSequence.TailPinned&gt;공간을 확보 하는 로그의 밑을 이동 하는 이벤트 알림.&lt;/xref:System.IO.Log.IRecordSequence.TailPinned&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Log records are appended to a IRecordSequence instance, and each log record is given a unique sequence number.</source>
          <target state="translated">로그 레코드는 IRecordSequence 인스턴스에 추가 됩니다. 및 각 로그 레코드에 고유한 시퀀스 번호가 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sequence numbers are strictly monotonically increasing within a given record sequence.</source>
          <target state="translated">시퀀스 번호 순차적으로 지정된 된 레코드 시퀀스 내에서 증가 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A log record consists of opaque data, supplied to the IRecordSequence instance in an &lt;xref:System.Collections.IList&gt; of ArraySegments of bytes.</source>
          <target state="translated">로그 레코드에서 IRecordSequence 인스턴스를 제공 하는 불투명 데이터 이루어져는 &lt;xref:System.Collections.IList&gt;바이트 배열 세그먼트의.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IRecordSequence interface also exposes a few basic properties which provides information about log boundaries.</source>
          <target state="translated">또한 IRecordSequence 인터페이스 로그 경계에 대 한 정보를 제공 하는 몇 가지 기본 속성을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; property contains the sequence number of the first valid record in the record sequence.</source>
          <target state="translated">- &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;속성 레코드 시퀀스에서 유효한 첫 번째 레코드의 시퀀스 번호를 포함 합니다.&lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt; property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</source>
          <target state="translated">- &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;속성은 반드시 큰 시퀀스 번호를 포함 추가 된 레코드의 마지막 시퀀스 번호 보다.&lt;/xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt; property contains the sequence number of the last written restart area.</source>
          <target state="translated">- &lt;xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt;속성 마지막 쓴된 재시작 영역의 시퀀스 번호를 포함 합니다.&lt;/xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt; property contains the size of the largest record that can be appended to, or read from the sequence.</source>
          <target state="translated">- &lt;xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt;속성을 추가 하거나 시퀀스에서 읽을 수 있는 가장 큰 레코드의 크기를 포함 합니다.&lt;/xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt; property contains the total size of all reservations made in this record sequence.</source>
          <target state="translated">- &lt;xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt;속성이 레코드 시퀀스에서 만들어진 모든 예약의 총 크기를 포함 합니다.&lt;/xref:System.IO.Log.IRecordSequence.ReservedBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the &lt;xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt; property is set to <ph id="ph1">`true`</ph>, and an &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</source>
          <target state="translated">-If는 &lt;xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt;속성이 <ph id="ph1">`true`</ph>, 및 &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;시퀀스에 공간이 때문에 작업이 실패, 레코드 시퀀스에서 공간을 확보 하 고 추가 작업을 다시 시도 하려고 합니다.&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt; &lt;/xref:System.IO.Log.IRecordSequence.RetryAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Moves the base sequence number of the log forward.</source>
          <target state="translated">로그의 기준 시퀀스 번호를 앞으로 이동합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use a &lt;xref:System.IO.Log.LogRecordSequence&gt; instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.IO.Log.LogRecordSequence&gt;새 기준 시퀀스 번호 이전 범위가 빈 것으로 표시 될 다른 로그 범위에 있어야 인스턴스와으로 로그의 공간을 확보 하기 위해 시퀀스 번호를 이동 하려고 합니다.&lt;/xref:System.IO.Log.LogRecordSequence&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Freeing extents partially is not supported.</source>
          <target state="translated">익스텐트를 부분적으로 확보 하는 것은 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The new base sequence number of the record sequence.</source>
          <target state="translated">레코드 시퀀스의 새 기준 시퀀스 번호를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph>잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph> is not active in the log.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;newBaseSequenceNumber&lt;/code&gt;</ph>로그에 활성 상태가 아닙니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while modifying the sequence.</source>
          <target state="translated">시퀀스를 수정 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The record sequence is full.</source>
          <target state="translated">레코드 시퀀스가 꽉 찼습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 로그 레코드를 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 로그 레코드를 추가 하는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 로그 레코드를 추가 하는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 시퀀스에서 이전에 예약 된 공간을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">추가 된 레코드 이전에 예약 된, 변수로 지정 된 예약을 사용 하 여 공간을 사용 하면는 <ph id="ph1">`reservations`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">추가 작업이 성공 하면 및 예약 영역이 컬렉션에서 제거할 데이터를 포함 될 수 있는 가장 작은 예약 영역을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 레코드에 대해 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, appends a log record to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 로그 레코드를 추가 하는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 시퀀스에서 이전에 예약 된 공간을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">추가 된 레코드 이전에 예약 된, 변수로 지정 된 예약을 사용 하 여 공간을 사용 하면는 <ph id="ph1">`reservations`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">추가 작업이 성공 하면 및 예약 영역이 컬렉션에서 제거할 데이터를 포함 될 수 있는 가장 작은 예약 영역을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 레코드에 대해 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number of the first valid record in the current <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의할 때 현재에서 유효한 첫 번째 레코드의 시퀀스 번호를 가져옵니다 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid sequence numbers are greater than or equal to BaseSequenceNumber and less than &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;.</source>
          <target state="translated">유효한 시퀀스 번호는 보다 큰가 BaseSequenceNumber 같고 &lt;xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt;.&lt;/xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A&gt; 보다 작음</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property can be changed by calling the &lt;xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt; or &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt; method.</source>
          <target state="translated">호출 하 여이 속성의 값을 변경할 수 있습니다는 &lt;xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt;또는 &lt;xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A&gt; &lt;/xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The lowest sequence number that corresponds to a valid record in the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">유효한 레코드에 해당 하는 가장 낮은 시퀀스 번호는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시작 되는 비동기 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 추가 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 시작 시퀀스에서 이전에 예약 된 공간을 사용 하 여 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 추가 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 시작 시퀀스에서 이전에 예약 된 공간을 사용 하 여 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">추가 된 레코드 이전에 예약 된, 변수로 지정 된 예약을 사용 하 여 공간을 사용 하면는 <ph id="ph1">`reservations`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">추가 작업이 성공 하면 및 예약 영역이 컬렉션에서 제거할 데이터를 포함 될 수 있는 가장 작은 예약 영역을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 레코드에 대해 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 추가 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 시작 시퀀스에서 이전에 예약 된 공간을 사용 하 여 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appended record will consume space that has been previously reserved, using a reservation specified by the <ph id="ph1">`reservations`</ph> parameter.</source>
          <target state="translated">추가 된 레코드 이전에 예약 된, 변수로 지정 된 예약을 사용 하 여 공간을 사용 하면는 <ph id="ph1">`reservations`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</source>
          <target state="translated">추가 작업이 성공 하면 및 예약 영역이 컬렉션에서 제거할 데이터를 포함 될 수 있는 가장 작은 예약 영역을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method completes before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this record.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 레코드에 대해 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous append, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는 비동기 추가 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 시퀀스에서 이전에 예약 된 공간을 사용 하 여 비동기 플러시 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by the current method to the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method to ensure that the flush completes and resources are freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;를 현재 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;메서드 여 플러시를 완료 하 고 리소스가 적절 하 게 해제 됩니다.&lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error occurs during an asynchronous flush, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 플러시 중에 오류가 발생 하는 경우 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method ensures that all records that have been appended to the &lt;xref:System.IO.Log.IRecordSequence&gt; are durably written.</source>
          <target state="translated">이 메서드를 호출 하면 모든 레코드가 있는에 추가 된는 &lt;xref:System.IO.Log.IRecordSequence&gt;영속적으로 기록 됩니다.&lt;/xref:System.IO.Log.IRecordSequence&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 플러시 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndFlush%2A&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The sequence number of the latest record that must be written.</source>
          <target state="translated">써야 하는 최신 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If this <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid, then all records must be written.</source>
          <target state="translated">이 경우 <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효 하지 않을 경우 모든 레코드를 써야 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the flush is complete.</source>
          <target state="translated">플러시가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous flush request from other requests.</source>
          <target state="translated">이 특정 비동기 플러시 요청을 다른 요청과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous flush operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류할 수를 나타내는 비동기 플러시 작업, 중일 수 있습니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">데이터를 플러시하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous reserve and append operation.</source>
          <target state="translated">재정의 된 경우 파생된 클래스에서 비동기 예약 및 시작 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">추가 된 지정 된 예약은 레코드와 원자 단위 연산에서 컬렉션 추가 작업에 제공된 된 예약 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">추가 실패, 없음 공간이 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">예약을 만들 예약 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">바이트 단위로 만들 예약 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents this asynchronous operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는이 비동기 작업을 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함 하거나 예약을 변경 하려면 충분 한 여유 공간을 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous reserve and append operation.</source>
          <target state="translated">재정의 된 경우 파생된 클래스에서 비동기 예약 및 시작 작업을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method to ensure that the append operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드 추가 작업이 완료 된 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous append, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 추가 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">추가 된 지정 된 예약은 레코드와 원자 단위 연산에서 컬렉션 추가 작업에 제공된 된 예약 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">추가 실패, 없음 공간이 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">예약을 만들 예약 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">바이트 단위로 만들 예약 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the append is complete.</source>
          <target state="translated">추가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous append request from other requests.</source>
          <target state="translated">이 특정 비동기 구별 하는 사용자 제공 개체는 다른 요청에서 요청을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents this asynchronous operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중일 수 있는이 비동기 작업을 나타내는입니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함 하거나 예약을 변경 하려면 충분 한 여유 공간을 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 시퀀스에서 이전에 예약 된 공간을 사용 하는 비동기 재시작 영역 쓰기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method, to assure that the restart area write operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드가 하 여 재시작 영역 쓰기 작업을 완료 하 고 리소스를 적절 하 게 해제할 수 있습니다.&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 재시작 영역 쓰기 작업 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the operation successfully completes, the base sequence number has been updated.</source>
          <target state="translated">작업을 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.IO.Log.ReservationCollection&gt; is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">경우는 &lt;xref:System.IO.Log.ReservationCollection&gt;을 지정 쓴된 재시작 영역은 이전에 예약 된, 컬렉션에 포함 된 예약을 사용 하 여 공간을 사용 합니다.&lt;/xref:System.IO.Log.ReservationCollection&gt;</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</source>
          <target state="translated">메서드가 성공 하면 예약이 컬렉션에서 제거 됩니다 및 사용자 데이터를 포함 될 수 있는 가장 작은 예약을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 재시작 영역에 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the restart area write is complete.</source>
          <target state="translated">재시작 영역 쓰기가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</source>
          <target state="translated">다른 요청에서 특정 비동기 재시작 영역 쓰기 요청을 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous restart area write operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중인 수는 비동기 재시작 영역 쓰기 작업을 나타내는 중일 수 있습니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 시퀀스에서 이전에 예약 된 공간을 사용 하는 비동기 재시작 영역 쓰기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should pass the &lt;xref:System.IAsyncResult&gt; returned by this method to the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method to ensure that the restart area write operation has completed and resources can be freed appropriately.</source>
          <target state="translated">전달 해야는 &lt;xref:System.IAsyncResult&gt;에이 메서드에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드 재시작 영역 쓰기 작업이 완료 되 고 리소스를 적절 하 게 해제할 수 있도록 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called with the &lt;xref:System.IAsyncResult&gt; returned by this method.</source>
          <target state="translated">될 때까지 비동기 재시작 영역 쓰기 작업 중 오류가 발생 했는지, 예외가 throw 되지 않습니다는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드는 &lt;xref:System.IAsyncResult&gt;이 메서드에서 반환 된.&lt;/xref:System.IAsyncResult&gt; &lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the operation successfully completes, the base sequence number has been updated.</source>
          <target state="translated">작업을 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a &lt;xref:System.IO.Log.ReservationCollection&gt; is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">경우는 &lt;xref:System.IO.Log.ReservationCollection&gt;을 지정 쓴된 재시작 영역은 이전에 예약 된, 컬렉션에 포함 된 예약을 사용 하 여 공간을 사용 합니다.&lt;/xref:System.IO.Log.ReservationCollection&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</source>
          <target state="translated">메서드가 성공 하면 예약이 컬렉션에서 제거 됩니다 및 사용자 데이터를 포함 될 수 있는 가장 작은 예약을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 재시작 영역에 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>An optional asynchronous callback, to be called when the restart area write is complete.</source>
          <target state="translated">재시작 영역 쓰기가 완료 되 면 호출 되는 선택적 비동기 콜백.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</source>
          <target state="translated">다른 요청에서 특정 비동기 재시작 영역 쓰기 요청을 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.IAsyncResult&gt; that represents the asynchronous restart area write operation, which could still be pending.</source>
          <target state="translated">&lt;xref:System.IAsyncResult&gt;보류 중인 수는 비동기 재시작 영역 쓰기 작업을 나타내는 중일 수 있습니다.&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함할 수 있는 여유 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a new <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면에서는 새 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The newly created <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새로 만든 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous append operation.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 추가 작업을 끝냅니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">이 메서드는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndAppend is called.</source>
          <target state="translated">비동기 쓰기 요청 I/O 요청 중의 디스크 오류와 같은 중 발생 하는 오류 EndAppend를 호출할 때 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt; method.</source>
          <target state="translated">이 메서드를 정확히 한 번만 호출 해야 모든 &lt;xref:System.IAsyncResult&gt;에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.BeginAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">처리 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous flush operation.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 플러시 작업을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">이 메서드는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when EndFlush is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류와 같은 비동기 플러시 요청 중에 발생 하는 오류 EndFlush를 호출할 때 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt; method.</source>
          <target state="translated">이 메서드를 정확히 한 번만 호출 해야 모든 &lt;xref:System.IAsyncResult&gt;에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.BeginFlush%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">처리 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">마지막으로 쓴 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous reserve and append operation.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 종료 비동기 예약 및 추가 작업을 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">이 메서드는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndReserveAndAppend is called.</source>
          <target state="translated">비동기 쓰기 요청 I/O 요청 중의 디스크 오류와 같은 중 발생 하는 오류 EndReserveAndAppend를 호출할 때 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt; method.</source>
          <target state="translated">이 메서드를 정확히 한 번만 호출 해야 모든 &lt;xref:System.IAsyncResult&gt;에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">처리 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ends an asynchronous restart area write operation.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 비동기 재시작 영역 쓰기 작업을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">이 메서드는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when EndWriteRestartArea is called.</source>
          <target state="translated">비동기 쓰기 요청 I/O 요청 중의 디스크 오류와 같은 중 발생 하는 오류 EndWriteRestartArea를 호출할 때 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be called exactly once on every &lt;xref:System.IAsyncResult&gt; returned by the &lt;xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt; method.</source>
          <target state="translated">이 메서드를 정확히 한 번만 호출 해야 모든 &lt;xref:System.IAsyncResult&gt;에서 반환 되는 &lt;xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A&gt; &lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">처리 중인 비동기 I/O 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The sequence number of the written log record.</source>
          <target state="translated">쓴된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ensures that all appended records have been written.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 추가 된 모든 레코드가 썼는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method ensures that all records that have been appended to the &lt;xref:System.IO.Log.IRecordSequence&gt; have been durably written.</source>
          <target state="translated">이 메서드를 호출 하면 모든 레코드가 있는에 추가 된는 &lt;xref:System.IO.Log.IRecordSequence&gt;영속적으로 씁니다.&lt;/xref:System.IO.Log.IRecordSequence&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">마지막으로 쓴 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">데이터를 플러시하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 추가 된 모든 레코드 및 지정 된 시퀀스 번호와 레코드까지 영속적으로 기록 되었음을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</source>
          <target state="translated">이 메서드를 사용 하면 시퀀스 번호를 모든 레코드가 최대 호출 하 고 지정 된 시퀀스 번호를 포함 하 여 영속적 기록 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The sequence number of the latest record that must be written.</source>
          <target state="translated">써야 하는 최신 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>If this <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is invalid, then all records must be written.</source>
          <target state="translated">이 경우 <bpt id="p1">&lt;xref href="System.IO.Log.SequenceNumber"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효 하지 않을 경우 모든 레코드를 써야 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The sequence number of the last record written.</source>
          <target state="translated">마지막으로 쓴 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while flushing the data.</source>
          <target state="translated">데이터를 플러시하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number which is greater than the last record appended.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시퀀스 번호를 가져옵니다 마지막으로 추가 된 레코드 보다 큰 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</source>
          <target state="translated">이 속성은 반드시 큰 시퀀스 번호를 포함 추가 된 레코드의 마지막 시퀀스 번호 보다 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid sequence numbers are greater than or equal to &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; and less than LastSequenceNumber.</source>
          <target state="translated">유효한 시퀀스 번호 보다 크거나 같은 경우는 &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;같고 LastSequenceNumber 보다.&lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When using a &lt;xref:System.IO.Log.LogRecordSequence&gt; instance, the &lt;xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt; value can become out of date until records are flushed to the log.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;는 &lt;xref:System.IO.Log.LogRecordSequence&gt;인스턴스, &lt;xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt;값이 레코드의 로그를 플러시할 때까지 만료 될 수 있습니다&lt;/xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A&gt; &lt;/xref:System.IO.Log.LogRecordSequence&gt; 를 사용 하는 경우</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>See &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; and &lt;xref:System.IO.Log.RecordAppendOptions&gt; for more information on flushing records..</source>
          <target state="translated">&lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;및 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플러시 레코드.. 대 한 자세한 내용은&lt;/xref:System.IO.Log.RecordAppendOptions&gt; &lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>A sequence number which is greater than the last record appended.</source>
          <target state="translated">마지막으로 추가 된 레코드 보다 큰 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 추가 하거나 (바이트)이이 시퀀스에서 읽을 수 있는 가장 큰 레코드의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The size of the largest record that can be appended to or read from this sequence, in bytes.</source>
          <target state="translated">추가 하거나 (바이트)이이 시퀀스에서 읽을 수 있는 가장 큰 레코드의 크기입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an enumerable collection of records in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시퀀스에 레코드의 열거 가능 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overridden in a derived class, returns an enumerable collection of records in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시퀀스에 레코드의 열거 가능 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the enumerated records depends on the value of the <ph id="ph1">`logRecordEnum`</ph> parameter.</source>
          <target state="translated">값에 따라 열거 되는 레코드의 순서는 <ph id="ph1">`logRecordEnum`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The sequence number of the first record where the reading starts.</source>
          <target state="translated">읽기가 시작 되는 첫 번째 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>A valid <bpt id="p1">&lt;xref href="System.IO.Log.LogRecordEnumeratorType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that specifies the manner (that is, forward or backward) in which records should be read from a <bpt id="p2">&lt;xref href="System.IO.Log.LogRecordSequence"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">유효한 <bpt id="p1">&lt;xref href="System.IO.Log.LogRecordEnumeratorType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 레코드를 읽는에 (즉, 앞으로 또는 뒤로) 하는 방식을 지정 하는 값을 <bpt id="p2">&lt;xref href="System.IO.Log.LogRecordSequence"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>An enumerable collection of records in the sequence.</source>
          <target state="translated">시퀀스에 있는 레코드의 열거 가능한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the record.</source>
          <target state="translated">레코드를 읽는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</source>
          <target state="translated">재시작 영역의 가장 낮은 시퀀스 번호를 시퀀스 번호가 가장 높은에서 즉, 역방향 시퀀스 번호 순서에 열거 됩니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</source>
          <target state="translated">마지막 시퀀스 번호 사이의 시퀀스 번호를 가진 재시작 영역만 기준 시퀀스 번호를 열거 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If the log extent containing the &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt; becomes corrupted, this method can throw an &lt;xref:System.IO.IOException&gt; with the error message "The request could not be performed because of an unexpected I/O exception.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 경우 포함 된 로그 범위가 &lt;xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;가 손상 된 경우이 메서드가 throw 할 수는 &lt;xref:System.IO.IOException&gt;오류 메시지와 함께 "예기치 않은 I/O 예외 때문에 요청을 수행할 수 없습니다.&lt;/xref:System.IO.IOException&gt; &lt;/xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following error code was returned: '80070026'".</source>
          <target state="translated">다음과 같은 오류 코드가 반환 되었습니다: '80070026' "입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>An enumerable collection of the restart areas in the sequence.</source>
          <target state="translated">시퀀스에 있는 재시작 영역의 열거 가능한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the record.</source>
          <target state="translated">레코드를 읽는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">추가 된 지정 된 예약은 레코드와 원자 단위 연산에서 컬렉션 추가 작업에 제공된 된 예약 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">추가 실패, 없음 공간이 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the collection to make reservations in.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예약을 만들 컬렉션이 포함 된 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">바이트 단위로 만들 예약 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함 하거나 예약을 변경 하려면 충분 한 여유 공간을 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 자동으로 단일 예약을 만들고 시퀀스에 레코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data contained in the <ph id="ph1">`data`</ph> parameter will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">에 포함 된 데이터는 <ph id="ph1">`data`</ph> 매개 변수는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, no provision is made for splitting data back into array segments when the record is read.</source>
          <target state="translated">그러나 레코드를 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</source>
          <target state="translated">추가 된 지정 된 예약은 레코드와 원자 단위 연산에서 컬렉션 추가 작업에 제공된 된 예약 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the append fails, no space is reserved.</source>
          <target state="translated">추가 실패, 없음 공간이 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, this method may complete before the record has been written.</source>
          <target state="translated">일반적으로이 메서드는 레코드를 쓰기 전에 완료 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a record has been written, either specify the &lt;xref:System.IO.Log.RecordAppendOptions&gt; flag using the <ph id="ph1">`recordAppendOptions`</ph> parameter, or call the &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt; method.</source>
          <target state="translated">지정 하거나 기록 된 하려면는 &lt;xref:System.IO.Log.RecordAppendOptions&gt;플래그를 사용 하는 <ph id="ph1">`recordAppendOptions`</ph> 매개 변수 또는 호출의 &lt;xref:System.IO.Log.IRecordSequence.Flush%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.Flush%2A&gt; &lt;/xref:System.IO.Log.RecordAppendOptions&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in the user-specified order.</source>
          <target state="translated">사용자가 지정한 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The sequence number of the next record in Previous order.</source>
          <target state="translated">이전 순서에서 다음 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>A valid value of <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that specifies how the data should be written.</source>
          <target state="translated">유효한 값 <bpt id="p1">&lt;xref href="System.IO.Log.RecordAppendOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터를 작성 하는 방법을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The reservation collection to make reservations in.</source>
          <target state="translated">예약을 만들 예약 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The reservations to make, in bytes.</source>
          <target state="translated">바이트 단위로 만들 예약 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The sequence number of the appended log record.</source>
          <target state="translated">추가 된 로그 레코드의 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while appending the record.</source>
          <target state="translated">레코드를 추가 하는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new record, or to make the reservation.</source>
          <target state="translated">레코드 시퀀스에서 새 레코드를 포함 하거나 예약을 변경 하려면 충분 한 여유 공간을 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the total number of bytes that have been reserved.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 예약 된 바이트의 총 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The total size of all reservations made in this record sequence.</source>
          <target state="translated">이 레코드 시퀀스에서 만들어진 모든 예약의 총 크기입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the sequence number of the most recently written restart area.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 가장 최근에 쓴 재시작 영역의 시퀀스 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The sequence number of the most recently written restart area.</source>
          <target state="translated">시퀀스 번호의 가장 최근에 기록 된 재시작 영역의.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether appends are automatically retried if the log is full.</source>
          <target state="translated">나타내는 값을 가져오거나 여부 추가 로그가 꽉 찼을 경우 자동으로 다시 시도 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is <ph id="ph1">`true`</ph>, and an &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt; call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</source>
          <target state="translated">이 속성의 값이 <ph id="ph1">`true`</ph>, 및 &lt;xref:System.IO.Log.IRecordSequence.Append%2A&gt;시퀀스에 충분 한 공간이 없기 때문에 호출이 실패 하면, 레코드 시퀀스에서 공간을 확보 하 고 추가 다시 시도 하려고 합니다.&lt;/xref:System.IO.Log.IRecordSequence.Append%2A&gt;</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if appends are automatically retried if the log is full; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>하는 경우 추가 로그가 꽉 경우 자동으로 다시 시도 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The property was accessed after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 속성에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Occurs when the record sequence determines that the tail must be moved forward.</source>
          <target state="translated">레코드 시퀀스 꼬리를 앞으로 이동 해야 한다고 결정 하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can fire this event when the record sequence has run out of space.</source>
          <target state="translated">레코드 시퀀스에 공간이 부족이 이벤트를 발생 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</source>
          <target state="translated">이 이벤트는 발생 하는 경우 (즉, 기준 시퀀스 번호) 시퀀스의 테일이 공간을 확보 하 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</source>
          <target state="translated">공통 로그 파일 시스템 (CLFS)는 두 개의 재시작 영역 적어도 하나의 유효한 영역을 항상 사용할 수 있는지를 보장 하기 위해 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 CLFS 마지막 검사점 작업에서 재시작 영역을 모든 데이터를 읽습니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data in the byte array segments will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data in the byte array segments will be concatenated into a single byte array for appending as the record.</source>
          <target state="translated">바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and updates the base sequence number</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기준 시퀀스 번호를 업데이트</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">재시작 영역은 기록 되 면 바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">이 메서드가 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and updates the base sequence number.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기준 시퀀스 번호를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">재시작 영역은 기록 되 면 바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">이 메서드가 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a reservation, and updates the base sequence number</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기준 시퀀스 번호를 업데이트 하 고 예약을 사용 하 여</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">재시작 영역은 기록 되 면 바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">예약을 지정 하는 경우 쓴된 재시작 영역은 공간 이전에 예약 된, 컬렉션에 포함 된 예약을 사용 하 여을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</source>
          <target state="translated">메서드가 성공 하면 예약이 컬렉션에서 제거 됩니다 및 사용자 데이터를 포함할 수 있는 가장 작은 예약을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">이 메서드가 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 재시작 영역에 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, writes a restart area to the <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> using a reservation, and updates the base sequence number.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 재시작 영역을 씁니다.는 <bpt id="p1">&lt;xref href="System.IO.Log.IRecordSequence"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예약을 사용 하 고 기준 시퀀스 번호를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area is used to temporarily store information containing a client's last checkpoint operation.</source>
          <target state="translated">재시작 영역은 클라이언트의 마지막 검사점 작업이 포함 된 정보를 임시로 저장 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</source>
          <target state="translated">복구가 필요한 경우 마지막 검사점 작업에서 모든 데이터를 검색할 재시작 영역을 구문 분석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</source>
          <target state="translated">이 데이터를 복구 프로세스에서 사용할 수 있도록 트랜잭션 테이블, 더티 페이지 테이블 및 열린 파일 테이블 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>A restart area can be read using the &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt; method.</source>
          <target state="translated">사용 하 여 재시작 영역을 읽을 수는 &lt;xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A&gt;</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</source>
          <target state="translated">재시작 영역은 기록 되 면 바이트 배열 세그먼트의 데이터는 레코드로 추가 하기 위한 단일 바이트 배열로 연결 됩니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>No provision is made for splitting data back into array segments when the restart area is read.</source>
          <target state="translated">재시작 영역을 읽을 때 데이터를 배열 세그먼트로 다시 분할 하는 데 제공 되지 이루어집니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</source>
          <target state="translated">예약을 지정 하는 경우 쓴된 재시작 영역은 공간 이전에 예약 된, 컬렉션에 포함 된 예약을 사용 하 여을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</source>
          <target state="translated">메서드가 성공 하면 예약이 컬렉션에서 제거 됩니다 및 사용자 데이터를 포함할 수 있는 가장 작은 예약을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method successfully completes, the base sequence number has been updated.</source>
          <target state="translated">이 메서드가 성공적으로 완료 되 면 기준 세그먼트 번호가 업데이트 되었습니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>All log records with sequence numbers less than the new base sequence number are inaccessible.</source>
          <target state="translated">모든 로그 레코드 시퀀스 번호를 가진 액세스할 수 없는 새 기준 시퀀스 번호 보다 작은.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</source>
          <target state="translated">레코드 시퀀스가 삭제 되었거나, 또는 잘못 된 인수를 전달 하는 경우이 작업 내에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt; method is called.</source>
          <target state="translated">I/O 요청 중의 디스크 오류 예를 들어 비동기 추가 요청 중에 발생 한 오류 때 예외로 throw 됩니다는 &lt;xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;메서드를 호출 합니다.&lt;/xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A list of byte array segments that will be concatenated and appended as the record.</source>
          <target state="translated">연결을 여 레코드로 추가할 바이트 배열 세그먼트의 목록.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The new base sequence number.</source>
          <target state="translated">새 기준 시퀀스 번호입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The specified sequence number must be greater than or equal to the current base sequence number.</source>
          <target state="translated">지정 된 시퀀스 수는 현재 기준 시퀀스 번호 보다 크거나 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the reservation that should be used for this restart area.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 재시작 영역에 사용 해야 하는 예약이 포함 된입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The sequence number of the written restart area.</source>
          <target state="translated">쓴의 시퀀스 번호 영역 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">인수 중 하나 이상이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the restart area.</source>
          <target state="translated">재시작 영역을 쓰는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The record sequence could not make enough free space to contain the new restart area.</source>
          <target state="translated">레코드 시퀀스에서 새 재시작 영역을 포함 하도록 충분 한 공간이 만들지 못했습니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>