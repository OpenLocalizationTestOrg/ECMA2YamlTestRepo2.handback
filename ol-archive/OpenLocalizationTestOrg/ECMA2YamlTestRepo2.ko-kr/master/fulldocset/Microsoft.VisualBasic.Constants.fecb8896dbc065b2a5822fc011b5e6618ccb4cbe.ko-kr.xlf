<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41eab4421cd49a061e11f3e760b364a4f9838ce3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Constants.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">026e8475596d3b874d743e5e86f3fffada705b92</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88ebbefad05137884714c489b2120ef65b83bd6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_Constants" name="Constants" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> module contains miscellaneous constants.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Constants" name="Constants" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모듈 기타 상수를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>These constants can be used anywhere in your code.</source>
          <target state="translated">코드에서 아무 곳 이나 이러한 상수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</source>
          <target state="translated">이 모듈에서는 많은 Visual Basic 열거형의 멤버에 해당 하는 Visual Basic 언어 상수를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Abort" name="Abort" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Abort" name="Abort" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Abort" name="Abort" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref uid="langword_csharp_Ignore" name="Ignore" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> buttons will be displayed when the <bpt id="p4">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Abort" name="Abort" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 <bpt id="p3">&lt;xref uid="langword_csharp_Ignore" name="Ignore" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 단추 수 때 표시 되는 <bpt id="p4">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will be displayed as a modal dialog box when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">모달 대화 상자로 메시지 상자를 표시할지 나타냅니다 상자는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates that the file has changed since the last backup operation for file-access functions.</source>
          <target state="translated">파일 파일 액세스 함수에 대 한 마지막 백업 작업 이후 변경 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is an array.</source>
          <target state="translated">Variant 개체 형식이 배열 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Represents a backspace character for print and display functions.</source>
          <target state="translated">및 인쇄에 대 한 문자 백스페이스 나타냅니다 함수를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Specifies that a binary comparison should be performed when comparison functions are called.</source>
          <target state="translated">비교 함수를 호출할 때 이진 비교를 수행 한다는 것을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call comparison functions, you can use the &lt;xref:Microsoft.VisualBasic.CompareMethod&gt; enumeration in your code in place of the actual values.</source>
          <target state="translated">비교 함수를 호출할 때 사용할 수 있습니다는 &lt;xref:Microsoft.VisualBasic.CompareMethod&gt;실제 값 대신 코드에서 열거형.&lt;/xref:Microsoft.VisualBasic.CompareMethod&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument takes the <ph id="ph2">`CompareMethod`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> 인수는 <ph id="ph2">`CompareMethod`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For binary and text comparisons, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이진 및 텍스트 비교에 대 한 참조 <bpt id="p1">[</bpt>옵션 비교 문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Byte" name="Byte" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Byte" name="Byte" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character for print and display functions.</source>
          <target state="translated">및 인쇄에 대 한 문자 캐리지 리턴을 나타냅니다 함수를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Indicates that the critical message icon will be displayed when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">중요 한 메시지 아이콘 될 나타냅니다 때 표시 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character combined with a linefeed character for print and display functions.</source>
          <target state="translated">인쇄에 대 한 줄 바꿈 문자 및 표시 기능을 결합 캐리지 리턴 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Currency" name="Currency" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Currency" name="Currency" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Date" name="Date" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Decimal" name="Decimal" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Indicates that the leftmost button is selected as the default button when the message box appears.</source>
          <target state="translated">메시지 상자가 나타나면 기본 단추로 맨 왼쪽 단추가 선택 되어 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Indicates that the second button from the left is selected as the default button when the message box appears.</source>
          <target state="translated">메시지 상자가 나타나면 왼쪽에서 두 번째 단추가 기본 단추도 선택 되어 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Indicates that the third button from the left is selected as the default button when the message box appears.</source>
          <target state="translated">메시지 상자가 나타나면 왼쪽에서 세 번째 단추가 기본 단추도 선택 되어 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a directory or folder for file-access functions.</source>
          <target state="translated">파일 디렉터리 또는 파일 액세스 함수에 대 한 폴더를 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Double" name="Double" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Empty" name="Empty" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Empty" name="Empty" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Indicates that the exclamation icon will be displayed when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">느낌표 아이콘 될 나타냅니다 때 표시 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Indicates that a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value of <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should be used when number-formatting functions are called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값 <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 숫자 형식 지정 함수가 호출 될 때 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">때 전화 번호 형식 지정 함수를 사용할 수 있습니다 실제 값 대신 코드에서 다음 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</source>
          <target state="translated">최소&amp;4; 일에 한 해의 첫 번째 주 사용할 날짜 관련 함수를 호출할 때를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstWeekOfYear`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`WeekOfYear`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`WeekOfYear`</ph> 인수는 <ph id="ph2">`FirstWeekOfYear`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Indicates that the first full week of the year should be used when date-related functions are called.</source>
          <target state="translated">해당 연도의 첫 번째 전체 주 날짜 관련 함수를 호출할 때 사용 해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstWeekOfYear`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`WeekOfYear`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`WeekOfYear`</ph> 인수는 <ph id="ph2">`FirstWeekOfYear`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</source>
          <target state="translated">1 월 1 일이 날짜 관련 함수를 호출할 때 사용 해야 하는 해당 연도의 주를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstWeekOfYear`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`WeekOfYear`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`WeekOfYear`</ph> 인수는 <ph id="ph2">`FirstWeekOfYear`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Represents a form-feed character for print functions.</source>
          <target state="translated">인쇄 기능에 대 한 용지 공급 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Specifies that Friday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 금요일을 사용 해야 함을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Indicates that the general date format for the current culture should be used when the <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">현재 문화권에 대 한 일반 날짜 형식을 해야 함을 나타내는 때 사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`FormatDateTime`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 두 번 클릭 하 여 컴퓨터의 국가별 설정에 액세스할 수 있습니다는 <bpt id="p1">**</bpt>국가별 옵션<ept id="p1">**</ept> 아이콘을 <bpt id="p2">**</bpt>제어판<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Specifies that a property value should be retrieved when the <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">속성 값 이어야 함을 지정 될 때 검색는 <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`CallByName`</ph> 함수를 다음을 사용할 수 있습니다 <ph id="ph2">`CallType`</ph> 실제 값 대신 코드에서 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`UseCallType`</ph> 인수는 <ph id="ph2">`CallType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a hidden file for file-access functions.</source>
          <target state="translated">파일 파일 액세스 함수에 대 한 숨겨진된 파일 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is hidden for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일 숨겨짐을 나타냅니다 때 프로그램에서 호출에 대 한는 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Indicates Hiragana characters should be converted to Katakana characters when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">히라가나 문자를 가타카나로 변환 되어야 나타냅니다 때 문자는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Ignore" name="Ignore" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Ignore" name="Ignore" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Indicates that the information icon will display when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">경우 정보 아이콘 표시 됨을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Indicates that Katakana characters should be converted to Hiragana characters when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">가타카나 문자를 히라가나를 변환할 때 문자를 입력 하 고 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Indicates that a property value should be set to an object instance when the <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">속성 값을 개체로 설정 되어야 함을 나타냅니다 인스턴스에 <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`CallByName`</ph> 함수를 다음을 사용할 수 있습니다 <ph id="ph2">`CallType`</ph> 실제 값 대신 코드에서 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`UseCallType`</ph> 인수는 <ph id="ph2">`CallType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Represents a linefeed character for print and display functions.</source>
          <target state="translated">인쇄에 대 한 문자 및 함수를 표시 하는 줄 바꿈 나타냅니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">문자 때 대/소문자 구분에 대 한 파일 시스템 규칙 대신 대/소문자 구분에 대 한 언어 규칙을 사용 하도록 변환 되어야 함을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Indicates the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체의 형식이 나타냅니다 <bpt id="p1">&lt;xref uid="langword_csharp_Long" name="Long" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Indicates that the long date format for the current culture should be used when the <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">현재 문화권에 대 한 자세한 날짜 형식 해야 함을 나타내는 때 사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`FormatDateTime`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 두 번 클릭 하 여 컴퓨터의 국가별 설정에 액세스할 수 있습니다는 <bpt id="p1">**</bpt>국가별 옵션<ept id="p1">**</ept> 아이콘을 <bpt id="p2">**</bpt>제어판<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Indicates that the long time format for the current culture should be used when the <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">현재 문화권에 대 한 자세한 시간 형식을 해야 함을 나타내는 때 사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`FormatDateTime`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 두 번 클릭 하 여 컴퓨터의 국가별 설정에 액세스할 수 있습니다는 <bpt id="p1">**</bpt>국가별 옵션<ept id="p1">**</ept> 아이콘을 <bpt id="p2">**</bpt>제어판<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to lowercase when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">문자를 소문자로 경우 변환 되어야 함을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is maximized with focus for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일에서 호출에 대 한 포커스를 최대화 됩니다 나타냅니다 프로그래밍할 때는 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Specifies that a method should be called when the <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">메서드를 호출 해야 함을 때 지정 된 <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`CallByName`</ph> 함수를 다음을 사용할 수 있습니다 <ph id="ph2">`CallType`</ph> 실제 값 대신 코드에서 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`UseCallType`</ph> 인수는 <ph id="ph2">`CallType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is minimized with focus for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일에서 호출에 대 한 포커스가 있는 최소화 됨을 나타냅니다 프로그래밍할 때의 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is minimized without focus for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일에서 호출에 대 한 포커스 없이 최소화 됨을 나타냅니다 프로그래밍할 때의 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Specifies that Monday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날을 월요일을 사용 해야 함을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Help" name="Help" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button will be displayed when the <bpt id="p2">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Help" name="Help" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 단추가 됩니다 때 표시 되는 <bpt id="p2">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Indicates that text will be right-aligned when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">텍스트는 오른쪽 맞춤 때 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">오른쪽에서 왼쪽으로 텍스트 읽기 (히브리어 및 아랍어 시스템) 된다는 것을 나타냅니다 때 표시 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will display in the foreground when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">메시지 상자 포그라운드에서 표시 됨을 나타냅니다 때는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">(더블 바이트)를 와이드 문자로 변환 되어야 함을 나타냅니다 (단일 바이트)를 좁히거나 때 문자는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Represents a newline character for print and display functions.</source>
          <target state="translated">인쇄에 대 한 문자 및 함수를 표시 하는 줄 바꿈 나타냅니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a normal file for file-access functions.</source>
          <target state="translated">파일 파일 액세스 함수에 대 한 일반적인 파일 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is normal with focus for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일에서 호출에 대 한 포커스가 있는 표준을 프로그래밍할 때는 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is normal without focus for the invoked program when the <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">창 스타일에서 호출에 대 한 포커스 없이 표준 임을 나타냅니다 프로그래밍할 때의 <bpt id="p1">&lt;xref uid="langword_csharp_Shell" name="Shell" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">실행 하면 <ph id="ph1">`Shell`</ph> 명령, 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Style`</ph> 인수는 <ph id="ph2">`AppWinStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Represents a null character for print and display functions.</source>
          <target state="translated">인쇄에 대 한 문자 및 함수를 표시 하는 null 나타냅니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Represents a zero-length string for print and display functions, and for calling external procedures.</source>
          <target state="translated">인쇄에 대 한 문자열 및 함수를 표시 합니다. 길이가&amp;0; 인 나타냅니다 및 외부 프로시저를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Represents the object error number.</source>
          <target state="translated">개체의 오류 번호를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>User-defined error numbers should be greater than this value.</source>
          <target state="translated">사용자 정의 오류 번호는이 값 보다 커야 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> buttons will be displayed when the <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 단추 수 때 표시 되는 <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Indicates that only the <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button will be displayed when the <bpt id="p2">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">됨을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_OK" name="OK" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 단추가 됩니다 때 표시 되는 <bpt id="p2">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">함을 나타냅니다는 문자열에서 모든 단어의 첫 글자를 대문자로 변환할 나머지 때 소문자로 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Indicates that the question icon will be displayed when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">물음표 아이콘 될 나타냅니다 때 표시 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a read-only file for file-access functions.</source>
          <target state="translated">파일 파일 액세스 함수에 대 한 읽기 전용 파일 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> buttons will be displayed when the <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Retry" name="Retry" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 단추 수 때 표시 되는 <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Specifies that Saturday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 토요일 쓰일 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Indicates that a property value should be set when the <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">속성 값을 설정 되어야 함을 때 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_CallByName" name="CallByName" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`CallByName`</ph> 함수를 다음을 사용할 수 있습니다 <ph id="ph2">`CallType`</ph> 실제 값 대신 코드에서 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`UseCallType`</ph> 인수는 <ph id="ph2">`CallType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Indicates that the short-date format for the current culture should be used when the <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">현재 문화권에 대 한 간단한 날짜 형식 해야 함을 나타내는 때 사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`FormatDateTime`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 두 번 클릭 하 여 컴퓨터의 국가별 설정에 액세스할 수 있습니다는 <bpt id="p1">**</bpt>국가별 옵션<ept id="p1">**</ept> 아이콘을 <bpt id="p2">**</bpt>제어판<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Indicates that the short-time format for the current culture should be used when the <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">현재 문화권의 짧은 시간 형식을 해야 함을 나타내는 때 사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_FormatDateTime" name="FormatDateTime" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`FormatDateTime`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 두 번 클릭 하 여 컴퓨터의 국가별 설정에 액세스할 수 있습니다는 <bpt id="p1">**</bpt>국가별 옵션<ept id="p1">**</ept> 아이콘을 <bpt id="p2">**</bpt>제어판<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to Simplified Chinese when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">문자를 간체로 변환 되어야 함을 나타냅니다 때는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Single" name="Single" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Single" name="Single" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Specifies that Sunday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 일요일 쓰일 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a system file for file-access functions.</source>
          <target state="translated">파일 파일 액세스 함수에 대 한 시스템 파일 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will be displayed as a modal dialog box when the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">모달 대화 상자로 메시지 상자를 표시할지 나타냅니다 상자는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Represents a tab character for print and display functions.</source>
          <target state="translated">인쇄에 대 한 문자 및 함수를 표시 하는 탭 나타냅니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Indicates that a text comparison should be performed when comparison functions are called.</source>
          <target state="translated">비교 함수를 호출할 때 텍스트 비교를 수행 해야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call comparison functions, you can use the &lt;xref:Microsoft.VisualBasic.CompareMethod&gt; enumeration in your code in place of the actual values.</source>
          <target state="translated">비교 함수를 호출할 때 사용할 수 있습니다는 &lt;xref:Microsoft.VisualBasic.CompareMethod&gt;실제 값 대신 코드에서 열거형.&lt;/xref:Microsoft.VisualBasic.CompareMethod&gt;</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument takes the <ph id="ph2">`CompareMethod`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Compare`</ph> 인수는 <ph id="ph2">`CompareMethod`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about more information about binary and text comparisons, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이진 및 텍스트 비교 하는 방법에 대 한 자세한 정보에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>옵션 비교 문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Specifies that Thursday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 목요일 쓰일 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to Traditional Chinese when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">중국어 번체 때도 문자 변환 되어야 함을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Indicates that a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value of <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should be used when number-formatting functions are called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값 <bpt id="p2">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 숫자 형식 지정 함수가 호출 될 때 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">때 전화 번호 형식 지정 함수를 사용할 수 있습니다 실제 값 대신 코드에서 다음 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 화요일 쓰일 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to uppercase when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">문자 하면 모두 대문자로 변환 되어야 함을 나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Indicates that the default <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value should be used when number-formatting functions are called.</source>
          <target state="translated">나타냅니다 기본 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 숫자 형식 지정 함수가 호출 될 때 값이 사용 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">때 전화 번호 형식 지정 함수를 사용할 수 있습니다 실제 값 대신 코드에서 다음 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is a user-defined type.</source>
          <target state="translated">Variant 개체 유형의 사용자 정의 형식의 임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</source>
          <target state="translated">지정한 함을 나타냅니다 주 시스템에서 사용 해야 하는 해당 연도의 첫 번째 주 날짜 관련 함수 호출 될 때입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstWeekOfYear`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`WeekOfYear`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`WeekOfYear`</ph> 인수는 <ph id="ph2">`FirstWeekOfYear`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</source>
          <target state="translated">지정한 함을 나타냅니다 일 시스템에서 사용 해야 하는 첫 번째 요일 날짜 관련 함수 호출 될 때입니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <bpt id="p1">&lt;xref uid="langword_csharp_Variant" name="Variant" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Variant 개체 형식을 <bpt id="p1">&lt;xref uid="langword_csharp_Variant" name="Variant" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_VarType" name="VarType" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`VarType`</ph> 함수를 실제 값 대신 코드에서 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
          <target state="translated"><ph id="ph1">`VariantType`</ph> 가능한 식별 하는 데 사용 되는 상수를 정의 하는 열거형 <ph id="ph2">`Variant`</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
          <target state="translated">다음 표에 <ph id="ph1">`VariantType`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character for print functions.</source>
          <target state="translated">인쇄 기능에 대 한 캐리지 리턴 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Indicates the volume label file attribute for file-access functions.</source>
          <target state="translated">파일 액세스 함수에 대 한 볼륨 레이블 파일 특성을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute is not valid for the <ph id="ph1">`SetAttr`</ph> function.</source>
          <target state="translated">이 특성에 대해 올바르지 않습니다.는 <ph id="ph1">`SetAttr`</ph> 함수입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, 또는 <ph id="ph3">`SetAttr`</ph> 함수, 있습니다 사용할 수 있는 <ph id="ph4">`FileAttribute`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Attributes`</ph> 인수는 <ph id="ph2">`FileAttribute`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
          <target state="translated">파일 I/O 작업을 수행 하는 경우는 <ph id="ph1">`My.Computer.FileSystem`</ph> 개체 성능이 향상 되 고 기존 파일 보다 사용 편의성 I/O 메서드 제공 합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:Microsoft.VisualBasic.FileSystem&gt; object.</source>
          <target state="translated">자세한 내용은 참조 &lt;xref:Microsoft.VisualBasic.FileSystem&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.FileSystem&gt;</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</source>
          <target state="translated">날짜 관련 함수 호출 될 때 해당 주의 첫 번째 날으로 수요일 쓰일 수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">날짜 관련 함수를 호출할 때 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
          <target state="translated">일부 날짜 관련 함수는 <ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`WeekOfYear`</ph> 인수 중 하나 또는 둘 다 합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
          <target state="translated"><ph id="ph1">`FirstDayOfWeek`</ph> 에 대 한 유효한 값을 지정 하는 열거형은 <ph id="ph2">`DayOfWeek`</ph> 으로 인수, 함수에서 가능한 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`DayOfWeek`</ph> 인수는 <ph id="ph2">`FirstDayOfWeek`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
          <target state="translated">날짜 관련 함수 또한 반환할 <ph id="ph1">`FirstDayOfWeek`</ph> 값 (제외 하 고 <ph id="ph2">`System`</ph>).</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">좁은 (싱글 바이트) 문자를 변환 되어야 함을 나타냅니다 때 (더블 바이트) 와이드 문자는 <bpt id="p1">&lt;xref uid="langword_csharp_StrConv" name="StrConv" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`StrConv`</ph> 함수를 실제 값 대신 코드의 다음 열거형 멤버를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Conversion`</ph> 인수는 <ph id="ph2">`VbStrConv`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> button was clicked in a message box.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 메시지 상자에 단추가 클릭 되었습니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Returned by the <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> function.</source>
          <target state="translated">반환 되는 <bpt id="p1">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 함수입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxResult`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">`MsgBox`</ph> 함수에서 반환 된 <ph id="ph2">`MsgBoxResult`</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> buttons will be displayed when the <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 단추 수 때 표시 되는 <bpt id="p3">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Indicates that the <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, and <bpt id="p3">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> buttons will be displayed when the <bpt id="p4">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> function is called.</source>
          <target state="translated">나타냅니다는 <bpt id="p1">&lt;xref uid="langword_csharp_Yes" name="Yes" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref uid="langword_csharp_No" name="No" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 및 <bpt id="p3">&lt;xref uid="langword_csharp_Cancel" name="Cancel" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 단추 수 때 표시 되는 <bpt id="p4">&lt;xref uid="langword_csharp_MsgBox" name="MsgBox" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 함수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`MsgBox`</ph> 함수, 있습니다 사용할 수 있습니다는 <ph id="ph2">`MsgBoxStyle`</ph> 실제 값 대신 코드의 열거형입니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
          <target state="translated"><ph id="ph1">`Buttons`</ph> 인수는 <ph id="ph2">`MsgBoxStyle`</ph> 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>