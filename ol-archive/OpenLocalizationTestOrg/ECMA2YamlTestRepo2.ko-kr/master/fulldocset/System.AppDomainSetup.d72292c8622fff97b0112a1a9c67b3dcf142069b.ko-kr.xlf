<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c9f6caf8892a263ecf850268a486d819fd42561</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AppDomainSetup.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b8f0e37a5714cfce5a73d48848ef79c7c1e45d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2f1f245328ec1275ee7b10b330ffbf5e6c025e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents assembly binding information that can be added to an instance of <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">인스턴스를 추가할 수 있는 어셈블리 바인딩 정보를 나타내는 <bpt id="p1">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the properties of an AppDomainSetup instance does not affect any existing &lt;xref:System.AppDomain&gt;.</source>
          <target state="translated">모든 기존 &lt;xref:System.AppDomain&gt;.&lt;/xref:System.AppDomain&gt; 영향을 주지 않습니다 AppDomainSetup 인스턴스의 속성 변경</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can affect only the creation of a new &lt;xref:System.AppDomain&gt;, when the &lt;xref:System.AppDomain.CreateDomain%2A&gt; method is called with the AppDomainSetup instance as a parameter.</source>
          <target state="translated">만들 때에 새의 영향을 줄 수 &lt;xref:System.AppDomain&gt;때는 &lt;xref:System.AppDomain.CreateDomain%2A&gt;AppDomainSetup 인스턴스를 매개 변수로 여 메서드를 호출 합니다.&lt;/xref:System.AppDomain.CreateDomain%2A&gt; &lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class implements the &lt;xref:System.IAppDomainSetup&gt; interface.</source>
          <target state="translated">이 클래스가 구현 하는 &lt;xref:System.IAppDomainSetup&gt;인터페이스.&lt;/xref:System.IAppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the &lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt; property is false.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt;에 대 한 기본값은 &lt;xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;속성이 false입니다.&lt;/xref:System.AppDomainSetup.DisallowCodeDownload%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting is unsafe for services.</source>
          <target state="translated">이 설정은 서비스에 대 한 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To help prevent services from downloading partially trusted code, set this property to true</source>
          <target state="translated">서비스 부분적으로 신뢰할 수 있는 코드를 다운로드 하는 것을 방지 하려면이 속성을 true로 설정</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation context to use for manifest-based activation of an application domain.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 도메인의 매니페스트 기반 활성화에 사용할 지정 된 활성화 컨텍스트를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ActivationContext&gt; object specified for <ph id="ph1">`activationContext`</ph> is used to generate an &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object containing information required to activate a new application domain.</source>
          <target state="translated">&lt;xref:System.ActivationContext&gt;개체에 대해 지정 된 <ph id="ph1">`activationContext`</ph> 생성 하는 데 사용 되는 &lt;xref:System.Runtime.Hosting.ActivationArguments&gt;새 응용 프로그램 도메인을 활성화 하는 데 필요한 정보가 들어 있는 개체입니다.&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt; &lt;/xref:System.ActivationContext&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">이 &lt;xref:System.Runtime.Hosting.ActivationArguments&gt;개체를 사용 하 여 액세스할 수는 &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;속성.&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt; &lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The activation context to be used for an application domain.</source>
          <target state="translated">응용 프로그램 도메인에 사용할 활성화 컨텍스트.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified activation arguments required for manifest-based activation of an application domain.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 응용 프로그램 도메인의 매니페스트 기반 활성화에 필요한 지정 된 활성화 인수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object specified for <ph id="ph1">`activationArguments`</ph> can be accessed by using the &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt; property.</source>
          <target state="translated">에 대 한 지정 된 개체가 <ph id="ph1">`activationArguments`</ph> 를 사용 하 여 액세스할 수는 &lt;xref:System.AppDomainSetup.ActivationArguments%2A&gt;속성.&lt;/xref:System.AppDomainSetup.ActivationArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object that specifies information required for the manifest-based activation of a new application domain.</source>
          <target state="translated">새 응용 프로그램 도메인의 매니페스트 기반 활성화에 필요한 정보를 지정 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;activationArguments&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets data about the activation of an application domain.</source>
          <target state="translated">응용 프로그램 도메인의 활성화에 대 한 데이터를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown if this property is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 속성은로 설정 하는 경우 예외가 throw 되지 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information provided by the &lt;xref:System.Runtime.Hosting.ActivationArguments&gt; object supports manifest-based activation.</source>
          <target state="translated">제공한 정보는 &lt;xref:System.Runtime.Hosting.ActivationArguments&gt;개체가 매니페스트 기반 활성화를 지원 합니다.&lt;/xref:System.Runtime.Hosting.ActivationArguments&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object that contains data about the activation of an application domain.</source>
          <target state="translated">응용 프로그램 도메인의 활성화에 대 한 데이터를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ApplicationTrust<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ApplicationTrust<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성는 <bpt id="p1">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 응용 프로그램 id의 응용 프로그램 id와 일치 하지 않습니다는 <bpt id="p2">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 반환 된 개체는 &lt;&gt; &lt;/&gt; <bpt id="p3">*</bpt>&gt; 속성. 경우 예외가 throw 되는 &lt;&gt; &lt;/&gt; <ept id="p3">*</ept>&gt; 속성은 <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, which represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 도메인이 초기화 될 때 호출 되는 콜백 메서드를 나타내는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To pass information to the callback method, assign an array of strings to the &lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt; property.</source>
          <target state="translated">콜백 메서드에 정보를 전달 하려면 문자열의 배열에 할당할는 &lt;xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;속성.&lt;/xref:System.AppDomainSetup.AppDomainInitializerArguments%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array is passed to the callback method each time an &lt;xref:System.AppDomain&gt; is initialized.</source>
          <target state="translated">배열의 때마다 콜백 메서드로 전달 되는 &lt;xref:System.AppDomain&gt;초기화 됩니다.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">콜백 메서드는 새로 만든된 응용 프로그램 도메인의 컨텍스트에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A delegate that represents a callback method that is invoked when the application domain is initialized.</source>
          <target state="translated">응용 프로그램 도메인이 초기화 될 때 호출 되는 콜백 메서드를 나타내는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the arguments passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate.</source>
          <target state="translated">가 나타내는 콜백 메서드로 전달 된 인수를 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The callback method is invoked when the application domain is initialized.</source>
          <target state="translated">콜백 메서드는 응용 프로그램 도메인이 초기화 될 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property to specify a callback method that is invoked during &lt;xref:System.AppDomain&gt; initialization.</source>
          <target state="translated">사용 하 여 &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;속성을 지정 하는 동안 호출 되는 콜백 메서드 &lt;xref:System.AppDomain&gt;초기화.&lt;/xref:System.AppDomain&gt; &lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt; property is not set, the array assigned to this property is not used.</source>
          <target state="translated">경우는 &lt;xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;속성이 설정 되지 않으면,이 속성에 할당 된 배열 사용 되지 않습니다.&lt;/xref:System.AppDomainSetup.AppDomainInitializer%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback method is executed in the context of the newly created application domain.</source>
          <target state="translated">콜백 메서드는 새로 만든된 응용 프로그램 도메인의 컨텍스트에서 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of strings that is passed to the callback method represented by the <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> delegate, when the callback method is invoked during <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> initialization.</source>
          <target state="translated">가 나타내는 콜백 메서드로 전달 되는 문자열 배열을 <bpt id="p1">&lt;xref href="System.AppDomainInitializer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대리자를 하는 동안 콜백 메서드가 호출 되 면 <bpt id="p2">&lt;xref href="System.AppDomain"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 사용 하 여 만든 응용 프로그램 도메인에 대 한 응용 프로그램 도메인 관리자의 형식을 제공 하는 어셈블리의 표시 이름을 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The display name of the assembly that provides the &lt;xref:System.Type&gt; of the application domain manager.</source>
          <target state="translated">제공 하는 어셈블리의 표시 이름을 &lt;xref:System.Type&gt;응용 프로그램 도메인 관리자의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the full name of the type that provides the application domain manager for application domains created using this <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 사용 하 여 만든 응용 프로그램 도메인에 대 한 응용 프로그램 도메인 관리자가 제공 하는 형식의 전체 이름을 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The full name of the type, including the namespace.</source>
          <target state="translated">네임 스페이스를 포함 하는 형식의 전체 이름입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the directory containing the application.</source>
          <target state="translated">응용 프로그램을 포함 하는 디렉터리의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application base directory is where the assembly manager begins probing for assemblies.</source>
          <target state="translated">응용 프로그램 기본 디렉터리에서 어셈블리 관리자 시작 어셈블리에 대 한 검색입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ApplicationBase property can influence which permissions are granted to an application domain.</source>
          <target state="translated">ApplicationBase 속성 응용 프로그램 도메인에 부여 되는 권한에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</source>
          <target state="translated">예를 들어 일반적으로 로컬 컴퓨터에서 시작 된 응용 프로그램 도메인은 원래 위치에 따라 완전 신뢰를 받습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the ApplicationBase property of that &lt;xref:System.AppDomain&gt; is set to the full name of an intranet directory, the ApplicationBase setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</source>
          <target state="translated">그러나 경우 ApplicationBase 속성의 &lt;xref:System.AppDomain&gt;설정은 응용 프로그램 도메인은 실제로 로컬 컴퓨터에서 발생 하는 경우에 LocalIntranet grant 응용 프로그램 도메인에 부여 된 권한을 제한 ApplicationBase 인트라넷 디렉터리의 전체 이름으로 설정 됩니다.&lt;/xref:System.AppDomain&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name of the application base directory.</source>
          <target state="translated">응용 프로그램 기본 디렉터리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the application.</source>
          <target state="translated">응용 프로그램의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the application.</source>
          <target state="translated">응용 프로그램의 이름입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets an object containing security and trust information.</source>
          <target state="translated">보안과 신뢰 정보가 들어 있는 개체를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is <ph id="ph1">`null`</ph> when the &lt;xref:System.AppDomainSetup&gt; is created.</source>
          <target state="translated">이 속성은 <ph id="ph1">`null`</ph> 때는 &lt;xref:System.AppDomainSetup&gt;만들어집니다.&lt;/xref:System.AppDomainSetup&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once changed, it cannot be reset to a null reference.</source>
          <target state="translated">이 변경 되 면 null 참조로 다시 설정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An object that contains security and trust information.</source>
          <target state="translated">보안 및 신뢰 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The property is set to an <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object whose application identity does not match the application identity of the <bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.AppDomainSetup.ActivationArguments<bpt id="p3">*</bpt>&gt; property. No exception is thrown if the &lt;xref:System.AppDomainSetup.ActivationArguments<ept id="p3">*</ept>&gt; property is <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성는 <bpt id="p1">&lt;xref href="System.Security.Policy.ApplicationTrust"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 응용 프로그램 id의 응용 프로그램 id와 일치 하지 않습니다는 <bpt id="p2">&lt;xref href="System.Runtime.Hosting.ActivationArguments"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 반환 된 개체는 &lt;&gt; &lt;/&gt; <bpt id="p3">*</bpt>&gt; 속성. 경우 예외가 throw 되는 &lt;&gt; &lt;/&gt; <ept id="p3">*</ept>&gt; 속성은 <bpt id="p4">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The property is set to <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성이로 설정 되어 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an area specific to the application where files are shadow copied.</source>
          <target state="translated">영역 이름을 관련 가져오거나 응용 프로그램에 파일을 섀도 복사 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for this property to have an effect, the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property must also be set.</source>
          <target state="translated">이 속성을 적용을 위해는 &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;속성 설정 해야 합니다.&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt; property is not set, the CachePath property is ignored and the shadow copy cache location defaults to the download cache.</source>
          <target state="translated">경우는 &lt;xref:System.AppDomainSetup.ApplicationName%2A&gt;속성이 설정 되지 않은, CachePath 속성이 무시 되 고 섀도 복사본 캐시 위치는 다운로드 캐시 기본적으로.&lt;/xref:System.AppDomainSetup.ApplicationName%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">섀도 복사에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>어셈블리 섀도 복사<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the directory path and file name where files are shadow copied.</source>
          <target state="translated">파일을 섀도 복사한 디렉터리 경로 파일의 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the configuration file for an application domain.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 구성 파일의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file describes the search rules and configuration data for the application domain.</source>
          <target state="translated">구성 파일 검색 규칙 및 응용 프로그램 도메인에 대 한 구성 데이터를 설명합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</source>
          <target state="translated">응용 프로그램 도메인을 만드는 호스트는 의미 있는 값 다 상황에 있기 때문에이 데이터를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</source>
          <target state="translated">예를 들어 ASP.NET 응용 프로그램에 대 한 구성 데이터는 각 응용 프로그램, 사용자 및 컴퓨터에 대 한 실행 파일에 대 한 구성 데이터는 저장 하는 동안 각 응용 프로그램, 사이트 및 컴퓨터에 대 한 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the host knows the specifics of the configuration data for a particular circumstance.</source>
          <target state="translated">호스트만 특정 상황에 대 한 구성 데이터의 고유 정보를 알고 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the configuration file.</source>
          <target state="translated">구성 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</source>
          <target state="translated">로드할 어셈블리를 검색할 때 응용 프로그램 기본 경로 전용 이진 경로 검색할지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the DisallowApplicationBaseProbing property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property is ignored.</source>
          <target state="translated">DisallowApplicationBaseProbing 속성이 <ph id="ph1">`true`</ph>의 값은 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;속성은 무시 됩니다.&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, no assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; property.</source>
          <target state="translated">즉, 어셈블리가 없는에서 검색 하 여 지정 된 디렉터리는 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;속성.&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the values of the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property and the &lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; property are ignored.</source>
          <target state="translated">또한 값은 &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;속성 및 &lt;xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt;속성은 무시 됩니다.&lt;/xref:System.AppDomainSetup.PrivateBinPathProbe%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>No assemblies are probed for in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; property.</source>
          <target state="translated">어셈블리가 없는으로 지정 된 디렉터리에서 검색 된 &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;속성.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DisallowApplicationBaseProbing property provides an additional layer of control over the loading process.</source>
          <target state="translated">DisallowApplicationBaseProbing 속성 추가적 로드 프로세스에 대 한 제어를 제공합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the normal assembly loading sequence, the application base is probed before the &lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt; event is raised.</source>
          <target state="translated">일반 어셈블리 로딩 시퀀스, 응용 프로그램 기준 위치 하기 전에 검색 된는 &lt;xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;이벤트가 발생 합니다.&lt;/xref:System.AppDomain.AssemblyResolve?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties.</source>
          <target state="translated">그러나 일부 응용 프로그램에서 지정 된 디렉터리에서 또는 전역 어셈블리 캐시에 고유한 알려진된 위치 또는 문서 내 OLE 복합 파일에서 어셈블리를 로드 해야 할 수는 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;및 &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;속성.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such applications can use the DisallowApplicationBaseProbing property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</source>
          <target state="translated">일반 검색로 인해 지연이 발생을 방지 하 고 일반 검색 경로에 위치할 수 있습니다 하는 데 필요한 어셈블리의 복사본을 로드 하지 않도록 하려면 이러한 응용 프로그램 DisallowApplicationBaseProbing 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if probing is not allowed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>검색이 허용 되지 않으면; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</source>
          <target state="translated">응용 프로그램 도메인에서 어셈블리 바인딩 리디렉션을 허용 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DisallowBindingRedirects property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</source>
          <target state="translated">DisallowBindingRedirects 속성은 서비스 및 서버 응용 프로그램에서 사용할 수 있는 어셈블리 바인딩 리디렉션에 속하지 않는 응용 프로그램 시나리오 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if redirection of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>어셈블리 리디렉션이 허용 되지 않으면; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 허용 된 경우.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 어셈블리의 HTTP 다운로드 허용 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DisallowCodeDownload property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</source>
          <target state="translated">DisallowCodeDownload 속성 인트라넷 또는 인터넷에서 코드를 다운로드 하지 않은 응용 프로그램 시나리오의 일부 서비스 및 서버 응용 프로그램에서 사용할 수 있도록입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The default value for the DisallowCodeDownload property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; DisallowCodeDownload 속성에 대 한 기본값은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting is unsafe for services.</source>
          <target state="translated">이 설정은 서비스에 대 한 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To help prevent services from downloading partially trusted code, set this property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">서비스 부분적으로 신뢰할 수 있는 코드를 다운로드 하는 것을 방지 하려면이 속성을 설정 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if HTTP download of assemblies is not allowed; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if it is allowed.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>어셈블리의 HTTP 다운로드 허용 되지 않습니다. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 허용 된 경우.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>publisherPolicy<ph id="ph2">&amp;gt;</ph><ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept> section of the configuration file is applied to an application domain.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>l i c y<ph id="ph2">&amp;gt;</ph> <ept id="p1">](../Topic/%3CpublisherPolicy%3E%20Element.md)</ept> 구성 파일의 응용 프로그램 도메인에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DisallowPublisherPolicy property specifically applies to a Web application that is loaded locally.</source>
          <target state="translated">DisallowPublisherPolicy 속성은 구체적으로 로컬에서 로드 되는 웹 응용 프로그램에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</source>
          <target state="translated">안전 모드에서 안전 하지 않은 웹 응용 프로그램을 실행 하는 악의적인 시도 방지 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about bypassing publisher policy, see the <bpt id="p1">[</bpt>Redirecting Assembly Versions<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">게시자 정책을 무시 하는 방법에 대 한 자세한 내용은 참조는 <bpt id="p1">[</bpt>어셈블리 버전 리디렉션<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about safe mode, see the "Examining the Configuration Files" section of the <bpt id="p1">[</bpt>How the Runtime Locates Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> topic.</source>
          <target state="translated">안전 모드에 대 한 자세한 내용은의 "구성 파일 검사" 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>런타임에서 어셈블리를 찾는 방법을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> section of the configuration file for an application domain is ignored; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if the declared publisher policy is honored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref uid="langword_csharp_&amp;lt;publisherPolicy&amp;gt;" name="&amp;lt;publisherPolicy&amp;gt;" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 응용 프로그램 도메인에 대 한 구성 파일의 설정은 무시 됩니다. <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 선언 된 게시자 정책 인 경우 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets the base directory where the directory for dynamically generated files is located.</source>
          <target state="translated">동적으로 생성 된 파일의 디렉터리를 위치한 기본 디렉터리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The directory where the <ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> is located.</source>
          <target state="translated">디렉터리 위치는 <ph id="ph1">&amp;lt;</ph>xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 있는 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The return value of this property is different from the value assigned.</source>
          <target state="translated">이 속성의 반환 값은 할당 된 값과에서 다릅니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>See the Remarks section.</source>
          <target state="translated">주의 섹션을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This property cannot be set because the application name on the application domain is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">응용 프로그램 도메인에서 응용 프로그램 이름 이므로이 속성을 설정할 수 없습니다 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the XML configuration information set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt; method, which overrides the application's XML configuration information.</source>
          <target state="translated">설정한 XML 구성 정보를 반환 된 &lt;xref:System.AppDomainSetup.SetConfigurationBytes*&gt;메서드를 응용 프로그램의 XML 구성 정보를 재정의 합니다.&lt;/xref:System.AppDomainSetup.SetConfigurationBytes*&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method provides a way to override the configuration information of an application that creates a new application domain.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;메서드를 새 응용 프로그램 도메인을 만드는 응용 프로그램의 구성 정보를 재정의 하는 방법을 제공 합니다.&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file information in <ph id="ph1">`value`</ph> overrides the configuration file information for the application.</source>
          <target state="translated">구성 파일 정보 <ph id="ph1">`value`</ph> 응용 프로그램에 대 한 구성 파일 정보를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</source>
          <target state="translated">예를 들어 Example.exe 응용 프로그램이 새 응용 프로그램 도메인을 만들 때 처음에 확보 Example.exe.config 파일에서 구성 정보를 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 구성 파일에 대 한 정보의 소비자가 저장 한 정보를 사용 하지 마십시오는 &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;메서드.&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime does not enforce this.</source>
          <target state="translated">런타임에서이 적용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that all configuration file information is overridden in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">사용을 보장 하기 위해 모든 구성 파일 정보는 새 응용 프로그램 도메인에서 재정의 되는 &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;속성을 구성 파일을 지정 합니다.&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt; method does affect assembly binding.</source>
          <target state="translated">&lt;xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;메서드는 어셈블리 바인딩 영향이.&lt;/xref:System.AppDomainSetup.SetConfigurationBytes%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">XML <ph id="ph1">`value`</ph> 같습니다 일반 구성 파일에서 XML로 저장 된 제외 하 고는 &lt;xref:System.Byte&gt;배열.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the configuration bytes for an application domain, use the &lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt; property to get the &lt;xref:System.AppDomainSetup&gt; object for the application domain, then use the GetConfigurationBytes method.</source>
          <target state="translated">응용 프로그램 도메인에 대 한 구성 바이트에 액세스 하려면 사용 하 여는 &lt;xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;가져올 속성의 &lt;xref:System.AppDomainSetup&gt;개체 응용 프로그램 도메인에 대 한 다음 GetConfigurationBytes 메서드를 사용 하 여.&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information that was set by the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<bpt id="p1">*</bpt>&gt; method, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the &lt;xref:System.AppDomainSetup.SetConfigurationBytes<ept id="p1">*</ept>&gt; method has not been called.</source>
          <target state="translated">에 의해 설정 된 XML 구성 정보를 포함 하는 배열은 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 메서드를 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 경우는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드 호출 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the license file associated with this domain.</source>
          <target state="translated">이 도메인과 관련 된 라이센스 파일의 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The location and name of the license file.</source>
          <target state="translated">위치 및 라이선스 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Specifies the optimization policy used to load an executable.</source>
          <target state="translated">실행 파일을 로드 하는 데 사용 되는 최적화 정책을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An enumerated constant that is used with the <bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 함께 사용 되는 열거형된 상수는 <bpt id="p1">&lt;xref href="System.LoaderOptimizationAttribute"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of assemblies marked with the <bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> flag that are made visible to partial-trust code running in a sandboxed application domain.</source>
          <target state="translated">표시 된 어셈블리 목록을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Security.PartialTrustVisibilityLevel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 샌드 박싱된 응용 프로그램 도메인에서 실행 되는 부분 신뢰 코드에 표시 될 수 있는 플래그입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, the &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt; (APTCA) attribute can be made conditional by setting its &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt; property to &lt;xref:System.Security.PartialTrustVisibilityLevel&gt;.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph>, &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;특성 (APTCA) &lt;xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt;속성 &lt;xref:System.Security.PartialTrustVisibilityLevel&gt;.&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt; 을&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A&gt; 설정 하 여 조건을 만들 수 있습니다&lt;/xref:System.Security.AllowPartiallyTrustedCallersAttribute&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>An APTCA assembly that is marked with &lt;xref:System.Security.PartialTrustVisibilityLevel&gt; cannot be used by partially trusted code unless the host application allows it.</source>
          <target state="translated">&lt;xref:System.Security.PartialTrustVisibilityLevel&gt;호스트 응용 프로그램 허용 합니다. 하지 않는 경우 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다&lt;/xref:System.Security.PartialTrustVisibilityLevel&gt; 로 표시 된 APTCA 어셈블리</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</source>
          <target state="translated">샌드 박싱된 응용 프로그램 도메인의 호스트는 단순한 이름 및 각 어셈블리의 공개 키를 포함 하는 배열을 만들고이 속성에 할당 하 여 조건부 APTCA 특성이 있는 어셈블리를 사용 하려면 응용 프로그램 도메인에서 코드를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</source>
          <target state="translated">For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  If you are using a subclass of &lt;xref:System.AppDomainManager&gt;, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the PartialTrustVisibleAssemblies property of the &lt;xref:System.AppDomainSetup&gt; you use to create application domains.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;의 서브 클래스를 사용 하는 경우 &lt;xref:System.AppDomainManager&gt;, 조건부 APTCA 특성으로 표시 된 어셈블리에 정의 하는 어셈블리가 종속의 PartialTrustVisibleAssemblies 속성에 전달 되는 목록에서 해당 어셈블리를 포함 해야 하 고는 &lt;xref:System.AppDomainSetup&gt;응용 프로그램 도메인을 만드는 데 사용 합니다.&lt;/xref:System.AppDomainSetup&gt; &lt;/xref:System.AppDomainManager&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</source>
          <target state="translated">그렇지 않은 경우 조건부 APTCA 특성으로 표시 되는 어셈블리를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you are debugging an application that is running in a sandboxed application domain, some &lt;xref:System.Security.SecurityException&gt; messages can be misleading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 샌드 박싱된 응용 프로그램 도메인에서 실행 되는 응용 프로그램을 디버깅 하는 경우 일부 &lt;xref:System.Security.SecurityException&gt;메시지 잘못 될 수 있습니다.&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</source>
          <target state="translated">예를 들어 메시지는 하거나 완전히 신뢰할 수 있는 어셈블리 중 하나에 제한 된 사용 권한을, 샌드 박싱된 응용 프로그램 도메인의 권한 부여 집합을 초과 하는 보안 요청 샌드 박싱된 응용 프로그램 도메인 경계에 전파 된 경우 문제의 실제 원인을 나타낼 수 있습니다 및 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</source>
          <target state="translated">각 부분 이름이 단순한 이름과 공개 키로 구성 하는 부분 어셈블리 이름의 배열입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Gets or sets the list of directories under the application base directory that are probed for private assemblies.</source>
          <target state="translated">전용 어셈블리에 대 한 응용 프로그램 기본 디렉터리를 검색할 디렉터리 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Private assemblies are deployed in the same directory structure as the application.</source>
          <target state="translated">전용 어셈블리는 응용 프로그램과 동일한 디렉터리 구조에 배포 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the directories specified for PrivateBinPath are not under &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;, they are ignored.</source>
          <target state="translated">PrivateBinPath에 대 한 지정 된 디렉터리 아래에 있지 않으면 경우 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;, 무시 됩니다.&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">세미콜론으로 구분 하는 디렉터리 이름의 목록입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets a string value that includes or excludes &lt;xref:System.AppDomainSetup.ApplicationBase<bpt id="p1">*</bpt>&gt; from the search path for the application, and searches only &lt;xref:System.AppDomainSetup.PrivateBinPath<ept id="p1">*</ept>&gt;.</source>
          <target state="translated">포함 또는 제외 하는 문자열 값을 가져오거나 설정 합니다. &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 응용 프로그램, 그리고만 검색의 검색 경로에서 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to any non-null string value, including &lt;xref:System.String?displayProperty=fullName&gt; (""), to exclude the application directory path — that is, &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; — from the search path for the application, and to search for assemblies only in &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.</source>
          <target state="translated">모든 null이 아닌 문자열 값으로이 속성을 설정 합니다. 포함 하 여 &lt;xref:System.String?displayProperty=fullName&gt;(""), 응용 프로그램 디렉터리 경로 제외 하려면-즉, &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;- &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; 에 어셈블리를 검색 하 고 응용 프로그램의 검색 경로에서&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt; &lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</source>
          <target state="translated">Null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서) 어셈블리를 검색할 때 응용 프로그램 기본 경로, 경로 제외 하려면 null이 아닌 문자열 값을 포함 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <ph id="ph1">`QueryInterface`</ph> is performed on each call.</source>
          <target state="translated">응용 프로그램 도메인의 interop 호출에 대해 인터페이스 캐싱을 비활성화할지 여부를 나타내는 값을 가져오거나 설정 합니다. 하 한 <ph id="ph1">`QueryInterface`</ph> 각 호출에서 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disabling interface caching has a significant impact on the performance of interop calls.</source>
          <target state="translated">Interop 호출의 성능이 인터페이스 캐싱을 사용 하지 않도록 설정에 상당한 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is introduced in the <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">에 도입 된이 멤버는 <ph id="ph1">[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if interface caching is disabled for interop calls in application domains created with the current <bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 사용 하 여 만든 응용 프로그램 도메인의 interop 호출에 대해 인터페이스 캐싱을 비활성화할지 경우 <bpt id="p2">&lt;xref href="System.AppDomainSetup"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체; 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</source>
          <target state="translated">지정 된 문제에 대 한.NET Framework의 이전 버전과 호환 응용 프로그램 도메인을 만드는 지정된 된 스위치를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An enumerable set of string values that specify compatibility switches, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to erase the existing compatibility switches.</source>
          <target state="translated">호환성 스위치를 지정 하는 문자열 값의 열거 가능한 집합 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지울 기존 호환성 스위치입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Provides XML configuration information for the application domain, replacing the application's XML configuration information.</source>
          <target state="translated">응용 프로그램의 XML 구성 정보를 대체 하는 응용 프로그램 도메인에 대 한 XML 구성 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetConfigurationBytes method provides a way to replace the configuration information of an application that creates a new application domain.</source>
          <target state="translated">SetConfigurationBytes 메서드를 새 응용 프로그램 도메인을 만드는 응용 프로그램의 구성 정보를 대체 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file information in <ph id="ph1">`value`</ph>replaces the configuration file information for the application.</source>
          <target state="translated">구성 파일 정보 <ph id="ph1">`value`</ph>응용 프로그램에 대 한 구성 파일 정보를 대체 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</source>
          <target state="translated">예를 들어 Example.exe 응용 프로그램이 새 응용 프로그램 도메인을 만들 때 처음에 확보 Example.exe.config 파일에서 구성 정보를 바꿀 수 것입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Some consumers of configuration file information do not use the information stored by the SetConfigurationBytes method.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 구성 파일에 대 한 정보의 소비자가 SetConfigurationBytes 메서드에 의해 저장 된 정보를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The runtime does not enforce this.</source>
          <target state="translated">런타임에서이 적용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that all configuration file information is replaced in a new application domain, use the &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt; property to specify a configuration file.</source>
          <target state="translated">새 응용 프로그램 도메인에서 모든 구성 파일 정보가 대체 되도록 하려면 사용 하 여는 &lt;xref:System.AppDomainSetup.ConfigurationFile%2A&gt;속성을 구성 파일을 지정 합니다.&lt;/xref:System.AppDomainSetup.ConfigurationFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetConfigurationBytes method does affect assembly binding.</source>
          <target state="translated">SetConfigurationBytes 메서드는 어셈블리 바인딩에 영향 을지 않습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML in <ph id="ph1">`value`</ph> is the same as the XML in a normal configuration file, except that it is stored as a &lt;xref:System.Byte&gt; array.</source>
          <target state="translated">XML <ph id="ph1">`value`</ph> 같습니다 일반 구성 파일에서 XML로 저장 된 제외 하 고는 &lt;xref:System.Byte&gt;배열.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An array that contains the XML configuration information to be used for the application domain.</source>
          <target state="translated">응용 프로그램 도메인에 사용할 XML 구성 정보를 포함 하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Provides the common language runtime with an alternate implementation of a string comparison function.</source>
          <target state="translated">공용 언어 런타임에 문자열 비교 함수의 대체 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following string comparison and sorting methods can be overridden by the SetNativeFunction method:      -   <ph id="ph1">`IsNLSDefinedString`</ph><ph id="ph2">      -   </ph><ph id="ph3">`CompareStringEx`</ph><ph id="ph4">      -   </ph><ph id="ph5">`LCMapStringEx`</ph><ph id="ph6">      -   </ph><ph id="ph7">`FindNLSStringEx`</ph><ph id="ph8">      -   </ph><ph id="ph9">`CompareStringOrdinal`</ph><ph id="ph10">      -   </ph><ph id="ph11">`GetNLSVersion`</ph>       For information about these functions, see <bpt id="p1">[</bpt>National Language Support Functions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>.</source>
          <target state="translated">SetNativeFunction 메서드에서 다음 문자열 비교 및 정렬 메서드를 재정의할 수 있습니다.- <ph id="ph1">`IsNLSDefinedString`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`CompareStringEx`</ph> <ph id="ph4">      -   </ph> <ph id="ph5">`LCMapStringEx`</ph> <ph id="ph6">      -   </ph> <ph id="ph7">`FindNLSStringEx`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`CompareStringOrdinal`</ph> <ph id="ph10">      -   </ph> <ph id="ph11">`GetNLSVersion`</ph> 이러한 함수에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>국가별 언어 지원 기능<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=228134)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The name of the string comparison function to override.</source>
          <target state="translated">재정의할 문자열 비교 함수의 이름입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The function version.</source>
          <target state="translated">함수 버전입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>, its value must be 1 or greater.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph>, 해당 값은 1 이상 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A pointer to the function that overrides <ph id="ph1">`functionName`</ph>.</source>
          <target state="translated">재정의 하는 함수에 대 한 포인터 <ph id="ph1">`functionName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph> is not 1 or greater.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;functionVersion&lt;/code&gt;</ph>1 또는 큰 아닙니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph> is <ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;functionPointer&lt;/code&gt;</ph> 은 <ph id="ph2">&amp;lt;</ph>xref:System.IntPtr?displayProperty=fullName<ph id="ph3">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets or sets the names of the directories containing assemblies to be shadow copied.</source>
          <target state="translated">섀도 복사할 어셈블리가 들어 있는 디렉터리의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; and &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; properties.</source>
          <target state="translated">기본값은 섀도 복사본; 검색을 통해 찾은 모든 어셈블리를 섀도 복사를 사용 하는 경우 즉, 지정 된 디렉터리에서는 &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;및 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;속성.&lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt; &lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ShadowCopyDirectories property restricts the shadow copy to the assemblies in the directories specified by ShadowCopyDirectories.</source>
          <target state="translated">ShadowCopyDirectories 속성 ShadowCopyDirectories 하 여 지정 된 디렉터리에서 어셈블리를 섀도 복사본을 제한 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don’t assign a string to the ShadowCopyDirectories property, or if you set this property to <ph id="ph1">`null`</ph>, all assemblies in the directories specified by the &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt; and &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt; properties are shadow copied.</source>
          <target state="translated">이 속성을 설정 하는 경우 또는 ShadowCopyDirectories 속성에 문자열을 할당 하지 않으면 <ph id="ph1">`null`</ph>,으로 지정 된 디렉터리의 모든 어셈블리는 &lt;xref:System.AppDomainSetup.ApplicationBase%2A&gt;및 &lt;xref:System.AppDomainSetup.PrivateBinPath%2A&gt;속성을 섀도 복사한.&lt;/xref:System.AppDomainSetup.PrivateBinPath%2A&gt; &lt;/xref:System.AppDomainSetup.ApplicationBase%2A&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt;  Directory paths must not contain semicolons, because the semicolon is the delimiter character.</source>
          <target state="translated">&gt; <ph id="ph1">[!IMPORTANT]</ph> &gt; 세미콜론은 구분 기호 문자 이므로 디렉터리 경로이 세미콜론을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no escape character for semicolons.</source>
          <target state="translated">세미콜론에 대 한 이스케이프 문자가 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</source>
          <target state="translated">섀도 복사 되 고 어셈블리를 로드 하기 전에 어셈블리 파일을 다른 위치로 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original assembly file is not locked, so it can be updated.</source>
          <target state="translated">업데이트할 수 있도록 원래 어셈블리 파일 잠겨 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">섀도 복사에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>어셈블리 섀도 복사<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A list of directory names separated by semicolons.</source>
          <target state="translated">세미콜론으로 구분 하는 디렉터리 이름의 목록입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that indicates whether shadow copying is turned on or off.</source>
          <target state="translated">섀도 복사 설정 되어 있는지 여부 또는 해제 여부를 나타내는 문자열을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on shadow copying, see <bpt id="p1">[</bpt>Shadow Copying Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">섀도 복사에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>어셈블리 섀도 복사<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</source>
          <target state="translated">문자열 값 "true"로 되었음을 나타내려면 기능이 설정 되어 있으면 또는 되었음을 나타내려면 "false"는 해제 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> constructor.</source>
          <target state="translated">대상 버전 및 프로필 응용 프로그램 도메인에 대 한.NET framework로 구문 분석할 수 있는 형식으로 지정 하는 문자열을 가져오거나 설정 합니다.는 <ph id="ph1">&amp;lt;</ph>xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</source>
          <target state="translated">현재 실행 중인 버전의.NET Framework 응용 프로그램 도메인 로드 대상 버전 및 프로필에 대 한 컴파일된 어셈블리를 실행 하는이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</source>
          <target state="translated">현재 실행 중인 버전의.NET Framework 대상 버전으로 컴파일된 코드의 호환성에 영향을 주는 선택적 동작 있으면 것 설정 하거나 해제할 수 호환성을 개선 하기 위해 적절 하 게 이러한 동작 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</source>
          <target state="translated">응용 프로그램에서 별도 응용 프로그램 도메인에서이 실행 하 여 여러 버전의.NET Framework를 사용 하 여 컴파일된 추가 기능을 지 원하는 경우에 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For client applications, the value of the TargetFrameworkName property is inferred from the &lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt; attribute.</source>
          <target state="translated">클라이언트 응용 프로그램에 대 한 TargetFrameworkName 속성의 값에서 유추 되는 &lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;특성.&lt;/xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> and later, this attribute is added to the assembly automatically based on the setting of the project's <bpt id="p1">**</bpt>Target Framework<ept id="p1">**</ept> property.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)]</ph> 이 특성은 프로젝트의 설정에 따라 자동으로 어셈블리에 추가 하는 나중 및 <bpt id="p1">**</bpt>대상 프레임 워크<ept id="p1">**</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The target version and profile of the .NET Framework.</source>
          <target state="translated">대상 버전 및.NET Framework의 프로필입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>