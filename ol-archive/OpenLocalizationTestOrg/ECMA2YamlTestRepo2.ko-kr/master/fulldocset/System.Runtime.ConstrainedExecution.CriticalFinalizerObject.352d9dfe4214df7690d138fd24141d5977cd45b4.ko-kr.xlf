<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18662fc7d4230fec1646d4f41a321def8a23513b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.ConstrainedExecution.CriticalFinalizerObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a5736c7dcdd99a345b20fb0791d808fd69d96cb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9b04922d7371f340cf7d6c6a6bd3b788587af5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">파생된 클래스에서 모든 종료 코드 중요로 표시 되어 있음을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes deriving from the CriticalFinalizerObject class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">CriticalFinalizerObject 클래스에서 파생 된 클래스는 제약이 있는 실행 영역 (CER)로 암시적으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">이 코드에만 강력한 안정성 계약을 사용 하 여 코드를 호출 하면 종료 자가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about CERs, see the &lt;xref:System.Runtime.ConstrainedExecution&gt; namespace.</source>
          <target state="translated">Cer에 대 한 자세한 내용은 참조는 &lt;xref:System.Runtime.ConstrainedExecution&gt;네임 스페이스.&lt;/xref:System.Runtime.ConstrainedExecution&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In classes derived from the CriticalFinalizerObject class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">CriticalFinalizerObject 클래스에서 파생 된 클래스를 모든 중요 한 종료 코드를 실행 하려면 기회 제공 될 공용 언어 런타임 (CLR) 보장 종료자 CLR 강제로 응용 프로그램 도메인을 언로드합니다 위치나 스레드를 중단 하는 경우에도 CER에 대 한 규칙을 따르는 제공.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">종료자 CER에 대 한 규칙을 위반 하면 것 하지 성공적으로 실행 될 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">또한 CLR와 중요 한 종료자 간에 약한 순서를 설정: 하지 동시에 가비지 수집에서 회수 된 개체에 대해 이전에 중요 한 종료 자가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a class such as &lt;xref:System.IO.FileStream&gt;, which holds data in the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class that is derived from CriticalFinalizerObject, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">예를 들어와 같은 클래스 &lt;xref:System.IO.FileStream&gt;의 데이터가 들어 있는 &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;CriticalFinalizerObject에서 파생 된 클래스를 버퍼링 된 기존 데이터 플러시 표준 종료자를 실행할 수 있습니다.&lt;/xref:System.Runtime.InteropServices.SafeHandle&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, you do not need to write classes that derive from the CriticalFinalizerObject class.</source>
          <target state="translated">대부분의 경우 CriticalFinalizerObject 클래스에서 파생 된 클래스를 작성할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework class library provides two classes, &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; and &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">.NET Framework 클래스 라이브러리는 두 개의 클래스를 제공 &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;및 &lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;, 핸들 리소스에 대 한 중요 한 종료 기능을 제공 합니다.&lt;/xref:System.Runtime.InteropServices.CriticalHandle&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the &lt;xref:System.Runtime.InteropServices.SafeHandle&gt; class, and this set is located in the &lt;xref:Microsoft.Win32.SafeHandles&gt; namespace.</source>
          <target state="translated">.NET Framework에서 파생 된 미리 작성 된 클래스의 집합을 제공 하는 또한는 &lt;xref:System.Runtime.InteropServices.SafeHandle&gt;집합과이 집합에는 &lt;xref:Microsoft.Win32.SafeHandles&gt;네임 스페이스.&lt;/xref:Microsoft.Win32.SafeHandles&gt; &lt;/xref:System.Runtime.InteropServices.SafeHandle&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">이러한 클래스는 파일 및 운영 체제 핸들을 지원 하기 위한 공통 기능을 제공 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all the resources used by the <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Runtime.ConstrainedExecution.CriticalFinalizerObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The finalizer for any types deriving from &lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt; is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">파생 된 모든 형식에 대 한 종료자 &lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;제공할지 기회를 실행 하 고 되지 중단 되며 종료자 올바르게 제약이 있는 실행 영역 (CER)에 대 한 규칙을 따르는 것으로 가정 합니다.&lt;/xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>