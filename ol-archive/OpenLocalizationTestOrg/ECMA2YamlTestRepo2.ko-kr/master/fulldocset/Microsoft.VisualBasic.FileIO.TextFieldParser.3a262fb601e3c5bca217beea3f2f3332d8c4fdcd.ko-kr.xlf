<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bd4f051f259503b6877261552f52f4ab96b9e89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.FileIO.TextFieldParser.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4998159fe543ddc70cc3ce3532aa7c0ed9f5e542</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2197e266b59025815cbe946fba3a6dd47c332987</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods and properties for parsing structured text files.</source>
          <target state="translated">구조화 된 텍스트를 구문 분석을 위한 메서드 및 속성을 제공 파일입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`TextFieldParser`</ph> object provides methods and properties for parsing structured text files.</source>
          <target state="translated"><ph id="ph1">`TextFieldParser`</ph> 구조화 된 텍스트 파일 구문 분석에 대 한 속성 및 메서드를 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing a text file with the <ph id="ph1">`TextFieldParser`</ph> is similar to iterating over a text file, while the <ph id="ph2">`ReadFields`</ph> method to extract fields of text is similar to splitting the strings.</source>
          <target state="translated">텍스트 파일을 구문 분석의 <ph id="ph1">`TextFieldParser`</ph> 텍스트 파일을 반복 하는 것과 비슷합니다 동안는 <ph id="ph2">`ReadFields`</ph> 텍스트의 필드를 추출 하는 메서드는 문자열을 분할 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`TextFieldParser`</ph> can parse two types of files: delimited or fixed-width.</source>
          <target state="translated"><ph id="ph1">`TextFieldParser`</ph> 두 유형의 파일을 구문 분석할 수 있습니다: 구분 또는 고정 너비입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some properties, such as <ph id="ph1">`Delimiters`</ph> and <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> are meaningful only when working with delimited files, while the <ph id="ph3">`FieldWidths`</ph> property is meaningful only when working with fixed-width files.</source>
          <target state="translated">일부 속성와 같은 <ph id="ph1">`Delimiters`</ph> 및 <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> 는 의미가 동안 구분 기호로 분리 된 파일을 사용 하는 경우는 <ph id="ph3">`FieldWidths`</ph> 속성은 고정 너비 파일을 사용 하는 경우에 의미가 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> object.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited text file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width text file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a text file with multiple formats|<bpt id="p3">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 텍스트 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽은<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 여러 형식의 텍스트 파일에서 읽기 | <bpt id="p3">[</bpt>하는 방법: 여러 형식의 텍스트 파일에서 읽기<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 파일을 구문 분석 또는 스트림에 개체도 표시 됩니다는 <ph id="ph2">`stream`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The stream to be parsed.</source>
          <target state="translated">구문 분석할 수 있는 스트림.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>읽을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`reader`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 파일을 구문 분석 또는 스트림에 개체도 표시 됩니다는 <ph id="ph2">`reader`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.TextReader&gt; stream to be parsed.</source>
          <target state="translated">&lt;xref:System.IO.TextReader&gt;스트림 구문 분석할 수 있습니다.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 로 지정 된 파일을 구문 분석 하는 개체는 <ph id="ph2">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">구문 분석 될 파일의 전체 경로입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 파일을 구문 분석 또는 스트림에 개체도 표시 됩니다는 <ph id="ph2">`stream`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The stream to be parsed.</source>
          <target state="translated">구문 분석할 수 있는 스트림.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">문자 인코딩을 사용 하도록 인코딩 파일에서 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Default is &lt;xref:System.Text.Encoding.UTF8*&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Text.Encoding.UTF8*&gt;.&lt;/xref:System.Text.Encoding.UTF8*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>읽을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 로 지정 된 파일을 구문 분석 하는 개체는 <ph id="ph2">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">구문 분석 될 파일의 전체 경로입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">문자 인코딩을 사용 하도록 인코딩 파일에서 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Default is &lt;xref:System.Text.Encoding.UTF8*&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Text.Encoding.UTF8*&gt;.&lt;/xref:System.Text.Encoding.UTF8*&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 또는 <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 파일을 구문 분석 또는 스트림에 개체도 표시 됩니다는 <ph id="ph2">`stream`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">경우는 <ph id="ph1">`detectEncoding`</ph> 매개 변수는 <ph id="ph2">`True`</ph>를이 생성자의 파일 또는 스트림의 처음 세 바이트 확인 하 여 인코딩 검색을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">자동으로 인식 u t F-8, little endian Unicode 및 big endian 유니코드 텍스트 파일 적절 한 바이트 순서 표시로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">그렇지 않으면 하 여 지정 된 인코딩을 <ph id="ph1">`defaultEncoding`</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The stream to be parsed.</source>
          <target state="translated">구문 분석할 수 있는 스트림.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">문자 인코딩을 사용 하도록 인코딩 파일에서 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Default is &lt;xref:System.Text.Encoding.UTF8*&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Text.Encoding.UTF8*&gt;.&lt;/xref:System.Text.Encoding.UTF8*&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">파일의 시작 부분에서 바이트 순서 표시에 대 한 확인 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Default is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>읽을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 로 지정 된 파일을 구문 분석 하는 개체는 <ph id="ph2">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">경우는 <ph id="ph1">`detectEncoding`</ph> 매개 변수는 <ph id="ph2">`True`</ph>를이 생성자의 파일 또는 스트림의 처음 세 바이트 확인 하 여 인코딩 검색을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">자동으로 인식 u t F-8, little endian Unicode 및 big endian 유니코드 텍스트 파일 적절 한 바이트 순서 표시로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">그렇지 않으면 하 여 지정 된 인코딩을 <ph id="ph1">`defaultEncoding`</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">구문 분석 될 파일의 전체 경로입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">문자 인코딩을 사용 하도록 인코딩 파일에서 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Default is &lt;xref:System.Text.Encoding.UTF8*&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Text.Encoding.UTF8*&gt;.&lt;/xref:System.Text.Encoding.UTF8*&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">파일의 시작 부분에서 바이트 순서 표시에 대 한 확인 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Default is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 또는 <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">`TextFieldParser`</ph> 파일을 구문 분석 또는 스트림에 개체도 표시 됩니다는 <ph id="ph2">`stream`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">경우는 <ph id="ph1">`detectEncoding`</ph> 매개 변수는 <ph id="ph2">`True`</ph>를이 생성자의 파일 또는 스트림의 처음 세 바이트 확인 하 여 인코딩 검색을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">자동으로 인식 u t F-8, little endian Unicode 및 big endian 유니코드 텍스트 파일 적절 한 바이트 순서 표시로 시작 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">그렇지 않으면 하 여 지정 된 인코딩을 <ph id="ph1">`defaultEncoding`</ph> 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.Stream&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The stream to be parsed.</source>
          <target state="translated">구문 분석할 수 있는 스트림.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Text.Encoding&gt;.</source>
          <target state="translated">&lt;xref:System.Text.Encoding&gt;.&lt;/xref:System.Text.Encoding&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">문자 인코딩을 사용 하도록 인코딩 파일에서 결정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Default is &lt;xref:System.Text.Encoding.UTF8*&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.Text.Encoding.UTF8*&gt;.&lt;/xref:System.Text.Encoding.UTF8*&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">파일의 시작 부분에서 바이트 순서 표시에 대 한 확인 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Default is <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Indicates whether to leave <ph id="ph1">`stream`</ph> open when the <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is closed.</source>
          <target state="translated">상태로 둘지 여부를 나타내는 <ph id="ph1">`stream`</ph> 시 열려는 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Default is <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;defaultEncoding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph> cannot be read from.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;stream&lt;/code&gt;</ph>읽을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Closes the current <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재 닫습니다 <bpt id="p1">&lt;xref uid="langword_csharp_TextFieldParser" name="TextFieldParser" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Defines comment tokens.</source>
          <target state="translated">주석 토큰을 정의합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</source>
          <target state="translated">주석 토큰은 문자열, 하는 줄의 시작 부분에 놓으면 나타냅니다 줄 주석 이므로 파서에서 무시 해야 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 <bpt id="p1">**</bpt>모든<ept id="p1">**</ept> 탭 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Zero-length comment tokens are ignored.</source>
          <target state="translated">길이가&amp;0; 인 주석 토큰은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A string array that contains all of the comment tokens for the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">모든 메모를 포함 하는 문자열 배열에 대 한 토큰의 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A comment token includes white space.</source>
          <target state="translated">주석 토큰에 공백이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Defines the delimiters for a text file.</source>
          <target state="translated">텍스트 파일에 대 한 구분 기호를 정의합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is meaningful only if the &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt; property is set to <ph id="ph1">`FieldType.Delimited`</ph>.</source>
          <target state="translated">이 속성은 의미 있는 경우에만 &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;속성이 <ph id="ph1">`FieldType.Delimited`</ph>.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Defining the delimiters for a text file can also be accomplished with the &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt; method.</source>
          <target state="translated">텍스트 파일을 구현에 대 한 구분 기호를 정의 고 &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;메서드.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists an example of a task involving the <ph id="ph1">`Delimiters`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예는 <ph id="ph1">`Delimiters`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited text file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A string array that contains all of the field delimiters for the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">모든의 필드 구분 기호를 포함 하는 문자열 배열에서 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A delimiter value is set to a newline character, an empty string, or <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">구분 기호 값이 빈 문자열인 경우 줄 바꿈 문자인 설정 또는 <bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Releases resources used by the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 하는 리소스를 해제는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Releases resources used by the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 하는 리소스를 해제는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Boolean.</source>
          <target state="translated">부울 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> releases both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> releases only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 관리와 관리 되지 않는 리소스를 해제합니다. <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스만 해제 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 주석이 없는 줄 현재 커서 위치와 파일의 끝 사이 공백이 없을 경우.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used when reading from files to determine the end of the data being read.</source>
          <target state="translated">이 속성을 읽고 있는 데이터의 끝을 확인할 파일에서 읽을 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`EndOfData`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`EndOfData`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽기<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there is no more data to read; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>읽기, 데이터가 더 이상 없는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns the line that caused the most recent <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exception.</source>
          <target state="translated">가장 최근에 발생 한 줄을 반환 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예외입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no &lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt; exceptions have been thrown, an empty string is returned.</source>
          <target state="translated">없는 경우 &lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;예외가 throw 되지 빈 문자열이 반환 됩니다.&lt;/xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt; property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;예외를 발생 하는 줄의 번호를 표시 속성을 사용할 수 있습니다.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLine`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`ErrorLine`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽기<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The line that caused the most recent <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exception.</source>
          <target state="translated">가장 최근에 발생 한 줄 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예외입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Returns the number of the line that caused the most recent <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exception.</source>
          <target state="translated">가장 최근에 발생 한 줄의 번호를 반환 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예외입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no &lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt; exceptions have been thrown, -1 is returned.</source>
          <target state="translated">없는 경우 &lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;예외가 throw 되었습니다,-1이 반환 됩니다.&lt;/xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt; property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;예외를 발생 하는 줄의 번호를 표시 속성을 사용할 수 있습니다.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">줄 번호를 결정할 때에 빈 줄과 주석을 무시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLineNumber`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`ErrorLineNumber`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽기<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The number of the line that caused the most recent <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> exception.</source>
          <target state="translated">가장 최근에 발생 한 줄 번호 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.MalformedLineException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 예외입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Denotes the width of each column in the text file being parsed.</source>
          <target state="translated">구문 분석 하는 텍스트 파일에 있는 각 열의 너비를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is meaningful only if the &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt; property is set to <ph id="ph1">`FieldType.FixedWidth`</ph>.</source>
          <target state="translated">이 속성은 의미 있는 경우에만 &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;속성이 <ph id="ph1">`FieldType.FixedWidth`</ph>.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</source>
          <target state="translated">배열의 마지막 항목 보다 작거나&amp;0;이 하 이면 필드 가변 폭으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt; method can also be used to set field widths.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;메서드 필드의 너비를 사용할 수도 있습니다.&lt;/xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`FieldWidths`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`FieldWidths`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a fixed-width text file|<bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 고정 너비 텍스트 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An integer array that contains the width of each column in the text file that is being parsed.</source>
          <target state="translated">구문 분석 되는 텍스트 파일에 있는 각 열의 너비를 포함 하는 정수 배열입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A width value in any location other than the last entry of the array is less than or equal to zero.</source>
          <target state="translated">배열의 마지막 항목 이외의 위치를 불문 너비 값 보다 작거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Allows the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">허용 된 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.FileIO.TextFieldParser"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 리소스를 해제 하 고 가비지 수집에서 회수 하기 전에 다른 정리 작업을 수행 하려고 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</source>
          <target state="translated">구분 기호로 분리 된 파일을 구문 분석 되 고 필드를 따옴표로 묶여 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 <bpt id="p1">**</bpt>모든<ept id="p1">**</ept> 탭 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is <ph id="ph1">`True`</ph>, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</source>
          <target state="translated">속성이 <ph id="ph1">`True`</ph>, 파서가 가정 필드가 따옴표로 묶여 있는지 ("") 및 줄 끝을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a field is enclosed in quotation marks, for example, <ph id="ph1">`abc, "field2a,field2b", field3`</ph> and this property is <ph id="ph2">`True`</ph>, then all text enclosed in quotation marks will be returned as is; this example would return <ph id="ph3">`abc|field2a,field2b|field3`</ph>.</source>
          <target state="translated">예를 들어 필드 따옴표에 포함 되어 있으면 <ph id="ph1">`abc, "field2a,field2b", field3`</ph> 하며이 속성은 <ph id="ph2">`True`</ph>, 다음 따옴표로 묶인 모든 텍스트는 있는 그대로 반환 됩니다;이 예에서는 되돌아가 <ph id="ph3">`abc|field2a,field2b|field3`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`False`</ph> would make this example return <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`False`</ph> 이 예제에서는 반환 하 게 만드는 <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if fields are enclosed in quotation marks; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드가 따옴표로 묶여 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Returns the current line number, or returns -1 if no more characters are available in the stream.</source>
          <target state="translated">현재 줄 번호를 반환 하거나 스트림의 문자가 더 이상 없는 경우-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 <bpt id="p1">**</bpt>모든<ept id="p1">**</ept> 탭 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">줄 번호를 결정할 때에 빈 줄과 주석을 무시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The current line number.</source>
          <target state="translated">현재 줄 번호입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Reads the specified number of characters without advancing the cursor.</source>
          <target state="translated">커서를 이동 하지 않고 지정한 개수의 문자를 읽습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`numberOfChars`</ph> value must be less than the total number of characters in the line.</source>
          <target state="translated"><ph id="ph1">`numberOfChars`</ph> 값 전체 줄의 문자 수보다 작아야 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is not, the string returned by <ph id="ph1">`PeekChars`</ph> will be truncated to the length of the line.</source>
          <target state="translated">없는 경우, 반환 하는 문자열 <ph id="ph1">`PeekChars`</ph> 줄 길이에 잘립니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Blank lines are ignored.</source>
          <target state="translated">빈 줄은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>End-of-line characters are not returned.</source>
          <target state="translated">줄 끝 문자 반환 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`PeekChars`</ph> method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated"><ph id="ph1">`PeekChars`</ph> 메서드 수행 구문 분석 하지 않으면 구분된 된 필드에서 줄 끝 문자는 실제 줄 끝으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`PeekChars`</ph> method.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`PeekChars`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Determine the format of a field before parsing it|<bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 필드의 형식을 구문 분석 하기 전에 확인 | <bpt id="p1">[</bpt>하는 방법: 여러 형식의 텍스트 파일에서 읽기<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_Int32" name="Int32" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Int32" name="Int32" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Number of characters to read.</source>
          <target state="translated">읽을 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A string that contains the specified number of characters read.</source>
          <target state="translated">지정한 개수의 문자를 포함 하는 문자열을 읽습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;numberOfChars&lt;/code&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;numberOfChars&lt;/code&gt;</ph>0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</source>
          <target state="translated">현재 줄에서 모든 필드를 읽고 문자열의 배열 하 고 데이터를 포함 하는 다음 줄으로 커서를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to allow users to parse text files in multiple formats, the <ph id="ph1">`ReadFields`</ph> method examines the values of <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, and <ph id="ph4">`FieldWidths`</ph>, if they are specified, each time it is called.</source>
          <target state="translated">사용자가 여러 형식의 텍스트 파일을 구문 분석할 수 있도록 하기 위해는 <ph id="ph1">`ReadFields`</ph> 의 값을 검사 하는 메서드 <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, 및 <ph id="ph4">`FieldWidths`</ph>를 지정 하는 경우 호출 될 때마다 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users need to correctly configure the <ph id="ph1">`TextFieldType`</ph> and <ph id="ph2">`FieldWidths`</ph> or <ph id="ph3">`Delimiters`</ph> properties, as appropriate.</source>
          <target state="translated">사용자가 올바르게 구성 해야는 <ph id="ph1">`TextFieldType`</ph> 및 <ph id="ph2">`FieldWidths`</ph> 또는 <ph id="ph3">`Delimiters`</ph> 속성을 적절 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`TextFieldType`</ph> is set to <ph id="ph2">`Delimited`</ph>, and <ph id="ph3">`Delimiters`</ph> is not set, or if <ph id="ph4">`TextFieldType`</ph> is set to <ph id="ph5">`FixedWidth`</ph> and <ph id="ph6">`FieldWidths`</ph>, an exception is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`TextFieldType`</ph> 로 설정 되어 <ph id="ph2">`Delimited`</ph>, 및 <ph id="ph3">`Delimiters`</ph> 설정 되지 않은 경우 <ph id="ph4">`TextFieldType`</ph> 로 설정 된 <ph id="ph5">`FixedWidth`</ph> 및 <ph id="ph6">`FieldWidths`</ph>, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ReadFields`</ph> encounters blank lines, they are skipped and the next non-blank line is returned.</source>
          <target state="translated">경우 <ph id="ph1">`ReadFields`</ph> 을 건너뛰고 다음 줄이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ReadFields`</ph> method cannot parse the current line, it raises an exception and does not move to the next line.</source>
          <target state="translated">경우는 <ph id="ph1">`ReadFields`</ph> 메서드는 현재 줄을 구문 분석할 수 없습니다, 예외가 발생 하 고 다음 줄으로 이동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables your application to attempt to parse the line again.</source>
          <target state="translated">이 통해 응용 프로그램을 다시 줄을 구문 분석을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ReadFields`</ph> method.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`ReadFields`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽기<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An array of strings that contains field values for the current line.</source>
          <target state="translated">현재 줄에 대 한 필드 값이 포함 된 문자열의 배열입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A field cannot be parsed by using the specified format.</source>
          <target state="translated">지정 된 형식을 사용 하 여 필드를 구문 분석할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Returns the current line as a string and advances the cursor to the next line.</source>
          <target state="translated">현재 줄을 문자열로 반환 하 고 줄으로 커서를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadLine`</ph> method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated"><ph id="ph1">`ReadLine`</ph> 메서드 수행 구문 분석 하지 않으면 구분된 된 필드에서 줄 끝 문자는 실제 줄 끝으로 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Nothing`</ph> is returned if the end of the file is reached.</source>
          <target state="translated"><ph id="ph1">`Nothing`</ph>파일의 끝에 도달 하는 경우 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The current line from the file or stream.</source>
          <target state="translated">파일 또는 스트림의 현재 줄.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Reads the remainder of the text file and returns it as a string.</source>
          <target state="translated">텍스트 파일의 나머지를 읽고 문자열로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">고급 멤버;입니다. 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다는 <bpt id="p1">**</bpt>모든<ept id="p1">**</ept> 탭 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is nothing more to read because the end of the file has been reached, <ph id="ph1">`Nothing`</ph> is returned.</source>
          <target state="translated">더 이상 읽을 파일의 끝에 도달 했으므로 내용이 없는 경우 <ph id="ph1">`Nothing`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ReadToEnd`</ph> method does not ignore blank lines and comments.</source>
          <target state="translated"><ph id="ph1">`ReadToEnd`</ph> 빈 줄과 주석을 메서드를 무시 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The remaining text from the file or stream.</source>
          <target state="translated">파일 또는 스트림에서 나머지 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Sets the delimiters for the reader to the specified values, and sets the field type to <bpt id="p1">&lt;xref uid="langword_csharp_Delimited" name="Delimited" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 값으로 판독기에 대 한 구분 기호를 설정 하 고 필드 형식을 설정 <bpt id="p1">&lt;xref uid="langword_csharp_Delimited" name="Delimited" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this method is set.</source>
          <target state="translated">기존 내용을 <ph id="ph1">`Delimiters`</ph> 속성은이 메서드에 설정 된 경우 해제 됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">이 메서드는 배열을 만들지 않고 구분 기호를 설정 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists an example of a task involving the <ph id="ph1">`SetDelimiters`</ph> method.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예는 <ph id="ph1">`SetDelimiters`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Parse a text file|<bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 텍스트 파일 구문 분석 | <bpt id="p1">[</bpt>TextFieldParser 개체를 사용 하 여 텍스트 파일을 구문 분석<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Array of type <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">형식의 배열 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A delimiter is zero-length.</source>
          <target state="translated">구분 기호는 길이가&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Sets the delimiters for the reader to the specified values.</source>
          <target state="translated">지정된 된 값으로 판독기에 대 한 구분 기호를 설정합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this is set.</source>
          <target state="translated">기존 내용을 <ph id="ph1">`Delimiters`</ph> 설정 하면 속성이 지워집니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">이 메서드는 배열을 만들지 않고 구분 기호를 설정 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists example of tasks involving the <ph id="ph1">`SetFieldWidths`</ph> method.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예제는 <ph id="ph1">`SetFieldWidths`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Parse a text file.|<bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 텍스트 파일 구문 분석 합니다. | <bpt id="p1">[</bpt>TextFieldParser 개체를 사용 하 여 텍스트 파일을 구문 분석<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Array of <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Array of <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">파일을 구문 분석할 수 구분 여부 또는 고정 너비를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of this property is delimited.</source>
          <target state="translated">이 속성의 기본값을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`TextFieldType`</ph> property.</source>
          <target state="translated">다음 표에서 관련 된 작업의 예를 보여 줍니다.는 <ph id="ph1">`TextFieldType`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>|To|See|   |--------|---------|   |Read from a delimited text file|<bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a fixed-width text file|<bpt id="p2">[</bpt>How to: Read From Fixed-width Text Files<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>|   |Read from a text file with multiple formats|<bpt id="p3">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></source>
          <target state="translated">| | 참조 |   |--------|---------|   | 구분 기호로 분리 된 텍스트 파일에서 읽기 | <bpt id="p1">[</bpt>하는 방법: 쉼표로 구분 된 텍스트 파일에서 읽은<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 고정 너비 텍스트 파일에서 읽기 | <bpt id="p2">[</bpt>하는 방법: 고정 너비 텍스트 파일에서 읽은<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>|   | 여러 형식의 텍스트 파일에서 읽기 | <bpt id="p3">[</bpt>하는 방법: 여러 형식의 텍스트 파일에서 읽기<ept id="p3">](~/add/includes/ajax-current-ext-md.md)</ept><ph id="ph1">|</ph></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A TextFieldType value that indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">구문 분석할 수 파일은 구분 여부 또는 고정 너비를 나타내는 TextFieldType 값입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Indicates whether leading and trailing white space should be trimmed from field values.</source>
          <target state="translated">필드 값에서 선행 및 후행 공백 트리밍 해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">이 속성에 대 한 기본값은 <ph id="ph1">`True`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if leading and trailing white space should be trimmed from field values; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>필드 값에서 선행 및 후행 공백을 트리밍 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>