<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bd21199241fb837aade668869d870fb7a8f66e2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Selectors.SecurityTokenAuthenticator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b36fa52f32234b7ac5429888a1c0e871592db825</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c307544e69f4e252df5fd6fceaf0c6e566a9d28</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authenticates a security token.</source>
          <target state="translated">보안 토큰을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SecurityTokenAuthenticator class and the classes that derive from it authenticate security tokens.</source>
          <target state="translated">SecurityTokenAuthenticator 클래스와 파생 된 클래스는 보안 토큰을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you would only derive a class directly from SecurityTokenAuthenticator when you create a custom security token.</source>
          <target state="translated">일반적으로 것만 클래스를 파생 SecurityTokenAuthenticator에서 직접 사용자 지정 보안 토큰을 만들 때.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you wanted to override the default authentication or authorization behaviors for built-in security tokens, derive from one of the classes that derive from SecurityTokenAuthenticator, such as &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.</source>
          <target state="translated">기본 제공 보안 토큰에 대 한 기본 인증 또는 권한 부여 동작을 재정의 하려는 경우 같은 &lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;.&lt;/xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt; SecurityTokenAuthenticator를에서 파생 된 클래스 중 하나에서 파생</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you derive a class from SecurityTokenAuthenticator, override the following two methods: &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; and &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;.</source>
          <target state="translated">SecurityTokenAuthenticator에서 클래스를 파생 하는 경우 다음 두 가지 메서드를 재정의: &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;및 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method determines whether this security token authenticator can authenticate a specific security token.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;메서드는이 보안 토큰 인증 자가 특정 보안 토큰을 인증할 수 있는지 여부를 확인 합니다.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method authenticates the security token and establishes a set of authorization policies for authorization.</source>
          <target state="translated">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;메서드 보안 토큰을 인증 및 권한 부여에 대 한 권한 부여 정책의 집합을 설정 합니다.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The authorization policies map the claims found in the security token to claims required by the application.</source>
          <target state="translated">권한 부여 정책 응용 프로그램에 클레임을 보안 토큰에 있는 클레임을 매핑합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenAuthenticator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CanValidateToken method checks whether the token parameter is <ph id="ph1">`null`</ph> and then calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph2">`token`</ph>.</source>
          <target state="translated">CanValidateToken 메서드 토큰 매개 변수 인지를 확인 <ph id="ph1">`null`</ph> 를 호출 하는 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;이 보안 토큰 인증자에 대 한 보안 토큰 형식을 인증할 수 있는지 여부를 확인할 수 있는 방법은 <ph id="ph2">`token`</ph>.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when token can be validated; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>때 토큰을 확인할 수 있습니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CanValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine whether this security token authenticator can authenticate the security token type for <ph id="ph1">`token`</ph>.</source>
          <target state="translated">CanValidateTokenCore 메서드에 의해 호출 됩니다는 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;이 보안 토큰 인증자에 대 한 보안 토큰 형식을 인증할 수 있는지 여부를 확인할 수 있는 방법은 <ph id="ph1">`token`</ph>.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">이 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;메서드.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">token</ph><ept id="p2">&lt;/code&gt;</ept> can be validated; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>때 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">token</ph> <ept id="p2">&lt;/code&gt;</ept> 수 유효성이 검사 된 없으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateToken method checks whether the <ph id="ph1">`token`</ph> parameter is <ph id="ph2">`null`</ph>, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt; method to determine if this security token authenticator can authenticate this security token, and then if it can, calls the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.</source>
          <target state="translated">ValidateToken 메서드 검사 여부는 <ph id="ph1">`token`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 호출의 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;이 보안 토큰 인증 자가이 보안 토큰을 인증할 수 있습니다 및 가능한 경우 다음 호출 하는 경우를 확인 하는 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;메서드.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A&gt; &lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> 형식의 <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph> cannot be authenticated by this security token authenticator       -or-       <ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph> is not authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;token&lt;/code&gt;</ph>이 보안 토큰 인증 자가 인증할 수 없습니다-또는- <ph id="ph2">&lt;code&gt;token&lt;/code&gt;</ph> 인증 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the ValidateTokenCore method to authenticate a specific security token type.</source>
          <target state="translated">특정 보안 토큰 형식을 인증 하려면 ValidateTokenCore 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the ValidateTokenCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">ValidateTokenCore 메서드를 재정의 하는 경우 다음이 지침을 따릅니다:-보안 토큰에 전달 하는 경우는 <ph id="ph1">`token`</ph> 매개 변수 여야 throw 유효성을 검사는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;예외.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.</source>
          <target state="translated">-이 응용 프로그램에 적용 권한 부여 정책이 인 경우는 빈 &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.&lt;/xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; 형식의&lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 반환</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">때 <ph id="ph1">`null`</ph> 이 메서드에서 반환 되 <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throw는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;예외.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateTokenCore method is called by the &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt; method.</source>
          <target state="translated">ValidateTokenCore 메서드에 의해 호출 됩니다는 &lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;메서드.&lt;/xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> 형식의 <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>