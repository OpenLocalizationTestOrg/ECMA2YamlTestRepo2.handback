<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed26bfb7af741fcf5dcad45f0c8505a609dc6eb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Data.BindingMode.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3feb5856c4258761127332882d5eb28b5b133aa0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">725bb85d95cb902a7823c5864bd22f3b8ce59670</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes the direction of the data flow in a binding.</source>
          <target state="translated">바인딩에서 데이터 흐름 방향을 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Uses the default &lt;xref:System.Windows.Data.Binding.Mode<bpt id="p1">*</bpt>&gt; value of the binding target. The default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings. A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using &lt;xref:System.Windows.DependencyProperty.GetMetadata<ept id="p1">*</ept>&gt; and then check the Boolean value of the &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*&gt; property.</source>
          <target state="translated">기본값을 사용 하 여 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 바인딩 대상의 값입니다. 기본값은 각 종속성 속성에 따라 다릅니다. 일반적으로 텍스트 상자 및 확인란 처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정 되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정 합니다. 종속성 속성이 단방향 또는 양방향 기본적으로 바인드 되는지를 결정 하는 프로그래밍 방법을 사용 하 여 속성의 속성 메타 데이터를 가져오려는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 다음의 부울 값을 확인 하 고는 &lt;xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*&gt;속성.&lt;/xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Updates the binding target when the application starts or when the data context changes.</source>
          <target state="translated">응용 프로그램이 시작 되거나 데이터 컨텍스트가 변경 될 때 바인딩 대상을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static.</source>
          <target state="translated">이 바인딩 유형은 현재 상태의 스냅숏이 사용 하기에 적합 한지 이거나 있는 데이터가 실제로 정적인 상황 데이터를 사용 하는 경우에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance.</source>
          <target state="translated">이 바인딩 유형은 원본 속성의 일부 값으로 대상 속성을 초기화 하 고 데이터 컨텍스트가 사전에 알려지지 않은 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This is essentially a simpler form of OneWay binding that provides better performance in cases where the source value does not change.</source>
          <target state="translated">기본적으로 원본 값이 변경 되지 않은 경우에 더 나은 성능을 제공 하는 OneWay 바인딩의 더 간단한 형태입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Updates the binding target (target) property when the binding source (source) changes.</source>
          <target state="translated">바인딩 소스 (원본)가 변경 되 면 바인딩 대상 (대상) 속성을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This type of binding is appropriate if the control being bound is implicitly read-only.</source>
          <target state="translated">이 바인딩 유형은 바인드되는 컨트롤이 암시적으로 읽기 전용인 경우에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For instance, you may bind to a source such as a stock ticker.</source>
          <target state="translated">예를 들어, 주식 시세 표시기 등의 소스에 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table.</source>
          <target state="translated">또는 대상 속성에는 테이블의 데이터 바인딩된 배경색과 같이 변경을 위해 제공 된 컨트롤 인터페이스가 없을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If there is no need to monitor the changes of the target property, using the OneWay binding mode avoids the overhead of the TwoWay binding mode.</source>
          <target state="translated">대상 속성의 변경 내용을 모니터링할 필요가 없는 경우 OneWay 바인딩 모드를 사용 하 여 TwoWay 바인딩 모드의 오버 헤드를 방지 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Updates the source property when the target property changes.</source>
          <target state="translated">대상 속성이 변경 될 때 원본 속성을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Causes changes to either the source property or the target property to automatically update the other.</source>
          <target state="translated">원인 원본 속성 또는 자동으로 다른 업데이트에 대 한 대상 속성을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This type of binding is appropriate for editable forms or other fully-interactive <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> scenarios.</source>
          <target state="translated">이 바인딩 유형은 편집 가능한 폼 이나 기타 완전 한 대화형에 적합 한은 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]</ph> 시나리오입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>