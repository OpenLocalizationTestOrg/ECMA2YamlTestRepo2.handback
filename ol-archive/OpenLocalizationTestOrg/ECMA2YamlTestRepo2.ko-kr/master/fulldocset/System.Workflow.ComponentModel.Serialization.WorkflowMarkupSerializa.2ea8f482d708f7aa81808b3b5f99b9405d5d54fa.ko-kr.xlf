<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">934c6e9dcba30e7a92ad8784f7b9d41b29e6709b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9778d214934fb8746272d6070bfa814bc448543e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">603b587c6539a2e0b4259ee607cd613304c89341</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</source>
          <target state="translated">및에서 XAML extensible Application Markup Language () 워크플로에 대 한 디자인 타임 serialization을 관리합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       A workflow or activity designer can use WorkflowMarkupSerializationManager to access services useful to managing design-time serialization processes.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>워크플로 또는 활동 디자이너는 디자인 타임 serialization 프로세스 관리에 유용한 서비스를 WorkflowMarkupSerializationManager를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, WorkflowMarkupSerializationManager can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</source>
          <target state="translated">예를 들어 WorkflowMarkupSerializationManager 개체를 만들, 형식을 조회 하 고, 개체를 식별 하 고 특정 형식의 serialization을 사용자 지정에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정을 사용 하 여 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> with which to initialize the <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 초기화 하는 <bpt id="p2">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds the specified serialization provider to the serialization manager.</source>
          <target state="translated">Serialization 관리자에 지정된 된 serialization 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>AddSerializationProvider adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">AddSerializationProvider는 serialization 관리자에 사용자 지정 serialization 공급자를 추가합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</source>
          <target state="translated">Serialization 공급자는 특정 유형의 개체 또는 개체의 형식 집합에 대 한 사용자 지정 serializer를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</source>
          <target state="translated">직렬화 중에 각 사용자 지정 serialization 공급자는 하나를 제공할 수 있으면 특정 데이터 형식에 대 한 serializer를 반환 하도록 쿼리 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</source>
          <target state="translated">Serialization 관리자는 특정 형식에 대 한 기본 serializer를 사용 하기 전에이 메서드에서 제공 하는 사용자 지정 serializer를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</source>
          <target state="translated">The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets a stack-based, user-defined storage area that is useful for communication between serializers.</source>
          <target state="translated">Serializer 간의 통신에 유용한 스택 기반의 사용자 정의 저장소 영역을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some serializers require information about the context of an object to correctly persist their state.</source>
          <target state="translated">일부 serializer는 상태를 올바로 유지 하기 위해 개체의 컨텍스트 정보가 필요 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Context enables a serializer to set data about the context of an object that it is serializing to a &lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt; where another serializer can access it.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Design.Serialization.ContextStack&gt;다른 serializer 액세스할 수 있는&lt;/xref:System.ComponentModel.Design.Serialization.ContextStack&gt; 하는 직렬화 하는 개체 컨텍스트에 대 한 데이터를 설정 하는 직렬 변환기 컨텍스트를 사용 하면</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains information about the current object being serialized.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.ContextStack"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> serialize 되는 현재 개체에 대 한 정보가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns a serializer of the specified type for an object of the specified type.</source>
          <target state="translated">지정 된 형식의 개체에 대 한 지정 된 형식의 serializer를 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; for which to retrieve the serializer.</source>
          <target state="translated">&lt;xref:System.Type&gt;를 검색할 serializer.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the serializer to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;검색할 serializer의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The requested serializer, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if no appropriate serializer can be located.</source>
          <target state="translated">요청 된 serializer 또는 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서) 적절 한 serializer가 찾을 수 없으면입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a service object of the specified type.</source>
          <target state="translated">지정 된 형식의 서비스 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of service object to return.</source>
          <target state="translated">&lt;xref:System.Type&gt;반환할 서비스 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A service object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept>, or a null reference (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in Visual Basic) if there is no service object of type <bpt id="p3">&lt;code&gt;</bpt><ph id="ph2">serviceType</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated">형식의 서비스 개체가 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept>, null 참조 (<bpt id="p2">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> Visual basic에서) 형식의 서비스 개체가 없는 경우 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph2">serviceType</ph> <ept id="p3">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a type of the specified name.</source>
          <target state="translated">지정 된 이름의 형식을 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of the &lt;xref:System.Type&gt; to load.</source>
          <target state="translated">정규화 된 이름을 &lt;xref:System.Type&gt;를 로드 합니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Type&gt;연관 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">typeName</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns that type associated with the specified XML qualified name.</source>
          <target state="translated">연결 된 형식을 반환 된 지정 된 XML 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</source>
          <target state="translated">정규화 된 XML 이름 이름이 정규화 된 네임 스페이스 로컬 namespace:localname 형식에서입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because prefixes are only required when XML is persisted or read, they are irrelevant for &lt;xref:System.Xml.XmlQualifiedName&gt; objects.</source>
          <target state="translated">접두사만 있기 때문에 XML 유지 하거나 읽는 경우 필수, 적용 되지 않습니다에 대 한 &lt;xref:System.Xml.XmlQualifiedName&gt;개체입니다.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the user to ensure the local name does not contain a ":"</source>
          <target state="translated">로컬 이름이 포함 되지 않도록 하려면 사용자 작업은 한 ":"</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; of the type to load.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;로드할 형식의.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xmlQualifiedName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Type&gt;연관 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">xmlQualifiedName</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlQualifiedName&lt;/code&gt;</ph> contains a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlQualifiedName&lt;/code&gt;</ph>에 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns the XML-qualified name associated with the specified type.</source>
          <target state="translated">지정 된 형식과 연결 된 XML 정규화 된 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; for which to return the XML-qualified name.</source>
          <target state="translated">&lt;xref:System.Type&gt;XML 정규화 된 이름을 반환할에 대 한.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</source>
          <target state="translated">이 메서드가 반환할 때 접두사가 정의 되지 않은 경우 정규화 된 이름 또는 빈 문자열에 대 한 XML 접두사를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화 되지 않은 상태로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlQualifiedName&gt; associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;연관 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">type</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> contains a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph>에 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly that is associated with the current serializer.</source>
          <target state="translated">현재 serializer와 연결 되어 있는 어셈블리를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Reflection.Assembly&gt; that is associated with the current serializer.</source>
          <target state="translated">&lt;xref:System.Reflection.Assembly&gt;현재 serializer와 연결 된.&lt;/xref:System.Reflection.Assembly&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a custom serialization provider from the <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용자 지정 serialization 공급자를 제거는 <bpt id="p1">&lt;xref href="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to remove.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This provider must be added using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider*&gt; 를 사용 하 여이 공급자를 추가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reports an error in serialization.</source>
          <target state="translated">Serialization의에서 오류를 보고합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`errorInformation`</ph> can be of any object type.</source>
          <target state="translated"><ph id="ph1">`errorInformation`</ph>모든 개체 유형일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is an exception, the message of the exception is extracted and reported to the user.</source>
          <target state="translated">예외 이면 예외 메시지 추출 하 고 사용자에 게 보고 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is any other type, &lt;xref:System.Object.ToString%2A&gt; is called to display the information to the user.</source>
          <target state="translated">다른 형식인 경우 &lt;xref:System.Object.ToString%2A&gt;사용자에 게 정보를 표시 하기 위해 호출 됩니다.&lt;/xref:System.Object.ToString%2A&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The error to report.</source>
          <target state="translated">보고서에 대 한 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the serialization manager to use with the current serializer.</source>
          <target state="translated">현재 serializer와 함께 사용할 serialization 관리자를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use with the current serializer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.IDesignerSerializationManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 serializer와 함께 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified type and adds it to a collection of named instances.</source>
          <target state="translated">지정 된 형식의 인스턴스를 만들어 명명 된 인스턴스의 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`addToContainer`</ph> is set to <ph id="ph2">`true`</ph>, the object must implement &lt;xref:System.ComponentModel.IComponent&gt; for this to have any effect.</source>
          <target state="translated">경우 <ph id="ph1">`addToContainer`</ph> 로 설정 된 <ph id="ph2">`true`</ph>, 개체를 구현 해야 &lt;xref:System.ComponentModel.IComponent&gt;이 영향을 줄 수에 대 한.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;만들려는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.ICollection&gt; that contains the arguments for <ph id="ph1">`type`</ph>.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;에 대 한 인수를 포함 하 <ph id="ph1">`type`</ph>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
          <target state="translated">개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This name can be used to access the object later using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.</source>
          <target state="translated">이 이름은 나중 &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*&gt; 를 사용 하 여 개체에 액세스 하려면 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">경우 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)은 전달 된 개체는 계속 만들어지지만 이름으로 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to add the object to the design container; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체를 디자인 컨테이너;에 추가 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The newly created object.</source>
          <target state="translated">새로 만든된 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns an instance of a created object of the specified name.</source>
          <target state="translated">지정된 된 이름 가진 생성된 된 개체의 인스턴스를 반환합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`name`</ph> must be set through a prior call to &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated"><ph id="ph1">`name`</ph>&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt; 이전 호출에서 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The name of the object to retrieve.</source>
          <target state="translated">검색할 개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An instance of the object with the given name, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if no object by that name can be found.</source>
          <target state="translated">지정 된 이름 이거나 null 참조 개체의 인스턴스 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)가 없으면 해당 이름의 개체가 없습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns the name of the specified object.</source>
          <target state="translated">지정된 된 개체의 이름을 반환합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; for which to retrieve the name.</source>
          <target state="translated">&lt;xref:System.Object&gt;이름을 검색 하려는.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the object, or a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic) if the object is unnamed.</source>
          <target state="translated">Null 참조 또는 개체의 이름 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서)는 이름이 없는 경우.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a collection of properties that can be serialized with available serializers.</source>
          <target state="translated">사용 가능한 serializer로 serialize 할 수 있는 속성의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can contain an empty collection.</source>
          <target state="translated">이 속성은 빈 컬렉션을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A serializer should never assume that any properties exist.</source>
          <target state="translated">Serializer에서는 속성이 존재 한다고 가정 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the properties to serialize.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 직렬화 할 속성을 포함 하 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Sets the name of the specified existing object.</source>
          <target state="translated">지정된 된 기존 개체의 이름을 설정합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt; is useful when you need to create and then name an instance of an object without using &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;만들고 다음 &lt;xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;.&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt; 사용 하지 않고 개체의 인스턴스 이름을 사용 해야 하는 경우에 유용&lt;/xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The object to name.</source>
          <target state="translated">개체 이름입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The name to assign to the object.</source>
          <target state="translated">개체에 할당할 이름입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>