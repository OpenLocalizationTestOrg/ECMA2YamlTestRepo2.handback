<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ff9fc442210302a50dda7760b42d27b321817fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.Xsl.Runtime.XmlQueryOutput.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96d7155f7e9697cbecfb3637f524124d8675817</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4205d93db700bb7eafa06564f3143b85975a167</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an &lt;xref:System.Xml.XmlWriter&gt; that provides additional functionality that is required for outputting the results of XSLT transformations.</source>
          <target state="translated">나타냅니다는 &lt;xref:System.Xml.XmlWriter&gt;XSLT 변환의 결과 출력 하는 중에 필요한 추가 기능을 제공 합니다.&lt;/xref:System.Xml.XmlWriter&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This method is implemented as empty and does nothing.</source>
          <target state="translated">이 메서드는 빈로 구현 되었으며는 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Ends the shallow copy of the navigator's current node.</source>
          <target state="translated">탐색기의 현재 노드의 단순 복사본을 종료합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This method should only be called for element and document nodes.</source>
          <target state="translated">이 메서드는 요소와 문서 노드에 대 한만 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Writes the end of the tree.</source>
          <target state="translated">트리 끝을 씁니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This method is implemented as empty and does nothing.</source>
          <target state="translated">이 메서드는 빈로 구현 되었으며는 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>String that contains namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A string that contains the prefix.</source>
          <target state="translated">접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Begins the shallow copy of the navigator's current node to output.</source>
          <target state="translated">출력에 탐색기의 현재 노드에서의 단순 복사본을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;xref uid="langword_csharp_EndCopy" name="EndCopy" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should be called to complete the copy operation; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;xref uid="langword_csharp_EndCopy" name="EndCopy" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 복사 작업을 완료 하기 위해 호출 건너뛸 필요가 없으면, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Called after an element's attributes have been enumerated, but before any children have been enumerated.</source>
          <target state="translated">요소의 특성 열거 후 모든 자식이 열거 전에 호출 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Well-formedness is assumed, so no additional checks are performed.</source>
          <target state="translated">제대로 가정 때문에 없는 추가 검사도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Starts the construction of a new tree.</source>
          <target state="translated">새 트리 생성을 시작합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Byte&gt; buffer object that contains data to write.</source>
          <target state="translated">&lt;xref:System.Byte&gt;쓸 데이터를 포함 하는 버퍼 개체입니다.&lt;/xref:System.Byte&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains start index.</source>
          <target state="translated">&lt;xref:System.Int32&gt;시작 인덱스를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains count bytes.</source>
          <target state="translated">&lt;xref:System.Int32&gt;바이트 수를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Empty implementation that does nothing.</source>
          <target state="translated">아무 작업도 수행 하는 빈 구현입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>String that contains data to write.</source>
          <target state="translated">쓸 데이터를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Char&gt; that contains a character to write.</source>
          <target state="translated">&lt;xref:System.Char&gt;쓸 문자를 들어 있는입니다.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Char&gt; array of buffer that contains data to write.</source>
          <target state="translated">&lt;xref:System.Char&gt;쓸 데이터를 포함 하는 버퍼의 배열입니다.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains start index.</source>
          <target state="translated">&lt;xref:System.Int32&gt;시작 인덱스를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains count of characters to write.</source>
          <target state="translated">&lt;xref:System.Int32&gt;쓸 문자 수를 포함 하는입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Writes the comment.</source>
          <target state="translated">메모를 작성합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The method does not verify well-formedness.</source>
          <target state="translated">메서드는 올바른 형식 인지를 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Other methods called by this one do the necessary checks.</source>
          <target state="translated">이 호출 하는 다른 메서드는 필요한 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>String that contains the comment to write.</source>
          <target state="translated">쓰려는 주석을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Cache the comment's string.</source>
          <target state="translated">설명의 문자열을 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>String that contains the comment to write.</source>
          <target state="translated">쓰려는 주석을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Should never be called.</source>
          <target state="translated">호출 되 면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>String that contains document name.</source>
          <target state="translated">문서 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>String that contains publication id.</source>
          <target state="translated">게시 id를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>String that contains system id.</source>
          <target state="translated">시스템 id가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>String that contains subset name.</source>
          <target state="translated">하위 집합 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Checks the attribute for well-formedness and writes the end of the attribute.</source>
          <target state="translated">형식에 대 한 특성을 확인 하 고 특성의 끝 부분을 씁니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Writes the end of the attribute.</source>
          <target state="translated">특성의 끝 부분을 씁니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>There is an assumption of well-formedness, so no additional checks are performed.</source>
          <target state="translated">때문에 없는 추가 검사도 수행 하는 올바른 형식 인지 이라는 가정이 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Checks the comment for well-formedness and writes the end of the comment.</source>
          <target state="translated">형식에 대 한 메모를 확인 하 고 주석의 끝 부분을 씁니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Checks the element for well-formedness and writes the end of the element.</source>
          <target state="translated">형식에 대 한 요소를 검사 하 고 끝 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Writes the end of the element with local name.</source>
          <target state="translated">로컬 이름 가진 요소의 끝 부분을 씁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Well-formedness is assumed, so no additional checks are performed.</source>
          <target state="translated">제대로 가정 때문에 없는 추가 검사도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>String that contains local name of element.</source>
          <target state="translated">요소의 로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Writes the end of the element with prefix, local name, and namespace.</source>
          <target state="translated">접두사, 로컬 이름 및 네임 스페이스를 사용 하 여 요소의 끝 부분을 씁니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>No checks are performed.</source>
          <target state="translated">아무 검사도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>String that contains element prefix.</source>
          <target state="translated">요소의 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>String that contains local name of element.</source>
          <target state="translated">요소의 로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>String that contains namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Checks the namespace for well-formedness and writes the namespace.</source>
          <target state="translated">형식에 대 한 네임 스페이스를 확인 하 고 네임 스페이스를 씁니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Checks the processing instruction for well-formedness and writes the processing instruction.</source>
          <target state="translated">처리 명령의 올바른 형식 인지를 확인 하 고 처리 명령을 씁니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Writes the end of the root of the tree and resets the state.</source>
          <target state="translated">트리의 루트의 끝을 쓰고 상태를 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>String that contains name of entity.</source>
          <target state="translated">엔터티의 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Checks the element for well-formedness before writing the end of the element.</source>
          <target state="translated">요소의 끝에 쓰기 전에 올바른 형식 인지에 대 한 요소를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Write an item to output.</source>
          <target state="translated">항목 출력을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If currently constructing an Xml tree, then the item is always copied.</source>
          <target state="translated">현재 Xml 트리를 생성 하는 경우 항목이 항상 복사 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>At the top-level, the item's identity is preserved unless it is an atomic value.</source>
          <target state="translated">최상위 수준에서 항목의 id는 원자 값은 아닌 경우 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to write.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Checks the namespace declaration for well-formedness and writes the namespace declaration.</source>
          <target state="translated">네임 스페이스 선언이 올바른 형식 인지를 확인 하 고 네임 스페이스 선언을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>String that contains namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>String that contains namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Adds a new namespace declaration <ph id="ph1">`- xmlns:prefix="ns"`</ph> - to the set of in-scope declarations.</source>
          <target state="translated">새 네임 스페이스 선언이 추가 <ph id="ph1">`- xmlns:prefix="ns"`</ph> -: 범위에 선언 집합입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This method does not perform any additional checks.</source>
          <target state="translated">이 메서드는 추가 검사를 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>String that contains namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>String that contains namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Caches the namespace's text.</source>
          <target state="translated">네임 스페이스의 텍스트를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>String that contains fully qualified namespace.</source>
          <target state="translated">정규화 된 네임 스페이스를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Writes the processing instruction.</source>
          <target state="translated">처리 명령을 씁니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>No checks for well-formedness are done by this method; the called methods do checks if needed.</source>
          <target state="translated">올바른 형식 인지 확인 하지 않으면이 메서드에서 수행 됩니다. 호출된 된 메서드에 필요한 경우 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>String that contains target of instruction.</source>
          <target state="translated">명령의 대상을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>String that contains text of instruction.</source>
          <target state="translated">명령 텍스트가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Caches the processing instruction's text.</source>
          <target state="translated">처리 명령 텍스트를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>String that contains instruction.</source>
          <target state="translated">명령이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>String that contains raw data.</source>
          <target state="translated">원시 데이터를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Char&gt; buffer array to be written.</source>
          <target state="translated">&lt;xref:System.Char&gt;쓸 버퍼 배열입니다.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains start index.</source>
          <target state="translated">&lt;xref:System.Int32&gt;시작 인덱스를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains count characters to write.</source>
          <target state="translated">&lt;xref:System.Int32&gt;쓸 문자 수 들어 있는입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Writes a text block without escaping special characters.</source>
          <target state="translated">특수 문자를 이스케이프 처리 하지 않고 텍스트 블록을 씁니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>String that contains text to write.</source>
          <target state="translated">쓸 텍스트가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Checks the attribute for well-formedness before writing the start of the attribute.</source>
          <target state="translated">특성의 시작을 작성 하기 전에 올바른 형식 인지에 대 한 특성을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>String that contains prefix of attribute.</source>
          <target state="translated">특성의 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>String that contains local name of attribute.</source>
          <target state="translated">특성의 로컬 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>String that contains namespace of attribute.</source>
          <target state="translated">특성의 네임 스페이스를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Writes an attribute with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">특성에서 계산 된 이름으로 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>String that contains name of attribute.</source>
          <target state="translated">특성의 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Writes an attribute with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">특성에서 계산 된 이름으로 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Writes an attribute with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">특성에서 계산 된 이름으로 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>String that contains tag name.</source>
          <target state="translated">태그 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains prefix mapping index.</source>
          <target state="translated">&lt;xref:System.Int32&gt;접두사의 매핑 인덱스를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Writes an attribute with a name that is computed from a "prefix:localName" tag name and a set of prefix mappings.</source>
          <target state="translated">"접두사: localName" 태그 이름과 접두사 매핑 집합에서 계산 된 이름 사용 하 여 특성을 씁니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>String that contains tag name of attribute.</source>
          <target state="translated">특성의 태그 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>String that contains namespace of attribute.</source>
          <target state="translated">특성의 네임 스페이스를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Writes the start of the attribute with an empty prefix, namespace, and null schema type.</source>
          <target state="translated">빈 접두사, 네임 스페이스 및 null 스키마 형식을 가진 특성의 시작 부분을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>String that contains local name.</source>
          <target state="translated">로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Writes the start of the attribute with local name.</source>
          <target state="translated">로컬 이름이 있는 특성의 시작을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>String that contains the local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Writes the start of the attribute with prefix, local name and ns without checks for well-formedness.</source>
          <target state="translated">접두사, 로컬 이름 및 형식에 대 한 검사 없이 ns가 있는 특성의 시작 부분을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>String that contains the prefix of the namespace.</source>
          <target state="translated">네임 스페이스의 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>String that contains the local name of the attribute.</source>
          <target state="translated">특성의 로컬 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>String that contains the namespace.</source>
          <target state="translated">네임 스페이스를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Checks the start of the comment for well-formedness and writes the start of the comment.</source>
          <target state="translated">올바른 형식 인지 주석의 시작을 확인 하 고 주석의 시작을 씁니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Boolean that indicates whether to write the XML declaration with the version number that appears at the beginning of the document.</source>
          <target state="translated">문서의 시작 부분에 표시 되는 버전 번호를 사용 하 여 XML 선언을 쓸지 여부를 나타내는 부울입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Writes start element after checks that ensure well-formedness.</source>
          <target state="translated">올바른 형식 인지 확인 하는 검사 한 후 시작 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>String that contains the namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>String that contains the local name of the element.</source>
          <target state="translated">요소의 로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>String that contains the namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Writes an element with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">계산 된 이름 가진 요소를 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlQualifiedName&gt; that contains the name.</source>
          <target state="translated">&lt;xref:System.Xml.XmlQualifiedName&gt;이름이 들어 있는입니다.&lt;/xref:System.Xml.XmlQualifiedName&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Writes an element with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">계산 된 이름 가진 요소를 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Writes an element with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">계산 된 이름 가진 요소를 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>String that contains the tag name.</source>
          <target state="translated">태그 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Int32&gt; that contains the index.</source>
          <target state="translated">&lt;xref:System.Int32&gt;인덱스를 포함 합니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Writes an element with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">계산 된 이름 가진 요소를 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>String that contains the tag name.</source>
          <target state="translated">태그 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>String that contains the namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Writes the local name with an empty prefix and namespace.</source>
          <target state="translated">빈 접두사 및 네임 스페이스와 로컬 이름을 기록합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>String that contains the local name.</source>
          <target state="translated">로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Writes the start of an element.</source>
          <target state="translated">요소의 시작을 씁니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>There is an assumption of well-formedness, so no additional checks are performed.</source>
          <target state="translated">때문에 없는 추가 검사도 수행 하는 올바른 형식 인지 이라는 가정이 있습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>String that contains the local name of the start element.</source>
          <target state="translated">시작 요소의 로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Writes an element with a name that is computed from a <ph id="ph1">`prefix:localName`</ph> tag name and a set of prefix mappings.</source>
          <target state="translated">계산 된 이름 가진 요소를 작성 한 <ph id="ph1">`prefix:localName`</ph> 태그 이름과 접두사 매핑 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>String that contains the namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>String that contains the local name of the start element.</source>
          <target state="translated">시작 요소의 로컬 이름이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>String that contains the namespace name.</source>
          <target state="translated">네임 스페이스 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Checks for well-formedness and writes the start of the namespace.</source>
          <target state="translated">올바른 형식 인지 확인 하 고 네임 스페이스의 시작을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>String that contains the namespace prefix.</source>
          <target state="translated">네임 스페이스 접두사를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Checks the comment for well-formedness and writes the start of the processing instruction.</source>
          <target state="translated">형식에 대 한 주석을 확인 하 고 처리 명령의 시작을 씁니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>String that contains the name of the target of the processing instruction.</source>
          <target state="translated">처리 명령의 대상의 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Checks the root of the tree for well-formedness and writes the root of the tree.</source>
          <target state="translated">올바른 형식 인지 트리의 루트를 검사 하 고 트리의 루트를 씁니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Xml.WriteState&gt; object.</source>
          <target state="translated">A &lt;xref:System.Xml.WriteState&gt;개체입니다.&lt;/xref:System.Xml.WriteState&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Checks the string for well-formedness and writes text.</source>
          <target state="translated">형식에 대 한 문자열을 검사 하 고 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>String that contains text to write.</source>
          <target state="translated">쓸 텍스트가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Writes text.</source>
          <target state="translated">텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Well-formedness is assumed, so no checks are performed.</source>
          <target state="translated">제대로 가정 하므로 아무 검사도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>String that contains text to write.</source>
          <target state="translated">쓸 텍스트가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Char&gt; of the low character.</source>
          <target state="translated">&lt;xref:System.Char&gt;낮은 문자입니다.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Char&gt; of the high character.</source>
          <target state="translated">&lt;xref:System.Char&gt;높은 문자입니다.&lt;/xref:System.Char&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>String that contains the whitespace to write.</source>
          <target state="translated">쓸 공백을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A string that contains the language identifier.</source>
          <target state="translated">언어 식별자를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">&lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; Throw</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XmlSpace&gt; object.</source>
          <target state="translated">&lt;xref:System.Xml.XmlSpace&gt;개체입니다.&lt;/xref:System.Xml.XmlSpace&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Copies a node by value to output according to the following Xslt rules: identity is never preserved, if the item is an Rtf, preserve serialization hints when copying, and if the item is a root node, copy the children of the root.</source>
          <target state="translated">노드 값 다음 Xslt 규칙에 따라 출력을 통해 복사: identity는 보존 되지 않습니다, 항목이 Rtf 경우, serialization 힌트를 복사할 때 보존 및 항목 루트 노드인 경우 루트의 자식 항목을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>