<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6986e3d6477e28b493a3e40d0600f674566e3242</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.ParserContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf2025fc76ff4052764239910603be6f7af88795</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e857876c84c0fe268fa6b20d6a9101278a6e668b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides context information required by a XAML parser.</source>
          <target state="translated">XAML 파서에서 필요한 컨텍스트 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML parser that this context refers to is the <ph id="ph1">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph> era XAML parser API that is specific to the WPF implementation, as exposed in &lt;xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt; and &lt;xref:System.Windows.Markup.XamlWriter?displayProperty=fullName&gt;.</source>
          <target state="translated">이 컨텍스트를 참조 하는 XAML 파서가 <ph id="ph1">[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]</ph> &lt;xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Markup.XamlWriter?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Markup.XamlWriter?displayProperty=fullName&gt; &lt;/xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt; 에 노출 된 WPF 구현에 지정 된 연대 XAML 파서에 API</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML system in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> uses a more sophisticated XAML type system and thus also uses a different type of context for XAML processing operations.</source>
          <target state="translated">XAML 시스템에서 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> 보다 정교한 XAML 형식 시스템을 사용 하며 따라서 사용 하 여 다른 종류의 상황에 맞는 XAML 처리 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Xaml.XamlSchemaContext&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Xaml.XamlSchemaContext&gt;.&lt;/xref:System.Xaml.XamlSchemaContext&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A ParserContext is typically used as an input for a call to a &lt;xref:System.Windows.Markup.XamlReader&gt; operation.</source>
          <target state="translated">에 대 한 호출에 대 한 입력으로는 ParserContext은 일반적으로 사용 된 &lt;xref:System.Windows.Markup.XamlReader&gt;작업.&lt;/xref:System.Windows.Markup.XamlReader&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, you are using overloads of &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt; or &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=fullName&gt; where supplying the  ParserContext provides greater control over factors such as the type mapping to XAML, or altering XML processing defaults.</source>
          <target state="translated">이러한 경우의 오버 로드를 사용 하는 &lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;또는 &lt;xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=fullName&gt;을 XAML 형식 매핑 등의 요인에 대 한 제어 강화를 제공 하는 ParserContext 제공 하거나 XML 변경 처리 기본값 위치.&lt;/xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a ParserContext as opposed to using &lt;xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt; default behavior is an advanced scenario.</source>
          <target state="translated">사용 하 여 달리 ParserContext를 사용 하 여 &lt;xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt;기본 동작은 고급 시나리오에 해당 합니다.&lt;/xref:System.Windows.Markup.XamlReader?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`xml:lang`</ph> and <ph id="ph2">`xml:space`</ph> behavior is one of the aspects of a context you can override.</source>
          <target state="translated"><ph id="ph1">`xml:lang`</ph>및 <ph id="ph2">`xml:space`</ph> 동작을 재정의할 수 있습니다 컨텍스트의 측면 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the parser context uses <ph id="ph1">`en-us`</ph> based values.</source>
          <target state="translated">파서 컨텍스트 기본적으로 사용 하 여 <ph id="ph1">`en-us`</ph> 값을 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on why the language-level context for XAML uses <ph id="ph1">`en-us`</ph> rather than a culture-invariant value, see <bpt id="p1">[</bpt>WPF Globalization and Localization Overview<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">XAML에 대 한 언어 수준 컨텍스트 이유에 대 한 자세한 내용은 사용 하 여 <ph id="ph1">`en-us`</ph> 고정 문화권 값이 아닌 참조 <bpt id="p1">[</bpt>WPF 전역화 및 지역화 개요<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_ParserContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_ParserContext"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified &lt;xref:System.Xml.XmlParserContext&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlParserContext&gt;.&lt;/xref:System.Xml.XmlParserContext&gt; 지정된을 사용 하 여 클래스</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The XML processing context to base the new <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on.</source>
          <target state="translated">새 기본 XML 처리 컨텍스트 <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;xmlParserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;xmlParserContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the base URI for this context.</source>
          <target state="translated">이 컨텍스트에 대 한 기본 URI를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BaseUri is used to resolve external resources that are referenced in XAML.</source>
          <target state="translated">BaseUri는 XAML에서 참조 되는 외부 리소스를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_BaseUri"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_BaseUri"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The base URI, as a string.</source>
          <target state="translated">문자열로 서 기본 URI입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Converts an <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an &lt;xref:System.Xml.XmlParserContext&gt;.</source>
          <target state="translated">변환 된 <bpt id="p1">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.Xml.XmlParserContext&gt;.&lt;/xref:System.Xml.XmlParserContext&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The context to convert to an &lt;xref:System.Xml.XmlParserContext&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.XmlParserContext&gt;.&lt;/xref:System.Xml.XmlParserContext&gt; 변환할 컨텍스트</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XML parser context.</source>
          <target state="translated">XML 파서 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;parserContext&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use with this <bpt id="p2">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Windows.Markup.XamlTypeMapper"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 사용 하도록 <bpt id="p2">&lt;xref href="System.Windows.Markup.ParserContext"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type mapper to use when mapping XAML elements to CLR types.</source>
          <target state="translated">XAML 요소 CLR 형식에 매핑할 때 사용할 형식 매퍼입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref uid="langword_csharp_xml:lang" name="xml:lang" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string for this context.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref uid="langword_csharp_xml:lang" name="xml:lang" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컨텍스트에 대 한 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is analogous to &lt;xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성은 &lt;xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XmlLang"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XmlLang"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref uid="langword_csharp_xml:lang" name="xml:lang" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> string value.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_xml:lang" name="xml:lang" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the XAML namespace dictionary for this XAML parser context.</source>
          <target state="translated">이 XAML 파서가 컨텍스트에 대 한 XAML 네임 스페이스 사전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default dictionary is an initially empty &lt;xref:System.Windows.Markup.XmlnsDictionary&gt;.</source>
          <target state="translated">기본 사전이 처음 비어 &lt;xref:System.Windows.Markup.XmlnsDictionary&gt;.&lt;/xref:System.Windows.Markup.XmlnsDictionary&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Markup.XmlnsDictionary&gt; uses XAML namespace prefixes as keys and the complete XAML namespace identifier (typically a URI in string form) as values.</source>
          <target state="translated">&lt;xref:System.Windows.Markup.XmlnsDictionary&gt;키와 전체 XAML 네임 스페이스 식별자 (일반적으로 문자열 형식의 URI)로 XAML 네임 스페이스 접두사를 사용 하 여 값으로.&lt;/xref:System.Windows.Markup.XmlnsDictionary&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XmlnsDictionary"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XmlnsDictionary"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The XAML namespace dictionary.</source>
          <target state="translated">XAML 네임 스페이스 사전입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the character for <bpt id="p1">&lt;xref uid="langword_csharp_xml:space" name="xml:space" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or this context.</source>
          <target state="translated">에 대 한 문자를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref uid="langword_csharp_xml:space" name="xml:space" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는이 컨텍스트의 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is analogous to &lt;xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 속성은 &lt;xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=fullName&gt;.&lt;/xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="xamlTextUsage_XmlSpace"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## XAML Text Usage</source>
          <target state="translated"><bpt id="p1">&lt;a name="xamlTextUsage_XmlSpace"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The character for <bpt id="p1">&lt;xref uid="langword_csharp_xml:space" name="xml:space" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or this context.</source>
          <target state="translated">에 대 한 문자 <bpt id="p1">&lt;xref uid="langword_csharp_xml:space" name="xml:space" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는이 컨텍스트의 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>