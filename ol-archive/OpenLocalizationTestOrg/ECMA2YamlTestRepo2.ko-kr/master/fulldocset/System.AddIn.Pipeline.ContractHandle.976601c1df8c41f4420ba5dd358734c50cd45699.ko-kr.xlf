<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fbb4c9330849896b576e34e91d06489d762a57f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.AddIn.Pipeline.ContractHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c278648a3afb4a9f87410804e881fa1dd638d1e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c6109f130925d52b144884b25d41278898989d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that control the lifetime of an add-in.</source>
          <target state="translated">추가 기능을 수명을 제어 하는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</source>
          <target state="translated">추가 기능 모델은 추가 기능의 응용 프로그램 도메인 간에 프로세스 간에 통신 하는 기능을 제공 하므로를 회수 가비지 수집기에 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</source>
          <target state="translated">이 클래스는 참조를 해당 계약 수명 토큰을 확보 하 여 추가 기능에 대 한 메커니즘을 횟수를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a ContractHandle object is constructed, it calls the &lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt; method on the contract that is passed to the constructor.</source>
          <target state="translated">ContractHandle 개체가 생성 된 경우 호출 하는 &lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;생성자에 전달 되는 계약에서 메서드가.&lt;/xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the ContractHandle object is disposed or finalized, it calls the &lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt; method on the contract, which removes its hold on the contract.</source>
          <target state="translated">ContractHandle 개체를 삭제 하거나 종료, 호출 된 &lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;계약에 보유를 제거 되는 계약에서 메서드가.&lt;/xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adapters implement the contract.</source>
          <target state="translated">어댑터는 계약을 구현합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ContractHandle class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</source>
          <target state="translated">ContractHandle 클래스 조정 되는 계약의 수명을 관리 하는 파이프라인 개발자가 하는 계약 뷰 어댑터에 사용할 하도록 설계 되었습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</source>
          <target state="translated">일반적으로이 클래스의 인스턴스는 어댑터 클래스를 생성 하는 동안 인스턴스화됩니다 하 고 어댑터의 인스턴스 필드에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the adapter class is garbage-collected, the ContractHandle object will also be collected and the ContractHandle object will revoke the lifetime token on the contract.</source>
          <target state="translated">어댑터 클래스를 가비지 수집 된 경우 ContractHandle 개체도 수집 되 고 ContractHandle 개체 계약에 대 한 수명 토큰을 취소 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that your view-to-contract adapters inherit from the &lt;xref:System.AddIn.Pipeline.ContractBase&gt; class.</source>
          <target state="translated">보기-계약 어댑터 &lt;xref:System.AddIn.Pipeline.ContractBase&gt;클래스&lt;/xref:System.AddIn.Pipeline.ContractBase&gt; 에서 상속 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use a default implementation for the members of &lt;xref:System.AddIn.Contract.IContract&gt;, which means you need to implement only the members of your specific contract.</source>
          <target state="translated">멤버에 대 한 기본 구현을 사용할 수 있습니다 &lt;xref:System.AddIn.Contract.IContract&gt;, 즉, 특정 계약의 구성원만 구현 해야 합니다.&lt;/xref:System.AddIn.Contract.IContract&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The contract to use in the pipeline.</source>
          <target state="translated">파이프라인에서 사용 하는 계약입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the instance of the add-in-side adapter when the application domain was created.</source>
          <target state="translated">응용 프로그램 도메인이 만들어진 경우 추가 기능 측 어댑터의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The add-in-side adapters are typed as &lt;xref:System.AddIn.Contract.IContract&gt;.</source>
          <target state="translated">추가 기능 측 어댑터 &lt;xref:System.AddIn.Contract.IContract&gt;.&lt;/xref:System.AddIn.Contract.IContract&gt; 로 형식화 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application domain was previously created by a user, there is no owner.</source>
          <target state="translated">응용 프로그램 도메인 사용자가 이전에 만든, 소유자가입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The application domain to check.</source>
          <target state="translated">확인 하려면 응용 프로그램 도메인입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the owner of the application domain.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 도메인의 소유자를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;domain&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the contract used by a pipeline.</source>
          <target state="translated">파이프라인에서 사용 되는 계약을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The contract, which is derived from <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생 되는 계약을 <bpt id="p1">&lt;xref href="System.AddIn.Contract.IContract"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether an application domain is owned by the specified contract.</source>
          <target state="translated">지정된 된 계약에서 응용 프로그램 도메인은 소유 하는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The contract to check.</source>
          <target state="translated">확인 하는 계약입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The application domain to check.</source>
          <target state="translated">확인 하려면 응용 프로그램 도메인입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the contract owns the application domain; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>계약; 응용 프로그램 도메인을 소유 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;contract&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;domain&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Revokes the lifetime token on a contract, regardless of input.</source>
          <target state="translated">입력에 관계 없이 계약에 대해 수명 토큰을 취소합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</source>
          <target state="translated">입력에 관계 없이 계약에 대 한 수명 토큰을 취소 하 고 선택적으로 관리 되는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Releases the resources associated with the <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">와 연결 된 리소스를 해제는 <bpt id="p1">&lt;xref href="System.AddIn.Pipeline.ContractHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;.&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's Finalize method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 Finalize 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 &lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When called by the garbage collector, this method calls the &lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt; method.</source>
          <target state="translated">이 메서드를 호출 하는 가비지 수집기에서 호출 되 면는 &lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;메서드.&lt;/xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>