<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a36c16faa92bd567402d862785dbaecdaba04220</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSourceValidationException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">294ce71c69344f176dfe5b6f9a23cf712681ae8e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0feefa61e0bf6767af5dba63f635e497211c022</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">설명의 유효성을 검사 하는 동안 새로 발생 했거나 값 삽입, 업데이트 또는 삭제 하기 전에 값을 수정 하는 예외는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSourceValidationException class contains type conversion and property setter exceptions.</source>
          <target state="translated">형식 변환 및 속성 setter 예외 LinqDataSourceValidationException 클래스에 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the exceptions that are thrown during validation are contained in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; collection.</source>
          <target state="translated">에 포함 된 모든 유효성 검사 중에 throw 된 예외는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve each validation exception by iterating through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; collection.</source>
          <target state="translated">반복 하 여 각 유효성 검사 예외를 검색할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically handle exceptions in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, and &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; events.</source>
          <target state="translated">일반적으로에서 예외를 처리 하는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation exception is thrown, the <ph id="ph1">`Exception`</ph> property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object contains a LinqDataSourceValidationException object.</source>
          <target state="translated">유효성 검사 예외가 throw 되 면는 <ph id="ph1">`Exception`</ph> 의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;LinqDataSourceValidationException 개체를 포함 하는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no exception is thrown, the <ph id="ph1">`Exception`</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">예외가 throw 되는 <ph id="ph1">`Exception`</ph> 속성 포함 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To handle validation exceptions, create a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; event.</source>
          <target state="translated">유효성 검사 예외를 처리 하려면 만들기에 대 한 처리기는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event handler, check whether the <ph id="ph1">`Exception`</ph> property of the event argument class contains a value other than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">이벤트 처리기에서 확인 여부는 <ph id="ph1">`Exception`</ph> 이벤트 인수 클래스의 속성 값이 아닌 다른 포함 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Exception`</ph> property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; property.</source>
          <target state="translated">경우는 <ph id="ph1">`Exception`</ph> 속성이 null이 아닌 하나 이상의 유효성 검사 예외가 발생 하 고에서 각 유효성 검사 예외를 검색할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation exception can occur if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, trying to update an integer property by using non-numeric characters causes a validation exception.</source>
          <target state="translated">예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려는 유효성 검사 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</source>
          <target state="translated">LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a system-supplied message that describes the error.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오류를 설명 하는 시스템 제공 메시지로 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system-supplied message that describes the error takes into account the current system culture.</source>
          <target state="translated">오류를 설명 하는 시스템 제공 메시지는 현재 시스템 문화권을 고려 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; class.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;클래스&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|<ph id="ph1">`null`</ph>.|   |&lt;xref:System.Exception.Message%2A&gt;|A system-supplied localized description.|</source>
          <target state="translated">| 속성 | 값 |   |--------------|-----------|   | &lt;xref:System.Exception.InnerException%2A&gt;| <ph id="ph1">`null`</ph>.|   | &lt;xref:System.Exception.Message%2A&gt;| 시스템 제공 A는 지역화 된 설명입니다. |&lt;/xref:System.Exception.Message%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified message that describes the error.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 메시지 오류를 설명 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; class.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;클래스&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Value|   |--------------|-----------|   |&lt;xref:System.Exception.InnerException%2A&gt;|<ph id="ph1">`null`</ph>.|   |&lt;xref:System.Exception.Message%2A&gt;|The error message string specified in <ph id="ph2">`message`</ph>.|</source>
          <target state="translated">| 속성 | 값 |   |--------------|-----------|   | &lt;xref:System.Exception.InnerException%2A&gt;| <ph id="ph1">`null`</ph>.|   | &lt;xref:System.Exception.Message%2A&gt;| 에 지정 된 오류 메시지 문자열 <ph id="ph2">`message`</ph>. |&lt;/xref:System.Exception.Message%2A&gt; &lt;/xref:System.Exception.InnerException%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The message that describes the error.</source>
          <target state="translated">오류를 설명 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with serialized data.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> serialize 된 데이터 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</source>
          <target state="translated">이 생성자는 역직렬화 스트림을 통해 전송 되는 예외 개체를 다시 구성 하는 동안 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">직렬화 된 개체 데이터를 보유 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Context information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대 한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified message that describes the error, and a collection of references to inner exceptions.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 메시지 오류 및 내부 예외에 대 한 참조의 컬렉션을 설명 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The message that describes the error.</source>
          <target state="translated">오류를 설명 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The collection of validation exceptions.</source>
          <target state="translated">유효성 검사 예외의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a specified error message and a reference to the inner exception.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceValidationException"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 오류 메시지와 내부 예외에 대 한 참조를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically will not use this constructor because validation exceptions are stored in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; property, not the &lt;xref:System.Exception.InnerException%2A&gt; property.</source>
          <target state="translated">일반적으로 사용 하지 것입니다이 생성자에 저장 되므로 유효성 검사 예외는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;속성 하지는 &lt;xref:System.Exception.InnerException%2A&gt;속성.&lt;/xref:System.Exception.InnerException%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The message that describes the error.</source>
          <target state="translated">오류를 설명 하는 메시지입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">현재 예외의 원인인 예외입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets information about the exception and adds it to the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">예외에 대 한 정보를 가져오고에 추가 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetObjectData method adds information about the exception to the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; object that is targeted for serialization.</source>
          <target state="translated">에 대 한 예외에 대 한 정보를 추가 하는 경우 GetObjectData 메서드는 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;개체 serialization에 대 한 대상입니다.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the exception is reconstituted from the &lt;xref:System.Runtime.Serialization.SerializationInfo&gt; that is transmitted over the stream.</source>
          <target state="translated">deserialization을 수행 하는 동안 예외가 재구성 됩니다는 &lt;xref:System.Runtime.Serialization.SerializationInfo&gt;스트림을 통해 전송 되는.&lt;/xref:System.Runtime.Serialization.SerializationInfo&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data for the exception that is being thrown.</source>
          <target state="translated">Throw 되는 예외에 대 한 직렬화 된 개체 데이터를 보유 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Context information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대 한 컨텍스트 정보입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets one or more exceptions that occurred when new or modified data was being validated.</source>
          <target state="translated">새롭거나 수정 된 데이터 유효성을 검사 하는 경우에 발생 한 하나 이상의 예외를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InnerExceptions collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</source>
          <target state="translated">업데이트를 하기 전에 데이터 유효성 검사 하는 동안 발생 하는 모든 유효성 검사 예외를 포함 하는 컬렉션 InnerExceptions 삽입 또는 삭제 작업.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation exception can occur if a value does not match the type of the property.</source>
          <target state="translated">값 속성의 형식과 일치 하지 않는 경우 유효성 검사 예외가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</source>
          <target state="translated">예를 들어 숫자가 아닌 문자를 사용 하 여 정수 속성을 업데이트 하려고 하면 유효성 검사 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</source>
          <target state="translated">LINQ to SQL 클래스 예상된 범위 또는 패턴 내에 있는 값이 속성에 포함 되도록 하는 사용자 지정된 유효성 검사 조건을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A collection that contains the exceptions.</source>
          <target state="translated">예외를 포함 하는 컬렉션입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>