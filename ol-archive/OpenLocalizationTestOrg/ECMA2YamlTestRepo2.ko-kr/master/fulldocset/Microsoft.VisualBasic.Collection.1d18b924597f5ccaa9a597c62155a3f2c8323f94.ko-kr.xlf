<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2343ebf844c28d67c970f4255a6cfa2e88275b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.VisualBasic.Collection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6e78627deca25ca1c1514d44e74fd1fbe5e9a16</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c04bd635de8ded7c6dd1dc552b64a18511ef8e4f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is an ordered set of items that can be referred to as a unit.</source>
          <target state="translated">Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 은 하나의 단위로 참조할 수 있는 항목의 정렬된 된 집합입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph> &gt;  Whenever possible, you should use the generic collections in the &lt;xref:System.Collections.Generic?displayProperty=fullName&gt; namespace or the &lt;xref:System.Collections.Concurrent&gt; namespace instead of a Visual Basic <ph id="ph2">`Collection`</ph>.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph>&gt;의 제네릭 컬렉션을 사용 해야 가능 하면는 &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;네임 스페이스 또는 &lt;xref:System.Collections.Concurrent&gt;Visual Basic 대신 네임 스페이스 <ph id="ph2">`Collection`</ph>.&lt;/xref:System.Collections.Concurrent&gt; &lt;/xref:System.Collections.Generic?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Collections<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>컬렉션<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Visual Basic <ph id="ph1">`Collection`</ph> object provides a convenient way to refer to a related group of items as a single object.</source>
          <target state="translated">Visual Basic <ph id="ph1">`Collection`</ph> 개체를 단일 개체로 관련된 그룹 항목을 참조 하는 편리한 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items, or <bpt id="p1">*</bpt>elements<ept id="p1">*</ept>, in a collection need only be related by the fact that they exist in the collection.</source>
          <target state="translated">항목을 또는 <bpt id="p1">*</bpt>요소<ept id="p1">*</ept>의 컬렉션을 컬렉션에 존재 한다는 점에서 관련만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements of a collection do not have to share the same data type.</source>
          <target state="translated">컬렉션의 요소는 같은 데이터 형식을 공유 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a collection the same way you create other objects, as the following example illustrates.</source>
          <target state="translated">다음 예제와 같이 다른 개체를 만들면 동일한 방식으로 컬렉션을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   Dim coll As New Microsoft.VisualBasic.Collection()   ```</ph>       Once you have created a collection, you can do any of the following:      -   Add an element with the &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">```   Dim coll As New Microsoft.VisualBasic.Collection()   ```</ph>컬렉션을 만든 후 다음 중 하나를 수행할 수 있습니다.-사용 하 여 요소를 추가 &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;메서드.&lt;/xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Remove an element with the &lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt; method.</source>
          <target state="translated">-을 가진 요소를 제거 합니다.는 &lt;xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;메서드.&lt;/xref:Microsoft.VisualBasic.Collection.Remove%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Remove all elements with the &lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt; method.</source>
          <target state="translated">-모든 요소를 제거는 &lt;xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;메서드.&lt;/xref:Microsoft.VisualBasic.Collection.Clear%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Find out how many elements the collection contains with the &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property.</source>
          <target state="translated">-컬렉션에 포함 된 요소 수에 대해 알아봅니다는 &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Check whether a specific element is present with the &lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt; method.</source>
          <target state="translated">-특정 요소와 있는지 여부를 확인는 &lt;xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;메서드.&lt;/xref:Microsoft.VisualBasic.Collection.Contains%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Return a specific element from the collection with the &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt; property.</source>
          <target state="translated">-사용 하 여 컬렉션에서 특정 요소를 반환 합니다.는 &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Iterate through the entire collection with the <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">-사용 하 여 전체 컬렉션을 반복 합니다.는 <bpt id="p1">[</bpt>각각에 대해... 다음 문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph>     &gt;  Although the Visual Basic <ph id="ph2">`Collection`</ph> object has functionality identical to the <ph id="ph3">`Collection`</ph> object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 있지만 Visual Basic <ph id="ph2">`Collection`</ph> 개체와 동일한 기능에는 <ph id="ph3">`Collection`</ph> 개체 Visual Basic 6.0에서 COM 환경에서 두 개의 상호 작용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph>     &gt;  Iterating through a Visual Basic <ph id="ph2">`Collection`</ph> is not a thread-safe procedure.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Visual Basic 반복 <ph id="ph2">`Collection`</ph> 은 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</source>
          <target state="translated">컬렉션을 동기화 하는 경우에 다른 스레드에서 예외를 throw 하면 열거자는 컬렉션을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 컬렉션을 잠글 또는 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on locking a programming element, see <bpt id="p1">[</bpt>SyncLock Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">프로그래밍 요소 잠금에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>SyncLock 문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates and returns a new <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">만들고 새 반환 <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> collection returned by this constructor is empty and does not have any initial capacity allocated.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> 이 생성자에 의해 반환 된 컬렉션 비어 있고 초기 용량이 할당 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph> collections are not compatible with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> collections available in the &lt;xref:System.Collections?displayProperty=fullName&gt;, &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;, and &lt;xref:System.Collections.Specialized?displayProperty=fullName&gt; namespaces.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)]</ph>컬렉션와 호환 되지 않습니다.는 <ph id="ph2">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 에서 사용할 수 있는 컬렉션의 &lt;xref:System.Collections?displayProperty=fullName&gt;, &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;, 및 &lt;xref:System.Collections.Specialized?displayProperty=fullName&gt;네임 스페이스.&lt;/xref:System.Collections.Specialized?displayProperty=fullName&gt; &lt;/xref:System.Collections.Generic?displayProperty=fullName&gt; &lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds an element to a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">요소를 추가 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Before`</ph> or <ph id="ph2">`After`</ph> argument must refer to an existing element of the collection; otherwise, an error occurs.</source>
          <target state="translated"><ph id="ph1">`Before`</ph> 또는 <ph id="ph2">`After`</ph> 인수 컬렉션의 기존 요소를 참조 해야, 그렇지 않으면, 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both the <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph> arguments are omitted, the new object is added to the end of the collection.</source>
          <target state="translated">모두는 <ph id="ph1">`Before`</ph> 및 <ph id="ph2">`After`</ph> 인수가 생략 되는 새 개체가 컬렉션의 끝에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>An error also occurs if a specified <ph id="ph1">`Key`</ph> value matches the key for an existing element of the collection.</source>
          <target state="translated">지정 된 경우에 오류가 발생 <ph id="ph1">`Key`</ph> 컬렉션의 기존 요소에 대 한 키와 일치 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object of any type that specifies the element to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 요소를 지정 하는 모든 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</source>
          <target state="translated">고유한 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션의이 새 요소에 액세스할 위치 인덱스 대신 사용할 수 있는 키 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">컬렉션의 상대 위치를 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The element to be added is placed in the collection before the element identified by the <ph id="ph1">`Before`</ph> argument.</source>
          <target state="translated">추가할 요소에서 식별 되는 요소 앞의 컬렉션에 배치 됩니다는 <ph id="ph1">`Before`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Before`</ph> is a numeric expression, it must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated">경우 <ph id="ph1">`Before`</ph> 는 숫자 식 값을 통해 1부터 컬렉션의 사이의 숫자 여야 합니다 &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Before`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</source>
          <target state="translated">경우 <ph id="ph1">`Before`</ph> 는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식에서 참조 되는 요소를 컬렉션에 추가할 때 지정한 키 문자열과 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You cannot specify both <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph>.</source>
          <target state="translated">둘 다 지정할 수 없습니다 <ph id="ph1">`Before`</ph> 및 <ph id="ph2">`After`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An expression that specifies a relative position in the collection.</source>
          <target state="translated">컬렉션의 상대 위치를 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The element to be added is placed in the collection after the element identified by the <ph id="ph1">`After`</ph> argument.</source>
          <target state="translated">추가할 요소에서 식별 되는 요소 뒤의 컬렉션에 배치 됩니다는 <ph id="ph1">`After`</ph> 인수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`After`</ph> is a numeric expression, it must be a number from 1 through the value of the collection's <bpt id="p1">&lt;xref uid="langword_csharp_Count" name="Count" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> property.</source>
          <target state="translated">경우 <ph id="ph1">`After`</ph> 는 숫자 식 값을 통해 1부터 컬렉션의 사이의 숫자 여야 합니다 <bpt id="p1">&lt;xref uid="langword_csharp_Count" name="Count" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`After`</ph> is a <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression, it must correspond to the key string specified when the element referred to was added to the collection.</source>
          <target state="translated">경우 <ph id="ph1">`After`</ph> 는 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식에서 참조 하는 요소를 컬렉션에 추가할 때 지정한 키 문자열과 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You cannot specify both <ph id="ph1">`Before`</ph> and <ph id="ph2">`After`</ph>.</source>
          <target state="translated">둘 다 지정할 수 없습니다 <ph id="ph1">`Before`</ph> 및 <ph id="ph2">`After`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Deletes all elements of a Visual Basic <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Visual Basic의 모든 요소를 삭제 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Clear`</ph> method empties the collection and resets its &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property to 0.</source>
          <target state="translated"><ph id="ph1">`Clear`</ph> 메서드는 컬렉션을 비우고 다시 설정의 &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;속성을 0.&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a Visual Basic <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with a specific key.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic 여부를 나타내는 값 <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체에 특정 키가 있는 요소가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Contains`</ph> returns <ph id="ph2">`True`</ph> if the collection contains an element with a key exactly matching <ph id="ph3">`Key`</ph>.</source>
          <target state="translated"><ph id="ph1">`Contains`</ph>반환 <ph id="ph2">`True`</ph> 컬렉션 정확 하 게 일치 하는 키가 있는 요소가 들어 있으면 <ph id="ph3">`Key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">`Contains`</ph> returns <ph id="ph2">`False`</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">`Contains`</ph> 반환 <ph id="ph2">`False`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Case is ignored when matching key values.</source>
          <target state="translated">키 값 비교 시 대/소문자는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Visual Basic <ph id="ph1">`Collection`</ph> can hold some elements that have keys and other elements without keys.</source>
          <target state="translated">Visual Basic <ph id="ph1">`Collection`</ph> 일부 키가 있는 요소 및 키가 없는 기타 요소를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This depends on whether the call to the &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt; method supplies an argument to the optional <ph id="ph1">`Key`</ph> parameter.</source>
          <target state="translated">이 있는지 여부에 따라 달라 집니다에 대 한 호출에서 &lt;xref:Microsoft.VisualBasic.Collection.Add%2A&gt;하면 선택적 인수를 제공 하는 메서드 <ph id="ph1">`Key`</ph> 매개 변수.&lt;/xref:Microsoft.VisualBasic.Collection.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 사항입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the key for which to search the elements of the collection.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색할 컬렉션의 요소에 대 한 키를 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value indicating whether a Visual Basic <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object contains an element with a specific key.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Boolean" name="Boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual Basic 여부를 나타내는 값 <bpt id="p2">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체에 특정 키가 있는 요소가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the number of elements in a collection.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션의 요소 수가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Count`</ph> property to determine the number of elements in a <ph id="ph2">`Collection`</ph> object.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`Count`</ph> 속성에 있는 요소의 수를 확인 하는 <ph id="ph2">`Collection`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> containing the number of elements in a collection.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref uid="langword_csharp_Integer" name="Integer" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션의 요소 수가 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반복 하는 데 사용 되는 열거자 개체에 대 한 참조를 반환 합니다.는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">[</bpt>For Each...Next Statement<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> calls <ph id="ph1">`GetEnumerator`</ph> to obtain an enumerator object to support iteration over a collection's elements.</source>
          <target state="translated"><bpt id="p1">[</bpt>각각에 대해... 다음 문<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 호출 <ph id="ph1">`GetEnumerator`</ph> 컬렉션의 요소를 반복 하는 열거자 개체를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, you use a <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> loop to traverse a collection or array, and you do not need to call <ph id="ph3">`GetEnumerator`</ph> explicitly.</source>
          <target state="translated">일반적으로 <ph id="ph1">`For Each`</ph>... <ph id="ph2">`Next`</ph> 컬렉션이 나 배열의 이동 하 고 호출할 필요가 없습니다 <ph id="ph3">`GetEnumerator`</ph> 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need closer control over the iteration than the <ph id="ph1">`For Each`</ph>...<ph id="ph2">`Next`</ph> statements provide, you can use the <ph id="ph3">`GetEnumerator`</ph> method to perform a customized traversal.</source>
          <target state="translated">반복 보다 자세히 제어 해야 할 경우는 <ph id="ph1">`For Each`</ph>... <ph id="ph2">`Next`</ph> 명령문을 사용할 수 있습니다는 <ph id="ph3">`GetEnumerator`</ph> 메서드를 사용자 지정된 탐색을 수행 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are some cases in which you might need to do this.</source>
          <target state="translated">일부 경우가 작업을 수행 해야 하는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You might want to return to the beginning of the collection and start the iteration again before it is finished.</source>
          <target state="translated">-하려는 컬렉션의 시작 부분에 반환 하 고 완료 되기 전에 탐색을 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You might want to skip over one or more elements for a variety of reasons.</source>
          <target state="translated">-할 다양 한 이유 때문에 대 한 하나 이상의 요소를 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   You might need to change the elements of the collection in the middle of a traversal.</source>
          <target state="translated">-탐색 도중에 컬렉션의 요소를 변경 해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case you must obtain a new enumerator object because the previous one is invalidated.</source>
          <target state="translated">이 경우 얻어야 새 열거자 개체의 관계를 이전 무효화 되므로 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns a reference to an enumerator object, which is used to iterate over a <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반복 하는 데 사용 되는 열거자 개체에 대 한 참조를 반환 합니다.는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">경우 <ph id="ph1">`Index`</ph> 유형의 <ph id="ph2">`Object`</ph>, <ph id="ph3">`Item`</ph> 속성으로 처리 하도록 시도 <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> 배열 또는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">경우 <ph id="ph1">`Item`</ph> 변환할 수 없습니다 <ph id="ph2">`Index`</ph> 를 <ph id="ph3">`String`</ph> 또는 <ph id="ph4">`Integer`</ph>, throw는 &lt;xref:System.ArgumentException&gt;예외.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph> 속성은 컬렉션에 대 한 기본 속성입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">따라서 다음 코드 줄 동일합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(컬렉션의 요소 위치를 지정 하는 A)는 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>컬렉션의 1에서 값 사이의 숫자 여야 &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Or (B) An <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">또는 (B)는 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션의 요소 위치 또는 키 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">경우 <ph id="ph1">`Index`</ph> 유형의 <ph id="ph2">`Object`</ph>, <ph id="ph3">`Item`</ph> 속성으로 처리 하도록 시도 <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> 배열 또는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">경우 <ph id="ph1">`Item`</ph> 변환할 수 없습니다 <ph id="ph2">`Index`</ph> 를 <ph id="ph3">`String`</ph> 또는 <ph id="ph4">`Integer`</ph>, throw는 &lt;xref:System.ArgumentException&gt;예외.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph> 속성은 컬렉션에 대 한 기본 속성입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">따라서 다음 코드 줄 동일합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(A) A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">(컬렉션의 요소 위치를 지정 하는 A)는 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>컬렉션의 1에서 값 사이의 숫자 여야 &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Or (B) An <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies the position or key string of an element of the collection.</source>
          <target state="translated">또는 (B)는 <bpt id="p1">&lt;xref uid="langword_csharp_Object" name="Object" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컬렉션의 요소 위치 또는 키 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Index`</ph> is of type <ph id="ph2">`Object`</ph>, the <ph id="ph3">`Item`</ph> property attempts to treat it as a <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> array, or integer value.</source>
          <target state="translated">경우 <ph id="ph1">`Index`</ph> 유형의 <ph id="ph2">`Object`</ph>, <ph id="ph3">`Item`</ph> 속성으로 처리 하도록 시도 <ph id="ph4">`String`</ph>, <ph id="ph5">`Char`</ph>, <ph id="ph6">`Char`</ph> 배열 또는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`Item`</ph> cannot convert <ph id="ph2">`Index`</ph> to <ph id="ph3">`String`</ph> or <ph id="ph4">`Integer`</ph>, it throws an &lt;xref:System.ArgumentException&gt; exception.</source>
          <target state="translated">경우 <ph id="ph1">`Item`</ph> 변환할 수 없습니다 <ph id="ph2">`Index`</ph> 를 <ph id="ph3">`String`</ph> 또는 <ph id="ph4">`Integer`</ph>, throw는 &lt;xref:System.ArgumentException&gt;예외.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Item`</ph> property is the default property for a collection.</source>
          <target state="translated"><ph id="ph1">`Item`</ph> 속성은 컬렉션에 대 한 기본 속성입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the following lines of code are equivalent.</source>
          <target state="translated">따라서 다음 코드 줄 동일합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">고유한 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 인덱스 대신 요소 컬렉션에 액세스 하는 데 사용할 수 있는 키 문자열을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Key`</ph> must correspond to the <ph id="ph2">`Key`</ph> argument specified when the element was added to the collection.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>에 해당 해야 합니다는 <ph id="ph2">`Key`</ph> 인수 컬렉션에 요소를 추가할 때를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Returns a specific element of a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object either by position or by key.</source>
          <target state="translated">특정 요소를 반환 하는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 또는 키 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Read-only.</source>
          <target state="translated">읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes an element from a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">요소를 제거는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property by one.</source>
          <target state="translated">때 <ph id="ph1">`Remove`</ph> 컬렉션에서 요소를 삭제 하기 감소 컬렉션의 &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;속성을&amp;1;.&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">것도 감소는 <ph id="ph1">`Index`</ph> 컬렉션에서 삭제 된 요소 다음에 있던 모든 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">요소가 컬렉션에 추가 된 경우는 <ph id="ph1">`Key`</ph>, 사용 해야 해당 <ph id="ph2">`Index`</ph> 제거 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A numeric expression that specifies the position of an element of the collection.</source>
          <target state="translated">컬렉션의 요소 위치를 지정 하는 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Index`</ph> must be a number from 1 through the value of the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt; property.</source>
          <target state="translated"><ph id="ph1">`Index`</ph>컬렉션의 1에서 값 사이의 숫자 여야 &lt;xref:Microsoft.VisualBasic.Collection.Count*&gt;속성.&lt;/xref:Microsoft.VisualBasic.Collection.Count*&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Removes an element from a <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">요소를 제거는 <bpt id="p1">&lt;xref uid="langword_csharp_Collection" name="Collection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`Remove`</ph> deletes an element from a collection, it decrements the collection's &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt; property by one.</source>
          <target state="translated">때 <ph id="ph1">`Remove`</ph> 컬렉션에서 요소를 삭제 하기 감소 컬렉션의 &lt;xref:Microsoft.VisualBasic.Collection.Count%2A&gt;속성을&amp;1;.&lt;/xref:Microsoft.VisualBasic.Collection.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also decrements the <ph id="ph1">`Index`</ph> value of every element that formerly followed the deleted element in the collection.</source>
          <target state="translated">것도 감소는 <ph id="ph1">`Index`</ph> 컬렉션에서 삭제 된 요소 다음에 있던 모든 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an element was added to the collection without a <ph id="ph1">`Key`</ph>, you must use its <ph id="ph2">`Index`</ph> to remove it.</source>
          <target state="translated">요소가 컬렉션에 추가 된 경우는 <ph id="ph1">`Key`</ph>, 사용 해야 해당 <ph id="ph2">`Index`</ph> 제거 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A unique <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</source>
          <target state="translated">고유한 <bpt id="p1">&lt;xref uid="langword_csharp_String" name="String" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 위치 인덱스 대신 요소 컬렉션에 액세스 하는 데 사용할 수 있는 키 문자열을 지정 하는 식입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Key`</ph> must correspond to the <ph id="ph2">`Key`</ph> argument specified when the element was added to the collection.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>에 해당 해야 합니다는 <ph id="ph2">`Key`</ph> 인수 컬렉션에 요소를 추가할 때를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">요소에 복사는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 &lt;xref:System.Array&gt;특정에서 시작 하는 &lt;xref:System.Array&gt;인덱스.&lt;/xref:System.Array&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.ICollection&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.ICollection&gt;인터페이스.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elements are copied to the &lt;xref:System.Array&gt; in the same order in which the enumerator iterates through the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">요소가 복사 되는 &lt;xref:System.Array&gt;순서는 열거자를 통해 반복 하는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체.&lt;/xref:Microsoft.VisualBasic.Collection&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is obtained from the &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt;.</source>
          <target state="translated">이 메서드는 O는 (<ph id="ph1">`n`</ph>) 작업, 여기서 <ph id="ph2">`n`</ph> &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt;.&lt;/xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count%2A&gt; 에서 가져온</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">1 차원 &lt;xref:System.Array&gt;에서 복사한 요소의 대상인 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is greater than the available space from <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에서 사용 가능한 공간 보다 큽니다. <ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The type of the source <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object cannot be cast automatically to the type of the destination <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체의 대상 형식으로 자동 캐스팅할 수 없는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복 하는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.ICollection&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.ICollection&gt;인터페이스.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">[Visual Basic, C#]       <ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">따라서 사용 하 여 <ph id="ph1">`foreach`</ph> 열거자를 직접 조작 하는 대신이 좋습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자는 컬렉션의에서 데이터를 읽는 데 사용할 수 있지만 기본 컬렉션을 수정 하는 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; method also brings the enumerator back to this position.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;메서드도 실행 하면 열거자가이 위치로 복원 합니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, the &lt;xref:System.Collections.IEnumerator.Current%2A&gt; property is undefined.</source>
          <target state="translated">이 위치는 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;속성이 정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call the &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; method to advance the enumerator to the first element of the collection before reading the value of &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;열거자 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 하는 메서드&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; 를 호출 해야 따라서</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.Current%2A&gt; returns the same object until either &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; or &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;될 때까지 동일한 개체를 반환 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;또는 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;호출 됩니다.&lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; sets &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the next element.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;설정 &lt;xref:System.Collections.IEnumerator.Current%2A&gt;를 다음 요소로.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt;&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; passes the end of the collection, the enumerator is positioned after the last element in the collection and &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; also return <ph id="ph1">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환할 수도 <ph id="ph1">`false`</ph>.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt; returns <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt; is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;반환 <ph id="ph1">`false`</ph>, &lt;xref:System.Collections.IEnumerator.Current%2A&gt;정의 되지 않습니다.&lt;/xref:System.Collections.IEnumerator.Current%2A&gt; &lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set &lt;xref:System.Collections.IEnumerator.Current%2A&gt; to the first element of the collection again, you can call &lt;xref:System.Collections.IEnumerator.Reset%2A&gt; followed by &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;다시, 컬렉션의 첫 번째 요소를 호출할 수 있습니다 &lt;xref:System.Collections.IEnumerator.Reset%2A&gt;그 뒤 &lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;.&lt;/xref:System.Collections.IEnumerator.MoveNext%2A&gt; &lt;/xref:System.Collections.IEnumerator.Reset%2A&gt; &lt;/xref:System.Collections.IEnumerator.Current%2A&gt; 설정 하려면</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경 되지으로 유효한 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션 변경 되 면 추가, 수정 또는 요소를 삭제와 같은 열거자는 무효화 하 고 해당 동작은 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스가 없습니다. 따라서 컬렉션을 열거 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">을 열거 하는 동안 스레드로부터 안전을 보장 하려면 전체 열거 동안 컬렉션을 잠글 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">컬렉션에 여러 스레드에서 읽기 및 쓰기에 대 한 액세스를 허용 하려면 사용자 지정 동기화를 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object that can be used to iterate through the collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;컬렉션을 반복 하는 데 사용할 수 있습니다.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Adds an item to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">항목을 추가 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt; property to add new elements by setting the value of a key that does not exist in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">사용할 수도 있습니다는 &lt;xref:Microsoft.VisualBasic.Collection.Item%2A&gt;에 속성 키의 값을 설정 하 여 새 요소를 추가할 수 없습니다.는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt; &lt;/xref:Microsoft.VisualBasic.Collection.Item%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to add to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;에 추가 하는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The position into which the new element was inserted.</source>
          <target state="translated">새 요소가 삽입 된 위치입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Removes all items from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">모든 항목을 제거는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes all items from the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">모든 항목을 제거 하는이 메서드는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.IList&gt; is read-only.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;읽기 전용입니다.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object contains a specific value.</source>
          <target state="translated">결정 여부는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체에 특정 값이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines whether the &lt;xref:Microsoft.VisualBasic.Collection&gt; object contains a specific value.</source>
          <target state="translated">이 메서드는 확인 여부는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체는 특정 값이 들어.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 찾으려고는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Object&gt; is found in the <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 <bpt id="p1">&lt;xref uid="langword_csharp_True" name="True" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우는 &lt;xref:System.Object&gt;에서 발견 되는 <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체; 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_False" name="False" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Determines the index of a specific item in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">특정 항목의 인덱스를 결정은 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines the index of a specific item in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">특정 항목의 인덱스를 결정 하는이 메서드는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to locate in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 찾으려고는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if found in the collection; otherwise, -1.</source>
          <target state="translated">인덱스 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 컬렉션에 고, 그렇지 않으면-1입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Inserts an item to the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object at the specified index.</source>
          <target state="translated">항목을 삽입의 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 인덱스에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object, then <ph id="ph2">`value`</ph> is appended to the end.</source>
          <target state="translated">경우 <ph id="ph1">`index`</ph> 에 있는 항목의 수와 일치는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체 <ph id="ph2">`value`</ph> 끝에 추가 합니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">연속 요소를 컬렉션의 목록, 삽입 지점 다음에 오는 요소를 아래로 이동 처럼 새 요소를 적용 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <ph id="ph1">`value`</ph> should be inserted.</source>
          <target state="translated">0부터 시작 하는 인덱스입니다 <ph id="ph1">`value`</ph> 삽입 해야 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to insert into the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;에 삽입 하는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>유효한 인덱스가 아닌는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is null reference in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>가 null 참조에는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">첫 번째는 특정 개체에서 제거 된 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is not found in the &lt;xref:Microsoft.VisualBasic.Collection&gt; object, the &lt;xref:Microsoft.VisualBasic.Collection&gt; object remains unchanged and no exception is thrown.</source>
          <target state="translated">경우 <ph id="ph1">`value`</ph> 를 찾을 수 없습니다는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체 그대로 유지 하 고 예외가 throw 되지 않습니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt; &lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; to remove from the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">&lt;xref:System.Object&gt;에서 제거 하 고 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Removes the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object item at the specified index.</source>
          <target state="translated">제거는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 인덱스에 개체 항목.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 된 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화 되어 있는 컬렉션에는 이러한 동작이 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to remove.</source>
          <target state="translated">제거할 항목의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>유효한 인덱스가 아닌는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is read-only.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object has a fixed size.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 크기가 고정된 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Runs after the entire <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object graph has been deserialized.</source>
          <target state="translated">실행 후 전체 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 그래프가 deserialize 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">구현 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.IDeserializationCallback"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called after the entire &lt;xref:Microsoft.VisualBasic.Collection&gt; object graph has been deserialized.</source>
          <target state="translated">전체 후이 메서드는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체 그래프가 deserialize 될.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
          <target state="translated">콜백을 시작한 개체입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Returns the data needed to serialize the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Serialize 하는 데 필요한 데이터를 반환 된 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> interface.</source>
          <target state="translated">구현 된 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the data needed to serialize the &lt;xref:Microsoft.VisualBasic.Collection&gt; object.</source>
          <target state="translated">Serialize 하는 데 필요한 데이터를 반환 하는이 메서드는 &lt;xref:Microsoft.VisualBasic.Collection&gt;개체입니다.&lt;/xref:Microsoft.VisualBasic.Collection&gt;</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object containing the information required to serialize the <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 serialize 하는 데 필요한 정보를 포함 하는 <bpt id="p2">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Runtime.Serialization.StreamingContext&gt; object containing the source and destination of the serialized stream associated with the <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.StreamingContext&gt;소스와 연결 된 직렬화 된 스트림의 대상이 들어 있는 개체는 <bpt id="p1">&lt;xref href="Microsoft.VisualBasic.Collection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>