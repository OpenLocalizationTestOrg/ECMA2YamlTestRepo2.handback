<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06fa830956e094adefb9ceefffe509bfac9a7bc3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.AccessKeyManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63f839e966196222b8ca55fd9c3cb070a990f68c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce40481dec85fedd1b6d1e06962483018051ebb5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Maintains the registration of all access keys and the handling of interop keyboard commands between <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>, <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>, and <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">모든 선택 키의 등록 및 간 interop 키보드 명령 처리를 유지 관리 <ph id="ph1">[!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)]</ph>, <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)]</ph>, 및 <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An AccessKeyManager object is created on demand with one per &lt;xref:System.Windows.Threading.Dispatcher&gt;.</source>
          <target state="translated">AccessKeyManager 개체 &lt;xref:System.Windows.Threading.Dispatcher&gt;.&lt;/xref:System.Windows.Threading.Dispatcher&gt; 당 하나를 사용 하 여 요청에 만들어집니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AccessKeyManager is attached as an event handler for &lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt; and exposes methods to &lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt; and &lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt; access keys.</source>
          <target state="translated">AccessKeyManager에 대 한 이벤트 처리기로 연결 되며 &lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt;에 메서드를 노출 하 고 &lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt;및 &lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt;액세스 키입니다.&lt;/xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt; &lt;/xref:System.Windows.Input.AccessKeyManager.Register%2A&gt; &lt;/xref:System.Windows.Input.InputManager.PostProcessInput&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the registered access key is pressed, the AccessKeyManager calls the &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt; method on the target element.</source>
          <target state="translated">등록된 된 선택 키를 누를 때, AccessKeyManager 호출은 &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;대상 요소의 메서드.&lt;/xref:System.Windows.UIElement.OnAccessKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element can be associated with any number of access keys.</source>
          <target state="translated">요소는 선택 키 개수에 관계 없이 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Identifies the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; routed event.</source>
          <target state="translated">식별 된 &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;라우트된 이벤트.&lt;/xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Adds a handler for the &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; attached event.</source>
          <target state="translated">에 대 한 처리기는 &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;연결 된 이벤트입니다.&lt;/xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to this event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 을이 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
          <target state="translated">추가할 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified key is registered as an access keys in the specified scope.</source>
          <target state="translated">지정된 된 키 지정된 된 범위에서 선택키로 등록 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The presentation source to query for <ph id="ph1">`key`</ph>.</source>
          <target state="translated">쿼리할 프레젠테이션 소스 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The key to query.</source>
          <target state="translated">쿼리 키입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the key is registered; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>키 등록 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Processes the specified access keys as if a <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event for the key was passed to the <bpt id="p2">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 선택 키를 처리 처럼는 <bpt id="p1">&lt;xref href="System.Windows.UIElement.KeyDown"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 전달 된 키에 대 한 이벤트는 <bpt id="p2">&lt;xref href="System.Windows.Input.AccessKeyManager"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The scope for the access key.</source>
          <target state="translated">선택 키에 대 한 범위입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The access key.</source>
          <target state="translated">선택 키입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Indicates if <ph id="ph1">`key`</ph> has multiple matches.</source>
          <target state="translated">이면 <ph id="ph1">`key`</ph> 여러 명의 일치 하는가 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if there are more keys that match; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>키가 더; 일치 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Associates the specified access keys with the specified element.</source>
          <target state="translated">지정된 된 요소와 지정된 된 선택 키를 연결합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the access keys is pressed, the  &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt; method of <ph id="ph1">`element`</ph> is called.</source>
          <target state="translated">선택 키를 누르면는 &lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;방식의 <ph id="ph1">`element`</ph> 호출 됩니다.&lt;/xref:System.Windows.UIElement.OnAccessKey%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element can be associated with any number of access keys.</source>
          <target state="translated">요소는 선택 키 개수에 관계 없이 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The access key.</source>
          <target state="translated">선택 키입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The element to associate <ph id="ph1">`key`</ph> with.</source>
          <target state="translated">요소 연결할 <ph id="ph1">`key`</ph> 사용 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt; event handler from the specified object.</source>
          <target state="translated">지정 된 제거 &lt;xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;지정된 된 개체에서 이벤트 처리기.&lt;/xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that listens to this event.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.UIElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.Windows.ContentElement"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 을이 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
          <target state="translated">이벤트 처리기가 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Disassociates the specified access keys from the specified element.</source>
          <target state="translated">지정된 된 선택 키가 지정된 된 요소에서 연결을 끊습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The access key.</source>
          <target state="translated">선택 키입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The element from which to disassociate <ph id="ph1">`key`</ph>.</source>
          <target state="translated">연결을 끊을 요소 <ph id="ph1">`key`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>