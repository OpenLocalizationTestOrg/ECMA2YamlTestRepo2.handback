<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eac21088902bf450c989c92a25e373a15a7ea6bb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Tasks.Windows.MarkupCompilePass1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75199f474387653920b2605400a8e99826a9e707</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">332daca4c4094c8b7912caa6c7350f00e7e16a83</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">`MarkupCompilePass1`</ph> task.</source>
          <target state="translated">구현 된 <ph id="ph1">`MarkupCompilePass1`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`MarkupCompilePass1`</ph> element in your project file to create and execute this task.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`MarkupCompilePass1`</ph> 생성 하 고이 작업을 실행 하기 위해 프로젝트 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>MarkupCompilePass1<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 및 매개 변수 정보를 참조 하십시오. <bpt id="p1">[</bpt>MarkupCompilePass1<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of files that are generated by the markup compiler.</source>
          <target state="translated">태그 컴파일러에서 생성 되는 파일의 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A list of files that are generated by the markup compiler.</source>
          <target state="translated">목록 태그 컴파일러에 의해 생성 되는 파일입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to run the compilation in second application domain.</source>
          <target state="translated">두 번째 응용 프로그램 도메인에서 컴파일할 때 실행할지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`false`</ph> results in faster compilation.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`false`</ph> 빠른 컴파일 결과입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to run the compilation in second application domain; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>두 번째 응용 프로그램 도메인에서 호환성을 실행 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the application definition <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">응용 프로그램 정의의 이름을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the application definition <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">응용 프로그램 정의의 이름을 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of reference assemblies that change during the build cycle.</source>
          <target state="translated">빌드 주기 동안 변경 하는 참조 어셈블리의 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The list of reference assemblies that change during the build cycle.</source>
          <target state="translated">빌드 주기 동안 변경 하는 참조 어셈블리의 목록.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the short name of assembly that will be generated for this project.</source>
          <target state="translated">이 프로젝트에 대해 생성 되는 어셈블리의 약식 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The short name of assembly which will be generated for this project.</source>
          <target state="translated">이 프로젝트에 대해 생성 된 어셈블리의 짧은 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the public key token of the assembly.</source>
          <target state="translated">어셈블리의 공개 키 토큰을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The public key token of the assembly.</source>
          <target state="translated">어셈블리의 공개 키 토큰입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the version of the assembly.</source>
          <target state="translated">어셈블리의 버전을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The version of the assembly.</source>
          <target state="translated">어셈블리의 버전입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of loose content files.</source>
          <target state="translated">느슨한 콘텐츠 파일의 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A list of loose content files.</source>
          <target state="translated">느슨한 콘텐츠 파일의 목록입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the current value of <bpt id="p1">**</bpt>DefineConstants<ept id="p1">**</ept> is kept.</source>
          <target state="translated">지정 하는 값을 가져오거나 설정 합니다. 있는지 여부를 지정 된 <bpt id="p1">**</bpt>DefineConstants<ept id="p1">**</ept> 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specifies whether the current value of <bpt id="p1">**</bpt>DefineConstants<ept id="p1">**</ept> is kept, which affects target assembly generation; if this parameter is changed, the public API in the target assembly may be changed and the compilation of <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> files that reference local types may be affected.</source>
          <target state="translated">지정 여부의 현재 값 <bpt id="p1">**</bpt>DefineConstants<ept id="p1">**</ept> 유지 되는 영향을 줌 대상 어셈블리 생성;이 매개 변수를 변경 하는 경우 대상 어셈블리에서 공용 API를 변경할 수 있습니다 및의 컴파일 <ph id="ph1">[!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]</ph> 로컬 형식을 참조 하는 파일에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Executes a task.</source>
          <target state="translated">작업을 실행합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task executed successfully; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업이는 성공적으로 실행 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of files that control whether a rebuild is triggered when the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> task reruns; a rebuild is triggered if one of these files changes.</source>
          <target state="translated">빌드를 다시 여부를 제어 하는 파일의 목록을 가져오거나 설정 합니다. 때 트리거되는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작업을 다시 실행; 재구성은 파일의 경우에 트리거됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A list of files that control whether a rebuild is triggered when the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> task reruns; a rebuild is triggered if one of these files changes.</source>
          <target state="translated">빌드를 다시 여부를 제어 하는 파일 목록을 때 트리거되는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Windows.MarkupCompilePass1"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작업을 다시 실행; 재구성은 파일의 경우에 트리거됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">가져오거나 생성 된 <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">생성 된 <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the list of generated managed code files.</source>
          <target state="translated">생성 된 관리 되는 코드 파일의 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The list of generated managed code files.</source>
          <target state="translated">관리 되는 생성 된 코드 파일 목록이 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the generated localization file for each localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">생성 된 지역화 파일을 지역화할 수 있는 각 가져오거나 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The generated localization file for each localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">생성 된 지역화 파일 각각에 대해 지역화 가능 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the generated assembly is a <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>.</source>
          <target state="translated">생성된 된 어셈블리 인지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the generated assembly is a <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>생성 된 어셈블리가 있는 경우는 <ph id="ph1">[!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the task is running in Visual Studio.</source>
          <target state="translated">Visual Studio에서 작업이 실행 되 고 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task is running in Visual Studio; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>Visual Studio;에서 작업이 실행 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets the paths of referenced assemblies that do not change during the build procedure.</source>
          <target state="translated">빌드는 동안 변경 되지 않는 참조 된 어셈블리의 경로 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The paths of referenced assemblies that do not change during the build procedure.</source>
          <target state="translated">빌드는 동안 변경 되지 않는 참조 된 어셈블리의 경로입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets the managed language that the compiler supports.</source>
          <target state="translated">컴파일러가 지 원하는 관리 되는 언어를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The managed language that the compiler supports.</source>
          <target state="translated">관리 되는 언어 컴파일러 지원입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The valid values are <bpt id="p1">**</bpt>C#<ept id="p1">**</ept>, <bpt id="p2">**</bpt>VB<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>C++<ept id="p3">**</ept>.</source>
          <target state="translated">The valid values are <bpt id="p1">**</bpt>C#<ept id="p1">**</ept>, <bpt id="p2">**</bpt>VB<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>C++<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets the extension that is appended to the extension of the generated managed code file.</source>
          <target state="translated">관리 되는 생성 된 코드 파일의 확장명에 추가 되는 확장명을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The extension that is appended to the extension of the generated managed code file.</source>
          <target state="translated">생성 된 확장에 추가 되는 확장 코드 파일을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how to generate localization information for each <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">각각에 대 한 지역화 정보를 생성 하는 방법을 지정 하는 값을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A value that specifies how to generate localization information for each <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> file.</source>
          <target state="translated">각각에 대 한 지역화 정보를 생성 하는 방법을 지정 하는 값 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The valid values are <bpt id="p1">**</bpt>None<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CommentsOnly<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>All<ept id="p3">**</ept>.</source>
          <target state="translated">유효한 값은 <bpt id="p1">**</bpt>None<ept id="p1">**</ept>, <bpt id="p2">**</bpt>CommentsOnly<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>모든<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of generated code files.</source>
          <target state="translated">생성 된 코드 파일의 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The location of generated code files.</source>
          <target state="translated">생성 된 코드 파일의 위치입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets the output type of the assembly.</source>
          <target state="translated">어셈블리의 출력 형식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type of assembly that is generated by a project.</source>
          <target state="translated">프로젝트에서 생성 되는 어셈블리의 형식입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The valid values are <bpt id="p1">**</bpt>winexe<ept id="p1">**</ept>, <bpt id="p2">**</bpt>exe<ept id="p2">**</ept>, <bpt id="p3">**</bpt>library<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>netmodule<ept id="p4">**</ept>.</source>
          <target state="translated">유효한 값은 <bpt id="p1">**</bpt>winexe<ept id="p1">**</ept>, <bpt id="p2">**</bpt>exe<ept id="p2">**</ept>, <bpt id="p3">**</bpt>라이브러리<ept id="p3">**</ept>, 및 <bpt id="p4">**</bpt>netmodule<ept id="p4">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files to process.</source>
          <target state="translated">목록을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 처리할 파일을 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A list of <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files to process.</source>
          <target state="translated">목록은 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 처리할 파일을 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly references.</source>
          <target state="translated">어셈블리 참조를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The assembly references.</source>
          <target state="translated">어셈블리 참조입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the project contains non-localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files that reference local types that are embedded into the main assembly.</source>
          <target state="translated">지역화할 수 없는 프로젝트에 포함 되어 있는지 여부를 나타내는 값 가져오거나 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 주 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if project contains non-localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files that reference local types that are embedded into the main assembly.; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>프로젝트를 지역화할 수 없는 포함 되어 있으면 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 고, 그러지 않으면 주 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the project contains localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files that reference local types that are embedded in the satellite assembly.</source>
          <target state="translated">지역화할 수 있는 프로젝트에 포함 되어 있는지 여부를 나타내는 값 가져오거나 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 위성 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the p project contains localizable <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> files that reference local types that are embedded in the satellite assembly; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>p 프로젝트 지역화할 수 있는 경우 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 고, 그러지 않으면 위성 어셈블리에 포함 되는 로컬 형식을 참조 하는 파일 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the root namespace of the classes inside the project.</source>
          <target state="translated">프로젝트 내의 클래스의 루트 네임 스페이스를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The root namespace of the classes inside the project.</source>
          <target state="translated">프로젝트 내의 클래스의 루트 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets the source code file list for the current project.</source>
          <target state="translated">현재 프로젝트에 대 한 소스 코드 파일 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The source code file list for the current project.</source>
          <target state="translated">현재 프로젝트에 대 한 소스 코드 파일 목록입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the splash screen image to be displayed before application initialization.</source>
          <target state="translated">응용 프로그램을 초기화 하기 전에 표시할 시작 화면 이미지를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The splash screen image.</source>
          <target state="translated">시작 화면 이미지입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which culture satellite assembly will hold the generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">문화권 위성 어셈블리를 포함할 경우 생성 된을 지정 하는 값을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A a value that specifies which culture satellite assembly will hold the generated <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> files.</source>
          <target state="translated">A 문화권 위성 어셈블리를 포함할 경우 생성 된을 지정 하는 값 <ph id="ph1">[!INCLUDE[TLA#tla_baml](~/add/includes/tlasharptla-baml-md.md)]</ph> 파일입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging.</source>
          <target state="translated">진단 정보 생성 되 고 컴파일된에 포함 되어 있는지 여부를 나타내는 값을 가져오거나 설정 합니다. <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> 디버깅에 도움이 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if diagnostic information is generated and included in the compiled <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> in order to aid debugging; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>진단 정보 생성 되 고 컴파일된에 포함 된 경우 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]</ph> ; 디버깅에 도움이 되도록 그렇지 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>