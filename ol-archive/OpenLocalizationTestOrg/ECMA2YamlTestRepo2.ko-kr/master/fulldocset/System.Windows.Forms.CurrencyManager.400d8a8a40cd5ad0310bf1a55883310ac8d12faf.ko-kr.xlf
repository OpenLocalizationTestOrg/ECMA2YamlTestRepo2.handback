<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebee0377eb9cdf91c501d982c961739c0556f02b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.CurrencyManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71f490212e9cb7b3e2db9074c25e4b1fb300d51e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b048a2123b0f5253567b72168ee28b65ecead41d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages a list of <bpt id="p1">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">목록을 관리 <bpt id="p1">&lt;xref href="System.Windows.Forms.Binding"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CurrencyManager derives from the &lt;xref:System.Windows.Forms.BindingManagerBase&gt; class.</source>
          <target state="translated">CurrencyManager는 &lt;xref:System.Windows.Forms.BindingManagerBase&gt;클래스&lt;/xref:System.Windows.Forms.BindingManagerBase&gt; 에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.Windows.Forms.BindingContext&gt; to return either a CurrencyManager or a &lt;xref:System.Windows.Forms.PropertyManager&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingContext&gt;CurrencyManager 또는 &lt;xref:System.Windows.Forms.PropertyManager&gt;.&lt;/xref:System.Windows.Forms.PropertyManager&gt; 반환할를&lt;/xref:System.Windows.Forms.BindingContext&gt; 사용 하 여</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual object returned depends on the data source and data member passed to the &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; property of the &lt;xref:System.Windows.Forms.BindingContext&gt;.</source>
          <target state="translated">반환 되는 실제 개체 &lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt; &lt;xref:System.Windows.Forms.BindingContext&gt;.&lt;/xref:System.Windows.Forms.BindingContext&gt; 속성&lt;/xref:System.Windows.Forms.BindingContext.Item%2A&gt; 에 전달 된 데이터 원본 및 데이터 멤버에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is an object that can return only a single property (instead of a list of objects), the type will be a &lt;xref:System.Windows.Forms.PropertyManager&gt;.</source>
          <target state="translated">형식이 &lt;xref:System.Windows.Forms.PropertyManager&gt;.&lt;/xref:System.Windows.Forms.PropertyManager&gt; 됩니다 (개체의 목록) 하는 대신 하나의 속성만 반환할 수 있는 개체 데이터 원본이 사용 하는 경우</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify a &lt;xref:System.Windows.Forms.TextBox&gt; as the data source, a &lt;xref:System.Windows.Forms.PropertyManager&gt; will be returned.</source>
          <target state="translated">예를 들어, 지정 하는 경우는 &lt;xref:System.Windows.Forms.TextBox&gt;데이터 원본으로는 &lt;xref:System.Windows.Forms.PropertyManager&gt;반환 됩니다.&lt;/xref:System.Windows.Forms.PropertyManager&gt; &lt;/xref:System.Windows.Forms.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If, on the other hand, the data source is an object that implements the &lt;xref:System.Collections.IList&gt;, &lt;xref:System.ComponentModel.IListSource&gt;, or &lt;xref:System.ComponentModel.IBindingList&gt; interface, a CurrencyManager will be returned.</source>
          <target state="translated">반면에 데이터 원본이 개체를 구현 하는 경우는 &lt;xref:System.Collections.IList&gt;, &lt;xref:System.ComponentModel.IListSource&gt;, 또는 &lt;xref:System.ComponentModel.IBindingList&gt;인터페이스가 CurrencyManager 반환 됩니다.&lt;/xref:System.ComponentModel.IBindingList&gt; &lt;/xref:System.ComponentModel.IListSource&gt; &lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt; property returns the current item in the underlying list.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;속성 기본 목록의 현재 항목을 반환 합니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current item, set the &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt; property to a new value.</source>
          <target state="translated">현재 항목을 변경 하려면는 &lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;속성을 새 값입니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be greater than 0 and must be less than the value of the &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt; property.</source>
          <target state="translated">값 0 보다 커야 하며의 값 보다 작아야 합니다.는 &lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;속성.&lt;/xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data source implements the &lt;xref:System.ComponentModel.IBindingList&gt; interface, and the &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt; property is set to <ph id="ph1">`true`</ph>, you can use the &lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt; method.</source>
          <target state="translated">기본 데이터 원본 구현 하는 경우는 &lt;xref:System.ComponentModel.IBindingList&gt;인터페이스 및 &lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;속성이로 설정 되어 <ph id="ph1">`true`</ph>를 사용할 수 있습니다는 &lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;메서드.&lt;/xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt; &lt;/xref:System.ComponentModel.IBindingList.AllowNew%2A&gt; &lt;/xref:System.ComponentModel.IBindingList&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a new item to the underlying list.</source>
          <target state="translated">내부 목록에 새 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the data source implements the &lt;xref:System.ComponentModel.IBindingList&gt; interface and the data source allows adding rows (&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">데이터 원본 구현 하는 경우에이 메서드는 지원의 &lt;xref:System.ComponentModel.IBindingList&gt;인터페이스와 데이터 소스 행을 추가할 수 있습니다 (&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt; 은 <ph id="ph1">`true`</ph>).&lt;/xref:System.ComponentModel.IBindingList.AllowNew%2A&gt; &lt;/xref:System.ComponentModel.IBindingList&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property was designed to allow complex-bound controls, such as the &lt;xref:System.Windows.Forms.DataGrid&gt; control, to add new items to list.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 속성은 복합 바인딩된 컨트롤을와 같은 허용 하도록 설계 된는 &lt;xref:System.Windows.Forms.DataGrid&gt;컨트롤 목록에 새 항목을 추가 합니다.&lt;/xref:System.Windows.Forms.DataGrid&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this property only if you are creating your own control that incorporates the &lt;xref:System.Windows.Forms.CurrencyManager&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CurrencyManager&gt;.&lt;/xref:System.Windows.Forms.CurrencyManager&gt; 를 통합 하는 사용자 고유의 컨트롤을 만드는 경우에이 속성을 일반적으로 사용</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, to add items if the data source is a &lt;xref:System.Data.DataView&gt;, use the &lt;xref:System.Data.DataView.AddNew%2A?displayProperty=fullName&gt; method of the &lt;xref:System.Data.DataView&gt; class.</source>
          <target state="translated">그렇지 않은 경우 추가 하는 &lt;xref:System.Data.DataView&gt; &lt;xref:System.Data.DataView.AddNew%2A?displayProperty=fullName&gt; &lt;xref:System.Data.DataView&gt;클래스&lt;/xref:System.Data.DataView&gt; 의 메서드&lt;/xref:System.Data.DataView.AddNew%2A?displayProperty=fullName&gt; 를 사용 하 여&lt;/xref:System.Data.DataView&gt; 데이터 원본이 있으면 항목</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is a &lt;xref:System.Data.DataTable&gt;, use the &lt;xref:System.Data.DataTable.NewRow%2A&gt; method and add the row to the &lt;xref:System.Data.DataRowCollection&gt;.</source>
          <target state="translated">데이터 원본이 있으면는 &lt;xref:System.Data.DataTable&gt;를 사용 하 여는 &lt;xref:System.Data.DataTable.NewRow%2A&gt;메서드 &lt;xref:System.Data.DataRowCollection&gt;.&lt;/xref:System.Data.DataRowCollection&gt; 에 행을 추가할 및&lt;/xref:System.Data.DataTable.NewRow%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The underlying data source does not implement <bpt id="p1">&lt;xref href="System.ComponentModel.IBindingList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <bpt id="p2">&lt;xref href="System.Data.DataView"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">내부 데이터 소스를 구현 하지 않는 <bpt id="p1">&lt;xref href="System.ComponentModel.IBindingList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 데이터 소스는 사용자가을 읽기 전용 또는 고정 크기의 행을 추가 하려고 하기 때문에 예외를 throw 했는지 또는 <bpt id="p2">&lt;xref href="System.Data.DataView"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Cancels the current edit operation.</source>
          <target state="translated">현재 편집 작업을 취소합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the objects contained by the data source implement the &lt;xref:System.ComponentModel.IEditableObject&gt; interface.</source>
          <target state="translated">데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the objects contained within the data source do not implement the &lt;xref:System.ComponentModel.IEditableObject&gt; interface, changes made to the data will not be discarded.</source>
          <target state="translated">데이터 원본에 포함 된 개체를 구현 하지 않는 경우는 &lt;xref:System.ComponentModel.IEditableObject&gt;인터페이스에는 데이터 변경 내용이 삭제 되지 것입니다.&lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property was designed to be used by complex data-bound controls, such as the &lt;xref:System.Windows.Forms.DataGrid&gt; control, to cancel edits.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 &lt;xref:System.Windows.Forms.DataGrid&gt;편집 취소를 제어 합니다.&lt;/xref:System.Windows.Forms.DataGrid&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the user presses the ESC key, the CancelCurrentEdit method is called on the &lt;xref:System.Windows.Forms.CurrencyManager&gt; for the &lt;xref:System.Windows.Forms.DataGrid&gt;.</source>
          <target state="translated">예를 들어 사용자가 ESC 키를 누르면 CancelCurrentEdit 메서드는 &lt;xref:System.Windows.Forms.CurrencyManager&gt; &lt;xref:System.Windows.Forms.DataGrid&gt;.&lt;/xref:System.Windows.Forms.DataGrid&gt; &lt;/xref:System.Windows.Forms.CurrencyManager&gt; 에</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
          <target state="translated">이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Data.DataRowView.CancelEdit%2A&gt; method of the &lt;xref:System.Data.DataRowView&gt; class.</source>
          <target state="translated">대신 &lt;xref:System.Data.DataRowView.CancelEdit%2A&gt; &lt;xref:System.Data.DataRowView&gt;클래스&lt;/xref:System.Data.DataRowView&gt; 의 메서드&lt;/xref:System.Data.DataRowView.CancelEdit%2A&gt; 를 사용합니다</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Throws an exception if there is no list, or the list is empty.</source>
          <target state="translated">목록에 없으면 또는 목록이 비어 있는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>There is no list, or the list is empty.</source>
          <target state="translated">목록에 없으면 또는 목록이 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the number of items in the list.</source>
          <target state="translated">목록의 항목 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the count property to determine when the end of a list has been reached.</source>
          <target state="translated">목록의 끝에 도달한 경우를 확인 하려면 count 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the &lt;xref:System.Windows.Forms.CurrencyManager&gt; maintains a 0-based array of items, the end of the list is always Count minus one.</source>
          <target state="translated">때문에 &lt;xref:System.Windows.Forms.CurrencyManager&gt;항목을 목록의 끝의 0부터 시작 배열은 항상 유지 개수에서 1을 뺀.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of items in the list.</source>
          <target state="translated">목록에 있는 항목의 수입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the current item in the list.</source>
          <target state="translated">목록의 현재 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to get the current item, you must know its data type in order to cast it correctly.</source>
          <target state="translated">현재 항목을 얻으려면 잘못 캐스팅 하기 위해 해당 데이터 형식을 알아야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the data source is a &lt;xref:System.Data.DataView&gt; or &lt;xref:System.Data.DataTable&gt;, you must cast the current item as a &lt;xref:System.Data.DataRowView&gt; object.</source>
          <target state="translated">예를 들어 데이터 소스는 &lt;xref:System.Data.DataView&gt;또는 &lt;xref:System.Data.DataTable&gt;, 현재 항목으로 캐스팅 해야는 &lt;xref:System.Data.DataRowView&gt;개체입니다.&lt;/xref:System.Data.DataRowView&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A list item of type &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 형식의 목록 항목</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Ends the current edit operation.</source>
          <target state="translated">현재 편집 작업을 종료합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the objects contained by the data source implement the &lt;xref:System.ComponentModel.IEditableObject&gt; or &lt;xref:System.ComponentModel.ICancelAddNew&gt; interfaces.</source>
          <target state="translated">데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 &lt;xref:System.ComponentModel.IEditableObject&gt;또는 &lt;xref:System.ComponentModel.ICancelAddNew&gt;인터페이스.&lt;/xref:System.ComponentModel.ICancelAddNew&gt; &lt;/xref:System.ComponentModel.IEditableObject&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This property was designed to be used by complex data-bound controls, such as the &lt;xref:System.Windows.Forms.DataGridView&gt; control.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 &lt;xref:System.Windows.Forms.DataGridView&gt;컨트롤.&lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
          <target state="translated">이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, if the data source is either a &lt;xref:System.Data.DataView&gt; or &lt;xref:System.Data.DataTable&gt;, use the &lt;xref:System.Data.DataRowView.EndEdit%2A&gt; method of the &lt;xref:System.Data.DataRowView&gt; class.</source>
          <target state="translated">대신, 데이터 원본이 있으면 중 하나는 &lt;xref:System.Data.DataView&gt; &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataRowView.EndEdit%2A&gt; &lt;xref:System.Data.DataRowView&gt;클래스&lt;/xref:System.Data.DataRowView&gt; 의 메서드&lt;/xref:System.Data.DataRowView.EndEdit%2A&gt; 를 사용 하 여,&lt;/xref:System.Data.DataTable&gt; 또는&lt;/xref:System.Data.DataView&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies the data type of the list.</source>
          <target state="translated">목록의 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the property descriptor collection for the underlying list.</source>
          <target state="translated">내부 목록에 대 한 속성 설명자 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt; for the &lt;xref:System.Windows.Forms.CurrencyManager&gt; is used to specify a column in the list.</source>
          <target state="translated">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;에 대 한는 &lt;xref:System.Windows.Forms.CurrencyManager&gt;목록에서 열을 지정 하는 데 사용 됩니다.&lt;/xref:System.Windows.Forms.CurrencyManager&gt; &lt;/xref:System.ComponentModel.PropertyDescriptorCollection&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the list.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 목록에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</source>
          <target state="translated">지정한 바인딩된 속성 집합을 사용 하 여 바인딩에 대 한 데이터를 제공 하는 목록 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the GetListName method to be successful, the underlying list must be of type &lt;xref:System.ComponentModel.ITypedList&gt;.</source>
          <target state="translated">찾기가 성공 하려면 GetListName 방법의 경우 기본 목록 &lt;xref:System.ComponentModel.ITypedList&gt;.&lt;/xref:System.ComponentModel.ITypedList&gt; 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of properties to be found in the data source.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 속성을 데이터 원본에서 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If successful, a &lt;xref:System.String&gt; containing name of the list supplying the data for the binding; otherwise, an &lt;xref:System.String&gt; string.</source>
          <target state="translated">성공 하면는 &lt;xref:System.String&gt;고, 그렇지 않으면 바인딩에 대 한 데이터를 제공 하는 목록 이름을 포함 하는 &lt;xref:System.String&gt;문자열.&lt;/xref:System.String&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Occurs when the current item has been altered.</source>
          <target state="translated">현재 항목이 변경 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ItemChanged event will occur when the user calls the &lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt; or &lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt; method.</source>
          <target state="translated">사용자를 호출할 때 ItemChanged 이벤트가 발생 하는 &lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;또는 &lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;메서드.&lt;/xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt; &lt;/xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ItemChanged event occurs only when the item itself has been changed in some manner.</source>
          <target state="translated">ItemChanged 이벤트에는 다른 방법으로 항목 자체가 변경 된 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the value of an item is changed from 10 to 42, the event will occur.</source>
          <target state="translated">예를 들어 항목의 값 42 10에서 변경 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This should not be confused with the &lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt; event where the item has been changed to a new item.</source>
          <target state="translated">와 일치 하지 않습니다이 &lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;새 항목에는 항목이 변경 되어 있는 이벤트입니다.&lt;/xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event will also occur if the underlying data changes.</source>
          <target state="translated">이 이벤트는 기본 데이터가 변경 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you change the value of a &lt;xref:System.Data.DataRowView&gt;, the ItemChanged event will occur.</source>
          <target state="translated">예를 들어, 값을 변경 하는 경우는 &lt;xref:System.Data.DataRowView&gt;, ItemChanged 이벤트가 발생 합니다.&lt;/xref:System.Data.DataRowView&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If you are creating your own control that uses the &lt;xref:System.Windows.Forms.CurrencyManager&gt;, you should use the &lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt; instead of the ItemChanged event.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;를 사용 하는 사용자 고유의 컨트롤을 만들려는 경우에 &lt;xref:System.Windows.Forms.CurrencyManager&gt;, 사용할지는 &lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt;ItemChanged 이벤트 대신.&lt;/xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt; property of the &lt;xref:System.ComponentModel.ListChangedEventArgs&gt; enables you to determine the type of action that has occurred.</source>
          <target state="translated">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt;의 속성은 &lt;xref:System.ComponentModel.ListChangedEventArgs&gt;발생 한 동작의 유형을 확인할 수 있습니다.&lt;/xref:System.ComponentModel.ListChangedEventArgs&gt; &lt;/xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the list for this <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 목록을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned by the List property can be cast to any type that implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">목록 속성에서 반환 된 개체를 구현 하는 형식으로 캐스팅 될 수는 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will be commonly used when you know the type of the underlying list.</source>
          <target state="translated">이 일반적으로 사용 됩니다 기본 목록의 형식을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you are data-bound to a &lt;xref:System.Data.DataSet&gt;, the underlying list is a &lt;xref:System.Data.DataView&gt; (which implements &lt;xref:System.Collections.IList&gt;).</source>
          <target state="translated">예를 들어 사용자는 데이터 바인딩된은 &lt;xref:System.Data.DataSet&gt;, 기본 목록이 &lt;xref:System.Data.DataView&gt;(구현 하는 &lt;xref:System.Collections.IList&gt;).&lt;/xref:System.Collections.IList&gt; &lt;/xref:System.Data.DataView&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other classes that implement the interface (this is not a complete list) include &lt;xref:System.Array&gt;, &lt;xref:System.Collections.ArrayList&gt;, and &lt;xref:System.Collections.CollectionBase&gt;.</source>
          <target state="translated">(이것은 전체 목록이 아님) 인터페이스를 구현 하는 다른 클래스에는 &lt;xref:System.Array&gt;, &lt;xref:System.Collections.ArrayList&gt;, 및 &lt;xref:System.Collections.CollectionBase&gt;.&lt;/xref:System.Collections.CollectionBase&gt; &lt;/xref:System.Collections.ArrayList&gt; &lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>How you use the List property depends on the class that implements the &lt;xref:System.Collections.IList&gt; interface.</source>
          <target state="translated">구현 하는 클래스에 따라 달라 집니다 목록 속성을 사용 하는 방법의 &lt;xref:System.Collections.IList&gt;인터페이스.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the List property to determine the name of the list.</source>
          <target state="translated">예를 들어 목록의 이름을 확인 하려면 목록 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source implements the &lt;xref:System.ComponentModel.ITypedList&gt; interface, you can use the &lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt; method to return the name of the current table.</source>
          <target state="translated">데이터 원본 구현 하는 경우는 &lt;xref:System.ComponentModel.ITypedList&gt;사용할 수 있습니다 인터페이스는 &lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;현재 테이블의 이름을 반환 하는 메서드.&lt;/xref:System.ComponentModel.ITypedList.GetListName%2A&gt; &lt;/xref:System.ComponentModel.ITypedList&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is shown in the C# code below:      <ph id="ph1">```c#   private void PrintCurrentListName(DataGrid myDataGrid){       CurrencyManager myCM = (CurrencyManager)       BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];       IList myList = myCM.List;       ITypedList thisList = (ITypedList) myList;       Console.WriteLine(thisList.GetListName(null));    }   ```</ph></source>
          <target state="translated">이 C# 코드 아래에 표시 됩니다.<ph id="ph1">```c#   private void PrintCurrentListName(DataGrid myDataGrid){       CurrencyManager myCM = (CurrencyManager)       BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];       IList myList = myCM.List;       ITypedList thisList = (ITypedList) myList;       Console.WriteLine(thisList.GetListName(null));    }   ```</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IList&gt; that contains the list.</source>
          <target state="translated">&lt;xref:System.Collections.IList&gt;목록이 포함 된.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Occurs when the list changes or an item in the list changes.</source>
          <target state="translated">목록에서 항목 또는 목록 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ListChanged event is thrown by the &lt;xref:System.Windows.Forms.CurrencyManager&gt; class when changes to an item are made using methods such as &lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;, &lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;, and &lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;.</source>
          <target state="translated">ListChanged 이벤트에 의해 throw 되는 &lt;xref:System.Windows.Forms.CurrencyManager&gt;항목에 변경 될 때와 같은 방법을 사용 하 여 클래스 &lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;, &lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;, 및 &lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;.&lt;/xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt; &lt;/xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt; &lt;/xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt; &lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can also occur when the data source is edited directly if it implements the &lt;xref:System.ComponentModel.IBindingListView&gt; interface.</source>
          <target state="translated">이 이벤트는 구현 하는 경우 데이터 원본을 직접 편집 되는 경우에 발생할 수 있습니다는 &lt;xref:System.ComponentModel.IBindingListView&gt;인터페이스.&lt;/xref:System.ComponentModel.IBindingListView&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The associated <ph id="ph1">`OnListChanged`</ph> method is a private method in this class.</source>
          <target state="translated">연결 된 <ph id="ph1">`OnListChanged`</ph> 메서드는이 클래스의 private 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Specifies the current position of the <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in the list.</source>
          <target state="translated">현재 위치를 지정 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 목록에 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt; property is greater than 0, the listposition field is a number between 0 and &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt; minus 1.</source>
          <target state="translated">하는 경우의 값은 &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;속성이 0 보다 크면, listposition 필드는 0 사이의 숫자 및 &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;1을 뺀 값입니다.&lt;/xref:System.Windows.Forms.CurrencyManager.Count%2A&gt; &lt;/xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt; is 0, listposition is -1.</source>
          <target state="translated">경우 &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;은 0, listposition은-1.&lt;/xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Occurs when the metadata of the &lt;xref:System.Windows.Forms.CurrencyManager.List*&gt; has changed.</source>
          <target state="translated">발생 경우의 메타 데이터는 &lt;xref:System.Windows.Forms.CurrencyManager.List*&gt;변경 되었습니다.&lt;/xref:System.Windows.Forms.CurrencyManager.List*&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The metadata of the &lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt; consists of the schema of the underlying &lt;xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;기본 &lt;xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName&gt; 의 스키마 구성&lt;/xref:System.Windows.Forms.CurrencyManager.List%2A&gt; 의 메타 데이터</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MetaDataChanged event is raised when that schema has changed.</source>
          <target state="translated">MetaDataChanged 이벤트는 해당 스키마가 변경 되었을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the MetaDataChanged event is raised when a &lt;xref:System.Data.DataColumn&gt; is programmatically added to a &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">예를 들어 MetaDataChanged는 이벤트가 &lt;xref:System.Data.DataColumn&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 프로그래밍 방식으로 추가 되&lt;/xref:System.Data.DataColumn&gt; 면</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentItemChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentItemChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager.ItemChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager.ItemChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnItemChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnItemChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Forms.ItemChangedEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the event data.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Forms.ItemChangedEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 이벤트 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager.MetaDataChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.CurrencyManager.MetaDataChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnMetaDataChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnMetaDataChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.PositionChanged"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Windows.Forms.BindingManagerBase.PositionChanged"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트를 발생 시키는 대리자를 통해 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OnPositionChanged method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">OnPositionChanged 메서드는 파생된 클래스가 대리자를 연결 하지 않고도 이벤트를 처리할를 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이 파생된 클래스에서 이벤트를 처리 하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets the position you are at within the list.</source>
          <target state="translated">목록 내에 있는 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>An important property of the &lt;xref:System.Windows.Forms.CurrencyManager&gt; class is the Position property.</source>
          <target state="translated">중요 한 속성은 &lt;xref:System.Windows.Forms.CurrencyManager&gt;클래스는 Position 속성.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a list of items, you can view only one item out of the entire list.</source>
          <target state="translated">항목의 목록에서 전체 목록에서 하나의 항목을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which item is viewed, set the Position to a number between 0 (the beginning of the list) and &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt; minus 1 (the end of the list).</source>
          <target state="translated">어떤 항목을 볼를 확인 하려면 위치를 0 (목록의 시작 부분) 사이의 숫자로 설정 하 고 &lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;값-1 (목록의 끝).&lt;/xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the Position determines the currency, or place in the list, of all controls bound to the same &lt;xref:System.Windows.Forms.CurrencyManager&gt;.</source>
          <target state="translated">위치 통화 또는 &lt;xref:System.Windows.Forms.CurrencyManager&gt;.&lt;/xref:System.Windows.Forms.CurrencyManager&gt; 동일에 바인딩된 모든 컨트롤의 목록에서 위치를 결정 하는 따라서</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, imagine a list consisting of two columns called "FirstName" and "LastName".</source>
          <target state="translated">예를 들어 "FirstName" 및 "LastName" 이라는 두 개의 열으로 구성 된 목록을 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two &lt;xref:System.Windows.Forms.TextBox&gt; controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</source>
          <target state="translated">두 개의 &lt;xref:System.Windows.Forms.TextBox&gt;같은 목록에 바인딩된 컨트롤이 첫 번째 컨트롤이 첫 번째 열에 바인딩된 하 고 두 번째 컨트롤은 두 번째 열에 바인딩된.&lt;/xref:System.Windows.Forms.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the Position of the common &lt;xref:System.Windows.Forms.CurrencyManager&gt; is set to the third position, both controls display the appropriate values for that position in the list.</source>
          <target state="translated">때 일반 위치 &lt;xref:System.Windows.Forms.CurrencyManager&gt;설정 된 세 번째 위치로 두 컨트롤 목록에서 해당 위치에 대 한 적절 한 값을 표시 합니다.&lt;/xref:System.Windows.Forms.CurrencyManager&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</source>
          <target state="translated">즉, 세 위치에 있는 항목으로 구성 된 경우 "John" 첫 번째 이름 및 성 "Smith"에 "John" 및 "Smith" 바인딩된 컨트롤 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A number between 0 and &lt;xref:System.Windows.Forms.CurrencyManager.Count*&gt; minus 1.</source>
          <target state="translated">0 사이의 숫자 및 &lt;xref:System.Windows.Forms.CurrencyManager.Count*&gt;1을 뺀 값입니다.&lt;/xref:System.Windows.Forms.CurrencyManager.Count*&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Forces a repopulation of the data-bound list.</source>
          <target state="translated">강제로 데이터 바인딩된 목록 다시 채웁니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the Refresh method when the data source does not support notification when it is changed (for example, if it is an &lt;xref:System.Array&gt;).</source>
          <target state="translated">데이터 소스 변경 될 때 알림을 지원 하지 않을 때 Refresh 메서드를 사용 하 여 (이 경우에 예를 들어는 &lt;xref:System.Array&gt;).&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes the item at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAt method was designed to allow complex controls, such as the &lt;xref:System.Windows.Forms.DataGrid&gt; control, to remove items from the list.</source>
          <target state="translated">RemoveAt 메서드는와 같은 복잡 한 제어를 허용 하도록 설계 된는 &lt;xref:System.Windows.Forms.DataGrid&gt;컨트롤 목록에서 항목을 제거 합니다.&lt;/xref:System.Windows.Forms.DataGrid&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not use this method to actually remove items.</source>
          <target state="translated">하지 실제로 항목을 제거 하려면이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.Data.DataView.Delete%2A&gt; method of the &lt;xref:System.Data.DataView&gt; class to delete items.</source>
          <target state="translated">대신를 사용 하 여는 &lt;xref:System.Data.DataView.Delete%2A&gt;의 메서드는 &lt;xref:System.Data.DataView&gt;항목을 삭제 하는 클래스입니다.&lt;/xref:System.Data.DataView&gt; &lt;/xref:System.Data.DataView.Delete%2A&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The index of the item to remove from the list.</source>
          <target state="translated">목록에서 제거할 항목의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>There is no row at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">지정 된 행이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">index</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Resumes data binding.</source>
          <target state="translated">데이터 바인딩을 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt; and ResumeBinding are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</source>
          <target state="translated">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;및 ResumeBinding은 단순 데이터 바인딩 시나리오에서 일시적 중단 및 다시 시작을 허용 하는 메서드입니다.&lt;/xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집 하도록 허용 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
          <target state="translated">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Using &lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt; prevents changes from being pushed into the data source until ResumeBinding is called but does not prevent changes in the data source from affecting the bound controls.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;를 사용 하 여 &lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;ResumeBinding가 호출 되지만 바인딩된 컨트롤에 영향을 미치는 데이터 원본 변경 하지 않는 데이터 원본에 밀어 넣는에서 변경할 수 없습니다.&lt;/xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the &lt;xref:System.Windows.Forms.DataGridView&gt; control, update their values based on change events such as the &lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt; event.</source>
          <target state="translated">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 &lt;xref:System.Windows.Forms.DataGridView&gt;제어와 같은 변경 이벤트에 따라 해당 값을 업데이트는 &lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;이벤트.&lt;/xref:System.Windows.Forms.CurrencyManager.ListChanged&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method will not prevent these events from occurring.</source>
          <target state="translated">이 메서드를 호출 해도 이러한 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, &lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt; and ResumeBinding are designed for use with simple-bound controls, such as a &lt;xref:System.Windows.Forms.TextBox&gt;.</source>
          <target state="translated">이러한 이유로, &lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;ResumeBinding &lt;xref:System.Windows.Forms.TextBox&gt;.&lt;/xref:System.Windows.Forms.TextBox&gt; 등의 단순 바인딩된 컨트롤에 사용 하기 위한 및&lt;/xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress &lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt; events by setting the &lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 &lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;설정 하 여 이벤트는 &lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt; &lt;/xref:System.Windows.Forms.BindingSource.ListChanged&gt;</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Suspends data binding to prevents changes from updating the bound data source.</source>
          <target state="translated">에 바인딩된 데이터 소스 업데이트에서 변경할 수 없습니다. 데이터 바인딩을 일시 중단 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SuspendBinding and &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt; methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</source>
          <target state="translated">SuspendBinding 및 &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;단순 바인딩 시나리오에는 일시 중단 했다가 데이터 바인딩 메서드를 사용 합니다.&lt;/xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 유효성 검사를 수행 하기 전에 사용자를 데이터 필드에 몇 가지 편집 내용을 확인 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
          <target state="translated">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt; prevents changes from being applied to the data source until &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt; is called, but does not actually prevent any events from occurring.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;변경 될 때까지 데이터 원본에 적용 되지 않도록 방지 &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;호출 되지만 실제로 발생 이벤트를 억제 하지 않습니다.&lt;/xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt; &lt;/xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the &lt;xref:System.Windows.Forms.DataGridView&gt; control, update their values based on change events, such as the &lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt; event.</source>
          <target state="translated">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 &lt;xref:System.Windows.Forms.DataGridView&gt;제어, 예: 변경 이벤트에 따라 해당 값을 업데이트는 &lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;이벤트.&lt;/xref:System.Windows.Forms.CurrencyManager.ListChanged&gt; &lt;/xref:System.Windows.Forms.DataGridView&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, calling &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt; will not prevent complex-bound controls from receiving events to update the data source.</source>
          <target state="translated">따라서 호출 &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;복합 바인딩된 컨트롤에서 데이터 소스를 업데이트 하는 이벤트를 받을 않도록 방지 되지는 것입니다.&lt;/xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt; and &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt; are designed for use with simple-bound controls, such as the &lt;xref:System.Windows.Forms.TextBox&gt; control.</source>
          <target state="translated">이러한 이유로 &lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;및 &lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 &lt;xref:System.Windows.Forms.TextBox&gt;컨트롤.&lt;/xref:System.Windows.Forms.TextBox&gt; &lt;/xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt; &lt;/xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress &lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt; events by setting the &lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 &lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;설정 하 여 이벤트는 &lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt; &lt;/xref:System.Windows.Forms.BindingSource.ListChanged&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Updates the status of the binding.</source>
          <target state="translated">바인딩 상태를 업데이트합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>