<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f02df28e874b44c9ea699785448cd04014775fe1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.MemoryMappedFiles.MemoryMappedFile.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34575cf934f1fc64b0ceb6cafbaed18051934f6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8a2d58f056dadec56b3cb6a6f0461a8db0c0d79</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A memory-mapped file maps the contents of a file to an application’s logical address space.</source>
          <target state="translated">메모리 매핑된 파일을 응용 프로그램의 논리 주소 공간에는 파일의 내용을 매핑합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</source>
          <target state="translated">메모리 매핑된 파일을 사용 하면 메모리를 동시에 관리할 수 있습니다. 그리고 검색할 필요 없이 파일에 대 한 완전 한 임의 액세스를 허용 하기 때문에 매우 큰 파일을 사용 하는 프로그래머가 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Memory-mapped files can also be shared across multiple processes.</source>
          <target state="translated">여러 프로세스에서 메모리 매핑된 파일을 공유할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt; methods create a memory-mapped file from a specified path or a &lt;xref:System.IO.FileStream&gt; of an existing file on disk.</source>
          <target state="translated">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;메서드는 지정된 된 경로에서 메모리 매핑된 파일 만들기 또는 &lt;xref:System.IO.FileStream&gt;디스크에 기존 파일의.&lt;/xref:System.IO.FileStream&gt; &lt;/xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes are automatically propagated to disk when the file is unmapped.</source>
          <target state="translated">변경 내용이 경우 디스크에 자동으로 전파 되 매핑된 파일이 아닙니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt; methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</source>
          <target state="translated">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;메서드; 디스크에 기존 파일에 매핑되지 않은 메모리 매핑된 파일을 만들고 (IPC) 프로세스 간 통신에 대 한 공유 메모리를 만들기에 적합 합니다.&lt;/xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A memory-mapped file is associated with a name.</source>
          <target state="translated">메모리 매핑된 파일 이름과 연관 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create multiple views of the memory-mapped file, including views of parts of the file.</source>
          <target state="translated">일부 파일의 뷰를 포함 하는 메모리 매핑된 파일의 여러 뷰를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can map the same part of a file to more than one address to create concurrent memory.</source>
          <target state="translated">둘 이상의 주소 동시 메모리를 만들 파일의 한 부분을 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For two views to remain concurrent, they have to be created from the same memory-mapped file.</source>
          <target state="translated">동시을 유지 하기 위한 두 보기에 대 한 동일한 메모리 매핑된 파일에서 만들 수 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating two file mappings of the same file with two views does not provide concurrency.</source>
          <target state="translated">두 가지 보기를 사용 하 여 동일한 파일의 두 파일 매핑 만들기 동시성을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file from a file on disk.</source>
          <target state="translated">디스크에 파일에서 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The path to file to map.</source>
          <target state="translated">파일의 경로를 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자에는 <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 잘못 된 장치를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>운영 체제에 의해 정의 된 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">Windows에서 경로 248 자 미만이, 있어야 합니다. 및 파일 이름은 260 자 보다 작은지를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">호출자에는 파일에 대 한 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode from a file on disk.</source>
          <target state="translated">디스크에 있는 파일에서 지정된 된 액세스 모드를 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated"><ph id="ph1">`mode`</ph> 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use only the &lt;xref:System.IO.FileMode&gt; enumeration value to create the memory-mapped file from the source file on disk.</source>
          <target state="translated">만 사용할 수는 &lt;xref:System.IO.FileMode&gt;디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.&lt;/xref:System.IO.FileMode&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The path to file to map.</source>
          <target state="translated">파일의 경로를 매핑할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Access mode; must be <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">액세스 모드입니다. must be <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified access mode.</source>
          <target state="translated">지정된 된 액세스 모드를 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자에는 <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 잘못 된 장치를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the file on disk does not exist.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> 은 <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 되 고 디스크에 있는 파일 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>-or-       An I/O error occurred.</source>
          <target state="translated">-또는-한 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>운영 체제에 의해 정의 된 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">Windows에서 경로 248 자 미만이, 있어야 합니다. 및 파일 이름은 260 자 보다 작은지를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">호출자에는 파일에 대 한 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode and name from a file on disk.</source>
          <target state="translated">디스크에 파일에서 지정 된 액세스 모드와 이름을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated"><ph id="ph1">`mode`</ph> 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use only the &lt;xref:System.IO.FileMode&gt; enumeration value to create the memory-mapped file from the source file on disk.</source>
          <target state="translated">만 사용할 수는 &lt;xref:System.IO.FileMode&gt;디스크에 있는 소스 파일에서 메모리 매핑된 파일을 만들려면 열거형 값입니다.&lt;/xref:System.IO.FileMode&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
          <target state="translated">매핑할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Access mode; must be <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">액세스 모드입니다. must be <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and access mode.</source>
          <target state="translated">지정된 된 이름 및 액세스 모드를 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자에는 <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 잘못 된 장치를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> 은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, or <bpt id="p3">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the file on disk does not exist.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> 은 <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 되 고 디스크에 있는 파일 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>-or-       An I/O error occurred.</source>
          <target state="translated">-또는-한 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>운영 체제에 의해 정의 된 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">Windows에서 경로 248 자 미만이, 있어야 합니다. 및 파일 이름은 260 자 보다 작은지를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">호출자에는 파일에 대 한 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</source>
          <target state="translated">디스크에 있는 파일에서 지정 된 액세스 모드, 이름 및 용량을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated"><ph id="ph1">`mode`</ph> 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 <ph id="ph1">`capacity`</ph> 디스크에 있는 파일의 크기입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
          <target state="translated">매핑할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Access mode; can be any of the <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values except <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">액세스 모드입니다. 중 하나일 수 있습니다는 <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값을 제외 하 고 <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">용량을 디스크에 있는 파일의 크기를 설정 하려면 0을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열, 공백만 포함 또는에 정의 된 대로 하나 이상의 잘못 된 문자에는 <ph id="ph2">&amp;lt;</ph>xref:System.IO.Path.GetInvalidFileNameChars%2A?displayProperty=fullName<ph id="ph3">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 잘못 된 장치를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> 은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일 크기 (않음&amp;0;은 아님) 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 는&amp;0;이 고 디스크에 있는 파일의 크기는&amp;0;도 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>운영 체제에 의해 정의 된 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">Windows에서 경로 248 자 미만이, 있어야 합니다. 및 파일 이름은 260 자 보다 작은지를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">호출자에는 파일에 대 한 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</source>
          <target state="translated">디스크에 있는 파일에서 지정 된 액세스 모드, 이름, 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
          <target state="translated"><ph id="ph1">`mode`</ph> 디스크에 있는 소스 파일에 관련 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 <ph id="ph1">`capacity`</ph> 디스크에 있는 파일의 크기입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
          <target state="translated">매핑할 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Access mode; can be any of the <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration values except <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">액세스 모드입니다. 중 하나일 수 있습니다는 <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값을 제외 하 고 <bpt id="p2">&lt;xref href="System.IO.FileMode"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">용량을 디스크에 있는 파일의 크기를 설정 하려면 0을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not an allowed value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 허용된 된 값이 아닙니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> specifies an empty file.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 빈 파일을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is specified as <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and capacity is greater than the size of the file indicated by <ph id="ph2">&lt;code&gt;path&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 로 지정 된 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 용량으로 지정 된 파일의 크기 보다 크면 <ph id="ph2">&lt;code&gt;path&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref href="System.IO.FileMode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일 크기 (않음&amp;0;은 아님) 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 는&amp;0;이 고 디스크에 있는 파일의 크기는&amp;0;도 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a defined <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 은 정의 되므로 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-or-       The size of the file indicated by <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;code&gt;capacity&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-로 지정 된 파일의 크기 <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 보다 크면 <ph id="ph2">&lt;code&gt;capacity&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-or-       An I/O error occurred.</source>
          <target state="translated">-또는-한 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>운영 체제에 의해 정의 된 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
          <target state="translated">Windows에서 경로 248 자 미만이, 있어야 합니다. 및 파일 이름은 260 자 보다 작은지를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
          <target state="translated">호출자에는 파일에 대 한 데 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</source>
          <target state="translated">지정 된 액세스 모드, 이름, 상속 및 용량을 가진 기존 파일에서 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The file stream of the existing file.</source>
          <target state="translated">기존 파일의 파일 스트림입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of <ph id="ph1">`filestream`</ph>.</source>
          <target state="translated">크기에 용량을 설정 하려면 0을 지정 <ph id="ph1">`filestream`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>This parameter can’t be set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A value that indicates whether to close the source file stream when the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated">때을 스트림 하는 원본 파일을 닫는 지 여부를 나타내는 값의 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일의 길이&amp;0;이 고 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration value, which is not allowed.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 로 설정 된 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 열거형 값은 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <ph id="ph2">&lt;code&gt;capacity&lt;/code&gt;</ph> is larger than the length of <bpt id="p2">&lt;xref uid="langword_csharp_filestream" name="filestream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 로 설정 된 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <ph id="ph2">&lt;code&gt;capacity&lt;/code&gt;</ph> 의 길이 보다 크면 <bpt id="p2">&lt;xref uid="langword_csharp_filestream" name="filestream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일 크기 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</source>
          <target state="translated">디스크에 있는 파일에서 지정한 이름, 용량, 액세스 형식, 보안 권한, 상속 및 삭제 요구 사항을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
          <target state="translated">경우 <ph id="ph1">`capacity`</ph> 데이터가 없는 메모리 매핑된 파일에 기록 되는 경우에 지정된 된 용량에 맞게 디스크에 디스크에 있는 파일에 있는 파일의 크기가 증가 하는 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
          <target state="translated">발생 하지 않도록 하려면이 0 (영)은 내부적으로 설정 되어 있는 기본 용량에 대 한 지정 <ph id="ph1">`capacity`</ph> 디스크에 있는 파일의 크기입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`fileStream`</ph> to the file to map.</source>
          <target state="translated"><ph id="ph1">`fileStream`</ph> 매핑할 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
          <target state="translated">용량을 디스크에 있는 파일의 크기를 설정 하려면 0을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This parameter can’t be set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 설정할 수 없습니다 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">파일 액세스 및 메모리 매핑된 파일에 대 한 작업에 부여할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to not dispose <ph id="ph1">`fileStream`</ph> after the <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is closed; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to dispose <ph id="ph2">`fileStream`</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>삭제 하지 <ph id="ph1">`fileStream`</ph> 후의 <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 닫혀 있습니다. <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> to dispose <ph id="ph2">`fileStream`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일의 길이&amp;0;이 고 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> enumeration value, which is not allowed.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 열거형 값은 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapname&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;mapname&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 파일 크기 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> was closed.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph>닫혔습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <ph id="ph2">&lt;code&gt;fileStream&lt;/code&gt;</ph>'s access is set to <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <ph id="ph2">&lt;code&gt;fileStream&lt;/code&gt;</ph>'s access is set to <bpt id="p2">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> already exists.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>이미 존재합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity in system memory.</source>
          <target state="translated">시스템 메모리에서 지정된 된 용량을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and capacity.</source>
          <target state="translated">지정 된 이름과 용량을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>보다 작거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity and access type in system memory.</source>
          <target state="translated">시스템 메모리에서 지정 된 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>보다 작거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</source>
          <target state="translated">지정한 이름, 용량, 액세스 형식, 메모리 할당 옵션 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 메모리 할당 옵션을 지정 하는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>보다 작거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
          <target state="translated">시스템 메모리에서 지정 된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속을 가진 메모리 매핑된 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">지속 되지 않는 메모리 매핑된 파일을 만들려면이 메서드를 사용 하 여 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 메모리 할당 옵션을 지정 하는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">파일 액세스 및 메모리 매핑된 파일에 대 한 작업에 부여할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>보다 작거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity in system memory.</source>
          <target state="translated">만들거나 시스템 메모리에서 지정된 된 용량을 가진 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and size.</source>
          <target state="translated">지정 된 이름과 크기를 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.</source>
          <target state="translated">만들거나 시스템 메모리에서 지정 된 용량 및 액세스 형식을 가진 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified access to the file; for example, access is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but the file or directory is read-only.</source>
          <target state="translated">운영 체제에서 파일에 대 한 지정 된 액세스를 거부 했습니다. 액세스가로 설정 된 예를 들어 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 파일 또는 디렉터리는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</source>
          <target state="translated">새 빈 메모리 매핑된 파일을 만들거나 동일한 이름이 있는 경우 기존의 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>If opening an existing file, the capacity, options, and memory arguments will be ignored.</source>
          <target state="translated">기존 파일을 여는 경우 용량, 옵션 및 메모리 인수가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A bitwise combination of values that indicate the memory allocation options to apply to the file.</source>
          <target state="translated">파일에 적용할 메모리 할당 옵션을 나타내는 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified access to the file; for example, access is set to <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, but the file or directory is read-only.</source>
          <target state="translated">운영 체제에서 파일에 대 한 지정 된 액세스를 거부 했습니다. 액세스가로 설정 된 예를 들어 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 파일 또는 디렉터리는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
          <target state="translated">만들거나 시스템 메모리에서 지정 된 용량, 액세스 형식, 메모리 할당, 보안 권한 및 상속을 가진 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
          <target state="translated">이 메서드를 사용 하 여 만들거나 지속 되지 않는 메모리 매핑된 파일을 열 수 (즉, 연관 되지 않은 디스크에 파일), 프로세스 간에 데이터를 공유 하는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 이름입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 할당할 바이트의 최대 크기입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 메모리 할당 옵션을 지정 하는 열거형 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">파일 액세스 및 메모리 매핑된 파일에 대 한 작업에 부여할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This parameter can be <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 매개 변수 수 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 와 쓰기 전용으로 설정 되는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph>논리 주소 공간 크기 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> 가&amp;0; 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> to the file; for example, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is set to <bpt id="p3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, but the file or directory is read-only.</source>
          <target state="translated">운영 체제 지정 된 거부 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 을 파일 예를 들어 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 로 설정 되어 <bpt id="p3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>, 파일 또는 디렉터리는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 메모리 매핑된 파일의 뷰에 매핑되는 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">임의로 액세스 가능한 메모리 블록입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 액세스는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 메모리 매핑된 파일의 뷰에 매핑되는 및 지정 된 오프셋과 크기를가지고 있습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 <ph id="ph1">`size`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
          <target state="translated">보기를 시작 하는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
          <target state="translated">보기의 크기입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <ph id="ph1">`offset`</ph> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">0 (영)에서 시작 하는 뷰를 만들 지정 <ph id="ph1">`offset`</ph> 메모리 매핑된 파일의 끝에서 약 끝납니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">임의로 액세스 가능한 메모리 블록입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> 이 음수입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> 논리 주소 공간 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 액세스는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 메모리 매핑된 파일의 뷰에 매핑되는 및 지정 된 오프셋, 크기 및 액세스 제한 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 임의 액세스에 대 한이 메서드에서 반환 된 보기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 <ph id="ph1">`size`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
          <target state="translated">보기를 시작 하는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
          <target state="translated">보기의 크기입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <ph id="ph1">`offset`</ph> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">0 (영)에서 시작 하는 뷰를 만들 지정 <ph id="ph1">`offset`</ph> 메모리 매핑된 파일의 끝에서 약 끝납니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
          <target state="translated">임의로 액세스 가능한 메모리 블록입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> 이 음수입니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> 논리 주소 공간 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>메모리 매핑된 파일에 대해 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A stream of memory.</source>
          <target state="translated">메모리 스트림입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 액세스는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
          <target state="translated">지정 된 오프셋과 크기를가지고 메모리 매핑된 파일의 뷰에 매핑되는 스트림을 만듭니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 <ph id="ph1">`size`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
          <target state="translated">보기를 시작 하는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
          <target state="translated">보기의 크기입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <ph id="ph1">`offset`</ph> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">0 (영)에서 시작 하는 뷰를 만들 지정 <ph id="ph1">`offset`</ph> 메모리 매핑된 파일의 끝에서 약 끝납니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>A stream of memory that has the specified offset and size.</source>
          <target state="translated">지정 된 오프셋과 크기를 가진 메모리 스트림.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> 이 음수입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> 논리 주소 공간 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 액세스는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph>총 가상 메모리 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</source>
          <target state="translated">메모리 매핑된 파일의 보기에 매핑되는 하 고, 지정 된 오프셋, 크기 및 액세스 입력 된 스트림을 만듭니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
          <target state="translated">이 메서드에서 반환 된 순차적 액세스를 위해 메모리 매핑된 파일에 같은 프로세스 간 통신에 대 한 스트림을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
          <target state="translated">메모리 매핑된 파일의 전체 보기를 만들려면 0 (영)을 지정 된 <ph id="ph1">`size`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
          <target state="translated">이 작업을 수행 하는 경우 보기의 크기는 디스크에 있는 소스 파일의 크기 보다 크거나 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
          <target state="translated">뷰는 시스템 페이지 단위로 제공 되 고 보기의 크기는 다음 시스템 페이지 크기까지 반올림 때문입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
          <target state="translated">보기를 시작 하는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
          <target state="translated">보기의 크기입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <ph id="ph1">`offset`</ph> and ends approximately at the end of the memory-mapped file.</source>
          <target state="translated">0 (영)에서 시작 하는 뷰를 만들 지정 <ph id="ph1">`offset`</ph> 메모리 매핑된 파일의 끝에서 약 끝납니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 허용 되는 액세스 형식을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A stream of memory that has the specified characteristics.</source>
          <target state="translated">지정된 된 특성을 가진 메모리 스트림.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> 이 음수입니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> 논리 주소 공간 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access &lt;/code&gt;</ph>is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access &lt;/code&gt;</ph>유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>메모리 매핑된 파일에 대해 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph>총 가상 메모리 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> 메모리 매핑된 파일에 대해 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Gets the access control to the memory-mapped file resource.</source>
          <target state="translated">메모리 매핑된 파일 리소스에 액세스 제어를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">파일 액세스 및 메모리 매핑된 파일에 대 한 작업에 부여할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The memory-mapped file is closed.</source>
          <target state="translated">메모리 매핑된 파일이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The current platform is Windows 98 or earlier.</source>
          <target state="translated">현재 플랫폼은 Windows 98 또는 이전 버전입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-       The memory-mapped file was opened as <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> only.</source>
          <target state="translated">-또는-로 매핑된 메모리 파일을 연 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name in system memory.</source>
          <target state="translated">시스템 메모리에서 지정된 된 이름을 가진 기존의 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.</source>
          <target state="translated">비지속형 또는 메모리 매핑된 파일 중 하나는 지속형된 메모리 매핑된 파일 (디스크의 파일에 연결)을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">열려는 메모리 매핑된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name.</source>
          <target state="translated">지정한 이름을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">지정 된 파일이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mapName</ph> <ept id="p1">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name and access rights in system memory.</source>
          <target state="translated">시스템 메모리에서 지정된 된 이름 및 액세스 권한을 가진 기존의 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">열려는 메모리 매핑된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 적용할 액세스 권한을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph>유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">지정 된 파일이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mapName</ph> <ept id="p1">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</source>
          <target state="translated">시스템 메모리에서 지정 된 이름, 액세스 권한 및 상속을 가진 기존의 메모리 매핑된 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
          <target state="translated">열려는 메모리 매핑된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 적용할 액세스 권한을 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들을 자식 프로세스가 상속할 수 있는지 여부를 지정 하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The default is &lt;xref:System.IO.HandleInheritability&gt;.</source>
          <target state="translated">기본값은 &lt;xref:System.IO.HandleInheritability&gt;.&lt;/xref:System.IO.HandleInheritability&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
          <target state="translated">지정 된 특성을 가진 메모리 매핑된 파일입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph>유효 하지 않거나 <bpt id="p1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> enumeration value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> 유효 하지 않거나 <ph id="ph2">&lt;xref:System.IO.HandleInheritability&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The requested access is invalid for the memory-mapped file.</source>
          <target state="translated">요청 된 액세스 메모리 매핑된 파일에 대해 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">지정 된 파일이 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mapName</ph> <ept id="p1">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Gets the file handle of a memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일의 파일 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The handle to the memory-mapped file.</source>
          <target state="translated">메모리 매핑된 파일에 대 한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Sets the access control to the memory-mapped file resource.</source>
          <target state="translated">메모리 매핑된 파일 리소스에 액세스 제어를 설정합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
          <target state="translated">파일 액세스 및 메모리 매핑된 파일에 대 한 작업에 부여할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;memoryMappedFileSecurity&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;memoryMappedFileSecurity&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
          <target state="translated">보안 정보를 설정 하는 기본 호출에 실패 했습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>