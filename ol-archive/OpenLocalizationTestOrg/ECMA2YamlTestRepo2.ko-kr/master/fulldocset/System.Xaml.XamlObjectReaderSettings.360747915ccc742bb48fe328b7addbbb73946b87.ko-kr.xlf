<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a415d9422f7e9e338a7480cbe7caf3542a0a3f26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlObjectReaderSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6e474e2b79c7af9d1004433c30674c031bfaa27</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35beaaf227b13db3825187331442037d1555735b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies processing rules or option settings for a <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">처리 규칙 또는 대 한 옵션 설정을 지정는 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReaderSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReaderSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether writers that use the associated <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for context should use designer settings for writing content explicitly.</source>
          <target state="translated">있는지 여부를 사용 하는 작성기를 결정 하는 값을 가져오거나 설정 합니다. 연결 된 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨텍스트 설정 디자이너를 사용 하 여 명시적으로 콘텐츠를 쓰는 데 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting is queried internally.</source>
          <target state="translated">이 설정은 내부적으로 쿼리 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It influences the following behavior for the context that a &lt;xref:System.Xaml.XamlObjectReader&gt; passes to any &lt;xref:System.Xaml.XamlWriter&gt;:      -   The RequireExplicitContentVisibility behavior only applies for properties where &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; is <ph id="ph1">`false`</ph>, AND when a <ph id="ph2">`ShouldSerialize`</ph> pattern is unavailable for the property value.</source>
          <target state="translated">컨텍스트에 대 한 다음 동작에 영향을 줍니다 하는 &lt;xref:System.Xaml.XamlObjectReader&gt;에 전달 &lt;xref:System.Xaml.XamlWriter&gt;:-The RequireExplicitContentVisibility 동작은 속성에만 적용 됩니다 위치 &lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;은 <ph id="ph1">`false`</ph>, 및 시기는 <ph id="ph2">`ShouldSerialize`</ph> 패턴은 속성 값에 사용할 수 없습니다.&lt;/xref:System.Xaml.XamlMember.IsWritePublic%2A&gt; &lt;/xref:System.Xaml.XamlWriter&gt; &lt;/xref:System.Xaml.XamlObjectReader&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the statement in the first bullet point is true, AND RequireExplicitContentVisibility is <ph id="ph1">`true`</ph>, then designer settings determine whether the property writes its output as content or the property is considered implicit.</source>
          <target state="translated">-첫 번째 글머리 기호의 문을 true 고 RequireExplicitContentVisibility가 있으면 <ph id="ph1">`true`</ph>, 디자이너 설정 속성 내용으로 출력을 작성 또는 속성은 암시적으로 간주 하는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to designer settings is through internal APIs in .NET Framework XAML Services and is based on reading &lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt; from backing assemblies.</source>
          <target state="translated">.NET Framework XAML 서비스에서 내부 Api를 통해 이며 읽기 기반 디자이너 설정에 대 한 액세스 &lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;백업 어셈블리의.&lt;/xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the internal code checks for the value &lt;xref:System.ComponentModel.DesignerSerializationVisibility?displayProperty=fullName&gt; and writes its output to the property.</source>
          <target state="translated">이 경우 내부 코드 값을 확인 &lt;xref:System.ComponentModel.DesignerSerializationVisibility?displayProperty=fullName&gt;속성에 해당 출력을 씁니다.&lt;/xref:System.ComponentModel.DesignerSerializationVisibility?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the content is considered implicit.</source>
          <target state="translated">이렇게 하지 않으면 콘텐츠 암시적 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If the statement in the first bullet is <ph id="ph1">`true`</ph>, AND RequireExplicitContentVisibility is <ph id="ph2">`false`</ph>, the property always writes its output, and &lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt; from backing assemblies is irrelevant.</source>
          <target state="translated">-문이 첫 번째 글머리 기호의 경우 <ph id="ph1">`true`</ph>, 및 RequireExplicitContentVisibility은 <ph id="ph2">`false`</ph>, 속성은 항상 출력을 작성 하 고 &lt;xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;백업 어셈블리의은 관련이 없습니다.&lt;/xref:System.ComponentModel.DesignerSerializationVisibilityAttribute&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;xref:System.Xaml.XamlMember.IsWritePublic*&gt; reports <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if designer settings should be ignored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 컨텍스트를 사용 하는 작성기가 쓰기를 위한 설정 디자이너를 사용 하도록 지정 하려면 &lt;xref:System.Xaml.XamlMember.IsWritePublic*&gt;를 보고 하는 경우에는 콘텐츠 출력 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 디자이너 설정 무시 해야 하는 경우.&lt;/xref:System.Xaml.XamlMember.IsWritePublic*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>