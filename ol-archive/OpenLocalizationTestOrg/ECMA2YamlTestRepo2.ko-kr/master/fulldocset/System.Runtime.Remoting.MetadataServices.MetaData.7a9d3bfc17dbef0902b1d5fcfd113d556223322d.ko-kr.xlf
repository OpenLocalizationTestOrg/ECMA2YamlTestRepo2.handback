<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd7088ebc890988d97ee2e8ff165297008db7851</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Remoting.MetadataServices.MetaData.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9c2b26bc210463d0e91c23bbbbf17ef7fec3b45</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd2f31c0024530d2682846f2fa22011bfa1a416b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides methods that allow you to work with XML schema.</source>
          <target state="translated">XML 스키마로 작업할 수 있도록 하는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MetaData class provides methods that allow you to generate Web Services Description Language (WSDL) from type information, convert an XML Schema into a code stream, and compile the code stream into an assembly.</source>
          <target state="translated">형식 정보에서 WSDL 웹 서비스 설명 언어 ()를 생성할 수 있도록 하는 메서드를 코드 스트림으로 XML 스키마를 변환 하 고 코드 스트림을 어셈블리로 컴파일할 메타 데이터 클래스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is also present in the <bpt id="p1">[</bpt>Soapsuds Tool (Soapsuds.exe)<ept id="p1">](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)</ept>.</source>
          <target state="translated">이 기능에도 제공 됩니다는 <bpt id="p1">[</bpt>Soapsuds 도구 (Soapsuds.exe)<ept id="p1">](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creates an instance of <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.MetaData"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">인스턴스를 만들고 <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.MetaData"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Compiles a specified code source file into a runtime assembly file.</source>
          <target state="translated">런타임 어셈블리 파일에 지정 된 코드 소스 파일을 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on strong names, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">강력한 이름에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>강력한 이름의 어셈블리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The path to the file that contains the source code.</source>
          <target state="translated">경로 소스 코드를 포함 하는 파일입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The location where the new run-time assembly is generated.</source>
          <target state="translated">여기서 새 런타임 어셈블리는 생성 된 위치입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The strong name to compile into the new assembly.</source>
          <target state="translated">강력한 이름으로 새 어셈블리로 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">수 <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Compiles specified code source streams into a run-time assembly file.</source>
          <target state="translated">런타임에 어셈블리 파일에 코드 소스 스트림을 지정 하는 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on strong names, see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">강력한 이름에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>강력한 이름의 어셈블리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of streams with the source code.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Collections.ArrayList"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 소스 코드로 구성 된 스트림 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The location where the new run-time assembly is generated.</source>
          <target state="translated">여기서 새 런타임 어셈블리는 생성 된 위치입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The strong name to compile into the new run-time assembly.</source>
          <target state="translated">새 런타임 어셈블리로 컴파일하려면 강력한 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">수 <ph id="ph1">&amp;lt;</ph>xref:System.String?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Converts the specified schema definition into C# proxy source code.</source>
          <target state="translated">C# 프록시 소스 코드에 지정된 된 스키마 정의 변환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates the type of proxy to generate.</source>
          <target state="translated">생성할 프록시의 유형을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a transparent proxy that exposes all the methods of the remote object.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The directory where the new C# source code files with the proxy are created.</source>
          <target state="translated">새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</source>
          <target state="translated">서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The list of file names for the code streams that are generated.</source>
          <target state="translated">생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Note that the &lt;xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt; method can create multiple source code streams.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt;메서드가 여러 소스 코드 스트림을 만들 수 있습니다.&lt;/xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</source>
          <target state="translated">지정된 된 URL에 있는 원격 개체에 대 한 C# 프록시 소스 코드에 지정된 된 스키마 정의 변환 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indicates the type of proxy to generate.</source>
          <target state="translated">생성할 프록시의 유형을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a transparent proxy that exposes all the methods of the remote object.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The directory where the new C# source code files with the proxy are created.</source>
          <target state="translated">새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</source>
          <target state="translated">서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The list of file names for the code streams that are generated.</source>
          <target state="translated">생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the &lt;xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt; method can create multiple source code streams.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt;메서드가 여러 소스 코드 스트림을 만들 수 있습니다.&lt;/xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream*&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The URL where the target remote object that is represented by the new proxy will be located.</source>
          <target state="translated">새 프록시에 의해 표시 되는 대상 원격 개체 배치 될 위치는 URL입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</source>
          <target state="translated">지정된 된 URL에서 및 제공 된 클래스 네임 스페이스에 있는 원격 개체에 대 한 C# 프록시 소스 코드에 지정된 된 스키마 정의 변환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Indicates the type of proxy to generate.</source>
          <target state="translated">생성할 프록시의 유형을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 자동으로 로드 하는 채널 원격 개체의 모든 메서드를 노출 하 고 채널 속성에 대 한 액세스를 제공 하는 간단한 프록시 (래핑된 프록시)를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, generates a transparent proxy that exposes all the methods of the remote object.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 원격 개체의 모든 메서드를 노출 하는 투명 프록시를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The directory where the new C# source code files with the proxy are created.</source>
          <target state="translated">새 C# 소스 코드 파일에서 프록시를 통해 디렉터리 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The input stream containing the schema definition in Web Services Description Language (WSDL) format.</source>
          <target state="translated">서비스 설명 언어 WSDL (웹) 형식의 스키마 정의 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The list of file names for the code streams that are generated.</source>
          <target state="translated">생성 되는 코드 스트림에 대 한 파일 이름 목록이 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Note that the ConvertSchemaStreamToCodeSourceStream method can create multiple source code streams.</source>
          <target state="translated">ConvertSchemaStreamToCodeSourceStream 메서드 만들 수 여러 소스 코드 스트림 note 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The URL where the target remote object that is represented by the new proxy will be located.</source>
          <target state="translated">새 프록시에 의해 표시 되는 대상 원격 개체 배치 될 위치는 URL입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The namespace of the newly created proxy.</source>
          <target state="translated">새로 만든 프록시 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Converts the specified service types to XML schema, and writes it to a file that is specified by name.</source>
          <target state="translated">지정한 서비스 형식을 XML 스키마로 변환 하는 이름으로 지정 하는 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt; instance allows you to associate a URL with an object &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt;인스턴스를 사용 하면 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 개체와 함께 URL을 연결할 수 있습니다&lt;/xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;에서 지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.ServiceType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances to convert to XML schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.ServiceType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 XML 스키마로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The type of service description language to use for the XML schema.</source>
          <target state="translated">XML 스키마에 사용할 서비스 설명 언어의 형식입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The path of the XML file.</source>
          <target state="translated">XML 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Converts the specified object types to XML schema, and writes it to a file that is specified by name.</source>
          <target state="translated">지정된 된 개체 형식을 XML 스키마로 변환 하 고 이름으로 지정 된 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The object types to convert to XML schema.</source>
          <target state="translated">XML 스키마로 변환할 개체 유형입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The type of service description language to use for the XML schema.</source>
          <target state="translated">XML 스키마에 사용할 서비스 설명 언어의 형식입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The path of the XML file.</source>
          <target state="translated">XML 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Converts the specified service types to XML schema, and writes it to a specified stream.</source>
          <target state="translated">지정한 서비스 형식을 XML 스키마로 변환 하는 하 한을 지정 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt; instance allows you to associate a URL with an object &lt;xref:System.Type&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt;인스턴스를 사용 하면 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 개체와 함께 URL을 연결할 수 있습니다&lt;/xref:System.Runtime.Remoting.MetadataServices.ServiceType&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.ServiceType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances to convert to XML schema.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Remoting.MetadataServices.ServiceType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 XML 스키마로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of service description language to use for the XML schema.</source>
          <target state="translated">XML 스키마에 사용할 서비스 설명 언어의 형식입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; that the schema is written to.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;스키마에 기록 됩니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Converts the specified object types to XML schema, and writes it to a specified stream.</source>
          <target state="translated">지정된 된 개체 형식을 XML 스키마로 변환 하 고 지정 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The object types to convert to XML schema.</source>
          <target state="translated">XML 스키마로 변환할 개체 유형입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The type of service description language to use for the XML schema.</source>
          <target state="translated">XML 스키마에 사용할 서비스 설명 언어의 형식입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; that the schema is written to.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;스키마에 기록 됩니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Downloads the XML schema from a URL, and writes it to the specified file.</source>
          <target state="translated">URL에서 XML 스키마를 다운로드 하 고 지정된 된 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The URL where the XML schema is located.</source>
          <target state="translated">XML 스키마가 있는 URL입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The path of the file that the schema is written to.</source>
          <target state="translated">스키마에 기록 되는 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Downloads the XML schema from a URL, and writes it to the specified stream.</source>
          <target state="translated">URL에서 XML 스키마를 다운로드 하 고 지정 된 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The URL where the XML schema is located.</source>
          <target state="translated">XML 스키마가 있는 URL입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.IO.Stream&gt; that the schema is written to.</source>
          <target state="translated">&lt;xref:System.IO.Stream&gt;스키마에 기록 됩니다.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Saves the input stream to a file with the specified name.</source>
          <target state="translated">입력된 스트림을 지정 된 이름의 파일에 저장합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The stream to write to the specified file.</source>
          <target state="translated">지정된 된 파일에 쓸 스트림입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The file that the input stream is written to.</source>
          <target state="translated">입력된 스트림의에 기록 되는 파일입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>