<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33fd08e5aeae7e140f9bd113ad6dc05c535a28b7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.AmbientPropertyValue.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f71b3f5e302a628debff7f9721a945dfd48c9f34</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fdf6f5c2d2249f65fd7c8505f384751b2d7963d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reports information about an ambient property, as part of an <bpt id="p1">&lt;xref href="System.Xaml.IAmbientProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementation.</source>
          <target state="translated">일부로 앰비언트 속성에 대 한 정보를 보고 한 <bpt id="p1">&lt;xref href="System.Xaml.IAmbientProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>AmbientPropertyValue represents an information item that is returned by calling an &lt;xref:System.Xaml.IAmbientProvider&gt; service method.</source>
          <target state="translated">AmbientPropertyValue 호출 하 여 반환 되는 정보 항목을 나타냅니다는 &lt;xref:System.Xaml.IAmbientProvider&gt;서비스 메서드가.&lt;/xref:System.Xaml.IAmbientProvider&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`GetAll`</ph> methods return enumerations or arrays of AmbientPropertyValue items; the <ph id="ph2">`GetFirst`</ph> methods return a single AmbientPropertyValue.</source>
          <target state="translated"><ph id="ph1">`GetAll`</ph> 메서드 열거형 또는 AmbientPropertyValue 항목 배열을 반환는 <ph id="ph2">`GetFirst`</ph> 메서드 단일 AmbientPropertyValue를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>About Ambient Properties    An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</source>
          <target state="translated">앰비언트 속성에 대 한 앰비언트 속성은 속성 값을 갖는 그 아래에 있는 개체 그래프에서 XAML 노드 구조 값 변환기에 사용할 수 수 있어야 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</source>
          <target state="translated">로드 경로 개체 작성 단계 또는 저장의 serialization 단계에 해당 하는 동안 앰비언트 개념은 XAML 프로세서에 대 한 관련 경로입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type can also be attributed as ambient.</source>
          <target state="translated">형식도 추측할 수 앰비언트로 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, all properties that use the attributed type are reported as ambient.</source>
          <target state="translated">이 경우 특성이 지정 된 형식을 사용 하는 모든 속성 앰비언트로 보고 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</source>
          <target state="translated">로드 경로에서는 앰비언트 속성 값에서 XAML 노드 구조 아래에 있는 다른 속성의 개체 그래프 생성 값에 영향을 줄 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from <ph id="ph1">`StartObject`</ph> to <ph id="ph2">`EndObject`</ph>.</source>
          <target state="translated">XAML 노드 스트림으로 처리 하는 경우 앰비언트 개념 앰비언트 속성 값 형식 변환기 또는 태그 확장에서 사용할 수 있어야 하는 의미 <ph id="ph1">`StartObject`</ph> 를 <ph id="ph2">`EndObject`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</source>
          <target state="translated">마찬가지로, 형식 변환기 또는 태그 확장이 사용 되는 저장에 대 한 경로 앰비언트 속성 및 해당 값을 조회할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the XAML that is produced is a better round-trip representation.</source>
          <target state="translated">따라서 생성 되는 XAML 더 나은 라운드트립 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By its language definition, XAML does not specify the order in which members of an object must be processed.</source>
          <target state="translated">해당 언어 정의 의해 XAML 개체의 멤버를 처리 해야 하는 순서를 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the &lt;xref:System.Xaml.IAmbientProvider&gt; service.</source>
          <target state="translated">그러나 앰비언트 속성 값으로 처리 해야 먼저 XAML 판독기는 형식 변환기 및 태그 확장 사용 다른 속성에 포함 된 통해 액세스할 수 있도록는 &lt;xref:System.Xaml.IAmbientProvider&gt;서비스.&lt;/xref:System.Xaml.IAmbientProvider&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; is a similar concept that also influences XAML node-processing order.</source>
          <target state="translated">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;또한 XAML 노드 처리 순서에 영향을 주는 비슷한 개념이입니다.&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; can only be used for peer member and node relationships; it cannot influence all descendants.</source>
          <target state="translated">그러나 &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;피어 노드 및 멤버 관계;에 사용할 수는 모든 하위 항목을 바꿀 수 없습니다.&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt; directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</source>
          <target state="translated">또한 &lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;영향을 줍니다 개체 그래프 속성 설정, 형식 변환기 또는 태그 확장에 의존 하는 앰비언트 방법 반면 직접.&lt;/xref:System.Xaml.XamlMember.DependsOn%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the ambient technique, there must also be a specific type converter or markup extension definition.</source>
          <target state="translated">앰비언트 기술에도 있어야 특정 형식 변환기 또는 태그 확장을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</source>
          <target state="translated">각 형식 변환기 또는 태그 확장을 앰비언트 속성 값은 해석 및 형식 변환기 또는 태그 확장 사용 되는 개체 그래프 위치에 적용 방법을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Usage Notes    An ambient property scenario that is illustrated in the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> feature set is &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;, which can qualify the necessary property name lookups for other values.</source>
          <target state="translated">WPF 사용 정보에 나와 있는 앰비언트 속성 시나리오는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> 기능 집합은 &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;, 다른 값에 대 한 필수 속성 이름 조회를 정규화 할 수 있는.&lt;/xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt; value qualifies the &lt;xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt; values in the XAML nodes underneath it.</source>
          <target state="translated">이 경우 &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;값 한정 &lt;xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt;합니다. 아래 XAML 노드에 값&lt;/xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt; uses the type converter behavior for a &lt;xref:System.Windows.DependencyProperty&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt;에 &lt;xref:System.Windows.DependencyProperty&gt;.&lt;/xref:System.Windows.DependencyProperty&gt; 에 대 한 형식 변환기 동작을 사용 하 여&lt;/xref:System.Windows.Setter.Property%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior accesses the ambient &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt; value by querying &lt;xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A&gt; from a service context that is available to type converters and markup extensions.</source>
          <target state="translated">이 동작은 앰비언트 액세스 &lt;xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;쿼리하여 값 &lt;xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A&gt;형식 변환기 및 태그 확장에 사용할 수 있는 서비스 컨텍스트에서.&lt;/xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A&gt; &lt;/xref:System.Windows.Style.TargetType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.AmbientPropertyValue"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.AmbientPropertyValue"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The identifier that represents the ambient property.</source>
          <target state="translated">앰비언트 속성을 나타내는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The value to report.</source>
          <target state="translated">보고서에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the XAML type system identifier (<bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) that represents the ambient property.</source>
          <target state="translated">XAML 형식 시스템 식별자를 가져옵니다 (<bpt id="p1">&lt;xref href="System.Xaml.XamlMember"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>) 앰비언트 속성을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The identifier that represents the ambient property.</source>
          <target state="translated">앰비언트 속성을 나타내는 식별자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the value of the ambient property.</source>
          <target state="translated">앰비언트 속성의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The value of the ambient property.</source>
          <target state="translated">앰비언트 속성의 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>