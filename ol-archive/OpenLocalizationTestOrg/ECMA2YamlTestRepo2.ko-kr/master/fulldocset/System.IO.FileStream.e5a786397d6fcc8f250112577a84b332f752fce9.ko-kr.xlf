<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5aba493f3f0d1b84832e58cc36d4c420123e3425</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.FileStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">492e8aaa4a33c7b89c3dc53caaabbaab00746b05</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74610b6181414f7dfec1e1faba93b1f65c9de4ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a &lt;xref:System.IO.Stream&gt; for a file, supporting both synchronous and asynchronous read and write operations.</source>
          <target state="translated">제공 된 &lt;xref:System.IO.Stream&gt;읽기 / 쓰기 작업 둘 다 동기 및 비동기 지원 하는 파일에 대 한.&lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>To browse the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs#e23a38af5d11ddd3)</ept>.</source>
          <target state="translated">이 형식에 대 한.NET Framework 소스 코드를 찾아보려면 참조는 <bpt id="p1">[</bpt>참조 소스<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs#e23a38af5d11ddd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한이 있는 지정 된 파일 핸들에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.IO.Stream.Close%2A&gt; is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">때 &lt;xref:System.IO.Stream.Close%2A&gt;은 호출, 핸들 닫히며 파일의 핸들 수가 감소 됩니다.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 파일 핸들은 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>필드가 아닙니다 <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한이 있는 지정 된 파일 핸들에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When &lt;xref:System.IO.Stream.Close%2A&gt; is called, the handle is also closed and the file's handle count is decremented.</source>
          <target state="translated">때 &lt;xref:System.IO.Stream.Close%2A&gt;은 호출, 핸들 닫히며 파일의 핸들 수가 감소 됩니다.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 파일 핸들은 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>필드가 아닙니다 <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path and creation mode.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 경로 및 생성 모드를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>잘못 된 값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, and buffer size.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한이 있는 지정 된 파일 핸들에 대 한 클래스 및 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">또는 읽고이 호출 하기 전에 핸들에 쓰는 <ph id="ph1">`FileStream`</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 파일 핸들은 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p2">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p2">*</ept>&gt; properties of the <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt;의 속성은 <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid handle.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 잘못 된 핸들입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 동기 핸들 인데 비동기적으로 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bufferSize</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bufferSize</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 음수입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission and <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한으로 지정 된 파일 핸들에 대 한 클래스 및 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스 소유권 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체 파일에 지정된 된 액세스를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">핸들의 소유권 됩니다. 지정 된 대로 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this process owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle and the file's handle count is decremented.</source>
          <target state="translated">이 프로세스에 대 한 호출 핸들을 소유 하는 경우는 &lt;xref:System.IO.Stream.Close%2A&gt;메서드 핸들이 닫힙니다 및 파일의 핸들 수가 감소 됩니다.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the default buffer size of 4096 bytes.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체는 4096 바이트의 기본 버퍼 크기를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 파일 핸들은 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 파일 핸들을 소유 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스이거나, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a field of <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>필드가 아닙니다 <bpt id="p1">&lt;xref href="System.IO.FileAccess"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, and read/write permission.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정된 된 경로, 생성 모드 및 읽기/쓰기 권한을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파일에 액세스할 수 있는 방법을 결정 하는 상수는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반환 값도 결정는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph1">`path`</ph> 디스크 파일을 지정 합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>잘못 된 값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한, 버퍼 크기 및 동기 / 비동기 상태와 지정 된 파일 핸들에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">`isAsync`</ph> parameter to <ph id="ph2">`true`</ph> to open the file handle asynchronously.</source>
          <target state="translated">설정한는 <ph id="ph1">`isAsync`</ph> 매개 변수를 <ph id="ph2">`true`</ph> 를 비동기적으로 파일 핸들을 엽니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the parameter is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">이 매개 변수는 경우 <ph id="ph1">`true`</ph>, 스트림 겹쳐 있는 I/O 파일 작업을 비동기적으로 수행 하는 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the parameter does not have to be <ph id="ph1">`true`</ph> to call the &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, or &lt;xref:System.IO.Stream.CopyToAsync%2A&gt; method.</source>
          <target state="translated">그러나 매개 변수가 있어서는 안 될 <ph id="ph1">`true`</ph> 호출 하 여 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, 또는 &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;메서드.&lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`isAsync`</ph> parameter is <ph id="ph2">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">경우는 <ph id="ph1">`isAsync`</ph> 매개 변수는 <ph id="ph2">`false`</ph> 및 비동기 읽기를 호출 하 고 쓰기 작업, UI 스레드는 여전히 수는 있지만 실제 I/O 작업이 동기적으로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">또는 읽고이 호출 하기 전에 핸들에 쓰는 <ph id="ph1">`FileStream`</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">이 파일에 대 한 파일 핸들 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>핸들이 비동기적으로 열린 경우 (즉, 겹쳐진 I/O 모드에서); 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid handle.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 잘못 된 핸들입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter is a synchronous handle and it was used asynchronously.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">handle</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수는 동기 핸들 인데 비동기적으로 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">bufferSize</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">bufferSize</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 음수입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership, and buffer size.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한이 있는 지정 된 파일 핸들에 대 한 클래스 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스 소유권 및 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체 파일에 지정된 된 액세스를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">핸들의 소유권 됩니다. 지정 된 대로 합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle.</source>
          <target state="translated">이 경우 <ph id="ph1">`FileStream`</ph> 핸들에 대 한 호출을 소유는 &lt;xref:System.IO.Stream.Close%2A&gt;메서드 핸들이 닫힙니다.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">특히, 파일의 핸들 수는 감소 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체는 지정 된 버퍼 크기를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">또는 읽고이 호출 하기 전에 핸들에 쓰는 <ph id="ph1">`FileStream`</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">이 파일에 대 한 파일 핸들 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 파일 핸들을 소유 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스이거나, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write permission, and sharing permission.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정 된 경로, 생성 모드, 읽기/쓰기 권한 및 공유 권한을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파일에 액세스할 수 있는 방법을 결정 하는 상수는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반환 값도 결정는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph1">`path`</ph> 디스크 파일을 지정 합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-Windows 98 또는 Windows 98 Second Edition 시스템이 실행 되 고 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept> 로 설정 된 <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>잘못 된 값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified file handle, with the specified read/write permission, <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance ownership, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 읽기/쓰기 권한이 있는 지정 된 파일 핸들에 대 한 클래스 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스 소유권, 버퍼 크기 및 동기 / 비동기 상태입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified access to the file.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체 파일에 지정된 된 액세스를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ownership of the handle will be as specified.</source>
          <target state="translated">핸들의 소유권 됩니다. 지정 된 대로 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">`FileStream`</ph> owns the handle, a call to the &lt;xref:System.IO.Stream.Close%2A&gt; method will also close the handle.</source>
          <target state="translated">이 경우 <ph id="ph1">`FileStream`</ph> 핸들에 대 한 호출을 소유는 &lt;xref:System.IO.Stream.Close%2A&gt;메서드 핸들이 닫힙니다.&lt;/xref:System.IO.Stream.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, the file's handle count is decremented.</source>
          <target state="translated">특히, 파일의 핸들 수는 감소 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FileStream`</ph> object is given the specified buffer size.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph> 개체는 지정 된 버퍼 크기를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> assumes that it has exclusive control over the handle.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>핸들에 대 한 독점적인 제어권 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reading, writing, or seeking while a <ph id="ph1">`FileStream`</ph> is also holding a handle could result in data corruption.</source>
          <target state="translated">읽기, 쓰기 또는 검색 하는 동안 한 <ph id="ph1">`FileStream`</ph> 유지 되는 핸들 데이터 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For data safety, call &lt;xref:System.IO.FileStream.Flush%2A&gt; before using the handle, and avoid calling any methods other than <ph id="ph1">`Close`</ph> after you are done using the handle.</source>
          <target state="translated">데이터 보안을 위해 호출 &lt;xref:System.IO.FileStream.Flush%2A&gt;핸들을 사용 하 여 전과 이외의 다른 모든 메서드를 호출 하지 마십시오. <ph id="ph1">`Close`</ph> 완료 한 후 핸들을 사용 하 여.&lt;/xref:System.IO.FileStream.Flush%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, read and write to the handle before calling this <ph id="ph1">`FileStream`</ph> constructor.</source>
          <target state="translated">또는 읽고이 호출 하기 전에 핸들에 쓰는 <ph id="ph1">`FileStream`</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileShare.Read`</ph> is the default for those &lt;xref:System.IO.FileStream&gt; constructors without a <ph id="ph2">`FileShare`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`FileShare.Read`</ph>기본은 사용자 용 &lt;xref:System.IO.FileStream&gt;없는 생성자는 <ph id="ph2">`FileShare`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 문자 집합을 특정 문화권 설정을 사용 하 여 컴파일하고 하면 서로 다른 문화권 설정 사용 하 여 동일한 문자 검색은 해석할 수 없어 문자와를 throw 하면 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A file handle for the file that this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">이 파일에 대 한 파일 핸들 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>A constant that sets the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설정 하는 상수는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the file handle will be owned by this <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> instance; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 파일 핸들을 소유 하는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 인스턴스이거나, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the handle was opened asynchronously (that is, in overlapped I/O mode); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>핸들이 비동기적으로 열린 경우 (즉, 겹쳐진 I/O 모드에서); 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is less than <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or greater than <bpt id="p2">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <ph id="ph2">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph>보다 작은 <bpt id="p1">&lt;xref uid="langword_csharp_FileAccess.Read" name="FileAccess.Read" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보다 큰 <bpt id="p2">&lt;xref uid="langword_csharp_FileAccess.ReadWrite" name="FileAccess.ReadWrite" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <ph id="ph2">&lt;code&gt;bufferSize&lt;/code&gt;</ph> 가 0 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The handle is invalid.</source>
          <target state="translated">핸들이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>An I/O error, such as a disk error, occurred.</source>
          <target state="translated">디스크 오류와 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified file handle, such as when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> or <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and the file handle is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청 된 경우와 같이 지정 된 파일 핸들에 대 한 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">access</ph> <ept id="p2">&lt;/code&gt;</ept> 은 <bpt id="p3">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 또는 <bpt id="p4">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 파일 핸들이 읽기 전용 액세스로 설정 되어 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 경로, 생성 모드, 읽기/쓰기 및 공유 권한, 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파일에 액세스할 수 있는 방법을 결정 하는 상수는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반환 값도 결정는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph1">`path`</ph> 디스크 파일을 지정 합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수 이거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-Windows 98 또는 Windows 98 Second Edition 시스템이 실행 되 고 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept> 로 설정 된 <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 경로, 생성 모드, 읽기/쓰기 및 공유 권한, 버퍼 크기 및 동기 / 비동기 상태입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파일에 액세스할 수 있는 방법을 결정 하는 상수는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반환 값도 결정는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph1">`path`</ph> 디스크 파일을 지정 합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096..</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Specifies whether to use asynchronous I/O or synchronous I/O.</source>
          <target state="translated">비동기 I/O 또는 동기 I/O를 사용할지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>However, note that the underlying operating system might not support asynchronous I/O, so when specifying <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the handle might be opened synchronously depending on the platform.</source>
          <target state="translated">그러나 기본 운영 체제 비동기 I/O를 지원 하지 않을 수 있습니다를 메모를 지정 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 플랫폼에 따라 핸들이 동기적으로 열릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>When opened asynchronously, the &lt;xref:System.IO.FileStream.BeginRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.BeginWrite<ept id="p1">*</ept>&gt; methods perform better on large reads or writes, but they might be much slower for small reads or writes.</source>
          <target state="translated">비동기적으로 열린 경우는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt; 메서드는 대량의 데이터를 읽거나 쓸 더 잘 수행 이지만 작은 읽기 또는 쓰기에 대 한 훨씬 더 느리기 수 있습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>If the application is designed to take advantage of asynchronous I/O, set the <ph id="ph1">`useAsync`</ph> parameter to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">응용 프로그램이 비동기 I/O를 활용 하도록 디자인 된, 경우에 설정 된 <ph id="ph1">`useAsync`</ph> 매개 변수를 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</source>
          <target state="translated">비동기 I/O를 올바르게 사용 속도를 높일 수 하 여 응용 프로그램 배 10, 하지만 비동기 I/O 위해 응용 프로그램을 다시 디자인 하지 않고 사용 하면 성능이 저하 될 수 만큼의 10 배입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수 이거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-       The system is running Windows 98 or Windows 98 Second Edition and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">share</ph><ept id="p1">&lt;/code&gt;</ept> is set to <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-Windows 98 또는 Windows 98 Second Edition 시스템이 실행 되 고 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">share</ph> <ept id="p1">&lt;/code&gt;</ept> 로 설정 된 <bpt id="p2">&lt;xref uid="langword_csharp_FileShare.Delete" name="FileShare.Delete" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 된 지정 된 경로, 생성 모드, 읽기/쓰기 및 공유 권한, 액세스가 다른 Filestream 같은 파일, 버퍼 크기 및 추가 파일 옵션입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file can be accessed by the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파일에 액세스할 수 있는 방법을 결정 하는 상수는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>This also determines the values returned by the &lt;xref:System.IO.FileStream.CanRead<bpt id="p1">*</bpt>&gt; and &lt;xref:System.IO.FileStream.CanWrite<ept id="p1">*</ept>&gt; properties of the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">반환 값도 결정는 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 및 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;의 속성은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <ph id="ph1">`path`</ph> specifies a disk file.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;<bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <ph id="ph1">`path`</ph> 디스크 파일을 지정 합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A value that specifies additional file options.</source>
          <target state="translated">추가 파일 옵션을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수 이거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대해 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>, 하지만 파일 암호화 현재 플랫폼에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정된 된 경로, 파일 이름 또는 둘 다에 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 경로, 생성 모드, 액세스 권한 및 공유 권한, 버퍼 크기 및 추가 파일 옵션을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">파일에 대 한 액세스 및 감사 규칙을 만들 때 사용할 수 있는 액세스 권한을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">추가 파일 옵션을 지정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수 이거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 지원 되지 않은 Windows NT 이상입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대해 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>, 하지만 파일 암호화 현재 플랫폼에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 된 지정 된 경로, 생성 모드, 액세스 권한 및 공유 권한, 버퍼 크기, 추가 파일 옵션, 액세스 제어 및 감사 보안 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A relative or absolute path for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object will encapsulate.</source>
          <target state="translated">파일에 대 한 상대 또는 절대 경로 현재 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A constant that determines how to open or create the file.</source>
          <target state="translated">열거나 파일을 만들 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A constant that determines the access rights to use when creating access and audit rules for the file.</source>
          <target state="translated">파일에 대 한 액세스 및 감사 규칙을 만들 때 사용할 수 있는 액세스 권한을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>A constant that determines how the file will be shared by processes.</source>
          <target state="translated">프로세스에서 파일을 공유 하는 방법을 결정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>A positive &lt;xref:System.Int32&gt; value greater than 0 indicating the buffer size.</source>
          <target state="translated">양수 &lt;xref:System.Int32&gt;버퍼 크기를 나타내는 0 보다 큰 값입니다.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The default buffer size is 4096.</source>
          <target state="translated">기본 버퍼 크기는 4, 096입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>A constant that specifies additional file options.</source>
          <target state="translated">추가 파일 옵션을 지정 하는 상수입니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A constant that determines the access control and audit security for the file.</source>
          <target state="translated">액세스 제어를 결정 하는 상수 및 파일에 대 한 보안 감사 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>빈 문자열 ("") 공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in an NTFS environment.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> 같은 파일이 아닌 장치를 참조 "con:", "com1:", "lpt1:"는 NTFS 환경에서 등입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to a non-file device, such as "con:", "com1:", "lpt1:", etc. in a non-NTFS environment.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph>과 같은 파일이 아닌 장치 참조 "con:", "com1:", "lpt1:", 비 NTFS 환경 내에서 등입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph> is negative or zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;bufferSize&lt;/code&gt;</ph>가 음수 이거나&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> contain an invalid value.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;access&lt;/code&gt;</ph>, 또는 <ph id="ph3">&lt;code&gt;share&lt;/code&gt;</ph> 잘못 된 값을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The file cannot be found, such as when <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mode</ph><ept id="p1">&lt;/code&gt;</ept> is <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, and the file specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p4">&lt;/code&gt;</ept> does not exist.</source>
          <target state="translated">파일이 없거나 예를 들어 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">mode</ph> <ept id="p1">&lt;/code&gt;</ept> 은 <bpt id="p2">&lt;xref uid="langword_csharp_FileMode.Truncate" name="FileMode.Truncate" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_FileMode.Open" name="FileMode.Open" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>로 지정 된 파일 및 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p4">&lt;/code&gt;</ept> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The file must already exist in these modes.</source>
          <target state="translated">이러한 모드에 파일이 이미 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>An I/O error, such as specifying <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when the file specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p2">&lt;/code&gt;</ept> already exists, occurred.</source>
          <target state="translated">지정 하는 등의 I/O 오류가 <bpt id="p1">&lt;xref uid="langword_csharp_FileMode.CreateNew" name="FileMode.CreateNew" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하 여 지정 된 파일이 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p2">&lt;/code&gt;</ept> 이미 있으면 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>-or-       The stream has been closed.</source>
          <target state="translated">-또는-스트림이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
          <target state="translated">지정된 된 경로 예: 매핑되지 않은 드라이브에 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> requested is not permitted by the operating system for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">path</ph><ept id="p2">&lt;/code&gt;</ept>, such as when <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">access</ph><ept id="p3">&lt;/code&gt;</ept> is <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> or <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept> and the file or directory is set for read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">access</ph> <ept id="p1">&lt;/code&gt;</ept> 요청에서 지정 된 운영 체제에서 허용 되지 않는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">path</ph> <ept id="p2">&lt;/code&gt;</ept>, 예를 들어 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph3">access</ph> <ept id="p3">&lt;/code&gt;</ept> 은 <bpt id="p4">&lt;xref uid="langword_csharp_Write" name="Write" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 또는 <bpt id="p5">&lt;xref uid="langword_csharp_ReadWrite" name="ReadWrite" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept> 파일 또는 디렉터리가 읽기 전용 액세스를 위해 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is specified for <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p2">&lt;/code&gt;</ept>, but file encryption is not supported on the current platform.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;xref href="System.IO.FileOptions"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대해 지정 된 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">options</ph> <ept id="p2">&lt;/code&gt;</ept>, 하지만 파일 암호화 현재 플랫폼에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept>, file name, or both exceed the system-defined maximum length.</source>
          <target state="translated">지정 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">path</ph> <ept id="p1">&lt;/code&gt;</ept>, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
          <target state="translated">예를 들어 Windows 기반 플랫폼에서 경로 248 자 미만, 이어야 하 고 파일 이름은 260 자 미만 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The current operating system is not Windows NT or later.</source>
          <target state="translated">현재 운영 체제가 지원 되지 않은 Windows NT 이상입니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">비동기 읽기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(사용 하는 것이 좋습니다 &lt;xref:System.IO.FileStream.ReadAsync*&gt;대신 설명 섹션을 참조 합니다.)&lt;/xref:System.IO.FileStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as BeginRead and &lt;xref:System.IO.FileStream.EndRead%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">.NET Framework 4 및 이전 버전에서 BeginRead와 같은 메서드를 사용 해야 하 고 &lt;xref:System.IO.FileStream.EndRead%2A&gt;비동기 파일 작업을 구현 합니다.&lt;/xref:System.IO.FileStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">그러나 이러한 메서드는에서 계속 사용할 수는 <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> 레거시 코드를 지원 하기 위해 새로운 비동기 메서드 같은 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, 및 &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, 비동기 파일 작업을 보다 쉽게 구현 도움말.&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.FileStream.EndRead%2A&gt; must be called exactly once for every call to BeginRead.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndRead%2A&gt;BeginRead 호출할 때마다 한 번만 호출 되어야 합니다.&lt;/xref:System.IO.FileStream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">다른 읽기를 시작 하기 전에 읽기 프로세스를 종료 하지 못하면 교착 상태와 같이 원하지 않는 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.FileStream&gt; provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated">&lt;xref:System.IO.FileStream&gt;작업의 두 가지 모드를 제공 합니다: 동기 I/O와 비동기 I/O입니다.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">하거나 사용할 수 있지만, 기본 운영 체제 리소스는 다음이 모드 중 하나 에서만 액세스를 통합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, &lt;xref:System.IO.FileStream&gt; opens the operating system handle synchronously.</source>
          <target state="translated">기본적으로 &lt;xref:System.IO.FileStream&gt;운영 체제 핸들을 동기적으로 열립니다.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">Windows에서는 다운 비동기 메서드에서 느려집니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>If asynchronous methods are used, use the &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt; constructor.</source>
          <target state="translated">사용 하 여 비동기 메서드를 사용 하는 경우는 &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;생성자.&lt;/xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanRead%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.IO.Stream.CanRead%2A&gt;.&lt;/xref:System.IO.Stream.CanRead%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginRead.</source>
          <target state="translated">스트림이 닫혀 있거나를 잘못 된 인수를 전달 하는 경우 BeginRead에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to &lt;xref:System.IO.FileStream.EndRead%2A&gt;.</source>
          <target state="translated">IO 요청 중의 디스크 오류와 같은 비동기 읽기 요청 하는 동안 발생 하는 오류는 스레드 풀 스레드에서 발생 하며 &lt;xref:System.IO.FileStream.EndRead%2A&gt;.&lt;/xref:System.IO.FileStream.EndRead%2A&gt; 를 호출 하면 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.Stream.EndRead%2A&gt; must be called with this &lt;xref:System.IAsyncResult&gt; to find out how many bytes were read.</source>
          <target state="translated">&lt;xref:System.IO.Stream.EndRead%2A&gt;이 호출 해야 &lt;xref:System.IAsyncResult&gt;읽은 바이트 수를 찾으려고 합니다.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.Stream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">여러 개의 비동기 요청 렌더링 요청 완료 순서 불확실 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The buffer to read data into.</source>
          <target state="translated">데이터를 읽어올 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`array`</ph> at which to begin reading.</source>
          <target state="translated">바이트 오프셋 <ph id="ph1">`array`</ph> 읽기를 시작할입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">읽을 바이트 수의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous read operation is completed.</source>
          <target state="translated">완료 되 면 비동기 읽기 작업이 호출 될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests.</source>
          <target state="translated">이 특정 비동기 읽기 요청을 다른 요청과 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous read.</source>
          <target state="translated">비동기 읽기를 참조 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The array length minus <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">numBytes</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
          <target state="translated">배열 길이에서 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> 는 보다 작은 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">numBytes</ph> <ept id="p2">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>An asynchronous read was attempted past the end of the file.</source>
          <target state="translated">파일의 끝을 지 나 비동기 읽기를 시도 했습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(사용 하는 것이 좋습니다 &lt;xref:System.IO.FileStream.WriteAsync*&gt;대신 설명 섹션을 참조 합니다.)&lt;/xref:System.IO.FileStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as BeginWrite and &lt;xref:System.IO.FileStream.EndWrite%2A&gt; to implement asynchronous file operations.</source>
          <target state="translated">.NET Framework 4 및 이전 버전에서 BeginWrite와 같은 메서드를 사용 해야 하 고 &lt;xref:System.IO.FileStream.EndWrite%2A&gt;비동기 파일 작업을 구현 합니다.&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">그러나 이러한 메서드는에서 계속 사용할 수는 <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> 레거시 코드를 지원 하기 위해 새로운 비동기 메서드 같은 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, 및 &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, 비동기 파일 작업을 보다 쉽게 구현 도움말.&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.FileStream.EndWrite%2A&gt; must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from BeginWrite.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;정확히 한 번만 호출 해야 모든 &lt;xref:System.IAsyncResult&gt;BeginWrite에서.&lt;/xref:System.IAsyncResult&gt;&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.FileStream.EndWrite%2A&gt; will block until the I/O operation has completed.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.EndWrite%2A&gt;I/O 작업이 완료 될 때까지 차단 됩니다.&lt;/xref:System.IO.FileStream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.BeginWrite%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.BeginWrite%2A&gt;.&lt;/xref:System.IO.Stream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.IO.FileStream&gt; provides two different modes of operation: synchronous I/O and asynchronous I/O.</source>
          <target state="translated">&lt;xref:System.IO.FileStream&gt;작업의 두 가지 모드를 제공 합니다: 동기 I/O와 비동기 I/O입니다.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>While either can be used, the underlying operating system resources might allow access in only one of these modes.</source>
          <target state="translated">하거나 사용할 수 있지만, 기본 운영 체제 리소스는 다음이 모드 중 하나 에서만 액세스를 통합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, &lt;xref:System.IO.FileStream&gt; opens the operating system handle synchronously.</source>
          <target state="translated">기본적으로 &lt;xref:System.IO.FileStream&gt;운영 체제 핸들을 동기적으로 열립니다.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows, this slows down asynchronous methods.</source>
          <target state="translated">Windows에서는 다운 비동기 메서드에서 느려집니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>If asynchronous methods are used, use the &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt; constructor.</source>
          <target state="translated">사용 하 여 비동기 메서드를 사용 하는 경우는 &lt;xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;생성자.&lt;/xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%2CSystem.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginWrite.</source>
          <target state="translated">스트림이 닫혀 있거나를 잘못 된 인수를 전달 하는 경우 BeginWrite에서 즉시 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Errors that occur during an asynchronous write request, such as a disk failure during the IO request, occur on the thread pool thread and become visible upon a call to &lt;xref:System.IO.FileStream.EndWrite%2A&gt;.</source>
          <target state="translated">IO 요청 중의 디스크 오류와 같은 비동기 쓰기 요청을 하는 동안 발생 하는 오류는 스레드 풀 스레드에서 발생 하며 &lt;xref:System.IO.FileStream.EndWrite%2A&gt;.&lt;/xref:System.IO.FileStream.EndWrite%2A&gt; 를 호출 하면 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">여러 개의 비동기 요청 렌더링 요청 완료 순서 불확실 합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the current stream.</source>
          <target state="translated">현재 스트림에 쓸 데이터를 포함 하는 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`array`</ph> at which to begin copying bytes to the current stream.</source>
          <target state="translated">0부터 시작 하는 바이트 오프셋 <ph id="ph1">`array`</ph> 를 현재 스트림에 바이트 복사를 시작 하는 합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The method to be called when the asynchronous write operation is completed.</source>
          <target state="translated">비동기 쓰기 작업이 완료 될 때 호출 될 메서드.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">다른 요청에서 특정 비동기 쓰기 요청을 구별 하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>An object that references the asynchronous write.</source>
          <target state="translated">비동기 쓰기를 참조 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> length minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> is less than <ph id="ph3">&lt;code&gt;numBytes&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>길이에서 <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph> 는 보다 작은 <ph id="ph3">&lt;code&gt;numBytes&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;numBytes&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">스트림이 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">현재 스트림이 읽기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support reading, calls to the &lt;xref:System.IO.FileStream.Read%2A&gt;, &lt;xref:System.IO.FileStream.ReadByte%2A&gt;, and &lt;xref:System.IO.FileStream.BeginRead%2A&gt; methods throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">클래스에서 파생 하는 경우 &lt;xref:System.IO.Stream&gt;읽기를 지원 하지 않습니다에 대 한 호출이 &lt;xref:System.IO.FileStream.Read%2A&gt;, &lt;xref:System.IO.FileStream.ReadByte%2A&gt;, &lt;xref:System.IO.FileStream.BeginRead%2A&gt;메서드는 &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; throw&lt;/xref:System.IO.FileStream.BeginRead%2A&gt; 및&lt;/xref:System.IO.FileStream.ReadByte%2A&gt; &lt;/xref:System.IO.FileStream.Read%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 속성은 반환 된 스트림이 닫혀 있는지 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports reading; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with write-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>스트림이 읽기를 지원 합니다. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 스트림이 닫혀 있거나 쓰기 전용 권한으로 열렸으면 경우.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">현재 스트림이 검색을 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support seeking, calls to &lt;xref:System.IO.FileStream.Length%2A&gt;, &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Position%2A&gt;, and &lt;xref:System.IO.FileStream.Seek%2A&gt; throw a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">클래스에서 파생 하는 경우 &lt;xref:System.IO.Stream&gt;찾기를 지원 하지 않습니다에 대 한 호출이 &lt;xref:System.IO.FileStream.Length%2A&gt;, &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Position%2A&gt;를 선언 하 고 &lt;xref:System.IO.FileStream.Seek%2A&gt;throw에 &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.IO.FileStream.Seek%2A&gt; &lt;/xref:System.IO.FileStream.Position%2A&gt; &lt;/xref:System.IO.FileStream.SetLength%2A&gt; &lt;/xref:System.IO.FileStream.Length%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 속성은 반환 된 스트림이 닫혀 있는지 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports seeking; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or if the <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> was constructed from an operating-system handle such as a pipe or output to the console.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>스트림이 검색을 지원 하면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 스트림이 닫혀 또는 경우는 <bpt id="p3">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 콘솔에 출력 또는 파이프와 같은 운영 체제 핸들에서 생성 되었습니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">현재 스트림이 쓰기를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class derived from &lt;xref:System.IO.Stream&gt; does not support writing, a call to &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Write%2A&gt;, &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;, or &lt;xref:System.IO.FileStream.WriteByte%2A&gt; throws a &lt;xref:System.NotSupportedException&gt;.</source>
          <target state="translated">클래스에서 파생 하는 경우 &lt;xref:System.IO.Stream&gt;쓰기 호출을 지원 하지 않는 &lt;xref:System.IO.FileStream.SetLength%2A&gt;, &lt;xref:System.IO.FileStream.Write%2A&gt;, &lt;xref:System.IO.FileStream.BeginWrite%2A&gt; &lt;xref:System.IO.FileStream.WriteByte%2A&gt;에 &lt;xref:System.NotSupportedException&gt;.&lt;/xref:System.NotSupportedException&gt; throw&lt;/xref:System.IO.FileStream.WriteByte%2A&gt; 또는&lt;/xref:System.IO.FileStream.BeginWrite%2A&gt; &lt;/xref:System.IO.FileStream.Write%2A&gt; &lt;/xref:System.IO.FileStream.SetLength%2A&gt; &lt;/xref:System.IO.Stream&gt;</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed, this property returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 속성은 반환 된 스트림이 닫혀 있는지 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the stream supports writing; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if the stream is closed or was opened with read-only access.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>스트림이 쓰기를 지원 합니다. <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 스트림이 닫혀 있거나 읽기 전용 권한으로 열렸으면 경우.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.ComponentModel.Component.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;보호 된 Dispose 메서드를 호출 하는 <ph id="ph1">`disposing`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;Dispose를 호출 <ph id="ph1">`disposing`</ph> 로 설정 <ph id="ph2">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.IO.FileStream&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.IO.FileStream&gt;참조.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the &lt;xref:System.ComponentModel.Component.Dispose%2A&gt; method of each referenced object.</source>
          <target state="translated">이 메서드 호출의 &lt;xref:System.ComponentModel.Component.Dispose%2A&gt;각 참조 된 개체의.&lt;/xref:System.ComponentModel.Component.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Waits for the pending asynchronous read operation to complete.</source>
          <target state="translated">보류 중인 비동기 읽기 작업이 완료 되기를 기다립니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.ReadAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(사용 하는 것이 좋습니다 &lt;xref:System.IO.FileStream.ReadAsync*&gt;대신 설명 섹션을 참조 합니다.)&lt;/xref:System.IO.FileStream.ReadAsync*&gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.FileStream.BeginRead%2A&gt; and EndRead to implement asynchronous file operations.</source>
          <target state="translated">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 &lt;xref:System.IO.FileStream.BeginRead%2A&gt;및 EndRead 비동기 파일 작업을 구현 합니다.&lt;/xref:System.IO.FileStream.BeginRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">그러나 이러한 메서드는에서 계속 사용할 수는 <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> 레거시 코드를 지원 하기 위해 새로운 비동기 메서드 같은 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, 및 &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, 비동기 파일 작업을 보다 쉽게 구현 도움말.&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndRead must be called exactly for every call to &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.</source>
          <target state="translated">EndRead &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.&lt;/xref:System.IO.FileStream.BeginRead%2A&gt; 를 호출할 때마다 한 번씩 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.</source>
          <target state="translated">다른 읽기를 시작 하기 전에 읽기 프로세스를 종료 하지 못하면 교착 상태와 같이 원하지 않는 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.EndRead%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.EndRead%2A&gt;.&lt;/xref:System.IO.Stream.EndRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndRead can be called on every &lt;xref:System.IAsyncResult&gt; from &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.</source>
          <target state="translated">모든 &lt;xref:System.IAsyncResult&gt; &lt;xref:System.IO.FileStream.BeginRead%2A&gt;.&lt;/xref:System.IO.FileStream.BeginRead%2A&gt; &lt;/xref:System.IAsyncResult&gt; 에 EndRead는 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling EndRead tells you how many bytes were read from the stream.</source>
          <target state="translated">EndRead 호출을 알려 스트림에서 읽을 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndRead will block until the I/O operation has completed.</source>
          <target state="translated">EndRead는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The reference to the pending asynchronous request to wait for.</source>
          <target state="translated">기다리는 보류 중인 비동기 요청에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The number of bytes read from the stream, between 0 and the number of bytes you requested.</source>
          <target state="translated">0과 요청한 바이트 수 사이의 스트림에서 읽은 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</source>
          <target state="translated">스트림은 스트림의 끝에서 0만을 반환, 그렇지 않으면 최소한 1 바이트 있을 때까지 하며 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.FileStream.BeginRead*&gt; on this class.</source>
          <target state="translated">이 &lt;xref:System.IAsyncResult&gt;개체가 &lt;xref:System.IO.FileStream.BeginRead*&gt;이 클래스에서&lt;/xref:System.IO.FileStream.BeginRead*&gt; 호출 하 여 만들어진 개체가 아닙니다&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>EndRead is called multiple times.</source>
          <target state="translated">EndRead는 여러 번 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">스트림이 닫혔거나 내부 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation and blocks until the I/O operation is complete.</source>
          <target state="translated">I/O 작업이 완료 될 때까지 비동기 쓰기 작업 및 블록을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>(Consider using &lt;xref:System.IO.FileStream.WriteAsync*&gt; instead; see the Remarks section.)</source>
          <target state="translated">(사용 하는 것이 좋습니다 &lt;xref:System.IO.FileStream.WriteAsync*&gt;대신 설명 섹션을 참조 합니다.)&lt;/xref:System.IO.FileStream.WriteAsync*&gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4 and earlier versions, you have to use methods such as &lt;xref:System.IO.FileStream.BeginWrite%2A&gt; and EndWrite to implement asynchronous file operations.</source>
          <target state="translated">.NET Framework 4 및 이전 버전에서와 같은 메서드를 사용 해야 &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;및 EndWrite 비동기 파일 작업을 구현 합니다.&lt;/xref:System.IO.FileStream.BeginWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are still available in the <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> to support legacy code; however, the new async methods, such as &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, and &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, help you implement asynchronous file operations more easily.</source>
          <target state="translated">그러나 이러한 메서드는에서 계속 사용할 수는 <ph id="ph1">[!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)]</ph> 레거시 코드를 지원 하기 위해 새로운 비동기 메서드 같은 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;, 및 &lt;xref:System.IO.FileStream.FlushAsync%2A&gt;, 비동기 파일 작업을 보다 쉽게 구현 도움말.&lt;/xref:System.IO.FileStream.FlushAsync%2A&gt; &lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.EndWrite%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.EndWrite%2A&gt;.&lt;/xref:System.IO.Stream.EndWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndWrite must be called exactly once on every &lt;xref:System.IAsyncResult&gt; from &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;.</source>
          <target state="translated">모든 &lt;xref:System.IAsyncResult&gt; &lt;xref:System.IO.FileStream.BeginWrite%2A&gt;.&lt;/xref:System.IO.FileStream.BeginWrite%2A&gt; &lt;/xref:System.IAsyncResult&gt; 에 EndWrite는 한 번만 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>EndWrite will block until the I/O operation has completed.</source>
          <target state="translated">EndWrite는 I/O 작업이 완료 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The pending asynchronous I/O request.</source>
          <target state="translated">보류 중인 비동기 I/O 요청입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;asyncResult&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This &lt;xref:System.IAsyncResult&gt; object was not created by calling &lt;xref:System.IO.Stream.BeginWrite*&gt; on this class.</source>
          <target state="translated">이 &lt;xref:System.IAsyncResult&gt;개체가 &lt;xref:System.IO.Stream.BeginWrite*&gt;이 클래스에서&lt;/xref:System.IO.Stream.BeginWrite*&gt; 호출 하 여 만들어진 개체가 아닙니다&lt;/xref:System.IAsyncResult&gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>EndWrite is called multiple times.</source>
          <target state="translated">EndWrite는 여러 번 라고 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The stream is closed or an internal error has occurred.</source>
          <target state="translated">스트림이 닫혔거나 내부 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">리소스가 해제 되 고 가비지 수집기가 회수 하는 경우 다른 정리 작업이 수행 되도록는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The garbage collector calls <ph id="ph1">`Finalize`</ph> when the current object is ready to be finalized.</source>
          <target state="translated">가비지 컬렉션이 <ph id="ph1">`Finalize`</ph> 현재 개체를 종료 될 경우.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Finalize`</ph> closes the <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph>닫습니다는 <ph id="ph2">`FileStream`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">이 스트림의 버퍼를 지우고 버퍼링 된 모든 데이터가 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the Flush method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">Flush 메서드를 호출 하는 경우에 운영 체제 I/O 버퍼도 플러시됩니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream’s encoder is not flushed unless you explicitly call Flush or dispose of the object.</source>
          <target state="translated">명시적으로 플러시를 호출 하거나 개체를 삭제 하지 않는 한 스트림 인코더 플러시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting &lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt; to <ph id="ph1">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 &lt;xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt;를 <ph id="ph1">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.&lt;/xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f&amp;8;와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a buffer can be used for either reading or writing, Flush performs the following two functions:      -   Any data previously written to the buffer is copied to the file and the buffer is cleared except for its encoder state.</source>
          <target state="translated">플러시는 다음 두 가지 기능을 수행 읽기 또는 쓰기에 대 한 버퍼를 사용할 수 있으므로:-이전에 버퍼에 쓴 데이터는 파일에 복사 되 고 인코더 상태로 제외 하 고 버퍼의 선택을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   If &lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt; is <ph id="ph1">`true`</ph> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</source>
          <target state="translated">-If &lt;xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt;은 <ph id="ph1">`true`</ph> 및 데이터를 읽기 위해 파일에서 복사한 이전에, 파일 내에서 현재 위치가 버퍼에서 읽지 않은 바이트 수로 감소 합니다.&lt;/xref:System.IO.BufferedStream.CanSeek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>The buffer is then cleared.</source>
          <target state="translated">버퍼가 지워집니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt; method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;중간 파일 버퍼에서 버퍼링 된 모든 데이터를 확인 하려는 경우이 메서드 오버 로드는 작성 된 디스크에.&lt;/xref:System.IO.FileStream.Flush%28System.Boolean%29&gt;</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</source>
          <target state="translated">이 스트림에 대 한 버퍼를 지우고 버퍼링 된 모든 데이터는 파일에 쓸 수를 하 고 모든 중간 파일 버퍼도 지웁니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">작성 된 중간 파일 버퍼에서 버퍼링 된 모든 데이터를 확인 하려는 경우이 오버 로드를 사용 하 여 디스크에 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the Flush method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">Flush 메서드를 호출 하는 경우에 운영 체제 I/O 버퍼도 플러시됩니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to flush all intermediate file buffers; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>모든 중간 파일 버퍼를 플러시할 수 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">비동기적으로이 스트림에 대 한 모든 버퍼를 지우고 버퍼링 된 모든 데이터가 내부 장치에 쓰여지도록 하 고 취소 요청을 모니터링 합니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the FlushAsync method, the operating system I/O buffer is also flushed.</source>
          <target state="translated">FlushAsync 메서드를 호출 하면 운영 체제 I/O 버퍼는도 플러시됩니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 완료 되기 전에 작업이 취소 되는 경우는 &lt;xref:System.Threading.Tasks.TaskStatus&gt;에 대 한 값은 &lt;xref:System.Threading.Tasks.Task.Status%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 파일에 대 한 핸들을 삭제 하는 경우는 &lt;xref:System.ObjectDisposedException&gt;에서 예외는 &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">취소 요청을 모니터링할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">비동기 플러시 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">스트림이 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that encapsulates the access control list (ACL) entries for the file described by the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 설명 하는 파일에 대 한 액세스 제어 목록 (ACL) 항목을 캡슐화 하는 개체 <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the &lt;xref:System.IO.FileStream&gt; class and GetAccessControl can be used to retrieve the access control list (ACL) entries of an existing file, consider using &lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt; method, as it is easier to use.</source>
          <target state="translated">반면는 &lt;xref:System.IO.FileStream&gt;클래스와 두 개의 새로운 메서드는 기존 파일의 액세스 제어 목록 (ACL) 항목을 검색 하려면 사용 사용할 수 &lt;xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt;메서드를 사용 하기 쉽습니다.&lt;/xref:System.IO.File.GetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the GetAccessControl method to retrieve the ACL entries for a file.</source>
          <target state="translated">파일에 대 한 ACL 항목을 검색 하려면 두 개의 새로운 메서드 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">개인 및/또는 나 갖지 않고에 지정된 된 파일에서 특정 작업을 수행할 권한을 그룹이 ACL에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 액세스 제어 목록 항목 추가 또는 제거<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the access control settings for the file described by the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재 설명 하는 파일에 대 한 액세스 제어 설정을 캡슐화 하는 개체 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">파일이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
          <target state="translated">파일을 여는 동안 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The file could not be found.</source>
          <target state="translated">파일을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
          <target state="translated">이 작업은 현재 플랫폼에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>-or-       The caller does not have the required permission.</source>
          <target state="translated">-또는-호출자에 게는 필요한 사용 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Gets the operating system file handle for the file that the current <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">파일에 대 한 운영 체제 파일 핸들을 가져옵니다 현재 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 캡슐화 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is an operating system handle for use with operating-system-provided system calls (such as <ph id="ph1">`ReadFile`</ph> on Windows).</source>
          <target state="translated">이 속성은 운영 체제에서 제공 하는 시스템 호출에 사용할 운영 체제 핸들 (예: <ph id="ph1">`ReadFile`</ph> Windows에서).</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will not work with C library functions that expect a file descriptor, such as <ph id="ph1">`fread`</ph>.</source>
          <target state="translated">와 같은 파일 설명자를 예상 하는 C 라이브러리 함수를 작동 하지 것입니다 <ph id="ph1">`fread`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system handle might have been opened synchronously or asynchronously, depending on which <ph id="ph1">`FileStream`</ph> constructor was called.</source>
          <target state="translated">운영 체제 핸들 수 열린 동기적 또는 비동기적으로 따라 <ph id="ph1">`FileStream`</ph> 생성자를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.IO.FileStream.IsAsync%2A&gt; property to discover whether this handle was opened asynchronously.</source>
          <target state="translated">사용 하 여 &lt;xref:System.IO.FileStream.IsAsync%2A&gt;이 핸들이 비동기적으로 열렸으면 있는지 여부를 검색 하는 속성.&lt;/xref:System.IO.FileStream.IsAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Win32, this means the handle was opened for overlapped IO, and it requires different parameters to <ph id="ph1">`ReadFile`</ph> and <ph id="ph2">`WriteFile`</ph>.</source>
          <target state="translated">Win32, 즉 겹쳐진된 IO에 대 한 핸들이 열린 하 고 다른 매개 변수를 필요한 <ph id="ph1">`ReadFile`</ph> 및 <ph id="ph2">`WriteFile`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Data corruption might occur if a <ph id="ph2">`FileStream`</ph> is created, its handle is passed, some operation moves the handle's file pointer, and then the <ph id="ph3">`FileStream`</ph> is used again.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 경우 데이터 손상이 발생할 수 있습니다는 <ph id="ph2">`FileStream`</ph> 는 해당 핸들을 전달, 핸들의 파일 포인터를 이동 하는 일부 작업을 만든 다음는 <ph id="ph3">`FileStream`</ph> 다시 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple threads cannot safely write to the same file simultaneously, and <ph id="ph1">`FileStream`</ph> buffering code assumes that it exclusively controls the handle.</source>
          <target state="translated">여러 스레드에서 안전 하 게 파일에 쓸 수는 동일한 동시에, 및 <ph id="ph1">`FileStream`</ph> 버퍼링 코드 핸들을 단독으로 제어 하는 것으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FileStream`</ph> might throw an &lt;xref:System.IO.IOException&gt; if <ph id="ph2">`FileStream`</ph> detects that some other process has moved the file pointer.</source>
          <target state="translated"><ph id="ph1">`FileStream`</ph>throw 할 수 있습니다는 &lt;xref:System.IO.IOException&gt;경우 <ph id="ph2">`FileStream`</ph> 감지 다른 프로세스가 파일 포인터를 이동 되었습니다.&lt;/xref:System.IO.IOException&gt;</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this, do not write any data into a portion of the file that <ph id="ph1">`FileStream`</ph> might have buffered, and restore the file pointer to the location it had when methods were last called on <ph id="ph2">`FileStream`</ph>.</source>
          <target state="translated">이 방지 하려면 쓰지 마십시오. 모든 데이터 파일의 부분에 있는 <ph id="ph1">`FileStream`</ph> 수 버퍼링 했 고 파일 포인터 위치에 복원에 마지막으로 메서드가 호출 되었을 때 <ph id="ph2">`FileStream`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>The operating system file handle for the file encapsulated by this <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, or -1 if the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> has been closed.</source>
          <target state="translated">이 캡슐화 할 파일에 대 한 운영 체제 파일 핸들 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체나 경우-1은 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에 게 필요한 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> was opened asynchronously or synchronously.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열렸는지 비동기적 또는 동기적으로 처리 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`IsAsync`</ph> property detects whether the <ph id="ph2">`FileStream`</ph> handle was opened asynchronously, enabling your code to use the &lt;xref:System.IO.FileStream.Handle%2A&gt; property correctly.</source>
          <target state="translated"><ph id="ph1">`IsAsync`</ph> 속성 검색 여부는 <ph id="ph2">`FileStream`</ph> 핸들이 비동기적으로 열렸으면를 사용 하 여 코드를 사용 하도록 설정는 &lt;xref:System.IO.FileStream.Handle%2A&gt;속성 올바르게.&lt;/xref:System.IO.FileStream.Handle%2A&gt;</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Win32, <ph id="ph1">`IsAsync`</ph> being true means the handle was opened for overlapped I/O, and thus requires different parameters to <ph id="ph2">`ReadFile`</ph> and <ph id="ph3">`WriteFile`</ph>.</source>
          <target state="translated">Win32에서 <ph id="ph1">`IsAsync`</ph> 핸들 겹쳐진된 I/O에 대 한 열린으로 필요한 다른 매개 변수를 true로 설정 되 고 <ph id="ph2">`ReadFile`</ph> 및 <ph id="ph3">`WriteFile`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify this value when you create an instance of the &lt;xref:System.IO.FileStream&gt; class using a constructor that has an <ph id="ph1">`isAsync`</ph>, <ph id="ph2">`useAsync`</ph>, or <ph id="ph3">`options`</ph> parameter.</source>
          <target state="translated">인스턴스를 만들 때이 값을 지정 하는 &lt;xref:System.IO.FileStream&gt;변수가 있는 생성자를 사용 하 여 클래스는 <ph id="ph1">`isAsync`</ph>, <ph id="ph2">`useAsync`</ph>, 또는 <ph id="ph3">`options`</ph> 매개 변수.&lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the property is <ph id="ph1">`true`</ph>, the stream utilizes overlapped I/O to perform file operations asynchronously.</source>
          <target state="translated">속성이 <ph id="ph1">`true`</ph>, 스트림 파일 작업을 비동기적으로 수행 하려면 겹쳐 있는 I/O를 활용 합니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the IsAsync property does not have to be <ph id="ph1">`true`</ph> to call the &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, or &lt;xref:System.IO.Stream.CopyToAsync%2A&gt; method.</source>
          <target state="translated">그러나 IsAsync 속성 있어서는 안 될 <ph id="ph1">`true`</ph> 호출 하는 &lt;xref:System.IO.FileStream.ReadAsync%2A&gt;, &lt;xref:System.IO.FileStream.WriteAsync%2A&gt;, 또는 &lt;xref:System.IO.Stream.CopyToAsync%2A&gt;메서드.&lt;/xref:System.IO.Stream.CopyToAsync%2A&gt; &lt;/xref:System.IO.FileStream.WriteAsync%2A&gt; &lt;/xref:System.IO.FileStream.ReadAsync%2A&gt;</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the IsAsync property is <ph id="ph1">`false`</ph> and you call the asynchronous read and write operations, the UI thread is still not blocked, but the actual I/O operation is performed synchronously.</source>
          <target state="translated">IsAsync 속성이 <ph id="ph1">`false`</ph> 및 비동기 읽기를 호출 하 고 쓰기 작업, UI 스레드는 여전히 수는 있지만 실제 I/O 작업이 동기적으로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> was opened asynchronously; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> , 그러지 않으면 비동기적으로 열렸으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Gets the length in bytes of the stream.</source>
          <target state="translated">스트림의 바이트 길이 가져옵니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>A long value representing the length of the stream in bytes.</source>
          <target state="translated">바이트 스트림 길이 나타내는 long 값입니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.IO.FileStream.CanSeek*&gt; for this stream is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">&lt;xref:System.IO.FileStream.CanSeek*&gt;이 스트림에 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.&lt;/xref:System.IO.FileStream.CanSeek*&gt;</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>An I/O error, such as the file being closed, occurred.</source>
          <target state="translated">파일 닫기 같은 I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Prevents other processes from reading from or writing to the <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">다른 프로세스가 읽거나 쓰려는 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</source>
          <target state="translated">파일 스트림의 범위를 잠그면 파일 시스템의 해당 범위에 잠금 프로세스 단독의 스레드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The beginning of the range to lock.</source>
          <target state="translated">잠글 범위의 시작 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The value of this parameter must be equal to or greater than zero (0).</source>
          <target state="translated">이 매개 변수 값은&amp;0; 보다 크거나 같은 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The range to be locked.</source>
          <target state="translated">잠글 범위입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">파일이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The process cannot access the file because another process has locked a portion of the file.</source>
          <target state="translated">프로세스가 다른 프로세스에서 파일의 일부를 잠 궜 파일을 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Gets the name of the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that was passed to the constructor.</source>
          <target state="translated">이름을 가져옵니다는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 생성자에 전달 된입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A string that is the name of the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이름 문자열은 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Gets or sets the current position of this stream.</source>
          <target state="translated">이 스트림의 현재 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Seeking to any location beyond the length of the stream is supported.</source>
          <target state="translated">스트림의 길이 초과 하는 위치에 검색을 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">파일의 길이 초과 검색 하면 파일 크기가 증가 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Microsoft Windows NT and newer, any data added to the end of the file is set to zero.</source>
          <target state="translated">Microsoft Windows NT 이상 버전에서는 파일의 끝에 추가 된 모든 데이터를&amp;0;으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Microsoft Windows 98 or earlier, any data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">또는 이전 버전, Microsoft Windows 98에서 파일의 끝에 추가 된 데이터는 이전에 데이터를 삭제 했습니다.을 의미 하는 스트림에 표시는 0으로 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the position of the stream to a large value beyond the end of the stream in Windows 98 or earlier may result in an exception being raised.</source>
          <target state="translated">Windows 98에서 또는 이전 스트림의 끝을 넘어 큰 값으로 스트림 위치를 설정 하면 예외가 발생 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The current position of this stream.</source>
          <target state="translated">이 스트림의 현재 위치입니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking.</source>
          <target state="translated">스트림이 찾기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Attempted to set the position to a negative value.</source>
          <target state="translated">위치는 음수 값으로 설정 하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Attempted seeking past the end of a stream that does not support this.</source>
          <target state="translated">이 지원 하지 않는 스트림의 끝을 벗어나는 검색을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Reads a block of bytes from the stream and writes the data in a given buffer.</source>
          <target state="translated">스트림에서 바이트 블록을 읽어서 하 고 해당 데이터를 제공 된 버퍼에 씁니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.Read%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.Read%2A&gt;.&lt;/xref:System.IO.Stream.Read%2A&gt;</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the maximum number of bytes to be read from this stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 의 바이트 오프셋을 제공 하는 매개 변수 <ph id="ph2">`array`</ph> (버퍼 인덱스) 읽기를 시작 하는 고 <ph id="ph3">`count`</ph> 매개 변수는이 스트림에서 읽을 바이트의 최대 수를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">반환 된 값은 스트림의 끝에 도달 하면&amp;0; 또는 읽은 바이트의 실제 수 합니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">읽기 작업이 성공한 경우 스트림의 현재 위치는 읽은 바이트 수 만큼 앞 합니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">예외가 발생 하면 스트림의 현재 위치는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Read method returns zero only after reaching the end of the stream.</source>
          <target state="translated">Read 메서드 스트림의 끝에 도달한 후에&amp;0;을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, Read always reads at least one byte from the stream before returning.</source>
          <target state="translated">그렇지 않으면 읽기 항상 적어도&amp;1; 바이트 스트림에서 반환 하기 전에 읽습니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no data is available from the stream upon a call to Read, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">읽기에 대 한 호출 시 스트림에서 사용할 수 있는 데이터가 없는 경우 메서드는 최소한&amp;1; 바이트의 데이터를 반환 될 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</source>
          <target state="translated">구현을 스트림의 끝에 도달 하지 하는 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use &lt;xref:System.IO.BinaryReader&gt; for reading primitive data types.</source>
          <target state="translated">사용 하 여 &lt;xref:System.IO.BinaryReader&gt;기본 데이터 형식을 읽기 위한.&lt;/xref:System.IO.BinaryReader&gt;</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not interrupt a thread that is performing a read operation.</source>
          <target state="translated">읽기 작업을 수행 하는 스레드를 중단 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">스레드가 차단 되 후 성공적으로 실행 되도록 응용 프로그램 처럼 보일 수, 있지만 응용 프로그램의 성능 및 안정성 중단 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the specified byte array with the values between <ph id="ph1">`offset`</ph> and (<ph id="ph2">`offset`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1<ph id="ph5">`)`</ph> replaced by the bytes read from the current source.</source>
          <target state="translated">이 메서드가 반환 될 때 포함 사이의 값을 가진 지정 된 바이트 배열 <ph id="ph1">`offset`</ph> 및 (<ph id="ph2">`offset`</ph> <ph id="ph3"> + </ph> <ph id="ph4">`count`</ph> -1<ph id="ph5">`)`</ph> 현재 원본 으로부터 읽어온 바이트로 교체 합니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`array`</ph> at which the read bytes will be placed.</source>
          <target state="translated">바이트 오프셋 <ph id="ph1">`array`</ph> 에서 읽은 바이트 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">읽을 바이트 수의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">바이트은 버퍼 안으로 읽어들인 총 수입니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</source>
          <target state="translated">이 바이트 수를 현재 사용할 수 없는 경우 또는 스트림의 끝에 도달 하면&amp;0;이 바이트 수가 요청 된 수보다 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">스트림이 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> describe an invalid range in <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>및 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 에서 잘못 된 범위에 설명 <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">스트림이 닫힌 후에 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">현재 스트림에서 바이트 시퀀스를 비동기적으로 읽고 읽은 바이트 수 만큼 스트림 내 위치를 이동 하 고 취소 요청을 모니터링 합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReadAsync method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">ReadAsync 메서드를 사용 하면 주 스레드를 차단 하지 않고 리소스 집중형 파일 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">이 성능 고려 사항은 특히 중요 한 <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> 응용 프로그램 또는 <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> 시간이 많이 걸리는 스트림 작업이 UI 스레드를 차단 하 고 응용 프로그램이 작동 하지 않는 것 처럼 표시할 수 있는 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">비동기 메서드에와 함께 사용 되는 <ph id="ph1">`async`</ph> 및 <ph id="ph2">`await`</ph> Visual Basic 및 C# 키워드.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.IO.FileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 완료 되기 전에 작업이 취소 되는 경우는 &lt;xref:System.Threading.Tasks.TaskStatus&gt;에 대 한 값은 &lt;xref:System.Threading.Tasks.Task.Status%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 파일에 대 한 핸들을 삭제 하는 경우는 &lt;xref:System.ObjectDisposedException&gt;에서 예외는 &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The buffer to write the data into.</source>
          <target state="translated">데이터를 쓸 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The byte offset in <ph id="ph1">`buffer`</ph> at which to begin writing data from the stream.</source>
          <target state="translated">바이트 오프셋 <ph id="ph1">`buffer`</ph> 데이터 스트림에서 쓰기를 시작할입니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">읽을 바이트 수의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">취소 요청을 모니터링할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">나타내는 비동기 읽기 작업입니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">값은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">TResult</ph> <ept id="p1">&lt;/code&gt;</ept> 바이트은 버퍼 안으로 읽어들인 총 수를 포함 하는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">결과 값에는 현재 사용할 수 있는 바이트 수가 요청 된 수보다 작으면 하거나 스트림의 끝에 도달한 경우 0 (영) 수 바이트 수가 요청 된 수보다 작을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">총 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> 및 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> 버퍼 길이 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The stream does not support reading.</source>
          <target state="translated">스트림이 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">스트림이 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">스트림을 현재 이전 읽기 작업에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Reads a byte from the file and advances the read position one byte.</source>
          <target state="translated">파일에서 바이트를 읽고 읽기 위치를&amp;1; 바이트 앞으로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.ReadByte%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.ReadByte%2A&gt;.&lt;/xref:System.IO.Stream.ReadByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanRead%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanRead%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.IO.FileStream.CanRead%2A&gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanRead%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.IO.Stream.CanRead%2A&gt;.&lt;/xref:System.IO.Stream.CanRead%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The byte, cast to an &lt;xref:System.Int32&gt;, or -1 if the end of the stream has been reached.</source>
          <target state="translated">로 캐스팅 된 바이트는 &lt;xref:System.Int32&gt;, 스트림의 끝에 도달한 경우-1.&lt;/xref:System.Int32&gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The current stream does not support reading.</source>
          <target state="translated">현재 스트림이 읽기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>The current stream is closed.</source>
          <target state="translated">현재 스트림이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the operating system file handle for the file that the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeFileHandle"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 파일에 대 한 운영 체제 파일 핸들을 나타내는 개체는 현재 <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체를 캡슐화 합니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SafeFileHandle property automatically flushes the stream and sets the current stream position to 0.</source>
          <target state="translated">SafeFileHandle 속성 스트림을 자동으로 플러시하고 현재 스트림 위치를 0으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the file to be moved or the stream position to be reset by another stream using the SafeFileHandle returned by this property.</source>
          <target state="translated">이렇게 하면 이동할 파일 또는 스트림 위치를이 속성에서 반환 된 SafeFileHandle를 사용 하 여 다른 스트림에으로 다시 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>An object that represents the operating system file handle for the file that the current <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object encapsulates.</source>
          <target state="translated">파일에 대 한 운영 체제 파일 핸들을 나타내는 개체를 현재 <bpt id="p1">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 캡슐화 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Sets the current position of this stream to the given value.</source>
          <target state="translated">이 스트림의 현재 위치를 지정한 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream.Seek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt; property to determine whether the current instance supports seeking.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt;속성을 현재 인스턴스 검색을 지원 하는지 여부를 결정 합니다.&lt;/xref:System.IO.FileStream.CanSeek%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt;.&lt;/xref:System.IO.Stream.CanSeek%2A?displayProperty=fullName&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can seek to any location beyond the length of the stream.</source>
          <target state="translated">스트림의 길이 초과 하는 위치를 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you seek beyond the length of the file, the file size grows.</source>
          <target state="translated">파일의 길이 초과 검색 하면 파일 크기가 증가 합니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows NT and later versions, data added to the end of the file is set to zero.</source>
          <target state="translated">Windows NT 이상 버전에서 파일의 끝에 추가 된 데이터를&amp;0;으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows 98 or earlier versions, data added to the end of the file is not set to zero, which means that previously deleted data is visible to the stream.</source>
          <target state="translated">Windows 98 또는 이전 버전에서 파일의 끝에 추가 된 데이터를 이전에 데이터를 삭제 했습니다.을 의미 하는 스트림에 표시는 0으로 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The point relative to <ph id="ph1">`origin`</ph> from which to begin seeking.</source>
          <target state="translated">에 상대적인 위치 <ph id="ph1">`origin`</ph> 검색을 시작할입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>Specifies the beginning, the end, or the current position as a reference point for <ph id="ph1">`offset`</ph>, using a value of type &lt;xref:System.IO.SeekOrigin&gt;.</source>
          <target state="translated">시작, 끝 또는 현재 위치에 대 한 참조 지점으로 지정 <ph id="ph1">`offset`</ph>, &lt;xref:System.IO.SeekOrigin&gt;.&lt;/xref:System.IO.SeekOrigin&gt; 형식의 값을 사용 하 여</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>The new position in the stream.</source>
          <target state="translated">스트림 내의 새 위치입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The stream does not support seeking, such as if the <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is constructed from a pipe or console output.</source>
          <target state="translated">스트림이 검색을 등을 지원 하지 않습니다는 <bpt id="p1">&lt;xref uid="langword_csharp_FileStream" name="FileStream" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 파이프 또는 콘솔 출력에서 생성 합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>Seeking is attempted before the beginning of the stream.</source>
          <target state="translated">스트림의 시작 하기 전에 검색이 시도 되었습니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">스트림이 닫힌 후에 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Applies access control list (ACL) entries described by a <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to the file described by the current <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">설명 하는 액세스 제어 목록 (ACL) 항목을 적용 한 <bpt id="p1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재에서 설명 하는 파일에 개체 <bpt id="p2">&lt;xref href="System.IO.FileStream"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the &lt;xref:System.IO.FileStream&gt; class and SetAccessControl can be used on an existing file, consider using the &lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt; method as it is easier to use.</source>
          <target state="translated">반면는 &lt;xref:System.IO.FileStream&gt;기존 파일에서 사용할 수 있습니다, 사용 하는 것이 좋습니다. 클래스를 가집니다는 &lt;xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt;메서드를 사용 하기 쉽습니다.&lt;/xref:System.IO.File.SetAccessControl%2A?displayProperty=fullName&gt; &lt;/xref:System.IO.FileStream&gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetAccessControl method applies access control list (ACL) entries to a file that represents the noninherited ACL list.</source>
          <target state="translated">가집니다 메서드는 상속 되지 않은 ACL 목록을 표시 하는 파일에 액세스 제어 목록 (ACL) 항목을 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  The ACL specified for the <ph id="ph2">`fileSecurity`</ph> parameter replaces the existing ACL for the file.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; The ACL에 지정 된 된 <ph id="ph2">`fileSecurity`</ph> 매개 변수는 파일에 대 한 기존 ACL을 대체 합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add permissions for a new user, use the &lt;xref:System.IO.FileStream.GetAccessControl%2A&gt; method to obtain the existing ACL, modify it, and then use SetAccessControl to apply it back to the file.</source>
          <target state="translated">새 사용자에 대 한 권한을 추가 하려면 사용 된 &lt;xref:System.IO.FileStream.GetAccessControl%2A&gt;메서드를 추가 하려면 수정 하 고 다음 가집니다를 사용 하 여 적용 하는 파일에 다시.&lt;/xref:System.IO.FileStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
          <target state="translated">개인 및/또는 나 갖지 않고에 지정된 된 파일에서 특정 작업을 수행할 권한을 그룹이 ACL에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 액세스 제어 목록 항목 추가 또는 제거<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>An object that describes an ACL entry to apply to the current file.</source>
          <target state="translated">현재 파일에 적용할 ACL 항목을 설명 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The file is closed.</source>
          <target state="translated">파일이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileSecurity</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileSecurity</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The file could not be found or modified.</source>
          <target state="translated">파일을 찾을 또는 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>The current process does not have access to open the file.</source>
          <target state="translated">현재 프로세스에는 파일을 열 수 있는 권한이 없습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Sets the length of this stream to the given value.</source>
          <target state="translated">이 스트림의 길이 지정한 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.SetLength%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.SetLength%2A&gt;.&lt;/xref:System.IO.Stream.SetLength%2A&gt;</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the given value is less than the current length of the stream, the stream is truncated.</source>
          <target state="translated">지정된 된 값은 스트림의 현재 길이 보다 작은 경우는 스트림이 잘렸습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, if the current position is greater than the new length, the current position is moved to the last byte of the stream.</source>
          <target state="translated">이 시나리오에서는 현재 위치에 새 길이 보다 큰 경우 스트림의 마지막 바이트 까지의 현재 위치 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the given value is larger than the current length of the stream, the stream is expanded, and the current position remains the same.</source>
          <target state="translated">지정된 된 값은 스트림의 현재 길이 보다 큰 경우 스트림이 확장 되 고 현재 위치 동일 하 게 유지 합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is expanded, the contents of the stream between the old and the new length are undefined.</source>
          <target state="translated">스트림을 확장 이전부터 새 길이 스트림의 내용을 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream must support both writing and seeking for <ph id="ph1">`SetLength`</ph> to work.</source>
          <target state="translated">스트림이 쓰기와 검색을 모두 지원 해야 <ph id="ph1">`SetLength`</ph> 에서 실행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing, and the &lt;xref:System.IO.FileStream.CanSeek%2A&gt; property to determine whether seeking is supported.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanWrite%2A&gt;현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 하는 속성 및 &lt;xref:System.IO.FileStream.CanSeek%2A&gt;속성 검색을 지원 하는지 여부를 확인 하.&lt;/xref:System.IO.FileStream.CanSeek%2A&gt; &lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt; and &lt;xref:System.IO.Stream.CanSeek%2A&gt;.</source>
          <target state="translated">추가 정보 &lt;xref:System.IO.Stream.CanWrite%2A&gt;및 &lt;xref:System.IO.Stream.CanSeek%2A&gt;.&lt;/xref:System.IO.Stream.CanSeek%2A&gt; &lt;/xref:System.IO.Stream.CanWrite%2A&gt; 를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The new length of the stream.</source>
          <target state="translated">스트림의 새 길이입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
          <target state="translated">I/O 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The stream does not support both writing and seeking.</source>
          <target state="translated">스트림이 쓰기 및 검색을 모두 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Attempted to set the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter to less than 0.</source>
          <target state="translated">설정 하려고 했습니다.는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수를 0 미만입니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>Allows access by other processes to all or part of a file that was previously locked.</source>
          <target state="translated">다른 프로세스에서 이전에 잠근 파일의 일부나 전부에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>The beginning of the range to unlock.</source>
          <target state="translated">잠금을 해제할 범위의 시작 부분입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The range to be unlocked.</source>
          <target state="translated">잠금을 해제할 범위입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;position&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;length&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Writes a block of bytes to the file stream.</source>
          <target state="translated">파일 스트림에 바이트 블록을 씁니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.Write%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.Write%2A&gt;.&lt;/xref:System.IO.Stream.Write%2A&gt;</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in <ph id="ph2">`array`</ph> (the buffer index) at which to begin copying, and the <ph id="ph3">`count`</ph> parameter gives the number of bytes that will be written to the stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph> 의 바이트 오프셋을 제공 하는 매개 변수 <ph id="ph2">`array`</ph> (버퍼 인덱스)는 복사를 시작할 및 <ph id="ph3">`count`</ph> 매개 변수를 스트림에 쓸 바이트 수를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the write operation is successful, the current position of the stream is advanced by the number of bytes written.</source>
          <target state="translated">쓰기 작업을 완료 하는 경우 쓴 바이트 수 만큼 스트림의 현재 위치는 앞 합니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">예외가 발생 하면 스트림의 현재 위치는 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.IO.Stream.CanWrite%2A&gt;.&lt;/xref:System.IO.Stream.CanWrite%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not interrupt a thread that is performing a write operation.</source>
          <target state="translated">쓰기 작업을 수행 하는 스레드를 중단 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the application may appear to run successfully after the thread is unblocked, the interruption can decrease your application's performance and reliability.</source>
          <target state="translated">스레드가 차단 되 후 성공적으로 실행 되도록 응용 프로그램 처럼 보일 수, 있지만 응용 프로그램의 성능 및 안정성 중단 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of common file and directory operations, see <bpt id="p1">[</bpt>Common I/O Tasks<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">일반 파일 및 디렉터리 작업 목록에 대 한 참조 <bpt id="p1">[</bpt>공통적인 I/O 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>The buffer containing data to write to the stream.</source>
          <target state="translated">스트림에 쓸 데이터를 포함 하는 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`array`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">0부터 시작 하는 바이트 오프셋 <ph id="ph1">`array`</ph> 스트림에 바이트 복사를 시작 하는 합니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> describe an invalid range in <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>및 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 에서 잘못 된 범위에 설명 <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The current stream instance does not support writing.</source>
          <target state="translated">현재 스트림 인스턴스가 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">비동기적으로 현재 스트림에 바이트 시퀀스를 쓰고 쓰여진 바이트 수 만큼이 스트림 내의 현재 위치를 이동 하 고 취소 요청을 모니터링 합니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WriteAsync method enables you to perform resource-intensive file operations without blocking the main thread.</source>
          <target state="translated">WriteAsync 메서드를 사용 하면 주 스레드를 차단 하지 않고 리소스 집중형 파일 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>This performance consideration is particularly important in a <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> app or <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</source>
          <target state="translated">이 성능 고려 사항은 특히 중요 한 <ph id="ph1">[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]</ph> 응용 프로그램 또는 <ph id="ph2">[!INCLUDE[desktop_appname](~/add/includes/desktop-appname-md.md)]</ph> 시간이 많이 걸리는 스트림 작업이 UI 스레드를 차단 하 고 응용 프로그램이 작동 하지 않는 것 처럼 표시할 수 있는 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The async methods are used in conjunction with the <ph id="ph1">`async`</ph> and <ph id="ph2">`await`</ph> keywords in Visual Basic and C#.</source>
          <target state="translated">비동기 메서드에와 함께 사용 되는 <ph id="ph1">`async`</ph> 및 <ph id="ph2">`await`</ph> Visual Basic 및 C# 키워드.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports reading.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.IO.FileStream.CanWrite%2A&gt;속성을 현재 인스턴스에 읽기를 지원 하는지를 확인 합니다.&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operation is canceled before it completes, the returned task contains the &lt;xref:System.Threading.Tasks.TaskStatus&gt; value for the &lt;xref:System.Threading.Tasks.Task.Status%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 완료 되기 전에 작업이 취소 되는 경우는 &lt;xref:System.Threading.Tasks.TaskStatus&gt;에 대 한 값은 &lt;xref:System.Threading.Tasks.Task.Status%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Status%2A&gt; &lt;/xref:System.Threading.Tasks.TaskStatus&gt;</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the handle to the file is disposed, the returned task contains the &lt;xref:System.ObjectDisposedException&gt; exception in the &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt; property.</source>
          <target state="translated">반환된 된 작업에 포함 된 파일에 대 한 핸들을 삭제 하는 경우는 &lt;xref:System.ObjectDisposedException&gt;에서 예외는 &lt;xref:System.Threading.Tasks.Task.Exception%2A&gt;속성.&lt;/xref:System.Threading.Tasks.Task.Exception%2A&gt; &lt;/xref:System.ObjectDisposedException&gt;</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The buffer to write data from.</source>
          <target state="translated">데이터를 쓸 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in <ph id="ph1">`buffer`</ph> from which to begin copying bytes to the stream.</source>
          <target state="translated">0부터 시작 하는 바이트 오프셋 <ph id="ph1">`buffer`</ph> 스트림에 바이트 복사를 시작 하는 합니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">쓸 바이트의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">취소 요청을 모니터링할 토큰입니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">비동기 쓰기 작업을 나타내는 작업입니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> 음수입니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The sum of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">count</ph><ept id="p2">&lt;/code&gt;</ept> is larger than the buffer length.</source>
          <target state="translated">총 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">offset</ph> <ept id="p1">&lt;/code&gt;</ept> 및 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph2">count</ph> <ept id="p2">&lt;/code&gt;</ept> 버퍼 길이 보다 큽니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">스트림이 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The stream has been disposed.</source>
          <target state="translated">스트림이 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">스트림을 현재 이전 쓰기 작업에서 사용 중입니다.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Writes a byte to the current position in the file stream.</source>
          <target state="translated">파일 스트림의 현재 위치에 바이트를 씁니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides &lt;xref:System.IO.Stream.WriteByte%2A&gt;.</source>
          <target state="translated">이 메서드를 재정의 &lt;xref:System.IO.Stream.WriteByte%2A&gt;.&lt;/xref:System.IO.Stream.WriteByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">`WriteByte`</ph> to write a byte to a <ph id="ph2">`FileStream`</ph> efficiently.</source>
          <target state="translated">사용 하 여 <ph id="ph1">`WriteByte`</ph> 바이트를 쓸 수는 <ph id="ph2">`FileStream`</ph> 효율적으로 합니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the stream is closed or not writable, an exception will be thrown.</source>
          <target state="translated">스트림이 닫혀 있는 경우 쓸 수 없는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use the &lt;xref:System.IO.FileStream.CanWrite%2A&gt; property to determine whether the current instance supports writing.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용은 &lt;xref:System.IO.FileStream.CanWrite%2A&gt;속성을 현재 인스턴스가 쓰기를 지원 하는지 여부를 결정 합니다.&lt;/xref:System.IO.FileStream.CanWrite%2A&gt;</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see &lt;xref:System.IO.Stream.CanWrite%2A&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.IO.Stream.CanWrite%2A&gt;.&lt;/xref:System.IO.Stream.CanWrite%2A&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>A byte to write to the stream.</source>
          <target state="translated">스트림에 쓸 바이트입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>The stream is closed.</source>
          <target state="translated">스트림이 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>The stream does not support writing.</source>
          <target state="translated">스트림이 쓰기를 지원 하지 않습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>