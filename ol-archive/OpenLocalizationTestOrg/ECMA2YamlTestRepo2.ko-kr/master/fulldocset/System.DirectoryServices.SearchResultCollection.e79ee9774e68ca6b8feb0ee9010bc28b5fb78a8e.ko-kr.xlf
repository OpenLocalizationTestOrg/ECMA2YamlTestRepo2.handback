<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61fa9172ee24569572462862376105d4b0429a1b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.DirectoryServices.SearchResultCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">394daad86603c17528f1bc81bdfb2d8c655c9dbb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cc58a9d6ae6a792a82777606f14784d54d3823f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The SearchResultCollection class contains the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instances that the Active Directory hierarchy returned during a <bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> query.</source>
          <target state="translated">SearchResultCollection 클래스에 포함 되어는 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 Active Directory 계층 구조에서 반환한 인스턴스는 <bpt id="p2">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Due to implementation restrictions, the SearchResultCollection class cannot release all of its unmanaged resources when it is garbage collected.</source>
          <target state="translated">구현 제한으로 인해 SearchResultCollection 클래스 모두 해제할 수 없습니다 관리 되지 않는 리소스는 가비지가 수집 하는 경우.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent a memory leak, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method when the SearchResultCollection object is no longer needed.</source>
          <target state="translated">메모리 누수를 방지 하려면 호출 해야 합니다는 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;메서드 SearchResultCollection 개체가 더 이상 필요 합니다.&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Determines if a specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is in this collection.</source>
          <target state="translated">지정 된 경우 결정 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체는이 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to find.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정한 속성이이 컬렉션에 속하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Copies all <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection to the specific array, starting at the specified index in the target array.</source>
          <target state="translated">모든 복사 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상 배열의 지정한 인덱스에서 시작 하 여 특정 배열에이 컬렉션의 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The array of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects that receives the elements of this collection.</source>
          <target state="translated">배열 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션의 요소를 수신 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`results`</ph> where this method starts copying this collection.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`results`</ph> 이 메서드가이 컬렉션을 복사 하기 시작 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">개수를 가져옵니다 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션의 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The number of <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects in this collection.</source>
          <target state="translated">수가 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션의 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Releases all resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">사용 되는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Dispose method, it allows the resources that are used by the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; to be reallocated for other purposes.</source>
          <target state="translated">사용 되는 리소스가 허용 Dispose 메서드는 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">가비지 수집기에 대 한 메모리를 해제 하지 않습니다는 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;개체입니다.&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, an application must call the Dispose method explicitly to prevent a memory leak.</source>
          <target state="translated">따라서 응용 프로그램 메모리 누수를 방지 하려면 명시적으로 Dispose 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and optionally releases the managed resources.</source>
          <target state="translated">사용 되는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResultCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 선택적으로 관리 되는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method and the &lt;xref:System.Object.Finalize%2A&gt; method.</source>
          <target state="translated">이 메서드는 public &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;메서드 및 &lt;xref:System.Object.Finalize%2A&gt;메서드.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; invokes the protected Dispose method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;보호 된 Dispose 메서드를 호출 하는 <ph id="ph1">`disposing`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes Dispose with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;Dispose를 호출 하는 <ph id="ph1">`disposing`</ph> 매개 변수 설정 <ph id="ph2">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources that are held by any managed objects that this &lt;xref:System.DirectoryServices.SearchResultCollection&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하 고 있는 모든 리소스를 해제 합니다.이 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;참조.&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The garbage collector does not release memory for a &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">가비지 수집기에 대 한 메모리를 해제 하지 않습니다는 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;개체입니다.&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method explicitly to prevent a memory leak.</source>
          <target state="translated">따라서 호출 해야 합니다는 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;메모리 누수를 방지 하기 위해 명시적으로.&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt; method of each object in the collection.</source>
          <target state="translated">이 메서드 호출의 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;컬렉션의 각 개체의.&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; and &lt;xref:System.Object.Finalize%2A&gt;, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;및 &lt;xref:System.Object.Finalize%2A&gt;, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Overrides the <ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">재정의 <ph id="ph1">&amp;lt;</ph>xref:System.Object.Finalize%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">이 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object that you can use to iterate through this collection.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;이 컬렉션을 반복 하는 데 사용할 수 있는 개체입니다.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the handle that is returned by the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method that performs the actual search.</source>
          <target state="translated">반환 되는 핸들을 가져옵니다는 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> 실제 검색을 수행 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> MSDN library에서 항목 <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The  &lt;xref:System.DirectoryServices.DirectorySearcher&gt; that created this collection calls the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</source>
          <target state="translated">&lt;xref:System.DirectoryServices.DirectorySearcher&gt;이 컬렉션을 생성 하는 호출 된 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> 메서드를 쿼리 결과 클라이언트로 전송 개체를 사용할 수 있도록 합니다.&lt;/xref:System.DirectoryServices.DirectorySearcher&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> topic in the MSDN Library at <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>.</source>
          <target state="translated">자세한 내용은 참조는 <bpt id="p1">[</bpt>IDirectorySearch::ExecuteSearch<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)</ept> MSDN library에서 항목 <bpt id="p2">[</bpt>http://msdn.microsoft.com/library<ept id="p2">](http://msdn.microsoft.com/library)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each time that a query is performed, a handle for the results of that query is associated with its  &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object.</source>
          <target state="translated">쿼리가 수행 될 때마다 해당 쿼리의 결과 대 한 핸들은 연결 된 해당 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;개체입니다.&lt;/xref:System.DirectoryServices.SearchResultCollection&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This handle corresponds to the search handle in ADSI.</source>
          <target state="translated">이 핸들 adsi에서 검색 핸들에 해당합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This handle persists until you call the &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; method on the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; object, so you must call &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; to prevent a memory leak.</source>
          <target state="translated">이 핸들에 호출할 때까지 계속 되 면는 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;에서 메서드는 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;호출 해야 개체 &lt;xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;메모리 누수를 방지 합니다.&lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection&gt; &lt;/xref:System.DirectoryServices.SearchResultCollection.Dispose&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The garbage collector does not free memory for this particular object.</source>
          <target state="translated">가비지 수집기는이 특정 개체에 대 한 메모리를 해제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The ADS_SEARCH_HANDLE value that this collection uses.</source>
          <target state="translated">이 컬렉션에 사용 하는 ADS_SEARCH_HANDLE 값입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of the specified <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object in this collection.</source>
          <target state="translated">지정 된 첫 번째 요소의 인덱스를 반환 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to search for in this collection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first matching object.</source>
          <target state="translated">첫 번째 일치 하는 개체의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns -1 if no member of this collection is identical to the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">이 컬렉션의 어떤 구성원도 같으면-1 반환 된 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at a specified index in this collection.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컬렉션에서 지정된 된 인덱스에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.SearchResultCollection&gt; class.</source>
          <target state="translated">C#에서이 속성은 &lt;xref:System.DirectoryServices.SearchResultCollection&gt;클래스&lt;/xref:System.DirectoryServices.SearchResultCollection&gt; 에 대 한 인덱서</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">Jscript에서는 형식에 의해 정의 된 기본 인덱싱된 속성을 사용할 수 있습니다 하지만 정의할 수는 없습니다 명시적으로 직접.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of &lt;xref:System.String&gt;.</source>
          <target state="translated">그러나 개체 형식의 속성이 인덱싱된 기본을 자동으로 제공 하는 클래스에 expando 특성을 지정 하 고 인덱스 형식이 &lt;xref:System.String&gt;안내 하십시오.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to retrieve.</source>
          <target state="translated">0부터 시작 인덱스는 <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색할 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that is located at the specified index.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.DirectoryServices.SearchResult"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 인덱스에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> properties that were specified before the search was executed.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectorySearcher"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 검색을 실행 하기 전에 지정 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that contains the properties that were specified in the &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; property collection before the search was executed.</source>
          <target state="translated">형식의 배열 &lt;xref:System.String&gt;에 지정 된 속성을 포함 하는 &lt;xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt;검색을 실행 하기 전에 속성 컬렉션입니다.&lt;/xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">요소에 복사는 &lt;xref:System.Collections.ICollection&gt;에 &lt;xref:System.Array&gt;특정에서 시작 하는 &lt;xref:System.Array&gt;인덱스.&lt;/xref:System.Array&gt; &lt;/xref:System.Array&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt; &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에서 복사한 요소의 대상인&lt;/xref:System.Array&gt;&amp;1; 차원</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is greater than the available space from <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 에서 사용 가능한 공간 보다 큰 <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of the source &lt;xref:System.Collections.ICollection&gt; cannot be cast automatically to the type of the destination <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 &lt;xref:System.Collections.ICollection&gt;대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 &lt;xref:System.Collections.ICollection&gt;이 동기화 되었으면 (스레드로부터 안전 하 게 보호).&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; returns an object, which can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 반환&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">대부분의 컬렉션 클래스에 &lt;xref:System.Collections?displayProperty=fullName&gt;네임 스페이스는 내부 컬렉션에 동기화 된 래퍼를 제공 하는 한 Synchronized 메서드를 구현 합니다.&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">컬렉션을 열거 하는 스레드로부터 안전한 프로시저가 아닙니다 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic, C#]       다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 액세스는 &lt;xref:System.Collections.ICollection&gt;은 동기화 (스레드로부터 안전함); 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">해당 내부 저장소를 공개적으로 사용할 수 없는 컬렉션에 대 한 경우 예상 된 구현에서는 현재 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">현재 인스턴스에 대 한 포인터 되지 않을 수 있습니다; 다른 컬렉션을 래핑하는 컬렉션에 대 한 충분 한 참고 내부 컬렉션을 반환 해야 하는 것 <ph id="ph1">`SyncRoot`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a <ph id="ph1">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">대부분의 컬렉션 클래스에 &lt;xref:System.Collections?displayProperty=fullName&gt;네임 스페이스 구현는 <ph id="ph1">`Synchronized`</ph> 메서드는 내부 컬렉션에 동기화 된 래퍼를 제공 하는.&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, derived classes can provide their own synchronized version of the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">하지만 파생된 클래스를 사용 하 여 컬렉션의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; of the collection, not directly on the collection.</source>
          <target state="translated">동기화 하는 코드에서 작업을 수행 해야는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;컬렉션으로 만들어지므로 컬렉션의.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">특히 컬렉션 인스턴스를 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; looks like this:      <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph>       [Visual Basic]      <ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>       Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">없는 경우에는 <ph id="ph1">`Synchronized`</ph> 메서드는 컬렉션의 예상된 사용량에 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;다음과 같은: <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph> [Visual Basic] <ph id="ph3">```   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph> 컬렉션을 열거는 기본적으로 한 스레드 안전한 프로시저가 아닙니다.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The following code example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic, C#]       다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>