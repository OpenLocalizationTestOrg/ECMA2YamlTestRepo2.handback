<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9d5e2a17abc455ccec441c989af92f8c98ffefb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b42c86eafe56b9c0cb9177eb6ff94dde0d165d15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">923297299c61045a6c345346fcc711d498a02f7d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a node in a tree of scoped catalogs, reflecting an underlying catalog and its child scopes.</source>
          <target state="translated">기본 카탈로그와 해당 하위 범위를 반영 하는 범위 지정 된 카탈로그의 트리에서 노드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified underlying catalog and children.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 기본 카탈로그 및 하위 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">이 카탈로그에 대 한 기본 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">이 카탈로그의 하위 범위의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified underlying catalog, children, and public surface.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 기본 카탈로그, 자식 및 공개 화면을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The underlying catalog for this catalog.</source>
          <target state="translated">이 카탈로그에 대 한 기본 카탈로그입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">이 카탈로그의 하위 범위의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The public surface for this catalog.</source>
          <target state="translated">이 카탈로그에 대 한 공개 노출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Occurs when the underlying catalog has changed, if that catalog supports notifications.</source>
          <target state="translated">해당 카탈로그에 알림을 지 원하는 경우 기본 카탈로그 변경 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Occurs when the underlying catalog is changing, if that catalog supports notifications.</source>
          <target state="translated">해당 카탈로그에 알림을 지 원하는 경우 기본 카탈로그를 변경할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the child scopes of this catalog.</source>
          <target state="translated">자식이이 카탈로그의 범위를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A collection of the child scopes of this catalog.</source>
          <target state="translated">이 카탈로그의 하위 범위의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Called by the <bpt id="p1">&lt;xref uid="langword_csharp_Dispose()" name="Dispose()" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and <bpt id="p2">&lt;xref uid="langword_csharp_Finalize()" name="Finalize()" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> methods to release the managed and unmanaged resources used by the current instance of the <bpt id="p3">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">에 의해 호출 된 <bpt id="p1">&lt;xref uid="langword_csharp_Dispose()" name="Dispose()" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 및 <bpt id="p2">&lt;xref uid="langword_csharp_Finalize()" name="Finalize()" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 의 현재 인스턴스에서 사용 되는 스레드와 관리 되지 않는 리소스를 해제 하는 메서드는 <bpt id="p3">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called only by the public <ph id="ph1">`Dispose()`</ph> and <ph id="ph2">`Finalize()`</ph> methods; do not call this method directly.When you implement the dispose pattern, the Boolean parameter of the <ph id="ph3">`Dispose(Boolean)`</ph> method should be used as follows:      -   The <ph id="ph4">`Dispose()`</ph> method of the current object should call <ph id="ph5">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph6">`true`</ph> to release both managed and unmanaged resources.</source>
          <target state="translated">공개적으로만이 메서드는 <ph id="ph1">`Dispose()`</ph> 및 <ph id="ph2">`Finalize()`</ph> 방식의이 메서드를 직접 호출 하지 않습니다. 부울 매개 변수 삭제 패턴을 구현 하는 경우는 <ph id="ph3">`Dispose(Boolean)`</ph> 메서드를 다음과 같이 사용 해야:- <ph id="ph4">`Dispose()`</ph> 현재 개체의 메서드를 호출 해야 <ph id="ph5">`Dispose(Boolean)`</ph> 로 설정 부울 매개 변수와 함께 <ph id="ph6">`true`</ph> 와 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The <ph id="ph1">`Finalize()`</ph> method of the current object should call <ph id="ph2">`Dispose(Boolean)`</ph> with the Boolean parameter set to <ph id="ph3">`false`</ph> to release only unmanaged resources.</source>
          <target state="translated">- <ph id="ph1">`Finalize()`</ph> 현재 개체의 메서드를 호출 해야 <ph id="ph2">`Dispose(Boolean)`</ph> 로 설정 부울 매개 변수와 함께 <ph id="ph3">`false`</ph> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see .</source>
          <target state="translated">자세한 내용은 다음을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">카탈로그를 통해 반복 하는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">카탈로그를 통해 반복 하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a collection of exports that match the conditions specified by the import definition.</source>
          <target state="translated">내보내기 가져오기 정의에 지정 된 조건과 일치 하는 컬렉션을을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Conditions that specify which exports to match.</source>
          <target state="translated">일치 하는 내보내기를 지정 하는 조건입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A collection of exports that match the specified conditions.</source>
          <target state="translated">지정 된 조건과 일치 하는 내보내기의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Contains data for the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 데이터가 포함 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changed"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Contains data for the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 데이터가 포함 된 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.CompositionScopeDefinition.Changing"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">이 카탈로그의 부모 범위에 표시 되 부분의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A collection of parts visible to the parent scope of this catalog.</source>
          <target state="translated">이 카탈로그의 부모 범위에 표시 되는 파트의 컬렉션입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>