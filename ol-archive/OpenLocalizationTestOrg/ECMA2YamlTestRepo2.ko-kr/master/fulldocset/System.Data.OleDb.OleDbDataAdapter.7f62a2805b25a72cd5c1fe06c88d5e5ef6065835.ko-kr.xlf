<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcc31274176c0f8129b121de304d7162d769c64d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.OleDb.OleDbDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9277bd099a1164b12ad7e98968598224c466902</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02a3d91f94bf1cfef8c580e14ed15cbad374e867</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a database connection that are used to fill the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and update the data source.</source>
          <target state="translated">채우는 데 사용 되는 데이터베이스 연결 및 데이터 명령 집합을 나타냅니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OleDbDataAdapter serves as a bridge between a &lt;xref:System.Data.DataSet&gt; and data source for retrieving and saving data.</source>
          <target state="translated">OleDbDataAdapter 사이의 브리지 역할을 &lt;xref:System.Data.DataSet&gt;와 데이터 소스를 검색 하 고 데이터를 저장 합니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OleDbDataAdapter provides this bridge by using &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; to load data from the data source into the &lt;xref:System.Data.DataSet&gt;, and using &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt; to send changes made in the &lt;xref:System.Data.DataSet&gt; back to the data source.</source>
          <target state="translated">OleDbDataAdapter를 사용 하 여이 연결을 제공 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;에 데이터 원본에서 데이터를 로드 하는 &lt;xref:System.Data.DataSet&gt;, 및를 사용 하 여 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;에서 변경 내용을 보낼는 &lt;xref:System.Data.DataSet&gt;데이터 소스에 다시.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the OleDbDataAdapter fills a &lt;xref:System.Data.DataSet&gt;, it will create the appropriate tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">OleDbDataAdapter를 채웁니다는 &lt;xref:System.Data.DataSet&gt;, 만들어집니다 적절 한 테이블 및 열 반환된 된 데이터에 이미 존재 하지 않는 경우.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, primary key information is not included in the implicitly created schema unless the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to &lt;xref:System.Data.MissingSchemaAction&gt;.</source>
          <target state="translated">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;xref:System.Data.MissingSchemaAction&gt;.&lt;/xref:System.Data.MissingSchemaAction&gt; 속성&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also have the OleDbDataAdapter create the schema of the &lt;xref:System.Data.DataSet&gt;, including primary key information, before filling it with data using &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Data.DataSet&gt;포함 하 여 기본 키 정보, &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; 를 사용 하 여 데이터를 채우기 전에&lt;/xref:System.Data.DataSet&gt; 스키마를 만드는 설정 해야 할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기존 제약 조건 데이터 집합에 추가<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that some OLE DB providers, including the MSDataShape provider, do not return base table or primary key information.</source>
          <target state="translated">참고가 기본 테이블 또는 기본 키 정보와 MSDataShape 공급자를 포함 하 여 일부 OLE DB 공급자를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the OleDbDataAdapter cannot correctly set the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property on any created &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">따라서 OleDbDataAdapter &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성에 만든된 &lt;xref:System.Data.DataTable&gt;요청 했습니다.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 설정 올바르게 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases you should explicitly specify primary keys for tables in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이러한 경우에 명시적으로 지정 해야 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 테이블에 대 한 기본 키</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OleDbDataAdapter also includes the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;, and &lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; properties to facilitate the loading and updating of data.</source>
          <target state="translated">OleDbDataAdapter도 포함 되어는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt;, &lt;xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt;, 및 &lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;속성을 쉽게 로드 하 고 데이터의 업데이트.&lt;/xref:System.Data.Common.DataAdapter.TableMappings%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of OleDbDataAdapter, properties are set to their initial values.</source>
          <target state="translated">OleDbDataAdapter의 인스턴스를 만들 때 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the OleDbDataAdapter constructor.</source>
          <target state="translated">이러한 값의 목록이 OleDbDataAdapter 생성자를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> as the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 로 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;속성.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; constructor sets the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property to the value specified in the <ph id="ph1">`selectCommand`</ph> parameter.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;생성자는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;속성에 지정 된 값을는 <ph id="ph1">`selectCommand`</ph> 매개 변수.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is a SELECT statement or stored procedure, and is set as the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> SELECT 문 또는 저장된 프로시저를이 고로 설정 하는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p2">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; 클래스</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; opens and closes an &lt;xref:System.Data.OleDb.OleDbConnection&gt; if it is not already open.</source>
          <target state="translated">이 구현에서 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;열고 닫습니다는 &lt;xref:System.Data.OleDb.OleDbConnection&gt;열려 있지 않으면.&lt;/xref:System.Data.OleDb.OleDbConnection&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful in an application that must call the &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt; method for two or more &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; objects.</source>
          <target state="translated">이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다는 &lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;둘 이상에 대 한 메서드 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;개체.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt; &lt;/xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.OleDb.OleDbConnection&gt; is already open, you must explicitly call &lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt; or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> to close it.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OleDb.OleDbConnection&gt;가 이미 열려 명시적으로 호출 해야 &lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;또는 <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> 합니다. 닫으려면&lt;/xref:System.Data.OleDb.OleDbConnection.Close%2A&gt; &lt;/xref:System.Data.OleDb.OleDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the connection.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연결을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with a &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; 클래스</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; constructor uses the <ph id="ph1">`selectConnectionString`</ph> parameter to set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property.</source>
          <target state="translated">이 오버 로드는 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;생성자 사용 하 여는 <ph id="ph1">`selectConnectionString`</ph> 매개 변수를 설정 된 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;속성.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it does not open the connection.</source>
          <target state="translated">그러나 연결이 열리지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You still must explicitly open the connection.</source>
          <target state="translated">여전히 명시적으로 열어야 연결 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스를 만들 때 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Properties|Initial value|   |----------------|-------------------|   |&lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;|<ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   |&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;|<ph id="ph2">`MissingSchemaAction.Add`</ph>|       You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">| 속성 | 초기 값 |   |----------------|-------------------|   | &lt;xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;| <ph id="ph1">`MissingMappingAction.Passthrough`</ph>|   | &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;| <ph id="ph2">`MissingSchemaAction.Add`</ph>|       속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.Common.DataAdapter.MissingMappingAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A string that is an SQL SELECT statement or stored procedure to be used by the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt; property of the <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">SQL SELECT 문 또는 저장된 프로시저에서 사용 되는 문자열은 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbDataAdapter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</source>
          <target state="translated">SQL 문 또는 저장된 프로시저는 데이터 집합에서 레코드를 삭제 하기 위한 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the DeleteCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;DeleteCommand의 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; 사용을&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When DeleteCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">DeleteCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.OleDb.OleDbCommand&gt;, &lt;xref:System.Data.OleDb.OleDbCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DeleteCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 DeleteCommand &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to delete records in the data source that correspond to deleted rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;삭제 된 행에 해당 하는 데이터 원본의 레코드를 삭제 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in a <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in an ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object using the specified <bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> and ADO objects.</source>
          <target state="translated">추가 하거나 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ADO에 맞게 <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 개체 지정을 사용 하 여 <bpt id="p4">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 및 ADO 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the &lt;xref:System.Data.DataSet&gt;, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 &lt;xref:System.Data.DataSet&gt;, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the Fill method does not close the input <ph id="ph1">`Recordset`</ph> on completion of the Fill operation.</source>
          <target state="translated">Fill 메서드의이 오버 로드는 입력을 닫지 않습니다 <ph id="ph1">`Recordset`</ph> 채우기 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When handling batch SQL statements that return multiple results, this implementation of Fill and &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt; for the OLE DB.NET Framework Data Provider retrieves schema information for only the first result.</source>
          <target state="translated">채우기의이 구현 하는 여러 결과 반환 하는 SQL 문을 일괄 처리 하는 경우 및 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;OLE DB.NET Framework 데이터 공급자를 검색 한 첫 번째 결과 대 한 스키마 정보에 대 한.&lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Fill operation adds the rows to the specified destination &lt;xref:System.Data.DataTable&gt; object in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; object if it does not already exist.</source>
          <target state="translated">지정된 된 대상에 행을 추가 하는 채우기 작업 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a &lt;xref:System.Data.DataTable&gt; object, the Fill operation ordinarily creates only column name metadata.</source>
          <target state="translated">만들 때 한 &lt;xref:System.Data.DataTable&gt;개체 채우기 작업에는 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the Fill method multiple times on the same &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">동일한 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 에 여러 번 Fill 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">기본 키가 있는 경우 이미 존재 하는 일치 하는 행과 들어오는 행이 병합 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no primary key exists, incoming rows are appended to the &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">기본 키가 없으면 들어오는 행을 &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 추가</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행 조정 되어 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 해당 하는&lt;/xref:System.Data.DataTable&gt; 에서 한 번만 표시</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;를 지정 하 여는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성은 &lt;xref:System.Data.DataTable&gt;, 하거나 설정 하 여는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성을 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; returns the results of an OUTER JOIN, the <ph id="ph1">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;OUTER JOIN의 결과 반환 된 <ph id="ph1">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않는&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires that the native OLE DB provider obtains required primary key information by setting the DBPROP_UNIQUEROWS property, and then determines which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <ph id="ph2">`IColumnsRowset`</ph>.</source>
          <target state="translated">.NET Framework Data provider for OLE DB 제대로 작동 하려면 <ph id="ph1">`AddWithKey`</ph> 하기 위해서는 네이티브 OLE DB 공급자 DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져옵니다를 기본이 되는 열을 확인 한 다음 DBCOLUMN_KEYCOLUMN에서 검사 하 여 키 열은 <ph id="ph2">`IColumnsRowset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively the user may explicitly set the primary key constraints on each &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">사용자 수에 각 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; primary key 제약 조건을 명시적으로 또는 설정</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes sure that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">이렇게 하면 들어오는 레코드 기존 레코드와 일치 하는 대신 업데이트 된 추가 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;중복 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Empty column names are added to the &lt;xref:System.Data.DataTable&gt;, using an empty string for the first column, followed by "1", "2", "3", and so on for the subsequent empty columns.</source>
          <target state="translated">빈 열 이름에 추가 되는 &lt;xref:System.Data.DataTable&gt;, "1", "2", "3", 및에 후속 빈 열에 대 한 다음 첫 번째 열에 대 한 빈 문자열을 사용 하 여.&lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Ado에서 값 <ph id="ph1">`Recordset`</ph> 또는 <ph id="ph2">`Record`</ph> 개체 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 저장소에 대 한 공용 언어 런타임 형식으로 변환 됩니다</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  This overload of the Fill method does not implicitly call <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; Fill 메서드의이 오버 로드가 암시적으로 호출 하지 않으면 <ph id="ph2">`Close`</ph> 채우기 작업이 완료 될 때 ADO 개체에 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, always call <ph id="ph1">`Close`</ph> when you are finished using ADO <ph id="ph2">`Recordset`</ph> or <ph id="ph3">`Record`</ph> objects.</source>
          <target state="translated">따라서 항상 호출 <ph id="ph1">`Close`</ph> ADO를 사용 하 여 작업을 마쳤으면 <ph id="ph2">`Recordset`</ph> 또는 <ph id="ph3">`Record`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes sure that the underlying connection to a data source is released in a timely manner, and also prevents possible access violations because of unmanaged ADO objects being reclaimed by garbage collection when existing references still exist.</source>
          <target state="translated">이렇게 하면 데이터 원본에 기본 연결이 적절 한 시기에 릴리스 하 고 또한 기존의 참조가 계속 존재 하는 경우 가비지 수집에서 회수 되 고 관리 되지 않는 ADO 개체 때문에 가능한 액세스 위반을 방지 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`TableMappings.Add`</ph> method on a <ph id="ph2">`DataAdapter`</ph> and you explicitly map the source table parameter to an empty string, the dataset is successfully filled using the source table, but the dataset will be populated with nothing.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`TableMappings.Add`</ph> 에서 메서드는 <ph id="ph2">`DataAdapter`</ph> 및 빈 문자열을 원본 테이블 매개 변수를 명시적으로 매핑합니다, dataset 성공적으로 원본 테이블을 사용 하 여 찼는데 데이터 집합은 nothing으로 채워집니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the following example, <ph id="ph1">`rDataSet`</ph> will be populated with nothing.</source>
          <target state="translated">예를 들어 다음 예제에서는에서 <ph id="ph1">`rDataSet`</ph> 아무 것도 없으면 채워집니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   rAdapter.TableMappings.Add("source table", "");   rAdapter.Fill(rDataSet, "source table");      ```</ph>       This example shows how you can skip a result when dealing with multiple results.</source>
          <target state="translated"><ph id="ph1">```   rAdapter.TableMappings.Add("source table", "");   rAdapter.Fill(rDataSet, "source table");      ```</ph>이 예제에서는 어떻게 여러 결과 처리할 때 결과 건너뛸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses an &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; to fill a &lt;xref:System.Data.DataTable&gt; using an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;채울는 &lt;xref:System.Data.DataTable&gt;ADO를 사용 하 여 <ph id="ph1">`Recordset`</ph>.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example assumes that you have created an ADO <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">이 예제 ADO 만들었다고 가정 <ph id="ph1">`Recordset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable("Customers")        custTable.Columns.Add("CustomerID", Type.GetType("System.String"))        custTable.Columns.Add("CompanyName", Type.GetType("System.String"))        custDS.Tables.Add(custTable)        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable("Customers");        custTable.Columns.Add("CustomerID", typeof(String));        custTable.Columns.Add("CompanyName", typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```</ph></source>
          <target state="translated"><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        Dim custTable As DataTable = New DataTable("Customers")        custTable.Columns.Add("CustomerID", Type.GetType("System.String"))        custTable.Columns.Add("CompanyName", Type.GetType("System.String"))        custDS.Tables.Add(custTable)        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custTable, adoRS)        adoRS.Close()        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        DataTable custTable = new DataTable("Customers");        custTable.Columns.Add("CustomerID", typeof(String));        custTable.Columns.Add("CompanyName", typeof(String));        custDS.Tables.Add(custTable);        //Use ADO objects from ADO library (msado15.dll) imported        //  as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custTable, adoRS);        adoRS.Close();        adoConn.Close();   ```</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The number of rows successfully refreshed to the <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 개수는 성공적으로 새로 고쳐진는 <bpt id="p1">&lt;xref href="System.Data.DataTable"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Adds or refreshes rows in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to match those in an ADO <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> or <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> object using the specified <bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>, ADO object, and source table name.</source>
          <target state="translated">추가 하거나에서 행을 새로 고칩니다는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> ADO에 맞게 <bpt id="p2">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 또는 <bpt id="p3">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 개체 지정을 사용 하 여 <bpt id="p4">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>, ADO 개체 및 원본 테이블 이름입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The link between ActiveX Data Objects (ADO) and ADO.NET is a one-way operation in that you can copy data from ADO to the &lt;xref:System.Data.DataSet&gt;, but any updates to the data must be handled by ADO.NET.</source>
          <target state="translated">ADO.NET 및 ADO ActiveX Data Objects () 간의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있다는 점에서 &lt;xref:System.Data.DataSet&gt;, ADO.NET에서 데이터에 대 한 업데이트가 처리 되어야 하지만.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method iterates through multiple results by calling the <ph id="ph1">`NextRecordset`</ph> method on the <ph id="ph2">`Recordset`</ph>, closing the input <ph id="ph3">`Recordset`</ph> on completion of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;메서드를 호출 하 여 여러 결과를 반복 합니다.는 <ph id="ph1">`NextRecordset`</ph> 메서드를는 <ph id="ph2">`Recordset`</ph>, 입력 닫는 <ph id="ph3">`Recordset`</ph> 의 완료에는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;작업.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation adds the rows to the specified destination &lt;xref:System.Data.DataTable&gt; object in the &lt;xref:System.Data.DataSet&gt;, creating the &lt;xref:System.Data.DataTable&gt; object if it does not already exist.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;지정된 된 대상에 행을 추가 하는 작업 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.DataSet&gt;만들기는 &lt;xref:System.Data.DataTable&gt;경우 이미 없는 개체.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a &lt;xref:System.Data.DataTable&gt; object, the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation ordinarily creates only column name metadata.</source>
          <target state="translated">만들 때 한 &lt;xref:System.Data.DataTable&gt;개체는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;작업은 일반적으로 열 이름 메타 데이터만 만듭니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; &lt;/xref:System.Data.DataTable&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property is set to <ph id="ph1">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성이 <ph id="ph1">`AddWithKey`</ph>, 적절 한 기본 키와 제약 조건도 만들어집니다.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear one time in the &lt;xref:System.Data.DataTable&gt; that corresponds to the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">기본 키 정보가 있는 경우 중복 행 조정 되어 &lt;xref:System.Data.DataTable&gt; &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 해당 하는&lt;/xref:System.Data.DataTable&gt; 에서 한 번만 표시</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Primary key information may be set either through &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;, by specifying the &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; property of the &lt;xref:System.Data.DataTable&gt;, or by setting the &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; property to <ph id="ph1">`AddWithKey`</ph>.</source>
          <target state="translated">통해 기본 키 정보가 설정할 수 있습니다 &lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;를 지정 하 여는 &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;속성은 &lt;xref:System.Data.DataTable&gt;, 하거나 설정 하 여는 &lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;속성을 <ph id="ph1">`AddWithKey`</ph>.&lt;/xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt; &lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;/xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>To function correctly with the .NET Framework Data Provider for OLE DB, <ph id="ph1">`AddWithKey`</ph> requires the native OLE DB provider to obtain required primary key information by setting the DBPROP_UNIQUEROWS property, and then determine which columns are primary key columns by examining DBCOLUMN_KEYCOLUMN in the <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>.</source>
          <target state="translated">.NET Framework Data provider for OLE DB 제대로 작동 하려면 <ph id="ph1">`AddWithKey`</ph> DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져올 확인 한 다음 기본이 되는 열을 네이티브 OLE DB provider가 필요에 DBCOLUMN_KEYCOLUMN를 검사 하 여 키 열은 <bpt id="p1">**</bpt>IColumnsRowset<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively the user may explicitly set the primary key constraints on each &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">사용자 수에 각 &lt;xref:System.Data.DataTable&gt;했습니다.&lt;/xref:System.Data.DataTable&gt; primary key 제약 조건을 명시적으로 또는 설정</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures that incoming records that match existing records are updated instead of appended.</source>
          <target state="translated">이렇게 하면 대신 기존 레코드와 일치 하는 들어오는 레코드 업데이트 되도록 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; returns the results of an OUTER JOIN, the <ph id="ph1">`DataAdapter`</ph> does not set a &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; value for the resulting &lt;xref:System.Data.DataTable&gt;.</source>
          <target state="translated">경우는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;OUTER JOIN의 결과 반환 된 <ph id="ph1">`DataAdapter`</ph> &lt;xref:System.Data.DataTable.PrimaryKey%2A&gt; &lt;xref:System.Data.DataTable&gt;.&lt;/xref:System.Data.DataTable&gt; 결과 대 한 값&lt;/xref:System.Data.DataTable.PrimaryKey%2A&gt; 을 설정 하지 않는&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly define the primary key to make sure that duplicate rows are resolved correctly.</source>
          <target state="translated">중복 행을 올바르게 확인할 수 있도록 하려면 기본 키를 명시적으로 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기본 키 정의<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Recordset`</ph> is closed before the starting of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; operation, no error results.</source>
          <target state="translated">경우는 <ph id="ph1">`Recordset`</ph> 의 시작 하기 전에 닫혀는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;작업, 오류가 발생 하지 않습니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is required for handling of multiple results, because queries that do not return rows are indicated by a closed <ph id="ph1">`Recordset`</ph>.</source>
          <target state="translated">행을 반환 하지 않는 쿼리가 표시 되기 때문에 이것이 필요 여러 결과 처리에 닫힌 하 여 <ph id="ph1">`Recordset`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; just calls <ph id="ph1">`NextRecordset`</ph> on the closed <ph id="ph2">`Recordset`</ph> and continues processing.</source>
          <target state="translated">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;호출 <ph id="ph1">`NextRecordset`</ph> 닫힌에 <ph id="ph2">`Recordset`</ph> 하 고 처리를 계속 합니다.&lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an error is encountered while populating the data set, rows added before the occurrence of the error remain in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">오류가 발생 하기 전에 추가 된 행에 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 남아 데이터 집합을 채우는 동안 오류 발생</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The rest of the operation is aborted.</source>
          <target state="translated">작업의 나머지 부분 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.Common.DbDataAdapter&gt; object encounters duplicate columns while populating a &lt;xref:System.Data.DataTable&gt;, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">경우는 &lt;xref:System.Data.Common.DbDataAdapter&gt;개체 중복 된 열을 채우는 동안 발생 한 &lt;xref:System.Data.DataTable&gt;, 패턴을 사용 하 고 후속 열의 이름을 생성 "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1" "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3" 등.&lt;/xref:System.Data.DataTable&gt; &lt;/xref:System.Data.Common.DbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the incoming data contains unnamed columns, they are placed in the &lt;xref:System.Data.DataSet&gt; according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">에 지정 되므로 들어오는 데이터에 명명 되지 않은 열이 포함 된 경우는 &lt;xref:System.Data.DataSet&gt;"column1", "Column2" 등에 따라.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When multiple result sets are added to the &lt;xref:System.Data.DataSet&gt; each result set is placed in a separate table.</source>
          <target state="translated">여러 결과 집합에 추가 될 때는 &lt;xref:System.Data.DataSet&gt;각 결과 집합은 별도 테이블에 배치 됩니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">추가 결과 집합이 지정한 테이블 이름 (예를 들어 "Table", "Table1", "Table2" 및 등)에 정수 계열 값을 추가 하 여 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that use column and table names should make sure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">열 및 테이블 이름을 사용 하는 응용 프로그램 명명 패턴과 충돌 하지 않도록 해야 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values in ADO <ph id="ph1">`Recordset`</ph> or <ph id="ph2">`Record`</ph> objects are converted to common language runtime types for storage in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">Ado에서 값 <ph id="ph1">`Recordset`</ph> 또는 <ph id="ph2">`Record`</ph> 개체 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 저장소에 대 한 공용 언어 런타임 형식으로 변환 됩니다</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This overload of the &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt; method implicitly calls <ph id="ph2">`Close`</ph> on the ADO object when the fill operation is complete.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 오버 로드는 &lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;메서드를 암시적으로 호출 <ph id="ph2">`Close`</ph> 채우기 작업이 완료 되 면 ADO 개체에서.&lt;/xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses an &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; to fill a &lt;xref:System.Data.DataSet&gt; using an ADO <ph id="ph1">`Recordset`</ph> that is an ADO <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;채울는 &lt;xref:System.Data.DataSet&gt;ADO를 사용 하 여 <ph id="ph1">`Recordset`</ph> ADO 즉 <ph id="ph2">`Record`</ph> 개체입니다.&lt;/xref:System.Data.DataSet&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example assumes that you have created an ADO <ph id="ph1">`RecordSet`</ph> and <ph id="ph2">`Record`</ph> object.</source>
          <target state="translated">이 예제 ADO 만들었다고 가정 <ph id="ph1">`RecordSet`</ph> 및 <ph id="ph2">`Record`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, "Customers")        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, "Customers");        adoConn.Close();   ```</ph></source>
          <target state="translated"><ph id="ph1">```vb#   Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()        Dim custDS As DataSet = New DataSet        'Use ADO objects from ADO library (msado15.dll) imported        ' as.NET library ADODB.dll using TlbImp.exe        Dim adoConn As ADODB.Connection = New ADODB.Connection()        Dim adoRS As ADODB.Recordset = New ADODB.Recordset()        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)        custDA.Fill(custDS, adoRS, "Customers")        adoConn.Close()   ```</ph>      <ph id="ph2">```c#   OleDbDataAdapter custDA = new OleDbDataAdapter();        DataSet custDS = new DataSet();        //Use ADO objects from ADO library (msado15.dll) imported        // as.NET library ADODB.dll using TlbImp.exe        ADODB.Connection adoConn = new ADODB.Connection();        ADODB.Recordset adoRS = new ADODB.Recordset();        adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);        adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);        custDA.Fill(custDS, adoRS, "Customers");        adoConn.Close();   ```</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to fill with records and, if it is required, schema.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 레코드로 채울 및 필요한 경우 스키마입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">An ADO <bpt id="p1">&lt;xref uid="langword_csharp_Recordset" name="Recordset" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref uid="langword_csharp_Record" name="Record" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The source table used for the table mappings.</source>
          <target state="translated">테이블 매핑에 사용할 원본 테이블입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The number of rows successfully added to or refreshed in the <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">행 수가 성공적으로 추가 하거나 새로 고쳐지지는 <bpt id="p1">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">이 행을 반환 하지 않는 문에 의해 영향을 받는 행을 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The source table is invalid.</source>
          <target state="translated">원본 테이블이 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에 새 레코드를 삽입 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the InsertCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;InsertCommand의 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; 사용을&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>When InsertCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">InsertCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.OleDb.OleDbCommand&gt;, &lt;xref:System.Data.OleDb.OleDbCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InsertCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 InsertCommand &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be added to the &lt;xref:System.Data.DataSet&gt; depending on how you set the &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 &lt;xref:System.Data.DataSet&gt;어떻게 설정 하느냐에 따라는 &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;의 속성은 &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to insert records in the data source that correspond to new rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;새 행에 해당 하는 데이터 원본에서 레코드를 삽입 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; after a command is executed against the data source.</source>
          <target state="translated">중에 발생 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 원본에 대해 명령이 실행 된 후.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The attempt to update is made.</source>
          <target state="translated">업데이트를 시도 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Therefore, the event occurs.</source>
          <target state="translated">따라서 이벤트 발생합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Occurs during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; before a command is executed against the data source.</source>
          <target state="translated">중에 발생 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;데이터 원본에 대해 명령을 실행 하기 전에.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The attempt to update is made.</source>
          <target state="translated">업데이트를 시도 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Therefore, the event occurs.</source>
          <target state="translated">따라서 이벤트 발생합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:      1.</source>
          <target state="translated">실행 순서는 다음과 같습니다: 1.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the &lt;xref:System.Data.DataRow&gt; are moved to the parameter values.</source>
          <target state="translated">값은 &lt;xref:System.Data.DataRow&gt;매개 변수 값으로 이동 됩니다.&lt;/xref:System.Data.DataRow&gt;</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 에 놓입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the &lt;xref:System.Data.DataRow&gt;.</source>
          <target state="translated">출력 매개 변수가 있는 경우 &lt;xref:System.Data.DataRow&gt;.&lt;/xref:System.Data.DataRow&gt; 배치</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt; event is raised.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;이벤트가 발생 합니다.&lt;/xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt; is called.</source>
          <target state="translated">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;가 호출 됩니다.&lt;/xref:System.Data.DataRow.AcceptChanges%2A&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에서 레코드를 선택 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>When SelectCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">SelectCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.OleDb.OleDbCommand&gt;, &lt;xref:System.Data.OleDb.OleDbCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SelectCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리 SelectCommand &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SelectCommand returns no rows, no tables are added to the &lt;xref:System.Data.DataSet&gt;, and no exception is raised.</source>
          <target state="translated">에 테이블이 추가 된 SelectCommand 행을 반환 하는 경우는 &lt;xref:System.Data.DataSet&gt;, 예외가 발생 하지 않습니다.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during &lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt; to select records from data source for placement in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 중 사용 되는 &lt;xref:System.Data.Common.DbDataAdapter.Fill*&gt;에 배치 하기 위해 데이터 원본에서 레코드를 선택는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Fill*&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.DeleteCommand*&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 하는 동안 데이터 집합에서 삭제 된 행에 대 한 데이터 원본에서 레코드를 삭제 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.InsertCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.InsertCommand*&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to insert records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데 사용 되는 업데이트 하는 동안 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.SelectCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.SelectCommand*&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is used during an update to select records from a data source for placement in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 업데이트 중에 사용 하는 데이터 집합에 배치 하기 위해 데이터 원본에서 레코드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>For a description of this member, see &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.</source>
          <target state="translated">이 멤버에 대 한 참조 &lt;xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;.&lt;/xref:System.Data.IDbDataAdapter.UpdateCommand*&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.Data.IDbDataAdapter&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Data.IDbDataAdapter&gt;인터페이스.&lt;/xref:System.Data.IDbDataAdapter&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during an update to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 데이터 집합의 수정 된 행에 대 한 데이터 원본에는 업데이트에 업데이트 레코드 중에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">이 멤버에 대 한 참조 <ph id="ph1">&amp;lt;</ph>xref:System.ICloneable.Clone%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ICloneable&gt;인터페이스.&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Data.OleDb.OleDbDataAdapter&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A new &lt;xref:System.Object&gt; that is a copy of this instance.</source>
          <target state="translated">새 &lt;xref:System.Object&gt;이 인스턴스의 복사본입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">SQL 문 또는 데이터 원본에서 레코드를 업데이트 하는 데 사용 되는 저장된 프로시저를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>During &lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;, if this property is not set and primary key information is present in the &lt;xref:System.Data.DataSet&gt;, the UpdateCommand can be generated automatically if you set the &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; property and use the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;이 속성은 기본 키 정보는 &lt;xref:System.Data.DataSet&gt;UpdateCommand의 &lt;xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt;속성 및 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt; 사용을&lt;/xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A&gt; 설정 하는 경우에 자동으로 생성 될 수 있습니다&lt;/xref:System.Data.DataSet&gt; 에 있으면 경우&lt;/xref:System.Data.Common.DbDataAdapter.Update%2A&gt; 중</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, any additional commands that you do not set are generated by the &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 그러면에 &lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;.&lt;/xref:System.Data.OleDb.OleDbCommandBuilder&gt;</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generation logic requires key column information to be present in the &lt;xref:System.Data.DataSet&gt;.</source>
          <target state="translated">이 세대 논리 &lt;xref:System.Data.DataSet&gt;.&lt;/xref:System.Data.DataSet&gt; 에 키 열 정보를 적용.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>When UpdateCommand is assigned to a previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt;, the &lt;xref:System.Data.OleDb.OleDbCommand&gt; is not cloned.</source>
          <target state="translated">UpdateCommand 할당 된 경우에 이전에 만든 &lt;xref:System.Data.OleDb.OleDbCommand&gt;, &lt;xref:System.Data.OleDb.OleDbCommand&gt;가 복제 되지 않습니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UpdateCommand maintains a reference to the previously created &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">이전에 만든에 대 한 참조를 유지 관리는 UpdateCommand &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If execution of this command returns rows, these rows may be merged with the &lt;xref:System.Data.DataSet&gt; depending on how you set the &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; property of the &lt;xref:System.Data.OleDb.OleDbCommand&gt; object.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 행을 반환 하는이 명령 실행 하는 경우 이러한 행으로 병합 될 수 있습니다는 &lt;xref:System.Data.DataSet&gt;어떻게 설정 하느냐에 따라는 &lt;xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt;의 속성은 &lt;xref:System.Data.OleDb.OleDbCommand&gt;개체입니다.&lt;/xref:System.Data.OleDb.OleDbCommand&gt; &lt;/xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A&gt; &lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used during &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt; to update records in the data source that correspond to modified rows in the <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 하는 동안 사용 &lt;xref:System.Data.Common.DbDataAdapter.Update*&gt;수정 된 행에 해당 하는 데이터 원본에서 레코드를 업데이트 하는 <bpt id="p2">&lt;xref href="System.Data.DataSet"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.Common.DbDataAdapter.Update*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>