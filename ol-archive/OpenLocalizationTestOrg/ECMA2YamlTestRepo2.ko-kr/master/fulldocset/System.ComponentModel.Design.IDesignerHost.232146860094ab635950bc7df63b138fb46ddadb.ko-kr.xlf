<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf3a435ba57c772966ab929986639866034588d3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.IDesignerHost.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf7e6aca12c011db086a22d39ab49eb11411bdcb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46bd86c202cd4d1a723e081a0643d643ab2ce240</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface for managing designer transactions and components.</source>
          <target state="translated">디자이너 트랜잭션 및 구성 요소를 관리 하기 위한 인터페이스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDesignerHost is an interface that works with the .NET Framework forms designer architecture to provide support for designer transaction and component management.</source>
          <target state="translated">IDesignerHost는 디자이너 트랜잭션 및 구성 요소 관리에 대 한 지원을 제공 하 여.NET Framework 양식 디자이너 아키텍처와 작동 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework does not provide an implementation of this interface.</source>
          <target state="translated">.NET Framework에는이 인터페이스의 구현을 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interface is implemented by development tools that support designers.</source>
          <target state="translated">디자이너를 지 원하는 개발 도구에서 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Activates the designer that this host is hosting.</source>
          <target state="translated">이 호스트를 호스팅하는 디자이너를 활성화 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Designers should be activated before they display their user interface.</source>
          <target state="translated">디자이너는 사용자 인터페이스를 표시 하기 전에 활성화 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Occurs when this designer is activated.</source>
          <target state="translated">이 디자이너가 활성화 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A designer is activated before it is displayed.</source>
          <target state="translated">디자이너를 표시 하기 전에 활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the container for this designer host.</source>
          <target state="translated">이 디자이너 호스트에 대 한 컨테이너를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This &lt;xref:System.ComponentModel.IContainer&gt; contains the components of the current design mode document.</source>
          <target state="translated">이 &lt;xref:System.ComponentModel.IContainer&gt;현재 디자인 모드 문서의 구성 요소를 포함 합니다.&lt;/xref:System.ComponentModel.IContainer&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can list or access any of the components of the current design mode document through the &lt;xref:System.ComponentModel.IContainer.Components%2A&gt; member of this &lt;xref:System.ComponentModel.IContainer&gt;.</source>
          <target state="translated">목록 또는 &lt;xref:System.ComponentModel.IContainer.Components%2A&gt; &lt;xref:System.ComponentModel.IContainer&gt;.&lt;/xref:System.ComponentModel.IContainer&gt; 의 구성원&lt;/xref:System.ComponentModel.IContainer.Components%2A&gt; 을 통해 현재 디자인 모드 문서의 구성 요소를 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for this host.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 호스트에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a component of the specified type and adds it to the design document.</source>
          <target state="translated">지정 된 형식의 구성 요소를 만들어 디자인 문서에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type cannot be resolved into an object that implements &lt;xref:System.ComponentModel.IComponent&gt;, an exception is thrown.</source>
          <target state="translated">구현 하는 개체 유형을 확인할 수 없는 경우 &lt;xref:System.ComponentModel.IComponent&gt;, 예외가 throw 됩니다.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not specify a name for the component.</source>
          <target state="translated">이 메서드는 구성 요소에 대 한 이름을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method creates the component and adds it to the designer container.</source>
          <target state="translated">메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The type of the component to create.</source>
          <target state="translated">만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The newly created component.</source>
          <target state="translated">새로 만든된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates a component of the specified type and name, and adds it to the design document.</source>
          <target state="translated">지정 된 형식 및 이름, 구성 요소를 만들어 디자인 문서에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type cannot be resolved into an object that implements &lt;xref:System.ComponentModel.IComponent&gt;, an exception is thrown.</source>
          <target state="translated">구현 하는 개체 유형을 확인할 수 없는 경우 &lt;xref:System.ComponentModel.IComponent&gt;, 예외가 throw 됩니다.&lt;/xref:System.ComponentModel.IComponent&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates the component and adds it to the designer container.</source>
          <target state="translated">이 메서드는 구성 요소를 만들고 디자이너 컨테이너에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type of the component to create.</source>
          <target state="translated">만들 구성 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The name for the component.</source>
          <target state="translated">구성 요소에 대 한 이름입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The newly created component.</source>
          <target state="translated">새로 만든된 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 성능을 향상 하 고 취소 및 다시 실행 지원 기능에 대 한 이벤트 시퀀스를 캡슐화 할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; that can be used to encapsulate a series of operations.</source>
          <target state="translated">이 메서드가 만드는 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;일련의 작업을 캡슐화 하 사용할 수 있는.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">디자이너 트랜잭션 성능을 향상 시킬 수 있습니다, 그리고 여러 개의 업데이트 작업의 과정 동안 인해 깜빡임 줄이기 및 실행을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 이벤트가 많이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">이러한 이벤트는 같은 부작용이 발생 수 또는 성능이 저하 되는 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">를 한 번에 여러 구성 요소에서 작동 하거나 단일 구성 요소에 대해 여러 속성을 설정할 때 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some operations handle the &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt; and &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; events and perform work only when a transaction is not in progress.</source>
          <target state="translated">일부 작업의 처리는 &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;및 &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;이벤트는 트랜잭션이 진행에서 않는 경우에 작업을 수행 합니다.&lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on using transactions, see the documentation for &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;.</source>
          <target state="translated">트랜잭션 사용에 대 한 자세한 내용은 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; 에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A new instance of <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you complete the steps in your transaction, you should call &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt; on this object.</source>
          <target state="translated">트랜잭션에서 단계를 완료 하는 경우 호출 해야 &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt;이 개체에.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates a <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that can encapsulate event sequences to improve performance and enable undo and redo support functionality, using the specified transaction description.</source>
          <target state="translated">만듭니다는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 성능을 개선 하 고 실행 취소를 사용 하 고, 지원 기능을 지정 된 트랜잭션 설명을 사용 하 여 다시 실행 하는 이벤트 순서를 캡슐화 할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method creates a &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt; that can be used to encapsulate a series of operations.</source>
          <target state="translated">이 메서드가 만드는 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;일련의 작업을 캡슐화 하 사용할 수 있는.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Designer transactions can improve performance, reduce flicker caused by multiple updates during a process of operations, and enable most operations to be undone.</source>
          <target state="translated">디자이너 트랜잭션 성능을 향상 시킬 수 있습니다, 그리고 여러 개의 업데이트 작업의 과정 동안 인해 깜빡임 줄이기 및 실행을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lengthy operations that involve multiple components can raise many events.</source>
          <target state="translated">여러 구성 요소를 포함 하는 시간이 오래 걸리는 작업 이벤트가 많이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>These events can cause side effects, such as flicker or degraded performance.</source>
          <target state="translated">이러한 이벤트는 같은 부작용이 발생 수 또는 성능이 저하 되는 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When operating on multiple components at one time, or setting multiple properties on a single component, you can improve performance by performing these changes within a transaction.</source>
          <target state="translated">를 한 번에 여러 구성 요소에서 작동 하거나 단일 구성 요소에 대해 여러 속성을 설정할 때 이러한 변경 내용은 트랜잭션 내에서 수행 하 여 성능을 개선할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some operations handle the &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt; and &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; events and perform work only when a transaction is not in progress.</source>
          <target state="translated">일부 작업의 처리는 &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;및 &lt;xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt;이벤트는 트랜잭션이 진행에서 않는 경우에 작업을 수행 합니다.&lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed&gt; &lt;/xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on using transactions, see the documentation for &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;.</source>
          <target state="translated">트랜잭션 사용에 대 한 자세한 내용은 &lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;.&lt;/xref:System.ComponentModel.Design.DesignerTransaction&gt; 에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A title or description for the newly created transaction.</source>
          <target state="translated">제목 또는 새로 만든된 트랜잭션에 대 한 설명입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A new <bpt id="p1">&lt;xref href="System.ComponentModel.Design.DesignerTransaction"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When you have completed the steps in your transaction, you should call &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt; on this object.</source>
          <target state="translated">트랜잭션에서 단계를 완료 했으면, 호출 해야 &lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt;이 개체에.&lt;/xref:System.ComponentModel.Design.DesignerTransaction.Commit*&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Occurs when this designer is deactivated.</source>
          <target state="translated">이 디자이너 비활성화 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>A designer is deactivated just before it is no longer displayed.</source>
          <target state="translated">디자이너를 표시 하는 것은 더 이상 전에 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Destroys the specified component and removes it from the designer container.</source>
          <target state="translated">지정된 된 구성 요소를 제거 하 고 디자이너 컨테이너에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The component to destroy.</source>
          <target state="translated">제거할 구성 요소입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets the designer instance that contains the specified component.</source>
          <target state="translated">지정된 된 구성 요소를 포함 하는 디자이너 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to retrieve the designer for.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.IComponent"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 디자이너에 대 한를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no designer for the specified component.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Design.IDesigner"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 지정된 된 구성 요소에 대 한 디자이너는 경우.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets an instance of the specified, fully qualified type name.</source>
          <target state="translated">지정 된, 정규화 된 유형 이름의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The name of the type to load.</source>
          <target state="translated">로드할 형식의의 이름입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The type object for the specified type name, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the type cannot be found.</source>
          <target state="translated">지정 된 형식 이름에 대 한 형식 개체 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식을 찾을 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the designer host is currently in a transaction.</source>
          <target state="translated">현재 디자이너 호스트 트랜잭션에 적용 되는지 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a transaction is in progress; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>트랜잭션이 진행 중인 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Occurs when this designer completes loading its document.</source>
          <target state="translated">이 디자이너에서 문서 로드 완료 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs after a designer completes loading its document.</source>
          <target state="translated">이 이벤트는 디자이너에서 문서 로드를 완료 한 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the designer host is currently loading the document.</source>
          <target state="translated">디자이너 호스트는 현재 문서를 로드 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the designer host is currently loading the document; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재 디자이너 호스트 문서를 로드 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the instance of the base class used as the root component for the current design.</source>
          <target state="translated">현재 설계에 대 한 루트 구성으로 사용 하는 기본 클래스의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This base class is typically a &lt;xref:System.Windows.Forms.Form&gt; or &lt;xref:System.Windows.Forms.UserControl&gt; instance; it defines the class for which the user's derived class extends.</source>
          <target state="translated">이 기본 클래스는 일반적으로 &lt;xref:System.Windows.Forms.Form&gt;또는 &lt;xref:System.Windows.Forms.UserControl&gt;인스턴스이거나 사용자의 파생된 클래스를 확장 하는 클래스를 정의 합니다.&lt;/xref:System.Windows.Forms.UserControl&gt; &lt;/xref:System.Windows.Forms.Form&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The instance of the root component class.</source>
          <target state="translated">루트 구성 요소 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the fully qualified name of the class being designed.</source>
          <target state="translated">디자인 하 고 클래스의 정규화 된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the base component class.</source>
          <target state="translated">기본 구성 요소 클래스의 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the TransactionClosed event.</source>
          <target state="translated">TransactionClosed 이벤트에 대 한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs after a transaction is closed.</source>
          <target state="translated">이 이벤트는 트랜잭션이 닫힌 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the TransactionClosing event.</source>
          <target state="translated">TransactionClosing 이벤트에 대 한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs just before a transaction is completed.</source>
          <target state="translated">이 이벤트는 트랜잭션이 완료 되기 직전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the description of the current transaction.</source>
          <target state="translated">현재 트랜잭션의 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The description is the last description specified with &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;.</source>
          <target state="translated">설명은 마지막 설명이 &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;.&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; 지정는</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A description of the current transaction.</source>
          <target state="translated">현재 트랜잭션의 설명입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the TransactionOpened event.</source>
          <target state="translated">TransactionOpened 이벤트에 대 한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when a transaction has begun.</source>
          <target state="translated">이 이벤트는 트랜잭션이 시작 되었을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transaction can sometimes change multiple values.</source>
          <target state="translated">트랜잭션을 여러 값을 변경할 경우에 따라 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction methods provide a way to prevent performance and flicker problems by avoiding repetitive processing.</source>
          <target state="translated">트랜잭션 메서드는 반복 되는 처리를 방지 하 여 깜박임 문제 및 성능을 방지 하기 위해 알아볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods defer processing until after the transaction has closed.</source>
          <target state="translated">이러한 메서드는 트랜잭션이 닫힐 때까지 처리를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the TransactionOpening event.</source>
          <target state="translated">TransactionOpening 이벤트에 대 한 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when a transaction is about to begin.</source>
          <target state="translated">이 이벤트에는 트랜잭션이 시작 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows designer host clients to perform operations before other handlers are notified that a transaction has begun.</source>
          <target state="translated">이 메서드를 사용 하면 디자이너 호스트 클라이언트에서 작업을 수행한 후 다른 처리기는 트랜잭션이 시작 된 메시지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified handler is called only when the first call to &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt; is made.</source>
          <target state="translated">만 첫 번째 호출 하는 경우에 지정 된 처리기가 호출 &lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;이루어집니다.&lt;/xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls do not generate this event until all transaction objects have been disposed.</source>
          <target state="translated">후속 호출에서는 모든 트랜잭션이 삭제 된 때까지이 이벤트를 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>