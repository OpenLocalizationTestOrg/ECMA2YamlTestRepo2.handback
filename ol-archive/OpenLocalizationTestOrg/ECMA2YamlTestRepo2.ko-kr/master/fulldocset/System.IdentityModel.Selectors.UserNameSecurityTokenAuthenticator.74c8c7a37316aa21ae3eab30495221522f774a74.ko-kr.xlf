<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52b36d664d63ddfb8dcc0403317dda6b16714c06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90d9ca4d506c75c66ed8b14beac7c1abe0e690be</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6bebfa395fc8e666ebb0d86358a2efda2dbc08a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Authenticates a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> security token.</source>
          <target state="translated">인증 된 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the UserNameSecurityTokenAuthenticator class to authenticate security tokens based on a user name and password.</source>
          <target state="translated">사용자 이름 및 암호 기반 보안 토큰을 인증 하려면 UserNameSecurityTokenAuthenticator 클래스를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> ships with the following classes that provide support for authenticating &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt; security tokens.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> 인증에 대 한 지원을 제공 하는 다음 클래스와 함께 제공 &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;보안 토큰입니다.&lt;/xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Type|Description|   |----------|-----------------|   |&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;|Allows an application to provide a custom authentication scheme for user names and passwords.</source>
          <target state="translated">| 형식 | 설명 |   |----------|-----------------|   | &lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;| 사용자 이름 및 암호에 대 한 사용자 지정 인증 체계를 제공 하는 응용 프로그램 수 있습니다.&lt;/xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The authentication scheme is provided using a class deriving from the &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt; class.|   |&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;|Authenticates the user name and password as a Windows account.|       Most custom authentication schemes can use the use the &lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt; class and implement a class that derives from the &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt; class.</source>
          <target state="translated">인증 체계 &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;클래스에서 파생 되는 클래스를 사용 하 여 제공 됩니다. |   | &lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt;| 사용자 이름과 암호를 Windows 계정으로 인증 합니다. |       대부분의 사용자 지정 인증 체계 사용 하 여 사용 하는 &lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;클래스와 구현 &lt;xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;클래스&lt;/xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt; 에서 파생 된 클래스&lt;/xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt; &lt;/xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator&gt; &lt;/xref:System.IdentityModel.Selectors.UserNamePasswordValidator&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if additional flexibility is needed, you can derive a class from the UserNameSecurityTokenAuthenticator class and override the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt; method.</source>
          <target state="translated">그러나 유연성이 더 필요한 경우 UserNameSecurityTokenAuthenticator 클래스에서 클래스를 파생 하 수 재정의 &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;메서드.&lt;/xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the specified security token can be validated by this security token authenticator.</source>
          <target state="translated">이 보안 토큰 인증 자가 지정된 된 보안 토큰 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The CanValidateTokenCore method does not authenticate the security token; that is performed by the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt; method.</source>
          <target state="translated">CanValidateTokenCore 메서드는 보안 토큰을 인증 하지 않습니다. 통해 수행 됩니다는 &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;메서드.&lt;/xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">token</ph><ept id="p2">&lt;/code&gt;</ept> is a <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> security token; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>when <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">token</ph><ept id="p2">&lt;/code&gt;</ept> is a <bpt id="p3">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> security token; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Authenticates the specified security token and returns the set of authorization policies for the security token.</source>
          <target state="translated">지정 된 보안 토큰을 인증 하 고 보안 토큰에 대 한 권한 부여 정책의 집합을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ValidateTokenCore method calls the &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt; method to authenticate the <ph id="ph1">`token`</ph> parameter using its user name and password.</source>
          <target state="translated">ValidateTokenCore 메서드 호출의 &lt;xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;인증 하는 메서드는 <ph id="ph1">`token`</ph> 해당 사용자 이름과 암호를 사용 하 여 매개 변수.&lt;/xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to be validated.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> 형식의 <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, authenticates the specified user name and password and returns the set of authorization policies for <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> security tokens.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 사용자 이름 및 암호를 인증 하 고에 대 한 권한 부여 정책의 집합을 반환 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.UserNameSecurityToken"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 보안 토큰입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the ValidateUserNamePasswordCore method to authenticate &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt; security tokens.</source>
          <target state="translated">인증 하려면 ValidateUserNamePasswordCore 메서드를 재정의 &lt;xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;보안 토큰입니다.&lt;/xref:System.IdentityModel.Tokens.UserNameSecurityToken&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the ValidateUserNamePasswordCore method is overridden, follow these guidelines:      -   When the security token passed into the <ph id="ph1">`token`</ph> parameter cannot be validated, throw the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">ValidateUserNamePasswordCore 메서드를 재정의 하는 경우 다음이 지침을 따릅니다:-보안 토큰에 전달 하는 경우는 <ph id="ph1">`token`</ph> 매개 변수 여야 throw 유효성을 검사는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;예외.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   When there are no authorization policies in effect for this application, return an empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.</source>
          <target state="translated">-이 응용 프로그램에 적용 권한 부여 정책이 인 경우는 빈 &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; &lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;.&lt;/xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt; 형식의&lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; 반환</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`null`</ph> is returned by this method, <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throws the &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt; exception.</source>
          <target state="translated">때 <ph id="ph1">`null`</ph> 이 메서드에서 반환 되 <ph id="ph2">[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]</ph> throw는 &lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;예외.&lt;/xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The user name associated with the security token.</source>
          <target state="translated">보안 토큰과 연결 된 사용자 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The password associated with the security token.</source>
          <target state="translated">보안 토큰과 연결 된 암호입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> of type <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the set of authorization policies in effect for this application.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.ObjectModel.ReadOnlyCollection%601<ph id="ph2">&amp;gt;</ph> 형식의 <bpt id="p1">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 적용이 응용 프로그램에 대 한 권한 부여 정책의 집합이 들어 있는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>