<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f561e37ca47946836fce64c234b5f70275bda691</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\Microsoft.Build.Tasks.Vbc.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68960efe6b4b29a0b57c1989322b7946c92c88d2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de41a848e1c507a517cc27e3a3dfe30e741cad9c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">`Vbc`</ph> task.</source>
          <target state="translated">구현 된 <ph id="ph1">`Vbc`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Vbc`</ph> element in your project file to create and execute this task.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`Vbc`</ph> 생성 하 고이 작업을 실행 하기 위해 프로젝트 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>Vbc Task<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">사용 및 매개 변수 정보를 참조 하십시오. <bpt id="p1">[</bpt>Vbc 작업<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Vbc"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="Microsoft.Build.Tasks.Vbc"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Fills the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">commandLine</ph><ept id="p1">&lt;/code&gt;</ept> parameter with switches and other information that can go into a response file.</source>
          <target state="translated">지정 된 채웁니다 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">commandLine</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수 스위치와 지시 파일에 사용할 수 있는 기타 정보입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Command line builder to add arguments to.</source>
          <target state="translated">인수를 추가할 명령줄 작성기입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets the base address of the DLL.</source>
          <target state="translated">DLL의 기준 주소를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The base address of the DLL.</source>
          <target state="translated">DLL의 기본 주소입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Compiles the project through the host object.</source>
          <target state="translated">호스트 개체를 통해 프로젝트를 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will get called during execution if a host object was passed to the <ph id="ph1">`Vbc`</ph> task.</source>
          <target state="translated">이 메서드는 호스트 개체에 전달 된 경우 실행 하는 동안 호출 됩니다는 <ph id="ph1">`Vbc`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if compilation succeeded; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>성공적으로 컴파일되면; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets one or more warnings to suppress that are specified by the numeric part of the warning identifier.</source>
          <target state="translated">경고 식별자의 숫자 부분으로 지정 된 경고를 표시 하지 않는 하나 이상의 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple warnings are separated by semicolons.</source>
          <target state="translated">여러 경고는 세미콜론으로 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The warnings to suppress that are specified by the numeric part of the warning identifier.</source>
          <target state="translated">경고 식별자의 숫자 부분으로 지정 하는 표시 하지 않을 경고 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Turns on documentation comments processing and gets or sets the output documentation XML file.</source>
          <target state="translated">문서 주석 처리를 설정 하 고 가져오거나 출력 문서 XML 파일을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the &lt;xref:Microsoft.Build.Tasks.Vbc.GenerateDocumentation%2A&gt; property.</source>
          <target state="translated">이 속성을 재정의 &lt;xref:Microsoft.Build.Tasks.Vbc.GenerateDocumentation%2A&gt;속성.&lt;/xref:Microsoft.Build.Tasks.Vbc.GenerateDocumentation%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The output documentation XML file.</source>
          <target state="translated">출력 문서 XML 파일입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets a string value that specifies how the task will report internal compiler errors.</source>
          <target state="translated">작업에서 내부 컴파일러 오류를 보고 하는 방법을 지정 하는 문자열 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can have the following values:      -   <ph id="ph1">`prompt`</ph><ph id="ph2">      -   </ph><ph id="ph3">`send`</ph><ph id="ph4">      -   </ph><ph id="ph5">`none`</ph>       If <ph id="ph6">`prompt`</ph> is specified and an internal compiler error occurs, the user is prompted with an option of whether to send the error data to Microsoft.</source>
          <target state="translated">이 속성은 다음 값을 가질 수 있습니다:- <ph id="ph1">`prompt`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`send`</ph> <ph id="ph4">      -   </ph> <ph id="ph5">`none`</ph> 경우 <ph id="ph6">`prompt`</ph> 지정 된 내부 컴파일러 오류가 발생 하 고, 사용자 오류 데이터를 Microsoft로 보내도록 선택할 수 있는 옵션이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`send`</ph> is specified and an internal compiler error occurs, the task sends the error data to Microsoft.</source>
          <target state="translated">경우 <ph id="ph1">`send`</ph> 지정 된 내부 컴파일러 오류가 발생 하 고, 태스크를 Microsoft로 오류 데이터를 보냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`none`</ph>, which reports errors in text output only.</source>
          <target state="translated">기본값은 <ph id="ph1">`none`</ph>, 출력 전용 텍스트에서 오류를 보고 있는 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A string value that specifies how the task will report internal compiler errors.</source>
          <target state="translated">작업에서 내부 컴파일러 오류를 보고 하는 방법을 지정 하는 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Override Execute so that we can move the PDB file, if we need to, after the compiler is done.</source>
          <target state="translated">컴파일러를 완료 한 후를 해야 하는 경우 PDB 파일을 이동할 있습니다 수 있도록 Execute를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.Boolean&gt;.</source>
          <target state="translated">&lt;xref:System.Boolean&gt;입니다.&lt;/xref:System.Boolean&gt; 반환</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to process documentation comments to an XML file.</source>
          <target state="translated">XML 파일에 문서 주석을 처리할지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the output XML file is the name of the executable file or the library that the task is creating.</source>
          <target state="translated">출력 XML 파일의 이름에는 실행 파일이 나 라이브러리에는 작업에서 작성 하는 이름이입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`Vbc`</ph> task processes documentation comments to a XML file; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`Vbc`</ph> 작업에는 XML 파일에 문서 주석을 처리, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the full file path of the tool.</source>
          <target state="translated">도구의 전체 파일 경로 반환합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The full file path of the tool.</source>
          <target state="translated">도구의 전체 파일 경로입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the item collections to import namespaces from.</source>
          <target state="translated">네임 스페이스를 가져올 항목 컬렉션을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The item collections to import namespaces from.</source>
          <target state="translated">네임 스페이스를 가져올 항목 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a host object initialization status value that indicates what the next action should be.</source>
          <target state="translated">호스트 개체 반환 초기화 상태 값을 다음 동작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will get called during execution of this task if a host object was passed to the <ph id="ph1">`Vbc`</ph> task.</source>
          <target state="translated">이 메서드는 호스트 개체에 전달 된 경우이 작업을 실행 하는 동안 호출 됩니다는 <ph id="ph1">`Vbc`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A host object initialization status value that indicates what the next action should be.</source>
          <target state="translated">호스트 개체 초기화 상태 값입니다 다음 동작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets the language version.</source>
          <target state="translated">언어 버전을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns the language version.</source>
          <target state="translated">언어 버전을 반환합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method intercepts the lines to be logged coming from STDOUT from VBC.</source>
          <target state="translated">이 메서드를 로깅하는 줄을 가로채 VBC에서 STDOUT에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once we see a standard vb warning or error, then we capture it and grab the next 3 lines so we can transform the string form the form of FileName.vb(line) to FileName.vb(line,column) which will allow us to report the line and column to the IDE, and thus filter the error in the duplicate case for multi-targeting, or just squiggle the appropriate token instead of the entire line.</source>
          <target state="translated">표준 vb 경고 또는 오류를 표시 되 면 다음 म 캡처하고 IDE에 줄 및 열을 보고 하 고 따라서 다중 대상 지정에 대 한 중복 된 경우 오류를 필터링 하기 수 또는 전체 행 대신 적절 한 토큰이 오류 표시선 방금 됩니다는 FileName.vb(line,column) FileName.vb(line) 형태의 문자열 형식 변환 수 있도록 다음 3 줄을 잡고 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A single line captured from the STDOUT of the vbc compiler</source>
          <target state="translated">Vbc 컴파일러의 STDOUT에서 캡처한 한 줄</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The message importance: High,Low, or Normal</source>
          <target state="translated">메시지 중요도: 높음, 낮음 또는 보통</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the assembly that this module will be a part of.</source>
          <target state="translated">이 모듈의 일부가 될 어셈블리의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of the assembly that this module will be a part of.</source>
          <target state="translated">이 모듈의 포함 될 하는 어셈블리의 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the compiler should not reference the standard libraries.</source>
          <target state="translated">컴파일러에서 표준 라이브러리를 참조 하지 않아야 하는지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the compiler should not reference the standard libraries; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일러에서 표준 라이브러리;를 참조 하지 않아야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the compiler should compile without a reference to the Visual Basic Runtime Library.</source>
          <target state="translated">컴파일러는 Visual Basic 런타임 라이브러리에 대 한 참조 없이 컴파일해야 하는지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the compiler should compile without a reference to the Visual Basic Runtime Library; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>컴파일러는 Visual Basic 런타임 라이브러리;에 대 한 참조 없이 컴파일해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the task will suppress all warnings.</source>
          <target state="translated">작업에서 모든 경고를 표시 하지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task will suppress all warnings; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업에서 모든 경고를 표시 하지 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a string value that specifies how string comparisons are made.</source>
          <target state="translated">문자열 비교 방법을 지정 하는 문자열 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can have the following values:      -   <ph id="ph1">`binary`</ph><ph id="ph2">      -   </ph><ph id="ph3">`text`</ph>       The value <ph id="ph4">`binary`</ph> specifies that the task uses binary string comparisons.</source>
          <target state="translated">이 속성은 다음 값을 가질 수 있습니다.- <ph id="ph1">`binary`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`text`</ph> 값 <ph id="ph4">`binary`</ph> 이진 문자열 비교 작업을 사용 하도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value <ph id="ph1">`text`</ph> specifies that the task uses text string comparisons.</source>
          <target state="translated">값 <ph id="ph1">`text`</ph> 텍스트 문자열 비교 작업을 사용 하도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`binary`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`binary`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A string value that specifies how string comparisons are made.</source>
          <target state="translated">문자열 비교를 적용 하는 방법을 지정 하는 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether explicit declaration of variables is required.</source>
          <target state="translated">명시적 변수 선언이 필요한 지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if explicit declaration of variables is required; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>명시적 변수 선언이 필요한; 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to use local type inference in variable declarations.</source>
          <target state="translated">변수 선언에서 지역 형식 유추를 사용할지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`Vbc`</ph> task will use local type inference in variable declarations; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`Vbc`</ph> 작업; 변수 선언에서 지역 형식 유추를 사용 하면 그렇지 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether the task enforces strict type semantics to restrict implicit type conversions.</source>
          <target state="translated">작업에서 엄격한 형식 의미 암시적 형식 변환을 제한를 수행 하는지를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the task enforces strict type semantics; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업에서 엄격한 형식 의미 체계를 적용 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets a value for the &lt;xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt; property.</source>
          <target state="translated">에 대 한 값을 가져오거나 설정 합니다.는 &lt;xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt;속성.&lt;/xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Currently, the value can be set to "custom" and specifies whether the task generates warnings for implicit narrowing type conversions.</source>
          <target state="translated">현재 값을 "custom"으로 설정할 수 있습니다 및 작업 암시적 축소 형식 변환에 대 한 경고를 생성할지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A value for the &lt;xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt; property.</source>
          <target state="translated">에 대 한 값은 &lt;xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt;속성.&lt;/xref:Microsoft.Build.Tasks.Vbc.OptionStrict*&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The path to the .Pdb file.</source>
          <target state="translated">에 대 한 경로입니다. Pdb 파일입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">&lt;xref:System.String&gt;입니다.&lt;/xref:System.String&gt; 반환</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to disable integer overflow error checks.</source>
          <target state="translated">정수 오버플로 오류 검사를 사용 하지 않도록 설정 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`Vbc`</ph> task will disable integer overflow error checks; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`Vbc`</ph> 작업이 정수 오버플로 오류 검사를 사용 하지 않도록 설정 됩니다, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the root namespace for all type declarations.</source>
          <target state="translated">모든 형식 선언에 대 한 루트 네임 스페이스를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The root namespace for all type declarations.</source>
          <target state="translated">모든 형식 선언에 대 한 루트 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of mscorlib.dll and microsoft.visualbasic.dll.</source>
          <target state="translated">Mscorlib.dll 및 microsoft.visualbasic.dll의 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The location of mscorlib.dll and microsoft.visualbasic.dll.</source>
          <target state="translated">Mscorlib.dll 및 microsoft.visualbasic.dll의 위치입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to target the <ph id="ph1">[!INCLUDE[Compact](~/add/includes/compact-md.md)]</ph>.</source>
          <target state="translated">대상 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.는 <ph id="ph1">[!INCLUDE[Compact](~/add/includes/compact-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`Vbc`</ph> task should target the <ph id="ph2">[!INCLUDE[Compact](~/add/includes/compact-md.md)]</ph>; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`Vbc`</ph> 작업 대상으로 해야는 <ph id="ph2">[!INCLUDE[Compact](~/add/includes/compact-md.md)]</ph>, 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the name of the tool executable file (vbc.exe).</source>
          <target state="translated">도구 실행 파일 (vbc.exe)의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the tool executable file.</source>
          <target state="translated">도구 실행 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that specifies whether to use the in-process compiler object, if available.</source>
          <target state="translated">사용 가능한 경우 in-process 컴파일러 개체를 사용할지 여부를 지정 하는 부울 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Used only by <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>.</source>
          <target state="translated">에서만 사용 <ph id="ph1">[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <ph id="ph1">`Vbc`</ph> task will use the in-process compiler object, if available; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <ph id="ph1">`Vbc`</ph> 고, 그렇지 않으면 사용할 수 있는 작업 in process 컴파일러 개체를 사용 하면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Validates input parameters and logs errors or warnings, if any.</source>
          <target state="translated">있는 경우 입력된 매개 변수 및 로그 오류 또는 경고의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value that indicates whether task execution should proceed.</source>
          <target state="translated">작업 실행을 계속할지 여부를 나타내는 부울 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if task execution should proceed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업 실행이 진행 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Specifies whether to compile with the default Visual Basic runtime.</source>
          <target state="translated">기본 Visual Basic 런타임을 사용 하 여 컴파일하고 것인지 지정 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">&lt;xref:System.String&gt;입니다.&lt;/xref:System.String&gt; 반환</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The path to the Visual Basic runtime to use.</source>
          <target state="translated">Visual Basic 런타임에서 사용에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns &lt;xref:System.String&gt;.</source>
          <target state="translated">&lt;xref:System.String&gt;입니다.&lt;/xref:System.String&gt; 반환</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets or sets the verbosity of the compiler’s output, which can be <ph id="ph1">`Quiet`</ph>, <ph id="ph2">`Normal`</ph>, or <ph id="ph3">`Verbose`</ph>.</source>
          <target state="translated">될 수 있는 컴파일러의 출력의 자세한 정도 가져오거나 설정 합니다. <ph id="ph1">`Quiet`</ph>, <ph id="ph2">`Normal`</ph>, 또는 <ph id="ph3">`Verbose`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default verbosity is <ph id="ph1">`Normal`</ph>.</source>
          <target state="translated">기본 자세한 정도 <ph id="ph1">`Normal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The verbosity of the compiler’s output.</source>
          <target state="translated">컴파일러의 자세한 정도 출력입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of warnings to treat as errors.</source>
          <target state="translated">오류로 처리할 경고 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A list of warnings to treat as errors.</source>
          <target state="translated">오류로 처리할 경고 목록입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets a list of warnings that are not treated as errors.</source>
          <target state="translated">오류로 처리 하지 않을 경고 목록을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A list of warnings that are not treated as errors.</source>
          <target state="translated">오류로 처리 하지 않을 경고 목록.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>