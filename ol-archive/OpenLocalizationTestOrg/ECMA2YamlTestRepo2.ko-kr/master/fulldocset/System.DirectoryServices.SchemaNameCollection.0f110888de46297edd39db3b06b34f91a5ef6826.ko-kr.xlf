<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0ce5194e40c345ce83c2da813daa08388336976</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.DirectoryServices.SchemaNameCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1455aea0ae048786ad06ae485194ca81d42736d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edf929bd69b56300b734791362f39ce70a27cca4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains a list of the schema names that the &lt;xref:System.DirectoryServices.DirectoryEntries.SchemaFilter*&gt; property of a <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectoryEntries"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object can use.</source>
          <target state="translated">포함 된 스키마의 목록 이름을 지정 하는 &lt;xref:System.DirectoryServices.DirectoryEntries.SchemaFilter*&gt;의 속성은 <bpt id="p1">&lt;xref href="System.DirectoryServices.DirectoryEntries"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 צ ְ ײ.&lt;/xref:System.DirectoryServices.DirectoryEntries.SchemaFilter*&gt;</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Appends a specified schema name to this collection.</source>
          <target state="translated">이 컬렉션에 지정된 된 스키마 이름을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The schema name to add to this collection.</source>
          <target state="translated">이 컬렉션에 추가할 스키마 이름입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The zero-based index of the specified property value.</source>
          <target state="translated">지정된 된 속성 값의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If the object is not found, the return value is -1.</source>
          <target state="translated">개체가 없을 경우 반환 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">이 컬렉션에 지정 된 스키마 이름 집합을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.DirectoryServices.SchemaNameCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that contains the schema names to add.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.DirectoryServices.SchemaNameCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 추가 하려면 스키마 이름을 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">이 컬렉션에 지정 된 스키마 이름 집합을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that contains the schema names to add.</source>
          <target state="translated">형식에 &lt;xref:System.String&gt;추가할 스키마 이름을 포함 하&lt;/xref:System.String&gt; 는 배열</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Removes all objects from this collection.</source>
          <target state="translated">이 컬렉션에서 모든 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determines whether this collection contains a specified schema name.</source>
          <target state="translated">이 컬렉션에 지정된 된 스키마 이름을 포함 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The schema name to search for.</source>
          <target state="translated">검색할 스키마 이름입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The return value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified property belongs to this collection; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반환 값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정한 속성이이 컬렉션에 속하는 경우 이렇게 하지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Copies the schema names from this collection to an array, starting at a particular index of the array.</source>
          <target state="translated">이 컬렉션에서 스키마 이름의 배열의 특정 인덱스부터 시작 하 여 배열에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An array of type &lt;xref:System.String&gt; that receives this collection's schema names.</source>
          <target state="translated">형식의 배열 &lt;xref:System.String&gt;받는이 컬렉션의 스키마 이름입니다.&lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The zero-based array index at which to begin copying the schema names.</source>
          <target state="translated">스키마 이름을 복사를 시작 하는&amp;0;부터 시작 배열 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The Count property gets the number of objects in this collection.</source>
          <target state="translated">Count 속성은이 컬렉션의 개체 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The number of objects in this collection.</source>
          <target state="translated">이 컬렉션의 개체 수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">이 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An enumerator that you can used to iterate through this collection.</source>
          <target state="translated">이 컬렉션을 반복 하는 데 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Determines the index of a specified schema name in this collection.</source>
          <target state="translated">이 컬렉션에 지정 된 스키마 이름 인덱스를 결정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The schema name to search for.</source>
          <target state="translated">검색할 스키마 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The zero-based index of the specified schema name, or -1 if the schema name was not found in the collection.</source>
          <target state="translated">지정 된 스키마 이름 또는 스키마 이름 컬렉션에 없으면-1의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Inserts a schema name into this collection at a specified index.</source>
          <target state="translated">스키마 이름이이 컬렉션 내의 지정한 인덱스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`index`</ph> parameter equals the number of items in the collection, this method appends the value to the end of the collection.</source>
          <target state="translated">경우는 <ph id="ph1">`index`</ph> 매개 변수 컬렉션의 항목 수와 같습니다.,이 메서드는 컬렉션의 끝에 값을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The zero-based index into the collection at which to insert the schema name.</source>
          <target state="translated">컬렉션에 스키마 이름을 삽입할&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The schema name to insert into this collection.</source>
          <target state="translated">이 컬렉션에 삽입할 스키마 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that exists at a specified index.</source>
          <target state="translated">지정된 된 인덱스에 있는 개체를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>In C#, this property is the indexer for the &lt;xref:System.DirectoryServices.SchemaNameCollection&gt; class.</source>
          <target state="translated">C#에서이 속성은 &lt;xref:System.DirectoryServices.SchemaNameCollection&gt;클래스&lt;/xref:System.DirectoryServices.SchemaNameCollection&gt; 에 대 한 인덱서</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">Jscript에서는 형식에 의해 정의 된 기본 인덱싱된 속성을 사용할 수 있습니다 하지만 정의할 수는 없습니다 명시적으로 직접.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is &lt;xref:System.String&gt;.</source>
          <target state="translated">그러나 기본을 자동으로 제공 하는 클래스에 expando 특성 지정 인덱싱된 개체 형식이 고 인덱스 형식이 &lt;xref:System.String&gt;.&lt;/xref:System.String&gt; 속성</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The zero-based index into the collection.</source>
          <target state="translated">컬렉션에&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object that exists at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Removes a specified schema name from this collection.</source>
          <target state="translated">이 컬렉션에서 지정된 된 스키마 이름을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The schema name to remove.</source>
          <target state="translated">제거할 스키마 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Removes the schema name that is at a specified index from this collection.</source>
          <target state="translated">이 컬렉션에서 지정한 인덱스에 있는 스키마 이름을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The zero-based index of the schema name to remove.</source>
          <target state="translated">제거할 스키마 이름의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The zero-based index is either less than zero or equal to the size of the collection.</source>
          <target state="translated">0부터 시작 인덱스는&amp;0; 보다 작거나 컬렉션의 크기와 같음.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Copies the elements of the &lt;xref:System.Collections.ICollection&gt; to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.</source>
          <target state="translated">요소에 복사는 &lt;xref:System.Collections.ICollection&gt;에 &lt;xref:System.Array&gt;특정에서 시작 하는 &lt;xref:System.Array&gt;인덱스.&lt;/xref:System.Array&gt; &lt;/xref:System.Array&gt; &lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The one-dimensional &lt;xref:System.Array&gt; that is the destination of the elements copied from &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Array&gt; &lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에서 복사한 요소의 대상인&lt;/xref:System.Array&gt;&amp;1; 차원</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Array&gt; must have zero-based indexing.</source>
          <target state="translated">&lt;xref:System.Array&gt;0부터 시작 하는 인덱스가 있어야 합니다.&lt;/xref:System.Array&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The zero-based index in <ph id="ph1">`array`</ph> at which copying begins.</source>
          <target state="translated">인덱스는&amp;0;부터 시작 <ph id="ph1">`array`</ph> 복사가 시작 되는 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>가 다차원 배열인 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-       The number of elements in the source <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is greater than the available space from <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> to the end of the destination <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는-소스에 있는 요소의 수 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> 에서 사용 가능한 공간 보다 큰 <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> 대상의 끝에 <ph id="ph3">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The type of the source &lt;xref:System.Collections.ICollection&gt; cannot be cast automatically to the type of the destination <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">소스의 형식을 &lt;xref:System.Collections.ICollection&gt;대상의 형식으로 자동 캐스팅할 수 없는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe).</source>
          <target state="translated">에 대 한 액세스 여부를 나타내는 값을 가져옵니다는 &lt;xref:System.Collections.ICollection&gt;이 동기화 되었으면 (스레드로부터 안전 하 게 보호).&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; returns an object, which can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 반환&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">대부분의 컬렉션 클래스에 &lt;xref:System.Collections?displayProperty=fullName&gt;네임 스페이스는 내부 컬렉션에 동기화 된 래퍼를 제공 하는 한 Synchronized 메서드를 구현 합니다.&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The following example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic, C#]       사용 하 여 컬렉션을 잠그는 방법을 보여 주는 다음 예제는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <ph id="ph1">```c#   ICollection myCollection = new ICollection();     lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if access to the &lt;xref:System.Collections.ICollection&gt; is synchronized (thread safe); otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 액세스는 &lt;xref:System.Collections.ICollection&gt;은 동기화 (스레드로부터 안전함); 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.ICollection&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For collections with an underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">기본 저장소를 사용 하 여 컬렉션을 공개적으로 사용할 수 없는 경우에 대 한 경우 예상 된 구현에서는 현재 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">현재 인스턴스에 대 한 포인터 되지 않을 수 있습니다; 다른 컬렉션을 래핑하는 컬렉션에 대 한 충분 한 참고 내부 컬렉션을 반환 해야 하는 것 <ph id="ph1">`SyncRoot`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most collection classes in the &lt;xref:System.Collections?displayProperty=fullName&gt; namespace also implement a <ph id="ph1">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">대부분의 컬렉션 클래스에 &lt;xref:System.Collections?displayProperty=fullName&gt;네임 스페이스 구현는 <ph id="ph1">`Synchronized`</ph> 메서드는 내부 컬렉션에 동기화 된 래퍼를 제공 하는.&lt;/xref:System.Collections?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, derived classes can provide their own synchronized version of the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; property.</source>
          <target state="translated">하지만 파생된 클래스를 사용 하 여 컬렉션의 동기화 된 버전을 제공할 수 있습니다는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;속성.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; of the collection, not directly on the collection.</source>
          <target state="translated">동기화 하는 코드에서 작업을 수행 해야는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;컬렉션으로 만들어지므로 컬렉션의.&lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생 된 컬렉션의 적절 한 작업입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">특히 컬렉션 인스턴스를 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화 유지 관리 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; looks like this:      <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph>      <ph id="ph3">```vb#   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph>       Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">없는 경우에는 <ph id="ph1">`Synchronized`</ph> 메서드는 컬렉션의 예상된 사용량에 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;다음과 같은: <ph id="ph2">```c#   ICollection MyCollection =...    lock(MyCollection.SyncRoot) {     // Some operation on the collection, which is now thread safe.    }   ```</ph> <ph id="ph3">```vb#   Dim myCollection as New ICollection()    SyncLock myCollection.SyncRoot     ' Some operation on the collection, which is now thread safe.    End SyncLock   ```</ph> 컬렉션 열거는 기본적으로 스레드로부터 안전한 프로시저가 아닙니다.      &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">열거 동안 스레드 보안을 보장 하려면 전체 열거 동안 컬렉션을 잠글 하거나 다른 스레드에서 변경 된 내용으로 인해 발생 한 예외를 catch 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>[Visual Basic, C#]       The following example shows how to lock the collection using the &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt; during the entire enumeration:      <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph>      <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph></source>
          <target state="translated">[Visual Basic, C#]       사용 하 여 컬렉션을 잠그는 방법을 보여 주는 다음 예제는 &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;열거 하는 동안: <ph id="ph1">```c#   ICollection myCollection = new ICollection();    lock(myCollection.SyncRoot) {     foreach (Object item in myCollection) {     // Insert your code here.     }    }   ```</ph> <ph id="ph2">```vb#   Dim myCollection As New ICollection()    Dim item As Object    SyncLock myCollection.SyncRoot     For Each item In myCollection     ' Insert your code here.     Next item    End SyncLock   ```</ph>       &lt;/xref:System.Collections.ICollection.SyncRoot%2A&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the &lt;xref:System.Collections.ICollection&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.ICollection&gt;.&lt;/xref:System.Collections.ICollection&gt; 에 대 한 액세스를 동기화 하는 데 사용할 수 있는 개체</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Adds an item to the list.</source>
          <target state="translated">목록에 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The item to add to the list.</source>
          <target state="translated">목록에 추가할 항목입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The position into which the new item was inserted.</source>
          <target state="translated">새 항목이 삽입 된 위치입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Determines whether the list contains a specified value.</source>
          <target state="translated">지정된 된 값 목록에 포함 되는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">등호를 사용 하 여이 메서드는.NET Framework 2.0 부터는 및 항목 여부를 결정 하기 위해 컬렉션에 있는 개체의 CompareTo 메서드 존재 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행 Equals 및 CompareTo를 사용 하 여 컬렉션의 개체에 항목 매개 변수는 메서드.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The value to locate in the list.</source>
          <target state="translated">목록에서 찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the value is found in the list, otherwise <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>값이 있으면 목록에서 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Determines the index of a specified item in the list.</source>
          <target state="translated">목록에서 지정된 된 항목의 인덱스를 결정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">등호를 사용 하 여이 메서드는.NET Framework 2.0 부터는 및 항목 여부를 결정 하기 위해 컬렉션에 있는 개체의 CompareTo 메서드 존재 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">.NET Framework의 이전 버전에서는이 확인 작업을 수행 Equals 및 CompareTo를 사용 하 여 컬렉션의 개체에 항목 매개 변수는 메서드.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The item to locate in the list.</source>
          <target state="translated">목록에서 찾을 항목입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if found in the list; otherwise, -1.</source>
          <target state="translated">인덱스 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 목록에 고, 그렇지 않으면-1입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">지정된 된 인덱스에는 목록에 항목을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the list, then <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is appended to the end.</source>
          <target state="translated">경우 <ph id="ph1">`index`</ph> 다음 목록에 있는 항목의 수와 같으면 <bpt id="p1">*</bpt>값<ept id="p1">*</ept> 끝에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based index at which value should be inserted.</source>
          <target state="translated">값을 삽입할&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The item to insert into the list.</source>
          <target state="translated">목록에 삽입할 항목입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the &lt;xref:System.Collections.IList&gt; has a fixed size.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 &lt;xref:System.Collections.IList&gt;크기가 고정된 되어 있습니다.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">컬렉션 크기가 고정된 된 컬렉션을 만든 후 기존 요소를 수정할 수 있습니다에 추가 하거나 제거할 요소의 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IList&gt; has a fixed size; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Collections.IList&gt;고정 되어 고, 그렇지 않으면 크기가 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the &lt;xref:System.Collections.IList&gt; is read-only.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부는 &lt;xref:System.Collections.IList&gt;읽기 전용입니다.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">읽기 전용 컬렉션에서는 컬렉션을 만든 후에 추가, 제거 또는 요소를 수정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the &lt;xref:System.Collections.IList&gt; is read-only; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 &lt;xref:System.Collections.IList&gt;읽기 전용, 되지 않았으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 요소를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">이 속성은 다음 구문을 사용 하 여 컬렉션의 특정 요소를 액세스 하는 기능 제공: <ph id="ph1">`myCollection[index]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">가져오거나 설정할 요소의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 요소입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph>유효한 인덱스가 아닌는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The property is set and the &lt;xref:System.Collections.IList&gt; is read-only.</source>
          <target state="translated">속성을 설정 및 &lt;xref:System.Collections.IList&gt;읽기 전용입니다.&lt;/xref:System.Collections.IList&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> from the list.</source>
          <target state="translated">맨 처음 발견 되는 특정 제거 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">value</ph> <ept id="p1">&lt;/code&gt;</ept> 목록에서 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">목록 처럼 연속 된 요소 컬렉션에서 제거 된 요소 다음에 오는 요소는 빈된 자리를 차지 하도록 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">컬렉션은 지정 된 경우 이동 되는 요소의 인덱스도 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`value`</ph> to remove from the list.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 를 목록에서 제거 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>