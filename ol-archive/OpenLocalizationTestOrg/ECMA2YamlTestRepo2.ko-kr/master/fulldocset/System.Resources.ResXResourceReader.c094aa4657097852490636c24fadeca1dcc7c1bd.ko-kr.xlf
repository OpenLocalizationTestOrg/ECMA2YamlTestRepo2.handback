<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da606a29a4467e72153d05a9c78e2c37306a9290</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Resources.ResXResourceReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54c99a79f009a689ff73d773291f984535f9abd0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">534901f3b60bc42e555caf5fb8d4c3817e738bdc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
          <target state="translated">XML 리소스 (.resx) 파일 및 스트림을 열거 하 고 순차 리소스 이름 / 값 쌍을 읽습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ResXResourceReader class provides a default implementation of the &lt;xref:System.Resources.IResourceReader&gt; interface that reads resource information in an XML format.</source>
          <target state="translated">ResXResourceReader 클래스의 기본 구현을 제공는 &lt;xref:System.Resources.IResourceReader&gt;XML 형식의 리소스 정보를 읽는 인터페이스입니다.&lt;/xref:System.Resources.IResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read resource information from a binary resource format, use the &lt;xref:System.Resources.ResourceReader&gt; class.</source>
          <target state="translated">리소스에서 정보를 읽는 이진 리소스 형식, &lt;xref:System.Resources.ResourceReader&gt;클래스&lt;/xref:System.Resources.ResourceReader&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the ResXResourceReader class to enumerate resources in .resx files by traversing the dictionary enumerator (&lt;xref:System.Collections.IDictionaryEnumerator&gt;) that is returned by the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method.</source>
          <target state="translated">ResXResourceReader 클래스를 사용 하 여 사전 열거자를 이동 하 여.resx 파일에서 리소스를 열거할 (&lt;xref:System.Collections.IDictionaryEnumerator&gt;)에서 반환 하는 &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;메서드.&lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You call the methods provided by &lt;xref:System.Collections.IDictionaryEnumerator&gt; to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
          <target state="translated">제공 하는 메서드를 호출 하면 &lt;xref:System.Collections.IDictionaryEnumerator&gt;다음 리소스를 이동 하 고 이름 및.resx 파일의 각 리소스의 값을 읽을.&lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class provides two enumerators.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The ResXResourceReader 클래스는 두 명의 열거자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method returns an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object; we recommend that you use this method to enumerate resources.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;메서드가 반환 되는 &lt;xref:System.Collections.IDictionaryEnumerator&gt;않으면이 메서드를 사용 하 여 리소스를 열거 하는 것이 좋습니다.&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt; method is an explicit interface implementation that returns an &lt;xref:System.Collections.IEnumerator&gt; object; we do not recommend its use.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;메서드는 명시적 인터페이스 구현을 반환 하는 &lt;xref:System.Collections.IEnumerator&gt;; 개체의 사용 권장 하지는 않습니다.&lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt; method to obtain an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;메서드는 &lt;xref:System.Collections.IDictionaryEnumerator&gt;.resx 파일에 리소스를 열거 하는 데 사용 되는 개체입니다.&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">예제에 포함 되어는 <ph id="ph1">`CreateResourceFile`</ph> 루틴을 필요한 리소스 파일을 만듭니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept><ept id="p3">]</ept>       If the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is <ph id="ph1">`true`</ph>, the value of the &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; property is a &lt;xref:System.Resources.ResXDataNode&gt; object rather than the resource value.</source>
          <target state="translated"><bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb)</ept> <ept id="p3">]</ept> 경우는 &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;속성은 <ph id="ph1">`true`</ph>의 값은 &lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;속성은 한 &lt;xref:System.Resources.ResXDataNode&gt;리소스 값이 아닌 개체.&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;  </target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes a resource item's comment available from the &lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">이렇게 하면 리소스 항목의 주석에서 사용할 수는 &lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property to <ph id="ph1">`true`</ph> and enumerates the resources in a .resx file,       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept><ept id="p3">]</ept>       If &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; is <ph id="ph2">`true`</ph>, the &lt;xref:System.Resources.ResXDataNode&gt; items in the enumeration can be either:      -   Named resources along with their data.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;속성을 <ph id="ph1">`true`</ph> .resx 파일의 리소스를 열거 하 고 <bpt id="p1">[!code-cs</bpt> <bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb)</ept> <ept id="p3">]</ept> 경우 &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;은 <ph id="ph2">`true`</ph>, &lt;xref:System.Resources.ResXDataNode&gt;열거형에서 항목 중 하나를 지정할 수 있습니다:-데이터와 함께 리소스인.&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;   &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이 경우에 &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;속성은 <ph id="ph1">`null`</ph>.&lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Named resources along with the name of the file that contains the resource data.</source>
          <target state="translated">-리소스 데이터를 포함 하는 파일의 이름과 함께 명명 된 리소스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt; property returns a &lt;xref:System.Resources.ResXFileRef&gt; object that provides information about the resource, including its filename.</source>
          <target state="translated">이 경우는 &lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;속성에서 반환 된 &lt;xref:System.Resources.ResXFileRef&gt;해당 파일 이름을 포함 하는 리소스에 대 한 정보를 제공 하는 개체.&lt;/xref:System.Resources.ResXFileRef&gt; &lt;/xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If relative file names are used, you should always set the &lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt; property to provide a reference point for the relative file path.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;상대 파일 경로 대 한 참조 점을 제공 하는 속성&lt;/xref:System.Resources.ResXResourceReader.BasePath%2A&gt; 을 항상 설정 해야 상대 파일 이름을 사용 하는 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a &lt;xref:System.Resources.ResXResourceSet&gt; object and call its <ph id="ph1">`GetString`</ph> and <ph id="ph2">`GetObject`</ph> methods.</source>
          <target state="translated">인스턴스화할 수 해당 리소스를 열거 하는 것이 아니라.resx 파일에서 명명 된 리소스를 검색 하려는 경우는 &lt;xref:System.Resources.ResXResourceSet&gt;개체와 호출 해당 <ph id="ph1">`GetString`</ph> 및 <ph id="ph2">`GetObject`</ph> 메서드.&lt;/xref:System.Resources.ResXResourceSet&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ResXResourceReader class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The ResXResourceReader 클래스에는 링크 요청 및 모든 멤버에 적용 되는 클래스 수준에서 상속 요청이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Security.SecurityException&gt; exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A &lt;xref:System.Security.SecurityException&gt;직접 실행 호출자 또는 파생된 클래스 중 하나에 완전 신뢰 권한이 없는 경우 예외가 throw 됩니다.&lt;/xref:System.Security.SecurityException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified stream.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 스트림에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">리소스를 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified &lt;xref:System.IO.TextReader&gt;.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> &lt;xref:System.IO.TextReader&gt;.&lt;/xref:System.IO.TextReader&gt; 지정된에 대 한 클래스</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A text input stream that contains resources.</source>
          <target state="translated">리소스를 포함 하는 텍스트 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class for the specified resource file.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 리소스 파일에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The path of the resource file to read.</source>
          <target state="translated">읽을 리소스 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an input stream and a type resolution service.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 입력 스트림과 형식 확인 서비스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">리소스를 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">형식 리소스에 지정 된 이름을 확인 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a stream and an array of assembly names.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스트림과 어셈블리 이름 배열을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
          <target state="translated">리소스를 포함 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.AssemblyName&gt;하나 이상의 어셈블리를 지정 하는 개체입니다.&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">어셈블리는 리소스의 형식 이름을 실제 형식으로 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a text stream reader and a type resolution service.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 텍스트 스트림 판독기와 형식 확인 서비스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A text stream reader that contains resources.</source>
          <target state="translated">리소스를 포함 하는 텍스트 스트림 판독기입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">형식 리소스에 지정 된 이름을 확인 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a &lt;xref:System.IO.TextReader&gt; object and an array of assembly names.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 사용는 &lt;xref:System.IO.TextReader&gt;개체 및 어셈블리 이름의 배열입니다.&lt;/xref:System.IO.TextReader&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An object used to read resources from a stream of text.</source>
          <target state="translated">텍스트의 스트림에서 리소스를 읽는 데 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.AssemblyName&gt;하나 이상의 어셈블리를 지정 하는 개체입니다.&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">어셈블리는 리소스의 형식 이름을 실제 형식으로 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using a file name and a type resolution service.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 파일 이름과 형식 확인 서비스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">리소스를 포함 하는 XML 리소스 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">형식 리소스에 지정 된 이름을 확인 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using an XML resource file name and an array of assembly names.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 XML 리소스 파일 이름 및 어셈블리 이름 배열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">리소스를 포함 하는 XML 리소스 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.AssemblyName&gt;하나 이상의 어셈블리를 지정 하는 개체입니다.&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">어셈블리는 리소스의 형식 이름을 실제 형식으로 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 지정 된 상대 파일 경로 대 한 기본 경로 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The BasePath property is used to resolve relative file path references that are assigned to the &lt;xref:System.Resources.ResXFileRef.FileName%2A&gt; property of &lt;xref:System.Resources.ResXFileRef&gt; objects.</source>
          <target state="translated">BasePath 속성에 할당 된 상대 파일 경로 참조를 확인을 사용 하 여 &lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;속성 &lt;xref:System.Resources.ResXFileRef&gt;개체.&lt;/xref:System.Resources.ResXFileRef&gt; &lt;/xref:System.Resources.ResXFileRef.FileName%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, its value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;, and relative file path references are resolved in relationship to the current directory returned by the &lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">기본적으로 해당 값은 &lt;xref:System.String.Empty?displayProperty=fullName&gt;에서 반환 되 고 현재 디렉터리에 대 한 관계에서 상대 파일 경로 참조를 확인 하 고는 &lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt; &lt;/xref:System.String.Empty?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set this property before you begin enumerating resources.</source>
          <target state="translated">리소스 열거를 시작 하기 전에이 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object, yields an absolute path to a resource file.</source>
          <target state="translated">경로, 앞에 추가 하는 경우 상대 파일 경로에 지정 된 한 <bpt id="p1">&lt;xref href="System.Resources.ResXFileRef"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체, 절대 경로를 리소스 파일을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
          <target state="translated">집합 작업에서 XML 리소스 파일에 아직 액세스 및 사용 하기 때문에 값을 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling Close enables the resources used by the &lt;xref:System.Resources.ResXResourceReader&gt; to be reallocated for other purposes.</source>
          <target state="translated">닫기 사용을 사용 하는 리소스 호출에서 &lt;xref:System.Resources.ResXResourceReader&gt;다른 용도에 다시 할당 됩니다.&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Close, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">닫기에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called by either the &lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; method or the &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">이 메서드 중 하나에서 호출할 수 있습니다는 &lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;메서드 또는 &lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;메서드.&lt;/xref:System.Object.Finalize%2A?displayProperty=fullName&gt; &lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt; invokes this method with the <ph id="ph1">`disposing`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;이 메서드를 호출는 <ph id="ph1">`disposing`</ph> 매개 변수 설정 <ph id="ph2">`true`</ph>합니다.&lt;/xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>&lt;xref:System.Object.Finalize%2A&gt; invokes this method with <ph id="ph1">`disposing`</ph> set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">&lt;xref:System.Object.Finalize%2A&gt;이 메서드를 호출 <ph id="ph1">`disposing`</ph> 로 설정 <ph id="ph2">`false`</ph>합니다.&lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this &lt;xref:System.Resources.ResXResourceReader&gt; references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수는 <ph id="ph2">`true`</ph>,이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 &lt;xref:System.Resources.ResXResourceReader&gt;참조.&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드 호출에서 <ph id="ph1">`Dispose`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This member overrides the &lt;xref:System.Object.Finalize*&gt; method.</source>
          <target state="translated">이 멤버는 재정의 &lt;xref:System.Object.Finalize*&gt;메서드.&lt;/xref:System.Object.Finalize*&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 내용이 XML 리소스 파일 형식인 문자열을 읽도록 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML 리소스 형식 정보를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">리소스를 읽는 하는 개체는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object to resolve type names specified in a resource.</source>
          <target state="translated">새로 만듭니다. <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 초기화 콘텐츠가 XML 리소스 파일의 형태로 문자열을 읽고 사용 하는 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체는 리소스에 지정 된 형식 이름을 확인 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML 리소스 형식 정보를 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">형식 리소스에 지정 된 이름을 확인 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">리소스를 읽는 하는 개체는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Creates a new <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of &lt;xref:System.Reflection.AssemblyName&gt; objects to resolve type names specified in a resource.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 및 콘텐츠가 XML 리소스 파일의 형태로 문자열을 읽고 하 고 배열을 사용 하 여 초기화 합니다 &lt;xref:System.Reflection.AssemblyName&gt;개체는 리소스에 지정 된 형식 이름을 확인할 수 있습니다.&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A string whose contents are in the form of an XML resource file.</source>
          <target state="translated">콘텐츠가 XML 리소스 파일의 형태로 문자열.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Reflection.AssemblyName&gt; objects that specifies one or more assemblies.</source>
          <target state="translated">배열을 &lt;xref:System.Reflection.AssemblyName&gt;하나 이상의 어셈블리를 지정 하는 개체입니다.&lt;/xref:System.Reflection.AssemblyName&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">어셈블리는 리소스의 형식 이름을 실제 형식으로 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
          <target state="translated">리소스를 읽는 하는 개체는 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">fileContents</ph> <ept id="p1">&lt;/code&gt;</ept> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재는 열거자를 반환 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetEnumerator method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">XML 리소스 (.resx) 스트림 또는 관련 된 현재 문자열에서 이름/값 쌍을 검색 하는 GetEnumerator 메서드가 &lt;xref:System.Resources.ResXResourceReader&gt;개체입니다.&lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetEnumerator, the resource items are retrieved as &lt;xref:System.Resources.ResXDataNode&gt; objects.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;속성이 <ph id="ph1">`true`</ph> 리소스 항목으로 검색 됩니다 GetEnumerator를 호출 하기 전에 &lt;xref:System.Resources.ResXDataNode&gt;개체.&lt;/xref:System.Resources.ResXDataNode&gt; &lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, all resource nodes are returned regardless of type.</source>
          <target state="translated">이 경우 모든 리소스 노드 유형에 관계 없이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재에 대 한 열거자 <bpt id="p1">&lt;xref href="System.Resources.ResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
          <target state="translated">현재 XML 리소스 파일 또는 스트림에서 디자인 타임 속성을 검색할 수 있는 사전 열거자를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
          <target state="translated">리소스는 리소스 파일 또는 스트림에서에 이름/값 쌍으로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
          <target state="translated">메타 데이터를를 호출 하는 디자인 타임 속성에 리소스 파일 또는 스트림의 런타임 데이터 리소스와 함께 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetMetadataEnumerator method provides an &lt;xref:System.Collections.IDictionaryEnumerator&gt; object that can retrieve the metadata from the resource file or stream associated with the current &lt;xref:System.Resources.ResXResourceReader&gt; object.</source>
          <target state="translated">GetMetadataEnumerator 메서드는 제공 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;리소스 파일 또는 스트림에서 현재와 관련 된 메타 데이터를 검색할 수 있는 개체 &lt;xref:System.Resources.ResXResourceReader&gt;개체입니다.&lt;/xref:System.Resources.ResXResourceReader&gt; &lt;/xref:System.Collections.IDictionaryEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt; property is set to <ph id="ph1">`true`</ph> before you call GetMetadataEnumerator, no resource nodes are retrieved.</source>
          <target state="translated">그러나 경우는 &lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;속성이 <ph id="ph1">`true`</ph> GetMetadataEnumerator를 호출 하기 전에 리소스 노드가 검색 됩니다.&lt;/xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An enumerator for the metadata in a resource.</source>
          <target state="translated">리소스의 메타 데이터에 대 한 열거자입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재는 열거자를 반환 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">이 멤버에 대 한 참조는 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Resources.ResXResourceReader&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Collections.IEnumerable&gt;인터페이스.&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enumerate the resources in a .resx file, we recommend that you call the &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt; method, and then call the <ph id="ph1">`MoveNext`</ph> method on the returned &lt;xref:System.Collections.IDictionaryEnumerator&gt; object.</source>
          <target state="translated">호출 하는 좋습니다는.resx 파일의 리소스를 열거 하는 &lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;메서드를 호출 합니다는 <ph id="ph1">`MoveNext`</ph> 메서드 반환 된 &lt;xref:System.Collections.IDictionaryEnumerator&gt;개체입니다.&lt;/xref:System.Collections.IDictionaryEnumerator&gt; &lt;/xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">XML 리소스 (.resx) 스트림 또는 관련 된 현재 문자열에서 이름/값 쌍을 반복할 수 있는 열거자 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Resources.ResXResourceReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> method.</source>
          <target state="translated">이 멤버에 대 한 참조는 <ph id="ph1">&amp;lt;</ph>xref:System.IDisposable.Dispose%2A?displayProperty=fullName<ph id="ph2">&amp;gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Resources.ResXResourceReader&gt; instance is cast to an &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Resources.ResXResourceReader&gt;인스턴스로 캐스팅 되는 &lt;xref:System.IDisposable&gt;인터페이스.&lt;/xref:System.IDisposable&gt; &lt;/xref:System.Resources.ResXResourceReader&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects are returned when reading the current XML resource file or stream.</source>
          <target state="translated">지정 하는 값을 가져오거나 설정 합니다. 여부 <bpt id="p1">&lt;xref href="System.Resources.ResXDataNode"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 XML 리소스 파일 또는 스트림에서 읽을 때 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the UseResXDataNodes property before you begin enumerating resources.</source>
          <target state="translated">리소스 열거를 시작 하기 전에 UseResXDataNodes 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본적으로 해당 값은 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if resource data nodes are retrieved; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if resource data nodes are ignored.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>리소스 데이터 노드가 검색 되는 경우 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 리소스 데이터 노드가 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
          <target state="translated">집합 작업에서 리소스 파일 또는 스트림에 대 한 열거자 이미 열려 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>