<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4efe615752d1a39875c2ed028d1725e0da5152f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.IDbCommand.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3880d7e6162de8fcecb9655bddf833ce4bff4e68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6d95fc4a322c4fc782df15286820356375c65e6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated">데이터 원본에 연결 되어 있는 동안 실행 되 고 관계형 데이터베이스에 액세스 하는.NET Framework 데이터 공급자에 의해 구현 되는 SQL 문을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The IDbCommand interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</source>
          <target state="translated">IDbCommand 인터페이스에는 데이터 원본에서 실행 되는 SQL 문을 나타내는 명령 클래스를 구현 하 상속 클래스 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Command classes, see <bpt id="p1">[</bpt>Executing a Command<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">명령 클래스에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>명령 실행<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application does not create an instance of the IDbCommand interface directly, but creates an instance of a class that inherits IDbCommand.</source>
          <target state="translated">응용 프로그램을 직접 IDbCommand 인터페이스의 인스턴스를 만들지 않는 있지만 IDbCommand 상속 하는 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit IDbCommand must implement all inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">IDbCommand 상속 된 클래스는 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the IDbCommand interface defines the &lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt; method.</source>
          <target state="translated">예를 들어 IDbCommand 인터페이스 정의 &lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;메서드.&lt;/xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In turn, the &lt;xref:System.Data.SqlClient.SqlCommand&gt; class inherits this method, and also defines the &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt; method.</source>
          <target state="translated">차례로 &lt;xref:System.Data.SqlClient.SqlCommand&gt;이 메서드를 상속 하 고 정의 하는 클래스는 &lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;메서드.&lt;/xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt; &lt;/xref:System.Data.SqlClient.SqlCommand&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Attempts to cancels the execution of an <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">실행을 취소 하려고 시도 <bpt id="p1">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is nothing to cancel, nothing happens.</source>
          <target state="translated">가 취소할 경우 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">그러나 처리 중인 명령을 취소 동작이 실패 하는 경우 예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the text command to run against the data source.</source>
          <target state="translated">데이터 원본에 대해 실행할 텍스트 명령을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.IDbCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, set the CommandText property to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbCommand.CommandType%2A&gt;속성이 <ph id="ph1">`StoredProcedure`</ph>, 저장된 프로시저의 이름으로 CommandText 속성을 설정 합니다.&lt;/xref:System.Data.IDbCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command will call this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">이 명령은 Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The text command to execute.</source>
          <target state="translated">실행할 텍스트 명령입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열 ("").</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">명령을 실행 하는 시도 종료 하 고 오류를 생성 하기 전 대기 시간을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The time (in seconds) to wait for the command to execute.</source>
          <target state="translated">시간 (초) 명령이 실행 될 때까지 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default value is 30 seconds.</source>
          <target state="translated">기본값은 30 초입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The property value assigned is less than 0.</source>
          <target state="translated">할당 된 속성 값이 0 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Indicates or specifies how the &lt;xref:System.Data.IDbCommand.CommandText*&gt; property is interpreted.</source>
          <target state="translated">나타내거나 지정 방법을 &lt;xref:System.Data.IDbCommand.CommandText*&gt;속성을 해석 합니다.&lt;/xref:System.Data.IDbCommand.CommandText*&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the CommandType property to <ph id="ph1">`StoredProcedure`</ph>, you should set the &lt;xref:System.Data.IDbCommand.CommandText%2A&gt; property to the name of the stored procedure.</source>
          <target state="translated">CommandType 속성을 설정 하면 <ph id="ph1">`StoredProcedure`</ph>를 설정 해야는 &lt;xref:System.Data.IDbCommand.CommandText%2A&gt;속성을 저장된 프로시저의 이름입니다.&lt;/xref:System.Data.IDbCommand.CommandText%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Text" name="Text" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Data.IDbConnection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this instance of the <bpt id="p2">&lt;xref href="System.Data.IDbCommand"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Data.IDbConnection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의이 인스턴스에서 사용 되는 <bpt id="p2">&lt;xref href="System.Data.IDbCommand"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The connection to the data source.</source>
          <target state="translated">데이터 원본에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Creates a new instance of an <bpt id="p1">&lt;xref href="System.Data.IDbDataParameter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Data.IDbDataParameter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When inheriting from &lt;xref:System.Data.IDbCommand&gt;, a .NET Framework data provider implements a strongly-typed version of CreateParameter.</source>
          <target state="translated">상속 된 경우 &lt;xref:System.Data.IDbCommand&gt;, CreateParameter 한 강력한 형식의 버전을 구현 하는.NET Framework 데이터 공급자.&lt;/xref:System.Data.IDbCommand&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref uid="langword_csharp_IDbDataParameter" name="IDbDataParameter" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_IDbDataParameter" name="IDbDataParameter" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement against the <bpt id="p1">&lt;xref uid="langword_csharp_Connection" name="Connection" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of a .NET Framework data provider, and returns the number of rows affected.</source>
          <target state="translated">에 대해 SQL 문을 실행은 <bpt id="p1">&lt;xref uid="langword_csharp_Connection" name="Connection" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 개체는.NET Framework 데이터 공급자와 영향을 받는 행 수가 반환 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a &lt;xref:System.Data.DataSet&gt; by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">(예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기), 카탈로그 작업을 수행할 수 또는 사용 하지 않고 데이터베이스의 데이터를 변경 하는 ExecuteNonQuery를 사용할 수 있습니다는 &lt;xref:System.Data.DataSet&gt;UPDATE, INSERT 또는 DELETE 문을 실행 하 여.&lt;/xref:System.Data.DataSet&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">ExecuteNonQuery 모든 행을 반환 하지 않는 있지만 모든 출력 매개 변수 또는 반환 값 매개 변수에 매핑된 데이터로 채워집니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문에 대 한 반환 값은 명령에 의해 영향을 받는 행 수입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">문의 다른 모든 형식에 대 한 반환 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The number of rows affected.</source>
          <target state="translated">영향을 받는 행 수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The connection does not exist.</source>
          <target state="translated">연결이 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-or-       The connection is not open.</source>
          <target state="translated">-또는-는 연결이 열려 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Executes the &lt;xref:System.Data.IDbCommand.CommandText<bpt id="p1">*</bpt>&gt; against the &lt;xref:System.Data.IDbCommand.Connection<ept id="p1">*</ept>&gt; and builds an <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">실행의 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에 대해는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;와 빌드는 <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Executes the &lt;xref:System.Data.IDbCommand.CommandText<bpt id="p1">*</bpt>&gt; against the &lt;xref:System.Data.IDbCommand.Connection<ept id="p1">*</ept>&gt;, and builds an <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> using one of the <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">실행의 &lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt;에 대해는 &lt;&gt; &lt;/&gt; <ept id="p1">*</ept>&gt;, 및 빌드는 <bpt id="p2">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 중 하나를 사용 하 여는 <bpt id="p3">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller must call the &lt;xref:System.Data.IDbConnection.Open%2A&gt; method of the &lt;xref:System.Data.IDbCommand.Connection%2A&gt; property.</source>
          <target state="translated">호출자에 게 호출 해야 합니다는 &lt;xref:System.Data.IDbConnection.Open%2A&gt;의 메서드는 &lt;xref:System.Data.IDbCommand.Connection%2A&gt;속성.&lt;/xref:System.Data.IDbCommand.Connection%2A&gt; &lt;/xref:System.Data.IDbConnection.Open%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Data.IDbCommand.CommandType%2A&gt; property is set to <ph id="ph1">`StoredProcedure`</ph>, the &lt;xref:System.Data.IDbCommand.CommandText%2A&gt; property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbCommand.CommandType%2A&gt;속성이 <ph id="ph1">`StoredProcedure`</ph>, &lt;xref:System.Data.IDbCommand.CommandText%2A&gt;저장된 프로시저의 이름으로 속성을 설정 해야 합니다.&lt;/xref:System.Data.IDbCommand.CommandText%2A&gt; &lt;/xref:System.Data.IDbCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes this stored procedure when you call &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;.</source>
          <target state="translated">명령이 &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;.&lt;/xref:System.Data.IDbCommand.ExecuteReader%2A&gt; 를 호출 하는 경우이 저장된 프로시저 실행</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Use &lt;xref:System.Data.CommandBehavior&gt; to retrieve large values and binary data.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용 &lt;xref:System.Data.CommandBehavior&gt;큰 값 및 이진 데이터를 검색 합니다.&lt;/xref:System.Data.CommandBehavior&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an &lt;xref:System.OutOfMemoryException&gt; might occur and the connection will be closed.</source>
          <target state="translated">그렇지 않은 경우는 &lt;xref:System.OutOfMemoryException&gt;발생할 수 있습니다 및 연결이 닫힙니다.&lt;/xref:System.OutOfMemoryException&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the &lt;xref:System.Data.IDataReader&gt; is in use, the associated &lt;xref:System.Data.IDbConnection&gt; is busy serving the &lt;xref:System.Data.IDataReader&gt;.</source>
          <target state="translated">&lt;xref:System.Data.IDataReader&gt;연결 된 &lt;xref:System.Data.IDbConnection&gt;사용 중 &lt;xref:System.Data.IDataReader&gt;.&lt;/xref:System.Data.IDataReader&gt; 처리는&lt;/xref:System.Data.IDbConnection&gt; 사용 중인&lt;/xref:System.Data.IDataReader&gt; 동안</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>While in this state, no other operations can be performed on the &lt;xref:System.Data.IDbConnection&gt; other than closing it.</source>
          <target state="translated">이 상태 동안에 없는 다른 작업을 수행할 수 &lt;xref:System.Data.IDbConnection&gt;닫지 합니다.&lt;/xref:System.Data.IDbConnection&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the case until the &lt;xref:System.Data.IDataReader.Close%2A&gt; method of the DataReader is called.</source>
          <target state="translated">이 때 까지는 &lt;xref:System.Data.IDataReader.Close%2A&gt;DataReader의 메서드가 호출 됩니다.&lt;/xref:System.Data.IDataReader.Close%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the DataReader is created with &lt;xref:System.Data.CommandBehavior&gt; set to <ph id="ph1">`CloseConnection`</ph>, closing the DataReader closes the connection automatically.</source>
          <target state="translated">DataReader로 만들어 &lt;xref:System.Data.CommandBehavior&gt;로 설정 <ph id="ph1">`CloseConnection`</ph>, DataReader 닫기 자동으로 연결을 닫습니다.&lt;/xref:System.Data.CommandBehavior&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.CommandBehavior"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Executes the query, and returns the first column of the first row in the resultset returned by the query.</source>
          <target state="translated">쿼리를 실행 하 고 쿼리에 의해 반환 된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Extra columns or rows are ignored.</source>
          <target state="translated">추가 열 이나 행은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">ExecuteScalar 메서드를 사용 하 여 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires less code than using the &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt; method, and then performing the operations necessary to generate the single value using the data returned by an &lt;xref:System.Data.IDataReader&gt;.</source>
          <target state="translated">이렇게 하려면 &lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt; &lt;xref:System.Data.IDataReader&gt;.&lt;/xref:System.Data.IDataReader&gt; 반환 되는 데이터를 사용 하 여 다음 단일 값을 생성 하는 데 필요한 작업을 수행 하 고 메서드를&lt;/xref:System.Data.IDbCommand.ExecuteReader%2A&gt; 사용 하 여 보다 적은 코드가 필요</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical ExecuteScalar query can be formatted as in the following C# example:      <ph id="ph1">```   CommandText = "select count(*) as NumberOfRegions from region";   Int32 count = (int) ExecuteScalar();   ```</ph>       If the first column of the first row in the result set is not found, a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) is returned.</source>
          <target state="translated">다음 C# 예제와 같이 일반적인 ExecuteScalar 쿼리 서식을 지정할 수 있습니다: <ph id="ph1">```   CommandText = "select count(*) as NumberOfRegions from region";   Int32 count = (int) ExecuteScalar();   ```</ph> 결과 집합의 첫 번째 행의 첫 번째 열이 발견 되지 않으면 null 참조 하는 경우 (<ph id="ph2">`Nothing`</ph> Visual basic에서)이 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value in the database is <ph id="ph1">`null`</ph>, the query returns <ph id="ph2">`DBNull.Value`</ph>.</source>
          <target state="translated">데이터베이스의 값이 <ph id="ph1">`null`</ph>, 쿼리에서 반환 <ph id="ph2">`DBNull.Value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The first column of the first row in the resultset.</source>
          <target state="translated">결과 집합의 첫 번째 행의 첫 번째 열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Data.IDataParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Gets the <bpt id="p1">&lt;xref href="System.Data.IDataParameterCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The parameters of the SQL statement or stored procedure.</source>
          <target state="translated">SQL 문 또는 저장된 프로시저의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Creates a prepared (or compiled) version of the command on the data source.</source>
          <target state="translated">데이터 원본에 명령의 준비 된 (또는 컴파일된) 버전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Data.IDbCommand.CommandType%2A&gt; property is set to <ph id="ph1">`TableDirect`</ph>, Prepare does nothing.</source>
          <target state="translated">경우는 &lt;xref:System.Data.IDbCommand.CommandType%2A&gt;속성이 <ph id="ph1">`TableDirect`</ph>, 준비는 아무 작업도 수행 합니다.&lt;/xref:System.Data.IDbCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.Data.IDbCommand.CommandType%2A&gt; is set to <ph id="ph1">`StoredProcedure`</ph>, the call to Prepare should succeed, although it may result in a no-op.</source>
          <target state="translated">경우 &lt;xref:System.Data.IDbCommand.CommandType%2A&gt;로 설정 된 <ph id="ph1">`StoredProcedure`</ph>, 아니요-운영 될 수 있지만 준비에 대 한 호출 성공 해야&lt;/xref:System.Data.IDbCommand.CommandType%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</source>
          <target state="translated">서버에서 자동으로 다시 사용할 수 있도록; 필요에 따라 계획 캐시 따라서이 메서드를 호출할 클라이언트 응용 프로그램에서 직접 않아도가 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Data.OleDb.OleDbCommand.Connection<bpt id="p1">*</bpt>&gt; is not set.       -or-       The &lt;xref:System.Data.OleDb.OleDbCommand.Connection<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.OleDb.OleDbConnection.Open*&gt;.</source>
          <target state="translated">&lt;&gt; &lt;/&gt; <bpt id="p1">*</bpt>&gt; 설정 되지 않았습니다.       -or-       The &lt;&gt;<ept id="p1">*</ept>&gt; is not &lt;xref:System.Data.OleDb.OleDbConnection.Open*&gt;.&lt;/xref:System.Data.OleDb.OleDbConnection.Open*&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets or sets the transaction within which the <bpt id="p1">&lt;xref uid="langword_csharp_Command" name="Command" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of a .NET Framework data provider executes.</source>
          <target state="translated">트랜잭션을 가져오거나는 <bpt id="p1">&lt;xref uid="langword_csharp_Command" name="Command" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .NET Framework 데이터 공급자의 개체를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>the <bpt id="p1">&lt;xref uid="langword_csharp_Command" name="Command" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object of a .NET Framework data provider executes.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_Command" name="Command" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> .NET Framework 데이터 공급자의 개체를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets how command results are applied to the <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> when used by the &lt;xref:System.Data.IDataAdapter.Update*&gt; method of a <bpt id="p2">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">명령 결과가 적용 되는 방식을 가져오거나는 <bpt id="p1">&lt;xref href="System.Data.DataRow"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 사용 하는 경우는 &lt;xref:System.Data.IDataAdapter.Update*&gt;의 메서드는 <bpt id="p2">&lt;xref href="System.Data.Common.DbDataAdapter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.Data.IDataAdapter.Update*&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_Both" name="Both" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> unless the command is automatically generated.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_Both" name="Both" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 명령이 자동으로 생성 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Then the default is <bpt id="p1">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_None" name="None" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The value entered was not one of the <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values.</source>
          <target state="translated">입력 한 값 중 하나 였습니다는 <bpt id="p1">&lt;xref href="System.Data.UpdateRowSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>