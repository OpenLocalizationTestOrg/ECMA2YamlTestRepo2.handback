<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8f167c5bd85da74ba7543126c3574e0e59fb876</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3348c470c7b262100a2e04c18a915767f9557e60</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e76821ed548ad37026a48d4f06e0bc1fee7636a1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Inserting"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 대 한 데이터를 제공는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Inserting"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSourceInsertEventArgs object is passed to any event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; event.</source>
          <target state="translated">LinqDataSourceInsertEventArgs 개체에 대 한 모든 이벤트 처리기에 전달 되는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt; property contains the data that will be inserted.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;속성 삽입 될 데이터를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the LinqDataSourceInsertEventArgs object to examine the data before the insert operation is executed in the data source.</source>
          <target state="translated">데이터 원본에서 삽입 작업이 실행 되기 전에 데이터를 검사할 수 LinqDataSourceInsertEventArgs 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then validate the data, examine validation errors from the data class, or change a value before the update.</source>
          <target state="translated">그런 다음 데이터 유효성 검사, 데이터 클래스의 유효성 검사 오류를 조사 하거나 변경할 수 있습니다는 값을 업데이트 하기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also cancel the insert operation.</source>
          <target state="translated">또한 삽입 작업을 취소할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object that represents the data source throws a validation exception before it inserts the data, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt; property contains an instance of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; class.</source>
          <target state="translated">데이터 소스를 나타내는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt; &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;클래스&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; 의 인스턴스를 포함 하는 속성&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt; 데이터를 삽입 하기 전에 유효성 검사 예외를 throw 하는 경우</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve all the validation exceptions through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt; property.</source>
          <target state="translated">통해 모든 유효성 검사 예외를 검색할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no validation exception is thrown, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt; property contains <ph id="ph1">`null`</ph>.</source>
          <target state="translated">유효성 검사 예외가 throw 되 면는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;속성 포함 <ph id="ph1">`null`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt; property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">유효성 검사 예외를 처리 하 고 예외를 다시 throw 하지 않을 경우에 설정 된 &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;속성을 <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An object that contains the data to insert.</source>
          <target state="translated">삽입할 데이터를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class and specifies the provided exception.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 및 제공 된 예외를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The exception that occurred when the data to insert was being validated.</source>
          <target state="translated">삽입할 데이터 유효성을 검사 하는 경우에 발생 한 예외입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets the exception that was thrown while the data was being validated before the insert operation.</source>
          <target state="translated">삽입 작업 전에 데이터 유효성을 검사 하는 동안 throw 된 예외를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation exception is thrown before the insert operation is performed, the exception is stored in the Exception property.</source>
          <target state="translated">삽입 작업을 수행 하기 전에 유효성 검사 예외가 throw 되 면 예외 Exception 속성에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; event, you can retrieve the exception through the Exception property.</source>
          <target state="translated">에 대 한 처리기에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;이벤트, 예외 속성을 통해 예외를 검색할 수 있습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The exception, if an error occurred; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">오류가 발생 하는 경우 해당 예외 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">예외가 처리 되었는지 여부와 그 해야 throw 되지 않도록 다시를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create event handlers for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; event to examine validation exceptions that occurred before the insert operation.</source>
          <target state="translated">에 대 한 이벤트 처리기를 만들 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;삽입 작업이 수행 되기 전에 발생 한 유효성 검사 예외를 확인 하려면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you handle the exception and do not want it to be thrown again, set the ExceptionHandled property to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">예외를 처리 하 고 다시 throw 하 여 원하지 않는 경우 ExceptionHandled 속성을 설정 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the ExceptionHandled property to <ph id="ph1">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">ExceptionHandled 속성을 설정 하지 않는 경우 <ph id="ph1">`true`</ph>, 예외 호출 스택에 있는 다음 이벤트 처리기에 전파 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the exception was handled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>예외가 처리 되었습니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the object that contains the data to insert.</source>
          <target state="translated">삽입할 데이터를 포함 하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The NewObject property contains the data that will be inserted into the data source.</source>
          <target state="translated">NewObject 속성은 데이터 소스에 삽입 될 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; event and retrieve the NewObject property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</source>
          <target state="translated">에 대 한 처리기를 만들기는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;이벤트 및 데이터를 확인 하기 위해 NewObject 속성 검색을 포함 하 고 데이터를 변경 하거나 데이터 작업이 실행 되기 전에 삽입 작업을 취소 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The NewObject property returns an object of type &lt;xref:System.Object&gt;.</source>
          <target state="translated">NewObject 속성 &lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 형식의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can cast this object to the type of the class that represents the data.</source>
          <target state="translated">이 개체를 데이터를 나타내는 클래스의 형식으로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An object that contains the data to insert.</source>
          <target state="translated">삽입할 데이터를 포함 하는 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>