<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44714c328c4f6172876bb2dd579fa225e1308a95</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Input.ICommandSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1474f8aa1565cf55e4de9dca7077de2255c4fa0e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0888d0ceb08e075fcbeb9986db011dc335c67b7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines an object that knows how to invoke a command.</source>
          <target state="translated">명령을 호출 하는 방법을 알고 있는 개체를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command source defines how a command is invoked by that particular object.</source>
          <target state="translated">명령 소스가 명령을 특정 개체에서 호출 하는 방법을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a &lt;xref:System.Windows.Controls.Button&gt; is associated with a command, the command is invoked when the &lt;xref:System.Windows.Controls.Button&gt; is clicked.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Windows.Controls.Button&gt;명령, 명령 연결 되어 때 호출 되는 &lt;xref:System.Windows.Controls.Button&gt;를 클릭 합니다.&lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</source>
          <target state="translated">명령 소스가 일반적으로 비활성화 됩니다 현재 명령 대상에서 연결 된 명령을 실행할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a &lt;xref:System.Windows.Controls.MenuItem&gt; associated with the &lt;xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt; command will gray itself out when the &lt;xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt; command cannot execute on the current command target.</source>
          <target state="translated">예를 들어 한 &lt;xref:System.Windows.Controls.MenuItem&gt;연관는 &lt;xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt;명령 회색으로 표시 될 때는 &lt;xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt;현재 명령 대상에서 명령을 실행할 수 없습니다.&lt;/xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt; &lt;/xref:System.Windows.Input.ApplicationCommands.Paste%2A&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, a command source will listen to the &lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt; event on the command.</source>
          <target state="translated">명령 소스를 수신 하는 일반적으로 &lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;명령에는 이벤트입니다.&lt;/xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This informs the command source when conditions change on the command target, such as loss of keyboard focus.</source>
          <target state="translated">이 키보드 포커스를 손실 등 명령 대상에서 조건이 변경 되 면 명령 소스를 알립니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command source can then query the command using the &lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt; method.</source>
          <target state="translated">명령 소스가 사용 하 여 명령을 확인할 수 있습니다는 &lt;xref:System.Windows.Input.ICommand.CanExecute%2A&gt;메서드.&lt;/xref:System.Windows.Input.ICommand.CanExecute%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of the classes in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> that implement ICommandSource are: &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;, &lt;xref:System.Windows.Controls.MenuItem&gt;, and &lt;xref:System.Windows.Documents.Hyperlink&gt;.</source>
          <target state="translated">클래스 중 일부 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]</ph> ICommandSource은 구현 하는: &lt;xref:System.Windows.Controls.Primitives.ButtonBase&gt;, &lt;xref:System.Windows.Controls.MenuItem&gt;, 및 &lt;xref:System.Windows.Documents.Hyperlink&gt;.&lt;/xref:System.Windows.Documents.Hyperlink&gt; &lt;/xref:System.Windows.Controls.MenuItem&gt; &lt;/xref:System.Windows.Controls.Primitives.ButtonBase&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> commanding system, the &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt; property on a ICommandSource is only applicable when the &lt;xref:System.Windows.Input.ICommand&gt; is a &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 명령 시스템에서는 &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;속성에는 ICommandSource 인 적용 가능한 경우에 &lt;xref:System.Windows.Input.ICommand&gt;은 &lt;xref:System.Windows.Input.RoutedCommand&gt;.&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.ICommand&gt; &lt;/xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt; is set on a ICommandSource and the corresponding command is not a &lt;xref:System.Windows.Input.RoutedCommand&gt;, the command target is ignored.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;는 ICommandSource에 설정 되어 있으며 해당 명령이 없습니다는 &lt;xref:System.Windows.Input.RoutedCommand&gt;, 명령 대상이 무시 됩니다.&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the command that will be executed when the command source is invoked.</source>
          <target state="translated">명령 소스가 호출 될 때 실행할 명령을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The command that will be executed when the command source is invoked.</source>
          <target state="translated">명령 소스가 호출 될 때 실행 되는 명령입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Represents a user defined data value that can be passed to the command when it is executed.</source>
          <target state="translated">나타냅니다 사용자 실행 될 때 명령에 전달 될 수 있는 데이터 값을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, the CommandParameter is used to pass specific information to the command when it is executed.</source>
          <target state="translated">일반적으로 CommandParameter 실행 될 때 명령에 특정 정보를 전달 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of the data is defined by the command.</source>
          <target state="translated">데이터 형식은 명령에 의해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The command specific data.</source>
          <target state="translated">명령 별 데이터입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The object that the command is being executed on.</source>
          <target state="translated">명령이 실행 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> commanding system, the &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt; property on a &lt;xref:System.Windows.Input.ICommandSource&gt; is only applicable when the &lt;xref:System.Windows.Input.ICommand&gt; is a &lt;xref:System.Windows.Input.RoutedCommand&gt;.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]</ph> 명령 시스템에서는 &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;속성에는 &lt;xref:System.Windows.Input.ICommandSource&gt;인 적용 가능한 경우에 &lt;xref:System.Windows.Input.ICommand&gt;은 &lt;xref:System.Windows.Input.RoutedCommand&gt;.&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.ICommand&gt; &lt;/xref:System.Windows.Input.ICommandSource&gt; &lt;/xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt; is set on a &lt;xref:System.Windows.Input.ICommandSource&gt; and the corresponding command is not a &lt;xref:System.Windows.Input.RoutedCommand&gt;, the command target is ignored.</source>
          <target state="translated">경우는 &lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;에 설정 된 한 &lt;xref:System.Windows.Input.ICommandSource&gt;해당 명령이 않습니다는 &lt;xref:System.Windows.Input.RoutedCommand&gt;, 명령 대상이 무시 됩니다.&lt;/xref:System.Windows.Input.RoutedCommand&gt; &lt;/xref:System.Windows.Input.ICommandSource&gt; &lt;/xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used with a &lt;xref:System.Windows.Input.RoutedCommand&gt;, the command target is the object on which the &lt;xref:System.Windows.Input.CommandManager.Executed&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events are raised.</source>
          <target state="translated">와 함께 사용할 경우는 &lt;xref:System.Windows.Input.RoutedCommand&gt;, 명령 대상 개체를은 &lt;xref:System.Windows.Input.CommandManager.Executed&gt;및 &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;이벤트가 발생 합니다.&lt;/xref:System.Windows.Input.CommandManager.CanExecute&gt; &lt;/xref:System.Windows.Input.CommandManager.Executed&gt; &lt;/xref:System.Windows.Input.RoutedCommand&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the CommandTarget property is not set, the element with keyboard focus will be used as the target.</source>
          <target state="translated">CommandTarget 속성을 설정 하지 않으면 경우 키보드 포커스가 있는 요소를 대상으로 사용할 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object that the command is being executed on.</source>
          <target state="translated">명령이 실행 되는 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>