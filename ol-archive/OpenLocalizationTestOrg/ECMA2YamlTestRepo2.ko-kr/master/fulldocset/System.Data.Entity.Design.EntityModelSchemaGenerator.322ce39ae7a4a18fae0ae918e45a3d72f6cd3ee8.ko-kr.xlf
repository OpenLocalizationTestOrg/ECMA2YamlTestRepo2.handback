<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98a7522b6c7b28bc8e46043cdb0a357effc0a375</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.Entity.Design.EntityModelSchemaGenerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b34130f8bc0e0ec170dba87a8a610cd61179f343</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25bfed8ea3480588994b0f23aff7f23235a84542</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The class creates a default CCMapping between an EntityContainer in S space and an EntityContainer in C space.</source>
          <target state="translated">클래스는 C 공간에서 기본 CCMapping S 공간에서 EntityContainer 사이의 EntityContainer를 만듭니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The Mapping will be created based on the declared types of extents.</source>
          <target state="translated">매핑을 만들어질 수 기반 익스텐트 선언 된 형식에 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>So Inheritance does not work.</source>
          <target state="translated">따라서 상속 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>No content here will be updated; please do not add material here.</source>
          <target state="translated">이 콘텐츠 없음 업데이트 됩니다. 여기에 자료를 추가 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Entity.Design.EntityModelSchemaGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Entity.Design.EntityModelSchemaGenerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The storage model EntityContainer from which conceptual and mapping metadata is created.</source>
          <target state="translated">저장소 모델 EntityContainer 개념 및 매핑 메타 데이터 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Data.Entity.Design.EntityModelSchemaGenerator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Data.Entity.Design.EntityModelSchemaGenerator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The storage model EntityContainer from which conceptual and mapping metadata is created.</source>
          <target state="translated">저장소 모델 EntityContainer 개념 및 매핑 메타 데이터 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name for the conceptual model namespace.</source>
          <target state="translated">개념적 모델 네임 스페이스에 대 한 이름입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If this value is null, the storeEntityContainer name is used for the namespace name.</source>
          <target state="translated">이 값이 null 이면 네임 스페이스 이름에 대 한 storeEntityContainer 이름이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The EntityContainer name declared in the conceptual model.</source>
          <target state="translated">개념적 모델에 EntityContainer 이름을 선언 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Constructs an EntityModelGenerator</source>
          <target state="translated">EntityModelGenerator 생성</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The StoreItemCollection that contains an EntityContainer and other items to create the Model Metadata from.</source>
          <target state="translated">StoreItemCollection 들어 EntityContainer 및 기타 항목에서 모델 메타 데이터를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name to give the namespace.</source>
          <target state="translated">네임 스페이스에 부여할 이름입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If null, the name of the storeEntityContainer will be used.</source>
          <target state="translated">Null 인 경우는 storeEntityContainer 이름이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name to give the Model EntityContainer.</source>
          <target state="translated">모델 EntityContainer에 부여할 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If null, a modified version of the namespace of the of a type referenced in storeEntityContainer will be used.</source>
          <target state="translated">Null 인 경우, 수정된 된 버전의 네임 스페이스는 storeEntityContainer에서 참조 되는 형식 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the EdmItemCollection that was created by the GenerateMetadata method.</source>
          <target state="translated">GenerateMetadata 메서드에 의해 생성 된 EdmItemCollection을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EdmItemCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the conceptual schema definition language (CSDL).</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EdmItemCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개념 스키마 정의 언어 (CSDL)을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the conceptual model EntityContainer that was created by the GenerateMetadata method.</source>
          <target state="translated">EntityContainer GenerateMetadata 메서드에 의해 생성 된 개념적 모델을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntityContainer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that contains the conceptual model EntityContainer.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Metadata.Edm.EntityContainer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> EntityContainer 개념적 모델을 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the flag for generating foreign key properties in a conceptual model.</source>
          <target state="translated">개념적 모델에서 외래 키 속성을 생성 하기 위한 플래그를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the value of this property is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> then foreign key properties are generated in the conceptual model; otherwise foreign key properties are not generated in the conceptual model.</source>
          <target state="translated">이 속성의 값으로 설정 되 면 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 다음 개념적 모델에 외래 키 속성 생성 되므로 그렇지 않은 경우 개념적 모델에는 외래 키 속성 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Generates the conceptual model metadata information and returns any schema errors.</source>
          <target state="translated">개념적 모델 메타 데이터 정보를 생성 하 고 스키마 오류를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A collection of schema error objects.</source>
          <target state="translated">스키마 오류 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Generates the conceptual model metadata information and returns any schema errors.</source>
          <target state="translated">개념적 모델 메타 데이터 정보를 생성 하 고 스키마 오류를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</source>
          <target state="translated">Entity Framework의 대상된 버전에 해당 하는 EntityFrameworkVersions의 속성입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A collection of schema error objects.</source>
          <target state="translated">스키마 오류 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the PluralizationService value that indicates the service used when generating a model.</source>
          <target state="translated">모델을 생성할 때 사용 되는 서비스를 나타내는 PluralizationService 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.Entity.Design.PluralizationServices.PluralizationService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value that indicates the service used when generating a model.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.Entity.Design.PluralizationServices.PluralizationService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 모델을 생성할 때 사용 되는 서비스를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Writes the generated conceptual schema definition language (CSDL) to the specified file.</source>
          <target state="translated">지정된 된 파일에 생성 된 개념 스키마 정의 언어 (CSDL)을 씁니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of the output file.</source>
          <target state="translated">출력 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Writes the generated conceptual schema definition language (CSDL) to an XmlWriter object.</source>
          <target state="translated">XmlWriter 개체를 생성 된 개념 스키마 정의 언어 (CSDL)을 씁니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The XmlWriter to which the CSDL is written.</source>
          <target state="translated">CSDL을 쓸 XmlWriter입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Writes the generated mapping specification language (MSL) to the specified file.</source>
          <target state="translated">지정된 된 파일에 생성된 된 매핑 사양 언어 (MSL)을 씁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the output file.</source>
          <target state="translated">출력 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Writes the generated mapping specification language (MSL) to an XmlWriter object.</source>
          <target state="translated">XmlWriter 개체를 생성된 된 매핑 사양 언어 (MSL)을 씁니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The XmlWriter to which the MSL is written.</source>
          <target state="translated">MSL 기록 되는 XmlWriter입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>