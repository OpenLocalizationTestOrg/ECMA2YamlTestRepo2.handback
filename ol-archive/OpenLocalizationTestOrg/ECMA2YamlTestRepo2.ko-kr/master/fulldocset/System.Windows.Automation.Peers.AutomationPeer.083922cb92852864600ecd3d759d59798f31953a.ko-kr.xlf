<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac9b3d7d25843d98c9f37d1a6afe3ec5f7312598</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Automation.Peers.AutomationPeer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03c19e9737f874389728bf761d9eadcf1caa4cff</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a5771a919351d70e53f3fd52dcf480917ee7402</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class that exposes an element to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>.</source>
          <target state="translated">요소를 표시 하는 기본 클래스를 제공 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> queries the root of a <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> application about an element, the root returns the <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer for that element.</source>
          <target state="translated">때 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 쿼리의 루트는 <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 요소에 대 한 응용 프로그램 루트를 반환 된 <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 해당 요소에 대 한 피어입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The peer also responds to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> queries about its corresponding element.</source>
          <target state="translated">피어에도 응답 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 의 해당 요소에 대 한 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Provides initialization for base class values when they are called by the constructor of a derived class.</source>
          <target state="translated">파생된 클래스의 생성자가 호출 될 때 기본 클래스 값의 초기화를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is reported to the automation client as a source for all the events that come from this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 제공 되는 모든 이벤트에 대 한 소스로 자동화 클라이언트에 보고 되는 <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the source of events.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트의 원본인 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the accelerator key combinations for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">액셀러레이터 키와 연결 된 요소에 대 한 키 조합을 가져옵니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 피어입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The accelerator key.</source>
          <target state="translated">액셀러레이터 키입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application responds to keyboard events to provide shortcut key behavior, it should return a string that contains the keyboard shortcut combination.</source>
          <target state="translated">키보드 바로 가기 키 동작을 제공 하는 이벤트에 응답 하는 응용 프로그램 바로 가기 키 조합이 포함 하는 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for an element that can copy text to the clipboard, this attached property might be set to the value "CTRL+C".</source>
          <target state="translated">예를 들어 텍스트를 클립보드에 복사할 수 있는 요소를이 연결 된 속성 "CTRL + C" 값으로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The accelerator key.</source>
          <target state="translated">액셀러레이터 키입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the access key for the element that is associated with the automation peer.</source>
          <target state="translated">자동화 피어와 연결 된 요소에 대 한 선택 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The string that contains the access key.</source>
          <target state="translated">액세스 키가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access key (sometimes referred to as a keyboard shortcut or mnemonic) is a character in the text of a menu, menu item, or label of a control such as a button that invokes the associated menu function.</source>
          <target state="translated">선택 키 (바로 가기 키 또는 니모닉 라고도 함)은 메뉴, 메뉴 항목 또는 연결 된 메뉴 함수를 호출 하는 단추와 같은 컨트롤의 레이블 텍스트에는 문자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to provide a shortcut way to open the <ph id="ph1">`File`</ph> menu (for which the access key is typically F), an element might have this attached property set to "ALT+F".</source>
          <target state="translated">예를 들어, 열려면 바로 가기 방법을 제공 하는 <ph id="ph1">`File`</ph> 메뉴 (에 대 한 선택 키 일반적으로 F) 인 요소에는이 연결 된 속성을 "ALT + F"로 설정 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The string that contains the access key.</source>
          <target state="translated">액세스 키가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the control type for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">연결 된 요소에 대 한 컨트롤 형식을 가져옵니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 피어입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The control type.</source>
          <target state="translated">컨트롤 형식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The control type.</source>
          <target state="translated">컨트롤 형식입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt; of the element that is associated with the automation peer.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt;자동화 피어와 연결 되는 요소의.&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId*&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the automation identifier is the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt; property.</source>
          <target state="translated">자동화 식별자의 값은 고 &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;속성.&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that property is not set, the value is the &lt;xref:System.Windows.FrameworkElement.Name%2A&gt; property.</source>
          <target state="translated">해당 속성을 설정 하지 않으면이 값은 고 &lt;xref:System.Windows.FrameworkElement.Name%2A&gt;속성.&lt;/xref:System.Windows.FrameworkElement.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The identifier.</source>
          <target state="translated">식별자입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the automation identifier is the &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt; property.</source>
          <target state="translated">자동화 식별자의 값은 고 &lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;속성.&lt;/xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that property is not set, the value is the &lt;xref:System.Windows.FrameworkElement.Name%2A&gt; property.</source>
          <target state="translated">해당 속성을 설정 하지 않으면이 값은 고 &lt;xref:System.Windows.FrameworkElement.Name%2A&gt;속성.&lt;/xref:System.Windows.FrameworkElement.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The string that contains the identifier.</source>
          <target state="translated">식별자가 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that represents the screen coordinates of the element that is associated with the automation peer.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Rect"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 자동화 피어와 연결 된 요소의의 화면 좌표를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The bounding rectangle.</source>
          <target state="translated">경계 사각형입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The bounding rectangle.</source>
          <target state="translated">경계 사각형입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the collection of GetChildren elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</source>
          <target state="translated">UI 자동화 트리에서 자동화 피어의 직계 자식 요소로 표현 되는 GetChildren 요소의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The collection of child elements.</source>
          <target state="translated">자식 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetChildren*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection of child elements.</source>
          <target state="translated">자식 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a name that is used with <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, to differentiate the control that is represented by this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 함께 사용 되는 이름을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>으로 표현 되는 컨트롤을 식별 하기 위해 <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">클래스 이름입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets a <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the element that is associated with the automation peer that responds to a mouse click.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Point"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 마우스에 응답 하는 자동화 피어와 연결 하는 요소를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the element represents a &lt;xref:System.Windows.Controls.Button&gt;, a clickable point is any point in the visible client area of the &lt;xref:System.Windows.Controls.Button&gt; that issues the command that the button represents when it is clicked by the mouse.</source>
          <target state="translated">예를 들어, 요소를 나타내는 경우는 &lt;xref:System.Windows.Controls.Button&gt;, 클릭 가능한 지점이 표시 되는 클라이언트 영역에 모든 위치가 &lt;xref:System.Windows.Controls.Button&gt;마우스로 클릭할 때 단추가 나타내는 명령을 발급 하.&lt;/xref:System.Windows.Controls.Button&gt; &lt;/xref:System.Windows.Controls.Button&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A point in the clickable area of the element.</source>
          <target state="translated">요소의 클릭할 수 있는 영역에는 점입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A point within the clickable area of the element.</source>
          <target state="translated">요소의 클릭할 수 있는 영역 내에서 지점입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets text that describes the functionality of the control that is associated with the automation peer.</source>
          <target state="translated">자동화 피어와 연결 된 컨트롤의 기능을 설명 하는 텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned string typically provides the same text that is provided by the tooltip for the control.</source>
          <target state="translated">일반적으로 반환 된 문자열은 컨트롤에 대 한 도구 설명에서 제공 되는 동일한 텍스트를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The help text.</source>
          <target state="translated">도움말 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetHelpText*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The help text.</source>
          <target state="translated">도움말 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Tells <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> where in the <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> tree to place the <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> being hosted by a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> element.</source>
          <target state="translated">지시 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 의 위치는 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 트리를 배치할는 <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 의해 호스팅되는 <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the hosted <ph id="ph1">`hwnd`</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">`hwnd`</ph> objects.</source>
          <target state="translated">이 메서드가 반환 호스팅된 <ph id="ph1">`hwnd`</ph> 를 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 에 대 한 호스트 하는 컨트롤 <ph id="ph3">`hwnd`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that is associated with an element that immediately hosts an <ph id="ph1">`hwnd`</ph> must override this method.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;즉시를 호스트 하는 요소와 연결 된 프로그램 <ph id="ph1">`hwnd`</ph> 이 메서드를 재정의 해야 합니다.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method is not overridden, <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> places the <ph id="ph2">`hwnd`</ph> as a child element of the &lt;xref:System.Windows.Interop.HwndSource&gt; that hosts the whole application.</source>
          <target state="translated">이 메서드를 재정의 하지 않은 경우 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 배치는 <ph id="ph2">`hwnd`</ph> 의 자식 요소로 &lt;xref:System.Windows.Interop.HwndSource&gt;전체 응용 프로그램을 호스팅하는.&lt;/xref:System.Windows.Interop.HwndSource&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you want to override this default behavior and set <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> to position the hosted <ph id="ph2">`hwnd`</ph> parallel to the place where it is located in the <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> logical tree.</source>
          <target state="translated">이 기본 동작을 재정의 하 고 설정 하려면 일반적으로 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 에서 호스팅된 <ph id="ph2">`hwnd`</ph> 나란한 위치에 있는 위치는 <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 논리 트리 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Except in hosting scenarios, do not allow &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; types to override this method.</source>
          <target state="translated">호스팅 시나리오를 제외 하 고, 허용 되지 않는 &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;이 메서드를 재정의 하는 형식입니다.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to overriding this method, the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; types that are associated with an element that immediately hosts an <ph id="ph1">`hwnd`</ph> must return the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that is cast to &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt; in response to WM_GETOBJECT coming to the hosted <ph id="ph2">`hwnd`</ph>.</source>
          <target state="translated">이 메서드를 재정의 하는 것 외에도 &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;즉시를 호스트 하는 요소와 연결 된 형식을 <ph id="ph1">`hwnd`</ph> 반환 해야 합니다는 &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;로 캐스팅 되 &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;WM_GETOBJECT 호스팅된에 대 한 응답으로 <ph id="ph2">`hwnd`</ph>.&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt; &lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt; &lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a pointer to &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;, call &lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;.</source>
          <target state="translated">포인터를 얻으려면 &lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt; &lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;.&lt;/xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt; 호출&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This method returns the hosted <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <bpt id="p2">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">이 메서드가 반환 호스팅된 <bpt id="p1">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 를 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 에 대 한 호스트 하는 컨트롤 <bpt id="p2">&lt;xref uid="langword_csharp_hwnd" name="hwnd" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets text that conveys the visual status of the element that is associated with this automation peer.</source>
          <target state="translated">이 자동화 피어와 연결 되는 요소의 시각적 상태 전달 하는 텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the status of a messenger contact might be "Busy" or "Online".</source>
          <target state="translated">예를 들어 "사용 중" 또는 "Online" 메신저 담당자의 상태 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The status.</source>
          <target state="translated">상태입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The status.</source>
          <target state="translated">상태입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a string that describes what kind of item an object represents.</source>
          <target state="translated">개체 항목의 종류를 나타내는 설명 하는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of the returned string are "Mail Message", "Contact", and "Document".</source>
          <target state="translated">반환 된 문자열의 예로 "메일 메시지", "Contact" 및 "문서"입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The kind of item.</source>
          <target state="translated">항목의 종류입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetItemType*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The kind of item.</source>
          <target state="translated">항목의 종류입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> that is targeted to the element.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한는 <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 요소를 대상으로 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the element is a &lt;xref:System.Windows.Controls.ComboBox&gt; control, the GetLabeledBy method gets the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; for the &lt;xref:System.Windows.Controls.Label&gt; that is associated with the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">예를 들어 요소 &lt;xref:System.Windows.Controls.ComboBox&gt; &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; &lt;xref:System.Windows.Controls.Label&gt; &lt;xref:System.Windows.Controls.ComboBox&gt;.&lt;/xref:System.Windows.Controls.ComboBox&gt; 와 연결 된&lt;/xref:System.Windows.Controls.Label&gt; 대 한&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt; 컨트롤, GetLabeledBy 메서드 가져옵니다&lt;/xref:System.Windows.Controls.ComboBox&gt; 는</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following image, the &lt;xref:System.Windows.Controls.Label&gt; "Themes" is targeted to the &lt;xref:System.Windows.Controls.ComboBox&gt;; therefore the &lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt; for the &lt;xref:System.Windows.Controls.Label&gt; also targets the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Controls.Label&gt;"테마"은 대상으로 하는 &lt;xref:System.Windows.Controls.ComboBox&gt;따라서 &lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt; &lt;xref:System.Windows.Controls.Label&gt; &lt;xref:System.Windows.Controls.ComboBox&gt;.&lt;/xref:System.Windows.Controls.ComboBox&gt; 대상으로&lt;/xref:System.Windows.Controls.Label&gt; 하는 것에 대 한&lt;/xref:System.Windows.Controls.AccessText.AccessKey%2A&gt; &lt;/xref:System.Windows.Controls.ComboBox&gt; &lt;/xref:System.Windows.Controls.Label&gt; 다음 이미지</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user presses <bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>, the &lt;xref:System.Windows.Controls.ComboBox&gt; gets focus instead of the &lt;xref:System.Windows.Controls.Label&gt;.</source>
          <target state="translated">사용자가 누르면 <bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>, &lt;xref:System.Windows.Controls.ComboBox&gt;포커스 &lt;xref:System.Windows.Controls.Label&gt;.&lt;/xref:System.Windows.Controls.Label&gt; 대신&lt;/xref:System.Windows.Controls.ComboBox&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Display properties shows labeled by usage<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>Display properties shows labeled by usage<ept id="p2">")</ept>       The GetLabeledBy method for &lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt; returns the &lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt; for the corresponding &lt;xref:System.Windows.Controls.Label&gt;.</source>
          <target state="translated"><bpt id="p1">![</bpt>표시 속성 사용으로 레이블이 지정 된 표시<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>용도별로 레이블 지정 된 표시 속성을 보여 줍니다<ept id="p2">")</ept> &lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt; &lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;해당 &lt;xref:System.Windows.Controls.Label&gt;.&lt;/xref:System.Windows.Controls.Label&gt; &lt;/xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt; 반환&lt;/xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt; 에 대 한 The GetLabeledBy 메서드</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables an automation client to get the text string that describes the &lt;xref:System.Windows.Controls.ComboBox&gt;.</source>
          <target state="translated">이렇게 하면 &lt;xref:System.Windows.Controls.ComboBox&gt;.&lt;/xref:System.Windows.Controls.ComboBox&gt; 를 설명 하는 텍스트 문자열을 가져올 자동화 클라이언트</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the element that is targeted by the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상으로 지정 된 요소에 대 한는 <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the element that is targeted by the <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.LabelAutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대상으로 지정 된 요소에 대 한는 <bpt id="p2">&lt;xref href="System.Windows.Controls.Label"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets a human-readable localized string that represents the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> value for the control that is associated with this automation peer.</source>
          <target state="translated">나타내는 사람이 읽을 수 있는 지역화 된 문자열을 가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationControlType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 자동화 피어와 연결 된 컨트롤에 대 한 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The type of the control.</source>
          <target state="translated">컨트롤의 형식입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The type of the control.</source>
          <target state="translated">컨트롤의 형식입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets text that describes the element that is associated with this automation peer.</source>
          <target state="translated">이 자동화 피어와 연결 된 요소를 설명 하는 텍스트를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the derived implementation of &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;.</source>
          <target state="translated">이 메서드는 파생된 구현을 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;안내 하십시오.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt; 호출</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The name.</source>
          <target state="translated">이름입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetName*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can think of this value as a string that users use to explain the control they are referring to.</source>
          <target state="translated">이 값을 참조 하는 컨트롤을 설명 하기 위해 사용자가 사용 하는 문자열로 생각할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used by tools such as Narrator to tell the user what the control is.</source>
          <target state="translated">이 속성은 사용자에 게 알리고이 컨트롤의 내레이터와 같은 도구에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a button with a string "OK" should return "OK".</source>
          <target state="translated">예를 들어 문자열 "확인" 단추 "확인"을 반환 해야 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Windows.Controls.ListBox&gt; control that lets users select a color might return "Colors".</source>
          <target state="translated">A &lt;xref:System.Windows.Controls.ListBox&gt;컨트롤 색을 선택할 수 있는 "색"을 반환할 수 있습니다.&lt;/xref:System.Windows.Controls.ListBox&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make sure that you have assigned a name to all controls in the <ph id="ph1">[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]</ph> so that accessibility tools such as screen readers can refer to each control in a localized manner.</source>
          <target state="translated">모든 컨트롤에 이름을 지정 해야는 <ph id="ph1">[!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)]</ph> 내게 필요한 옵션 화면 판독기 지역화 된 방식으로 각 컨트롤을 참조할 수와 같은 도구에 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The string that contains the label.</source>
          <target state="translated">레이블이 포함 된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the explicit control orientation, if any.</source>
          <target state="translated">있는 경우 명시적으로 제어 방향을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The orientation of the control.</source>
          <target state="translated">컨트롤의 방향입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetOrientation*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The orientation of the control.</source>
          <target state="translated">컨트롤의 방향입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is the parent of this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이의 부모인 <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The parent automation peer.</source>
          <target state="translated">부모 자동화 피어입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the control pattern that is associated with the specified <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 연결 된 컨트롤 패턴을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A value from the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> enumeration.</source>
          <target state="translated">값은 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.PatternInterface"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 열거 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The object that implements the pattern interface; <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this peer does not support this interface.</source>
          <target state="translated">패턴 인터페이스를 구현 하는 개체 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 피어에서이 인터페이스를 지원 하지 않는 경우.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from the specified point.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 지점에서입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The position on the screen to get the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from.</source>
          <target state="translated">가져오려는 화면에서 위치는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified point.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 지점에 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called from &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint*&gt; 에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The position on the screen to get the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> from.</source>
          <target state="translated">가져오려는 화면에서 위치는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> at the specified point.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 지점에 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</source>
          <target state="translated">현재이 자동화 피어와 연결 된 요소에 키보드 포커스가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소에 키보드 포커스가 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element has keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소에 키보드 포커스가 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Triggers recalculation of the main properties of the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and raises the &lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt; notification to the Automation Client if the properties changed.</source>
          <target state="translated">기본 속성을 다시 계산는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가능성이 높아지고는 &lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;속성을 변경 하는 경우 자동화 클라이언트에 게 알림.&lt;/xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of main properties include, but are not limited to, &lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt; and &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;.</source>
          <target state="translated">주 속성의 예로 포함 되지만 &lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;및 &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;.&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt; &lt;/xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt; 에 제한 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, updates and notifications happen automatically after the update of the layout in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">일반적으로 업데이트 및 알림을 자동으로 발생에서 레이아웃 업데이트 후 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The update occurs in response to the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event.) Sometimes, however, properties change without raising the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event.</source>
          <target state="translated">(업데이트에 대 한 응답으로 발생는 &lt;xref:System.Windows.UIElement.LayoutUpdated&gt;이벤트입니다.)&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt; 그러나 경우에 따라 속성이 변경를 생성 하지 않고는 &lt;xref:System.Windows.UIElement.LayoutUpdated&gt;이벤트.&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the whole &lt;xref:System.Windows.Window&gt; moves, the &lt;xref:System.Windows.UIElement.LayoutUpdated&gt; event is not raised.</source>
          <target state="translated">예를 들어 전체 &lt;xref:System.Windows.Window&gt;를 이동 하는 &lt;xref:System.Windows.UIElement.LayoutUpdated&gt;이벤트가 발생 하지 않습니다.&lt;/xref:System.Windows.UIElement.LayoutUpdated&gt; &lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this example, the set of &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt; objects change because the objects are expressed in screen coordinates.</source>
          <target state="translated">이 예제에서는 집합이 &lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;개체 화면 좌표로 표현 하기 때문에 개체 변경.&lt;/xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the &lt;xref:System.Windows.Window&gt; must call InvalidatePeer on its peer on &lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;.</source>
          <target state="translated">따라서 &lt;xref:System.Windows.Window&gt;InvalidatePeer &lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;.&lt;/xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt; 피어에 호출 해야 합니다&lt;/xref:System.Windows.Window&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</source>
          <target state="translated">이 자동화 피어와 연결 된 요소의 사용자에 게 표시 되는 데이터를 포함 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>A content element contains data that is presented to the user.</source>
          <target state="translated">콘텐츠 요소는 사용자에 게 표시 되는 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a content element is an item in a list box or a button in a dialog box.</source>
          <target state="translated">콘텐츠 요소의 예에는 목록 상자에 있는 항목 또는 대화 상자에서 단추입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use non-content elements (which are also referred to as peripheral elements) to work with the content in a composite control.</source>
          <target state="translated">일반적으로 복합 컨트롤의 내용에 맞게 (은 또한 라고 하는 주변 요소) 콘텐츠가 아닌 요소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a non-content element is the button in a drop-down control.</source>
          <target state="translated">콘텐츠가 아닌 요소의 예에는 드롭다운 목록 컨트롤에서 단추입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a content element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>해당 요소가 콘텐츠 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsContentElement*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a content element; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>해당 요소가 콘텐츠 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/add/includes/tla2sharptla-gui-md.md)]</ph>.</source>
          <target state="translated">요소는 컨트롤의 논리 구조에 기여 하거나 대화형으로 사용자가 인식 하는지 여부를 나타내는 값을 가져옵니다는 <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/add/includes/tla2sharptla-gui-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>해당 요소가 컨트롤; 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsControlElement*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is a control; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>해당 요소가 컨트롤; 이면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element associated with this automation peer supports interaction.</source>
          <target state="translated">이 자동화 피어와 연관 된 요소의 상호 작용을 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element supports interaction; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가 상호 작용을 지 원하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsEnabled*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the automation peer can receive and send events; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>자동화 피어가 이벤트를 주고받을 수 있으면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> hosts <bpt id="p2">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>.</source>
          <target state="translated">여부 요소와 연결 된이 나타내는 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호스트 <bpt id="p2">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 에서 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two examples of elements that host <ph id="ph1">`hwnds`</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> are &lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt; and &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.</source>
          <target state="translated">호스트 하는 요소는 두 가지 예 <ph id="ph1">`hwnds`</ph> 에 <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph> 및 &lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt; &lt;xref:System.Windows.Controls.Primitives.Popup&gt;.&lt;/xref:System.Windows.Controls.Primitives.Popup&gt; &lt;/xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>These peers must also override &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;.</source>
          <target state="translated">이러한 피어의 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt; 도 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element that is associated with this <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> hosts <bpt id="p3">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 요소와 연결 된이 <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 호스트 <bpt id="p3">&lt;xref uid="langword_csharp_hwnds" name="hwnds" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 에 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]</ph>, 그렇지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element can accept keyboard focus.</source>
          <target state="translated">요소가 키보드 포커스를 받을 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can accept keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가 키보드 포커스를 받을 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element can accept keyboard focus; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가 키보드 포커스를 받을 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an element is off the screen.</source>
          <target state="translated">화면 밖 요소 인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not indicate whether the element is visible.</source>
          <target state="translated">이 속성은 요소의 표시 여부를 나타내지 않습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some circumstances, an element is on the screen but is still not visible.</source>
          <target state="translated">일부 경우에는 요소는 화면에 지만 표시 되어 있지 않으면입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the element is on the screen but obscured by other elements, it might not be visible.</source>
          <target state="translated">예를 들어 요소가 다른 요소에 의해 가려진 화면에 표시 되지 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">이 경우 메서드가 반환 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is not on the screen; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가 화면에 없는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is not on the screen; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가 화면에 없는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element contains sensitive content.</source>
          <target state="translated">요소에 중요 한 내용이 포함 되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element contains sensitive content such as a password; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소가; 암호 같은 중요 한 내용을 포함 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsPassword*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element contains sensitive content; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>중요 한 콘텐츠가; 요소에 포함 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</source>
          <target state="translated">이 피어와 연결 하는 요소를 양식에 채워야 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element must be completed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>요소; 완료 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm*&gt; 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the element is must be completed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>해당 요소가 있으면 완료 해야 합니다. 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the specified event.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 가 지정된 된 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you call this method before creating the &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt; that raises the event.</source>
          <target state="translated">일반적으로이 메서드를 만들기 전에 호출 된 &lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;이벤트를 발생 시키는.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer&gt;</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a performance measure because if <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> does not listen for the event, it does not make sense to create a peer to raise one.</source>
          <target state="translated">때문에이 메서드는 한 성능 측정 하는 경우 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 수신 대기 하지 않습니다는 이벤트에 대 한 수를 하나를 발생 시키는 피어를 만드는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  This method is static and only answers if a delegate listens for the specified event in <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>, not for an event on a specific element.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt;이 메서드는 정적이 고 대리자에 지정 된 이벤트를 수신 하는 경우에 응답 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>아닌에 특정 요소에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> can create broadcast listeners; therefore the per-element information is irrelevant.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph>브로드캐스트 수신기를 만들 수 있습니다. 따라서 요소 마다 정보는 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One of the enumeration values.</source>
          <target state="translated">열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_boolean" name="boolean" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the event.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_boolean" name="boolean" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타내는 여부 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]</ph> 가 이벤트를 수신 대기 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets an <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> proxy.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 프록시입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The class that implements <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">구현 하는 클래스 <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> proxy.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 프록시입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.Automation.Provider.IRawElementProviderSimple"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 <bpt id="p2">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The automation peer.</source>
          <target state="translated">자동화 피어입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The proxy.</source>
          <target state="translated">프록시입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Called by the <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to raise the <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">에 의해 호출 된 <bpt id="p1">&lt;xref href="System.Windows.Automation.Peers.AutomationPeer"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 시키려면는 <bpt id="p2">&lt;xref href="System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Raises an automation event.</source>
          <target state="translated">자동화 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The event identifier.</source>
          <target state="translated">이벤트 식별자입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Raises an event to notify the automation client of a changed property value.</source>
          <target state="translated">변경된 된 속성 값의 자동화 클라이언트에 알리는 이벤트를를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The property that changed.</source>
          <target state="translated">변경 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The previous value of the property.</source>
          <target state="translated">속성의 이전 값입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The new value of the property.</source>
          <target state="translated">속성의 새 값입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Synchronously resets the tree of child elements by calling &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt;.</source>
          <target state="translated">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore*&gt; 를 호출 하 여 자식 요소의 트리를 동기적으로 다시 설정</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method in certain peer implementations that change the set of child elements in response to a call to a control pattern interface.</source>
          <target state="translated">컨트롤 패턴 인터페이스에 대 한 호출에 대 한 응답에서 자식 요소의 집합을 변경 하는 특정 피어 구현에서이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;, which can change the child elements of the peer by moving the &lt;xref:System.Windows.Documents.TextRange&gt;.</source>
          <target state="translated">예로 &lt;xref:System.Windows.Automation.Provider.ITextProvider&gt; &lt;xref:System.Windows.Documents.TextRange&gt;.&lt;/xref:System.Windows.Documents.TextRange&gt; 이동 하 여 피어의 자식 요소를 변경할 수 있는&lt;/xref:System.Windows.Automation.Provider.ITextProvider&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Sets the keyboard focus on the element that is associated with this automation peer.</source>
          <target state="translated">이 자동화 피어와 연결 된 요소에 키보드 포커스를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt;.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 &lt;xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt;.&lt;/xref:System.Windows.Automation.Peers.AutomationPeer.SetFocus*&gt; 의해 호출 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>