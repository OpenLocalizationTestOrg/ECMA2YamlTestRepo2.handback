<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6198f22ac0097445a3d5600b17591f7b628a1160</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">18f2a956b7af30b3e9f831c8c4eb571942f9ab2d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54d762bd4dcca5ee8f124e0bba1cf88ebdfe4eda</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Retrieves exports from a part.</source>
          <target state="translated">파트에서 내보내기를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class, optionally in thread-safe mode.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 스레드 안전 모드에서 필요에 따라 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object must be thread-safe; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 고, 그렇지 않으면 스레드로부터 안전한 개체 여야 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified composition options.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 컴퍼지션 옵션을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Options that specify the behavior of this provider.</source>
          <target state="translated">이 공급자의 동작을 지정 하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Executes composition on the specified batch.</source>
          <target state="translated">지정된 된 일괄 처리에 대해 컴퍼지션을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The batch to execute composition on.</source>
          <target state="translated">일괄 처리에서 실행 하는 컴퍼지션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The container is already in the process of composing.</source>
          <target state="translated">컨테이너 구성을 수행 중 이미입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">현재 인스턴스에서 사용 하는 모든 리소스를 해제는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; 를 사용 하 여 작업을 마쳤으면</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드는 &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;불안정 한 상태가.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; so the garbage collector can reclaim the memory that the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;가비지 수집기는 메모리를 회수할 수 있도록 하는 &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;차지한.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; &lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Always call <ph id="ph2">`Dispose`</ph> before you release your last reference to the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 항상 호출 <ph id="ph2">`Dispose`</ph> &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; 에 대 한 마지막 참조를 해제 하기 전에</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; object's <ph id="ph1">`Finalize`</ph> method.</source>
          <target state="translated">사용 중인 리소스가 가비지 수집기 호출할 때까지 해제 되지 것입니다 그렇지 않은 경우는 &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;개체의 <ph id="ph1">`Finalize`</ph> 메서드.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and optionally releases the managed resources.</source>
          <target state="translated">사용 하는 관리 되지 않는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되는 리소스를 선택적으로 해제 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to release both managed and unmanaged resources; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to release only unmanaged resources.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>관리 되는 관리 되지 않는 리소스만 해제 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 만 관리 되지 않는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets a collection of all exports in this provider that match the conditions of the specified import.</source>
          <target state="translated">이 공급자에서 지정된 된 가져오기의 조건과 일치 하는 모든 내보내기의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementers should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</source>
          <target state="translated">구현자는 카디널리티 관련 불일치를 오류로 취급 하지 않아야 하 고 카디널리티 관련 불일치에 대 한 예외를 throw 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the import requests exactly one export and the provider has no matching exports or more than one, the GetExportsCore method should return an empty &lt;xref:System.Collections.Generic.IEnumerable%601&gt; collection of &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt; objects.</source>
          <target state="translated">예를 들어 가져오기가 정확히 한 내보내기 요청 하는 경우 일치 하는 내보내기가 없습니다 또는 하나 이상의 공급자가 GetExportsCore 메서드 반환 해야 하면 빈 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;컬렉션 &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;개체.&lt;/xref:System.ComponentModel.Composition.Primitives.Export&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Primitives.ImportDefinition"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that defines the conditions of the <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to get.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Primitives.ImportDefinition"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 조건을 정의 하는 <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 얻으려고 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The composition transaction to use, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to disable transactional composition.</source>
          <target state="translated">를 사용 하려면 컴퍼지션 트랜잭션 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 트랜잭션 컴퍼지션을 사용 하지 않으려면입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A collection of all exports in this provider that match the specified conditions.</source>
          <target state="translated">이 공급자에서 지정한 조건과 일치 하는 모든 내보내기의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the export provider that provides access to additional <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">에 대 한 액세스를 제공 하는 내보내기 공급자 추가 가져오거나 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property must be set before accessing any methods on the &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.</source>
          <target state="translated">모든 메서드에 있는 &lt;xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt;.&lt;/xref:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider&gt; 에 액세스 하기 전에이 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A provider that provides the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> access to <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> objects.</source>
          <target state="translated">제공 하는 공급자는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에 대 한 액세스 <bpt id="p2">&lt;xref href="System.ComponentModel.Composition.Primitives.Export"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> has been disposed of.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 삭제 되었습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This property has already been set.</source>
          <target state="translated">이 속성이 이미 설정 되었습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>-or-       The methods on the <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> have already been accessed.</source>
          <target state="translated">-또는-메서드는 <bpt id="p1">&lt;xref href="System.ComponentModel.Composition.Hosting.ComposablePartExportProvider"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이미 액세스 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>