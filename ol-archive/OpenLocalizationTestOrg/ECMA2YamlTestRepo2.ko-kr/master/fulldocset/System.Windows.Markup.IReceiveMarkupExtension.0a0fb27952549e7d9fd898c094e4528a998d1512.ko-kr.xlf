<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7e536ec7fc4ccbcc90abed36fdeb93a3a29ea8f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Markup.IReceiveMarkupExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9597fe7ddc0abb362224875d337415ec46726ca4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1474a3c7fa23a9a0d0ba3449e0da6f6e3367c707</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</source>
          <target state="translated">출력이 대상 속성은 다른 속성 형식, 태그 확장에서 형식을 선언 식 (또는 다른 클래스)를 받을 수 있는 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks.</source>
          <target state="translated">에 사용 하지 마십시오 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> 구현의 설명을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]</ph>, IReceiveMarkupExtension 때마다 XAML 구문 분석 하는 동안 ו 태그 확장으로 XAML에 액세스할 수 있는 멤버가 서로 다른 코드를 입력 하는 형식을 허용 하는 WPF 관련 기술 했습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>,이 인터페이스는 더 이상 태그 확장 서비스를 받을 수는 방법에 대 한.NET Framework XAML 서비스 구현으로 대체 또는 형식 태그 확장 setter 특정 논리를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; attributes applied.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]</ph> 구현에서는 형식에서 다른 방법으로 아니라 태그 확장으로 속성을 설정할 때 특수 한 처리를 수행 하려면 유형을로 정의 되어야 합니다 &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;적용 된 특성.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The attribute specifies a callback, which is typically defined as a private member of the type.</source>
          <target state="translated">특성은 일반적으로 형식의 private 멤버로 정의 하는 콜백을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In infrastructure implementations of WPF classes, most cases where &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt; is applied reference a <ph id="ph1">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.</source>
          <target state="translated">WPF 클래스의 인프라 구현에서는 대부분의 경우 &lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;는 참조를 적용 한 <ph id="ph1">`ReceiveMarkupExtension`</ph> 이전에이 인터페이스를 구현한 하지만 이제 대신 메서드는 콜백을 통해 컨텍스트를 사용 합니다.&lt;/xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Provides the handling for markup extensions that provide property values.</source>
          <target state="translated">속성 값을 제공 하는 태그 확장에 대 한 처리를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> implementations; see Remarks in <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 사용 하지 마십시오 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> 구현의의 설명을 참조 <bpt id="p1">&lt;xref href="System.Windows.Markup.IReceiveMarkupExtension"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the target property.</source>
          <target state="translated">대상 속성의 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The markup extension instance of the incoming data.</source>
          <target state="translated">들어오는 데이터의 태그 확장 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can provide additional services that should be performed when processing the markup extension data for a property value.</source>
          <target state="translated">속성 값에 대 한 태그 확장 데이터를 처리할 때 수행 해야 하는 추가 서비스를 제공할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>