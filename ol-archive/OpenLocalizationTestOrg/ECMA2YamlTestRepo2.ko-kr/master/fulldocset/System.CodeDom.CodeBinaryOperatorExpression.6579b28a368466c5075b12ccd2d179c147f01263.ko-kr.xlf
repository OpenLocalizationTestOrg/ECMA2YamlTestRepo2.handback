<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afe58757fc1670f55254eda535175f681dd19a08</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.CodeDom.CodeBinaryOperatorExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79c08f02d6fc62e8cbc44a25ec9b735c5df71004</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86aaf55e6106b3fe7a8c0814ecca7904183eb5aa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an expression that consists of a binary operation between two expressions.</source>
          <target state="translated">두 식 간에 이항 연산의 구성 되는 식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>CodeBinaryOperatorExpression can be used to represent code expressions that include a binary operator.</source>
          <target state="translated">CodeBinaryOperatorExpression 이항 연산자를 포함 하는 코드 식을 나타내는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some examples of binary operators are equality (<ph id="ph1">`==`</ph>), addition (<ph id="ph2">`+`</ph>), and bitwise (<ph id="ph3">`|`</ph>) operators.</source>
          <target state="translated">이항 연산자의 예로 같음 (<ph id="ph1">`==`</ph>), 더하기 (<ph id="ph2">`+`</ph>), 비트 및 (<ph id="ph3">`|`</ph>) 연산자.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.CodeDom.CodeBinaryOperatorType&gt; enumeration represents a set of basic, commonly used binary operators that are supported in many languages.</source>
          <target state="translated">&lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;열거형에는 여러 언어에서 지원 되는 기본, 자주 사용 되는 이항 연산자의 집합을 나타냅니다.&lt;/xref:System.CodeDom.CodeBinaryOperatorType&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class using the specified parameters.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 지정된 된 매개 변수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the left of the operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연산자의 왼쪽에 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> indicating the type of operator.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연산자의 유형을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> on the right of the operator.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 연산자의 오른쪽에 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the code expression on the left of the operator.</source>
          <target state="translated">연산자의 왼쪽에 코드 식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the left operand.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 왼쪽된 피연산자를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets the operator in the binary operator expression.</source>
          <target state="translated">이항 연산자 식의 연산자를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A binary operator performs an evaluation on two operands.</source>
          <target state="translated">이항 연산자는 두 개의 피연산자에 평가 수행합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some examples of binary operators are equality (<ph id="ph1">`==`</ph>), addition (<ph id="ph2">`+`</ph>), and bitwise (<ph id="ph3">`|`</ph>) operators.</source>
          <target state="translated">이항 연산자의 예로 같음 (<ph id="ph1">`==`</ph>), 더하기 (<ph id="ph2">`+`</ph>), 비트 및 (<ph id="ph3">`|`</ph>) 연산자.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many commonly used binary operators can be found in the &lt;xref:System.CodeDom.CodeBinaryOperatorType&gt; enumeration.</source>
          <target state="translated">자주 사용 되는 많은 이항 연산자에서 찾을 수 있습니다는 &lt;xref:System.CodeDom.CodeBinaryOperatorType&gt;열거형.&lt;/xref:System.CodeDom.CodeBinaryOperatorType&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the type of operator in the expression.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeBinaryOperatorType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 식에서 연산자의 형식을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the code expression on the right of the operator.</source>
          <target state="translated">연산자의 오른쪽에 코드 식을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that indicates the right operand.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.CodeDom.CodeExpression"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 오른쪽 피연산자를 나타내는입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>