<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1de68d54f496c5247c15cb046f8da4f71e412ec0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Net.Configuration.HttpListenerElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0837e8679eca0098dd19df6b2509380d67b8f7f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59edbbb1e332212a1ef8b10439ccbd713e604ef6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the HttpListener element in the configuration file.</source>
          <target state="translated">구성 파일에서 HttpListener 요소를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the default timeout elements used for an <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">Timeout 요소에 사용 되는 기본 가져옵니다는 <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerTimeoutsElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">Returns <bpt id="p1">&lt;xref href="System.Net.Configuration.HttpListenerTimeoutsElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The timeout elements used for an <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 대 한 사용 되는 시간 제한 요소는 <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates if <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses the raw unescaped URI instead of the converted URI.</source>
          <target state="translated">여부를 나타내는 값을 가져옵니다 <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변환된 URI 대신 원시 언 이스케이프 된 URI를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UnescapeRequestUrl property indicates if &lt;xref:System.Net.HttpListener&gt; uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</source>
          <target state="translated">UnescapeRequestUrl 속성은 표시 하는 경우 &lt;xref:System.Net.HttpListener&gt;원시 언 이스케이프 된 URI를 사용 하 여 모든 퍼센트 인코딩 값이 변환 되 고 다른 정규화 단계가 수행 되는 변환 된 URI 대신.&lt;/xref:System.Net.HttpListener&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a &lt;xref:System.Net.HttpListener&gt; instance receives a request through the <ph id="ph1">`http.sys`</ph> service, it creates an instance of the URI string provided by <ph id="ph2">`http.sys`</ph>, and exposes it as the &lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">경우는 &lt;xref:System.Net.HttpListener&gt;인스턴스 통해 요청을 받을 <ph id="ph1">`http.sys`</ph> 에서 제공 하 고 URI 문자열의 인스턴스를 만들고 서비스를 <ph id="ph2">`http.sys`</ph>,으로 노출 된 &lt;xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName&gt; &lt;/xref:System.Net.HttpListener&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service exposes two request URI strings:      -   Raw URI      -   Converted URI       The raw URI is the &lt;xref:System.Uri?displayProperty=fullName&gt; provided in the request line of a HTTP request:       <ph id="ph2">`GET /path/`</ph>       <ph id="ph3">`Host: www.contoso.com`</ph>       The raw URI provided by <ph id="ph4">`http.sys`</ph> for the request mentioned above, is "/path/".</source>
          <target state="translated"><ph id="ph1">`http.sys`</ph> 서비스는 두 요청 URI 문자열을 노출:-원시 URI-변환 URI의 원시 URI는는 &lt;xref:System.Uri?displayProperty=fullName&gt;HTTP 요청의 요청 줄에 제공 된: <ph id="ph2">`GET /path/`</ph> <ph id="ph3">`Host: www.contoso.com`</ph> 에서 제공 된 URI의 원시 <ph id="ph4">`http.sys`</ph> 위에서 언급 한 요청은 "/" (경로 /.       &lt;/xref:System.Uri?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This represents the string following the HTTP verb as it was sent over the network.</source>
          <target state="translated">이 네트워크를 통해 전송 된 HTTP 동사를 다음 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`http.sys`</ph> service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</source>
          <target state="translated"><ph id="ph1">`http.sys`</ph> 을 전달 해야 하는 원본 서버에서 요청을 확인 하려면 호스트 헤더 및 서비스는 HTTP 요청에서에서 제공 하는 URI를 사용 하 여 요청에 제공 된 정보에서 변환된 된 URI를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is done by comparing the information from the request with a set of registered URI prefixes.</source>
          <target state="translated">이 등록 된 URI 접두사를 사용 하 여 요청에서 정보를 비교 하 여 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HTTP Server SDK documentation refers to this converted URI as the <bpt id="p1">[</bpt>HTTP_COOKED_URL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=166108)</ept> structure.</source>
          <target state="translated">HTTP 서버 SDK 설명서 참조로 변환 된이 URI는 <bpt id="p1">[</bpt>HTTP_COOKED_URL<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=166108)</ept> 구조입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done.</source>
          <target state="translated">등록 된 URI 접두사를 사용 하 여 요청을 비교할 수 있도록 요청에 일부 정규화를 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the sample above the converted URI would be as follows:       <ph id="ph1">`http://www.contoso.com/path/`</ph>       The <ph id="ph2">`http.sys`</ph> service combines the &lt;xref:System.Uri.Host%2A?displayProperty=fullName&gt; property value and the string in the request line to create a converted URI.</source>
          <target state="translated">위의 샘플 변환 된 URI는 다음과 같은 것에 대 한: <ph id="ph1">`http://www.contoso.com/path/`</ph> 는 <ph id="ph2">`http.sys`</ph> 결합 하 여 서비스는 &lt;xref:System.Uri.Host%2A?displayProperty=fullName&gt;속성 값과 변환된 된 URI를 만드는 요청 줄에 있는 문자열.&lt;/xref:System.Uri.Host%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, <ph id="ph1">`http.sys`</ph> and the &lt;xref:System.Uri?displayProperty=fullName&gt; class also do the following:      -   Un-escapes all percent encoded values.</source>
          <target state="translated">또한 <ph id="ph1">`http.sys`</ph> 및 &lt;xref:System.Uri?displayProperty=fullName&gt;클래스는 다음을 수행할 수도:-인코딩된 모든 백분율 값 이스케이프 해제 합니다.&lt;/xref:System.Uri?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</source>
          <target state="translated">-퍼센트 인코딩 비 ASCII 문자를 utf-16 문자 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</source>
          <target state="translated">Note u t F-8과 ANSI/DBCS 문자가 유니코드 문자 (유니코드 %uXXXX 형식을 사용 하 여 인코딩)도 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Executes other normalization steps, like path compression.</source>
          <target state="translated">-경로 압축 같은 다른 정규화 단계를 실행합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</source>
          <target state="translated">퍼센트 인코딩 값에 사용 되는 인코딩에 대 한 정보가 요청 없으므로 퍼센트 인코딩 값을 구문 분석 하 여 올바른 인코딩을 확인할 못할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore <ph id="ph1">`http.sys`</ph> provides two registry keys for modifying the process:      |Registry Key|Default Value|Description|   |------------------|-------------------|-----------------|   |EnableNonUTF8|1|If zero, <ph id="ph2">`http.sys`</ph> accepts only UTF-8-encoded URLs.</source>
          <target state="translated">따라서 <ph id="ph1">`http.sys`</ph> 제공 하는 프로세스를 수정 하기 위한 두 개의 레지스트리 키: | 레지스트리 키 | 기본 값 | 설명 |   |------------------|-------------------|-----------------|   | EnableNonUTF8 |&amp;1; |&amp;0; 이면 <ph id="ph2">`http.sys`</ph> u t F-8로 인코딩된 Url만 허용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If non-zero, <ph id="ph1">`http.sys`</ph> also accepts ANSI-encoded or DBCS-encoded URLs in requests.|   |FavorUTF8|1|If non-zero, <ph id="ph2">`http.sys`</ph> always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</source>
          <target state="translated">0이 아닌 경우 <ph id="ph1">`http.sys`</ph> 도 요청에서 ANSI로 인코딩된 또는 DBCS 인코딩된 Url을 허용 합니다. |   | FavorUTF8 |&amp;1; |&amp;0;이 아닌 경우 <ph id="ph2">`http.sys`</ph> 디코딩할 URL u t F-8로 먼저 해당 변환이 실패 하 고 EnableNonUTF8&amp;0;이 아닌 경우 하려고 항상 차례로 Http.sys을 ANSI 또는 DBCS 디코딩할 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If zero (and EnableNonUTF8 is non-zero), <ph id="ph1">`http.sys`</ph> tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|       When &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the converted URI from <ph id="ph2">`http.sys`</ph> as input to the &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt; property.</source>
          <target state="translated">0 (및 EnableNonUTF8&amp;0;이 아닌) <ph id="ph1">`http.sys`</ph> 경우 해당 ANSI 또는 DBCS; 디코딩하 려 성공 하지 못하면, 시도 u t F-8로 변환 합니다. |       때 &lt;xref:System.Net.HttpListener&gt;한 요청을 받으면에서 변환 된 URI를 사용 하 여 <ph id="ph2">`http.sys`</ph> 대 한 입력으로 &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;속성.&lt;/xref:System.Net.HttpListenerRequest.Url%2A&gt; &lt;/xref:System.Net.HttpListener&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a need for supporting characters besides characters and numbers in URIs.</source>
          <target state="translated">Uri에서 문자 및 숫자 이외의 문자를 지원할 필요가 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is the following URI, which is used to retrieve customer information for customer number "1/3812":       <ph id="ph1">`http://www.contoso.com/Customer('1%2F3812')/`</ph>       Note the percent-encoded slash in the Uri (%2F).</source>
          <target state="translated">예로 고객에 대 한 고객 정보를 검색 하는 데 사용 되는 다음 URI는 번호 "1/3812": <ph id="ph1">`http://www.contoso.com/Customer('1%2F3812')/`</ph> 퍼센트 인코딩 슬래시 (%2F) Uri에서 확인 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary, since in this case the slash character represents data and not a path delimiter.</source>
          <target state="translated">이 작업은 슬래시 문자 데이터 및 하지는 경로 구분 기호를 나타내므로 경우에 필요 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing the string to Uri constructor will lead to the following URI:       <ph id="ph1">`http://www.contoso.com/Customer('1/3812')/`</ph>       Splitting the path into its segments would result in the following elements:       <ph id="ph2">`Customer('1`</ph>       <ph id="ph3">`3812')`</ph>       This is not the intent of the sender of the request.</source>
          <target state="translated">다음 URI를 일으킵니다 Uri 생성자에 문자열을 전달: <ph id="ph1">`http://www.contoso.com/Customer('1/3812')/`</ph> 경로를 세그먼트로 분할 하면 다음과 같은 요소가 만들어집니다: <ph id="ph2">`Customer('1`</ph> <ph id="ph3">`3812')`</ph> 요청을 보낸 사람 의도이 아닙니다.       </target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the UnescapeRequestUrl property is set to false, then when the &lt;xref:System.Net.HttpListener&gt; receives a request, it uses the raw URI instead of the converted URI from <ph id="ph1">`http.sys`</ph> as input to the &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt; property.</source>
          <target state="translated">UnescapeRequestUrl 속성이 false로 설정 되어 다음 경우는 &lt;xref:System.Net.HttpListener&gt;한 요청을 받으면 원시 URI에서 변환 된 URI 대신 사용 하 여 <ph id="ph1">`http.sys`</ph> 대 한 입력으로 &lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;속성.&lt;/xref:System.Net.HttpListenerRequest.Url%2A&gt; &lt;/xref:System.Net.HttpListener&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A Boolean value that indicates if <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> uses the raw unescaped URI, rather than the converted URI.</source>
          <target state="translated">여부를 나타내는 부울 값을 <bpt id="p1">&lt;xref href="System.Net.HttpListener"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 변환된 URI 아닌 원시 언 이스케이프 된 URI를 사용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>