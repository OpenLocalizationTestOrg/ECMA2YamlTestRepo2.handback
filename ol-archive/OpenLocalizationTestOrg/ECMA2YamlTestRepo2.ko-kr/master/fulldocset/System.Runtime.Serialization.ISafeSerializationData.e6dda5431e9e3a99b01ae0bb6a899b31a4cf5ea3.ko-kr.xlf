<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">289420c86350d885223f929885abb32f598dede0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.ISafeSerializationData.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4336eb7f06b1a20f7518d6f5918b94578189baf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cbcd33a228624c37ec5b68d59abdf169078389b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables serialization of custom exception data in security-transparent code.</source>
          <target state="translated">보안 투명 코드에서 사용자 지정 예외 데이터의 serialization을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions previous to.NET Framework 4.0, serialization of custom user data in a security transparent code was accomplished using the &lt;xref:System.Exception.GetObjectData%2A&gt; method.</source>
          <target state="translated">사용 하 여 보안 투명 코드에서 사용자 지정 사용자 데이터의 직렬화를 수행 하는 버전 이전 수 있는 전략 Framework 4.0에에서는 &lt;xref:System.Exception.GetObjectData%2A&gt;메서드.&lt;/xref:System.Exception.GetObjectData%2A&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with .NET Framework 4.0, that method is marked with the &lt;xref:System.Security.SecurityCriticalAttribute&gt; attribute which prevents execution in security-transparent code.</source>
          <target state="translated">.NET Framework 4.0 이상에서는 해당 메서드가로 표시 된 &lt;xref:System.Security.SecurityCriticalAttribute&gt;특성-보안 투명 코드에서 실행할 수 없습니다.&lt;/xref:System.Security.SecurityCriticalAttribute&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work around this condition, implement the ISafeSerializationData interface and add custom data as shown in the example below.</source>
          <target state="translated">이 문제를 해결 하려면 ISafeSerializationData 인터페이스를 구현 하 고 아래 예제와 같이 사용자 지정 데이터를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A&gt; method is called after serialization, and uses the &lt;xref:System.Runtime.Serialization.SafeSerializationEventArgs&gt; to restore the custom data.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A&gt;메서드 serialization 후 호출 되 고 사용 하 여는 &lt;xref:System.Runtime.Serialization.SafeSerializationEventArgs&gt;사용자 지정 데이터를 복원 합니다.&lt;/xref:System.Runtime.Serialization.SafeSerializationEventArgs&gt; &lt;/xref:System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This method is called when the instance is deserialized.</source>
          <target state="translated">이 메서드는 인스턴스를 역직렬화 할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state object is stored in a private variable defined in the implementation of the &lt;xref:System.Runtime.Serialization.ISafeSerializationData&gt; class.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.ISafeSerializationData&gt;클래스&lt;/xref:System.Runtime.Serialization.ISafeSerializationData&gt; 의 구현에서 정의 하는 전용 변수에 하는 상태 개체는</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An object that contains the state of the instance.</source>
          <target state="translated">인스턴스의 상태를 포함 하는 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>