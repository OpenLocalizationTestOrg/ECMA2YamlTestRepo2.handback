<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3431287cbc41e8db4510b8861063728bc99f27d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Web.UI.WebControls.LinqDataSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25a7ba6fd50e8f1e70fa60c2be8d506db4d4ad59</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ababdb133a5452ac0901f9e614d90c7f4afa207</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
          <target state="translated">태그 텍스트를 검색 및 수정 데이터 개체의에서 데이터를 통해 ASP.NET 웹 페이지에서의 LINQ (Language-Integrated Query) 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:      -   <bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>Order of Operations<ept id="p2">](#order_of_operations)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>Ordering Data<ept id="p3">](#ordering_data)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>Grouping Data<ept id="p4">](#grouping_data)</ept><ph id="ph4">      -   </ph><bpt id="p5">[</bpt>Data Modifications<ept id="p5">](#data_modifications)</ept><ph id="ph5">      -   </ph><bpt id="p6">[</bpt>Evaluating Values at Run Time<ept id="p6">](#evaluating_value_at_run_time)</ept><ph id="ph6">      -   </ph><bpt id="p7">[</bpt>Working with Stored Procedures<ept id="p7">](#working_with_stored_procedures)</ept><ph id="ph7">      -   </ph><bpt id="p8">[</bpt>Declarative Syntax<ept id="p8">](#declarative_syntax)</ept>      <bpt id="p9">&lt;a name="introduction"&gt;</bpt><ept id="p9">&lt;/a&gt;</ept>    ## Introduction    Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
          <target state="translated">이 항목의:- <bpt id="p1">[</bpt>소개<ept id="p1">](#introduction)</ept><ph id="ph1">      -   </ph><bpt id="p2">[</bpt>작업 순서<ept id="p2">](#order_of_operations)</ept><ph id="ph2">      -   </ph><bpt id="p3">[</bpt>데이터 순서 지정<ept id="p3">](#ordering_data)</ept><ph id="ph3">      -   </ph><bpt id="p4">[</bpt>데이터 그룹화<ept id="p4">](#grouping_data)</ept><ph id="ph4">      -   </ph><bpt id="p5">[</bpt>데이터 수정<ept id="p5">](#data_modifications)</ept><ph id="ph5">      -   </ph><bpt id="p6">[</bpt>런타임에 평가 값<ept id="p6">](#evaluating_value_at_run_time)</ept><ph id="ph6">      -   </ph><bpt id="p7">[</bpt>저장 프로시저 작업<ept id="p7">](#working_with_stored_procedures)</ept><ph id="ph7">      -   </ph><bpt id="p8">[</bpt>선언적 구문<ept id="p8">](#declarative_syntax)</ept> <bpt id="p9">&lt;a name="introduction"&gt;</bpt> <ept id="p9">&lt;/a&gt;</ept> # # Introduction Language-Integrated 쿼리 (LINQ)는 탐색, 필터 및 프로젝션 작업에서 선언적 방식으로 표현할 수 있도록 쿼리 연산자의 집합을 정의 하는 쿼리 구문입니다. .NET 기반 프로그래밍 언어입니다.      </target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
          <target state="translated">데이터 개체는 메모리 내 데이터 컬렉션 또는 데이터베이스에서 데이터를 표시 하는 개체 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
          <target state="translated">검색 하거나 각 작업에 대해 SQL 명령을 작성 하지 않고 데이터를 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSource control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
          <target state="translated">LinqDataSource 컨트롤을 사용 하면 LINQ를 태그 텍스트의 속성을 설정 하 여 ASP.NET 웹 페이지에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The LinqDataSource control uses LINQ to SQL to automatically generate the data commands.</source>
          <target state="translated">LinqDataSource 컨트롤 데이터 명령을 자동으로 생성할 LINQ to SQL 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">LINQ to SQL에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are retrieving data from an in-memory data collection, you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to the class that contains the data collection.</source>
          <target state="translated">설정 하는 메모리 내 데이터 컬렉션에서 데이터를 검색 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;속성 데이터 컬렉션을 포함 하는 클래스에.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property or field that returns the data collection.</source>
          <target state="translated">설정한는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성 데이터 컬렉션을 반환 하는 필드나 속성을.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
          <target state="translated">예를 들어 라는 클래스를 할 수 있습니다 <ph id="ph1">`Person`</ph> 라는 속성이 포함 된 <ph id="ph2">`FavoriteCities`</ph> 문자열 값의 배열을 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to <ph id="ph1">`Person`</ph> and set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to <ph id="ph2">`FavoriteCities`</ph>.</source>
          <target state="translated">설정 하는 경우에 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;속성을 <ph id="ph1">`Person`</ph> 설정 하 고는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성을 <ph id="ph2">`FavoriteCities`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
          <target state="translated">데이터베이스를 쿼리 하는 경우 먼저 데이터베이스와 테이블을 나타내는 엔터티 클래스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/add/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
          <target state="translated">사용할 수는 <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/add/includes/vs-ordesigner-long-md.md)]</ph> 또는 SqlMetal.exe 유틸리티를 이러한 클래스를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property to the class that represents the database and set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that represents the database table.</source>
          <target state="translated">다음 설정의 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;데이터베이스를 나타내는 클래스에 속성을 설정 하 고는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성을 데이터베이스 테이블을 나타내는 속성입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="order_of_operations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Order of Operations    The LinqDataSource control applies data operations in the following order:      1.</source>
          <target state="translated"><bpt id="p1">&lt;a name="order_of_operations"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 작업 The LinqDataSource 컨트롤의 순서는 다음 순서 대로 데이터 작업을 적용 합니다. 1.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Where (specify which data records to return).</source>
          <target state="translated">여기서 (데이터 레코드를 반환할 지정).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>2.</source>
          <target state="translated">2.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Order By (sort).</source>
          <target state="translated">Order By (정렬)입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>3.</source>
          <target state="translated">3.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Group By (aggregate data records that share values).</source>
          <target state="translated">Group By (값을 공유 하는 집계 데이터 레코드).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>4.</source>
          <target state="translated">4.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Order Groups By (sort grouped data).</source>
          <target state="translated">(정렬 그룹화 된 데이터)로 그룹을 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>5.</source>
          <target state="translated">5.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Select (specify which fields or properties to return).</source>
          <target state="translated">(필드 또는 반환할 속성 지정)을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>6.</source>
          <target state="translated">6.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
          <target state="translated">(사용자가 선택한 속성에 의해 정렬 데이터 레코드)을 자동 정렬 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>7.</source>
          <target state="translated">7.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
          <target state="translated">자동 페이지 (검색 데이터 레코드에 사용자가 선택한의 하위 집합)입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add conditions to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property to filter the data records that are returned from a query.</source>
          <target state="translated">에 조건을 추가할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;쿼리에서 반환 되는 데이터 레코드를 필터링 할 속성입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property is not set, the LinqDataSource control retrieves every record from the data object.</source>
          <target state="translated">경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;, LinqDataSource 컨트롤 데이터 개체에서 모든 레코드를 검색 하 고 속성이 설정 되지 않았습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="ordering_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Ordering Data    You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to specify the names of properties from the returned data to sort by.</source>
          <target state="translated"><bpt id="p1">&lt;a name="ordering_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 사용 하는 데이터 순서는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성을 기준으로 정렬 하려면 반환된 된 데이터에서 속성의 이름을 지정 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use the LinqDataSource control with <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is set to <ph id="ph4">`true`</ph>, you must provide a value in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; LinqDataSource 컨트롤을 사용 하는 경우 <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> 또는 <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;속성이 <ph id="ph4">`true`</ph>에 값을 제공 해야는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본적으로는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;속성은 <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a value to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">값을 할당 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 포함 해야 모든 identity 열은 쿼리에서 반환 되는 속성 목록에.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="grouping_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Grouping Data    You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property to specify which properties are used to consolidate data records that have the same values.</source>
          <target state="translated"><bpt id="p1">&lt;a name="grouping_data"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># #-사용 하는 데이터를 그룹화 하는 중는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성을 통해 데이터 레코드 값이 같은 통합 하는 사용 되는 속성을 지정 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">데이터를 그룹화 할 때 포함할 수 있습니다 <ph id="ph1">`Key`</ph> 및 <ph id="ph2">`It`</ph>에 속성을 동적으로 만들어지는 있는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 속성은 속성 또는 데이터를 그룹화 하는 데 사용 된 속성의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`Key`</ph> 속성의 모든 고유 값에 포함 됩니다는 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성은 그룹화 된 데이터의에서 개별 레코드의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 그룹화 작업에서 통합 된 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`It`</ph> 에 공통 값을 공유 하는 모든 개별 레코드를 포함 하는 속성은 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property to specify the properties to use for sorting the grouped data.</source>
          <target state="translated">사용 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;그룹화 된 데이터 정렬에 사용할 속성을 지정 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property specifies how the individual records within the grouped data are sorted.</source>
          <target state="translated">데이터를 그룹화 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성 개별 레코드는 그룹화 된 데이터 정렬 방법을 지정 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the LinqDataSource control retrieves values for all the properties from a data object.</source>
          <target state="translated">기본적으로 LinqDataSource 컨트롤 데이터 개체에서 모든 속성에 대 한 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to specify which properties to return if you want to work with a subset of available properties.</source>
          <target state="translated">사용 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 통해 사용 가능한 속성의 하위 집합을 사용 하려는 경우를 반환 하는 속성을 지정 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
          <target state="translated">Select 작업이 Where, 이후에 적용 된다는 Order By 및 Group By 작업 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
          <target state="translated">따라서 Select 절에 별칭 이름을 만들 경우 별칭은 사용할 수 없는 경우 다른 절에서</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="data_modifications"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Data Modifications    You can specify whether data modifications are enabled by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, and &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; properties.</source>
          <target state="translated"><bpt id="p1">&lt;a name="data_modifications"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 데이터 수정 내용을 사용 하 여 데이터 수정 사용 되는지 여부를 지정할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user interface for modifying data from a LinqDataSource control is typically provided through a data-bound control, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">LinqDataSource 컨트롤에서 데이터를 수정 하기 위한 사용자 인터페이스는 데이터 바인딩된 컨트롤을 통해와 같이 제공 일반적으로 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to setting &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; to <ph id="ph1">`true`</ph>, the following conditions are required to enable automatic data modifications:      -   The &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property cannot be assigned a value.</source>
          <target state="translated">설정 뿐만 아니라 &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;를 <ph id="ph1">`true`</ph>, 다음과 같은 자동 데이터 수정을 사용 하도록 설정 하는 데 필요한:- &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성 값을 할당할 수 없습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property cannot be assigned a value.</source>
          <target state="translated">- &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성 값을 할당할 수 없습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The class that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property must derive from &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; &lt;xref:System.Data.Linq.DataContext&gt;.&lt;/xref:System.Data.Linq.DataContext&gt; 에서 파생 되어야 합니다&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; 에 할당 된-클래스</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   The property that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">-할당 된 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성 &lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt; 에서 파생 되어야 합니다&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
          <target state="translated">두 가지 방법으로 데이터 바인딩된 컨트롤에 표시 되는 속성을 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can either set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to a subset of properties, or you can define the fields for a data-bound control by adding &lt;xref:System.Web.UI.WebControls.DataControlField&gt; controls.</source>
          <target state="translated">설정 하거나는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성의 속성 또는 있습니다 하위 집합을 추가 하 여 데이터 바인딩된 컨트롤에 대 한 필드를 정의할 수 &lt;xref:System.Web.UI.WebControls.DataControlField&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.DataControlField&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
          <target state="translated">그러나 설정 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 의미 자동 업데이트, 삽입 및 삭제 작업을 사용할 수 없습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">사용 가능한 속성의 하위 집합을 사용 하는 동안 자동으로 데이터 수정을 활성화 하려는 경우 설정 하지 않으면는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
          <target state="translated">대신, 데이터 개체에서 모든 속성을 검색 하 고 데이터 바인딩된 컨트롤을 사용 하 여 표시 되는 속성을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control or the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, you must also set the &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; or &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; properties to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤 또는 &lt;xref:System.Web.UI.WebControls.GridView&gt;컨트롤을 설정 해야는 &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;또는 &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
          <target state="translated">따라서 데이터 바인딩된 컨트롤을 데이터 편집 및 삭제에 대 한 단추가 자동으로 포함 수 없습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 표시 되지 않는 모든 값은 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">전달 됩니다 변경 되지 않은 데이터 원본에 데이터 업데이트를 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="evaluating_value_at_run_time"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Evaluating Values at Run Time    If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; collections.</source>
          <target state="translated"><bpt id="p1">&lt;a name="evaluating_value_at_run_time"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 값을 계산 실행 시 그룹화 값을 매개 변수를 추가할 수 있습니다 또는 필터링, 순서 지정에 대해 런타임 시 값을 평가할 수 있는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to specify default values, you can add parameters to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt; collection.</source>
          <target state="translated">기본값을 지정 하려면 매개 변수를 추가할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; events.</source>
          <target state="translated">데이터 작업이 실행 되기 전에 값을 수정 하거나 검사 하려는 경우를 처리할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
          <target state="translated">데이터 작업을 취소 하거나 사용자 입력에 따라 데이터 클래스의 속성을 설정 하는 경우에 발생 한 유효성 검사 오류 검사를 이러한 이벤트를 처리할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine values after the data operation has finished, handle the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;, or &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; events.</source>
          <target state="translated">데이터 작업이 완료 된 다음 값을 검사 하려면 처리는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;, 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="working_with_stored_procedures"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Working with Stored Procedures    You use the LinqDataSource control to retrieve data from a stored procedure by creating an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated"><bpt id="p1">&lt;a name="working_with_stored_procedures"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># #에서 데이터를 검색 저장된 프로시저에 대 한 이벤트 처리기를 만들어 LinqDataSource 컨트롤을 사용 하는 작업 저장 프로시저 수에 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object.</source>
          <target state="translated">이벤트 처리기를 하면 저장된 프로시저를 나타내는 데이터 컨텍스트 클래스에서 메서드를 호출 하 고 결과를 설정의 &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.</source>
          <target state="translated">메서드에서 반환 되는 형식에 지정 된 형식과 일치 해야 사용 자동 업데이트, 삽입 및 데이터에 대 한 삭제 작업 하려는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">데이터 컨텍스트 메서드 만들기에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 저장된 프로시저 및 함수 (O/R 디자이너)에 매핑된 DataContext 만들기 메서드<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">&lt;a name="declarative_syntax"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>    ## Declarative Syntax      <bpt id="p2">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p2">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;a name="declarative_syntax"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept># # 선언적 구문 <bpt id="p2">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p2">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control dynamically creates an Order By clause based on values in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt; collection.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨트롤의 값에 따라 Order By 절을 동적으로 만듭니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the AutoGenerateOrderByClause property to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates an Order By clause that is based on the values in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; collection.</source>
          <target state="translated">AutoGenerateOrderByClause 속성을 설정 하면 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤의 값을 기반으로 하는 Order By 절을 동적으로 만듭니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 첫 번째 매개 변수에서 데이터를 정렬 하 고 각 추가 매개 변수에 대 한 데이터를 추가로 정렬 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
          <target state="translated">매개 변수를 포함 하는 <ph id="ph1">`null`</ph> 또는 빈 값은 Order By 절에 포함 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property when the AutoGenerateOrderByClause is set to <ph id="ph1">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
          <target state="translated">설정 하지 않으면는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;는 AutoGenerateOrderByClause로 설정 된 경우 속성 <ph id="ph1">`true`</ph>파서가 Order By 절을 동적으로 만들기 때문에.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if the AutoGenerateOrderByClause is set to <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property is assigned values.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어는 AutoGenerateOrderByClause로 설정 된 경우 예외를 throw <ph id="ph1">`true`</ph> 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성 값이 할당 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control creates the Order By clause; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컨트롤 Order By 절을 만듭니다, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control dynamically creates a Where clause based on values defined in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt; collection.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨트롤 Where를 동적으로 만듭니다 절에 정의 된 값에 따라는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the AutoGenerateWhereClause property to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates the Where clause from the parameters in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection.</source>
          <target state="translated">AutoGenerateWhereClause 속성을 설정 하면 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;Where에서는 동적으로 생성 하는 컨트롤의 매개 변수에서 절은 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each parameter that you add to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection must have its &lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; property set to a value that matches a property in the data object that is being queried.</source>
          <target state="translated">에 추가 하는 각 매개 변수에 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;컬렉션 있어야 해당 &lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;쿼리 되는 데이터 개체의 속성을 일치 하는 값으로 설정 된 속성.&lt;/xref:System.Web.UI.WebControls.Parameter.Name%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The automatically generated Where clause will check whether the value specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection equals the value of the matching property in the data object.</source>
          <target state="translated">자동으로 생성 된 위치 절에 값이 지정 되었는지 여부를 확인 합니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;컬렉션 데이터 개체에 일치 하는 속성의 값과 같으면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">둘 이상의 매개 변수를 제공 하는 경우 매개 변수는 논리적으로 연결 됩니다 <ph id="ph1">`AND`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
          <target state="translated">매개 변수를 포함 하는 <ph id="ph1">`null`</ph> Where에 빈 값이 포함 되지 않은 또는 절.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The automatically generated &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; clause can test only for equality and can link parameters only with the <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">자동으로 생성 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;절 같음에 대해서만 테스트할 수 있으며, 매개 변수 에서만 연결할 수는 <ph id="ph1">`AND`</ph> 작업.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set the AutoGenerateWhereClause property to <ph id="ph1">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph2">`OR`</ph> operation.</source>
          <target state="translated">AutoGenerateWhereClause 속성을 설정 하지 마십시오 <ph id="ph1">`true`</ph> 같은지 테스트 하지 않는 조건을 추가 해야 할 경우 또는 매개 변수를 연결 해야 할 경우는 <ph id="ph2">`OR`</ph> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can accomplish these tasks by setting the AutoGenerateWhereClause property to <ph id="ph1">`false`</ph> and adding placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property for each parameter in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; collection.</source>
          <target state="translated">AutoGenerateWhereClause 속성을 설정 하 여 이러한 작업을 수행할 수 있습니다 <ph id="ph1">`false`</ph> 의 자리 표시자를 추가 하 고는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;속성에서 각 매개 변수에 대해는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;컬렉션.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property, preface each placeholder name with the @ symbol.</source>
          <target state="translated">에 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;속성을 각 자리 표시자 이름 앞에 @ 기호.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property when the AutoGenerateWhereClause property is <ph id="ph1">`true`</ph>, because the parser dynamically creates the Where clause.</source>
          <target state="translated">설정 하지 않으면는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;AutoGenerateWhereClause 속성이 속성 <ph id="ph1">`true`</ph>파서가 Where를 동적으로 만들기 때문에 절.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if the AutoGenerateWhereClause property is <ph id="ph1">`true`</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property is assigned values.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 AutoGenerateWhereClause 속성은 예외가 throw <ph id="ph1">`true`</ph> 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;속성 값이 할당 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> control will create the Where clause; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 컨트롤을 만듭니다는 Where 절, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control supports navigation through sections of the data at run time.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨트롤은 실행 시 데이터의 섹션을 통해 탐색을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the AutoPage property to <ph id="ph1">`true`</ph> to enable paging in the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">자동 페이지 속성을 설정 <ph id="ph1">`true`</ph> 에서 페이징을 사용 하도록 설정 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">데이터를 통해 사용자를 사용 하도록 설정 하려면 페이징을 위한 인터페이스를 제공 하는 데이터 바인딩된 컨트롤을 연결 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the AutoPage property is set to <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control retrieves only enough records for one page in the data-bound control.</source>
          <target state="translated">자동 페이지 속성이로 설정 된 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤이 데이터 바인딩된 컨트롤에서 한 페이지에 대 한 충분 한 레코드만 검색.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>It uses the &lt;xref:System.Linq.Enumerable.Skip%2A&gt; and &lt;xref:System.Linq.Enumerable.Take%2A&gt; methods to retrieve the records for the current page.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Linq.Enumerable.Skip%2A&gt;및 &lt;xref:System.Linq.Enumerable.Take%2A&gt;현재 페이지에 대 한 레코드를 검색 하는 메서드.&lt;/xref:System.Linq.Enumerable.Take%2A&gt; &lt;/xref:System.Linq.Enumerable.Skip%2A&gt;</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user can page through the data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>사용자가 데이터를 통해 페이징할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control supports sorting the data at run time.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 컨트롤이 실행 시 데이터 정렬을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control supports two approaches for sorting data.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤은 데이터 정렬에 대 한 두 가지 방법을 지원 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the AutoSort property to enable run-time sorting or you can set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to define the sorting at design time.</source>
          <target state="translated">자동 정렬 속성을 사용 하 여 실행 시 정렬을 사용 하거나 설정할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;디자인 타임에 정렬을 정의 하려면 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the AutoSort property to <ph id="ph1">`true`</ph> to enable sorting in a &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control that is based on the sort expression from a data-bound control.</source>
          <target state="translated">자동 정렬 속성을 설정 <ph id="ph1">`true`</ph> 의 정렬을 활성화 하려면는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;데이터 바인딩된 컨트롤에서 정렬 식을 기반으로 하는 컨트롤입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
          <target state="translated">데이터 바인딩된 컨트롤을 정렬에 사용할 속성을 실행 시 선택할 수 있도록 인터페이스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can programmatically set the order in which data is returned by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property to the property or properties used for sorting.</source>
          <target state="translated">설정 하 여 반환할 데이터의 순서를 프로그래밍 방식으로 설정할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성 속성이 나 정렬에 사용 되는 속성을.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property is set to a property and the AutoSort property is <ph id="ph1">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성에 속성이 설정 되어 있고 자동 정렬 속성은 <ph id="ph1">`true`</ph>, 식에 다음 데이터 바인딩된 컨트롤에서 정렬 식이 적용 되는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this determines the final sorting of the data.</source>
          <target state="translated">따라서 최종 정렬 데이터를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the user can sort the data; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>사용자가 데이터를 정렬할 수 있는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Occurs after an instance of the context type object is created.</source>
          <target state="translated">컨텍스트 유형 개체의 인스턴스가 만들어진 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the ContextCreated event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
          <target state="translated">컨텍스트 형식 개체를 검사 하거나 개체를 만드는 동안 발생 하는 예외를 검사 하려면 ContextCreated 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You retrieve the context type object from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is associated with this event.</source>
          <target state="translated">컨텍스트 형식 개체를 검색할는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;이 이벤트와 연결 된 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>You retrieve the exception that was raised during the data operation from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property.</source>
          <target state="translated">데이터 작업 중에 발생 하는 예외를 검색할는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
          <target state="translated">컨텍스트 형식 개체 선택, 업데이트, 삽입 및 삭제 작업 중 생성 되 고 요청이 전체에서 다시 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">이벤트가 발생 하지는 한 번이 있습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is when you programmatically set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property to an object during the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated">프로그래밍 방식으로 설정 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;속성을 하는 동안 개체로 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property implements the &lt;xref:System.Data.Linq.ITable&gt; interface.</source>
          <target state="translated">추가 조건을 원래 값에서 개체 또는 상태 보기에 저장할 수 필요가 없습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;속성이 구현 하는 &lt;xref:System.Data.Linq.ITable&gt;인터페이스.&lt;/xref:System.Data.Linq.ITable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Occurs before an instance of the context type object is created.</source>
          <target state="translated">컨텍스트 형식 개체의 인스턴스를 만들기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control creates an instance of the type that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property.</source>
          <target state="translated">기본적으로는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤에 지정 된 형식의 인스턴스를 만듭니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control calls the default constructor of the data context object to create an instance of the object.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 개체의 인스턴스를 만드는 데이터 컨텍스트 개체의 기본 생성자를 호출 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property.</source>
          <target state="translated">기본이 아닌 생성자를 사용 해야 하거나에 지정 된 것과에서 다른 값과 개체를 만들어야 할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you must handle the ContextCreating event and manually create the data context object.</source>
          <target state="translated">이 경우 ContextCreating 이벤트를 처리 하 고 수동으로 데이터 컨텍스트 개체를 생성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
          <target state="translated">컨텍스트 형식 개체 선택, 업데이트, 삽입 및 삭제 작업 동안 만들어집니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">이벤트가 발생 하지는 한 번이 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is when you programmatically set the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property to an object in an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event.</source>
          <target state="translated">프로그래밍 방식으로 설정 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;속성에 대 한 이벤트 처리기에 있는 개체에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;이벤트.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt; property implements the &lt;xref:System.Data.Linq.ITable&gt; interface.</source>
          <target state="translated">추가 조건을 원래 값에서 개체 또는 상태 보기에 저장할 수 필요가 없습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;속성이 구현 하는 &lt;xref:System.Data.Linq.ITable&gt;인터페이스.&lt;/xref:System.Data.Linq.ITable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Occurs before disposing the context type object.</source>
          <target state="translated">컨텍스트 형식 개체를 삭제 하기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle the ContextDisposing event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">개체를 수동으로 삭제 하기 위해 ContextDisposing 이벤트 처리 되거나 삭제 될 개체 앞에 개체에 지정 된 정리를 수행 하려면.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
          <target state="translated">해당 값에 데이터를 검색 하려는 속성을 포함 하는 형식의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;메모리 데이터 수집 또는 데이터베이스에서 데이터를 검색 컨트롤을 두 개의 속성을 지정 해야 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first is a data context class that represents the data source.</source>
          <target state="translated">첫 번째는 데이터 원본을 나타내는 데이터 컨텍스트 클래스입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second is a property in the data context class that contains the data.</source>
          <target state="translated">두 번째는 데이터가 포함 된 데이터 컨텍스트 클래스의 속성입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the ContextTypeName property to the name of the data context class and you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the data collection that contains the data.</source>
          <target state="translated">데이터 컨텍스트 클래스의 이름으로 ContextTypeName 속성을 설정 하 고 설정한는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성 데이터를 포함 하는 데이터 컬렉션을.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you retrieve data from a database, set the ContextTypeName property to the name of the class that represents the database.</source>
          <target state="translated">예를 들어 데이터베이스에서 데이터를 검색 하는 경우 데이터베이스를 나타내는 클래스의 이름으로 ContextTypeName 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that represents the table in the database.</source>
          <target state="translated">설정 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성을 데이터베이스에서 테이블을 나타내는 속성입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
          <target state="translated">사용 하 여 데이터베이스에서 클래스를 생성 하는 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph> 또는 SqlMetal.exe 유틸리티를 자동으로 이러한 클래스를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you retrieve data from an in-memory data collection such as an array, set the ContextTypeName property to the name of the class that contains the array property.</source>
          <target state="translated">배열 등 메모리 내 데이터 컬렉션에서 데이터를 검색할 때 ContextTypeName 속성 배열 속성을 포함 하는 클래스의 이름으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property to the property that gets the array.</source>
          <target state="translated">다음 설정의 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성을 가져오는 배열의 속성입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable automatic update, insert, or delete operations through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control, the class assigned to the ContextTypeName property must derive from &lt;xref:System.Data.Linq.DataContext&gt;.</source>
          <target state="translated">자동으로 업데이트, 삽입 또는 삭제 작업을 통해 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 ContextTypeName 속성에 할당 된 클래스 &lt;xref:System.Data.Linq.DataContext&gt;.&lt;/xref:System.Data.Linq.DataContext&gt; 에서 파생 되어야 합니다&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the property assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">또한 속성 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; &lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt; 에서 파생 되어야 합니다&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; 에 할당</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the ContextTypeName property.</source>
          <target state="translated">또는 하지 않는 필요 자동 업데이트 하기 위해 삽입, 삭제 작업을 하는 경우 모든 종류의 클래스 이름이 ContextTypeName 속성에 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to select data from an instance of a class, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">클래스의 인스턴스에서 데이터를 선택 하는 방법에 대 한 정보를 참조 하십시오.는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The name of the class to retrieve data from.</source>
          <target state="translated">데이터를 검색 하는 클래스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Returns a queryable view.</source>
          <target state="translated">쿼리 가능한 뷰를 반환합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A queryable view.</source>
          <target state="translated">쿼리할 수는 보기입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceView"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is associated with this control.</source>
          <target state="translated">새 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceView"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 컨트롤과 연결 된 클래스입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a custom view, you can override this method in a derived class.</source>
          <target state="translated">사용자 지정 보기를 제공 하려면이 메서드는 파생된 클래스에서 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>An object that acts as the interface for data-bound controls.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 대 한 인터페이스 역할을 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Performs a delete operation.</source>
          <target state="translated">삭제 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the Delete method from your code.</source>
          <target state="translated">일반적으로 사용자 코드에서 Delete 메서드를 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use a &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control with a data-bound control, the data-bound control will automatically call the Delete method when the user takes action to delete a record.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;사용자가 레코드를 삭제할 작업 수행 데이터 바인딩된 컨트롤이 데이터 바인딩된 컨트롤과 함께 Delete 메서드를 자동으로 호출 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the Delete method when you want to create your own process for deleting data.</source>
          <target state="translated">명시적으로 데이터를 삭제 하기 위한 사용자가 소유한 프로세스를 만들 때 Delete 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can call the Delete method when you want to delete a record based on an event outside the data-bound control.</source>
          <target state="translated">예를 들어 데이터 바인딩된 컨트롤 외부 이벤트에 따라 레코드를 삭제 하려는 경우 Delete 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be deleted.</source>
          <target state="translated">레코드 삭제에 대 한 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">데이터 충돌을 감지 계산 되는 행 값.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The number of records affected by the delete operation.</source>
          <target state="translated">삭제 작업에 영향을 받는 레코드 수입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Occurs when a delete operation has finished.</source>
          <target state="translated">삭제 작업이 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Deleted event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
          <target state="translated">삭제 된 이벤트 삭제 작업에서 발생 한 예외를 catch 하는 작업이 완료 된 후에 출력 매개 변수를 검사를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the output parameters from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">출력 매개 변수를 검색할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;이벤트 처리기에 전달 되는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This property is not used by the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">이 속성은 사용 되지 않습니다는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
          <target state="translated">컬렉션 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Occurs before a delete operation.</source>
          <target state="translated">삭제 작업이 수행 되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Deleting event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
          <target state="translated">삭제, 삭제 작업을 하기 전에 값을 변경 하거나 삭제 작업을 취소 하려면 데이터 클래스의 데이터 유효성 검사 오류를 검사 하는 개체의 유효성을 검사 하려면 Deleting 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control passes a &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object to event handlers for the Deleting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어가 전달은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;개체를 삭제 하면 이벤트에 대 한 이벤트 처리기.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object contains the data that will be deleted and enables you to cancel the delete operation.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;개체가 삭제 되 고 삭제 작업을 취소할 수 있도록 하는 데이터를 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data class throws a &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt; exception, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; object contains that exception in the &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; property.</source>
          <target state="translated">데이터 클래스 throw 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;예외는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;에서 해당 예외를 포함 하는 개체는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the Deleting event, you must handle the exception in that event handler.</source>
          <target state="translated">Deleting 이벤트에 대 한 이벤트 처리기에서 예외가 throw 되 면 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;이벤트 (통해는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;개체).&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Deleting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;속성 Deleting 이벤트 이후에 throw 된 예외가 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">통해 데이터 레코드를 삭제할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the EnableDelete property to <ph id="ph1">`true`</ph> when you want to enable users to delete a data record through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">EnableDelete 속성을 설정 <ph id="ph1">`true`</ph> 사용자가 통해 데이터 레코드를 삭제할 수 있도록 하려는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>When EnableDelete is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to delete the data.</source>
          <target state="translated">EnableDelete 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 LINQ to SQL 사용 하 여 데이터 삭제 명령을 자동으로 만들려면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users select a record to delete, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">사용자가 같은 삭제할 레코드를 선택할 수 있는 인터페이스를 포함 해야는 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic delete operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤이 자동 삭제 작업을 지원 하지 않는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성이 설정 되어.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if a delete operation is tried.</source>
          <target state="translated">이 경우에 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 삭제 작업이 시도 되 면 예외를 throw 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic delete operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>자동 삭제 작업을 사용 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">통해 데이터 레코드를 삽입할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the EnableInsert property to <ph id="ph1">`true`</ph> when you want to enable users to insert a new data record through the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">EnableInsert 속성을 설정 <ph id="ph1">`true`</ph> 사용자가 통해 새 데이터 레코드를 삽입할 수 있도록 하려는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>When EnableInsert is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to insert the data.</source>
          <target state="translated">EnableInsert 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 LINQ to SQL 사용 하 여 데이터를 삽입 하려면 명령을 자동으로 만들려면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users insert a new record, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">와 같은 새 레코드를 삽입 하는 사용자가 수 있는 인터페이스를 포함 해야는 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic insert operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤이 자동 삽입 작업을 지원 하지 않는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성이 설정 되어.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if an insert operation is tried.</source>
          <target state="translated">이 경우에 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 삽입 작업이 시도 되 면 예외를 throw 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic insert operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>자동 삽입 작업을 사용 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
          <target state="translated">데이터 컨텍스트 개체에 대 한 변경 추적 되는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The EnableObjectTracking property is only used when selecting data from a LINQ To SQL data context object.</source>
          <target state="translated">EnableObjectTracking 속성을 LINQ To SQL 데이터 컨텍스트 개체에서 데이터를 선택 하는 경우에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are interacting with read-only data, setting the EnableObjectTracking property to <ph id="ph1">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
          <target state="translated">읽기 전용 데이터와 상호 작용 하는 경우 EnableObjectTracking 속성을 설정 <ph id="ph1">`false`</ph> 는 데이터가 변경 되었는지 여부를 확인 하려면 캐시 되지 때문에 성능이 향상 됩니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it also disables deferred query execution.</source>
          <target state="translated">그러나 지연 된 쿼리 실행도 비활성화 됩니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
          <target state="translated">이 속성으로 설정 되어 있어야 <ph id="ph1">`true`</ph> 지연 된 쿼리 실행을 사용 하려는 경우.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the data context object is tracked for changes; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>변경;에 대 한 데이터 컨텍스트 개체를 추적 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be updated through the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> control.</source>
          <target state="translated">통해 데이터 레코드를 업데이트할 수 있는지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the EnableUpdate property to <ph id="ph1">`true`</ph> when you want to enable users to update a data record by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control.</source>
          <target state="translated">EnableUpdate 속성을 설정 <ph id="ph1">`true`</ph> 사용자가 사용 하 여 데이터 레코드를 업데이트할 수 있도록 하려는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>When EnableUpdate is <ph id="ph1">`true`</ph>, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses LINQ to SQL to automatically create the command to update the data.</source>
          <target state="translated">EnableUpdate 다음과 같은 경우 <ph id="ph1">`true`</ph>, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 LINQ to SQL 사용 하 여 데이터를 업데이트 하는 명령을 자동으로 만들려면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users update a record, such as a &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control.</source>
          <target state="translated">와 같은 레코드를 업데이트 하는 사용자가 수 있는 인터페이스를 포함 해야는 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control does not support automatic update operations when the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property or the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property is set.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤이 자동 업데이트 작업을 지원 하지 않는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성 또는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성이 설정 되어.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception if an update operation is tried.</source>
          <target state="translated">이 경우에 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 업데이트 작업이 시도 되 면 예외를 throw 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if automatic update operations are enabled; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>자동 업데이트 작업을 사용 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
          <target state="translated">검색된 된 데이터를 그룹화 하는 데는 사용 되는 속성을 지정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the GroupBy property to specify which properties are used for consolidating data records that have the same values.</source>
          <target state="translated">GroupBy 속성을 사용 하 여 데이터 레코드 값이 같은 통합 하는 것에 대 한는 사용 되는 속성을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the GroupBy property to <ph id="ph1">`Name`</ph>, all the records in the query that have the same <ph id="ph2">`Name`</ph> property value are returned as a single consolidated record.</source>
          <target state="translated">예를 들어 GroupBy 속성을 설정 하면 <ph id="ph1">`Name`</ph>, 동일한 쿼리에 모든 레코드 <ph id="ph2">`Name`</ph> 속성 값을 단일 통합 레코드로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign more than one property to the GroupBy property by enclosing all the properties in the <ph id="ph1">`new`</ph> function and separating each property by using a comma.</source>
          <target state="translated">모든 속성을 포함 하 여 둘 이상의 속성 GroupBy 속성에 할당할 수 있습니다는 <ph id="ph1">`new`</ph> 함수와 쉼표를 사용 하 여 각 속성을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the GroupBy property to <ph id="ph3">`new(Name, Category)`</ph>.</source>
          <target state="translated">속성을 기준으로 그룹화 하려면 예를 들어 <ph id="ph1">`Name`</ph> 차례로 <ph id="ph2">`Category`</ph>, GroupBy 속성을 설정 <ph id="ph3">`new(Name, Category)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
          <target state="translated">그룹화에 사용 되는 속성의 값은 생성 된 속성인 통해 반환 되 <ph id="ph1">`Key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>You include the <ph id="ph1">`Key`</ph> property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to retrieve the grouped values.</source>
          <target state="translated">포함 하는 <ph id="ph1">`Key`</ph> 속성에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;그룹화 된 값을 검색 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">`Key`</ph> 속성을 사용 하 여 별칭은 <ph id="ph2">`As`</ph> 있지만 키워드를 별칭을 사용 하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might set the GroupBy property to a property named <ph id="ph1">`Category`</ph>.</source>
          <target state="translated">예를 들어 GroupBy 속성 이라는 속성을 설정할 수 있습니다 <ph id="ph1">`Category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to <ph id="ph2">`new(Key As ProductCategory)`</ph>.</source>
          <target state="translated">통합된 된 값을 검색할 수 있습니다는 <ph id="ph1">`Category`</ph> 속성을 설정 하 여는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 <ph id="ph2">`new(Key As ProductCategory)`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">그룹의 개별 레코드를 포함 하 여 액세스할 수 있습니다는 <ph id="ph1">`It`</ph> 속성에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성 그룹화 된 속성의 값을 공유 하는 레코드의 컬렉션을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GroupBy property is often used with aggregation methods.</source>
          <target state="translated">GroupBy 속성은 집계 메서드와 함께 자주 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the following aggregate methods:      -   <ph id="ph1">`Count()`</ph><ph id="ph2">      -   </ph><ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph4">`)`</ph><ph id="ph5">      -   </ph><ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>column<ept id="p2">*</ept> <ph id="ph7">`)`</ph><ph id="ph8">      -   </ph><ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>column<ept id="p3">*</ept> <ph id="ph10">`)`</ph><ph id="ph11">      -   </ph><ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>column<ept id="p4">*</ept> <ph id="ph13">`)`</ph><ph id="ph14">      -   </ph><ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>condition<ept id="p5">*</ept> <ph id="ph16">`)`</ph><ph id="ph17">      -   </ph><ph id="ph18">`Any()`</ph><ph id="ph19">      -   </ph><ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>condition<ept id="p6">*</ept> <ph id="ph21">`)`</ph>       For more information, see <bpt id="p7">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p8">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">다음과 같은 집계 메서드를 사용할 수 있습니다:- <ph id="ph1">`Count()`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph4">`)`</ph> <ph id="ph5">      -   </ph> <ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>열<ept id="p2">*</ept> <ph id="ph7">`)`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>열<ept id="p3">*</ept> <ph id="ph10">`)`</ph> <ph id="ph11">      -   </ph> <ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>열<ept id="p4">*</ept> <ph id="ph13">`)`</ph> <ph id="ph14">      -   </ph> <ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>조건<ept id="p5">*</ept> <ph id="ph16">`)`</ph> <ph id="ph17">      -   </ph> <ph id="ph18">`Any()`</ph> <ph id="ph19">      -   </ph> <ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>조건<ept id="p6">*</ept> <ph id="ph21">`)`</ph> 자세한 내용은 참조 <bpt id="p7">[</bpt>NIB: LinqDataSource 웹 서버 컨트롤 개요<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> 및 <bpt id="p8">[</bpt>하는 방법: 그룹 및 집계 데이터를 사용 하 여 LinqDataSource 컨트롤<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용 되는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the GroupByParameters collection to create the Group By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 런타임 시 Group By 절을 만들려는 GroupByParameters 컬렉션의 매개 변수를 사용 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you will not use the GroupByParameters collection to group data.</source>
          <target state="translated">일반적으로 데이터를 그룹화 GroupByParameters 컬렉션을 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can use the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property.</source>
          <target state="translated">대신 사용할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the GroupByParameters collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
          <target state="translated">런타임 시 Group By 절에는 값을 설정 해야 고 속성 이름이 올바르지 않은 경우에 GroupByParameters 컬렉션을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use the GroupByParameters collection to group data based on whether the <ph id="ph1">`LastName`</ph> property in the data records equals a value provided by the user.</source>
          <target state="translated">예를 들어 데이터를 그룹화 할 지 여부에 따라 GroupByParameters 컬렉션을 사용는 <ph id="ph1">`LastName`</ph> 데이터 레코드의 속성에는 사용자가 제공한 값과 같으면 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property.</source>
          <target state="translated">속성으로 데이터를 그룹화 하려는 경우 런타임 시 설정 하지 않아도 해당 속성에 속성 그룹화를 정의할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; to "LastName" without any parameters.</source>
          <target state="translated">예를 들어 데이터베이스 테이블의 값을 반환 하 여 그룹화 <ph id="ph1">`LastName`</ph>설정, &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;"LastName" 매개 변수 없이.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to dynamically group data by a property, create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event and customize the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property as needed.</source>
          <target state="translated">속성에 의해 동적으로 데이터를 그룹화 하려는 경우에 대 한 이벤트 처리기를 만들는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;이벤트 및 사용자 지정의 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;필요에 따라 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot assign the name of a property as the value for a parameter in the GroupByParameters collection.</source>
          <target state="translated">속성의 이름을 GroupByParameters 컬렉션의 매개 변수에 대 한 값으로 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the GroupByParameters collection when you want to add a condition to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property that must be set at run time.</source>
          <target state="translated">조건을 추가 하려는 경우 GroupByParameters 컬렉션에 매개 변수를 추가 하는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;런타임에 설정 해야 하는 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the GroupByParameters collection, you assign a name to each parameter and then add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property for that named parameter.</source>
          <target state="translated">GroupByParameters 컬렉션에 값을 설정 하려면 각 매개 변수에 이름을 할당 하 고이 다음에 자리 표시자를 추가할는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성에 명명 된 매개 변수입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Group By 절에 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Performs an insert operation.</source>
          <target state="translated">삽입 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the Insert method from your code.</source>
          <target state="translated">일반적으로 사용자 코드에서 Insert 메서드를 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control will automatically call the Insert method when the user takes action to insert a new record.</source>
          <target state="translated">자동으로 데이터 바인딩된 컨트롤에서는 사용자가 새 레코드 삽입 작업을 수행 하는 경우 Insert 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the Insert method when you want to create your own process for inserting data.</source>
          <target state="translated">데이터 삽입을 위한 프로세스를 직접 만들려는 경우에 Insert 메서드를 명시적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The row values to be inserted into the data source.</source>
          <target state="translated">행 값을 데이터 소스에 삽입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the insert operation.</source>
          <target state="translated">삽입 작업에 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Occurs when an insert operation has finished.</source>
          <target state="translated">삽입 작업이 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Inserted event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
          <target state="translated">삽입 작업에서 발생 한 예외를 catch 하거나 삽입 작업이 완료 된 다음 값을 확인 하려면 Inserted 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the new values through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">통해 새 값을 검색할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;이벤트 처리기에 전달 되는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object to retrieve the identity property generated by a database for a new data record.</source>
          <target state="translated">예를 들어, 사용할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;새 데이터 레코드에 대 한 데이터베이스에서 생성 된 identity 속성을 검색할 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Occurs before an insert operation.</source>
          <target state="translated">삽입 작업이 수행 되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Inserting event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
          <target state="translated">삽입할 수, 데이터 클래스의 삽입 작업을 하기 전에 값을 변경 하거나 삽입 작업을 취소 하려면에서 데이터 유효성 검사 오류를 검사 하는 개체의 유효성을 검사 하려면 삽입 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object passed to event handlers for this event contains the new object to insert in the data source.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;데이터 소스에 삽입할 새 개체를 포함 하는이 이벤트에 대 한 이벤트 처리기에 전달 된 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation error occurs during the insert operation, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;데이터 클래스에 의해 throw 되는 유효성 검사 예외를 포함 하는 개체&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; 는 삽입 작업 중에 유효성 검사 오류가 발생 하는 경우</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">유효성 검사 오류가 삽입할 값을 데이터 클래스에 속성의 형식과 일치 하지 않는 경우 또는 사용자 지정 유효성 검사를 통과 하지 못하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the Inserting event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">삽입 이벤트에 대 한 이벤트 처리기를 유효성 검사 예외를 검색할 수 있으며 적절 한 조치를 취할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the Inserting event, you must handle the exception in that event handler.</source>
          <target state="translated">삽입 이벤트에 대 한 이벤트 처리기에서 예외가 throw 되 면 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;이벤트 (통해는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;개체).&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Inserting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;속성 삽입 이벤트 이후에 throw 된 예외가 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
          <target state="translated">삽입 작업 중에 사용 되는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the values that are needed for an insert operation are passed to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control by the data-bound control.</source>
          <target state="translated">삽입 작업에 필요한 값은에 전달 되는 일반적으로 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;데이터 바인딩된 컨트롤에 의해 제어 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">정의할 때 지정 삽입 매개 변수는 기본값을 제공 하려는 경우 값을 빈 값 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
          <target state="translated">사용자가 값을 제공 하지 때 처리 해야 하는 값에 대해서만 삽입 됩니다 하는 모든 값에 대 한 매개 변수를 제공 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values that you provide in the InsertParameters collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
          <target state="translated">InsertParameters 컬렉션에서 제공 하는 값은 데이터 원본에 정의 되어 있지만 데이터 컨트롤에 바인딩되지 않는 필드에 대해서만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a &lt;xref:System.Web.UI.WebControls.ListView&gt; control that is bound to the table is bound only to the Name and Address fields.</source>
          <target state="translated">예를 들어 데이터베이스 테이블에 열 이름, 주소 및 PostalCode 이라는 가정 하지만 &lt;xref:System.Web.UI.WebControls.ListView&gt;이름과 주소 필드에만 테이블에 바인딩된 컨트롤을 바인딩된.&lt;/xref:System.Web.UI.WebControls.ListView&gt;</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the InsertParameters collection will be used only for the PostalCode field.</source>
          <target state="translated">InsertParameters 컬렉션 값의 PostalCode 필드에 대해서만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>They will not be used for the Name and Address field.</source>
          <target state="translated">또한 이름과 주소 필드에 대 한 사용 되지 않습니다 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true even if no value is entered for those fields.</source>
          <target state="translated">이러한 필드에 대 한 입력 값이 없는 경우에 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the InsertParameters collection will be used.</source>
          <target state="translated">데이터 바인딩된 컨트롤이 자동으로 생성 데이터 원본의 모든 필드에 대 한 필드, 값이 없는 InsertParameters 컬렉션에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The parameters that are used during an insert operation.</source>
          <target state="translated">삽입 작업 중 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Initializes the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">초기화는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The event data.</source>
          <target state="translated">이벤트 데이터입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Raises the <bpt id="p1">&lt;xref href="System.Web.UI.Control.Unload"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> event.</source>
          <target state="translated">발생 된 <bpt id="p1">&lt;xref href="System.Web.UI.Control.Unload"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.EventArgs&gt; object that contains the event data.</source>
          <target state="translated">&lt;xref:System.EventArgs&gt;이벤트 데이터를 포함 하는 개체입니다.&lt;/xref:System.EventArgs&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
          <target state="translated">검색된 된 데이터를 정렬 하기 위한 어떤 필드가 사용 되는지를 지정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the OrderBy property to specify which properties from the returned data to use for sorting.</source>
          <target state="translated">OrderBy 속성을 사용 하 여 정렬에 사용할 반환된 된 데이터에서 어떤 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">데이터 정렬에 대 한 속성 데이터 원본에 있어야 하지만에 포함 될 필요가 없습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the OrderBy string in order to specify how the ordered data is returned.</source>
          <target state="translated">공간을 추가할 수 있습니다 및 <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, 또는 <ph id="ph4">`DESC`</ph> 정렬 된 데이터 반환 되는 방법을 지정 하기 위해 OrderBy 문자열의 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide more than one property in the OrderBy property by separating each property by using a comma.</source>
          <target state="translated">쉼표를 사용 하 여 각 속성을 구분 하 여 r b y 속성에서 둘 이상의 속성을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the OrderBy property to "LastName, FirstName".</source>
          <target state="translated">예를 들어 명명 된 속성으로 정렬할 수 <ph id="ph1">`LastName`</ph> 및 <ph id="ph2">`FirstName`</ph>, OrderBy 속성 "성, 이름"을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  When you use the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control with <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> and the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is set to <ph id="ph4">`true`</ph>, you must provide a value in the OrderBy property.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 사용 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;보호로 <ph id="ph2">[!INCLUDE[ss2k](~/add/includes/ss2k-md.md)]</ph> 또는 <ph id="ph3">[!INCLUDE[ssEW](~/add/includes/ssew-md.md)]</ph> 및 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;속성이 <ph id="ph4">`true`</ph>, OrderBy 속성의 값을 제공 해야 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt; property is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본적으로는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;속성은 <ph id="ph1">`true`</ph>.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a value to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">값을 할당 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 포함 해야 모든 identity 열은 쿼리에서 반환 되는 속성 목록에.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt; property is set to <ph id="ph1">`true`</ph>, a data-bound control can pass a sort expression to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control at run time.</source>
          <target state="translated">경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;속성이 <ph id="ph1">`true`</ph>, 데이터 바인딩된 컨트롤에서 정렬 식을 전달할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;런타임 시 컨트롤.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will apply the sort expression from the data-bound control after it applies the OrderBy property.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;OrderBy 속성을 적용 한 후 제어를 데이터 바인딩된 컨트롤에서에서 정렬 식을 적용 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
          <target state="translated">따라서 데이터를 데이터 바인딩된 컨트롤에서에서 정렬 식에 따라 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용 되는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the OrderByParameters collection to create the Order By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 런타임 시 Order By 절을 만들려는 경우에 OrderByParameters 컬렉션에 매개 변수를 사용 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property to <ph id="ph1">`true`</ph> when you add parameters to the OrderByParameters collection.</source>
          <target state="translated">일반적으로 설정 된 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;속성을 <ph id="ph1">`true`</ph> OrderByParameters 컬렉션에 매개 변수를 추가 하면.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property is set to <ph id="ph1">`true`</ph>, each parameter in the OrderByParameters collection is added to the Order By clause in the sequence that they are specified in the OrderByParameters collection.</source>
          <target state="translated">경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;속성이로 설정 되어 <ph id="ph1">`true`</ph>, 경우에 OrderByParameters 컬렉션의 각 매개 변수에 OrderByParameters 컬렉션에 지정 된 시퀀스에서 Order By 절에 추가 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt; property is <ph id="ph1">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
          <target state="translated">경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;속성은 <ph id="ph1">`true`</ph>, 매개 변수를 시퀀스에 적용 되 고 자리 표시자와 일치 하지 않습니다 때문에 이름을 지정할 필요가 없습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the OrderByParameters collection.</source>
          <target state="translated">Order By 절에서 런타임 시 값을 설정 해야 경우에 OrderByParameters 컬렉션을 사용할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields to use for ordering the data in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property.</source>
          <target state="translated">데이터 정렬에 사용할 필드를 정의할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; to "LastName" without any parameters.</source>
          <target state="translated">예를 들어 데이터베이스 테이블의 값을 반환 하 여 정렬 <ph id="ph1">`LastName`</ph>설정, &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;"LastName" 매개 변수 없이.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set parameters in the OrderByParameters collection and match the parameters to placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt; property, but this approach has limited application.</source>
          <target state="translated">경우에 OrderByParameters 컬렉션 매개 변수를 설정 하 고 자리 표시자에 매개 변수와 일치는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;속성에 있지만이 방법은 응용 프로그램 제한 된.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this approach, the parameters in the OrderByParameters collection cannot represent a column name.</source>
          <target state="translated">이 방법을 사용 하면 경우에 OrderByParameters 컬렉션의 매개 변수 열 이름을 나타낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
          <target state="translated">매개 변수 값으로 설정할 수 있으며 다음 속성의 값에 해당 값을 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">예를 들어 속성의 값 매개 변수가 나타내는 실행 시간 값 보다 작은 지 여부에 따라 데이터를 정렬할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The parameters that are used for creating the Order By clause.</source>
          <target state="translated">Order By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
          <target state="translated">그룹화 된 데이터 정렬에 사용 되는 필드를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the OrderGroupsBy property to specify how the groups of data are sorted.</source>
          <target state="translated">OrderGroupsBy 속성을 사용 하 여 데이터 그룹의 정렬 방식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
          <target state="translated">예를 들어 하 여 그룹화 수는 <ph id="ph1">`CategoryID`</ph> 속성 및 각 범주 ID의 평균을 기준으로 그룹화 한 다음 정렬은 <ph id="ph2">`Price`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the OrderGroupsBy property only when you have grouped the data.</source>
          <target state="translated">데이터를 그룹화 한 경우에 OrderGroupsBy 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the OrderGroupsBy property without setting the &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt; property, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control throws an exception.</source>
          <target state="translated">설정 하지 않고 OrderGroupsBy 속성을 설정 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤에서 예외가 throw 됩니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
          <target state="translated">데이터를 그룹화 하는 데 사용 되는 속성이 나 그룹화 된 데이터에 집계 함수 결과 데이터를 정렬 하는 데 사용 되는 속성 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the OrderGroupsBy string.</source>
          <target state="translated">데이터를 정렬 하는 방법을 지정 하려면 OrderGroupsBy 문자열에서 속성 이름에 공백과 "오름차순", "ASC", "Descending" 또는 "DESC" 문자열을 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify more than one property in the OrderGroupsBy property.</source>
          <target state="translated">OrderGroupsBy 속성에 둘 이상의 속성을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>Separate each property by using a comma.</source>
          <target state="translated">쉼표를 사용 하 여 각 속성을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order Groups By clause.</source>
          <target state="translated">그룹 Order By 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">그룹 Order By 절을 만드는 데 사용 되는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the OrderGroupsByParameters collection to create the Order Groups By clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 런타임에 그룹 Order By 절을 만들려는 OrderGroupsByParameters 컬렉션의 매개 변수를 사용 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add values to the OrderGroupsByParameters collection only when you must set values at run time in the Order Groups By clause.</source>
          <target state="translated">런타임에 그룹 Order By 절에서 값을 설정 해야 하는 경우에 OrderGroupsByParameters 컬렉션에 값을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields that are used to order the data by using the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property.</source>
          <target state="translated">사용 하 여 데이터를 정렬 하는 데 사용 되는 필드를 정의할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set parameters in the OrderGroupsByParameters collection and match the parameters to placeholders in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt; property.</source>
          <target state="translated">OrderGroupsByParameters 컬렉션 매개 변수를 설정 하 고 일치의 자리 표시자에 매개 변수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when you use this approach, the parameters in the OrderGroupsByParameters collection cannot represent a column name; they must represent values.</source>
          <target state="translated">그러나이 방법을 사용 하면 OrderGroupsByParameters 컬렉션의 매개 변수를 나타낼 수 없습니다 열 이름입니다. 이러한 값을 나타내야 합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
          <target state="translated">매개 변수 값으로 설정할 수 있으며 다음 속성에 해당 값을 비교할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">예를 들어 속성의 값 매개 변수가 나타내는 실행 시간 값 보다 작은 지 여부에 따라 데이터를 정렬할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">그룹 Order By 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
          <target state="translated">속성 및 검색된 된 데이터에 포함 된 계산 된 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the Select property, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control retrieves all the properties (data columns) from the data object.</source>
          <target state="translated">Select 속성을 설정 하지 않으면는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 데이터 개체에서 모든 속성 (데이터 열)을 검색 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the Select property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
          <target state="translated">Select 속성을 사용 하 여 개체에서 속성의 하위 집합을 검색 하거나 데이터를 검색 하는 경우 새 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify which properties to retrieve by setting the Select property to the names of the properties that you want to include in the returned data.</source>
          <target state="translated">반환된 된 데이터에 포함 하려는 속성의 이름에 Select 속성을 설정 하 여 검색 속성을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you retrieve a subset of properties from the data object, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control dynamically creates a class that contains only the properties that you specify in the Select property.</source>
          <target state="translated">데이터 개체에서 속성의 하위 집합을 검색 하는 경우는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 Select 속성에서 지정 하는 속성만 포함 하는 클래스를 동적으로 만듭니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
          <target state="translated">데이터 개체의 속성이 아닌 속성을 계산 하는 경우는 클래스를 동적으로 만들도 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt; property.</source>
          <target state="translated">이러한 경우 쿼리에서 반환 된 개체는 하지에 지정 된 클래스의 인스턴스는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the Select property to indicate that a new class is returned from the query.</source>
          <target state="translated">를 대신 사용 해야는 <ph id="ph1">`new`</ph> 메서드를 나타내는 새 클래스는 쿼리에서 반환 된 선택 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the Select property to <ph id="ph3">`new(FirstName, LastName)`</ph>.</source>
          <target state="translated">예를 들어만 반환 하는 <ph id="ph1">`FirstName`</ph> 및 <ph id="ph2">`LastName`</ph> Select 속성을 포함 하는 개체에서 속성을 두 개 이상의 이러한 속성을 설정 <ph id="ph3">`new(FirstName, LastName)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will dynamically create the new class that you specified in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤에서 지정한 새 클래스를 동적으로 만들는 <ph id="ph1">`new`</ph> 메서드.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
          <target state="translated">사용할 수는 <ph id="ph1">`As`</ph> 선택한 값에 별칭을 지정 하는 키워드입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">별칭을 지정 하는 경우에 된 속성을 포함 해야는 <ph id="ph1">`new`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any data-bound control that binds to the results from the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control must refer to the property by the alias.</source>
          <target state="translated">결과에 따라 바인딩하는 데이터 바인딩된 컨트롤의 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 속성의 별칭으로 참조 해야 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the Select property to <ph id="ph1">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph2">`SalesRegion`</ph> and <ph id="ph3">`RevenueThousands`</ph>.</source>
          <target state="translated">예를 들어, Select 속성을 설정 하면 <ph id="ph1">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, 데이터 바인딩 컨트롤 두 속성에 액세스할 수 <ph id="ph2">`SalesRegion`</ph> 및 <ph id="ph3">`RevenueThousands`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">`new`</ph> function in the Select property according to the conditions listed in the following table.</source>
          <target state="translated">사용 된 <ph id="ph1">`new`</ph> 다음 표에 나열 된 조건에 따라 Select 속성에는 함수입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Select|Use of new|Example|   |------------|----------------|-------------|   |Single property.|<ph id="ph1">`new`</ph> not needed.|<ph id="ph2">`Select="Category"`</ph>|   |Multiple properties.|<ph id="ph3">`new`</ph> needed.|<ph id="ph4">`Select="new(Cateogry, Name)"`</ph>|   |Single or multiple properties that have an alias.|<ph id="ph5">`new`</ph> needed.|<ph id="ph6">`Select="new(Category As CategoryGroup)"`</ph>|       If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the Select property.</source>
          <target state="translated">| 선택 | 새로운 사용 | 예 |   |------------|----------------|-------------|   | 속성을 단일. | <ph id="ph1">`new`</ph> 필요 하지 않습니다. | <ph id="ph2">`Select="Category"`</ph>|   | 여러 속성입니다. | <ph id="ph3">`new`</ph> 필요 합니다. | <ph id="ph4">`Select="new(Cateogry, Name)"`</ph>|   | 단일 컴퓨터 또는 별칭이 있는 여러 속성이 있습니다. | <ph id="ph5">`new`</ph> 필요 합니다. | <ph id="ph6">`Select="new(Category As CategoryGroup)"`</ph>|       자동 데이터 수정을 사용 하도록 설정 하려는 데이터 개체에서 모든 속성을 표시 하지 않을 경우에 Select 속성을 설정 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, manage the display through the data-bound control.</source>
          <target state="translated">대신, 관리 데이터 바인딩된 컨트롤을 통해 표시 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the &lt;xref:System.Web.UI.WebControls.DetailsView&gt; control or the &lt;xref:System.Web.UI.WebControls.GridView&gt; control, you must also set the &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; or the &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">사용 하는 경우는 &lt;xref:System.Web.UI.WebControls.DetailsView&gt;컨트롤 또는 &lt;xref:System.Web.UI.WebControls.GridView&gt;컨트롤을 설정 해야는 &lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;또는 &lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;속성을 <ph id="ph1">`false`</ph>.&lt;/xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt; &lt;/xref:System.Web.UI.WebControls.GridView&gt; &lt;/xref:System.Web.UI.WebControls.DetailsView&gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">데이터 바인딩된 컨트롤에 표시 되지 않는 모든 값은 뷰 상태에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">전달 됩니다 변경 되지 않은 데이터 원본에 데이터 업데이트를 수행 하는 경우.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data in the query, you can include aggregate methods in the Select property.</source>
          <target state="translated">쿼리에서 데이터를에서 그룹화 하는 경우 Select 속성에서 집계 메서드를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the following aggregate methods:      -   <ph id="ph1">`Count()`</ph><ph id="ph2">      -   </ph><ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph4">`)`</ph><ph id="ph5">      -   </ph><ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>column<ept id="p2">*</ept> <ph id="ph7">`)`</ph><ph id="ph8">      -   </ph><ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>column<ept id="p3">*</ept> <ph id="ph10">`)`</ph><ph id="ph11">      -   </ph><ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>column<ept id="p4">*</ept> <ph id="ph13">`)`</ph><ph id="ph14">      -   </ph><ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>condition<ept id="p5">*</ept> <ph id="ph16">`)`</ph><ph id="ph17">      -   </ph><ph id="ph18">`Any()`</ph><ph id="ph19">      -   </ph><ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>condition<ept id="p6">*</ept> <ph id="ph21">`)`</ph>       For more information, see <bpt id="p7">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p8">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">다음과 같은 집계 메서드를 사용할 수 있습니다:- <ph id="ph1">`Count()`</ph> <ph id="ph2">      -   </ph> <ph id="ph3">`Average(`</ph> <bpt id="p1">*</bpt>열<ept id="p1">*</ept> <ph id="ph4">`)`</ph> <ph id="ph5">      -   </ph> <ph id="ph6">`Sum(`</ph> <bpt id="p2">*</bpt>열<ept id="p2">*</ept> <ph id="ph7">`)`</ph> <ph id="ph8">      -   </ph> <ph id="ph9">`Max(`</ph> <bpt id="p3">*</bpt>열<ept id="p3">*</ept> <ph id="ph10">`)`</ph> <ph id="ph11">      -   </ph> <ph id="ph12">`Min(`</ph> <bpt id="p4">*</bpt>열<ept id="p4">*</ept> <ph id="ph13">`)`</ph> <ph id="ph14">      -   </ph> <ph id="ph15">`Where(`</ph> <bpt id="p5">*</bpt>조건<ept id="p5">*</ept> <ph id="ph16">`)`</ph> <ph id="ph17">      -   </ph> <ph id="ph18">`Any()`</ph> <ph id="ph19">      -   </ph> <ph id="ph20">`All(`</ph> <bpt id="p6">*</bpt>조건<ept id="p6">*</ept> <ph id="ph21">`)`</ph> 자세한 내용은 참조 <bpt id="p7">[</bpt>NIB: LinqDataSource 웹 서버 컨트롤 개요<ept id="p7">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> 및 <bpt id="p8">[</bpt>하는 방법: 그룹 및 집계 데이터를 사용 하 여 LinqDataSource 컨트롤<ept id="p8">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the Select property.</source>
          <target state="translated">데이터를 그룹화 할 때 포함할 수 있습니다 <ph id="ph1">`Key`</ph> 및 <ph id="ph2">`It`</ph>, Select 속성에 속성을 동적으로 만들어지는입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph> 속성은 속성 또는 데이터를 그룹화 하는 데 사용 된 속성의 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`Key`</ph> 속성의 각 고유 값에 포함 됩니다는 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph> 속성은 그룹화 된 데이터의에서 개별 레코드의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">반복할 수 있습니다는 <ph id="ph1">`It`</ph> 그룹화 작업에서 통합 된 개별 레코드를 검색 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">예를 들어, 속성을 기준으로 그룹화 한 경우 <ph id="ph1">`Category`</ph>, <ph id="ph2">`It`</ph> 에 공통 값을 공유 하는 모든 개별 레코드를 포함 하는 속성은 <ph id="ph3">`Category`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the Select property when you group data, you must assign an alias to the <ph id="ph2">`It`</ph> keyword.</source>
          <target state="translated">포함 하는 경우는 <ph id="ph1">`It`</ph> 데이터를 그룹화 하는 경우 Select 속성에서 키워드를 별칭을 할당 해야는 <ph id="ph2">`It`</ph> 키워드입니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will throw an exception if <ph id="ph1">`It`</ph> does not have an alias.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 하는 경우 예외가 throw 됩니다 <ph id="ph1">`It`</ph> 별칭에는 없습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
          <target state="translated">에 대 한 별칭을 할당할 수는 <ph id="ph1">`Key`</ph> 키워드, 하지만이 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Select clause.</source>
          <target state="translated">Select 절을 만드는 데 사용 되는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Occurs when a data retrieval operation has finished.</source>
          <target state="translated">데이터 검색 작업이 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Selected event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
          <target state="translated">데이터 검색 작업에서 발생 한 예외를 catch 하거나 검색 작업이 완료 된 후 데이터 개체를 확인 하려면 선택한 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object is available from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">개체는에서 사용할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;이벤트 처리기에 전달 되는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Occurs before a data-retrieval operation.</source>
          <target state="translated">데이터 검색 작업이 수행 되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Selecting event in order to perform the following tasks:      -   Modify parameters for data retrieval.</source>
          <target state="translated">다음 작업을 수행 하기 위해 Selecting 이벤트를 처리 합니다.-데이터 검색에 대 한 매개 변수를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Generate the query programmatically.</source>
          <target state="translated">-쿼리를 프로그래밍 방식으로 생성 합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Modify the values for sorting or paging.</source>
          <target state="translated">-정렬 또는 페이징에 대 한 값을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Perform custom sorting or paging.</source>
          <target state="translated">-사용자 지정 정렬 또는 페이징을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>-   Cancel the data-retrieval operation.</source>
          <target state="translated">-데이터 검색 작업을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;데이터 검색 작업에 대 한 매개 변수를 포함 하는이 이벤트에 대 한 이벤트 처리기에 전달 되는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the parameters in the Selecting event handler before the query executes, or you can create a new result set and assign that to the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">쿼리를 실행 또는 새 결과 집합을 만들고에 할당할 수 전에 Selecting 이벤트 처리기의 매개 변수를 수정할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;.</source>
          <target state="translated">사용자 지정 정렬 또는이 이벤트 처리기에서 페이징을 구현 하는 기능 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; 에 바인딩되는 컨트롤에 의해 제한 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the column header of a &lt;xref:System.Web.UI.WebControls.GridView&gt; control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
          <target state="translated">예를 들어, 열 머리글의는 &lt;xref:System.Web.UI.WebControls.GridView&gt;컨트롤을 클릭 하면, 컨트롤이 있는 자동 정렬 순서 대로 재정의할 설정할 수는 이벤트 처리기를 수행 합니다.&lt;/xref:System.Web.UI.WebControls.GridView&gt;</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the Selecting event, you must handle the exception in that event handler.</source>
          <target state="translated">Selecting 이벤트에 대 한 이벤트 처리기에서 예외가 throw 되 면 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;이벤트 (통해는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;개체).&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Selecting event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;속성 Selecting 이벤트 이후에 throw 되는 예외가 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
          <target state="translated">데이터 검색 작업 중에 사용 되는 매개 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the SelectParameters collection to create the Select clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤 런타임 시 Select 절을 만들려는 SelectParameters 컬렉션의 매개 변수를 사용 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the SelectParameters collection when you want to use run-time values in the Select clause.</source>
          <target state="translated">Select 절에 실행 시간 값을 사용할 때만 SelectParameters 컬렉션에 매개 변수를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can add a parameter to the SelectParameters collection to represent a property in the user's profile.</source>
          <target state="translated">예를 들어 사용자의 프로필에 속성을 나타내는 SelectParameters 컬렉션에는 매개 변수를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
          <target state="translated">새 값을 계산 하는 데이터 소스에서 해당 속성 및 값 다음 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the SelectParameters collection.</source>
          <target state="translated">Select 절에서 런타임 시 값을 설정 해야 하는 경우만 SelectParameters 컬렉션을 사용할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the properties to retrieve in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property.</source>
          <target state="translated">검색할 속성을 정의할 수 있습니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; to "FirstName, LastName" without any parameters.</source>
          <target state="translated">예를 들어, 반환 하는 <ph id="ph1">`FirstName`</ph> 및 <ph id="ph2">`LastName`</ph> 데이터베이스 테이블에서 값이 설정 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;"FirstName, LastName"에 매개 변수 없이.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the SelectParameters collection, you add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property for the named parameter.</source>
          <target state="translated">자리 표시자를 추가 SelectParameters 컬렉션에 값을 설정 하는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;명명 된 매개 변수에 대 한 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Select 절에서 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use a parameter in the SelectParameters collection to represent a property name.</source>
          <target state="translated">속성 이름을 나타내는 데 SelectParameters 컬렉션의 매개 변수를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dynamically set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property to the name of a property, create an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; event and customize the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; property as needed.</source>
          <target state="translated">동적으로 설정 하는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;속성을 속성의 이름에 대 한 이벤트 처리기를 만들고는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;이벤트 및 사용자 지정는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;필요에 따라 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Select clause.</source>
          <target state="translated">Select 절을 만드는 데 사용 되는 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
          <target state="translated">데이터는 변경 되지 않았는지 다른 프로세스에 의해 업데이트 되거나 삭제 되기 전에 고유 하도록 뷰 상태에 데이터 원본에서 데이터를 저장 해야 하는지 여부를 나타내는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, when update and delete operations have been enabled, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores the original values for all the records in view state.</source>
          <target state="translated">기본적으로 업데이트 및 삭제 작업, 설정 된는 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어 모든 레코드 뷰 상태에 대 한 원래 값을 저장 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control stores values for all primary keys and all properties not marked with <ph id="ph1">`UpdateCheck.Never`</ph> in the <ph id="ph2">`Column`</ph> attribute.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;모든 기본 키에 대 한 값을 저장 하는 컨트롤 및 모든 속성으로 표시 되지 <ph id="ph1">`UpdateCheck.Never`</ph> 에 <ph id="ph2">`Column`</ph> 특성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">설정한는 <ph id="ph1">`UpdateCheck`</ph> 의 속성은 <ph id="ph2">`Column`</ph> 특성에 <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
          <target state="translated">LINQ to SQL 업데이트 하거나 데이터를 삭제, 전에 데이터 원본에 있는 현재 값에 대 한 뷰 상태의 값을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the values do not match, the data source record has changed.</source>
          <target state="translated">값이 일치 하지 않는 데이터 원본 레코드 변경 되었습니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
          <target state="translated">이 경우 LINQ to SQL 예외를 throw 업데이트를 계속 되거나 않는 작업을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">LINQ to SQL에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
          <target state="translated">보기에 원래 값이 저장 상태 불필요 하 게 커질 하도록 페이지 크기를 발생할 수 있으며 악의적인 사용자에 게 중요 한 데이터를 노출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can disable storing values in view state by setting the StoreOriginalValuesInViewState property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">StoreOriginalValuesInViewState 속성을 설정 하 여 보기에 상태 값이 저장 하지 않으려면 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
          <target state="translated">이 작업을 수행 하는 경우 데이터가 변경 되지 않은 고유 하도록 고유한 방법을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the StoreOriginalValuesInViewState property to <ph id="ph1">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
          <target state="translated">StoreOriginalValuesInViewState 속성을 설정 하는 경우 <ph id="ph1">`false`</ph>, 데이터 바인딩된 컨트롤에 대 한 뷰 상태에 원래 값이 유지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
          <target state="translated">이 경우 LINQ to SQL 데이터의 무결성을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
          <target state="translated">LINQ to SQL 데이터 원본의 데이터를에서 실제로 변경 되지 않은 경우에 데이터 충돌을 표시 하는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
          <target state="translated">데이터 원본 업데이트 하는 동안 자동으로 업데이트 하는 타임 스탬프 필드를 있으면 해당 값만 뷰 상태에 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">이 경우에 타임 스탬프 엔터티 클래스에서 속성 <ph id="ph1">`IsVersion=true`</ph> 모든 속성이로 설정 되 고 <ph id="ph2">`UpdateCheck.Never`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
          <target state="translated">타임 스탬프 필드는 자동으로 업데이트 되므로 데이터베이스에서 해당 레코드의 데이터가 변경 될 때마다 LINQ to SQL은 데이터가 변경 된 경우 해당 값에서 결정 합니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
          <target state="translated">이렇게 하면 상태 보기의 크기를 줄일 수 및 중요 한 데이터가 노출 됩니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
          <target state="translated">LINQ to SQL은 상태를 확인할 데이터 일관성에 대 한 보기에 타임 스탬프 값을 비교 하 여 데이터베이스의 타임 스탬프 값으로.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연습: 타임 스탬프를 사용 하 여 데이터 무결성 검사를 LinqDataSource 컨트롤과<ept id="p1">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the values will be stored in view state; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>상태 값 보기에 저장 되는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The default value is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 멤버에 대 한 참조 <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; instance is cast to an &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;인터페이스.&lt;/xref:System.Web.DynamicData.IDynamicDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The type that is associated with the class.</source>
          <target state="translated">클래스와 연결 된 형식입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 멤버에 대 한 참조 <bpt id="p1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; instance is cast to an &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;인터페이스.&lt;/xref:System.Web.DynamicData.IDynamicDataSource&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
          <target state="translated">엔터티의 이름입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
          <target state="translated">데이터 컬렉션을 나타내는 데이터 컨텍스트 클래스의 속성이 나 필드의 이름을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the TableName property to the name of the property or field that represents the data that you want to retrieve.</source>
          <target state="translated">검색할 데이터를 나타내는 필드나 속성의 이름으로 TableName 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
          <target state="translated">데이터베이스 테이블에 연결 하는 경우 속성의 이름은 일반적으로 테이블의 이름과 동일 합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are connecting to an in-memory data collection, set the TableName property to the name of the property or field that returns the data collection.</source>
          <target state="translated">메모리 내 데이터 컬렉션에 연결 하는 경우 데이터 컬렉션을 반환 하는 필드나 속성의 이름으로 TableName 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign a property that returns any type to the TableName property for retrieval operations.</source>
          <target state="translated">검색 작업에 대 한 TableName 속성에 모든 형식을 반환 하는 속성을 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object that is represented by the property does not implement &lt;xref:System.Collections.IEnumerable&gt;, the &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control will automatically wrap the object in an instance of an &lt;xref:System.Collections.IEnumerable&gt; object.</source>
          <target state="translated">속성으로 표현 하는 개체 구현 하지 않습니다 &lt;xref:System.Collections.IEnumerable&gt;, &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;컨트롤이 자동으로 줄 바꿈됩니다 개체의 인스턴스에서는 &lt;xref:System.Collections.IEnumerable&gt;개체입니다.&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt; &lt;/xref:System.Collections.IEnumerable&gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; property must derive from &lt;xref:System.Data.Linq.DataContext&gt; and the property that is assigned to the TableName property must derive from &lt;xref:System.Data.Linq.Table%601&gt;.</source>
          <target state="translated">자동으로 업데이트, 삽입 또는 삭제 작업의 경우 클래스 &lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;속성 &lt;xref:System.Data.Linq.DataContext&gt;및 속성 &lt;xref:System.Data.Linq.Table%601&gt;.&lt;/xref:System.Data.Linq.Table%601&gt; 에서 파생 되어야 TableName에 할당 된 속성에서&lt;/xref:System.Data.Linq.DataContext&gt; 파생 되어야&lt;/xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt; 에 할당 된</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to select data from an instance of a class, see the &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt; property.</source>
          <target state="translated">클래스의 인스턴스에서 데이터를 선택 하는 방법에 대 한 정보를 참조 하십시오.는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the property that contains the data collection.</source>
          <target state="translated">데이터 컬렉션을 포함 하는 속성의 이름을 포함 하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Performs an update operation.</source>
          <target state="translated">업데이트 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the Update method from your code.</source>
          <target state="translated">일반적으로 사용자 코드에서 Update 메서드를 호출할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control will automatically call the Update method when the user takes action to update a record.</source>
          <target state="translated">자동으로 데이터 바인딩된 컨트롤에서는 사용자가 레코드를 업데이트 하는 작업을 수행 하는 경우 Update 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the Update method when you want to create your own process for updating data.</source>
          <target state="translated">데이터 업데이트에 대 한 사용자가 소유한 프로세스를 만들려고 할 때에 Update 메서드를 명시적으로 호출 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be updated.</source>
          <target state="translated">레코드를 업데이트할 수에 대 한 행 키 값입니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The row values to be updated in the data source.</source>
          <target state="translated">행 값을 데이터 원본에서 업데이트할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">데이터 충돌을 감지 계산 되는 행 값.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The number of records affected by the update operation.</source>
          <target state="translated">업데이트 작업에 영향을 받는 레코드 수입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Occurs when an update operation has finished.</source>
          <target state="translated">업데이트 작업이 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Updated event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
          <target state="translated">업데이트 작업에서 발생 한 예외를 catch 하거나 업데이트 작업이 완료 된 후 출력 매개 변수 값을 확인 하려면 업데이트 된 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output parameters are available from the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object that is passed to event handlers.</source>
          <target state="translated">출력 매개 변수는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;이벤트 처리기에 전달 되는 개체입니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>This collection is not used by the <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">이 컬렉션에서 사용 되지 않는 <bpt id="p1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
          <target state="translated">컬렉션 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Occurs before an update operation.</source>
          <target state="translated">업데이트 작업이 수행 되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the Updating event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
          <target state="translated">업데이트, 업데이트 작업 전의 값을 변경 하거나 업데이트 작업을 취소 하는 데이터 클래스의 데이터 유효성 검사 오류를 검사 하는 개체의 유효성을 검사 하려면 업데이트 이벤트를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; object that is passed to event handlers contains both the original object and the updated object.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;이벤트 처리기에 전달 되는 개체에는 원래 개체와 업데이트 된 개체를 모두 포함 되어 있습니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation error occurs during the update operation, the &lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;데이터 클래스에 의해 throw 되는 유효성 검사 예외를 포함 하는 개체&lt;/xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; 업데이트 작업 중에 유효성 검사 오류가 발생 하는 경우</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">유효성 검사 오류가 업데이트할 값 데이터 클래스에 속성의 형식과 일치 하지 않는 경우 또는 사용자 지정 유효성 검사를 통과 하지 못하면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the Updating event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">업데이트 이벤트에 대 한 이벤트 처리기를 유효성 검사 예외를 검색할 수 있으며 적절 한 조치를 취할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the Updating event, you must handle the exception in that event handler.</source>
          <target state="translated">업데이트 이벤트에 대 한 이벤트 처리기에서 예외가 throw 되 면 해당 이벤트 처리기에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt; event (through the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property of the &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; object).</source>
          <target state="translated">예외에 대 한 이벤트 처리기에 전달 되지 것입니다는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;이벤트 (통해는 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;의 속성은 &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;개체).&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; &lt;/xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt; property contains only the exceptions that are thrown after the Updating event.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;속성 업데이트 이벤트 이후에 throw 된 예외가 포함 합니다.&lt;/xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
          <target state="translated">가져오거나 조건을 지정 하는 값 검색된 된 데이터에 포함 된 레코드에 대해 true 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Where clause.</source>
          <target state="translated">Where를 만드는 데 사용 되는 문자열 절.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
          <target state="translated">Where를 만드는 데 사용 되는 매개 변수 컬렉션을 가져옵니다 절.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Web.UI.WebControls.LinqDataSource&gt; control uses parameters in the WhereParameters collection to create the Where clause at run time.</source>
          <target state="translated">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;제어를 사용 하 여 매개 변수 WhereParameters 컬렉션에 Where 만들 런타임 시 절.&lt;/xref:System.Web.UI.WebControls.LinqDataSource&gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the WhereParameters collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
          <target state="translated">프로그래밍 방식으로 where에서 조건 중 하나 이상을 설정할 때 WhereParameters 컬렉션에 매개 변수를 추가 하면 절.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might search a database table for records with a last name equal to the value of a &lt;xref:System.Web.UI.WebControls.TextBox&gt; control.</source>
          <target state="translated">값과 같은 성 가진 레코드에 대 한 데이터베이스 테이블을 검색할 수는 예를 들어 한 &lt;xref:System.Web.UI.WebControls.TextBox&gt;컨트롤.&lt;/xref:System.Web.UI.WebControls.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you add a parameter to the WhereParameters collection for the text box value.</source>
          <target state="translated">이 경우 매개 변수를 입력란 값에 대 한 WhereParameters 컬렉션 추가 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the WhereParameters collection.</source>
          <target state="translated">Where에서 런타임 시 값을 설정 하지 않은 경우 절 않아도 WhereParameters 컬렉션을 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields to retrieve in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property.</source>
          <target state="translated">검색할 필드를 정의할 수는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property to <ph id="ph2">`'LastName = "Adams"'`</ph> without any parameters.</source>
          <target state="translated">예를 들어, 데이터베이스 테이블에서 값을 반환할 위치 <ph id="ph1">`LastName`</ph> 태그의 "Adams" equals 설정는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;속성을 <ph id="ph2">`'LastName = "Adams"'`</ph> 매개 변수 없이.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the WhereParameters collection, you assign a name to each parameter and then add a placeholder in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt; property for that parameter.</source>
          <target state="translated">WhereParameters 컬렉션에 값을 설정 하려면 각 매개 변수에 이름을 할당 하 고이 다음에 자리 표시자를 추가할는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;해당 매개 변수에 대 한 속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Where에서 절, 각 매개 변수 이름 앞에 @ 기호입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>A collection of the parameters that are used to create the Where clause in the &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt; property.</source>
          <target state="translated">Where를 만드는 데 사용 되는 매개 변수의 컬렉션 절에는 &lt;xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt;속성.&lt;/xref:System.Web.UI.WebControls.LinqDataSource.Where*&gt;</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>