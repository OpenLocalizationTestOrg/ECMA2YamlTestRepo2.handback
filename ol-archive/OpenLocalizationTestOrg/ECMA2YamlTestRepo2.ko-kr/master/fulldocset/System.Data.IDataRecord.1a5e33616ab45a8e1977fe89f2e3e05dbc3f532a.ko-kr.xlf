<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f28e5353c666eefb1cca3c3a61cd395bdbf3c89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Data.IDataRecord.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7425aaa5559fc7bfc8980359e45f1b27873e9121</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4c21e77994400cc8c49f859607cd1c4064e5f86</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to the column values within each row for a <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated">에 대 한 각 행에 열 값에 대 한 액세스를 제공는 <bpt id="p1">&lt;xref uid="langword_csharp_DataReader" name="DataReader" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 관계형 데이터베이스에 액세스 하는.NET Framework 데이터 공급자에 의해 구현 됩니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Data.IDataReader&gt; and IDataRecord interfaces enable an inheriting class to implement a <ph id="ph1">`DataReader`</ph> class.</source>
          <target state="translated">&lt;xref:System.Data.IDataReader&gt;IDataRecord 인터페이스를 구현 하려면 상속 하는 클래스를 사용 하 고는 <ph id="ph1">`DataReader`</ph> 클래스&lt;/xref:System.Data.IDataReader&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides a way of reading one or more forward-only streams of result sets.</source>
          <target state="translated">이 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽을 수가 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">`DataReader`</ph> classes, see <bpt id="p1">[</bpt>Retrieving Data Using a DataReader<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`DataReader`</ph> 클래스 참조 <bpt id="p1">[</bpt>DataReader를 사용 하 여 데이터 검색<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application does not create an instance of the IDataRecord interface directly, but creates an instance of a class that inherits IDataRecord.</source>
          <target state="translated">응용 프로그램을 직접 IDataRecord 인터페이스의 인스턴스를 만들지 않는 있지만 IDataRecord 상속 하는 클래스의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do this by obtaining a <ph id="ph1">`DataReader`</ph> through the <ph id="ph2">`ExecuteReader`</ph> method of the <ph id="ph3">`Command`</ph> object.</source>
          <target state="translated">일반적으로 이렇게 하면 가져옴으로써는 <ph id="ph1">`DataReader`</ph> 통해는 <ph id="ph2">`ExecuteReader`</ph> 의 메서드는 <ph id="ph3">`Command`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit IDataRecord must implement all inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">IDataRecord 상속 된 클래스는 상속 된 모든 멤버를 구현 하 고 일반적으로 공급자 특정 기능을 추가 하려면 추가 멤버를 정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Providers implementing a <ph id="ph1">`DataReader`</ph> are required to expose data in common language runtime (CLR) types.</source>
          <target state="translated">구현 하는 공급자는 <ph id="ph1">`DataReader`</ph> 공용 언어 런타임 (CLR) 형식에서 데이터를 노출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type coercion is defined for some types not included in the CLR.</source>
          <target state="translated">형식 강제 변환이 CLR에 없는 일부 형식에 대해 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values may be accessed as alternative types that comply with CLR types.</source>
          <target state="translated">이러한 값은 CLR 형식 준수 하는 대체 형식으로 서 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, the following table lists suggested mappings from OLE DB data types to CLR types, with alternative types in parentheses.</source>
          <target state="translated">예를 들어, 다음 표에서 CLR 형식 괄호 안에 있는 대체 형식으로 OLE DB 데이터 형식 간의 매핑을 나열합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>|OLE DB type|CLR type|   |-----------------|--------------|   |DBTYPE_BOOL|Int16|   |DBTYPE_BSTR|string|   |DBTYPE_BYTES|byte[]|   |DBTYPE_CY|Decimal|   |DBTYPE_DATE|DateTime|   |DBTYPE_DBDATE|DateTime|   |DBTYPE_DBTIME|DateTime|   |DBTYPE_DBTIMESTAMP|DateTime|   |DBTYPE_DECIMAL|Decimal|   |DBTYPE_EMPTY|null|   |DBTYPE_ERROR|ExternalException|   |DBTYPE_FILETIME|DateTime|   |DBTYPE_GUID|Guid|   |DBTYPE_HCHAPTER|not supported|   |DBTYPE_I1|SByte|   |DBTYPE_I2|Int16|   |DBTYPE_I4|Int32|   |DBTYPE_I8|Int64|   |DBTYPE_IDISPATCH|object|   |DBTYPE_IUNKNOWN|object|   |DBTYPE_NULL|DBNull.Value|   |DBTYPE_NUMERIC|Decimal|   |DBTYPE_PROPVARIANT|object|   |DBTYPE_R4|Single|   |DBTYPE_R8|Double|   |DBTYPE_STR|string|   |DBTYPE_UDT|not supported|   |DBTYPE_UI1|byte (Int16)|   |DBTYPE_UI2|UInt16 (Int32)|   |DBTYPE_UI4|UInt32 (Int64)|   |DBTYPE_UI8|UInt64 (Decimal)|   |DBTYPE_VARIANT|object|   |DBTYPE_VARNUMERIC|not supported|   |DBTYPE_WSTR|string|</source>
          <target state="translated">| OLE DB 형식 | CLR 형식 |   |-----------------|--------------|   | DBTYPE_BOOL | Int16 |   | DBTYPE_BSTR | 문자열 |   | DBTYPE_BYTES | byte |   | DBTYPE_CY |&amp;10; 진수 |   | DBTYPE_DATE | 날짜/시간 |   | DBTYPE_DBDATE | 날짜/시간 |   | DBTYPE_DBTIME | 날짜/시간 |   | DBTYPE_DBTIMESTAMP | 날짜/시간 |   | DBTYPE_DECIMAL |&amp;10; 진수 |   | DBTYPE_EMPTY | null |   | DBTYPE_ERROR | ExternalException |   | DBTYPE_FILETIME | 날짜/시간 |   | DBTYPE_GUID | Guid |   | DBTYPE_HCHAPTER | 지원 되지 않습니다 |   | DBTYPE_I1 | SByte |   | DBTYPE_I2 | Int16 |   | DBTYPE_I4 | Int32 |   | DBTYPE_I8 | Int64 |   | DBTYPE_IDISPATCH | 개체 |   | DBTYPE_IUNKNOWN | 개체 |   | DBTYPE_NULL | DBNull.Value|   | DBTYPE_NUMERIC |&amp;10; 진수 |   | DBTYPE_PROPVARIANT | 개체 |   | DBTYPE_R4 | 단일 |   | DBTYPE_R8 | 이중 |   | DBTYPE_STR | 문자열 |   | DBTYPE_UDT | 지원 되지 않습니다 |   | DBTYPE_UI1 | 바이트 (Int16) |   | DBTYPE_UI2 | UInt16 (Int32) |   | DBTYPE_UI4 | UInt32 (입니다 Int64) |   | DBTYPE_UI8 | UInt64 (10 진수) |   | DBTYPE_VARIANT | 개체 |   | DBTYPE_VARNUMERIC | 지원 되지 않습니다 |   | DBTYPE_WSTR | 문자열 |</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the number of columns in the current row.</source>
          <target state="translated">현재 행에서 열 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After executing a query that does not return rows (for example, using the &lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt; method), FieldCount returns -1.</source>
          <target state="translated">행을 반환 하지 않는 쿼리를 실행 한 후 (예를 들어를 사용 하는 &lt;xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;메서드), FieldCount-1을 반환 합니다.&lt;/xref:System.Data.IDbCommand.ExecuteNonQuery%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record.</source>
          <target state="translated">위치 하지 않은 경우에 유효한 recordset 0; 그렇지 않으면 현재 레코드에 있는 열의 수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default is -1.</source>
          <target state="translated">기본값은-1입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the value of the specified column as a Boolean.</source>
          <target state="translated">부울으로 지정 된 열의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>No conversions are performed.</source>
          <target state="translated">변환이 수행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the data retrieved must already be a Boolean; otherwise an exception is generated.</source>
          <target state="translated">따라서 검색 된 데이터 이미 부울 이어야 합니다. 그렇지 않으면 예외가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">서 수는&amp;0;부터 시작 열입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The value of the column.</source>
          <target state="translated">열의 값입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the 8-bit unsigned integer value of the specified column.</source>
          <target state="translated">지정 된 열의 8 비트 부호 없는 정수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">서 수는&amp;0;부터 시작 열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer value of the specified column.</source>
          <target state="translated">지정 된 열의 8 비트 부호 없는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</source>
          <target state="translated">지정한 열 오프셋에서의 바이트 스트림을 지정한 버퍼 오프셋에서 시작 하는 배열로 버퍼로 읽습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetBytes returns the number of available bytes in the field.</source>
          <target state="translated">GetBytes 필드에 사용 가능한 바이트 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequently this is the exact length of the field.</source>
          <target state="translated">자주이 필드의 길이 해당 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the number returned may be less than the true length of the field if <ph id="ph1">`GetBytes`</ph> has already been used to obtain bytes from the field.</source>
          <target state="translated">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 <ph id="ph1">`GetBytes`</ph> 바이트를 얻는 필드에서 이미 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, GetBytes returns the length of the row in bytes.</source>
          <target state="translated">버퍼를 전달 하는 경우 <ph id="ph1">`null`</ph>, GetBytes 행의 길이 바이트 단위로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>No conversions are performed; therefore the data retrieved must already be a byte array.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에는 바이트 배열 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">서 수는&amp;0;부터 시작 열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The index within the field from which to start the read operation.</source>
          <target state="translated">읽기 작업을 시작할 필드 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">바이트 스트림의 읽을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The index for <ph id="ph1">`buffer`</ph> to start the read operation.</source>
          <target state="translated">에 대 한 인덱스 <ph id="ph1">`buffer`</ph> 읽기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The number of bytes to read.</source>
          <target state="translated">읽을 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The actual number of bytes read.</source>
          <target state="translated">실제 읽은 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the character value of the specified column.</source>
          <target state="translated">지정 된 열의 문자 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">서 수는&amp;0;부터 시작 열입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The character value of the specified column.</source>
          <target state="translated">지정 된 열의 문자 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</source>
          <target state="translated">지정한 열 오프셋에서의 문자 스트림을 지정한 버퍼 오프셋에서 시작 하는 배열로 버퍼에 읽습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetChars returns the number of available characters in the field.</source>
          <target state="translated">GetChars 필드에 사용할 수 있는 문자 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Frequently this is the exact length of the field.</source>
          <target state="translated">자주이 필드의 길이 해당 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the number returned may be less than the exact length of the field if <ph id="ph1">`GetChars`</ph> has already been used to obtain characters from the field.</source>
          <target state="translated">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 해당 하는 경우 <ph id="ph1">`GetChars`</ph> 문자를 가져올 필드에서 이미 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass a buffer that is <ph id="ph1">`null`</ph>, <ph id="ph2">`GetChars`</ph> returns the length of the field in characters.</source>
          <target state="translated">버퍼를 전달 하는 경우 <ph id="ph1">`null`</ph>, <ph id="ph2">`GetChars`</ph> 필드의 길이 문자 단위로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>No conversions are performed; therefore the data retrieved must already be a character array.</source>
          <target state="translated">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 문자 배열 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The zero-based column ordinal.</source>
          <target state="translated">서 수는&amp;0;부터 시작 열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The index within the row from which to start the read operation.</source>
          <target state="translated">읽기 작업을 시작할 행 내의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The buffer into which to read the stream of bytes.</source>
          <target state="translated">바이트 스트림의 읽을 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The index for <ph id="ph1">`buffer`</ph> to start the read operation.</source>
          <target state="translated">에 대 한 인덱스 <ph id="ph1">`buffer`</ph> 읽기 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The number of bytes to read.</source>
          <target state="translated">읽을 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The actual number of characters read.</source>
          <target state="translated">실제 읽은 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns an <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified column ordinal.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 열 서 수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for the specified column ordinal.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Data.IDataReader"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 열 서 수입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the data type information for the specified field.</source>
          <target state="translated">지정된 된 필드에 대 한 데이터 형식 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data type information can differ from the type information returned by <ph id="ph1">`GetFieldType`</ph>, especially where the underlying data types do not map one for one to the runtime types supported by the language.</source>
          <target state="translated">데이터 형식 정보에서 반환 된 형식 정보에서 다를 수 있습니다 <ph id="ph1">`GetFieldType`</ph>, 특히 여기서 기본 데이터 형식은 매핑되지 않는 한 해당 언어에서 지 원하는 런타임 형식입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>(for example, <ph id="ph1">`DataTypeName`</ph> may be "integer", while <ph id="ph2">`Type.Name`</ph> may be "Int32".)</source>
          <target state="translated">(예를 들어 <ph id="ph1">`DataTypeName`</ph> 있습니다 "integer" 일 동안 <ph id="ph2">`Type.Name`</ph> "Int32" 일 수 있습니다.)</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The data type information for the specified field.</source>
          <target state="translated">데이터 형식 지정된 된 필드에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the date and time data value of the specified field.</source>
          <target state="translated">지정된 된 필드의 날짜 및 시간 데이터 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The date and time data value of the specified field.</source>
          <target state="translated">날짜 및 시간 데이터 값의 지정된 된 필드입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets the fixed-position numeric value of the specified field.</source>
          <target state="translated">지정된 된 필드의 고정 위치 숫자 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The fixed-position numeric value of the specified field.</source>
          <target state="translated">지정된 된 필드의 고정 위치 숫자 값입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the double-precision floating point number of the specified field.</source>
          <target state="translated">지정된 된 필드의 이중 정밀도 부동 소수점 숫자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The double-precision floating point number of the specified field.</source>
          <target state="translated">이중 정밀도의 부동 소수점 숫자 지정된 된 필드입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; information corresponding to the type of &lt;xref:System.Object&gt; that would be returned from &lt;xref:System.Data.IDataRecord.GetValue*&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt; &lt;xref:System.Object&gt; &lt;xref:System.Data.IDataRecord.GetValue*&gt;.&lt;/xref:System.Data.IDataRecord.GetValue*&gt; 에서 반환 되는&lt;/xref:System.Object&gt; 형식에 해당 하는 정보&lt;/xref:System.Type&gt; 를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information can be used to increase performance by indicating the strongly-typed accessor to call.</source>
          <target state="translated">이 정보를 호출 하는 강력한 형식의 접근자를 지정 하 여 성능을 향상 시키기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>(for example, using <ph id="ph1">`GetInt32`</ph> is roughly ten times faster than using <ph id="ph2">`GetValue`</ph>.)</source>
          <target state="translated">(사용 하 여 예를 들어 <ph id="ph1">`GetInt32`</ph> 는 약&amp;10; 배를 사용 하 여 보다 빠르게 <ph id="ph2">`GetValue`</ph>.)</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; information corresponding to the type of &lt;xref:System.Object&gt; that would be returned from &lt;xref:System.Data.IDataRecord.GetValue*&gt;.</source>
          <target state="translated">&lt;xref:System.Type&gt; &lt;xref:System.Object&gt; &lt;xref:System.Data.IDataRecord.GetValue*&gt;.&lt;/xref:System.Data.IDataRecord.GetValue*&gt; 에서 반환 되는&lt;/xref:System.Object&gt; 형식에 해당 정보는&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets the single-precision floating point number of the specified field.</source>
          <target state="translated">지정된 된 필드의 단 정밀도 부동 소수점 숫자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The single-precision floating point number of the specified field.</source>
          <target state="translated">된 단 정밀도 부동 소수점 숫자의 지정된 된 필드입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Returns the GUID value of the specified field.</source>
          <target state="translated">지정된 된 필드의 GUID 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The GUID value of the specified field.</source>
          <target state="translated">지정된 된 필드의 GUID 값입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the 16-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 16 비트 부호 있는 정수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The 16-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 16 비트 부호 있는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the 32-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 32 비트 부호 있는 정수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The 32-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 32 비트 부호 있는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets the 64-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 64 비트 부호 있는 정수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The 64-bit signed integer value of the specified field.</source>
          <target state="translated">지정된 된 필드의 64 비트 부호 있는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets the name for the field to find.</source>
          <target state="translated">찾을 필드의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The name of the field or the empty string (""), if there is no value to return.</source>
          <target state="translated">이름 필드 또는 빈 문자열 (""), 반환할 값이 없는 경우.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Return the index of the named field.</source>
          <target state="translated">지정된 된 필드의 인덱스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`GetOrdinal`</ph> performs a case-sensitive lookup first.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph>대/소문자 구분 조회를 먼저 수행합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`GetOrdinal`</ph> is kana-width insensitive.</source>
          <target state="translated"><ph id="ph1">`GetOrdinal`</ph>가 되지 일본어가 나 너비 구분 됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the index of the named field is not found, an <ph id="ph1">`IndexOutOfRangeException`</ph> is thrown.</source>
          <target state="translated">지정된 된 필드의 인덱스 없으면는 <ph id="ph1">`IndexOutOfRangeException`</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <ph id="ph1">`GetOrdinal`</ph> within a loop.</source>
          <target state="translated">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 <ph id="ph1">`GetOrdinal`</ph> 루프 내에서.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Save time by calling <ph id="ph1">`GetOrdinal`</ph> one time and assigning the results to an integer variable for use within the loop.</source>
          <target state="translated">호출 하 여 시간 절약 <ph id="ph1">`GetOrdinal`</ph> 을 한 번 루프 내에서 사용할 정수 변수에 결과 할당 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The name of the field to find.</source>
          <target state="translated">찾을 필드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The index of the named field.</source>
          <target state="translated">지정된 된 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets the string value of the specified field.</source>
          <target state="translated">지정된 된 필드의 문자열 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The string value of the specified field.</source>
          <target state="translated">지정된 된 필드의 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Return the value of the specified field.</source>
          <target state="translated">지정된 된 필드의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Object&gt; which will contain the field value upon return.</source>
          <target state="translated">&lt;xref:System.Object&gt;는 반환 될 때 필드 값이 포함 됩니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Populates an array of objects with the column values of the current record.</source>
          <target state="translated">현재 레코드의 열 값이 있는 개체의 배열을 채웁니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most applications, the GetValues method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</source>
          <target state="translated">대부분의 응용 프로그램에 대 한 GetValues 메서드는 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하기 위한 효율적인 수단을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass an &lt;xref:System.Object&gt; array that contains fewer than the number of columns that are contained in the resulting row.</source>
          <target state="translated">전달할 수는 &lt;xref:System.Object&gt;보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the amount of data the &lt;xref:System.Object&gt; array holds is copied to the array.</source>
          <target state="translated">데이터의 양만 &lt;xref:System.Object&gt;배열 저장 배열에 복사 합니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also pass an &lt;xref:System.Object&gt; array whose length is more than the number of columns that are contained in the resulting row.</source>
          <target state="translated">전달할 수도 있습니다는 &lt;xref:System.Object&gt;결과 행에 포함 된 열의 개수 이상의 길이가.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An array of &lt;xref:System.Object&gt; to copy the attribute fields into.</source>
          <target state="translated">배열을 &lt;xref:System.Object&gt;특성 필드를 복사 합니다.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The number of instances of &lt;xref:System.Object&gt; in the array.</source>
          <target state="translated">인스턴스 수가 &lt;xref:System.Object&gt;배열의.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Return whether the specified field is set to null.</source>
          <target state="translated">지정된 된 필드가 설정 되어 있는지 여부를 반환 하려면 null입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to see if there are null column values before calling the typed get methods (for example, &lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;, and so on) to avoid raising an error.</source>
          <target state="translated">형식화 된 get 메서드를 호출 하기 전에 null 열 값 있는지 확인 하려면이 메서드를 호출 (예를 들어 &lt;xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;, &lt;xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt;등)에 오류가 발생 하지 않도록 합니다.&lt;/xref:System.Data.SqlClient.SqlDataReader.GetChar%2A&gt; &lt;/xref:System.Data.SqlClient.SqlDataReader.GetByte%2A&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The index of the field to find.</source>
          <target state="translated">찾을 필드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified field is set to null; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 필드에 설정 된 경우 null;로 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets the column located at the specified index.</source>
          <target state="translated">지정된 된 인덱스에 있는 열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column to get.</source>
          <target state="translated">가져올 열의&amp;0;부터 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The column located at the specified index as an &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 로 지정된 된 인덱스에 있는 열</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The index passed was outside the range of 0 through &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.</source>
          <target state="translated">전달 된 &lt;xref:System.Data.IDataRecord.FieldCount*&gt;.&lt;/xref:System.Data.IDataRecord.FieldCount*&gt; 0k 범위를 벗어납니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets the column with the specified name.</source>
          <target state="translated">지정한 이름 가진 열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>A case-sensitive lookup is performed first.</source>
          <target state="translated">대/소문자 구분 조회를 먼저 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it fails, a second case-insensitive search is made.</source>
          <target state="translated">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is kana-width insensitive.</source>
          <target state="translated">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The name of the column to find.</source>
          <target state="translated">찾을 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The column with the specified name as an &lt;xref:System.Object&gt;.</source>
          <target state="translated">&lt;xref:System.Object&gt;.&lt;/xref:System.Object&gt; 지정한 이름 가진 열</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>No column with the specified name was found.</source>
          <target state="translated">지정한 이름 가진 열을 찾았습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>