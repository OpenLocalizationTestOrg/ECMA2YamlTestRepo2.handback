<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8741904f60d9cdd9157e887a3c871a064f110f2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.Forms.ControlStyles.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a2ce71469199fd814f434b8f0fafacaf977814f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e77d5af3fb11487e16d284bafd99c6ef3cb33a96</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the style and behavior of a control.</source>
          <target state="translated">스타일 및 컨트롤의 동작을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls use this enumeration in various properties and methods to specify functionality.</source>
          <target state="translated">컨트롤이이 열거형에 다양 한 속성과 메서드를 사용 하 여 기능을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control can enable a style by calling the &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt; method and passing in the appropriate ControlStyles bit (or bits) and the Boolean value to set the bit(s) to.</source>
          <target state="translated">컨트롤을 호출 하 여 스타일을 사용 하도록 설정할 수는 &lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;메서드와 적절 한 비트 ControlStyles (또는 비트)에 전달 및 Boolean 값으로 비트가 설정입니다.&lt;/xref:System.Windows.Forms.Control.SetStyle%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following line of Visual Basic code would enable double-buffering.</source>
          <target state="translated">예를 들어 Visual Basic 코드의 다음 줄은 이중 버퍼링을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```</ph>       If the AllPaintingInWmPaint bit is set to <ph id="ph2">`true`</ph>, the window message WM_ERASEBKGND is ignored, and both &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; and &lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt; methods are called directly from the window message WM_PAINT.</source>
          <target state="translated"><ph id="ph1">```   myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)   ```</ph>AllPaintingInWmPaint 비트가 설정 되 면 <ph id="ph2">`true`</ph>, WM_ERASEBKGND 무시 되는 창 메시지 및 둘 다 &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;및 &lt;xref:System.Windows.Forms.Control.OnPaint%2A&gt;WM_PAINT 창 메시지에서 직접 호출 되어.&lt;/xref:System.Windows.Forms.Control.OnPaint%2A&gt; &lt;/xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</source>
          <target state="translated">이 일반적으로 다른 컨트롤 컨트롤에 WM_ERASEBKGND 창 메시지를 전송 하지 않는 한 깜박임을 줄입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a &lt;xref:System.Windows.Forms.ToolBar&gt; with flat appearance does this.</source>
          <target state="translated">창 메시지 WM_ERASEBKGRND SupportsTransparentBackColor; 비슷합니다 의사 (pseudo) 투명 효과 얻을를 보낼 수 있습니다. 예를 들어 한 &lt;xref:System.Windows.Forms.ToolBar&gt;플랫 모양을 사용 하 여이 작업을 수행 합니다.&lt;/xref:System.Windows.Forms.ToolBar&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이중 버퍼링을 완전히 사용 하려면 OptimizedDoubleBuffer 및 AllPaintingInWmPaint 비트를 설정할 수 있습니다 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>However the preferred method for enabling double buffering, which yields the same result, is to set the &lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt; property for the control to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">그러나는 이중 버퍼링을 사용 하도록 설정 하는 것에 대 한 동일한 결과 생성 하는 설정의 &lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;속성을 컨트롤에 대 한 <ph id="ph1">`true`</ph>.&lt;/xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SupportsTransparentBackColor bit is set to <ph id="ph1">`true`</ph>, and the &lt;xref:System.Windows.Forms.Control.BackColor%2A&gt; is set to a color whose alpha component is less than 255, &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; will simulate transparency by asking its parent control to paint the background.</source>
          <target state="translated">SupportsTransparentBackColor 비트가 설정 되 면 <ph id="ph1">`true`</ph>, 및 &lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;알파 구성 요소가 255 보다 작은 색으로 설정 되어 &lt;xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt;배경을 칠하는 데 부모 컨트롤을 요청 하 여 투명도 시뮬레이트합니다.&lt;/xref:System.Windows.Forms.Control.OnPaintBackground%2A&gt; &lt;/xref:System.Windows.Forms.Control.BackColor%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not true transparency.</source>
          <target state="translated">이것은 진정한 투명성 아닙니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  If there is another control between the control and its parent, the current control will not show the control in the middle.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 현재 컨트롤이 중간에 컨트롤 표시 되지 것입니다 컨트롤 및 해당 부모 간의 다른 컨트롤이 없는 경우.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the UserMouse bit is set to <ph id="ph1">`true`</ph>, the following methods are still called: &lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;, and &lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">UserMouse 비트로 설정 되 면 <ph id="ph1">`true`</ph>, 다음 메서드는 계속 호출: &lt;xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt;, &lt;xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt;, 및 &lt;xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt;.&lt;/xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the control is clicked, if the StandardClick bit is set to <ph id="ph1">`true`</ph> the &lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; event.</source>
          <target state="translated">컨트롤을 클릭 하십시오 시키려면 비트가 설정 되 면 때 <ph id="ph1">`true`</ph> 는 &lt;xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt;메서드가 호출 되 고 발생 된 &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;이벤트.&lt;/xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to <ph id="ph1">`true`</ph>, the click is passed on to the &lt;xref:System.Windows.Forms.Control.DoubleClick&gt; event.</source>
          <target state="translated">컨트롤을 두 번 클릭 하 고 시키려면와 StandardDoubleClick 상위 비트가 설정 되 있을 때 <ph id="ph1">`true`</ph>, 클릭으로 전달 됩니다는 &lt;xref:System.Windows.Forms.Control.DoubleClick&gt;이벤트.&lt;/xref:System.Windows.Forms.Control.DoubleClick&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt; method is called and it raises the &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; event.</source>
          <target state="translated">그런 다음 &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt;메서드가 호출 되 고 발생 된 &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;이벤트.&lt;/xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the control can call &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; or &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt; directly regardless of the StandardClick and StandardDoubleClick bit values.</source>
          <target state="translated">그러나 컨트롤을 호출할 수 &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;또는 &lt;xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt;직접 시키려면 및 StandardDoubleClick에 관계 없이 비트 값입니다.&lt;/xref:System.Windows.Forms.Control.OnDoubleClick%2A&gt; &lt;/xref:System.Windows.Forms.Control.OnClick%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on control click and double click behaviors, see the &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt; and &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; topics.</source>
          <target state="translated">컨트롤에 대 한 자세한 내용은 클릭 하 고 두 번 클릭 동작, 참조는 &lt;xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;및 &lt;xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt;항목.&lt;/xref:System.Windows.Forms.Control.DoubleClick?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.Click?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the UseTextForAccessibility bit is set and there is a value in the control's <ph id="ph1">`Text`</ph> property, the value of that control's <ph id="ph2">`Text`</ph> property determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">UseTextForAccessibility 비트가 설정 되 고 컨트롤의 값이 있는지 시점과 <ph id="ph1">`Text`</ph> 속성, 값이 해당 컨트롤의 <ph id="ph2">`Text`</ph> 속성 컨트롤의 기본 Active Accessibility 이름 및 바로 가기 키를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the text of the preceding &lt;xref:System.Windows.Forms.Label&gt; control will be used instead.</source>
          <target state="translated">그렇지 않으면 이전 텍스트 &lt;xref:System.Windows.Forms.Label&gt;컨트롤을 대신 사용 됩니다.&lt;/xref:System.Windows.Forms.Label&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This style is set by default.</source>
          <target state="translated">이 스타일은 기본적으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain built-in control types, such as &lt;xref:System.Windows.Forms.TextBox&gt; and &lt;xref:System.Windows.Forms.ComboBox&gt;, reset this style so that the <ph id="ph1">`Text`</ph> property of those controls will not be used by Active Accessibility.</source>
          <target state="translated">와 같은 특정 기본 제공 컨트롤 형식 &lt;xref:System.Windows.Forms.TextBox&gt;및 &lt;xref:System.Windows.Forms.ComboBox&gt;,이 스타일을 다시 설정 하는 <ph id="ph1">`Text`</ph> Active Accessibility 하 여 해당 컨트롤의 속성이 사용 되지 것입니다.&lt;/xref:System.Windows.Forms.ComboBox&gt; &lt;/xref:System.Windows.Forms.TextBox&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control ignores the window message WM_ERASEBKGND to reduce flicker.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤은 창 메시지 WM_ERASEBKGND 깜빡임 줄이기를 무시 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This style should only be applied if the UserPaint bit is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 스타일 UserPaint 비트 설정 된 경우에 적용 해야 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control keeps a copy of the text rather than getting it from the &lt;xref:System.Windows.Forms.Control.Handle*&gt; each time it is needed.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>에서 시작 하는 것이 아니라 텍스트의 복사본을 유지 하는 컨트롤의 &lt;xref:System.Windows.Forms.Control.Handle*&gt;필요할 때마다.&lt;/xref:System.Windows.Forms.Control.Handle*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This style defaults to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 스타일의 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This behavior improves performance, but makes it difficult to keep the text synchronized.</source>
          <target state="translated">이 동작은 하면 성능이 향상 되지만 텍스트 동기화 유지 하기가 어렵습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is a container-like control.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨테이너와 유사한 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, drawing is performed in a buffer, and after it completes, the result is output to the screen.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>그리기를 버퍼에 수행 되 고 결과 화면에 출력을 완료 한 후, 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Double-buffering prevents flicker caused by the redrawing of the control.</source>
          <target state="translated">이중 버퍼링을 사용 하면 깜빡임을 컨트롤 다시 그릴 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you set DoubleBuffer to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you should also set UserPaint and AllPaintingInWmPaint to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">DoubleBuffer을 설정 하면 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, UserPaint 및 AllPaintingInWmPaint를 설정 해야 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the &lt;xref:System.Windows.Forms.Control.OnNotifyMessage<bpt id="p2">*</bpt>&gt; method is called for every message sent to the control's &lt;xref:System.Windows.Forms.Control.WndProc<ept id="p2">*</ept>&gt;.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, &lt;&gt; &lt;/&gt; <bpt id="p2">*</bpt>&gt; 컨트롤의 보낸 모든 메시지에 대 한 메서드는 &lt;&gt; &lt;/&gt; <ept id="p2">*</ept>&gt; 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This style defaults to <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 스타일의 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>EnableNotifyMessage does not work in partial trust.</source>
          <target state="translated">EnableNotifyMessage 부분 신뢰에서 작동 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control has a fixed height when auto-scaled.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤에 고정된 높이 때 자동으로 크기가 조정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Height*&gt; remains unchanged.</source>
          <target state="translated">예를 들어, 레이아웃 작업에 맞게 새 컨트롤의 크기를 변경 하려고 할 경우 <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤의 &lt;xref:System.Windows.Forms.Control.Height*&gt;변경 되지 않습니다.&lt;/xref:System.Windows.Forms.Control.Height*&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control has a fixed width when auto-scaled.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤에 고정된 폭 때 자동으로 크기가 조정 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, if a layout operation attempts to rescale the control to accommodate a new <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control's &lt;xref:System.Windows.Forms.Control.Width*&gt; remains unchanged.</source>
          <target state="translated">예를 들어, 레이아웃 작업에 맞게 새 컨트롤의 크기를 변경 하려고 할 경우 <bpt id="p1">&lt;xref href="System.Drawing.Font"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤의 &lt;xref:System.Windows.Forms.Control.Width*&gt;변경 되지 않습니다.&lt;/xref:System.Windows.Forms.Control.Width*&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is drawn opaque and the background is not painted.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤이 불투명 그려지는 및 백그라운드 칠하지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>컨트롤이 버퍼에 먼저 그려지는 대신, 직접 화면에 깜빡임을 줄일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If you set this property to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, you should also set the AllPaintingInWmPaint to <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성을 설정 하는 경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>는 AllPaintingInWmPaint을 설정 해야 <bpt id="p2">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control is redrawn when it is resized.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤 크기가 조정 될 때 그려집니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control can receive focus.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤이 포커스를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control implements the standard <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Click"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> behavior.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤에서 구현 하는 표준 <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Click"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 동작 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control implements the standard <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.DoubleClick"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> behavior.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤에서 구현 하는 표준 <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.DoubleClick"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 동작 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This style is ignored if the StandardClick bit is not set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 스타일은 시키려면 비트도 설정 되지 않은 경우 무시 됩니다 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control accepts a &lt;xref:System.Windows.Forms.Control.BackColor*&gt; with an alpha component of less than 255 to simulate transparency.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤에 포함할 수는 &lt;xref:System.Windows.Forms.Control.BackColor*&gt;투명도 시뮬레이션 하는 255 미만의 알파 구성 요소와.&lt;/xref:System.Windows.Forms.Control.BackColor*&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Transparency will be simulated only if the UserPaint bit is set to <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> and the parent control is derived from <bpt id="p2">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">투명도 UserPaint 비트가 설정 하는 경우에 시뮬레이션 됩니다 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 부모 컨트롤에서 파생 됩니다 <bpt id="p2">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control does its own mouse processing, and mouse events are not handled by the operating system.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>자체 마우스 처리를 수행 하는 컨트롤, 및 운영 체제에서 마우스 이벤트를 처리 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the control paints itself rather than the operating system doing so.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, 컨트롤 자체 보다는 이렇게 하는 운영 체제를 그립니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>, the <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> event is not raised.</source>
          <target state="translated">경우 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>, <bpt id="p2">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This style only applies to classes derived from <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 스타일에서 파생 된 클래스에만 적용 됩니다 <bpt id="p1">&lt;xref href="System.Windows.Forms.Control"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Specifies that the value of the control's <ph id="ph1">`Text`</ph> property, if set, determines the control's default Active Accessibility name and shortcut key.</source>
          <target state="translated">지정 하는 컨트롤의 값 <ph id="ph1">`Text`</ph> 속성을 하는 경우 설정, 컨트롤의 기본 Active Accessibility 이름 및 바로 가기 키를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>