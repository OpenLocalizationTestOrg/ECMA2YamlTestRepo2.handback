<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0085f7ea5ae87f756a2b556924693c592edf39c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xaml.XamlObjectWriterSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c83dc2c535749dcbc3a664464535a2fa5310920</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0e99e5a04363bccaa6319266e65db014190267e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides specific XAML writer settings for <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 특정 XAML 작성기 설정을 제공 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Xaml.XamlObjectWriter&gt; can function within specified XamlObjectWriterSettings.</source>
          <target state="translated">A &lt;xref:System.Xaml.XamlObjectWriter&gt;지정한 XamlObjectWriterSettings 내에서 사용할 수 있습니다.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Where settings are not specified, an instance of XamlObjectWriterSettings exists that has default values for a constructed &lt;xref:System.Xaml.XamlObjectWriter&gt;, and this instance can be used in merges of settings for a derived class.</source>
          <target state="translated">설정을 지정 하지 않으면 여기서 XamlObjectWriterSettings 인스턴스가 생성 된 항목에 대 한 기본값을 가진 &lt;xref:System.Xaml.XamlObjectWriter&gt;, 파생된 클래스에 대 한의 설정 병합이 인스턴스를 사용할 수 있습니다 및&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriterSettings"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class that is based on the copy of an existing instance.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriterSettings"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기존 인스턴스의 복사본을 기반으로 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The settings instance to copy.</source>
          <target state="translated">복사할 설정 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;settings&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;settings&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets or sets <bpt id="p1">&lt;xref href="System.Xaml.Permissions.XamlAccessLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permissions that the XAML writer observes.</source>
          <target state="translated">가져오거나 <bpt id="p1">&lt;xref href="System.Xaml.Permissions.XamlAccessLevel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> XAML 작성기가 준수 하는 사용 권한입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property indicates the expected access level for non-public members, which are accessed in partial trust through a partial-trust tolerant runtime.</source>
          <target state="translated">이 속성에는 부분 신뢰 허용 런타임을 통해 부분 신뢰에서 액세스할 수 있는 public이 아닌 멤버에 대 한 예상된 액세스 수준을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Xaml.Permissions.XamlAccessLevel"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> permissions.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xaml.Permissions.XamlAccessLevel"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 권한.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt; phase of the object lifetime for each created object.</source>
          <target state="translated">XAML 작성기에서 호출 하는 콜백에 대 한 참조를 가져오거나 설정 합니다.는 &lt;xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt;생성된 된 각 개체에 대 한 개체 수명을 단계.&lt;/xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A callback that is invoked by the XAML writer at the &lt;xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt; phase of object lifetime.</source>
          <target state="translated">XAML 작성기가 호출 되는 콜백을 &lt;xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt;개체 수명의 단계.&lt;/xref:System.ComponentModel.ISupportInitialize.BeginInit*&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;xref:System.ComponentModel.ISupportInitialize.EndInit*&gt; phase of the object lifetime for each created object.</source>
          <target state="translated">XAML 작성기에서 호출 하는 콜백에 대 한 참조를 가져오거나 설정 합니다.는 &lt;xref:System.ComponentModel.ISupportInitialize.EndInit*&gt;생성된 된 각 개체에 대 한 개체 수명을 단계.&lt;/xref:System.ComponentModel.ISupportInitialize.EndInit*&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A callback that is invoked by the XAML writer at the &lt;xref:System.ComponentModel.ISupportInitialize.EndInit*&gt; phase of object lifetime.</source>
          <target state="translated">XAML 작성기가 호출 되는 콜백을 &lt;xref:System.ComponentModel.ISupportInitialize.EndInit*&gt;개체 수명의 단계.&lt;/xref:System.ComponentModel.ISupportInitialize.EndInit*&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">XAML 작성기에 의해 생성된 된 각 개체에 대 한 개체 수명을 member 쓰기 단계에서 호출 되는 콜백에 대 한 참조를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.</source>
          <target state="translated">개체 수명 member 쓰기 단계의 XAML 작성기에 의해 호출 되는 콜백.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.</source>
          <target state="translated">XAML 작성기에 의해 생성된 된 각 개체에 대 한 개체 수명을 member 쓰기 사전 단계에서 호출 되는 콜백에 대 한 참조를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.</source>
          <target state="translated">개체 수명의 member 쓰기 사전 단계에는 XAML 작성기에 의해 호출 되는 콜백.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;xref:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope*&gt; is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">XAML 작성기에서 이름에 등록에 사용할 XAML 이름 범위를 가져오거나 설정 합니다. &lt;xref:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope*&gt;은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope*&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specific contexts for a &lt;xref:System.Xaml.XamlObjectWriter&gt; might use an external XAML namescope.</source>
          <target state="translated">에 대 한 특정 컨텍스트에 &lt;xref:System.Xaml.XamlObjectWriter&gt;외부는 XAML 이름 범위를 사용할 수 있습니다.&lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Usage Notes    In the WPF XAML implementation, XAML writer operations that are initiated by &lt;xref:System.Windows.FrameworkTemplate&gt; specify a separate XAML namescope.</source>
          <target state="translated">WPF 사용 메모의 WPF XAML 구현로 시작 되는 XAML 작성기 작업 &lt;xref:System.Windows.FrameworkTemplate&gt;별도 XAML 이름 범위를 지정 합니다.&lt;/xref:System.Windows.FrameworkTemplate&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this WPF scenario, templates should not share a XAML namescope with the root of the XAML page that defines them.</source>
          <target state="translated">이 WPF 시나리오에서 템플릿 정의 하는 XAML 페이지의 루트 XAML 이름 범위를 공유 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, they should process into a separate, designated XAML namescope.</source>
          <target state="translated">대신 별도 지정 된 XAML 이름 범위로 처리 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XAML namescope to use for registering names.</source>
          <target state="translated">이름 등록에 사용할 XAML 이름 범위입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt; implementations on a <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in type-converter situations.</source>
          <target state="translated">XAML 작성기 (호출)를 무시할지 여부를 지정 하는 값을 가져오거나 설정 합니다. &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt;구현에는 <bpt id="p1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 형식 변환기 상황에서.&lt;/xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.ComponentModel.TypeConverter&gt; class and its &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt; method are part of an overall design for type conversion in the CLR.</source>
          <target state="translated">&lt;xref:System.ComponentModel.TypeConverter&gt;클래스 및 해당 &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt;메서드는 CLR의 형식 변환에 대 한 전반적인 디자인의 일부인.&lt;/xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A&gt; &lt;/xref:System.ComponentModel.TypeConverter&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In XAML systems, you can typically assume that type-converter input is identifiable by the XAML reader, and for purposes of input, is always a string.</source>
          <target state="translated">일반적으로 XAML 시스템에서는 형식 변환기 입력 하 고 입력의 목적을 위해 XAML 판독기에서 식별할 수, 문자열은 항상 가정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property to <ph id="ph1">`true`</ph>, you enable a mode where this assumption is codified in the XAML object writer behavior.</source>
          <target state="translated">이 속성을 설정 하는 경우 <ph id="ph1">`true`</ph>, XAML 개체 작성기 동작에서이 가정을 체계화 위치 모드를 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mode supports a compatibility requirement for previous versions of WPF XAML.</source>
          <target state="translated">이 모드는 이전 버전의 WPF XAML에 대 한 호환성 요구 사항을 지원합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the XAML writer ignores &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt; implementations; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>XAML 작성기를 무시 하는 경우 &lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt;구현이 고, 그렇지 않으면, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>.&lt;/xref:System.ComponentModel.TypeConverter.CanConvertFrom*&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether to disable a default <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> feature that runs type conversion on the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">K</ph><ept id="p2">&lt;/code&gt;</ept> component of a <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> before writing the object graph representation.</source>
          <target state="translated">기본값의 비활성화 여부를 결정 하는 값을 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 기능에서 형식 변환을 실행 하는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">K</ph> <ept id="p2">&lt;/code&gt;</ept> 의 구성 요소는 <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> 개체 그래프 표현에 쓰기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">`K`</ph> type conversion feature, see Remarks in &lt;xref:System.Xaml.XamlObjectWriter&gt;.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`K`</ph> 변환 기능을 입력 &lt;xref:System.Xaml.XamlObjectWriter&gt;.&lt;/xref:System.Xaml.XamlObjectWriter&gt; 설명 부분을 참조 하십시오</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">K</ph><ept id="p2">&lt;/code&gt;</ept> type conversion for a <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> object should be disabled.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">K</ph> <ept id="p2">&lt;/code&gt;</ept> 형식 변환에 대 한는 <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> 개체를 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if performing <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">K</ph><ept id="p2">&lt;/code&gt;</ept> type conversion for a <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> object applies.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>수행 하는 경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">K</ph> <ept id="p2">&lt;/code&gt;</ept> 형식 변환에 대 한는 <ph id="ph2">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph3">&amp;gt;</ph> 개체에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether name registration should occur against the specified &lt;xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt;.</source>
          <target state="translated">이름 등록에 지정 된 &lt;xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt;.&lt;/xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt; 에 대해 발생 해야 하는지 여부를 결정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if name registration should occur against the &lt;xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt;; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if name registration should occur into the parent XAML namescope.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이름 등록 &lt;xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt;;에 대해 발생 해야 할지 여부 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 부모 XAML 이름 범위에 이름 등록 발생 해야 할지 여부.&lt;/xref:System.Xaml.XamlObjectWriterSettings.ExternalNameScope*&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets a preexisting root object for <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> operations.</source>
          <target state="translated">에 대 한 기존 루트 개체를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this value, the root object instance is used as an implicit &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt; call (with object input that is direct instead of coming from the reader) that precedes the first explicit node-write call by the &lt;xref:System.Xaml.XamlObjectWriter&gt;.</source>
          <target state="translated">루트 개체 인스턴스는 암시적으로 사용 되는 경우이 값을 설정 하면 &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;호출 (입력이 포함 된 개체는 판독기에서 오는 대신 직접)에 &lt;xref:System.Xaml.XamlObjectWriter&gt;.&lt;/xref:System.Xaml.XamlObjectWriter&gt; 첫 번째 명시적 노드 쓰기 호출 앞&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any error checking, such as verifying the XAML type of the provided root object, is deferred until that implicit &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt; call, instead of being checked when you set this settings property.</source>
          <target state="translated">암시적 될 때까지 지연 되는 오류 검사, 제공 된 루트 개체의 XAML 형식을 확인 하는 등 &lt;xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;이 설정 속성을 설정 하면 검사 하는 대신 호출 합니다.&lt;/xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A preexisting root object for <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> operations.</source>
          <target state="translated">에 대 한 기존 루트 개체 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 작업 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.</source>
          <target state="translated">XAML 작성기에서 중복 된 속성을 확인 하는 코드 경로를 확인 하려면 생략할지 여부를 결정 하는 값을 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified code path checks the currently assigned properties and throws an exception if a duplicate property set of the named ambient property is attempted.</source>
          <target state="translated">지정 된 코드 경로 현재 할당 된 속성을 확인 하 고 명명된 된 앰비언트 속성의 중복 된 속성 집합을 시도 하는 경우 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see &lt;xref:System.Xaml.IAmbientProvider&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Xaml.IAmbientProvider&gt;.&lt;/xref:System.Xaml.IAmbientProvider&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the duplicate property check should be omitted; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>중복 된 속성 확인; 생략 해야 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> should omit to call <bpt id="p2">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> on a markup extension, which is relevant when the markup extension represents the root of an object graph.</source>
          <target state="translated">표시 하는 값을 가져오거나 설정 합니다. 여부는 <bpt id="p1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출을 생략 해야 <bpt id="p2">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 태그 확장에가 태그 확장이 나타내는 개체 그래프의 루트입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting is used when the &lt;xref:System.Xaml.XamlObjectWriter&gt; processes the root node (&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;, or members within the root node).</source>
          <target state="translated">이 설정을 사용 때는 &lt;xref:System.Xaml.XamlObjectWriter&gt;루트 노드를 처리 (&lt;xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt;, 루트 노드 내에서 멤버 또는).&lt;/xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A&gt; &lt;/xref:System.Xaml.XamlObjectWriter&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is relevant for template and defer-load scenarios.</source>
          <target state="translated">이 속성은 템플릿 및 지연 로드 시나리오와 관련이 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> should omit to call <bpt id="p3">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> on a markup extension; otherwise, <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 호출을 생략 해야 <bpt id="p3">&lt;xref uid="langword_csharp_ProvideValue" name="ProvideValue" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 태그 확장;에 이렇게 하지 않으면 <bpt id="p4">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Used in the <bpt id="p1">&lt;xref uid="langword_csharp_BeginInitHandler" name="BeginInitHandler" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in place of the actual <bpt id="p2">&lt;xref uid="langword_csharp_BaseUri" name="BaseUri" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 되는 <bpt id="p1">&lt;xref uid="langword_csharp_BeginInitHandler" name="BeginInitHandler" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 실제 대신 <bpt id="p2">&lt;xref uid="langword_csharp_BaseUri" name="BaseUri" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used internally to provide the correct info in the handler, while keeping runtime behavior fully compatible.</source>
          <target state="translated">내부적으로 사용 완전히 호환 런타임 동작을 유지 하면서 처리기에서 올바른 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A &lt;xref:System.Uri&gt; to be used in place of the actual <bpt id="p1">&lt;xref uid="langword_csharp_BaseUri" name="BaseUri" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A &lt;xref:System.Uri&gt;실제 사용 하도록 할 <bpt id="p1">&lt;xref uid="langword_csharp_BaseUri" name="BaseUri" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>.&lt;/xref:System.Uri&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the handler to use when the object writer calls into a CLR-implemented <bpt id="p1">&lt;xref uid="langword_csharp_SetValue" name="SetValue" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> for dependency properties.</source>
          <target state="translated">사용할 개체 작성기 호출 CLR 구현 된 처리기를 가져오거나 설정 합니다. <bpt id="p1">&lt;xref uid="langword_csharp_SetValue" name="SetValue" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 종속성 속성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is based on the generic &lt;xref:System.EventHandler%601&gt; delegate that uses the &lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt; event data.</source>
          <target state="translated">이벤트 처리기는 제네릭 기반 &lt;xref:System.EventHandler%601&gt;대리자를 사용 하 여 &lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;이벤트 데이터입니다.&lt;/xref:System.Windows.Markup.XamlSetValueEventArgs&gt; &lt;/xref:System.EventHandler%601&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A handler implementation that handles this case.</source>
          <target state="translated">이 경우를 처리 하는 처리기 구현입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>