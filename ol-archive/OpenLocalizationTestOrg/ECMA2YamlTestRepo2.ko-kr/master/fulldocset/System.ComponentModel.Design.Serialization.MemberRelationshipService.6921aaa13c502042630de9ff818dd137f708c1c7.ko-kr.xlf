<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">566a9c21e95f7a60184e872a3ed33cf17e4eab90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.ComponentModel.Design.Serialization.MemberRelationshipService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3d2aa5b72583934981b4c5b3b8e6c5826a22102</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a70fef1b6eca476719a582828c2db1a14372950b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for relating one member to another.</source>
          <target state="translated">다른 멤버와 연결에 대 한 기본 클래스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code.</source>
          <target state="translated">디자이너 자체적으로 직렬화 되 코드를 통해 개체의 경우 라이브 속성 값을 검색 하 고 코드와 해당 값을 생성 하는 엔진입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>So, for example, the text of a button is generated in the following format.</source>
          <target state="translated">따라서 예를 들어 다음과 같은 형식에 있는 단추의 텍스트 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">```c#   this.okButton.Text = "OK";   ```</ph>       One of the limitations of this scheme is that it is difficult to retrieve a property from another location.</source>
          <target state="translated"><ph id="ph1">```c#   this.okButton.Text = "OK";   ```</ph>이 체계의 제한 중 하나는 다른 위치에서 속성을 검색 하기가 어렵습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.</source>
          <target state="translated">예를 들어 다음과 같은 형식의 코드를 생성 하기 매우 어렵습니다, 그리고 코드 생성기는 유일한 사항은 사용할 수 있기 때문에 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationshipService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationshipService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets a relationship to the given source relationship.</source>
          <target state="translated">지정된 된 소스 관계에 대 한 관계를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive.</source>
          <target state="translated">기본 구현은 약한 참조를 사용 하 여 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 하는 사전에 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The source relationship.</source>
          <target state="translated">원본 관계입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A relationship to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if no relationship exists.</source>
          <target state="translated">에 대 한 관계 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">source</ph> <ept id="p1">&lt;/code&gt;</ept>, 또는 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관계가 없는 경우.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">원본 및 대상 개체 간의 관계를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If &lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt; is assigned to the source, any existing relationship is removed.</source>
          <target state="translated">경우 &lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt;할당 원본으로 기존 관계 제거 됩니다.&lt;/xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The source relationship.</source>
          <target state="translated">원본 관계입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is the left-hand side of a relationship assignment.</source>
          <target state="translated">왼쪽은 관계 할당입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The current relationship associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no relationship.</source>
          <target state="translated">현재 관계와 관련 된 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">source</ph> <ept id="p1">&lt;/code&gt;</ept>, 또는 <bpt id="p2">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관계가 없는 경우.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph>비어 있는 경우 또는 서비스에서 관계를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Establishes a relationship between a source and target object.</source>
          <target state="translated">원본 및 대상 개체 간의 관계를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The owner of a source relationship.</source>
          <target state="translated">원본 관계의 소유자입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The member of a source relationship.</source>
          <target state="translated">원본 관계의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> structure encapsulating the relationship between a source and target object, or <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is no relationship.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.ComponentModel.Design.Serialization.MemberRelationship"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 원본 및 대상 개체 간의 관계를 캡슐화 하는 구조 또는 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 관계가 없는 경우.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sourceOwner&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;sourceMember&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;sourceOwner&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;sourceMember&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sourceOwner&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;sourceMember&lt;/code&gt;</ph> is empty, or the relationship is not supported by the service.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;sourceOwner&lt;/code&gt;</ph>또는 <ph id="ph2">&lt;code&gt;sourceMember&lt;/code&gt;</ph> 비어 있는 경우 또는 서비스에서 관계를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates a relationship between the source object and target relationship.</source>
          <target state="translated">소스 개체와 대상 관계 간의 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetRelationship method clears any existing relationship if the relationship parameter is &lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt;.</source>
          <target state="translated">관계 매개 변수가 &lt;xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt;.&lt;/xref:System.ComponentModel.Design.Serialization.MemberRelationship&gt; 이면 SetRelationship 메서드 기존 관계를 지웁니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive.</source>
          <target state="translated">기본 구현은 관계 테이블 않습니다 하지 개체가 활성 상태로 유지 되도록 약한 참조를 사용 하는 사전에 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The source relationship.</source>
          <target state="translated">원본 관계입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The relationship to set into the source.</source>
          <target state="translated">관계 소스에 대 한 설정입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The relationship is not supported by the service.</source>
          <target state="translated">관계는 서비스에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the given relationship is supported.</source>
          <target state="translated">지정된 된 관계를 지원 하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The source relationship.</source>
          <target state="translated">원본 관계입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The relationship to set into the source.</source>
          <target state="translated">관계 소스에 대 한 설정입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a relationship between the given two objects is supported; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 두 개체 간의 관계는 지원 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>