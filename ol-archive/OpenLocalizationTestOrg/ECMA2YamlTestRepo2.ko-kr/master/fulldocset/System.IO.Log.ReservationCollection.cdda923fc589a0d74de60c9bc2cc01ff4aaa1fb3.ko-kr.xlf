<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2833f03c822b73d882a71753d0f2b0fa6758a9a5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Log.ReservationCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb1997801fd1f1a0b25e8418a68dac8fb2cc6037</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14e65d319f853d5d36556d0b864bc58c3acbfd0b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages the collection of space reservations made in a record sequence.</source>
          <target state="translated">레코드 시퀀스에서 만들어진 공간 예약의 컬렉션을 관리 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class represents a set of reservation areas that are made in a record sequence.</source>
          <target state="translated">이 클래스는 레코드 시퀀스에서 만들어진 예약 영역의 집합을을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding items to the collection allocates new reservations.</source>
          <target state="translated">항목 컬렉션에 추가 하면 새 예약이 할당 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Removing items from the collection frees those reservations.</source>
          <target state="translated">컬렉션에서 항목을 제거 하면 예약이 해제 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</source>
          <target state="translated">응용 프로그램에 나중에 로그에 기록 될 데이터가 하지만 즉시 쓸 수 없습니다 로그의 공간을 예약 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</source>
          <target state="translated">예약 시간 데이터는 데이터를 쓸 수 있는 경우 로그에 쓸 수 있는 보장 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using logs, applications often reserve one or more log records in a marshalling area.</source>
          <target state="translated">로그를 사용할 경우 응용 프로그램은 주로 마샬링 영역에서 하나 이상의 로그 레코드를 예약 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must reserve records prior to appending them.</source>
          <target state="translated">추가 하기 전에 수행 하는 레코드를 예약 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</source>
          <target state="translated">데이터가 커밋되기 전에 작업을 완료할 수 있도록 보장 하기 위해 예약을 사용할 수 있습니다. 그렇지 않으면 변경 내용이 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also be used to record an "undo action" in the log.</source>
          <target state="translated">또한 "실행 취소 작업" 로그에 기록 하기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</source>
          <target state="translated">롤백 작업 중는 트랜잭션 RM (리소스 관리자) 롤백 작업 동안 RM 중단 되는 경우 해당 상태를 복구할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using a reservation area, an RM can reserve space in a log before it is used.</source>
          <target state="translated">에서는 예약 영역을 사용 하 여 RM을 사용 하기 전에 로그의에서 공간을 예약할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt; method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</source>
          <target state="translated">&lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;메서드 공간을 예약 하거나 데이터를 추가 하거나 전화 통화를 걸기 때 지정 된 매개 변수에 따라 둘 다.&lt;/xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</source>
          <target state="translated">트랜잭션에서 작업이 진행 되 면 응용 프로그램에서 실행 취소 정보를 추가 하 고 보정 레코드를 위한 공간을 예약할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>During a rollback operation, compensation records that are created indicate what has been undone on the disk.</source>
          <target state="translated">롤백 작업 중 만들어진 보정 레코드는 디스크에서 실행 된 내용을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The records are appended using space that has been previously reserved.</source>
          <target state="translated">이전에 예약 된 공간을 사용 하는 레코드가 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</source>
          <target state="translated">이렇게 하면 치명적인 상태 롤백 작업을 수행 하는 동안이 로그 공간이 부족 합니다. RM 실행 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</source>
          <target state="translated">트랜잭션 중 로그가 꽉 찰 경우 응용 프로그램 안전 하 게 롤백할 수는 트랜잭션 영 속 데이터를 손상 시 키 지 않고.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</source>
          <target state="translated">CLFS는 미리 쓰기 로깅을 위한 ARIES 규격 로깅 시스템은 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</source>
          <target state="translated">미리 쓰기 로깅을 응용 프로그램 로그에 롤백 중에 사용할 수 있는 보정 레코드를 작성 하는 데 걸리는 공간의 크기를 예약 하 고 작업을 수행 하기 전에 실행 취소 레코드를 씁니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Later, the reserved space is used when the compensation record is actually written.</source>
          <target state="translated">나중에 보정 레코드를 실제로 쓸 때 예약 된 공간 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</source>
          <target state="translated">응용 프로그램을 예약 하거나 (상호 배타적인 작업은) 지정된 된 시간에 많은 공간에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a commit record is written to the log, an application can free up the reservations for the compensation records.</source>
          <target state="translated">커밋 후 레코드가 응용 프로그램에서 보정 레코드에 대 한 예약을 해제할 수는 로그에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This action can be done by calling either the &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt; or &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt; method.</source>
          <target state="translated">이 작업을 호출 하 여 수행할 수 있습니다는 &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt;또는 &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt; &lt;/xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt; method guarantees that the operation is atomic, while calling the &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt; method does not.</source>
          <target state="translated">호출 된 &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;메서드에서 작업을 호출 하는 동안 원자성을 보장는 &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt;메서드가 없습니다.&lt;/xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt; &lt;/xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you free records, you must free the same records that you reserved together in a previous call to the &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt; method.</source>
          <target state="translated">에 대 한 이전 호출에서 함께 예약 했던 레코드를 비워야 레코드를 비울 때는 &lt;xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;메서드.&lt;/xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Your implementation of &lt;xref:System.IO.Log.IRecordSequence&gt; must implement the &lt;xref:System.IO.Log.ReservationCollection.MakeReservation%2A&gt; and &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt; methods to perform the actual reservation allocation and deallocation.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 구현 &lt;xref:System.IO.Log.IRecordSequence&gt;구현 해야 합니다는 &lt;xref:System.IO.Log.ReservationCollection.MakeReservation%2A&gt;및 &lt;xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt;실제 예약 할당 및 할당 취소를 수행 하는 메서드.&lt;/xref:System.IO.Log.ReservationCollection.FreeReservation%2A&gt; &lt;/xref:System.IO.Log.ReservationCollection.MakeReservation%2A&gt; &lt;/xref:System.IO.Log.IRecordSequence&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, your implementation must also call &lt;xref:System.IO.Log.ReservationCollection.ReservationFreed%2A&gt; when a record is written into a reserved space.</source>
          <target state="translated">또한 구현도 호출 해야 &lt;xref:System.IO.Log.ReservationCollection.ReservationFreed%2A&gt;예약된 된 공간에 기록할 때.&lt;/xref:System.IO.Log.ReservationCollection.ReservationFreed%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Allocates a reservation and adds it to the collection.</source>
          <target state="translated">예약을 할당 하 고 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The size of the requested reservation, in bytes.</source>
          <target state="translated">바이트 단위로 요청된 된 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;archiveTail&lt;/code&gt;</ph> is not between the base and last sequence numbers of this sequence.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;archiveTail&lt;/code&gt;</ph>이 시퀀스의 기본 클래스와 마지막 시퀀스 번호 사이의 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is invalid or exceeds maximum reservation size.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph>잘못 되었거나 최대 예약 크기를 초과 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An I/O error occurs when creating the archive snapshot.</source>
          <target state="translated">아카이브 스냅숏을 만들 때 I/O 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The record sequence is full.</source>
          <target state="translated">레코드 시퀀스가 꽉 찼습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Releases all of the reservations in the collection.</source>
          <target state="translated">컬렉션에 있는 예약의 모든 해제합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is invalid or exceeds maximum reservation size.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph>잘못 되었거나 최대 예약 크기를 초과 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An I/O error occurs when creating the archive snapshot.</source>
          <target state="translated">아카이브 스냅숏을 만들 때 I/O 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The record sequence is full.</source>
          <target state="translated">레코드 시퀀스가 꽉 찼습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Determines whether a reservation of the specified size has been made.</source>
          <target state="translated">지정된 된 크기의 예약이 이루어졌을 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The size to locate in the collection.</source>
          <target state="translated">컬렉션에서 찾을 크기입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if at least one reservation of the specified size has been made; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 크기의 예약이 하나 이상; 수행 되지 않은 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">대상 배열의 지정된 된 인덱스에서 시작 하는&amp;1; 차원 배열에 전체 컬렉션을 복사 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The array that is the destination of the copy.</source>
          <target state="translated">이 배열에 복사의 대상입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">복사를 시작할 배열 인덱스는&amp;0;부터 시작을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph>or <ph id="ph2">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph> is less than zero, or greater than or equal to the length of <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;arrayIndex&lt;/code&gt;</ph>0 보다 크거나의 길이 같은 작은 <ph id="ph2">&lt;code&gt;array&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>There is not enough space in the specified array to copy the data.</source>
          <target state="translated">지정 된 배열의 데이터를 복사할 공간이 충분 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-       <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> is not a single dimensional array, which is the only type supported for the requested action.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">array</ph> <ept id="p1">&lt;/code&gt;</ept> 이 요청된 된 작업에 대해 지원 되는 유일한 형식을 나타내는 단일 차원 배열이 아닙니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the number of reservations in the collection.</source>
          <target state="translated">컬렉션에 있는 예약의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The number of reservations in the collection.</source>
          <target state="translated">컬렉션에 있는 예약의 수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Allows the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to free resources before it is destroyed by the garbage collector.</source>
          <target state="translated">허용 된 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 가비지 수집기에서 소멸 되기 전에 리소스를 해제할 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, releases a reservation of the specified size.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 크기의 예약을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The size of the reservation to release.</source>
          <target state="translated">해제할 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the best matching reservation for a given size.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 가장을 근접 한 지정된 된 크기에 대 한 예약을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called when appending a record from reserved space to a record sequence.</source>
          <target state="translated">이 메서드는 일반적으로 레코드 시퀀스에 예약 된 공간에서 레코드를 추가할 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When it returns, a reservation of the returned size has been removed from the collection.</source>
          <target state="translated">반환할 때 반환 되는 크기의 예약이 컬렉션에서 제거한 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If, for some reason, the reserved space is not actually accessed, the &lt;xref:System.IO.Log.ReservationCollection.ReservationMade%2A&gt; method should be called to ensure that the &lt;xref:System.IO.Log.ReservationCollection&gt; accurately represents the amount of reserved space in the record sequence.</source>
          <target state="translated">어떤 이유로 예약된 된 공간이 실제로 액세스 하지, 하는 경우는 &lt;xref:System.IO.Log.ReservationCollection.ReservationMade%2A&gt;되도록 메서드를 호출 해야는 &lt;xref:System.IO.Log.ReservationCollection&gt;정확 하 게 레코드 시퀀스에서 예약 된 공간의 크기를 나타냅니다.&lt;/xref:System.IO.Log.ReservationCollection&gt; &lt;/xref:System.IO.Log.ReservationCollection.ReservationMade%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The size of the reservation that must be fit.</source>
          <target state="translated">일치 해야 하는 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</source>
          <target state="translated">그러한 예약이 없는 경우 지정된 된 크기 또는-1 보다 크거나 있는 컬렉션의 예약입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that can iterate through the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반복할 수 있는 열거자를 반환 된 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반복할 수 있는 열거자는 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The operation is invalid for one of the following reasons:      -   The enumeration has ended.</source>
          <target state="translated">작업이 다음 이유 중 하나로 경로가 올바르지 않은 경우:-열거형이 끝난 경우.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-   The collection has been modified.</source>
          <target state="translated">-컬렉션이 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-   The enumeration has not been started.</source>
          <target state="translated">-열거형 시작 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A call to &lt;xref:System.Collections.IEnumerator.MoveNext*&gt; must be made.</source>
          <target state="translated">에 대 한 호출 &lt;xref:System.Collections.IEnumerator.MoveNext*&gt;수 있어야 합니다.&lt;/xref:System.Collections.IEnumerator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인 지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.IO.Log.ReservationCollection&gt; is never read-only.</source>
          <target state="translated">A &lt;xref:System.IO.Log.ReservationCollection&gt;는 읽기 전용으로 설정 되지 않습니다.&lt;/xref:System.IO.Log.ReservationCollection&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This property always returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 속성은 항상 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, allocates a reservation of the specified size.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 크기의 예약을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The size of the reservation to allocate.</source>
          <target state="translated">할당할 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Releases a reservation of the specified size, if one has been made.</source>
          <target state="translated">수행 된 경우 지정된 된 크기의 예약을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The size of the reservation to release.</source>
          <target state="translated">해제할 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if a reservation of the specified size was found and removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>지정된 된 크기의 예약이 발견 되어; 제거 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>No reservation large enough to fit the provided record can be found in the specified reservation collection.</source>
          <target state="translated">제공 된 레코드에 맞게 충분히 큰 예약이 지정한 예약 컬렉션에서 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An I/O error occurs when creating the archive snapshot.</source>
          <target state="translated">아카이브 스냅숏을 만들 때 I/O 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The record sequence is full.</source>
          <target state="translated">레코드 시퀀스가 꽉 찼습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, indicates that a reservation has been released.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면는 예약이 해제 되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from &lt;xref:System.IO.Log.ReservationCollection&gt;, you must call this method when a reservation is released for a reason other than removing it from the collection.</source>
          <target state="translated">상속 하는 경우 &lt;xref:System.IO.Log.ReservationCollection&gt;, 컬렉션에서 제거 외의 다른 이유로 예약이 해제 되 면이 메서드를 호출 해야 합니다.&lt;/xref:System.IO.Log.ReservationCollection&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The size of the reservation that has been released.</source>
          <target state="translated">해제 된 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, indicates that a reservation has been made.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 예약을 만들었다고 나타냅니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from &lt;xref:System.IO.Log.ReservationCollection&gt;, you must call this method when a reservation is made outside of a call to &lt;xref:System.IO.Log.ReservationCollection.Add%2A&gt;.</source>
          <target state="translated">&lt;xref:System.IO.Log.ReservationCollection&gt;외부 &lt;xref:System.IO.Log.ReservationCollection.Add%2A&gt;.&lt;/xref:System.IO.Log.ReservationCollection.Add%2A&gt; 에 대 한 호출에서 예약 하는 경우이 메서드를 호출&lt;/xref:System.IO.Log.ReservationCollection&gt; 에서 상속 하는 경우</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The size of the reservation that has been made.</source>
          <target state="translated">된 예약의 크기입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that can iterate through the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반복할 수 있는 열거자를 반환 된 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
          <target state="translated">이 메서드는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">반복할 수 있는 열거자는 <bpt id="p1">&lt;xref href="System.IO.Log.ReservationCollection"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The operation is invalid for one of the following reasons:      -   The enumeration has ended.</source>
          <target state="translated">작업이 다음 이유 중 하나로 경로가 올바르지 않은 경우:-열거형이 끝난 경우.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-   The collection has been modified.</source>
          <target state="translated">-컬렉션이 수정 되었습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>-   The enumeration has not been started.</source>
          <target state="translated">-열거형 시작 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A call to &lt;xref:System.Collections.IEnumerator.MoveNext*&gt; must be made.</source>
          <target state="translated">에 대 한 호출 &lt;xref:System.Collections.IEnumerator.MoveNext*&gt;수 있어야 합니다.&lt;/xref:System.Collections.IEnumerator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The method was called after the sequence has been disposed of.</source>
          <target state="translated">시퀀스의 삭제 된 후 메서드가 호출 되었습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>There is not enough memory to continue the execution of the program.</source>
          <target state="translated">메모리가 부족 하 여 프로그램의 실행을 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Access for the specified log store is denied by the operating system.</source>
          <target state="translated">지정된 된 로그 저장소에 대 한 액세스는 운영 체제에서 거부 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>