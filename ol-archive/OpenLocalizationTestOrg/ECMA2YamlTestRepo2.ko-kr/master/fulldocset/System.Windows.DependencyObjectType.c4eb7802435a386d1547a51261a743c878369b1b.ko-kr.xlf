<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29e2ed38435e022d048c800a1d6da7c5ea2923fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Windows.DependencyObjectType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fc4e20f77ac9972c678dc0f468fa120cd37ecd6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ee221166a5ddabdda0e67a31b3c48a0990ec306</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements an underlying type cache for all <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derived types.</source>
          <target state="translated">모든 내부 형식 캐시 구현 <bpt id="p1">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 파생 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>DependencyObjectType represents a specific underlying system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) &lt;xref:System.Type&gt; of a &lt;xref:System.Windows.DependencyObject&gt;.</source>
          <target state="translated">DependencyObjectType 특정 내부 시스템을 나타냅니다 (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) &lt;xref:System.Type&gt; &lt;xref:System.Windows.DependencyObject&gt;.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>DependencyObjectType is essentially a wrapper for the (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) &lt;xref:System.Type&gt; so that it can extend some of its capabilities.</source>
          <target state="translated">DependencyObjectType이 래퍼는 (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) &lt;xref:System.Type&gt;일부 기능을 확장할 수 있도록 합니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class has no public constructor.</source>
          <target state="translated">이 클래스는 공용 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this class can only be obtained through properties on other objects (such as &lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName&gt;), or through the static method &lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;.</source>
          <target state="translated">이 클래스 인스턴스의 다른 개체에 속성을 통해 얻을 수 있습니다 (예: &lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName&gt;), 또는 &lt;xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt;.&lt;/xref:System.Windows.DependencyObjectType.FromSystemType%2A&gt; 정적 메서드를 통해&lt;/xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets the <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> of the immediate base class of the current <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재는 직접 기본 클래스의 <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The type of the base class.</source>
          <target state="translated">기본 클래스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Returns a <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents a given system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">반환 된 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 나타내는 지정된 된 시스템 (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) 형식입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each &lt;xref:System.Windows.DependencyObject&gt; maintains a &lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt; property that returns a &lt;xref:System.Windows.DependencyObjectType&gt;, but this requires having a particular &lt;xref:System.Windows.DependencyObject&gt; instance.</source>
          <target state="translated">각 &lt;xref:System.Windows.DependencyObject&gt;유지 관리는 &lt;xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt;속성을 반환 하는 &lt;xref:System.Windows.DependencyObjectType&gt;,이 위해서는 특정 필요 하지만 &lt;xref:System.Windows.DependencyObject&gt;인스턴스.&lt;/xref:System.Windows.DependencyObject&gt; &lt;/xref:System.Windows.DependencyObjectType&gt; &lt;/xref:System.Windows.DependencyObject.DependencyObjectType%2A&gt; &lt;/xref:System.Windows.DependencyObject&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this static utility method if you do not yet have a &lt;xref:System.Windows.DependencyObject&gt; instance and require a &lt;xref:System.Windows.DependencyObjectType&gt;.</source>
          <target state="translated">아직 없는는 &lt;xref:System.Windows.DependencyObject&gt;인스턴스 및 &lt;xref:System.Windows.DependencyObjectType&gt;.&lt;/xref:System.Windows.DependencyObjectType&gt; 필요로&lt;/xref:System.Windows.DependencyObject&gt; 하는 경우이 정적 유틸리티 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) type to convert.</source>
          <target state="translated">시스템 (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) 변환할 형식입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that represents the system (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) type.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 시스템 나타내는 (<ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph>) 형식입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 대 한 해시 코드를 반환 합니다. <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation is linked to the value of the &lt;xref:System.Windows.DependencyObjectType.Id%2A&gt; property.</source>
          <target state="translated">이 구현은의 값에 연결 된는 &lt;xref:System.Windows.DependencyObjectType.Id%2A&gt;속성.&lt;/xref:System.Windows.DependencyObjectType.Id%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32 비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets a zero-based unique identifier for constant-time array lookup operations.</source>
          <target state="translated">조회 작업의 일정 한 시간 배열에 대 한&amp;0;부터 시작 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use for general hashing functions.</source>
          <target state="translated">일반 해시 함수를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee on this value.</source>
          <target state="translated">이 값에 보장이 없습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can vary between application runs.</source>
          <target state="translated">응용 프로그램 실행 간에 달라질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An internal identifier.</source>
          <target state="translated">내부 식별자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is an instance of the current <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정된 된 개체의 현재 인스턴스 인지를 확인 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects of the exact same type return <ph id="ph1">`true`</ph>.</source>
          <target state="translated">개체의 정확한 동일한 형식이 반환 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">현재와 비교할 개체 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the class represented by the current <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> is in the inheritance hierarchy of the <bpt id="p3">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> passed as <bpt id="p4">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p5">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>현재도 표시 되는 클래스 <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 의 상속 계층 구조에는 <bpt id="p3">&lt;xref href="System.Windows.DependencyObject"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 변수로 전달 된 <bpt id="p4">&lt;code&gt;</bpt> <ph id="ph1">d</ph> <ept id="p4">&lt;/code&gt;</ept>, 그렇지 않으면 <bpt id="p5">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p5">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether the current <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> derives from the specified <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">결정 여부 현재 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 지정 된 파생 <bpt id="p2">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to compare.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">dependencyObjectType</ph><ept id="p2">&lt;/code&gt;</ept> parameter and the current <bpt id="p3">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> represent types of classes, and the class represented by the current <bpt id="p4">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept> derives from the class represented by <bpt id="p5">&lt;code&gt;</bpt><ph id="ph2">dependencyObjectType</ph><ept id="p5">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">dependencyObjectType</ph> <ept id="p2">&lt;/code&gt;</ept> 매개 변수 및 현재 <bpt id="p3">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 클래스 및 현재 클래스의 형식을 나타내는 <bpt id="p4">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept> 가 나타내는 클래스에서 파생 <bpt id="p5">&lt;code&gt;</bpt> <ph id="ph2">dependencyObjectType</ph> <ept id="p5">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This method also returns <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">dependencyObjectType</ph><ept id="p2">&lt;/code&gt;</ept> and the current <bpt id="p3">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> represent the same class.</source>
          <target state="translated">또한이 메서드 반환 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">dependencyObjectType</ph> <ept id="p2">&lt;/code&gt;</ept> 및 현재 <bpt id="p3">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 같은 클래스를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the name of the represented <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">표시 되는 이름을 가져옵니다 <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> 시스템 유형입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of Name is the same string as the name of the type name of the &lt;xref:System.Type&gt;.</source>
          <target state="translated">이름의 값은 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 형식 이름의 이름으로 동일한 문자열</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of the represented <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> system type.</source>
          <target state="translated">표시 되는 이름 <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 시스템 유형입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> system type represented by this <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">가져옵니다는 <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)]</ph> 이 표시 되는 시스템 유형을 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> system type represented by this <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]</ph> 이 표시 되는 시스템 유형을 <bpt id="p1">&lt;xref href="System.Windows.DependencyObjectType"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>