<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0c3be5762464b4ca55588ffcf0fc7a6bbd63190d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Xml.XPath.XPathNodeIterator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de959cf3ee33a986999cc22ce023eaaa0f89508e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92fb0aef39fb0371ae403fba2920f0fd9d05d9ff</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an iterator over a selected set of nodes.</source>
          <target state="translated">선택한 노드 집합에 대 한 반복기를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An XPathNodeIterator object returned by the &lt;xref:System.Xml.XPath.XPathNavigator&gt; class is not positioned on the first node in a selected set of nodes.</source>
          <target state="translated">이 반환한 XPathNodeIterator 개체는 &lt;xref:System.Xml.XPath.XPathNavigator&gt;클래스는 선택한 노드 집합의 첫 번째 노드에 배치 되지 않았습니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method of the XPathNodeIterator class must be made to position the XPathNodeIterator object on the first node in the selected set of nodes.</source>
          <target state="translated">에 대 한 호출에서 &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;XPathNodeIterator 클래스의 메서드는 선택된 된 노드 집합의 첫 번째 노드에서 XPathNodeIterator 개체 위치를 지정할 수 있어야 합니다.&lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the XPathNodeIterator, if you edit the current node or any of its ancestors, your current position is lost.</source>
          <target state="translated">XPathNodeIterator를 사용 하 여 현재 노드 또는 상위 항목 중 하나를 편집 하는 경우, 현재 위치는 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to edit a number of nodes that you have selected, create a &lt;xref:System.Xml.XPath.XPathNavigator&gt; array, copy all of the nodes from the XPathNodeIterator into the array, then iterate through the array and modify the nodes.</source>
          <target state="translated">여러 노드를 편집 하려면 선택한을 만듭니다는 &lt;xref:System.Xml.XPath.XPathNavigator&gt;배열, 배열에 XPathNodeIterator에서 복사할 모든 노드에 다음 배열에서 반복 및 노드 수정.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an &lt;xref:System.Xml.XPath.XPathNavigator&gt; collection by using the XPathNodeIterator class.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNavigator&gt;XPathNodeIterator 클래스를 사용 하 여 컬렉션&lt;/xref:System.Xml.XPath.XPathNavigator&gt; 을 반복 하는 방법은 두 가지가</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_2.cs)</ept><ept id="p7">]</ept>  <bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_2.vb)</ept><ept id="p9">]</ept>  <bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_2.cpp)</ept><ept id="p11">]</ept>       You should either use &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; and &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; or use &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;.</source>
          <target state="translated">One way is to use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/t-system.xml.xpath.xpath_1_2.cs)</ept><ept id="p7">]</ept>  <bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/t-system.xml.xpath.xpath_1_2.vb)</ept><ept id="p9">]</ept>  <bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/t-system.xml.xpath.xpath_1_2.cpp)</ept><ept id="p11">]</ept>       You should either use &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; and &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; or use &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;.&lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;&lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;&lt;/xref:System.Collections.IEnumerator&gt;&lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;&lt;/xref:System.Xml.XPath.XPathNavigator&gt;&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;&lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method is called first, and then the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method is called in the <ph id="ph1">`foreach`</ph> loop, the <ph id="ph2">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; method.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;메서드는 먼저 차례로 &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;메서드가 호출 되는지는 <ph id="ph1">`foreach`</ph> 루프는 <ph id="ph2">`foreach`</ph> 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;메서드.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">이 생성자는이 형식으로 상태를 초기화 하는 파생된 클래스 생성자에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a clone of this <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면이 복제본을 반환 합니다. <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; object is positioned at the same node in the node set if calls have been made to the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method.</source>
          <target state="translated">복제 된 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;개체 노드 호출에 적용 된 경우 집합의 동일한 노드에 배치 되는 &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;메서드.&lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; object is not affected by subsequent changes to this &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; object.</source>
          <target state="translated">복제 된 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;개체가이 변경으로 영향을 받지 않습니다 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;개체입니다.&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A new <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object clone of this <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">새 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 복제본이 <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the index of the last node in the selected set of nodes.</source>
          <target state="translated">선택된 된 노드 집합에서 마지막 노드 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Count property does not affect the position of the &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;.</source>
          <target state="translated">Count 속성 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;.&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt; 의 위치에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</source>
          <target state="translated">노드 또는 없으면 0입니다. 선택 된 노드가 선택된 된 집합의 마지막 노드의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for this <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, positioned on the current context node.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면는 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 대 한 개체 <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>현재 컨텍스트 노드에 배치 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the properties of the returned &lt;xref:System.Xml.XPath.XPathNavigator&gt; object to obtain information on the current node.</source>
          <target state="translated">반환 된 속성을 사용할 수 &lt;xref:System.Xml.XPath.XPathNavigator&gt;개체를 현재 노드에 대 한 정보를 가져옵니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the returned &lt;xref:System.Xml.XPath.XPathNavigator&gt; object should not be modified.</source>
          <target state="translated">그러나 반환 된 &lt;xref:System.Xml.XPath.XPathNavigator&gt;개체를 수정 하지 않아야 합니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned &lt;xref:System.Xml.XPath.XPathNavigator&gt; object cannot be moved away from the selected node set.</source>
          <target state="translated">반환 된 &lt;xref:System.Xml.XPath.XPathNavigator&gt;개체 선택된 된 노드 집합 밖으로 이동할 수 없습니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can clone the &lt;xref:System.Xml.XPath.XPathNavigator&gt; object using the &lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt; method of the &lt;xref:System.Xml.XPath.XPathNavigator&gt; class.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNavigator&gt; &lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt; &lt;xref:System.Xml.XPath.XPathNavigator&gt;클래스&lt;/xref:System.Xml.XPath.XPathNavigator&gt; 의 메서드&lt;/xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt; 를 사용 하 여 개체&lt;/xref:System.Xml.XPath.XPathNavigator&gt; 를 복제할 수 또는</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned &lt;xref:System.Xml.XPath.XPathNavigator&gt; object can then be moved away from the selected node set.</source>
          <target state="translated">복제 된 &lt;xref:System.Xml.XPath.XPathNavigator&gt;개체 선택된 된 노드 집합에서 이동할 수 있습니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of cloning the &lt;xref:System.Xml.XPath.XPathNavigator&gt; object might affect the performance of the XPath query.</source>
          <target state="translated">이 메서드는 복제는 &lt;xref:System.Xml.XPath.XPathNavigator&gt;개체 XPath 쿼리의 성능에 영향을 줄 수 있습니다.&lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the &lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;, &lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;, and &lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt; methods result in no nodes being selected, the Current property might not be pointing to the context node.</source>
          <target state="translated">경우는 &lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;, &lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;, 및 &lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;메서드의 해지면 노드가 선택 되 고, 현재 속성 컨텍스트 노드를 가리킬 수 없습니다.&lt;/xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt; &lt;/xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt; &lt;/xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To test whether nodes have been selected, use the &lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt; property as shown in the following example.</source>
          <target state="translated">선택 된 노드가 있는지 여부를 테스트 하려면 사용 하 여 &lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;다음 예제와 같이 속성.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object positioned on the context node from which the node set was selected.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체 컨텍스트 노드에 있는 노드 집합이 선택 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext*&gt; method must be called to move the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to the first node in the selected set.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext*&gt;이동 하려면 메서드를 호출 해야는 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 선택된 된 집합의 첫 번째 노드로.&lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext*&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 노드 중 선택된 된 집합의 현재 위치 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is 1-based.</source>
          <target state="translated">인덱스는 1부터 시작 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the first node has an index of 1.</source>
          <target state="translated">따라서 첫 번째 노드에 인덱스 1에 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>An index of 0 indicates there are no selected nodes.</source>
          <target state="translated">인덱스 0에 선택 된 노드가 없으면 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property always returns a positive integer.</source>
          <target state="translated">항상이 속성은 양의 정수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The index of the current position.</source>
          <target state="translated">현재 위치 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns an &lt;xref:System.Collections.IEnumerator&gt; object to iterate through the selected node set.</source>
          <target state="translated">반환 된 &lt;xref:System.Collections.IEnumerator&gt;선택된 된 노드 집합을 반복 하는 개체입니다.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator is positioned on the current position of the &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; object.</source>
          <target state="translated">열거자의 현재 위치에 배치 되는 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;개체입니다.&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an &lt;xref:System.Xml.XPath.XPathNavigator&gt; collection by using the &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; class.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNavigator&gt; &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;클래스&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt; 를 사용 하 여 컬렉션&lt;/xref:System.Xml.XPath.XPathNavigator&gt; 을 반복 하는 방법은 두 가지가</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the GetEnumerator method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_2.cs)</ept><ept id="p7">]</ept>  <bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_2.vb)</ept><ept id="p9">]</ept>  <bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_2.cpp)</ept><ept id="p11">]</ept>       You should either use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method and &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; or use the GetEnumerator method.</source>
          <target state="translated">One way is to use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the GetEnumerator method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_41_2.cs)</ept><ept id="p7">]</ept><bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_41_2.vb)</ept><ept id="p9">]</ept><bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_41_2.cpp)</ept><ept id="p11">]</ept>       You should either use the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;메서드 및 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;하거나 GetEnumerator 메서드를 사용 합니다.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;     &lt;/xref:System.Collections.IEnumerator&gt;     &lt;/xref:System.Xml.XPath.XPathNavigator&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt; method is called first, and then the GetEnumerator method is called in the <ph id="ph1">`foreach`</ph> loop, the <ph id="ph2">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; method.</source>
          <target state="translated">예를 들어 경우는 &lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;메서드가 먼저 호출 되 고 GetEnumerator 메서드가 호출 되는 다음의 <ph id="ph1">`foreach`</ph> 루프는 <ph id="ph2">`foreach`</ph> 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;메서드.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Collections.IEnumerator&gt; object to iterate through the selected node set.</source>
          <target state="translated">&lt;xref:System.Collections.IEnumerator&gt;선택된 된 노드 집합을 반복 하는 개체입니다.&lt;/xref:System.Collections.IEnumerator&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, moves the <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object returned by the &lt;xref:System.Xml.XPath.XPathNodeIterator.Current*&gt; property to the next node in the selected node set.</source>
          <target state="translated">파생된 클래스에서 재정의 된 <bpt id="p1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 에서 반환 된 개체는 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current*&gt;속성을 선택된 된 노드 집합에 있는 다음 노드에.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current*&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; object is positioned on the first node in the selected node set only after the initial call to the MoveNext method.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;개체 선택된 된 노드 MoveNext 메서드가 처음 호출 후에 집합에서 첫 번째 노드에 배치 됩니다.&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The node set is created in document order.</source>
          <target state="translated">문서 순서로 노드 집합이 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, calling the MoveNext method moves to the next node in document order.</source>
          <target state="translated">따라서 메서드는 문서 순서에 따라 다음 노드로 이동에서 MoveNext를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an &lt;xref:System.Xml.XPath.XPathNavigator&gt; collection by using the &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; class.</source>
          <target state="translated">&lt;xref:System.Xml.XPath.XPathNavigator&gt; &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;클래스&lt;/xref:System.Xml.XPath.XPathNodeIterator&gt; 를 사용 하 여 컬렉션&lt;/xref:System.Xml.XPath.XPathNavigator&gt; 을 반복 하는 방법은 두 가지가</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the MoveNext method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_1.cs)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_1.vb)</ept><ept id="p3">]</ept>  <bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_2.cs)</ept><ept id="p7">]</ept>  <bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_2.vb)</ept><ept id="p9">]</ept>  <bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_2.cpp)</ept><ept id="p11">]</ept>       You should either use the MoveNext method and &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; or use the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method.</source>
          <target state="translated">One way is to use the MoveNext method and then call &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; to get the current &lt;xref:System.Xml.XPath.XPathNavigator&gt; instance, as in the following example:       <bpt id="p1">[!code-cs</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_1.cs)</ept><ept id="p1">]</ept><bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_1.vb)</ept><ept id="p3">]</ept><bpt id="p5">[!code-cpp</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_1.cpp)</ept><ept id="p5">]</ept>       Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method and use the returned &lt;xref:System.Collections.IEnumerator&gt; interface to enumerate the nodes, as in the following example:       <bpt id="p7">[!code-cs</bpt><bpt id="p8">[</bpt>XPathNavigatorMethods#56<ept id="p8">](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_3_2.cs)</ept><ept id="p7">]</ept><bpt id="p9">[!code-vb</bpt><bpt id="p10">[</bpt>XPathNavigatorMethods#56<ept id="p10">](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_3_2.vb)</ept><ept id="p9">]</ept><bpt id="p11">[!code-cpp</bpt><bpt id="p12">[</bpt>XPathNavigatorMethods#56<ept id="p12">](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_3_2.cpp)</ept><ept id="p11">]</ept>       You should either use the MoveNext 메서드 및 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;사용 또는 &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;메서드.&lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;     &lt;/xref:System.Collections.IEnumerator&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;     &lt;/xref:System.Xml.XPath.XPathNavigator&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
          <target state="translated">이러한 두 방법을 결합 예기치 않은 결과가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the MoveNext method is called first, and then the &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt; method is called in the <ph id="ph1">`foreach`</ph> loop, the <ph id="ph2">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; method.</source>
          <target state="translated">MoveNext 메서드를 먼저 호출 하는 경우 등 차례로 &lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;메서드가 호출 되는지는 <ph id="ph1">`foreach`</ph> 루프는 <ph id="ph2">`foreach`</ph> 루프 않고 다음의 위치에서는 컬렉션의 시작 부분에서 결과 열거 하기 시작 되지 것입니다는 &lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;메서드.&lt;/xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> object moved to the next node; <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept> if there are no more selected nodes.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우는 <bpt id="p2">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 다음 노드로 이동 하는 개체 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept> 노드가 더 이상 선택 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본 인 새 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the &lt;xref:System.Xml.XPath.XPathNodeIterator&gt; instance is cast to an &lt;xref:System.ICloneable&gt; interface.</source>
          <target state="translated">사용할 수 있습니다 경우에만 &lt;xref:System.Xml.XPath.XPathNodeIterator&gt;인스턴스로 캐스팅 되는 &lt;xref:System.ICloneable&gt;인터페이스.&lt;/xref:System.ICloneable&gt; &lt;/xref:System.Xml.XPath.XPathNodeIterator&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본 인 새 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>