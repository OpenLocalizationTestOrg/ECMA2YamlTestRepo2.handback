<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96453fc4c74ee03eb1c648ee68c6643891826e01</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Caching.ObjectCache.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e31bc5862cf5f8c33abf9e82c9e3bae5e796d58</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f43733ad7602d935c8c143c859b42e78f3dabf5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object cache and provides the base methods and properties for accessing the object cache.</source>
          <target state="translated">개체 캐시를 나타내고 개체 캐시에 액세스 하기 위한 기본 메서드 및 속성을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ObjectCache type is the primary type for the in-memory object cache.</source>
          <target state="translated">ObjectCache 형식은 메모리 내 개체 캐시에 대 한 기본 형식이입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To develop a custom cache implementation, you derive from the ObjectCache class.</source>
          <target state="translated">사용자 지정 캐시 구현을 개발 하려면 ObjectCache 클래스에서 파생 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  The ObjectCache class is new as of the <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; The ObjectCache 클래스의 새는 <ph id="ph2">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The built-in &lt;xref:System.Runtime.Caching.MemoryCache&gt; class derives from the ObjectCache class.</source>
          <target state="translated">기본 제공 &lt;xref:System.Runtime.Caching.MemoryCache&gt;ObjectCache 클래스에서 클래스 파생&lt;/xref:System.Runtime.Caching.MemoryCache&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Caching.MemoryCache&gt; class is the only concrete object cache implementation in the <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> that derives from the ObjectCache class.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.MemoryCache&gt;클래스는 유일 하 게 구체적인 개체 캐시 구현에는 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph> ObjectCache 클래스에서 파생 된&lt;/xref:System.Runtime.Caching.MemoryCache&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Called from constructors in derived classes in order to initialize the <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">초기화 하기 위해 파생된 클래스의 생성자에서 호출 된 <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 하려고 한 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 선택한 항목을 제거 해야 하는 방법에 대 한 세부 정보를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드 오버 로드는 가상 (추상이 아님)에 &lt;xref:System.Runtime.Caching.ObjectCache&gt;클래스 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드는 내부적으로 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; 호출&lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드를 구현할 수 있는 것은 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;메서드 오버 로드.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The object to add.</source>
          <target state="translated">추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if insertion succeeded, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache that has the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>삽입이 성공 또는 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 없을 경우는 같은 키로 있는 캐시의 항목이 이미 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">item</ph> <ept id="p3">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 기존 캐시 엔트리를 덮어쓰지 않고 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드 오버 로드는 가상 (추상이 아님)에 &lt;xref:System.Runtime.Caching.ObjectCache&gt;클래스 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드는 내부적으로 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; 호출&lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드를 구현할 수 있는 것은 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;메서드 오버 로드.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This parameter is required when the &lt;xref:System.Runtime.Caching.ObjectCache.Add*&gt; method is called.</source>
          <target state="translated">이 매개 변수는 필수는 &lt;xref:System.Runtime.Caching.ObjectCache.Add*&gt;메서드를 호출 합니다.&lt;/xref:System.Runtime.Caching.ObjectCache.Add*&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default value is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지역에서 아직 구현 되지 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if insertion succeeded, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache that has the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>삽입이 성공 또는 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 없을 경우는 같은 키로 있는 캐시의 항목이 이미 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 항목은 제거 하는 방법에 대 한 정보를 지정 하는 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method overloads are virtual (not abstract) on the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class, because the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method internally calls &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드 오버 로드는 가상 (추상이 아님)에 &lt;xref:System.Runtime.Caching.ObjectCache&gt;클래스 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드는 내부적으로 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; 호출&lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a cache implementation does not require any special behavior for the &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt; method, it can just implement the &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 &lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;메서드를 구현할 수 있는 것은 &lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;메서드 오버 로드.&lt;/xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the insertion try succeeds, or <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> if there is an already an entry in the cache with the same key as <bpt id="p3">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>삽입 시도가 성공 하면 또는 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 없을 경우는 같은 키로 캐시 엔트리가 이미 <bpt id="p3">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p3">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts the specified <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 삽입 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 캐시에 항목은 제거 하는 방법에 대 한 정보를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키가 같은 캐시 엔트리가 있으면 지정 된 캐시 엔트리; 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시에 추가 하는 키, 캐시 항목, 절대 만료 값 및 옵션 영역에 대 한 개체를 사용 하 여 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This AddOrGetExisting method overload returns an object value, not a &lt;xref:System.Runtime.Caching.CacheItem&gt; object.</source>
          <target state="translated">이 AddOrGetExisting 메서드 오버 로드 하지는 개체 값을 반환 된 &lt;xref:System.Runtime.Caching.CacheItem&gt;개체입니다.&lt;/xref:System.Runtime.Caching.CacheItem&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">같은 키를 가진 캐시 엔트리가 있으면 지정 된 캐시 항목의 값입니다. 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 키와 캐시 항목 및 항목은 제거 하는 방법에 대 한 정보에 대 한 값을 지정 하는 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOrGetExisting method returns an object value, not a &lt;xref:System.Runtime.Caching.CacheItem&gt; object.</source>
          <target state="translated">AddOrGetExisting 메서드는 개체 값 하지는 &lt;xref:System.Runtime.Caching.CacheItem&gt;개체입니다.&lt;/xref:System.Runtime.Caching.CacheItem&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">같은 키를 가진 캐시 엔트리가 있으면 지정 된 캐시 항목의 값입니다. 그렇지 않으면 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, checks whether the cache entry already exists in the cache.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시 항목이 캐시에 이미 있는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A named region in the cache where the cache can be found, if regions are implemented.</source>
          <target state="translated">캐시를 찾을 수 있는, 영역이 구현 된 경우 캐시의 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the cache contains a cache entry with the same key value as <bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>캐시는 동일한 키 값을 갖는 엔트리를 캐시에 포함 하는 경우 <bpt id="p2">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p2">&lt;/code&gt;</ept>, 그렇지 않으면 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheEntryChangeMonitor"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that can trigger events in response to changes to specified cache entries.</source>
          <target state="translated">파생된 클래스에서 재정의 된 경우는 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheEntryChangeMonitor"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 캐시 항목에 대 한 변경에 대 한 응답에서 이벤트를 트리거할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a derived &lt;xref:System.Runtime.Caching.ObjectCache&gt; class overrides the base CreateCacheEntryChangeMonitor method, the cache implementation must create a &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; object.</source>
          <target state="translated">파생 된 경우 &lt;xref:System.Runtime.Caching.ObjectCache&gt;기본 CreateCacheEntryChangeMonitor 메서드를 재정의 하는 클래스, 캐시 구현을 작성 해야는 &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;개체입니다.&lt;/xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id="ph1">`keys`</ph> parameter.</source>
          <target state="translated">이 특수 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 <ph id="ph1">`keys`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a monitored item in the <ph id="ph1">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</source>
          <target state="translated">예를 들어 모니터링 되는 항목에는 <ph id="ph1">`keys`</ph> 이 메서드에서 만든 변경 모니터는 이벤트를 트리거합니다, 매개 변수를 업데이트 또는 캐시에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a cache implementation supports named cache regions, a string value can be specified as the <ph id="ph1">`regionName`</ph> parameter.</source>
          <target state="translated">캐시를 구현 하는 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 <ph id="ph1">`regionName`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the parameter defaults to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">그렇지 않으면 매개 변수 기본값으로 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Not all cache implementations support cache-entry change monitors.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일부 캐시 구현 변경 모니터 캐시 항목을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether your cache implementation supports &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt; objects, see the documentation for the specific cache implementation.</source>
          <target state="translated">캐시 구현 지원 하는지 확인 하려면 &lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;개체를 특정 캐시 구현에 대 한 설명서를 참조 하십시오.&lt;/xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The unique identifiers for cache entries to monitor.</source>
          <target state="translated">모니터링할 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A named region in the cache where the cache keys in the <ph id="ph1">`keys`</ph> parameter exist, if regions are implemented.</source>
          <target state="translated">명명 된 영역에 캐시 키를 캐시에는 <ph id="ph1">`keys`</ph> 영역이 구현 된 경우 매개 변수가 존재 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A change monitor that monitors cache entries in the cache.</source>
          <target state="translated">캐시의 캐시 항목을 모니터링 하는 변경 모니터입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a description of the features that a cache implementation provides.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우에 캐시 구현에서 제공 하는 기능에 대 한 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A bitwise combination of flags that indicate the default capabilities of a cache implementation.</source>
          <target state="translated">캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as an object.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시에서 지정된 된 캐시 엔트리를 개체로 서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">가져올 캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">캐시 엔트리가 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The cache entry that is identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">로 식별 되는 캐시 엔트리에 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 캐시에서 지정된 된 캐시 엔트리를 가져옵니다는 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload exists because some cache implementations might extend the &lt;xref:System.Runtime.Caching.CacheItem&gt; class.</source>
          <target state="translated">일부 캐시 구현 &lt;xref:System.Runtime.Caching.CacheItem&gt;클래스&lt;/xref:System.Runtime.Caching.CacheItem&gt; 길어질 수 있으므로이 메서드 오버 로드가 존재</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt; method overload will not necessarily return all the information about cached data.</source>
          <target state="translated">이 경우에 &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다.&lt;/xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the GetCacheItem method overload enables custom caches to return more than just the cache value.</source>
          <target state="translated">그러나 항목은 GetCacheItem 메서드 오버 로드 보다 더 캐시 값을 반환 하도록 사용자 지정 캐시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetCacheItem method is like the &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt; method, except that the GetCacheItem method returns return the cache entry as a &lt;xref:System.Runtime.Caching.CacheItem&gt; instance.</source>
          <target state="translated">항목은 GetCacheItem 메서드는 &lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;메서드를 제외 하 고 항목은 GetCacheItem 메서드 반환 반환로 캐시 엔트리를 &lt;xref:System.Runtime.Caching.CacheItem&gt;인스턴스.&lt;/xref:System.Runtime.Caching.CacheItem&gt; &lt;/xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">가져올 캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache was added, if regions are implemented.</source>
          <target state="translated">캐시 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지역에서 아직 구현 되지 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The cache entry that is identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
          <target state="translated">로 식별 되는 캐시 엔트리에 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">key</ph> <ept id="p1">&lt;/code&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the total number of cache entries in the cache.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시의 총 캐시 항목 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A named region in the cache for which the cache entry count should be computed, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수를 계산 해야 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The number of cache entries in the cache.</source>
          <target state="translated">캐시의 캐시 항목의 수입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">regionName</ph><ept id="p1">&lt;/code&gt;</ept> is not <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, the count indicates the number of entries that are in the specified cache region.</source>
          <target state="translated">경우 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">regionName</ph> <ept id="p1">&lt;/code&gt;</ept> 않습니다 <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 지정된 된 캐시 영역에 있는 항목의 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시 항목의 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</source>
          <target state="translated">캐시 구현자는 무시 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 열거자를 반환 합니다. 전체 캐시 항목을 반환 하는 보다 더 비용이 많이 드는 작업은 일반적으로 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the explicit interface implementations that the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class has for the &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; and &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; methods.</source>
          <target state="translated">이 메서드는 명시적 인터페이스 구현 하는 &lt;xref:System.Runtime.Caching.ObjectCache&gt;에 대 한 클래스에는 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;및 &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;메서드.&lt;/xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The enumerator object that provides access to the cache entries in the cache.</source>
          <target state="translated">캐시의 캐시 항목에 대 한 액세스를 제공 하는 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 키에 해당 하는 캐시 항목 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetValues method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</source>
          <target state="translated">GetValues 메서드 오버 로드는 단일 네트워크를 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</source>
          <target state="translated">호출자가 하나 이상의 키 메서드를 전달할 수는 없지만 보장이 없습니다 모든 키 캐시의 엔트리를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</source>
          <target state="translated">따라서 반환 된 사전 메서드에 전달 된 키의 수보다 적은 수의 항목을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">추가 된 캐시의 캐시 항목을 된, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">캐시 항목을 나타내는 키/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">지정된 된 키에 해당 하는 캐시 항목 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The GetValues method overload is like the &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</source>
          <target state="translated">GetValues 메서드 오버 로드는 &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.&lt;/xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a virtual method because the &lt;xref:System.Runtime.Caching.ObjectCache&gt; class provides a default implementation that passes the <ph id="ph1">`params`</ph> array to the &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; method overload.</source>
          <target state="translated">때문에이 메서드는 가상 메서드는 &lt;xref:System.Runtime.Caching.ObjectCache&gt;클래스를 전달 하는 기본 구현을 제공는 <ph id="ph1">`params`</ph> 배열을 &lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;메서드 오버 로드.&lt;/xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">추가 된 캐시의 캐시 항목을 된, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, the default is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지역에서 아직 구현 되지 <ph id="ph1">[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]</ph>, 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">캐시 항목을 나타내는 키/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets or set a reference to a managed hosting environment that is available to <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> implementations and that can provide host-specific services to <bpt id="p2">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> implementations.</source>
          <target state="translated">사용할 수 있는 관리 되는 호스팅 환경에 대 한 참조를 설정 하거나 가져옵니다 <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 구현은 하 고 있는 호스트 관련 서비스를 제공할 수 <bpt id="p2">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Host property is intended for use by <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</source>
          <target state="translated">호스트 속성에서 사용 하기 위한 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph> 환경와.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스팅합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to &lt;xref:System.Runtime.Caching.ObjectCache&gt; implementations through the Host property:      |Service|Description|   |-------------|-----------------|   |&lt;xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt;|Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.|   |&lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;|Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>.|   |&lt;xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt;|Lets cache implementations report cache memory consumption to the host environment.</source>
          <target state="translated">다음 표에서 환경 서비스를 호스트 하는 관리 되는 호스팅 환경에서 사용할 수 있는 고 호스트 속성을 통해 &lt;xref:System.Runtime.Caching.ObjectCache&gt;를 사용할 수 있는 구현 되는 집합이: | 서비스 | 설명 |   |-------------|-----------------|   | &lt;xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt;| 예: 성능 카운터를 확인 하는 기능에 대 한 캐시 구현에 의해 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경이 수 있습니다. |   | &lt;xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt;| 호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수 있습니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]</ph>. |   | &lt;xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt;| 호스트 환경에 캐시 구현 보고서 캐시 메모리 소비량을 수 있습니다.&lt;/xref:System.Runtime.Caching.Hosting.IMemoryCacheManager&gt; &lt;/xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&gt; &lt;/xref:System.Runtime.Caching.Hosting.IApplicationIdentifier&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables host environments to centrally manage memory consumption across multiple cache implementations.|      &gt; <ph id="ph1">[!NOTE]</ph> &gt;  Callers of this property value require unrestricted code access security permissions.</source>
          <target state="translated">이 통해 중앙에서 여러 캐시 구현에서 메모리 소비를 관리 하는 호스트 환경. |      &gt; <ph id="ph1">[!NOTE]</ph> &gt; 호출자가이 속성 값의 제한 없는 코드 액세스 보안 권한이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A reference to a cache-aware managed hosting environment.</source>
          <target state="translated">캐시를 인식 하는 관리 되는 호스팅 환경에 대 한 참조입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value being assigned to the property is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">속성에 할당 되는 값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the property value more than one time.</source>
          <target state="translated">속성 값을 한 번 설정 하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates that a cache entry has no absolute expiration.</source>
          <target state="translated">캐시 엔트리가 없습니다 절대 만료에 있음을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cache entry that is inserted into the cache with the InfiniteAbsoluteExpiration field value set as the expiration value should never expire based on an absolute point in time.</source>
          <target state="translated">만료 값은 만료 되지 않도록 해야 하는 대로 InfiniteAbsoluteExpiration 필드 값 설정 된 캐시에 삽입 되는 캐시 엔트리에 절대 점에 시간의에 기반 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</source>
          <target state="translated">그러나 메모리 부족으로 인 한 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 된 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the default indexer for the <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">에 대 한 기본 인덱서를 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of the set accessor of this property is like the &lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt; method.</source>
          <target state="translated">이 속성의 set 접근자의 동작은 같은 &lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;메서드.&lt;/xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, a cache implementation could set the absolute expiration of the specified value to the &lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt; method.</source>
          <target state="translated">내부적으로 캐시 구현에 지정된 된 값의 절대 만료를 설정할 수는 &lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;메서드.&lt;/xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>However this behavior is ultimately up to the cache implementation.</source>
          <target state="translated">그러나이 문제는 결국 캐시 구현 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of get accessor is like calling the &lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt; method and using <ph id="ph1">`null`</ph> for the region name.</source>
          <target state="translated">Get 접근자의 동작은 호출 처럼는 &lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;메서드와 사용 하 여 <ph id="ph1">`null`</ph> 영역 이름에 대 한.&lt;/xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A unique identifier for a cache entry in the cache.</source>
          <target state="translated">캐시에 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A key that serves as an indexer into the cache instance.</source>
          <target state="translated">캐시 인스턴스의 인덱서로 사용 되는 키입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Gets the name of a specific <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance.</source>
          <target state="translated">특정의 이름을 가져옵니다 <bpt id="p1">&lt;xref href="System.Runtime.Caching.ObjectCache"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some cache implementations might support multiple instances of the cache that is running in a single application.</source>
          <target state="translated">일부 캐시 구현에는 단일 응용 프로그램에서 실행 되는 캐시를 여러 개 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property lets cache implementers return a name that identifies a specific cache instance.</source>
          <target state="translated">이 속성을 사용 하면 캐시 구현자는 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The name of a specific cache instance.</source>
          <target state="translated">특정 캐시 인스턴스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Indicates that a cache entry has no sliding expiration time.</source>
          <target state="translated">캐시 엔트리가 없습니다 슬라이딩 만료 시간에 있음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</source>
          <target state="translated">기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</source>
          <target state="translated">일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현 시간의 하며 지정한 창에 액세스 하지 않은 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cache entry that is inserted into the cache with the NoSlidingExpiration field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</source>
          <target state="translated">슬라이딩 기간이으로 인해 NoSlidingExpiration 필드 값이 만료 값으로 설정 된 캐시에 삽입 하는 캐시 엔트리를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</source>
          <target state="translated">그러나 절대 만료 나 일부 다른 eviction이 이벤트가 발생 하면 이러한는 변경 모니터 또는 메모리가 중 캐시 항목을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, removes the cache entry from the cache.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시 엔트리를 캐시에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id="ph1">`key`</ph>, the value of the removed item should be returned.</source>
          <target state="translated">캐시 항목이 캐시에 해당 하는 경우 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 <ph id="ph1">`key`</ph>, 제거 된 항목의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If nothing was removed from the cache, the method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 일부 분산된 캐시 구현 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This might be because the cache implementation does not support returning the value of a removed cache item.</source>
          <target state="translated">캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않는 때문일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>It might also be because marshaling the object as a return value is too expensive.</source>
          <target state="translated">반환 값은 너무 비용이 저렴 한 개체가 마샬링 때문에 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such cases, cache implementations can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이러한 경우 캐시 구현을 반환할 수 있습니다 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">캐시 엔트리가 추가 된, 영역이 구현 된 경우 캐시의 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An object that represents the value of the removed cache entry that was specified by the key, or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the specified entry was not found.</source>
          <target state="translated">키를 사용 하면 지정 된 제거 되는 캐시 항목의 값을 나타내는 개체 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 항목을 찾을 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts the cache entry into the cache as a <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> instance, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 한 <bpt id="p1">&lt;xref href="System.Runtime.Caching.CacheItem"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 인스턴스를 항목은 제거 하는 방법에 대 한 정보를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the key for <ph id="ph1">`item`</ph> does not exist, <ph id="ph2">`item`</ph> is inserted as a new cache entry.</source>
          <target state="translated">경우에 대 한 키 <ph id="ph1">`item`</ph> 존재 하지 않는 <ph id="ph2">`item`</ph> 새 캐시 항목으로 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the value from <ph id="ph2">`item`</ph> is used to update or overwrite the value of the existing cache entry.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 의 값 존재 <ph id="ph2">`item`</ph> 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The cache item to add.</source>
          <target state="translated">추가할 캐시 항목입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 시간 기반 만료 정보를 지정 하는 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">일치 하는 항목이 있으면 <ph id="ph1">`key`</ph> 캐시에 존재 하지 않는 <ph id="ph2">`value`</ph> 및 <ph id="ph3">`key`</ph> 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">고정 된 날짜 및 시간입니다. 캐시 항목이 만료 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</source>
          <target state="translated">이 메서드 오버 로드에서 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 더 많은 제거 또는 만료 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">일치 하는 항목이 있으면 <ph id="ph1">`key`</ph> 캐시에 존재 하지 않는 <ph id="ph2">`value`</ph> 및 <ph id="ph3">`key`</ph> 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 항목에 대 한 제거 정보를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료 보다 많은 옵션을 제거를 제공합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">캐시를 캐시 항목 수 추가할 수 있는, 영역이 구현 된 경우에 명명 된 영역입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default value for the optional parameter is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">선택적 매개 변수에 대 한 기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Supports iteration over a generic collection.</source>
          <target state="translated">제네릭 컬렉션 반복을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현 이며</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when a derived &lt;xref:System.Runtime.Caching.ObjectCache&gt; instance is cast to an &lt;xref:System.Collections.IEnumerable&gt; interface.</source>
          <target state="translated">파생 된 경우에 사용할 수 있습니다 &lt;xref:System.Runtime.Caching.ObjectCache&gt;인스턴스로 캐스팅 되는 &lt;xref:System.Collections.IEnumerable&gt;인터페이스.&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Runtime.Caching.ObjectCache&gt;</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers can use this method to iterate through a generic collection of cache entries.</source>
          <target state="translated">개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt; implementation that internally calls the &lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt; method.</source>
          <target state="translated">이것이 기본 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;내부적으로 호출 하는 구현에서 &lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;메서드.&lt;/xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt; &lt;/xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The enumerator object that provides access to the items in the cache.</source>
          <target state="translated">캐시에서 항목에 대 한 액세스를 제공 하는 열거자 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>