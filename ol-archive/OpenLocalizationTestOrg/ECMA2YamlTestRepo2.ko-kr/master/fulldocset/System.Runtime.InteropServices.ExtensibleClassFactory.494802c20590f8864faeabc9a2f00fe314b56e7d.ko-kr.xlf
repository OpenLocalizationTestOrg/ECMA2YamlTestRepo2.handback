<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">277a8fd852714e01a1d80a232ab4875f756d1d0e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.InteropServices.ExtensibleClassFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26531ad0eccb8e3fc90302f29bfd4d3df12d8954</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4be4e2544388b5ec157d51a66036108484994984</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables customization of managed objects that extend from unmanaged objects during creation.</source>
          <target state="translated">관리 되는 개체를 만드는 동안 관리 되지 않는 개체에서 확장 되는 사용자 지정할을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ExtensibleClassFactory`</ph> allows users to specify a <ph id="ph2">`delegate`</ph> that is called during construction of a runtime callable wrapper (RCW) that provides an instance of the underlying COM object.</source>
          <target state="translated"><ph id="ph1">`ExtensibleClassFactory`</ph> 사용 지정할 수 있습니다는 <ph id="ph2">`delegate`</ph> 하는 런타임 호출 가능 래퍼 (RCW) 기본 COM 개체의 인스턴스를 제공 하는 생성 하는 동안 호출 되어 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In effect, the callback acts as the class factory for the COM object wrapped by the RCW.</source>
          <target state="translated">실제로 콜백 RCW는 래핑된 COM 개체에 대 한 클래스 팩터리로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without the callback, the common language runtime creates the underlying COM object by calling <ph id="ph1">`CoCreateInstance`</ph>.</source>
          <target state="translated">콜백이 없는 공용 언어 런타임에서 호출 하 여 기본 COM 개체를 만듭니다 <ph id="ph1">`CoCreateInstance`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This callback provides an alternative way of activating the underlying object, such as with a COM moniker or by providing a singleton object.</source>
          <target state="translated">이 콜백은 COM 모니커 또는 단일 개체를 제공 하 여과 같은 내부 개체를 활성화 하는 다른 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt; method must be called in the <ph id="ph1">`static`</ph> initializer of the class that is extending the RCW.</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;에서 메서드를 호출 해야 합니다는 <ph id="ph1">`static`</ph> RCW를 확장 하는 클래스의 이니셜라이저.&lt;/xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one object creation callback is permitted per object type.</source>
          <target state="translated">개체 유형별 개체를 하나만 생성 콜백에서 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the extensible RCW is activated, the callback is registered.</source>
          <target state="translated">확장 가능한 RCW가 활성화 되는 콜백 등록 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the underlying COM object needs to be created, the callback is called to provide a reference to the object.</source>
          <target state="translated">기본 COM 개체를 만들 수 해야 하는 경우 개체에 대 한 참조를 제공 하는 콜백이 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback must return an <ph id="ph1">`IUnknown`</ph> interface pointer for the base object.</source>
          <target state="translated">콜백 반환 해야 합니다는 <ph id="ph1">`IUnknown`</ph> 기준 개체에 대 한 인터페이스 포인터입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Registers a <bpt id="p1">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is called when an instance of a managed type, that extends from an unmanaged type, needs to allocate the aggregated unmanaged object.</source>
          <target state="translated">등록 된 <bpt id="p1">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 관리 되지 않는 형식에서 확장 하는 관리 되는 형식의 인스턴스를 집계 하는 관리 되지 않는 개체를 할당 해야 할 때 호출 되 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`delegate`</ph> allocates and aggregates the unmanaged object and is called in place of <ph id="ph2">`CoCreateInstance`</ph>.</source>
          <target state="translated">이 <ph id="ph1">`delegate`</ph> 할당 및 관리 되지 않는 개체를 집계 하 고 대신 호출 <ph id="ph2">`CoCreateInstance`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`delegate`</ph> must be registered in the context of the <ph id="ph2">`static`</ph> class initializer for which the callbacks will be made.</source>
          <target state="translated">이 <ph id="ph1">`delegate`</ph> 의 컨텍스트에서 등록 해야 합니다는 <ph id="ph2">`static`</ph> 클래스 이니셜라이저가 콜백이 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one class in an hierarchy should register a <ph id="ph1">`delegate`</ph> callback.</source>
          <target state="translated">계층 구조에서 클래스가 하나만 등록 해야는 <ph id="ph1">`delegate`</ph> 콜백 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is called in place of <bpt id="p2">&lt;xref uid="langword_csharp_CoCreateInstance" name="CoCreateInstance" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref uid="langword_csharp_delegate" name="delegate" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 대신 라고 <bpt id="p2">&lt;xref uid="langword_csharp_CoCreateInstance" name="CoCreateInstance" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>