<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecd6d99b205d6d6afb980b52be4acb23dab04562</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Runtime.Serialization.IFormatter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e71f694f394066c9710808d50daf5bf9b31e48af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da0bb7df713c42cd473a4fb1f460c0dc2e9dd975</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality for formatting serialized objects.</source>
          <target state="translated">서식 지정 직렬화 된 개체에 대 한 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface must be implemented by any class identified as a formatter in the &lt;xref:System.Runtime.Serialization&gt; architecture.</source>
          <target state="translated">이 인터페이스는의 포맷터로 식별 되는 클래스에서 구현 해야 합니다는 &lt;xref:System.Runtime.Serialization&gt;아키텍처.&lt;/xref:System.Runtime.Serialization&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects controlling their own serialization can do so by implementing the &lt;xref:System.Runtime.Serialization.ISerializable&gt; interface.</source>
          <target state="translated">자신의 serialization을 제어 하 여 그렇게 할 수 구현 개체는 &lt;xref:System.Runtime.Serialization.ISerializable&gt;인터페이스.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for an object to be serialized, you must mark that object as being serializable.</source>
          <target state="translated">Serialize 할 개체에 대 한 순서 대로 해당 개체를 직렬화 할 수 있는 것으로 표시 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by applying the serializable attribute to a class.</source>
          <target state="translated">Serializable 특성 클래스에 적용 하 여 다음과 같이 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any object in the graph is not serializable, serialization will fail.</source>
          <target state="translated">그래프의 모든 개체를 직렬화 할 수 없는 serialization이 실패 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that performs type lookups during deserialization.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 역직렬화 하는 동안 형식 조회를 수행 하는 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When trying to resolve a type from information encoded on the stream, the formatter calls the &lt;xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt; method on the &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;.</source>
          <target state="translated">를 스트림의 인코딩된 정보에서 형식을 확인 하려고 시도할 때 포맷터 &lt;xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt; &lt;xref:System.Runtime.Serialization.SerializationBinder&gt;했습니다.&lt;/xref:System.Runtime.Serialization.SerializationBinder&gt; 메서드&lt;/xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A&gt; 를 호출 하는</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method resolves these parameters to a &lt;xref:System.Type&gt; object.</source>
          <target state="translated">이 메서드는 이러한 매개 변수를 확인 한 &lt;xref:System.Type&gt;개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The binder can find a &lt;xref:System.Type&gt; at deserialization time that is in a different assembly than it was at serialization time.</source>
          <target state="translated">바인더를 찾을 수는 &lt;xref:System.Type&gt;serialization 시간 보다 다른 어셈블리에 있는 deserialization 시.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect during serialization.</source>
          <target state="translated">영향을 주지 않습니다 serialization 중에이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that performs type lookups during deserialization.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SerializationBinder"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 역직렬화 하는 동안 형식 조회를 수행 하는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for serialization and deserialization.</source>
          <target state="translated">가져오거나는 &lt;xref:System.Runtime.Serialization.StreamingContext&gt;serialization 및 deserialization에 사용 합니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is passed to any object implementing &lt;xref:System.Runtime.Serialization.ISerializable&gt; or &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.</source>
          <target state="translated">이 속성의 값 &lt;xref:System.Runtime.Serialization.ISerializable&gt;또는 &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt; &lt;/xref:System.Runtime.Serialization.ISerializable&gt; 를 구현 하는 모든 개체에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; indicates the destination (during serialization) or the source (during deserialization) of the data.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;(직렬화) 하는 동안 대상 또는 (역직렬화) 하는 동안 데이터의 원본을 나타냅니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object implementing &lt;xref:System.Runtime.Serialization.ISerializable&gt; can alter the data that it transmits depending on value of the Context.</source>
          <target state="translated">구현 하는 개체 &lt;xref:System.Runtime.Serialization.ISerializable&gt;컨텍스트 값에 따라 전송 되는 데이터를 변경할 수 있습니다.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Runtime.Serialization.StreamingContext&gt; used for serialization and deserialization.</source>
          <target state="translated">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;serialization 및 deserialization에 사용 합니다.&lt;/xref:System.Runtime.Serialization.StreamingContext&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Deserializes the data on the provided stream and reconstitutes the graph of objects.</source>
          <target state="translated">제공 된 스트림에서 데이터를 deserialize 하 고 개체의 그래프를 다시 구성 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Deserialize method reads graph information from the stream and reconstructs a clone of the original graph.</source>
          <target state="translated">역직렬화 메서드 그래프 정보는 스트림에서 읽고 원본 그래프의 복제를 다시 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The topology of the graph is preserved.</source>
          <target state="translated">그래프의 토폴로지 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The deserialization process allocates an empty object of the appropriate type and repopulates its fields from the data transmitted in the <ph id="ph1">`serializationStream`</ph> stream.</source>
          <target state="translated">Deserialization 프로세스 적절 한 유형의 빈 개체를 할당 하 고 해당 필드에 전송 되는 데이터를 다시 채웁니다는 <ph id="ph1">`serializationStream`</ph> 스트림 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is important to note that no constructor is ever called on the object during deserialization.</source>
          <target state="translated">역직렬화 하는 동안 생성자는 개체에서 적이 호출을 확인 하는 것이 유용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The stream that contains the data to deserialize.</source>
          <target state="translated">Deserialize 하는 데 데이터를 포함 하는 스트림.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The top object of the deserialized graph.</source>
          <target state="translated">Deserialize 된 그래프의 최상위 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Serializes an object, or graph of objects with the given root to the provided stream.</source>
          <target state="translated">개체 또는 제공 된 스트림에 지정 된 루트를 가진 개체의 그래프를 serialize합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Serialize method automatically serializes the provided objects, and all objects connected to it, to the provided stream.</source>
          <target state="translated">Serialize 메서드에 제공 된 개체를 자동으로 serialize 하 고 모든 개체에 제공 된 스트림에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the serialization process records an object's state by gathering the values of all its fields (public and private).</source>
          <target state="translated">기본적으로 serialization 프로세스 (공용 및 개인)는 모든 필드의 값을 수집 하 여 개체의 상태를 기록 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>These fields are saved to the stream along with information about the object such as the name qualified by the assembly for its type.</source>
          <target state="translated">이러한 필드는 해당 형식에 대 한 어셈블리로 한정 된 이름 같은 개체에 대 한 정보 스트림에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The stream where the formatter puts the serialized data.</source>
          <target state="translated">포맷터 serialize 된 데이터를 저장 하는 위치는 스트림.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This stream can reference a variety of backing stores (such as files, network, memory, and so on).</source>
          <target state="translated">이 스트림은 다양 한 백업 저장소 (예: 파일, 네트워크, 메모리 및 등)를 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The object, or root of the object graph, to serialize.</source>
          <target state="translated">개체 또는 serialize 하는 개체 그래프의 루트입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by the current formatter.</source>
          <target state="translated">가져오거나는 <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 현재 포맷터에서 사용 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt; allows the user to specify an object best suited to handle the serialization of a particular object or class of objects.</source>
          <target state="translated">A &lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;사용자 지정 가장 적합 한 개체는 특정 개체 또는 개체 클래스의 serialization을 처리할 수 있습니다.&lt;/xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Think of it as an implementation of &lt;xref:System.Runtime.Serialization.ISerializable&gt; but provided by a different object.</source>
          <target state="translated">구현으로 한다는 점만 &lt;xref:System.Runtime.Serialization.ISerializable&gt;하지만 다른 개체에서 제공 합니다.&lt;/xref:System.Runtime.Serialization.ISerializable&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> used by this formatter.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Runtime.Serialization.SurrogateSelector"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 포맷터에서 사용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>