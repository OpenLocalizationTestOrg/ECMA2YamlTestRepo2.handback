<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93045f959f8d893147c6082c23816fa01868b322</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IdentityModel.Tokens.SecurityKeyElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e8e57da3a790dc874541d6c9d027e4186a52c68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00f76338927fc4d2510b1ae892d324f2145079f3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides delayed resolution of security keys by resolving the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifier"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> only when cryptographic functions are needed.</source>
          <target state="translated">확인 하 여 보안 키의 지연 된 해결 방법을 제공는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <bpt id="p2">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifier"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 암호화 함수는 필요한 경우에 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This allows a key identifier clause or key identifier that is never used by an application to be serialized and deserialzied on and off the wire without issues.</source>
          <target state="translated">따라서 serialize 되는 응용 프로그램 및 deserialzied 켜고 문제 없이 네트워크에서 사용 되지 않는 키 식별자 절 또는 키 식별자를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified key identifier.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스에서 지정된 된 키 식별자입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A key identifier that represents a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">나타내는 키 식별자는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A token resolver that can be resolved to a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">로 확인 될 수 있는 토큰 확인자는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityKeyIdentifier&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;securityKeyIdentifier&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyElement"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class from the specified key identifier clause.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyElement"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정 된 키 식별자 절에서 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A key identifier clause that represents a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">키 식별자 절을 나타내는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A token resolver that can be resolved to a <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">로 확인 될 수 있는 토큰 확인자는 <bpt id="p1">&lt;xref href="System.IdentityModel.Tokens.SecurityKey"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Decrypts the specified key by using the specified algorithm.</source>
          <target state="translated">지정된 된 알고리즘을 사용 하 여 지정된 된 키를 해독 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The algorithm to use to decrypt the key.</source>
          <target state="translated">키를 해독 하는 데 사용 되는 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An array that contains the encrypted key.</source>
          <target state="translated">암호화 키를 포함 하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An array that contains the decrypted key.</source>
          <target state="translated">암호 해독 된 키가 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Encrypts the specified key by using the specified algorithm.</source>
          <target state="translated">지정된 된 알고리즘을 사용 하 여 지정된 된 키를 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The algorithm to use to decrypt the key.</source>
          <target state="translated">키를 해독 하는 데 사용 되는 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An array that contains the key to encrypt.</source>
          <target state="translated">암호화 키가 포함 된 배열입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array that contains the encrypted key.</source>
          <target state="translated">암호화 키를 포함 하는 배열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified algorithm is asymmetric.</source>
          <target state="translated">지정 된 알고리즘은 비대칭 인지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="translated">확인할 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the algorithm will be processed by the runtime as asymmetric; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>알고리즘으로 비대칭; 런타임에 의해 처리 됩니다 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified algorithm is supported by this key.</source>
          <target state="translated">이 키로 지정 된 알고리즘이 지원 되는지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="translated">확인할 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the algorithm is supported by this key; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 키;로 된 알고리즘을 지원 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified algorithm is symmetric.</source>
          <target state="translated">지정 된 알고리즘은 대칭 인지 여부를 나타내는 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The algorithm to check.</source>
          <target state="translated">확인할 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the algorithm will be processed by the runtime as symmetric; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>알고리즘으로 대칭; 런타임에 의해 처리 됩니다 하는 경우 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the key size, in bits.</source>
          <target state="translated">비트 키 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The key size, in bits.</source>
          <target state="translated">비트의 키 크기입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>