<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0ed6181a1ba5be8ebc2649d683d5a5da76cf941</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.EnterpriseServices.RegistrationHelperTx.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bded9b2ddeb32998579dc5727d59b1c163e449d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">252d3951cf5939e0d9946014a1c3618dda67c210</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Used by the .NET Framework infrastructure to install and configure assemblies in the COM+ catalog while maintaining a newly established transaction.</source>
          <target state="translated">.NET Framework 인프라를 통해 설치 하 고 새로 설정된 된 트랜잭션을 유지 관리 하는 동안 COM + 카탈로그에서 어셈블리를 구성 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A &lt;xref:System.EnterpriseServices.TransactionAttribute&gt; class attribute is applied to the RegistrationHelperTx class, with a parameter of the &lt;xref:System.EnterpriseServices.TransactionOption&gt; field.</source>
          <target state="translated">A &lt;xref:System.EnterpriseServices.TransactionAttribute&gt;RegistrationHelperTx 클래스의 매개 변수와 함께 클래스 특성이 적용 되는 &lt;xref:System.EnterpriseServices.TransactionOption&gt;필드.&lt;/xref:System.EnterpriseServices.TransactionOption&gt; &lt;/xref:System.EnterpriseServices.TransactionAttribute&gt;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type does not need to be used directly from your code.</source>
          <target state="translated">이 유형은 사용자 코드에서 직접 사용할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the &lt;xref:System.EnterpriseServices.RegistrationHelper&gt; class.</source>
          <target state="translated">대신, &lt;xref:System.EnterpriseServices.RegistrationHelper&gt;클래스&lt;/xref:System.EnterpriseServices.RegistrationHelper&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Installs the named assembly in the COM+ catalog using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 카탈로그에 명명된 된 어셈블리를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InstallAssembly method does not need to be called directly from your code.</source>
          <target state="translated">InstallAssembly 메서드 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt; method with the same parameters except object sync.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt;sync 개체를 제외 하 고 동일한 매개 변수가 있는 메서드에.&lt;/xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method requires the caller to have administrative privileges on the local computer.</source>
          <target state="translated">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The file name of the assembly to install.</source>
          <target state="translated">설치할 어셈블리의 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Either the name of the COM+ application to install into or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 설치 하려면 COM + 응용 프로그램의 이름 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Either the name of the output Type Library Exporter (Tlbexp.exe) file or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">출력의 이름을 형식 라이브러리 내보내기 (Tlbexp.exe) 파일 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the installation flags values.</source>
          <target state="translated">설치의 비트 조합 플래그 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</source>
          <target state="translated">COM + 카탈로그에 지정 된 어셈블리가 구성 될 때까지 기다릴 수 있는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Installs the named assembly in the COM+ catalog using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 카탈로그에 명명된 된 어셈블리를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The InstallAssembly method does not need to be called directly from your code.</source>
          <target state="translated">InstallAssembly 메서드 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt; method with the same parameters except object sync.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt;sync 개체를 제외 하 고 동일한 매개 변수가 있는 메서드에.&lt;/xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method requires the caller to have administrative privileges on the local computer.</source>
          <target state="translated">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The file name of the assembly to install.</source>
          <target state="translated">설치할 어셈블리의 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Either the name of the COM+ application to install into or a string that contains <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 설치 하려면 COM + 응용 프로그램 또는 포함 하는 문자열의 이름을 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Either the name of the partition or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파티션 이름 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Either the name of the output Type Library Exporter (Tlbexp.exe) file or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">출력의 이름을 형식 라이브러리 내보내기 (Tlbexp.exe) 파일 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the installation flags values.</source>
          <target state="translated">설치의 비트 조합 플래그 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that can wait until the specified assembly has been configured in the COM+ catalog.</source>
          <target state="translated">COM + 카탈로그에 지정 된 어셈블리가 구성 될 때까지 기다릴 수 있는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Installs a specified assembly in the COM+ catalog using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 카탈로그에 지정된 된 어셈블리를 설치 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under certain circumstances, the InstallAssemblyFromConfig method is called from within the .NET Framework infrastructure.</source>
          <target state="translated">특정 상황에서는 InstallAssemblyFromConfig 메서드는.NET Framework 인프라 내에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not need to be called directly from your code.</source>
          <target state="translated">사용자 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A&gt; method.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A&gt;메서드.&lt;/xref:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig%2A&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method requires the caller to have administrative privileges on the local computer.</source>
          <target state="translated">이 메서드는 호출자가 로컬 컴퓨터에 대 한 관리자 권한이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Configuration information for installing an assembly into the COM+ catalog.</source>
          <target state="translated">COM + 카탈로그에 어셈블리를 설치 하기 위한 구성 정보입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that waits until the specified assembly has been configured in the COM+ catalog.</source>
          <target state="translated">COM + 카탈로그에 지정 된 어셈블리가 구성 될 때까지 대기 하는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current context for the <bpt id="p1">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class instance is transactional.</source>
          <target state="translated">나타내는 값을 가져옵니다 여부에 대 한 현재 컨텍스트는 <bpt id="p1">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스 인스턴스는 트랜잭션.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under certain circumstances, the IsInTransaction method is called from within the .NET Framework infrastructure.</source>
          <target state="translated">특정 상황에서는 IsInTransaction 메서드는.NET Framework 인프라 내에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not need to be called directly from your code.</source>
          <target state="translated">사용자 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the current context for the <bpt id="p2">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> class instance is transactional; otherwise, <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>경우에 대 한 현재 컨텍스트는 <bpt id="p2">&lt;xref href="System.EnterpriseServices.RegistrationHelperTx"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 클래스 인스턴스는 고, 그렇지 않으면 트랜잭션 <bpt id="p3">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Uninstalls an assembly from a COM+ application using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 응용 프로그램에서 어셈블리를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UninstallAssembly method does not need to be called directly from your code.</source>
          <target state="translated">UninstallAssembly 메서드 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt; method with the same parameters except object sync.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt;sync 개체를 제외 하 고 동일한 매개 변수가 있는 메서드에.&lt;/xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The file name of the assembly to uninstall.</source>
          <target state="translated">제거할 어셈블리의 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Either the name of the COM+ application that contains the components in the assembly or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">어셈블리의 구성 요소를 포함 하는 COM + 응용 프로그램의 이름 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</source>
          <target state="translated">지정 된 어셈블리가 제거 될 때까지 기다릴 수는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Uninstalls an assembly from a COM+ application using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 응용 프로그램에서 어셈블리를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UninstallAssembly method does not need to be called directly from your code.</source>
          <target state="translated">UninstallAssembly 메서드 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt; method with the same parameters except object sync.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt;sync 개체를 제외 하 고 동일한 매개 변수가 있는 메서드에.&lt;/xref:System.EnterpriseServices.RegistrationHelper.UninstallAssembly%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The file name of the assembly to uninstall.</source>
          <target state="translated">제거할 어셈블리의 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Either the name of the COM+ application that contains the components in the assembly or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">어셈블리의 구성 요소를 포함 하는 COM + 응용 프로그램의 이름 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Either the name of the partition or <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파티션 이름 또는 <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that can wait until the specified assembly has been uninstalled.</source>
          <target state="translated">지정 된 어셈블리가 제거 될 때까지 기다릴 수는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Uninstalls a specified assembly from a COM+ application using transactional semantics.</source>
          <target state="translated">트랜잭션 의미 체계를 사용 하 여 COM + 응용 프로그램에서 지정된 된 어셈블리를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under certain circumstances, the UninstallAssemblyFromConfig method is called from within the .NET Framework infrastructure.</source>
          <target state="translated">특정 상황에서는 UninstallAssemblyFromConfig 메서드는.NET Framework 인프라 내에서 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not need to be called directly from your code.</source>
          <target state="translated">사용자 코드에서 직접 호출할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A&gt; method.</source>
          <target state="translated">대신, 호출 된 &lt;xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A&gt;메서드.&lt;/xref:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig%2A&gt;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Configuration information that specifies an assembly to uninstall from an application.</source>
          <target state="translated">응용 프로그램에서 제거할 어셈블리를 지정 하는 구성 정보입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A synchronization object generated by the infrastructure that waits until the specified assembly has been uninstalled.</source>
          <target state="translated">지정된 된 어셈블리 제거 될 때까지 대기 하는 인프라에 의해 생성 된 동기화 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>