<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17f4179579828324e2f87f0e7675d74ea3811f1a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Security.Cryptography.RSA.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6dd2e06a81bcc52dd36e93e91f764e7a69f06ff9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1fca14c819f638f0666324e98d2e6af69f2691b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the base class from which all implementations of the RSA algorithm inherit.</source>
          <target state="translated">RSA 알고리즘의 모든 구현이 상속 되는 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extending this class proves that you are implementing an <ph id="ph1">`RSA`</ph> key.</source>
          <target state="translated">구현 하는 증명이 클래스를 확장 한 <ph id="ph1">`RSA`</ph> 키입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is required for any developer providing a new <ph id="ph1">`RSA`</ph> key implementation.</source>
          <target state="translated">이 새를 제공 하는 개발자에 게 필요 <ph id="ph1">`RSA`</ph> 중요 한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only purpose of this class is as a hierarchy member for identification of the <ph id="ph1">`RSA`</ph> algorithm.</source>
          <target state="translated">id에 대 한 계층 멤버는이 클래스의 전용 모드는 <ph id="ph1">`RSA`</ph> 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt; supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;는 Microsoft Enhanced Cryptographic Provider가 설치 되어 있는 경우 8 비트씩 증가-16384 384 비트 까지의 키 길이 지원 합니다.&lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">Microsoft Base Cryptographic Provider가 설치 되어 있는 경우 8 비트씩 증가의 키 길이가 384 비트 까지의 512를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a protected method that can only be called from a class derived from &lt;xref:System.Security.Cryptography.RSA&gt;.</source>
          <target state="translated">이 &lt;xref:System.Security.Cryptography.RSA&gt;.&lt;/xref:System.Security.Cryptography.RSA&gt; 에서 파생 된 클래스에서 호출 될 수 있는 보호 된 메서드</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">추상 클래스의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Creates an instance of the default implementation of the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> algorithm.</source>
          <target state="translated">기본 구현 인스턴스를 만듭니다는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A new instance of the default implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본 구현은의 새 인스턴스 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates an instance of the specified implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 구현 인스턴스를 만듭니다 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to use.</source>
          <target state="translated">구현 이름 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 사용 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A new instance of the specified implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">지정 된 구현의 새 인스턴스 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, decrypts the input data using the specified padding mode.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 패딩 모드를 사용 하 여 입력된 데이터를 해독 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data to decrypt.</source>
          <target state="translated">해독할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The decrypted data.</source>
          <target state="translated">암호 해독 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, decrypts the input data using the private key.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 개인 키를 사용 하 여 입력된 데이터를 해독 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id="ph2">`abstract`</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]</ph> 되었으며.NET Framework의 이전 버전에서는이 메서드가 <ph id="ph2">`abstract`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the only implementation by a derived class, &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;, also threw a &lt;xref:System.NotSupportedException&gt; exception.</source>
          <target state="translated">그러나 파생된 클래스에서 유일한 구현 &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;, 또한 했습니다는 &lt;xref:System.NotSupportedException&gt;예외.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The cipher text to be decrypted.</source>
          <target state="translated">암호 해독할 암호화 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The resulting decryption of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgb</ph><ept id="p1">&lt;/code&gt;</ept> parameter in plain text.</source>
          <target state="translated">변수의 해독 결과 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">rgb</ph> <ept id="p1">&lt;/code&gt;</ept> 일반 텍스트로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This method call is not supported.</source>
          <target state="translated">이 메서드 호출은 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This exception is thrown starting with the <ph id="ph1">[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]</ph>.</source>
          <target state="translated">부터이 예외가 throw 되는 <ph id="ph1">[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, encrypts the input data using the specified padding mode.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 패딩 모드를 사용 하 여 입력된 데이터를 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The data to encrypt.</source>
          <target state="translated">암호화할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The encrypted data.</source>
          <target state="translated">암호화 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, encrypts the input data using the public key.</source>
          <target state="translated">파생된 클래스에서 재정의 하는 경우 공개 키를 사용 하 여 입력된 데이터를 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id="ph2">`abstract`</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v452](~/add/includes/net-v452-md.md)]</ph> 되었으며.NET Framework의 이전 버전에서는이 메서드가 <ph id="ph2">`abstract`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the only implementation by a derived class, &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;, also threw a &lt;xref:System.NotSupportedException&gt; exception.</source>
          <target state="translated">그러나 파생된 클래스에서 유일한 구현 &lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;, 또한 했습니다는 &lt;xref:System.NotSupportedException&gt;예외.&lt;/xref:System.NotSupportedException&gt; &lt;/xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The plain text to be encrypted.</source>
          <target state="translated">암호화할 일반 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The resulting encryption of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgb</ph><ept id="p1">&lt;/code&gt;</ept> parameter as cipher text.</source>
          <target state="translated">변수의 암호화 결과 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">rgb</ph> <ept id="p1">&lt;/code&gt;</ept> 암호화 텍스트로 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This method call is not supported.</source>
          <target state="translated">이 메서드 호출은 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This exception is thrown starting with the <ph id="ph1">[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]</ph>.</source>
          <target state="translated">부터이 예외가 throw 되는 <ph id="ph1">[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, exports the <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 내보냅니다는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include private parameters; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>개인 매개 변수를 포함 하려면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The parameters for <bpt id="p1">&lt;xref href="System.Security.Cryptography.DSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 매개 변수 <bpt id="p1">&lt;xref href="System.Security.Cryptography.DSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes an <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object from the key information from an XML string.</source>
          <target state="translated">초기화는 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 의 키 정보는 XML 문자열에서 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FromXmlString initializes an RSA object using key information in an XML string that was generated using the &lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt; method.</source>
          <target state="translated">FromXmlString RSA를 사용 하 여 생성 된 XML 문자열에 중요 한 정보를 사용 하 여 개체를 초기화는 &lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;메서드.&lt;/xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The FromXmlString method accepts either an XML string containing a public key or an XML string containing a public and private key.</source>
          <target state="translated">FromXmlString 메서드는 공개 키를 포함 하는 XML 문자열 또는 공용 및 개인 키를 포함 하는 XML 문자열을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the FromXmlString method to conveniently initialize &lt;xref:System.Security.Cryptography.RSA&gt; key information.</source>
          <target state="translated">FromXmlString 메서드를 사용 하 여 간편 하 게 초기화할 &lt;xref:System.Security.Cryptography.RSA&gt;키 정보가.&lt;/xref:System.Security.Cryptography.RSA&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Persisting an XML string containing a private key to an insecure location is a security threat.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security of your application can be compromised if a malicious third party can access your private key.</source>
          <target state="translated">악의적인 제&amp;3; 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To safely persist a private key, use a secure key container.</source>
          <target state="translated">개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about persisting private keys in a key container, see <bpt id="p1">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 키 컨테이너에 비대칭 키 저장소<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The XML string containing <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> key information.</source>
          <target state="translated">포함 하는 XML 문자열 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 키 정보가 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xmlString</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xmlString</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The format of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xmlString</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
          <target state="translated">형식은 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">xmlString</ph> <ept id="p1">&lt;/code&gt;</ept> 매개 변수가 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 해싱 알고리즘을 사용 하 여 지정 된 이진 스트림의 해시 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The binary stream to hash.</source>
          <target state="translated">해시할 이진 스트림입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The hash algorithm.</source>
          <target state="translated">해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The hashed data.</source>
          <target state="translated">해시 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정된 된 해싱 알고리즘을 사용 하 여 지정 된 바이트 배열 부분의 해시 값을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The data to be hashed.</source>
          <target state="translated">해시할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The index of the first byte in <ph id="ph1">`data`</ph> that is to be hashed.</source>
          <target state="translated">첫 번째 바이트의 인덱스 <ph id="ph1">`data`</ph> 해시할입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The number of bytes to hash.</source>
          <target state="translated">해시할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The algorithm to use in hash the data.</source>
          <target state="translated">해시에 데이터를 사용 하는 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The hashed data.</source>
          <target state="translated">해시 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, imports the specified <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAParameters"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSAParameters"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The parameters for <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">에 대 한 매개 변수 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets the name of the key exchange algorithm available with this implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">이 구현에 사용 가능한 키 교환 알고리즘의 이름을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns "RSA".</source>
          <target state="translated">"RSA"를 반환.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets the name of the signature algorithm available with this implementation of <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">해당이 구현에 사용 가능한 서명 알고리즘의 이름을 가져옵니다 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns "RSA".</source>
          <target state="translated">"RSA"를 반환.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 바이트 배열의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산 하는 입력된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 된 데이터에 대 한 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 스트림의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The input stream for which to compute the hash.</source>
          <target state="translated">해시를 계산 하는 입력된 스트림.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 된 데이터에 대 한 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정 된 해시 알고리즘 및 패딩 모드를 사용 하 여 지정 된 바이트 배열 일부의 해시 값을 계산 하 고 결과 해시 값을 서명 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산 하는 입력된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The offset into the array at which to begin using data.</source>
          <target state="translated">데이터를 사용 하 여 시작 하는 배열에 대 한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 된 데이터에 대 한 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> 가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph3">&lt;code&gt;data&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph2"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1의 상한을 초과 하는 인덱스에 <ph id="ph3">&lt;code&gt;data&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</source>
          <target state="translated">파생된 클래스에서 재정의 되 면 지정 된 패딩을 사용 하 여 개인 키로 암호화 하 여 지정된 된 해시 값의 서명을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">서명할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The padding.</source>
          <target state="translated">안쪽 여백입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The RSA signature for the specified hash value.</source>
          <target state="translated">지정된 된 해시 값에 대 한 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Creates and returns an XML string containing the key of the current <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">만들고 현재 키가 들어 있는 XML 문자열을 반환 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ToXmlString method creates an XML string that contains either the public and private key of the current &lt;xref:System.Security.Cryptography.RSA&gt; object or contains only the public key of the current &lt;xref:System.Security.Cryptography.RSA&gt; object.</source>
          <target state="translated">ToXmlString 메서드 중 하나를 포함 하는 XML 문자열의 현재 공용 및 개인 키를 만듭니다 &lt;xref:System.Security.Cryptography.RSA&gt;개체 또는 현재 공개 키만 들어 &lt;xref:System.Security.Cryptography.RSA&gt;개체입니다.&lt;/xref:System.Security.Cryptography.RSA&gt; &lt;/xref:System.Security.Cryptography.RSA&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the ToXmlString method whenever you need to conveniently persist RSA key information.</source>
          <target state="translated">RSA 키 정보를 편리 하 게 유지 해야 할 경우 ToXmlString 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>To initialize an &lt;xref:System.Security.Cryptography.RSA&gt; object with the key in an XML string, use the &lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt; method.</source>
          <target state="translated">초기화 하는 &lt;xref:System.Security.Cryptography.RSA&gt;XML 문자열을 사용 하 여 키를 갖는 개체는 &lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;메서드.&lt;/xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt; &lt;/xref:System.Security.Cryptography.RSA&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!CAUTION]</ph> &gt;  Persisting an XML string containing a private key to an insecure location is a security threat.</source>
          <target state="translated">&gt; <ph id="ph1">[!CAUTION]</ph> &gt; 보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security of your application can be compromised if a malicious third party can access your private key.</source>
          <target state="translated">악의적인 제&amp;3; 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>To safely persist a private key, use a secure key container.</source>
          <target state="translated">개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about persisting private keys in a key container, see <bpt id="p1">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 키 컨테이너에 비대칭 키 저장소<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you pass <ph id="ph1">`true`</ph> to the ToXmlString method, the resulting XML string takes the following form:      <ph id="ph2">```   &lt;RSAKeyValue&gt;      &lt;Modulus&gt;…&lt;/Modulus&gt;      &lt;Exponent&gt;…&lt;/Exponent&gt;      &lt;P&gt;…&lt;/P&gt;      &lt;Q&gt;…&lt;/Q&gt;      &lt;DP&gt;…&lt;/DP&gt;      &lt;DQ&gt;…&lt;/DQ&gt;      &lt;InverseQ&gt;…&lt;/InverseQ&gt;      &lt;D&gt;…&lt;/D&gt;   &lt;/RSAKeyValue&gt;   ```</ph>       When you pass <ph id="ph3">`false`</ph> to the ToXmlString method, the resulting XML string takes the following form:      <ph id="ph4">```   &lt;RSAKeyValue&gt;      &lt;Modulus&gt;…&lt;/Modulus&gt;      &lt;Exponent&gt;…&lt;/Exponent&gt;   &lt;/RSAKeyValue&gt;   ```</ph></source>
          <target state="translated">전달 하는 경우 <ph id="ph1">`true`</ph> 결과 XML 문자열은 다음 형식으로 ToXmlString 메서드에: <ph id="ph2">```   &lt;RSAKeyValue&gt;      &lt;Modulus&gt;…&lt;/Modulus&gt;      &lt;Exponent&gt;…&lt;/Exponent&gt;      &lt;P&gt;…&lt;/P&gt;      &lt;Q&gt;…&lt;/Q&gt;      &lt;DP&gt;…&lt;/DP&gt;      &lt;DQ&gt;…&lt;/DQ&gt;      &lt;InverseQ&gt;…&lt;/InverseQ&gt;      &lt;D&gt;…&lt;/D&gt;   &lt;/RSAKeyValue&gt;   ```</ph> 전달 하는 경우 <ph id="ph3">`false`</ph> 결과 XML 문자열은 다음 형식으로 ToXmlString 메서드:<ph id="ph4">```   &lt;RSAKeyValue&gt;      &lt;Modulus&gt;…&lt;/Modulus&gt;      &lt;Exponent&gt;…&lt;/Exponent&gt;   &lt;/RSAKeyValue&gt;   ```</ph></target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to include a public and private RSA key; <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> to include only the public key.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>공용 및 개인 RSA 키;를 포함 하려면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 공개 키만 포함 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An XML string containing the key of the current <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재 키를 포함 하는 XML 문자열 <bpt id="p1">&lt;xref href="System.Security.Cryptography.RSA"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">지정 된를 사용 하 여 지정된 된 데이터의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The signed data.</source>
          <target state="translated">서명 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">지정 된를 사용 하 여 지정 된 스트림의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The signed data.</source>
          <target state="translated">서명 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">데이터를 사용 하 여 지정 된 바이트 배열 부분의 해시 값을 계산 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 서명과 비교 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The signed data.</source>
          <target state="translated">서명 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The starting index at which to compute the hash.</source>
          <target state="translated">해시를 계산 하기 시작 하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The number of bytes to hash.</source>
          <target state="translated">해시할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;signature&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-or-       <ph id="ph1">&lt;code&gt;padding&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;code&gt;hashAlgorithm&lt;/code&gt;</ph>.<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithmName.Name*&gt;</ph></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> or <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 또는 <ph id="ph1">&amp;lt;</ph>xref:System.String.Empty?displayProperty=fullName<ph id="ph2">&amp;gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph>가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> 가&amp;0; 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph><ph id="ph2"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph3">&lt;code&gt;data&lt;/code&gt;</ph>.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> <ph id="ph2"> + &lt;code&gt;count&lt;/code&gt;</ph> – 1의 상한을 초과 하는 인덱스에 <ph id="ph3">&lt;code&gt;data&lt;/code&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.</source>
          <target state="translated">지정 된를 사용 하 여 서명의 해시 값을 확인 하 여 디지털 서명이 유효한 지 확인 해시 알고리즘 및 패딩, 제공 된 해시 값을 비교 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The hash value of the signed data.</source>
          <target state="translated">서명된 된 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The hash algorithm used to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the signature is valid; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>서명이 잘못 되었습니다; 확인 되 면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A derived class must override this method.</source>
          <target state="translated">파생된 클래스는이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>