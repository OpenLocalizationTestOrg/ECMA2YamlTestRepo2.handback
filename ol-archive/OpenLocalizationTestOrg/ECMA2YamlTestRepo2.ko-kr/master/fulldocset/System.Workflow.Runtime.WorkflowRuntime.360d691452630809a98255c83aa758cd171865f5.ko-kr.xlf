<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fed7190dd0210b8a650b81b56869f7ed74d3c2e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.Workflow.Runtime.WorkflowRuntime.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61a7dc4a0c0348dee475fcbe86cc3143601b1f25</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8dbf3a7cd390851dc70a1ee78bd63f0a7163185</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">워크플로에 대 한 워크플로 런타임 엔진에서 제공 하는 구성 가능한 실행 환경을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>       WorkflowRuntime exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated"><ph id="ph1">&gt; [!NOTE]</ph><ph id="ph2"> &gt;  </ph><ph id="ph3">[!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]</ph>WorkflowRuntime는 호스트 응용 프로그램 및 서비스를 구성 하 여 워크플로 런타임 엔진을 제어 하 고 변경 내용을 워크플로 런타임 엔진 및 해당 워크플로 인스턴스 중 하나에 대 한 알림을 필요한 기능을 노출 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; is initialized with the default property values and contains the default core services.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;기본 속성 값으로 초기화 되 고 기본 핵심 서비스를 포함 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt; and &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;, and you can set &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;.</source>
          <target state="translated">또한 워크플로 런타임 엔진을 구성 하려면 추가 및 사용 하 여 서비스를 제거할 수 있습니다 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;, &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt; 를 설정할 수 있습니다 및&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; is configured, call &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; to start the workflow run-time engine and its services.</source>
          <target state="translated">후의 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;는 호출을 구성 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;를 워크플로 런타임 엔진과 해당 서비스를 시작 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; class.</source>
          <target state="translated">다음 표에서 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;클래스&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 의 인스턴스에 대 한 초기 속성 값을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>|Property|Initial Value|   |--------------|-------------------|   |&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;|"WorkflowRuntime"|   |&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;|<ph id="ph1">`false`</ph>|       The default core services are &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt; and &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;.</source>
          <target state="translated">| 속성 | 초기 값 |   |--------------|-------------------|   | &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;|" WorkflowRuntime "|   | &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;| <ph id="ph1">`false`</ph>|       기본 핵심 서비스는 &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;및 &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the specified section of the application configuration file.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 구성 파일의 지정된 된 섹션을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; is initialized according to the settings in the section specified by <ph id="ph1">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;설정 하 여 지정 된 섹션에 따라 초기화 <ph id="ph1">`configSectionName`</ph> 응용 프로그램 구성 파일에.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph>유효한 일치 해야 <ph id="ph2">`workflowSettings`</ph> 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용 하 여 워크플로 런타임 엔진을 구성, 로드 및에 나열 된 유형의 클래스를 인스턴스화하는 <ph id="ph1">`Services`</ph> 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:      1.</source>
          <target state="translated">다음 순서로 다음과 같은 서명 사용 하는 클래스 생성자를 찾도록 클래스 워크플로 런타임 엔진 이러한를 생성할 때: 1입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)      2.</source>
          <target state="translated">Service(WorkflowRuntime runtime, NameValueCollection parameters) 2입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(WorkflowRuntime runtime)      3.</source>
          <target state="translated">Service(WorkflowRuntime runtime) 3입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(NameValueCollection parameters)      4.</source>
          <target state="translated">Service(NameValueCollection parameters) 4입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service()       All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">모든 서비스 구성 파일에서 로드 되는 클래스 Service() 이러한 생성자 서명을 하나 이상 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of a valid <bpt id="p1">&lt;xref uid="langword_csharp_workflowSettings" name="workflowSettings" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section in the application configuration file.</source>
          <target state="translated">올바른 이름의 <bpt id="p1">&lt;xref uid="langword_csharp_workflowSettings" name="workflowSettings" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 구성 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;configSectionName&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;configSectionName&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A valid <bpt id="p1">&lt;xref uid="langword_csharp_workflowSettings" name="workflowSettings" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> section could not be found in the application configuration file.</source>
          <target state="translated">유효한 <bpt id="p1">&lt;xref uid="langword_csharp_workflowSettings" name="workflowSettings" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 응용 프로그램 구성 파일에서 섹션을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> already exists for this application domain.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 응용 프로그램 도메인에 대해 이미 존재 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class by using the settings in the specified <bpt id="p2">&lt;xref href="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스를 지정 된 설정을 사용 하 여 <bpt id="p2">&lt;xref href="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">이 생성자는 응용 프로그램 구성 파일을 사용 하지 않는 호스트에 대 한 단일 메서드 호출을 사용 하 여 워크플로 런타임 엔진을 구성 하는 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 사용 하지 않는 여러 가지 이유가 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">호스트 구성 파일을 사용 하 여 허용 하지 않는 환경에서 실행할 수 있습니다. 예를 들어 신뢰할 수 있는 환경에 있는 읽기를 허용 하지 않는 보안상의 이유로 응용 프로그램 구성 파일에서 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">또한 호스트가 비공개 구성 메커니즘; 사용할 수 있습니다. 예를 들어 호스트는 SQL 데이터베이스에 워크플로 런타임 엔진 구성 설정을 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">워크플로 런타임 엔진이 로드 하 고 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName&gt; 에 포함 된 형식의 클래스를 인스턴스화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:      1.</source>
          <target state="translated">다음 순서로 다음과 같은 서명 사용 하는 클래스 생성자를 찾도록 클래스 워크플로 런타임 엔진 이러한를 생성할 때: 1입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)      2.</source>
          <target state="translated">Service(WorkflowRuntime runtime, NameValueCollection parameters) 2입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(WorkflowRuntime runtime)      3.</source>
          <target state="translated">Service(WorkflowRuntime runtime) 3입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service(NameValueCollection parameters)      4.</source>
          <target state="translated">Service(NameValueCollection parameters) 4입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Service()       All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated">모든 서비스 클래스에 지정 된 Service() <ph id="ph1">`settings`</ph> 이러한 생성자 서명을 하나 이상 구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;settings&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;settings&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> already exists for this application domain.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 응용 프로그램 도메인에 대해 이미 존재 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">워크플로 런타임 엔진에 지정된 된 서비스를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">핵심 서비스를 추가 하 여 워크플로 런타임 엔진을 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Core services are those that derive from any of the following service base classes: the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, and the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class.</source>
          <target state="translated">핵심 서비스는 다음 서비스 기본 클래스에서 파생 된: &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;클래스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;클래스의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;클래스 및 &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;클래스&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">핵심 서비스는 워크플로 런타임 엔진; 실행 하지 않는 경우에 추가할 수 있습니다. 즉, &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;은 <ph id="ph1">`false`</ph>.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;호스트에서 실행 중인 응용 프로그램이 나 다른 워크플로에서 사용할 수 있는 다른 서비스에 대 한 저장소 컨테이너로 사용 수도 수 있습니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add a non-core service that derives from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class after the workflow run-time engine has been started, AddService calls the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method implemented by that service.</source>
          <target state="translated">파생 된 비핵심 서비스를 추가 하는 경우는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;AddService 호출 하는 워크플로 런타임 엔진이 시작 된 후 클래스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;해당 서비스에서 구현 하는 메서드.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  AddService enforces the restriction that no two services of the same &lt;xref:System.Type&gt; can be added to the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; AddService 제한을 적용 하는 두 개의 서비스의 동일한 &lt;xref:System.Type&gt; &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 에 추가할 수 있습니다&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">그러나 동일한 기본 클래스에서 파생 되는 여러 서비스를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be only one service derived from each of the following service base classes in the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;: the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, and the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class.</source>
          <target state="translated">각각에 다음 서비스 기본 클래스에서 파생 된 서비스가 하나만 있을 수는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;:의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;클래스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;클래스 및 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;클래스&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; ,&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; throws an &lt;xref:System.InvalidOperationException&gt;.</source>
          <target state="translated">추가 하는 경우 여러 서비스에서 파생 된 예에서는 두 개의 지 속성 서비스에 대 한 이러한 클래스 중 하나 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; &lt;xref:System.InvalidOperationException&gt;.&lt;/xref:System.InvalidOperationException&gt; throw&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An object that represents the service to add.</source>
          <target state="translated">추가할 서비스를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph>워크플로 런타임 엔진에 이미 등록 되었습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>).</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph> 은 핵심 서비스와 워크플로 런타임 엔진은 이미 실행 되 고 (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*&gt;</ph> 은 <bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Creates a new workflow instance by using the specified workflow &lt;xref:System.Type&gt;.</source>
          <target state="translated">지정된 된 워크플로 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 를 사용 하 여 새 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the workflow to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;워크플로 만드는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Creates a workflow instance by using the specified &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">지정 된 &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 를 사용 하 여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">워크플로 인스턴스가 &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt; 에서 참조 하는 XAML 워크플로 정의 파일에서 만들어집니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; that contains the workflow definition.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;워크플로 정의 포함 하는.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowDefinitionReader&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowDefinitionReader&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Creates a workflow instance by using the specified workflow &lt;xref:System.Type&gt; and the arguments to the workflow contained in the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">지정된 된 워크플로 사용 하 여 워크플로 인스턴스를 만듭니다 &lt;xref:System.Type&gt;변수와 인수에 지정 된 포함 된 워크플로를 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph>.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the workflow to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;워크플로 만드는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">지정된 된 매개 변수를 사용 하 여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; must be unique.</source>
          <target state="translated">워크플로 <ph id="ph1">`instanceId`</ph> 에 대 한 실행에 의해 로드 된 워크플로 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;고유 해야 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">전달 하는 경우는 <ph id="ph1">`instanceId`</ph> 만들고 워크플로 실행 중인 워크플로를 이미 사용 중 이며 <ph id="ph2">`instanceId`</ph>, &lt;xref:System.InvalidOperationException&gt;throw 됩니다.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the workflow to create.</source>
          <target state="translated">&lt;xref:System.Type&gt;워크플로 만드는.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the specific <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to create.</source>
          <target state="translated">&lt;xref:System.Guid&gt;는 특정 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 만들려는.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Creates a workflow instance by using the specified &lt;xref:System.Xml.XmlReader&gt; objects and the arguments contained in the specified <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph>.</source>
          <target state="translated">지정 된를 사용 하 여 워크플로 인스턴스를 만듭니다 &lt;xref:System.Xml.XmlReader&gt;개체 및 지정 된 포함 된 인수 <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph>.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance is created from the workflow definition referenced by the &lt;xref:System.Xml.XmlReader&gt; and the arguments supplied by <ph id="ph1">`namedArgumentValues`</ph>.</source>
          <target state="translated">참조 하는 워크플로 정의에서 워크플로 인스턴스를 만들지는 &lt;xref:System.Xml.XmlReader&gt;및 제공한 인수 <ph id="ph1">`namedArgumentValues`</ph>.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 <bpt id="p1">[</bpt>규칙 샘플 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; that contains the workflow definition.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;워크플로 정의 포함 하는.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">An &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowDefinitionReader&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowDefinitionReader&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">지정된 된 매개 변수를 사용 하 여 워크플로 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; is created, validation is executed on it.</source>
          <target state="translated">전에 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;가 생성 되어 유효성 검사가 실행 됩니다&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt;</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any validation errors occur, the &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt; is thrown.</source>
          <target state="translated">유효성 검사 오류가 발생 한 경우는 &lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;throw 됩니다.&lt;/xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">이 간단한 시나리오에 적합 하지만 서버 환경에서 모든 활성화에 대 한 워크플로 유효성을 다시 검사 수 불필요 한 오버 헤드입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> disabling validation, see &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>유효성 검사를 해제, 참조 &lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;.&lt;/xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; must be unique.</source>
          <target state="translated">워크플로 <ph id="ph1">`instanceId`</ph> 에 대 한 실행에 의해 로드 된 워크플로 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;고유 해야 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an &lt;xref:System.InvalidOperationException&gt; is thrown.</source>
          <target state="translated">전달 하는 경우는 <ph id="ph1">`instanceId`</ph> 만들고 워크플로 실행 중인 워크플로를 이미 사용 중 이며 <ph id="ph2">`instanceId`</ph>, &lt;xref:System.InvalidOperationException&gt;throw 됩니다.&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">매개 변수를 전달에 대 한 예제 <ph id="ph1">`CreateWorkflow`</ph>, 참조 <bpt id="p1">[</bpt>Workflow with Parameters 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">XML에 정의 된 규칙을 사용 하 여 예제를 보려면 <bpt id="p1">[</bpt>규칙 샘플 IfElse<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt; that contains the workflow definition.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;워크플로 정의 포함 하는.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.XmlReader&gt;.</source>
          <target state="translated">An &lt;xref:System.Xml.XmlReader&gt;.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">A <ph id="ph1">&amp;lt;</ph>xref:System.Collections.Generic.Dictionary%602<ph id="ph2">&amp;gt;</ph> 워크플로에 인수를 나타내는 문자열로 키가 지정 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of the specific <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> to create.</source>
          <target state="translated">&lt;xref:System.Guid&gt;는 특정 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 만들려는.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The created workflow instance.</source>
          <target state="translated">만들어진된 워크플로 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;workflowType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">사용 하는 리소스를 해제는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>To shut down the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; gracefully, you should only call Dispose after you have called &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;Dispose &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; 호출한 후에 호출 해야 정상적으로,&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 종료 하려면</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because calling the Dispose method alone leaves the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; in an unusable state.</source>
          <target state="translated">단독 leaves Dispose 메서드를 호출 하기 때문에 이것이 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;불안정 한 상태가.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dispose frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; does.</source>
          <target state="translated">Dispose 열려 있는 파일 핸들, 데이터베이스 연결 및 등을 닫아 런타임이 사용 하는 리소스를 해제 하거나 하지 않는 워크플로 인스턴스 언로드, 서비스를 중지 하는 다른 작업 중 하나를 수행 하지만 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;않습니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dispose should be called only when the host application must free the resources used by the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; before they are automatically freed by the garbage collector.</source>
          <target state="translated">호스트 응용 프로그램에서 사용 하는 리소스를 해제 해야 하는 경우에 dispose를 호출 해야는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;전에 가비지 수집기에 의해 자동으로 해제 됩니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For general information about Dispose, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>.</source>
          <target state="translated">Dispose에 대 한 일반 정보를 참조 하십시오. <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/add/includes/ajax-current-ext-md.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/add/includes/ajax-current-ext-md.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">모든 서비스를 검색 워크플로 런타임 엔진에 추가 된 구현에 지정 된 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 에서 파생 되는</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; indicates that no services that implement or derive from the specified &lt;xref:System.Type&gt; have been added to the workflow run-time engine.</source>
          <target state="translated">빈 &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;나타냅니다 서비스가 하는 구현에서 지정 된 파생 &lt;xref:System.Type&gt;워크플로 런타임 엔진에 추가 되었습니다.&lt;/xref:System.Type&gt; &lt;/xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; that services must implement to be returned.</source>
          <target state="translated">&lt;xref:System.Type&gt;반환 될 서비스를 구현 해야 합니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Services that implement or derive from the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">구현 하거나 지정 된 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 에서 파생 되는 서비스</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">현재 메모리에 로드 된 모든 워크플로 인스턴스를 포함 하는 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that, unlike &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;, this method does not throw a &lt;xref:System.InvalidOperationException&gt; if the runtime is not started.</source>
          <target state="translated">이때 달리 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;,이 메서드를 throw 하지 않습니다는 &lt;xref:System.InvalidOperationException&gt;런타임이 시작 되지 않은 경우.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">A <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 각 워크플로 인스턴스에 대 한 현재 메모리에 로드 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Retrieves a service of the specified &lt;xref:System.Type&gt; from the workflow run-time engine.</source>
          <target state="translated">지정 된 서비스를 검색 &lt;xref:System.Type&gt;워크플로 런타임 엔진에서.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>GetService throws an &lt;xref:System.InvalidOperationException&gt; if more than one service exists for the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">GetService throw &lt;xref:System.InvalidOperationException&gt; &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 지정된에 대 한 서비스가 여러 개 있는 경우&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should use one of the overloaded methods of &lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt; if it is possible that multiple services of the specified type are present in the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;지정한 형식의 서비스가 여러 개 있을 수 있는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 경우&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt; 의 오버 로드 된 메서드 중 하나를 사용 해야 따라서</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">예를 들어 워크플로 런타임 엔진에는 여러 개의 추적 서비스가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you request a tracking service by specifying the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; base class, it is possible that an exception will be thrown.</source>
          <target state="translated">지정 하 여 추적 서비스를 요청 하는 경우는 &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;은 예외가 throw 될 수는 기본 클래스입니다.&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Type&gt; of the service to retrieve.</source>
          <target state="translated">&lt;xref:System.Type&gt;검색할 서비스의.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The service of the specified &lt;xref:System.Type&gt;.</source>
          <target state="translated">지정 된 &lt;xref:System.Type&gt;.&lt;/xref:System.Type&gt; 서비스</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;serviceType&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is already disposed of.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 이미 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>More than one service of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">serviceType</ph><ept id="p1">&lt;/code&gt;</ept> was found.</source>
          <target state="translated">형식의 서비스가 여러 개 <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">serviceType</ph> <ept id="p1">&lt;/code&gt;</ept> 찾았습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Retrieves the workflow instance that has the specified &lt;xref:System.Guid&gt;.</source>
          <target state="translated">지정 된 &lt;xref:System.Guid&gt;.&lt;/xref:System.Guid&gt; 워크플로 인스턴스를 검색</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated">경우 <ph id="ph1">`instanceId`</ph> 현재 메모리에 없는 워크플로 인스턴스를 지정 합니다. 워크플로 인스턴스가 메모리에 로드 되 고 실행 되도록 예약 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, after a workflow instance is aborted, you can call GetWorkflow to load the workflow instance back into memory.</source>
          <target state="translated">예를 들어 워크플로 인스턴스가 중단 된 후 GetWorkflow 워크플로 인스턴스가 메모리에 로드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">이 경우에 워크플로 인스턴스의 마지막 유지 된 상태 지 속성 서비스에 의해 메모리에 로드 됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Guid&gt; of a workflow instance.</source>
          <target state="translated">&lt;xref:System.Guid&gt;워크플로 인스턴스의.&lt;/xref:System.Guid&gt;</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that has the specified &lt;xref:System.Guid&gt;.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowInstance"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 &lt;xref:System.Guid&gt;.&lt;/xref:System.Guid&gt; 포함</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The workflow runtime is not started.</source>
          <target state="translated">워크플로 런타임이 시작 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">워크플로 런타임 엔진이 시작 되었는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsStarted indicates that the workflow run-time engine services are running.</source>
          <target state="translated">IsStarted는 워크플로 런타임 엔진 서비스가 실행 되 고 있는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>IsStarted is <ph id="ph1">`false`</ph> until the host calls &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;.</source>
          <target state="translated">IsStarted은 <ph id="ph1">`false`</ph> &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; 호스트 호출할 때까지</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;.</source>
          <target state="translated">그대로 <ph id="ph1">`true`</ph> &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; 호스트 호출할 때까지</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt; <ph id="ph1">[!NOTE]</ph> &gt;  You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">&gt; <ph id="ph1">[!NOTE]</ph> &gt; 실행 되는 동안 워크플로 런타임 엔진에 핵심 서비스를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Core services are services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, and the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class.</source>
          <target state="translated">핵심 서비스는의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;클래스는 &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;클래스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;클래스 및 &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;클래스&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; 에서 파생 된 서비스</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the workflow run-time engine has been started; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>워크플로 런타임 엔진이 시작 된 경우에; 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The default is <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets or sets the name associated with the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">와 연결 된 이름을 가져오거나 설정 합니다.는 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set Name while the workflow run-time engine is running (&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되는 동안 이름을 설정할 수 없습니다 (&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; 은 <ph id="ph1">`true`</ph>).&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The name associated with this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">연결 된이 이름은 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An attempt to set Name on a <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> that is disposed occurs.</source>
          <target state="translated">이름을 설정 하려고 한 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 되는 발생 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>An attempt to set Name while the workflow run-time engine is running occurs.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되는 동안 이름을 설정 하려고 발생 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">워크플로 런타임 엔진에서 지정된 된 서비스를 제거합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot remove a core service while the workflow run-time engine is running (&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; is <ph id="ph1">`true`</ph>).</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되는 동안에 핵심 서비스를 제거할 수 없습니다 (&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; 은 <ph id="ph1">`true`</ph>).&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Core services are services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, or the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class.</source>
          <target state="translated">핵심 서비스는의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;클래스의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;클래스, 해당 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;클래스 또는 &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;클래스&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; 에서 파생 된 서비스</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`service`</ph> derives from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class, RemoveService calls the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method implemented by <ph id="ph2">`service`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`service`</ph> 에서 파생 되는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;RemoveService 호출 클래스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;메서드는 구현 <ph id="ph2">`service`</ph>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An object that represents the service to remove.</source>
          <target state="translated">제거할 서비스를 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph> is a null reference (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;service&lt;/code&gt;</ph>가 null 참조 (<bpt id="p1">&lt;xref uid="langword_csharp_Nothing" name="Nothing" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is already disposed of.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 이미 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Occurs when a service that is derived from the <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*&gt;.</source>
          <target state="translated">파생 된 서비스는 발생 된 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.Hosting.WorkflowRuntimeService"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 호출 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*&gt;.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*&gt; 클래스</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>A service that is derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class can call the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt; method to inform subscribers to the ServicesExceptionNotHandled event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated">파생 된 서비스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스를 호출할 수는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;메서드를 처리할 수 없었던 예외가 실행 중에 발생 하는 ServicesExceptionNotHandled 이벤트에 대 한 구독자에 게 알립니다.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">복구 메커니즘을 구현 하려면이 이벤트를 구독할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">이 이벤트는 워크플로 런타임 엔진에 의해 워크플로 인스턴스가 아직 생성 되지 않은 예외가 발생할 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">이 시나리오에서 호스트 응용 프로그램에 예외가 발생 했다고 알리는 유일한 방법은이 이벤트를 발생 시키는 것입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">그러나 워크플로 런타임 엔진은 호출 하지 않습니다이 직접.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">대신, 워크플로 런타임 엔진이 워크플로 인스턴스를 예외 배달 설정 하거나 없는 인스턴스가 있는 경우이 이벤트를 발생 시킨 서비스에이 경우에 호출자에 게 다시 throw 있습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt; method.</source>
          <target state="translated">고유한 지 속성 또는 스케줄러 서비스를 만드는 경우를 구현 해야이 이벤트 직접 기본 통해 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;메서드.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the ServicesExceptionNotHandled event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Guid&gt; of the workflow instance that was using the service and the &lt;xref:System.Exception&gt; that could not be handled.</source>
          <target state="translated">보낸 사람에 게 ServicesExceptionNotHandled 이벤트에 대 한 포함는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Guid&gt;서비스를 사용 하는 워크플로 인스턴스 및 &lt;xref:System.Exception&gt;있는 처리할 수 없습니다.&lt;/xref:System.Exception&gt; &lt;/xref:System.Guid&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">워크플로 런타임 엔진이 시작 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt; method raises the Started event after it has validated the core service configuration of the workflow run-time engine, has invoked the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; method implemented by each of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class, and has set &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;메서드 시작 됨 이벤트를 발생 후 워크플로 런타임 엔진의 핵심 서비스 구성 유효성을 검사 한,이 호출는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;각에서 파생 되는 서비스에 의해 구현 되는 메서드는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스을 설정한 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;를 <ph id="ph1">`true`</ph>.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about the order in which the services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">순서는 보장 되지 않습니다에서 파생 되는 서비스는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스는 워크플로 런타임 엔진에 의해 시작 되 고 이러한 워크플로 런타임 엔진 서비스 중 일부는 다른 있어야만 시작 작업을 완료 하려면 이러한 서비스를 제공 하는 기능에 종속 될 수 있습니다.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Workflow run-time engine services can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt; method to perform any final startup tasks that require the support of other workflow run-time engine services when the Started event is raised.</source>
          <target state="translated">워크플로 런타임 엔진 서비스를 재정의할 수는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt;메서드 시작 이벤트가 발생할 때 다른 워크플로 런타임 엔진 서비스의 지원이 필요한 최종 시작 작업을 수행 하도록 합니다.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">워크플로 런타임 엔진과 워크플로 런타임 엔진 서비스를 시작합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class.</source>
          <target state="translated">이 메서드는 올바른 핵심 서비스 집합이 있고 다음 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; 에서 파생 되는 모든 서비스 시작 확인</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; base class and a scheduler service derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; base class.</source>
          <target state="translated">하나 및 각 핵심 서비스를 다음 중에서 하나만 있어야: 워크플로 <ph id="ph1">`CommitWorkBatch`</ph> 는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;기본 클래스 및 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;기본 클래스&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; 에서 파생 된 스케줄러 서비스에서&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; 파생 된 서비스</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt; for the workflow <ph id="ph1">`CommitWorkBatch`</ph> service and &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt; for the scheduler service.</source>
          <target state="translated">이러한 주요 서비스 중 하나 또는 모두 누락 되 면 워크플로 런타임 엔진은 적절 한 기본 서비스를 제공 하는: &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;워크플로에 대 한 <ph id="ph1">`CommitWorkBatch`</ph> 서비스 및 &lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;스케줄러 서비스에 대 한.&lt;/xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">지 속성 서비스는 선택 사항 이지만 하나의 지 속성 서비스만 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it has validated the service configuration, StartRuntime calls &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; on all of the services that are derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class.</source>
          <target state="translated">서비스 구성 유효성을 검사 한, StartRuntime &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;모든 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; 에서 파생 되는 서비스에서&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt; 호출</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, the workflow run-time engine sets &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; and raises the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; event.</source>
          <target state="translated">워크플로 런타임 엔진에서 설정 마지막으로, &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;가능성이 높아지고는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;이벤트.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">추가 하거나 워크플로 런타임 엔진이 시작 된 후에 핵심 서비스를 제거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Core services are services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; class, the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; class, or the &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt; class.</source>
          <target state="translated">핵심 서비스는의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;클래스의 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;클래스, 해당 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;클래스 또는 &lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;클래스&lt;/xref:System.Workflow.Runtime.Tracking.TrackingService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt; 에서 파생 된 서비스</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call StartRuntime while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">워크플로 런타임 엔진이 실행 되는 동안 StartRuntime를 호출 하면 아무 작업도 수행 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is disposed.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>There is more than one service workflow <bpt id="p1">&lt;xref uid="langword_csharp_CommitWorkBatch" name="CommitWorkBatch" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> service registered with this <bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">둘 이상의 서비스 워크플로 <bpt id="p1">&lt;xref uid="langword_csharp_CommitWorkBatch" name="CommitWorkBatch" href=""&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 서비스에 등록 된이 <bpt id="p2">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-       There is more than one scheduler service registered with this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-등록 된이 둘 이상의 스케줄러 서비스가 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-or-       There is more than one persistence service registered with this <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">-또는-등록 된이 둘 이상의 지 속성 서비스가 <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">워크플로 런타임 엔진이 중지 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt; method raises the Stopped event after it has invoked the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; method implemented by each of its services that derive from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;메서드에는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;각 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; 에서 파생 되는 서비스에서 구현 된 메서드&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt; 를 호출한 후 중지 이벤트를 발생 시킵니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">이러한 워크플로 런타임 엔진 서비스를 중지 하 고는 중지 될 때까지 다른 서비스에 의존 하는 일부 기능을 보존 해야 할 수는 이러한 서비스 중 일부를 순서에 대 한 보장이 없습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such services can override the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName&gt; method to perform any residual shutdown logic when the Stopped event is raised.</source>
          <target state="translated">이러한 서비스를 재정의할 수는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName&gt;Stopped 이벤트가 발생할 때 나머지 종료 논리를 수행 하는 메서드.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">워크플로 런타임 엔진과 런타임 서비스를 중지합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt; class, set &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; to <ph id="ph1">`false`</ph>, and raise the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt; event.</source>
          <target state="translated">이 메서드를 사용 하면 워크플로 런타임 엔진 각 해당 워크플로 인스턴스 언로드, 모든에서 파생 된 서비스를 중지 하는 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;클래스, 설정 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;를 <ph id="ph1">`false`</ph>, 시키고는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;이벤트.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>To shut down the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; gracefully, call StopRuntime before you call &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;정상적으로, StopRuntime &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt; 를 호출 하기 전에 호출&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; 을 종료 하려면</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph> the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt; method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]</ph>&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;메서드.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> is already disposed of.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Workflow.Runtime.WorkflowRuntime"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 이미 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">워크플로 인스턴스가 중단 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>WorkflowAborted occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated">WorkflowAborted 발생 모든 보류 중인 작업에 대 한 워크플로 인스턴스가 선택을 취소 하면 인스턴스가 메모리에서 무효화 되기 전에 워크플로 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can abort a workflow instance by calling &lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName&gt; 를 호출 하 여 워크플로 인스턴스를 중단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">이 이벤트에 대 한 보낸 사람에 게 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">워크플로 인스턴스가 완료 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>WorkflowCompleted is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated">WorkflowCompleted는 워크플로 인스턴스가 완료 되었지만 인스턴스가 메모리에서 무효화 되기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt; event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; and its output parameters.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;이벤트, 보낸 사람에 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;및 해당 출력 매개 변수.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">워크플로 인스턴스가 만들어질 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the WorkflowCreated event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">워크플로 런타임 엔진은 워크플로 인스턴스가 완전히 생성 된 나 활동이 처리 되기 전에 WorkflowCreated 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">이 이벤트에 대 한 보낸 사람에 게 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">워크플로 인스턴스가 유휴 상태가 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the WorkflowIdled event when the workflow instance enters an idle state; for example, when the workflow is waiting for a &lt;xref:System.Workflow.Activities.DelayActivity&gt; activity to complete.</source>
          <target state="translated">워크플로 런타임 엔진에는 워크플로 인스턴스가 유휴 상태에 들어가면 WorkflowIdled 이벤트를 발생 시킵니다. 예를 들어 워크플로 기다리는 경우는 &lt;xref:System.Workflow.Activities.DelayActivity&gt;동작이 완료.&lt;/xref:System.Workflow.Activities.DelayActivity&gt;</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">이 이벤트에 대 한 보낸 사람에 게 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">워크플로 인스턴스가 메모리에 로드 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>WorkflowLoaded occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated">WorkflowLoaded 전에 워크플로 런타임 엔진은 활동을 실행 하기 시작 하지만 지 속성 서비스가 워크플로 인스턴스를 복원한 후에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the WorkflowLoaded event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">보낸 사람에 게 WorkflowLoaded 이벤트에 대 한 포함는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">워크플로 인스턴스 상태가 유지 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">워크플로 인스턴스는 여러 가지 이유로 유지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the host can call &lt;xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName&gt; on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">예를 들어 호스트 호출할 수 &lt;xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName&gt;워크플로 인스턴스나 워크플로 인스턴스가 유휴 상태가 되거나 원자성 범위가 완료 되어 런타임 엔진이 워크플로 인스턴스를 유지할 수 있습니다.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a persistence service is present in the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, WorkflowPersisted is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated">지 속성 서비스에 있는 경우는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;, 워크플로 인스턴스의 상태가 메모리에 저장 된 후 WorkflowPersisted 런타임에 의해 발생 합니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">지 속성 서비스가 없으면 이벤트는 발생 하지만 인스턴스 상태 저장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the WorkflowPersisted event occurs because the workflow instance is being unloaded, it is followed by a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt; event.</source>
          <target state="translated">워크플로 인스턴스가 언로드되고 있으므로 WorkflowPersisted 이벤트가 발생 하는 경우 뒤에 오지는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;이벤트.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the WorkflowPersisted event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">보낸 사람에 게 WorkflowPersisted 이벤트에 대 한 포함는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">워크플로 인스턴스 실행을 일시 중단 이후 재개 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the WorkflowResumed event just before the workflow instance is scheduled.</source>
          <target state="translated">워크플로 런타임 엔진이 워크플로 인스턴스 예약 된 직전 WorkflowResumed 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WorkflowResumed event is usually raised because of an explicit call to &lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">WorkflowResumed 일반적으로 이벤트는 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt;.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName&gt; 를 명시적으로 호출 때문에</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">그러나 워크플로 런타임 엔진 작업 수행 하기 위해, 예를 들어, 워크플로 변경 내용을 적용 하려면 인스턴스를 일시적으로 중단할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the WorkflowResumed event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">이 경우 WorkflowResumed 이벤트는 런타임 작업 워크플로 인스턴스 실행을 다시 시작 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the WorkflowResumed event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">보낸 사람에 게 WorkflowResumed 이벤트에 대 한 포함는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">워크플로 인스턴스가 시작 되 면 발생 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the WorkflowStarted event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">워크플로 런타임 엔진이 워크플로 인스턴스 실행에 대 한 루트 활동을 예약 하 여 시작 된 후 WorkflowStarted 이벤트를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">이 이벤트에 대 한 보낸 사람에 게 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">워크플로 인스턴스가 일시 중단 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow instance can be suspended by the host through a call to the &lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt; method, by a &lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt; activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">호출을 통해 호스트에서 워크플로 인스턴스를 일시 중단할 수는 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;메서드를 위한 것 이며는 &lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;활동 또는 워크플로 런타임 엔진에 의해 암시적으로.&lt;/xref:System.Workflow.ComponentModel.SuspendActivity&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">예를 들어 워크플로 런타임 엔진 인스턴스를 일시 동적 변경 내용을 인스턴스에 적용할 때.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the WorkflowSuspended event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; and a string that describes the reason the instance was suspended.</source>
          <target state="translated">WorkflowSuspended 이벤트에 대 한 보낸 사람에 게 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;인스턴스 이유를 설명 하는 문자열 일시 중단 되었습니다.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt;</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">워크플로 인스턴스가 종료 될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow can be terminated by the host through a call to the &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt; method, by a &lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt; activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">워크플로 호출 하 여 호스트에 의해 종료 될 수 있습니다는 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;메서드를 위한 것 이며는 &lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;활동 또는 처리 되지 않은 예외가 발생할 때 워크플로 런타임 엔진에 의해.&lt;/xref:System.Workflow.ComponentModel.TerminateActivity&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the WorkflowTerminated event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">워크플로 런타임 엔진은 워크플로 인스턴스가 종료 되 면 나 메모리에서 무효화 되기 전에 WorkflowTerminated 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt; event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; and information about the reason the instance was terminated in the &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;이벤트, 보낸 사람에 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;및에 인스턴스가 종료 된 이유에 대 한 정보는 &lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName&gt; &lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">워크플로 인스턴스가 메모리에서 언로드될 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>A workflow instance can be unloaded from memory by an explicit call to &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">워크플로 인스턴스를 명시적으로 호출 하 여 메모리에서 언로드할 수 &lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;, 자체의 의미 체계에 따라 워크플로 런타임 엔진에 의해 암시적으로 또는.&lt;/xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt; added for which &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt; is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">인스턴스가 유휴 상태가 되 고 런타임에 경우 워크플로 런타임 엔진에서 워크플로 인스턴스를 언로드합니다 하는 예를 들어 한 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;는 대 한 추가 &lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;은 <ph id="ph1">`true`</ph>.&lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt; &lt;/xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The workflow run-time engine raises the       WorkflowUnloaded event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated">워크플로 런타임 엔진이 워크플로 인스턴스 상태가 성공적으로 지속 나 인스턴스가 메모리에서 무효화 되기 전에 WorkflowUnloaded 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt; event precedes the WorkflowUnloaded event.</source>
          <target state="translated">따라서 한 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;이벤트 WorkflowUnloaded 이벤트 앞에 옵니다.&lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded&gt; event, the sender contains the &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt; and &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt; contains the &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt; associated with the event.</source>
          <target state="translated">에 대 한는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded&gt;이벤트, 보낸 사람에 포함 되어는 &lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;및 &lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;포함는 &lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;이벤트와 관련 된.&lt;/xref:System.Workflow.Runtime.WorkflowInstance&gt; &lt;/xref:System.Workflow.Runtime.WorkflowEventArgs&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime&gt; &lt;/xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded&gt;</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph> handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]</ph>이벤트를 처리 하는, 참조 <bpt id="p1">[</bpt>이벤트 사용<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>To be added.</source>
          <target state="translated">추가할 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>