<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-192e1fd" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c309ba25ae401589ce9fd292029aa6598d91b5e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset\System.IO.Pipes.PipeSecurity.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fulldocset</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44c9bab0f0cf03d23988df06f637a93a49fb4ef6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5992340166ff86e23c4f50dc858026d5199d32db</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the access control and audit security for a pipe.</source>
          <target state="translated">액세스 제어 나타냅니다 및 감사 보안을 파이프 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PipeSecurity class specifies the access rights for a pipe and how access attempts are audited.</source>
          <target state="translated">PipeSecurity 클래스에는 파이프 및 액세스 시도 감사 하는 방법에 대 한 액세스 권한을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class represents access and audit rights as a set of rules.</source>
          <target state="translated">이 클래스는 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each access rule is represented by a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object, while each audit rule is represented by a &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object.</source>
          <target state="translated">각 액세스 규칙으로 표시 됩니다는 &lt;xref:System.IO.Pipes.PipeAccessRule&gt;개체를 나타내는 각 감사 규칙이 동안는 &lt;xref:System.IO.Pipes.PipeAuditRule&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeAuditRule&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PipeSecurity class is an abstraction of the underlying Microsoft Windows file security system.</source>
          <target state="translated">PipeSecurity 클래스는 기본 Microsoft Windows 파일 보안 시스템 추상화 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</source>
          <target state="translated">이 시스템에서 각 파이프에 파이프에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사가 수행 되는 액세스 제어 시도 지정 하는 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Pipes.PipeAccessRule&gt; and &lt;xref:System.IO.Pipes.PipeAuditRule&gt; classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;및 &lt;xref:System.IO.Pipes.PipeAuditRule&gt;클래스 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화는.&lt;/xref:System.IO.Pipes.PipeAuditRule&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PipeSecurity class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</source>
          <target state="translated">대부분의 Dacl과 Sacl;의 세부 PipeSecurity 클래스가 숨깁니다. ACE 순서를 지정 하거나 null DACL 걱정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the PipeSecurity class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</source>
          <target state="translated">검색, 추가 또는 DACL 및 파이프의 SACL을 나타내는 액세스 규칙을 변경 하려면 PipeSecurity 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.</source>
          <target state="translated">를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.</source>
          <target state="translated">액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an empty &lt;xref:System.IO.Pipes.PipeSecurity&gt; object that is not based on an existing pipe.</source>
          <target state="translated">이 생성자는 빈 만듭니다 &lt;xref:System.IO.Pipes.PipeSecurity&gt;기존 파이프를 기반으로 하지 않는 개체입니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then populate the object with access control information and apply it to a pipe.</source>
          <target state="translated">다음 파이프에 적용할을 액세스 제어 정보를 사용 하 여 개체를 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add access or audit rules to the &lt;xref:System.IO.Pipes.PipeSecurity&gt; object using the &lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt; method.</source>
          <target state="translated">액세스 권한을 추가 하거나 감사 규칙 수는 &lt;xref:System.IO.Pipes.PipeSecurity&gt;를 사용 하 여 개체는 &lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt; &lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove access or audit rules using the &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method.</source>
          <target state="translated">액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수는 &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To persist new or changed access or audit rules to a pipe, use the &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt; method.</source>
          <target state="translated">를 새로 추가 되거나 변경에 대 한 액세스를 유지 하거나 감사 파이프에 대 한 규칙은 &lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve access or audit rules from an existing file, use the &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt; method.</source>
          <target state="translated">액세스 또는 검색 하려면 감사 기존 파일에서 규칙을 사용 하 여는 &lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;메서드.&lt;/xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of the securable object that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Type&gt;현재와 연결 된 보안 개체의 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type of the securable object that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재와 연결 된 보안 개체의 형식 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified values.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 값을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to create access control rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAccessRule&gt; class.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;클래스&lt;/xref:System.IO.Pipes.PipeAccessRule&gt; 의 생성자를 사용 하는 액세스 제어 규칙을 작성 하는 권장된 방법</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">액세스 규칙에 적용 되는 id입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It must be an object that can be cast as a <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">로 캐스팅 될 수 있는 개체 여야는 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">액세스 마스크는 개별 통합 자가 정의 하는 의미 익명 비트의 32 비트에 대 한 컬렉션</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise false.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 규칙은 부모 컨테이너;에서 상속 되는 경우 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 액세스 규칙의 상속 속성을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 상속 된 액세스 규칙의 자동 전파 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The propagation flags are ignored if <ph id="ph1">`inheritanceFlags`</ph> is set to <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">면 전파 플래그는 무시 됩니다 <ph id="ph1">`inheritanceFlags`</ph> 로 설정 된 <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Specifies the valid access control type.</source>
          <target state="translated">유효한 액세스 제어 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that this method creates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.AccessRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 메서드가 만드는 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph><ph id="ph2">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, 또는 <ph id="ph4">&lt;code&gt;type&lt;/code&gt;</ph> 잘못 된 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>is <bpt id="p1">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-       <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.</source>
          <target state="translated">-또는- <ph id="ph1">&lt;code&gt;accessMask&lt;/code&gt;</ph> 은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> nor of a type, such as <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>, that can be converted to type <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;code&gt;identityReference&lt;/code&gt;</ph>형식이 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 아니며와 같은 <bpt id="p2">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>, 변환할 수 있는 <bpt id="p3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; of the object that is associated with the access rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Type&gt;현재의 액세스 규칙과 연관 된 개체의 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The type of the object that is associated with the access rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재의 액세스 규칙과 연관 된 개체의 형식 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 액세스 규칙에는 액세스 제어 목록 DACL (임의)와 현재 연결 된 추가 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddAccessRule method adds a new rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.If an access control list (ACL) already exists for the specified rule, the AddAccessRule method will still add the rule, with one exception: a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value supersedes an object that is created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value.</source>
          <target state="translated">AddAccessRule 메서드 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체를 포함 하는 규칙의 목록에 새 규칙을 추가 합니다. AddAccessRule 메서드 예외적으로 규칙을 지정된 된 규칙에 대 한 액세스 제어 목록 (ACL)가 이미 있는 경우 추가 여전히 합니다:는 &lt;xref:System.IO.Pipes.PipeAccessRule&gt;를 사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값 대체를 사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값.&lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The access rule to add.</source>
          <target state="translated">액세스 규칙 추가입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adds an audit rule to the System Access Control List (SACL)that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 추가 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddAuditRule method adds a new audit rule to the list of rules that a &lt;xref:System.IO.Pipes.PipeSecurity&gt; object contains.</source>
          <target state="translated">메서드는 새 감사 규칙의 목록에 추가 AddAuditRule 규칙을 한 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체에 포함 되어 있습니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an audit rule already exists for the specified rule, the AddAuditRule method will still add the rule.</source>
          <target state="translated">감사 규칙에 이미 있으면 지정된 된 규칙에 대 한에 여전히 AddAuditRule 메서드는 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The audit rule to add.</source>
          <target state="translated">추가 된 감사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> class with the specified values.</source>
          <target state="translated">새 인스턴스를 초기화는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 지정된 된 값을 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to create audit rules is to use the constructors of the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; class.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;클래스&lt;/xref:System.IO.Pipes.PipeAuditRule&gt; 의 생성자를 사용 하는 감사 규칙을 만드는 권장된 방법을</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">액세스 규칙에 적용 되는 id입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It must be an object that can be cast as a <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">로 캐스팅 될 수 있는 개체 여야는 <bpt id="p1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The access mask of this rule.</source>
          <target state="translated">이 규칙의 액세스 마스크입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">액세스 마스크는 개별 통합 자가 정의 하는 의미 익명 비트의 32 비트에 대 한 컬렉션</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if this rule is inherited from a parent container; otherwise, false..</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>이 규칙은 부모 컨테이너;에서 상속 되는 경우 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 액세스 규칙의 상속 속성을 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 상속 된 액세스 규칙의 자동 전파 여부를 지정 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The propagation flags are ignored if <ph id="ph1">`inheritanceFlags`</ph> is set to <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>.</source>
          <target state="translated">면 전파 플래그는 무시 됩니다 <ph id="ph1">`inheritanceFlags`</ph> 로 설정 된 <bpt id="p1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> values that specifies the valid access control type.</source>
          <target state="translated">중 하나는 <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditFlags"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 유효한 액세스를 지정 하는 값 유형을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object that this method creates.</source>
          <target state="translated"><bpt id="p1">&lt;xref href="System.Security.AccessControl.AuditRule"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 이 메서드가 만드는 개체입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inheritanceFlags</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">propagationFlags</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">flags</ph><ept id="p4">&lt;/code&gt;</ept> properties specify an invalid value.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">inheritanceFlags</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">propagationFlags</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">flags</ph><ept id="p4">&lt;/code&gt;</ept> properties specify an invalid value.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-or-       The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">accessMask</ph><ept id="p1">&lt;/code&gt;</ept> property is zero.</source>
          <target state="translated">-또는- <bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">accessMask</ph> <ept id="p1">&lt;/code&gt;</ept> 속성은&amp;0;입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identityReference</ph><ept id="p1">&lt;/code&gt;</ept> property is neither of type <bpt id="p2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept> nor of a type, such as <bpt id="p3">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt><ept id="p3">&lt;/xref&gt;</ept>, that can be converted to type <bpt id="p4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt><ept id="p4">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt> <ph id="ph1">identityReference</ph> <ept id="p1">&lt;/code&gt;</ept> 속성은 형식이 <bpt id="p2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept> 아니며와 같은 <bpt id="p3">&lt;xref href="System.Security.Principal.NTAccount"&gt;</bpt> <ept id="p3">&lt;/xref&gt;</ept>, 변환할 수 있는 <bpt id="p4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;</bpt> <ept id="p4">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the &lt;xref:System.Type&gt; object associated with the audit rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">가져옵니다는 &lt;xref:System.Type&gt;현재의 감사 규칙과 연결 된 개체 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.&lt;/xref:System.Type&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the &lt;xref:System.Security.AccessControl.ObjectSecurity&gt; class override the &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; property and return the type they use to represent access rights.</source>
          <target state="translated">파생 된 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity&gt;재정의 클래스는 &lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다.&lt;/xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt; &lt;/xref:System.Security.AccessControl.ObjectSecurity&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션으로 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The type of the object that is associated with the audit rules of the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">현재의 감사 규칙과 연관 된 개체의 형식 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Saves the specified sections of the security descriptor that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to permanent storage.</source>
          <target state="translated">현재와 연결 된 보안 설명자의 지정된 된 섹션 저장 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 영구 저장소에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The handle of the securable object that the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is associated with.</source>
          <target state="translated">보안 개체의 핸들 개체를 현재 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Saves the specified sections of the security descriptor that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object to permanent storage.</source>
          <target state="translated">현재와 연결 된 보안 설명자의 지정된 된 섹션 저장 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 영구 저장소에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the securable object that the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object is associated with.</source>
          <target state="translated">보안 개체의 이름 개체를 현재 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체가 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">액세스 제어 목록 DACL (임의)와 현재 연결 된 액세스 규칙을 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAccessRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAccessRule 메서드 제거 일치 &lt;xref:System.Security.AccessControl.AccessControlType&gt;액세스 규칙 또는 일치 하는 모든 &lt;xref:System.Security.AccessControl.AccessControlType&gt;액세스 규칙에서 현재 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 &lt;xref:System.Security.AccessControl.AccessControlType&gt;전달 하 여 사용자에 대 한 액세스는 &lt;xref:System.IO.Pipes.PipeAccessRule&gt;사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값은 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값 및 사용자 계정.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAccessRule method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.</source>
          <target state="translated">RemoveAccessRule 메서드를 지정 하는 모든 거부 규칙을 제거는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값 또는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The access rule to remove.</source>
          <target state="translated">액세스 규칙을 제거 하는입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the operation is successful; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>작업에 성공 하면 그렇지 않으면 <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt> <ept id="p2">&lt;/xref&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">지정된 된 액세스 규칙에서 액세스 제어 목록 (DACL 임의) 연결 된 현재 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;메서드 제거 일치 &lt;xref:System.Security.AccessControl.AccessControlType&gt;액세스 규칙 또는 일치 하는 모든 &lt;xref:System.Security.AccessControl.AccessControlType&gt;액세스 규칙에서 현재 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; access rules for a user by passing a &lt;xref:System.IO.Pipes.PipeAccessRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 &lt;xref:System.Security.AccessControl.AccessControlType&gt;전달 하 여 사용자에 대 한 액세스는 &lt;xref:System.IO.Pipes.PipeAccessRule&gt;사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값은 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값 및 사용자 계정.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.IO.Pipes.PipeAccessRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The &lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt; method removes any deny rules that specify the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value or the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value.</source>
          <target state="translated">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;지정 하는 모든 거부 규칙을 제거 하는 메서드는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값 또는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The access rule to remove.</source>
          <target state="translated">액세스 규칙을 제거 하는입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Removes an audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAuditRule method removes either all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules or all matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAuditRule 메서드 제거 일치 &lt;xref:System.Security.AccessControl.AccessControlType&gt;감사 규칙 또는 일치 하는 모든 &lt;xref:System.Security.AccessControl.AccessControlType&gt;감사는 현재 규칙 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method to remove all &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rules for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.</source>
          <target state="translated">예를 들어 모든 제거 하려면이 방법을 사용할 수 있습니다 &lt;xref:System.Security.AccessControl.AccessControlType&gt;전달 하 여 사용자에 대 한 규칙을 감사는 &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값은 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값 및 사용자 계정.&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.FileSystemAuditRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you do this, the RemoveAuditRule method removes any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value or the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">RemoveAuditRule 메서드를 지정 하는 모든 거부 규칙 제거이 작업을 수행 하는 경우는 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값 또는 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값.&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">감사 규칙 제거입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> if the audit rule was removed; otherwise, <bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;xref uid="langword_csharp_true" name="true" href=""&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept>감사 규칙이 제거 되었으면; 그렇지 않은 경우<bpt id="p2">&lt;xref uid="langword_csharp_false" name="false" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">지정 된 감사 규칙에서 액세스 제어 목록 SACL (시스템)와 현재 연결 된 동일한 보안 식별자가 있는 모든 감사 규칙 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAuditRuleAll method removes all audit rules for the specified user.</source>
          <target state="translated">RemoveAuditRuleAll 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>It ignores all values in the &lt;xref:System.IO.Pipes.PipeAuditRule&gt; object except the user account.</source>
          <target state="translated">모든 값은 무시는 &lt;xref:System.IO.Pipes.PipeAuditRule&gt;개체에서 사용자 계정 제외한.&lt;/xref:System.IO.Pipes.PipeAuditRule&gt;</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">감사 규칙 제거입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">액세스 제어 목록 SACL (시스템)와 현재 연결 된 지정 된 감사 규칙이 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RemoveAuditRuleSpecific method removes the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule or the specified matching &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule from the current &lt;xref:System.IO.Pipes.PipeSecurity&gt; object.</source>
          <target state="translated">RemoveAuditRuleSpecific 메서드는 일치 하는 지정 된 제거 &lt;xref:System.Security.AccessControl.AccessControlType&gt;감사 규칙이 나 특정 &lt;xref:System.Security.AccessControl.AccessControlType&gt;현재에서 감사 규칙 &lt;xref:System.IO.Pipes.PipeSecurity&gt;개체입니다.&lt;/xref:System.IO.Pipes.PipeSecurity&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method to remove a specified &lt;xref:System.Security.AccessControl.AccessControlType&gt; audit rule for a user by passing a &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt; object created using the &lt;xref:System.Security.AccessControl.AccessControlType&gt; value, the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value, and a user account.</source>
          <target state="translated">지정 된 제거 하려면이 메서드를 사용할 수는 예를 들어 &lt;xref:System.Security.AccessControl.AccessControlType&gt;전달 하 여 사용자에 대 한 감사 규칙은 &lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;사용 하 여 만든 개체는 &lt;xref:System.Security.AccessControl.AccessControlType&gt;값은 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값 및 사용자 계정.&lt;/xref:System.Security.AccessControl.AuditFlags&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt; &lt;/xref:System.Security.AccessControl.FileSystemAuditRule&gt; &lt;/xref:System.Security.AccessControl.AccessControlType&gt;</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you do this, the RemoveAuditRuleSpecific method removes only a deny rule that specifies the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">이렇게 하면 RemoveAuditRuleSpecific도 제거는 거부 규칙을 지정 하는 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값.&lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not remove any deny rules that specify the &lt;xref:System.Security.AccessControl.AuditFlags&gt; value.</source>
          <target state="translated">지정 된 거부 규칙을 제거 하지 않습니다는 &lt;xref:System.Security.AccessControl.AuditFlags&gt;값.&lt;/xref:System.Security.AccessControl.AuditFlags&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The audit rule to remove.</source>
          <target state="translated">감사 규칙 제거입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object and then adds the specified access rule.</source>
          <target state="translated">에 액세스 제어 목록 DACL (임의)와 현재 연결 된 모든 액세스 규칙을 제거 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체를 다음 지정 된 액세스 규칙을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ResetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">ResetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 <ph id="ph1">`rule`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값과 ResetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the ResetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will also be overwritten.</source>
          <target state="translated">경우 ResetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙도 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The access rule to add.</source>
          <target state="translated">액세스 규칙 추가입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 액세스 제어 목록 DACL (임의)와 현재 연결 된 액세스 규칙을 설정 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetAccessRule method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">SetAccessRule 메서드를 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 하거나 일치 하는 동일한 모든 ACL 규칙을 덮어씁니다는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;의 값은 <ph id="ph1">`rule`</ph> 매개 변수.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값과 SetAccessRule 메서드 동일한 규칙을 찾으면 ACL을 지정 하는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SetAccessRule method finds an identical ACL rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.</source>
          <target state="translated">경우 SetAccessRule 찾으면 동일한 ACL 규칙을 지정 하는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙 하지 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The rule to set.</source>
          <target state="translated">설정 하려면 규칙입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Sets an audit rule in the System Access Control List (SACL) that is associated with the current <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt><ept id="p1">&lt;/xref&gt;</ept> object.</source>
          <target state="translated">에 액세스 제어 목록 SACL (시스템)와 현재 연결 된 감사 규칙을 설정 <bpt id="p1">&lt;xref href="System.IO.Pipes.PipeSecurity"&gt;</bpt> <ept id="p1">&lt;/xref&gt;</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The SetAuditRule method adds the specified audit rule or overwrites any identical audit rules that match the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value of the <ph id="ph1">`rule`</ph> parameter.</source>
          <target state="translated">SetAuditRule 메서드는 지정 된 감사 규칙을 추가 하거나 일치 하는 모든 동일한 감사 규칙을 덮어씁니다는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;의 값은 <ph id="ph1">`rule`</ph> 매개 변수.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value and the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will be overwritten.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">`rule`</ph> 매개 변수 지정는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;지정 하는 동일한 감사 규칙을 찾으면 값과 SetAuditRule 메서드는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt; &lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the SetAuditRule method finds an identical audit rule that specifies the &lt;xref:System.IO.Pipes.PipeAccessRights&gt; value, the identical rule will not be overwritten.</source>
          <target state="translated">SetAuditRule 메서드는 동일한 감사 규칙을 찾을 경우를 지정 하는 &lt;xref:System.IO.Pipes.PipeAccessRights&gt;값을 동일한 규칙 하지 덮어쓰게 됩니다.&lt;/xref:System.IO.Pipes.PipeAccessRights&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The rule to set.</source>
          <target state="translated">설정 하려면 규칙입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</source>
          <target state="translated">The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rule</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <bpt id="p2">&lt;xref uid="langword_csharp_null" name="null" href=""&gt;</bpt><ept id="p2">&lt;/xref&gt;</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>